<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.Textract</name>
    </assembly>
    <members>
        <member name="T:Amazon.Textract.AmazonTextractConfig">
            <summary>
            Configuration for accessing Amazon Textract service
            </summary>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.Textract.AmazonTextractConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.Textract.AmazonTextractConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.Textract.AmazonTextractConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.Textract.AmazonTextractException">
            <summary>
             Common exception for the Textract service.
             </summary>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonTextractException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonTextractException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonTextractException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonTextractException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonTextractException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the AmazonTextractException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.Textract.Internal.AmazonTextractMetadata">
            <summary>
            Service metadata for  Amazon Textract service
            </summary>
        </member>
        <member name="P:Amazon.Textract.Internal.AmazonTextractMetadata.ServiceId">
            <summary>
            Gets the value of the Service Id.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Internal.AmazonTextractMetadata.OperationNameMapping">
            <summary>
            Gets the dictionary that gives mapping of renamed operations
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.AccessDeniedException">
            <summary>
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </summary>
        </member>
        <member name="M:Amazon.Textract.Model.AccessDeniedException.#ctor(System.String)">
            <summary>
            Constructs a new AccessDeniedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Textract.Model.AccessDeniedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Textract.Model.AccessDeniedException.#ctor(System.Exception)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Textract.Model.AccessDeniedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Textract.Model.AccessDeniedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Textract.Model.AccessDeniedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the AccessDeniedException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Textract.Model.AccessDeniedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Textract.Model.AnalyzeDocumentRequest">
            <summary>
            Container for the parameters to the AnalyzeDocument operation.
            Analyzes an input document for relationships between detected items. 
            
             
            <para>
            The types of information returned are as follows: 
            </para>
             <ul> <li> 
            <para>
            Form data (key-value pairs). The related information is returned in two <a>Block</a>
            objects, each of type <code>KEY_VALUE_SET</code>: a KEY <code>Block</code> object
            and a VALUE <code>Block</code> object. For example, <i>Name: Ana Silva Carolina</i>
            contains a key and value. <i>Name:</i> is the key. <i>Ana Silva Carolina</i> is the
            value.
            </para>
             </li> <li> 
            <para>
            Table and table cell data. A TABLE <code>Block</code> object contains information
            about a detected table. A CELL <code>Block</code> object is returned for each cell
            in a table.
            </para>
             </li> <li> 
            <para>
            Lines and words of text. A LINE <code>Block</code> object contains one or more WORD
            <code>Block</code> objects. All lines and words that are detected in the document
            are returned (including text that doesn't have a relationship with the value of <code>FeatureTypes</code>).
            
            </para>
             </li> </ul> 
            <para>
            Selection elements such as check boxes and option buttons (radio buttons) can be detected
            in form data and in tables. A SELECTION_ELEMENT <code>Block</code> object contains
            information about a selection element, including the selection status.
            </para>
             
            <para>
            You can choose which type of analysis to perform by specifying the <code>FeatureTypes</code>
            list. 
            </para>
             
            <para>
            The output is returned in a list of <code>Block</code> objects.
            </para>
             
            <para>
             <code>AnalyzeDocument</code> is a synchronous operation. To analyze documents asynchronously,
            use <a>StartDocumentAnalysis</a>.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/textract/latest/dg/how-it-works-analyzing.html">Document
            Text Analysis</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.AnalyzeDocumentRequest.Document">
            <summary>
            Gets and sets the property Document. 
            <para>
            The input document as base64-encoded bytes or an Amazon S3 object. If you use the
            AWS CLI to call Amazon Textract operations, you can't pass image bytes. The document
            must be an image in JPEG or PNG format.
            </para>
             
            <para>
            If you're using an AWS SDK to call Amazon Textract, you might not need to base64-encode
            image bytes that are passed using the <code>Bytes</code> field. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.AnalyzeDocumentRequest.FeatureTypes">
            <summary>
            Gets and sets the property FeatureTypes. 
            <para>
            A list of the types of analysis to perform. Add TABLES to the list to return information
            about the tables that are detected in the input document. Add FORMS to return detected
            form data. To perform both types of analysis, add TABLES and FORMS to <code>FeatureTypes</code>.
            All lines and words detected in the document are included in the response (including
            text that isn't related to the value of <code>FeatureTypes</code>). 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.AnalyzeDocumentRequest.HumanLoopConfig">
            <summary>
            Gets and sets the property HumanLoopConfig. 
            <para>
            Sets the configuration for the human in the loop workflow for analyzing documents.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.AnalyzeDocumentResponse">
            <summary>
            This is the response object from the AnalyzeDocument operation.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.AnalyzeDocumentResponse.AnalyzeDocumentModelVersion">
            <summary>
            Gets and sets the property AnalyzeDocumentModelVersion. 
            <para>
            The version of the model used to analyze the document.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.AnalyzeDocumentResponse.Blocks">
            <summary>
            Gets and sets the property Blocks. 
            <para>
            The items that are detected and analyzed by <code>AnalyzeDocument</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.AnalyzeDocumentResponse.DocumentMetadata">
            <summary>
            Gets and sets the property DocumentMetadata. 
            <para>
            Metadata about the analyzed document. An example is the number of pages.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.AnalyzeDocumentResponse.HumanLoopActivationOutput">
            <summary>
            Gets and sets the property HumanLoopActivationOutput. 
            <para>
            Shows the results of the human in the loop evaluation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.AnalyzeExpenseRequest">
            <summary>
            Container for the parameters to the AnalyzeExpense operation.
            Analyzes an input document for financially related relationships between text.
            
             
            <para>
            Information is returned as <code>ExpenseDocuments</code> and seperated as follows.
            </para>
             <ul> <li> 
            <para>
             <code>LineItemGroups</code>- A data set containing <code>LineItems</code> which store
            information about the lines of text, such as an item purchased and its price on a
            receipt.
            </para>
             </li> <li> 
            <para>
             <code>SummaryFields</code>- Contains all other information a receipt, such as header
            information or the vendors name.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.AnalyzeExpenseRequest.Document">
            <summary>
            Gets and sets the property Document.
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.AnalyzeExpenseResponse">
            <summary>
            This is the response object from the AnalyzeExpense operation.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.AnalyzeExpenseResponse.DocumentMetadata">
            <summary>
            Gets and sets the property DocumentMetadata.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.AnalyzeExpenseResponse.ExpenseDocuments">
            <summary>
            Gets and sets the property ExpenseDocuments. 
            <para>
            The expenses detected by Amazon Textract.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.BadDocumentException">
            <summary>
            Amazon Textract isn't able to read the document. For more information on the document
            limits in Amazon Textract, see <a>limits</a>.
            </summary>
        </member>
        <member name="M:Amazon.Textract.Model.BadDocumentException.#ctor(System.String)">
            <summary>
            Constructs a new BadDocumentException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Textract.Model.BadDocumentException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of BadDocumentException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Textract.Model.BadDocumentException.#ctor(System.Exception)">
            <summary>
            Construct instance of BadDocumentException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Textract.Model.BadDocumentException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of BadDocumentException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Textract.Model.BadDocumentException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of BadDocumentException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Textract.Model.BadDocumentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the BadDocumentException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Textract.Model.BadDocumentException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Textract.Model.Block">
            <summary>
            A <code>Block</code> represents items that are recognized in a document within a group
            of pixels close to each other. The information returned in a <code>Block</code> object
            depends on the type of operation. In text detection for documents (for example <a>DetectDocumentText</a>),
            you get information about the detected words and lines of text. In text analysis (for
            example <a>AnalyzeDocument</a>), you can also get information about the fields, tables,
            and selection elements that are detected in the document.
            
             
            <para>
            An array of <code>Block</code> objects is returned by both synchronous and asynchronous
            operations. In synchronous operations, such as <a>DetectDocumentText</a>, the array
            of <code>Block</code> objects is the entire set of results. In asynchronous operations,
            such as <a>GetDocumentAnalysis</a>, the array is returned over one or more responses.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/textract/latest/dg/how-it-works.html">How
            Amazon Textract Works</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.Block.BlockType">
            <summary>
            Gets and sets the property BlockType. 
            <para>
            The type of text item that's recognized. In operations for text detection, the following
            types are returned:
            </para>
             <ul> <li> 
            <para>
             <i>PAGE</i> - Contains a list of the LINE <code>Block</code> objects that are detected
            on a document page.
            </para>
             </li> <li> 
            <para>
             <i>WORD</i> - A word detected on a document page. A word is one or more ISO basic
            Latin script characters that aren't separated by spaces.
            </para>
             </li> <li> 
            <para>
             <i>LINE</i> - A string of tab-delimited, contiguous words that are detected on a
            document page.
            </para>
             </li> </ul> 
            <para>
            In text analysis operations, the following types are returned:
            </para>
             <ul> <li> 
            <para>
             <i>PAGE</i> - Contains a list of child <code>Block</code> objects that are detected
            on a document page.
            </para>
             </li> <li> 
            <para>
             <i>KEY_VALUE_SET</i> - Stores the KEY and VALUE <code>Block</code> objects for linked
            text that's detected on a document page. Use the <code>EntityType</code> field to
            determine if a KEY_VALUE_SET object is a KEY <code>Block</code> object or a VALUE
            <code>Block</code> object. 
            </para>
             </li> <li> 
            <para>
             <i>WORD</i> - A word that's detected on a document page. A word is one or more ISO
            basic Latin script characters that aren't separated by spaces.
            </para>
             </li> <li> 
            <para>
             <i>LINE</i> - A string of tab-delimited, contiguous words that are detected on a
            document page.
            </para>
             </li> <li> 
            <para>
             <i>TABLE</i> - A table that's detected on a document page. A table is grid-based
            information with two or more rows or columns, with a cell span of one row and one
            column each. 
            </para>
             </li> <li> 
            <para>
             <i>CELL</i> - A cell within a detected table. The cell is the parent of the block
            that contains the text in the cell.
            </para>
             </li> <li> 
            <para>
             <i>SELECTION_ELEMENT</i> - A selection element such as an option button (radio button)
            or a check box that's detected on a document page. Use the value of <code>SelectionStatus</code>
            to determine the status of the selection element.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.Block.ColumnIndex">
            <summary>
            Gets and sets the property ColumnIndex. 
            <para>
            The column in which a table cell appears. The first column position is 1. <code>ColumnIndex</code>
            isn't returned by <code>DetectDocumentText</code> and <code>GetDocumentTextDetection</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.Block.ColumnSpan">
            <summary>
            Gets and sets the property ColumnSpan. 
            <para>
            The number of columns that a table cell spans. Currently this value is always 1, even
            if the number of columns spanned is greater than 1. <code>ColumnSpan</code> isn't
            returned by <code>DetectDocumentText</code> and <code>GetDocumentTextDetection</code>.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.Block.Confidence">
            <summary>
            Gets and sets the property Confidence. 
            <para>
            The confidence score that Amazon Textract has in the accuracy of the recognized text
            and the accuracy of the geometry points around the recognized text.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.Block.EntityTypes">
            <summary>
            Gets and sets the property EntityTypes. 
            <para>
            The type of entity. The following can be returned:
            </para>
             <ul> <li> 
            <para>
             <i>KEY</i> - An identifier for a field on the document.
            </para>
             </li> <li> 
            <para>
             <i>VALUE</i> - The field text.
            </para>
             </li> </ul> 
            <para>
             <code>EntityTypes</code> isn't returned by <code>DetectDocumentText</code> and <code>GetDocumentTextDetection</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.Block.Geometry">
            <summary>
            Gets and sets the property Geometry. 
            <para>
            The location of the recognized text on the image. It includes an axis-aligned, coarse
            bounding box that surrounds the text, and a finer-grain polygon for more accurate
            spatial information. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.Block.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            The identifier for the recognized text. The identifier is only unique for a single
            operation. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.Block.Page">
            <summary>
            Gets and sets the property Page. 
            <para>
            The page on which a block was detected. <code>Page</code> is returned by asynchronous
            operations. Page values greater than 1 are only returned for multipage documents that
            are in PDF format. A scanned image (JPEG/PNG), even if it contains multiple document
            pages, is considered to be a single-page document. The value of <code>Page</code>
            is always 1. Synchronous operations don't return <code>Page</code> because every input
            document is considered to be a single-page document.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.Block.Relationships">
            <summary>
            Gets and sets the property Relationships. 
            <para>
            A list of child blocks of the current block. For example, a LINE object has child
            blocks for each WORD block that's part of the line of text. There aren't Relationship
            objects in the list for relationships that don't exist, such as when the current block
            has no child blocks. The list size can be the following:
            </para>
             <ul> <li> 
            <para>
            0 - The block has no child blocks.
            </para>
             </li> <li> 
            <para>
            1 - The block has child blocks.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.Block.RowIndex">
            <summary>
            Gets and sets the property RowIndex. 
            <para>
            The row in which a table cell is located. The first row position is 1. <code>RowIndex</code>
            isn't returned by <code>DetectDocumentText</code> and <code>GetDocumentTextDetection</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.Block.RowSpan">
            <summary>
            Gets and sets the property RowSpan. 
            <para>
            The number of rows that a table cell spans. Currently this value is always 1, even
            if the number of rows spanned is greater than 1. <code>RowSpan</code> isn't returned
            by <code>DetectDocumentText</code> and <code>GetDocumentTextDetection</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.Block.SelectionStatus">
            <summary>
            Gets and sets the property SelectionStatus. 
            <para>
            The selection status of a selection element, such as an option button or check box.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.Block.Text">
            <summary>
            Gets and sets the property Text. 
            <para>
            The word or line of text that's recognized by Amazon Textract. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.Block.TextType">
            <summary>
            Gets and sets the property TextType. 
            <para>
            The kind of text that Amazon Textract has detected. Can check for handwritten text
            and printed text.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.BoundingBox">
            <summary>
            The bounding box around the detected page, text, key-value pair, table, table cell,
            or selection element on a document page. The <code>left</code> (x-coordinate) and
            <code>top</code> (y-coordinate) are coordinates that represent the top and left sides
            of the bounding box. Note that the upper-left corner of the image is the origin (0,0).
            
            
             
            <para>
            The <code>top</code> and <code>left</code> values returned are ratios of the overall
            document page size. For example, if the input image is 700 x 200 pixels, and the top-left
            coordinate of the bounding box is 350 x 50 pixels, the API returns a <code>left</code>
            value of 0.5 (350/700) and a <code>top</code> value of 0.25 (50/200).
            </para>
             
            <para>
            The <code>width</code> and <code>height</code> values represent the dimensions of
            the bounding box as a ratio of the overall document page dimension. For example, if
            the document page size is 700 x 200 pixels, and the bounding box width is 70 pixels,
            the width returned is 0.1. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.BoundingBox.Height">
            <summary>
            Gets and sets the property Height. 
            <para>
            The height of the bounding box as a ratio of the overall document page height.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.BoundingBox.Left">
            <summary>
            Gets and sets the property Left. 
            <para>
            The left coordinate of the bounding box as a ratio of overall document page width.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.BoundingBox.Top">
            <summary>
            Gets and sets the property Top. 
            <para>
            The top coordinate of the bounding box as a ratio of overall document page height.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.BoundingBox.Width">
            <summary>
            Gets and sets the property Width. 
            <para>
            The width of the bounding box as a ratio of the overall document page width.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.DetectDocumentTextRequest">
            <summary>
            Container for the parameters to the DetectDocumentText operation.
            Detects text in the input document. Amazon Textract can detect lines of text and the
            words that make up a line of text. The input document must be an image in JPEG or
            PNG format. <code>DetectDocumentText</code> returns the detected text in an array
            of <a>Block</a> objects. 
            
             
            <para>
            Each document page has as an associated <code>Block</code> of type PAGE. Each PAGE
            <code>Block</code> object is the parent of LINE <code>Block</code> objects that represent
            the lines of detected text on a page. A LINE <code>Block</code> object is a parent
            for each word that makes up the line. Words are represented by <code>Block</code>
            objects of type WORD.
            </para>
             
            <para>
             <code>DetectDocumentText</code> is a synchronous operation. To analyze documents
            asynchronously, use <a>StartDocumentTextDetection</a>.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/textract/latest/dg/how-it-works-detecting.html">Document
            Text Detection</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.DetectDocumentTextRequest.Document">
            <summary>
            Gets and sets the property Document. 
            <para>
            The input document as base64-encoded bytes or an Amazon S3 object. If you use the
            AWS CLI to call Amazon Textract operations, you can't pass image bytes. The document
            must be an image in JPEG or PNG format.
            </para>
             
            <para>
            If you're using an AWS SDK to call Amazon Textract, you might not need to base64-encode
            image bytes that are passed using the <code>Bytes</code> field. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.DetectDocumentTextResponse">
            <summary>
            This is the response object from the DetectDocumentText operation.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.DetectDocumentTextResponse.Blocks">
            <summary>
            Gets and sets the property Blocks. 
            <para>
            An array of <code>Block</code> objects that contain the text that's detected in the
            document.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.DetectDocumentTextResponse.DetectDocumentTextModelVersion">
            <summary>
            Gets and sets the property DetectDocumentTextModelVersion.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.DetectDocumentTextResponse.DocumentMetadata">
            <summary>
            Gets and sets the property DocumentMetadata. 
            <para>
            Metadata about the document. It contains the number of pages that are detected in
            the document.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.Document">
            <summary>
            The input document, either as bytes or as an S3 object.
            
             
            <para>
            You pass image bytes to an Amazon Textract API operation by using the <code>Bytes</code>
            property. For example, you would use the <code>Bytes</code> property to pass a document
            loaded from a local file system. Image bytes passed by using the <code>Bytes</code>
            property must be base64 encoded. Your code might not need to encode document file
            bytes if you're using an AWS SDK to call Amazon Textract API operations. 
            </para>
             
            <para>
            You pass images stored in an S3 bucket to an Amazon Textract API operation by using
            the <code>S3Object</code> property. Documents stored in an S3 bucket don't need to
            be base64 encoded.
            </para>
             
            <para>
            The AWS Region for the S3 bucket that contains the S3 object must match the AWS Region
            that you use for Amazon Textract operations.
            </para>
             
            <para>
            If you use the AWS CLI to call Amazon Textract operations, passing image bytes using
            the Bytes property isn't supported. You must first upload the document to an Amazon
            S3 bucket, and then call the operation using the S3Object property.
            </para>
             
            <para>
            For Amazon Textract to process an S3 object, the user must have permission to access
            the S3 object. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.Document.Bytes">
            <summary>
            Gets and sets the property Bytes. 
            <para>
            A blob of base64-encoded document bytes. The maximum size of a document that's provided
            in a blob of bytes is 5 MB. The document bytes must be in PNG or JPEG format.
            </para>
             
            <para>
            If you're using an AWS SDK to call Amazon Textract, you might not need to base64-encode
            image bytes passed using the <code>Bytes</code> field. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.Document.S3Object">
            <summary>
            Gets and sets the property S3Object. 
            <para>
            Identifies an S3 object as the document source. The maximum size of a document that's
            stored in an S3 bucket is 5 MB.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.DocumentLocation">
            <summary>
            The Amazon S3 bucket that contains the document to be processed. It's used by asynchronous
            operations such as <a>StartDocumentTextDetection</a>.
            
             
            <para>
            The input document can be an image file in JPEG or PNG format. It can also be a file
            in PDF format.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.DocumentLocation.S3Object">
            <summary>
            Gets and sets the property S3Object. 
            <para>
            The Amazon S3 bucket that contains the input document.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.DocumentMetadata">
            <summary>
            Information about the input document.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.DocumentMetadata.Pages">
            <summary>
            Gets and sets the property Pages. 
            <para>
            The number of pages that are detected in the document.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.DocumentTooLargeException">
            <summary>
            The document can't be processed because it's too large. The maximum document size
            for synchronous operations 10 MB. The maximum document size for asynchronous operations
            is 500 MB for PDF files.
            </summary>
        </member>
        <member name="M:Amazon.Textract.Model.DocumentTooLargeException.#ctor(System.String)">
            <summary>
            Constructs a new DocumentTooLargeException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Textract.Model.DocumentTooLargeException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of DocumentTooLargeException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Textract.Model.DocumentTooLargeException.#ctor(System.Exception)">
            <summary>
            Construct instance of DocumentTooLargeException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Textract.Model.DocumentTooLargeException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DocumentTooLargeException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Textract.Model.DocumentTooLargeException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DocumentTooLargeException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Textract.Model.DocumentTooLargeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the DocumentTooLargeException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Textract.Model.DocumentTooLargeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Textract.Model.ExpenseDetection">
            <summary>
            An object used to store information about the Value or Label detected by Amazon Textract.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.ExpenseDetection.Confidence">
            <summary>
            Gets and sets the property Confidence. 
            <para>
            The confidence in detection, as a percentage
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.ExpenseDetection.Geometry">
            <summary>
            Gets and sets the property Geometry.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.ExpenseDetection.Text">
            <summary>
            Gets and sets the property Text. 
            <para>
            The word or line of text recognized by Amazon Textract
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.ExpenseDocument">
            <summary>
            The structure holding all the information returned by AnalyzeExpense
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.ExpenseDocument.ExpenseIndex">
            <summary>
            Gets and sets the property ExpenseIndex. 
            <para>
            Denotes which invoice or receipt in the document the information is coming from. First
            document will be 1, the second 2, and so on.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.ExpenseDocument.LineItemGroups">
            <summary>
            Gets and sets the property LineItemGroups. 
            <para>
            Information detected on each table of a document, seperated into <code>LineItems</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.ExpenseDocument.SummaryFields">
            <summary>
            Gets and sets the property SummaryFields. 
            <para>
            Any information found outside of a table by Amazon Textract.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.ExpenseField">
            <summary>
            Breakdown of detected information, seperated into the catagories Type, LableDetection,
            and ValueDetection
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.ExpenseField.LabelDetection">
            <summary>
            Gets and sets the property LabelDetection. 
            <para>
            The explicitly stated label of a detected element.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.ExpenseField.PageNumber">
            <summary>
            Gets and sets the property PageNumber. 
            <para>
            The page number the value was detected on.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.ExpenseField.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The implied label of a detected element. Present alongside LabelDetection for explicit
            elements.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.ExpenseField.ValueDetection">
            <summary>
            Gets and sets the property ValueDetection. 
            <para>
            The value of a detected element. Present in explicit and implicit elements.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.ExpenseType">
            <summary>
            An object used to store information about the Type detected by Amazon Textract.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.ExpenseType.Confidence">
            <summary>
            Gets and sets the property Confidence. 
            <para>
            The confidence of accuracy, as a percentage.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.ExpenseType.Text">
            <summary>
            Gets and sets the property Text. 
            <para>
            The word or line of text detected by Amazon Textract.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.Geometry">
            <summary>
            Information about where the following items are located on a document page: detected
            page, text, key-value pairs, tables, table cells, and selection elements.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.Geometry.BoundingBox">
            <summary>
            Gets and sets the property BoundingBox. 
            <para>
            An axis-aligned coarse representation of the location of the recognized item on the
            document page.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.Geometry.Polygon">
            <summary>
            Gets and sets the property Polygon. 
            <para>
            Within the bounding box, a fine-grained polygon around the recognized item.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.GetDocumentAnalysisRequest">
            <summary>
            Container for the parameters to the GetDocumentAnalysis operation.
            Gets the results for an Amazon Textract asynchronous operation that analyzes text
            in a document.
            
             
            <para>
            You start asynchronous text analysis by calling <a>StartDocumentAnalysis</a>, which
            returns a job identifier (<code>JobId</code>). When the text analysis operation finishes,
            Amazon Textract publishes a completion status to the Amazon Simple Notification Service
            (Amazon SNS) topic that's registered in the initial call to <code>StartDocumentAnalysis</code>.
            To get the results of the text-detection operation, first check that the status value
            published to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <code>GetDocumentAnalysis</code>,
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartDocumentAnalysis</code>.
            </para>
             
            <para>
             <code>GetDocumentAnalysis</code> returns an array of <a>Block</a> objects. The following
            types of information are returned: 
            </para>
             <ul> <li> 
            <para>
            Form data (key-value pairs). The related information is returned in two <a>Block</a>
            objects, each of type <code>KEY_VALUE_SET</code>: a KEY <code>Block</code> object
            and a VALUE <code>Block</code> object. For example, <i>Name: Ana Silva Carolina</i>
            contains a key and value. <i>Name:</i> is the key. <i>Ana Silva Carolina</i> is the
            value.
            </para>
             </li> <li> 
            <para>
            Table and table cell data. A TABLE <code>Block</code> object contains information
            about a detected table. A CELL <code>Block</code> object is returned for each cell
            in a table.
            </para>
             </li> <li> 
            <para>
            Lines and words of text. A LINE <code>Block</code> object contains one or more WORD
            <code>Block</code> objects. All lines and words that are detected in the document
            are returned (including text that doesn't have a relationship with the value of the
            <code>StartDocumentAnalysis</code> <code>FeatureTypes</code> input parameter). 
            </para>
             </li> </ul> 
            <para>
            Selection elements such as check boxes and option buttons (radio buttons) can be detected
            in form data and in tables. A SELECTION_ELEMENT <code>Block</code> object contains
            information about a selection element, including the selection status.
            </para>
             
            <para>
            Use the <code>MaxResults</code> parameter to limit the number of blocks that are returned.
            If there are more results than specified in <code>MaxResults</code>, the value of
            <code>NextToken</code> in the operation response contains a pagination token for getting
            the next set of results. To get the next page of results, call <code>GetDocumentAnalysis</code>,
            and populate the <code>NextToken</code> request parameter with the token value that's
            returned from the previous call to <code>GetDocumentAnalysis</code>.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/textract/latest/dg/how-it-works-analyzing.html">Document
            Text Analysis</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetDocumentAnalysisRequest.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            A unique identifier for the text-detection job. The <code>JobId</code> is returned
            from <code>StartDocumentAnalysis</code>. A <code>JobId</code> value is only valid
            for 7 days.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetDocumentAnalysisRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to return per paginated call. The largest value that
            you can specify is 1,000. If you specify a value greater than 1,000, a maximum of
            1,000 results is returned. The default value is 1,000.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetDocumentAnalysisRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the previous response was incomplete (because there are more blocks to retrieve),
            Amazon Textract returns a pagination token in the response. You can use this pagination
            token to retrieve the next set of blocks.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.GetDocumentAnalysisResponse">
            <summary>
            This is the response object from the GetDocumentAnalysis operation.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetDocumentAnalysisResponse.AnalyzeDocumentModelVersion">
            <summary>
            Gets and sets the property AnalyzeDocumentModelVersion.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetDocumentAnalysisResponse.Blocks">
            <summary>
            Gets and sets the property Blocks. 
            <para>
            The results of the text-analysis operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetDocumentAnalysisResponse.DocumentMetadata">
            <summary>
            Gets and sets the property DocumentMetadata. 
            <para>
            Information about a document that Amazon Textract processed. <code>DocumentMetadata</code>
            is returned in every page of paginated responses from an Amazon Textract video operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetDocumentAnalysisResponse.JobStatus">
            <summary>
            Gets and sets the property JobStatus. 
            <para>
            The current status of the text detection job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetDocumentAnalysisResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the response is truncated, Amazon Textract returns this token. You can use this
            token in the subsequent request to retrieve the next set of text detection results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetDocumentAnalysisResponse.StatusMessage">
            <summary>
            Gets and sets the property StatusMessage. 
            <para>
            Returns if the detection job could not be completed. Contains explanation for what
            error occured.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetDocumentAnalysisResponse.Warnings">
            <summary>
            Gets and sets the property Warnings. 
            <para>
            A list of warnings that occurred during the document-analysis operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.GetDocumentTextDetectionRequest">
            <summary>
            Container for the parameters to the GetDocumentTextDetection operation.
            Gets the results for an Amazon Textract asynchronous operation that detects text in
            a document. Amazon Textract can detect lines of text and the words that make up a
            line of text.
            
             
            <para>
            You start asynchronous text detection by calling <a>StartDocumentTextDetection</a>,
            which returns a job identifier (<code>JobId</code>). When the text detection operation
            finishes, Amazon Textract publishes a completion status to the Amazon Simple Notification
            Service (Amazon SNS) topic that's registered in the initial call to <code>StartDocumentTextDetection</code>.
            To get the results of the text-detection operation, first check that the status value
            published to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <code>GetDocumentTextDetection</code>,
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartDocumentTextDetection</code>.
            </para>
             
            <para>
             <code>GetDocumentTextDetection</code> returns an array of <a>Block</a> objects. 
            </para>
             
            <para>
            Each document page has as an associated <code>Block</code> of type PAGE. Each PAGE
            <code>Block</code> object is the parent of LINE <code>Block</code> objects that represent
            the lines of detected text on a page. A LINE <code>Block</code> object is a parent
            for each word that makes up the line. Words are represented by <code>Block</code>
            objects of type WORD.
            </para>
             
            <para>
            Use the MaxResults parameter to limit the number of blocks that are returned. If there
            are more results than specified in <code>MaxResults</code>, the value of <code>NextToken</code>
            in the operation response contains a pagination token for getting the next set of
            results. To get the next page of results, call <code>GetDocumentTextDetection</code>,
            and populate the <code>NextToken</code> request parameter with the token value that's
            returned from the previous call to <code>GetDocumentTextDetection</code>.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/textract/latest/dg/how-it-works-detecting.html">Document
            Text Detection</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetDocumentTextDetectionRequest.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            A unique identifier for the text detection job. The <code>JobId</code> is returned
            from <code>StartDocumentTextDetection</code>. A <code>JobId</code> value is only valid
            for 7 days.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetDocumentTextDetectionRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to return per paginated call. The largest value you
            can specify is 1,000. If you specify a value greater than 1,000, a maximum of 1,000
            results is returned. The default value is 1,000.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetDocumentTextDetectionRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the previous response was incomplete (because there are more blocks to retrieve),
            Amazon Textract returns a pagination token in the response. You can use this pagination
            token to retrieve the next set of blocks.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.GetDocumentTextDetectionResponse">
            <summary>
            This is the response object from the GetDocumentTextDetection operation.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetDocumentTextDetectionResponse.Blocks">
            <summary>
            Gets and sets the property Blocks. 
            <para>
            The results of the text-detection operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetDocumentTextDetectionResponse.DetectDocumentTextModelVersion">
            <summary>
            Gets and sets the property DetectDocumentTextModelVersion.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetDocumentTextDetectionResponse.DocumentMetadata">
            <summary>
            Gets and sets the property DocumentMetadata. 
            <para>
            Information about a document that Amazon Textract processed. <code>DocumentMetadata</code>
            is returned in every page of paginated responses from an Amazon Textract video operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetDocumentTextDetectionResponse.JobStatus">
            <summary>
            Gets and sets the property JobStatus. 
            <para>
            The current status of the text detection job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetDocumentTextDetectionResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the response is truncated, Amazon Textract returns this token. You can use this
            token in the subsequent request to retrieve the next set of text-detection results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetDocumentTextDetectionResponse.StatusMessage">
            <summary>
            Gets and sets the property StatusMessage. 
            <para>
            Returns if the detection job could not be completed. Contains explanation for what
            error occured. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.GetDocumentTextDetectionResponse.Warnings">
            <summary>
            Gets and sets the property Warnings. 
            <para>
            A list of warnings that occurred during the text-detection operation for the document.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.HumanLoopActivationOutput">
            <summary>
            Shows the results of the human in the loop evaluation. If there is no HumanLoopArn,
            the input did not trigger human review.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.HumanLoopActivationOutput.HumanLoopActivationConditionsEvaluationResults">
            <summary>
            Gets and sets the property HumanLoopActivationConditionsEvaluationResults. 
            <para>
            Shows the result of condition evaluations, including those conditions which activated
            a human review.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.HumanLoopActivationOutput.HumanLoopActivationReasons">
            <summary>
            Gets and sets the property HumanLoopActivationReasons. 
            <para>
            Shows if and why human review was needed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.HumanLoopActivationOutput.HumanLoopArn">
            <summary>
            Gets and sets the property HumanLoopArn. 
            <para>
            The Amazon Resource Name (ARN) of the HumanLoop created.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.HumanLoopConfig">
            <summary>
            Sets up the human review workflow the document will be sent to if one of the conditions
            is met. You can also set certain attributes of the image before review.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.HumanLoopConfig.DataAttributes">
            <summary>
            Gets and sets the property DataAttributes. 
            <para>
            Sets attributes of the input data.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.HumanLoopConfig.FlowDefinitionArn">
            <summary>
            Gets and sets the property FlowDefinitionArn. 
            <para>
            The Amazon Resource Name (ARN) of the flow definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.HumanLoopConfig.HumanLoopName">
            <summary>
            Gets and sets the property HumanLoopName. 
            <para>
            The name of the human workflow used for this image. This should be kept unique within
            a region.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.HumanLoopDataAttributes">
            <summary>
            Allows you to set attributes of the image. Currently, you can declare an image as
            free of personally identifiable information and adult content.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.HumanLoopDataAttributes.ContentClassifiers">
            <summary>
            Gets and sets the property ContentClassifiers. 
            <para>
            Sets whether the input image is free of personally identifiable information or adult
            content.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.HumanLoopQuotaExceededException">
            <summary>
            Indicates you have exceeded the maximum number of active human in the loop workflows
            available
            </summary>
        </member>
        <member name="M:Amazon.Textract.Model.HumanLoopQuotaExceededException.#ctor(System.String)">
            <summary>
            Constructs a new HumanLoopQuotaExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Textract.Model.HumanLoopQuotaExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of HumanLoopQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Textract.Model.HumanLoopQuotaExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of HumanLoopQuotaExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Textract.Model.HumanLoopQuotaExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of HumanLoopQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Textract.Model.HumanLoopQuotaExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of HumanLoopQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Textract.Model.HumanLoopQuotaExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the HumanLoopQuotaExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Textract.Model.HumanLoopQuotaExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="P:Amazon.Textract.Model.HumanLoopQuotaExceededException.QuotaCode">
            <summary>
            Gets and sets the property QuotaCode. 
            <para>
            The quota code.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.HumanLoopQuotaExceededException.ResourceType">
            <summary>
            Gets and sets the property ResourceType. 
            <para>
            The resource type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.HumanLoopQuotaExceededException.ServiceCode">
            <summary>
            Gets and sets the property ServiceCode. 
            <para>
            The service code.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.IdempotentParameterMismatchException">
            <summary>
            A <code>ClientRequestToken</code> input parameter was reused with an operation, but
            at least one of the other input parameters is different from the previous call to
            the operation.
            </summary>
        </member>
        <member name="M:Amazon.Textract.Model.IdempotentParameterMismatchException.#ctor(System.String)">
            <summary>
            Constructs a new IdempotentParameterMismatchException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Textract.Model.IdempotentParameterMismatchException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of IdempotentParameterMismatchException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Textract.Model.IdempotentParameterMismatchException.#ctor(System.Exception)">
            <summary>
            Construct instance of IdempotentParameterMismatchException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Textract.Model.IdempotentParameterMismatchException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of IdempotentParameterMismatchException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Textract.Model.IdempotentParameterMismatchException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of IdempotentParameterMismatchException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Textract.Model.IdempotentParameterMismatchException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the IdempotentParameterMismatchException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Textract.Model.IdempotentParameterMismatchException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Textract.Model.InternalServerErrorException">
            <summary>
            Amazon Textract experienced a service issue. Try your call again.
            </summary>
        </member>
        <member name="M:Amazon.Textract.Model.InternalServerErrorException.#ctor(System.String)">
            <summary>
            Constructs a new InternalServerErrorException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Textract.Model.InternalServerErrorException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InternalServerErrorException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Textract.Model.InternalServerErrorException.#ctor(System.Exception)">
            <summary>
            Construct instance of InternalServerErrorException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Textract.Model.InternalServerErrorException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServerErrorException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Textract.Model.InternalServerErrorException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServerErrorException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Textract.Model.InternalServerErrorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InternalServerErrorException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Textract.Model.InternalServerErrorException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for AccessDeniedException Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.AnalyzeDocumentRequestMarshaller">
            <summary>
            AnalyzeDocument Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.AnalyzeDocumentRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.AnalyzeDocumentRequestMarshaller.Marshall(Amazon.Textract.Model.AnalyzeDocumentRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.AnalyzeDocumentRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.AnalyzeDocumentResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AnalyzeDocument operation
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.AnalyzeDocumentResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.AnalyzeDocumentResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.AnalyzeDocumentResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.AnalyzeExpenseRequestMarshaller">
            <summary>
            AnalyzeExpense Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.AnalyzeExpenseRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.AnalyzeExpenseRequestMarshaller.Marshall(Amazon.Textract.Model.AnalyzeExpenseRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.AnalyzeExpenseRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.AnalyzeExpenseResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AnalyzeExpense operation
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.AnalyzeExpenseResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.AnalyzeExpenseResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.AnalyzeExpenseResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.BadDocumentExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for BadDocumentException Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.BadDocumentExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.BadDocumentExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.BadDocumentExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.BlockUnmarshaller">
            <summary>
            Response Unmarshaller for Block Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.BlockUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Textract#Model#Block,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.BlockUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.BlockUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.BoundingBoxUnmarshaller">
            <summary>
            Response Unmarshaller for BoundingBox Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.BoundingBoxUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Textract#Model#BoundingBox,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.BoundingBoxUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.BoundingBoxUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.DetectDocumentTextRequestMarshaller">
            <summary>
            DetectDocumentText Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.DetectDocumentTextRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.DetectDocumentTextRequestMarshaller.Marshall(Amazon.Textract.Model.DetectDocumentTextRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.DetectDocumentTextRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.DetectDocumentTextResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DetectDocumentText operation
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.DetectDocumentTextResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.DetectDocumentTextResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.DetectDocumentTextResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.DocumentLocationMarshaller">
            <summary>
            DocumentLocation Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.DocumentLocationMarshaller.Marshall(Amazon.Textract.Model.DocumentLocation,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Textract.Model.Internal.MarshallTransformations.DocumentLocationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.DocumentMarshaller">
            <summary>
            Document Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.DocumentMarshaller.Marshall(Amazon.Textract.Model.Document,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Textract.Model.Internal.MarshallTransformations.DocumentMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.DocumentMetadataUnmarshaller">
            <summary>
            Response Unmarshaller for DocumentMetadata Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.DocumentMetadataUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Textract#Model#DocumentMetadata,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.DocumentMetadataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.DocumentMetadataUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.DocumentTooLargeExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for DocumentTooLargeException Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.DocumentTooLargeExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.DocumentTooLargeExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.DocumentTooLargeExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.ExpenseDetectionUnmarshaller">
            <summary>
            Response Unmarshaller for ExpenseDetection Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.ExpenseDetectionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Textract#Model#ExpenseDetection,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.ExpenseDetectionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.ExpenseDetectionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.ExpenseDocumentUnmarshaller">
            <summary>
            Response Unmarshaller for ExpenseDocument Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.ExpenseDocumentUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Textract#Model#ExpenseDocument,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.ExpenseDocumentUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.ExpenseDocumentUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.ExpenseFieldUnmarshaller">
            <summary>
            Response Unmarshaller for ExpenseField Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.ExpenseFieldUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Textract#Model#ExpenseField,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.ExpenseFieldUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.ExpenseFieldUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.ExpenseTypeUnmarshaller">
            <summary>
            Response Unmarshaller for ExpenseType Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.ExpenseTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Textract#Model#ExpenseType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.ExpenseTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.ExpenseTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.GeometryUnmarshaller">
            <summary>
            Response Unmarshaller for Geometry Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.GeometryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Textract#Model#Geometry,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.GeometryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.GeometryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.GetDocumentAnalysisRequestMarshaller">
            <summary>
            GetDocumentAnalysis Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.GetDocumentAnalysisRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.GetDocumentAnalysisRequestMarshaller.Marshall(Amazon.Textract.Model.GetDocumentAnalysisRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.GetDocumentAnalysisRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.GetDocumentAnalysisResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetDocumentAnalysis operation
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.GetDocumentAnalysisResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.GetDocumentAnalysisResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.GetDocumentAnalysisResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.GetDocumentTextDetectionRequestMarshaller">
            <summary>
            GetDocumentTextDetection Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.GetDocumentTextDetectionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.GetDocumentTextDetectionRequestMarshaller.Marshall(Amazon.Textract.Model.GetDocumentTextDetectionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.GetDocumentTextDetectionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.GetDocumentTextDetectionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetDocumentTextDetection operation
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.GetDocumentTextDetectionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.GetDocumentTextDetectionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.GetDocumentTextDetectionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.HumanLoopActivationOutputUnmarshaller">
            <summary>
            Response Unmarshaller for HumanLoopActivationOutput Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.HumanLoopActivationOutputUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Textract#Model#HumanLoopActivationOutput,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.HumanLoopActivationOutputUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.HumanLoopActivationOutputUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.HumanLoopConfigMarshaller">
            <summary>
            HumanLoopConfig Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.HumanLoopConfigMarshaller.Marshall(Amazon.Textract.Model.HumanLoopConfig,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Textract.Model.Internal.MarshallTransformations.HumanLoopConfigMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.HumanLoopDataAttributesMarshaller">
            <summary>
            HumanLoopDataAttributes Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.HumanLoopDataAttributesMarshaller.Marshall(Amazon.Textract.Model.HumanLoopDataAttributes,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Textract.Model.Internal.MarshallTransformations.HumanLoopDataAttributesMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.HumanLoopQuotaExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for HumanLoopQuotaExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.HumanLoopQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.HumanLoopQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.HumanLoopQuotaExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.IdempotentParameterMismatchExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for IdempotentParameterMismatchException Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.IdempotentParameterMismatchExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.IdempotentParameterMismatchExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.IdempotentParameterMismatchExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.InternalServerErrorExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InternalServerErrorException Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.InternalServerErrorExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.InternalServerErrorExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.InternalServerErrorExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.InvalidJobIdExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidJobIdException Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.InvalidJobIdExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.InvalidJobIdExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.InvalidJobIdExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.InvalidKMSKeyExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidKMSKeyException Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.InvalidKMSKeyExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.InvalidKMSKeyExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.InvalidKMSKeyExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.InvalidParameterExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidParameterException Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.InvalidParameterExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.InvalidParameterExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.InvalidParameterExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.InvalidS3ObjectExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidS3ObjectException Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.InvalidS3ObjectExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.InvalidS3ObjectExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.InvalidS3ObjectExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for LimitExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.LineItemFieldsUnmarshaller">
            <summary>
            Response Unmarshaller for LineItemFields Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.LineItemFieldsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Textract#Model#LineItemFields,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.LineItemFieldsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.LineItemFieldsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.LineItemGroupUnmarshaller">
            <summary>
            Response Unmarshaller for LineItemGroup Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.LineItemGroupUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Textract#Model#LineItemGroup,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.LineItemGroupUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.LineItemGroupUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.NotificationChannelMarshaller">
            <summary>
            NotificationChannel Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.NotificationChannelMarshaller.Marshall(Amazon.Textract.Model.NotificationChannel,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Textract.Model.Internal.MarshallTransformations.NotificationChannelMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.OutputConfigMarshaller">
            <summary>
            OutputConfig Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.OutputConfigMarshaller.Marshall(Amazon.Textract.Model.OutputConfig,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Textract.Model.Internal.MarshallTransformations.OutputConfigMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.PointUnmarshaller">
            <summary>
            Response Unmarshaller for Point Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.PointUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Textract#Model#Point,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.PointUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.PointUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.ProvisionedThroughputExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ProvisionedThroughputExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.ProvisionedThroughputExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.ProvisionedThroughputExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.ProvisionedThroughputExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.RelationshipUnmarshaller">
            <summary>
            Response Unmarshaller for Relationship Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.RelationshipUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Textract#Model#Relationship,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.RelationshipUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.RelationshipUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.S3ObjectMarshaller">
            <summary>
            S3Object Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.S3ObjectMarshaller.Marshall(Amazon.Textract.Model.S3Object,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Textract.Model.Internal.MarshallTransformations.S3ObjectMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.StartDocumentAnalysisRequestMarshaller">
            <summary>
            StartDocumentAnalysis Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.StartDocumentAnalysisRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.StartDocumentAnalysisRequestMarshaller.Marshall(Amazon.Textract.Model.StartDocumentAnalysisRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.StartDocumentAnalysisRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.StartDocumentAnalysisResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StartDocumentAnalysis operation
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.StartDocumentAnalysisResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.StartDocumentAnalysisResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.StartDocumentAnalysisResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.StartDocumentTextDetectionRequestMarshaller">
            <summary>
            StartDocumentTextDetection Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.StartDocumentTextDetectionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.StartDocumentTextDetectionRequestMarshaller.Marshall(Amazon.Textract.Model.StartDocumentTextDetectionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.StartDocumentTextDetectionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.StartDocumentTextDetectionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StartDocumentTextDetection operation
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.StartDocumentTextDetectionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.StartDocumentTextDetectionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.StartDocumentTextDetectionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ThrottlingException Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.UnsupportedDocumentExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for UnsupportedDocumentException Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.UnsupportedDocumentExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.UnsupportedDocumentExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.UnsupportedDocumentExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.Internal.MarshallTransformations.WarningUnmarshaller">
            <summary>
            Response Unmarshaller for Warning Object
            </summary>  
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.WarningUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Textract#Model#Warning,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Textract.Model.Internal.MarshallTransformations.WarningUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Textract.Model.Internal.MarshallTransformations.WarningUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Textract.Model.InvalidJobIdException">
            <summary>
            An invalid job identifier was passed to <a>GetDocumentAnalysis</a> or to <a>GetDocumentAnalysis</a>.
            </summary>
        </member>
        <member name="M:Amazon.Textract.Model.InvalidJobIdException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidJobIdException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Textract.Model.InvalidJobIdException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidJobIdException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Textract.Model.InvalidJobIdException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidJobIdException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Textract.Model.InvalidJobIdException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidJobIdException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Textract.Model.InvalidJobIdException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidJobIdException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Textract.Model.InvalidJobIdException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidJobIdException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Textract.Model.InvalidJobIdException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Textract.Model.InvalidKMSKeyException">
            <summary>
            Indicates you do not have decrypt permissions with the KMS key entered, or the KMS
            key was entered incorrectly.
            </summary>
        </member>
        <member name="M:Amazon.Textract.Model.InvalidKMSKeyException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidKMSKeyException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Textract.Model.InvalidKMSKeyException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidKMSKeyException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Textract.Model.InvalidKMSKeyException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidKMSKeyException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Textract.Model.InvalidKMSKeyException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidKMSKeyException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Textract.Model.InvalidKMSKeyException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidKMSKeyException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Textract.Model.InvalidKMSKeyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidKMSKeyException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Textract.Model.InvalidKMSKeyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Textract.Model.InvalidParameterException">
            <summary>
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </summary>
        </member>
        <member name="M:Amazon.Textract.Model.InvalidParameterException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidParameterException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Textract.Model.InvalidParameterException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Textract.Model.InvalidParameterException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Textract.Model.InvalidParameterException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Textract.Model.InvalidParameterException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Textract.Model.InvalidParameterException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidParameterException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Textract.Model.InvalidParameterException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Textract.Model.InvalidS3ObjectException">
            <summary>
            Amazon Textract is unable to access the S3 object that's specified in the request.
            for more information, <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html">Configure
            Access to Amazon S3</a> For troubleshooting information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/troubleshooting.html">Troubleshooting
            Amazon S3</a>
            </summary>
        </member>
        <member name="M:Amazon.Textract.Model.InvalidS3ObjectException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidS3ObjectException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Textract.Model.InvalidS3ObjectException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidS3ObjectException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Textract.Model.InvalidS3ObjectException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidS3ObjectException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Textract.Model.InvalidS3ObjectException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidS3ObjectException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Textract.Model.InvalidS3ObjectException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidS3ObjectException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Textract.Model.InvalidS3ObjectException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidS3ObjectException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Textract.Model.InvalidS3ObjectException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Textract.Model.LimitExceededException">
            <summary>
            An Amazon Textract service limit was exceeded. For example, if you start too many
            asynchronous jobs concurrently, calls to start operations (<code>StartDocumentTextDetection</code>,
            for example) raise a LimitExceededException exception (HTTP status code: 400) until
            the number of concurrently running jobs is below the Amazon Textract service limit.
            </summary>
        </member>
        <member name="M:Amazon.Textract.Model.LimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new LimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Textract.Model.LimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Textract.Model.LimitExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Textract.Model.LimitExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Textract.Model.LimitExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Textract.Model.LimitExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the LimitExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Textract.Model.LimitExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Textract.Model.LineItemFields">
            <summary>
            A structure that holds information about the different lines found in a document's
            tables.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.LineItemFields.LineItemExpenseFields">
            <summary>
            Gets and sets the property LineItemExpenseFields. 
            <para>
            ExpenseFields used to show information from detected lines on a table.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.LineItemGroup">
            <summary>
            A grouping of tables which contain LineItems, with each table identified by the table's
            <code>LineItemGroupIndex</code>.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.LineItemGroup.LineItemGroupIndex">
            <summary>
            Gets and sets the property LineItemGroupIndex. 
            <para>
            The number used to identify a specific table in a document. The first table encountered
            will have a LineItemGroupIndex of 1, the second 2, etc.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.LineItemGroup.LineItems">
            <summary>
            Gets and sets the property LineItems. 
            <para>
            The breakdown of information on a particular line of a table. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.NotificationChannel">
            <summary>
            The Amazon Simple Notification Service (Amazon SNS) topic to which Amazon Textract
            publishes the completion status of an asynchronous document operation, such as <a>StartDocumentTextDetection</a>.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.NotificationChannel.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The Amazon Resource Name (ARN) of an IAM role that gives Amazon Textract publishing
            permissions to the Amazon SNS topic. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.NotificationChannel.SNSTopicArn">
            <summary>
            Gets and sets the property SNSTopicArn. 
            <para>
            The Amazon SNS topic that Amazon Textract posts the completion status to.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.OutputConfig">
            <summary>
            Sets whether or not your output will go to a user created bucket. Used to set the
            name of the bucket, and the prefix on the output file.
            
             
            <para>
             <code>OutputConfig</code> is an optional parameter which lets you adjust where your
            output will be placed. By default, Amazon Textract will store the results internally
            and can only be accessed by the Get API operations. With OutputConfig enabled, you
            can set the name of the bucket the output will be sent to and the file prefix of the
            results where you can download your results. Additionally, you can set the <code>KMSKeyID</code>
            parameter to a customer master key (CMK) to encrypt your output. Without this parameter
            set Amazon Textract will encrypt server-side using the AWS managed CMK for Amazon
            S3.
            </para>
             
            <para>
            Decryption of Customer Content is necessary for processing of the documents by Amazon
            Textract. If your account is opted out under an AI services opt out policy then all
            unencrypted Customer Content is immediately and permanently deleted after the Customer
            Content has been processed by the service. No copy of of the output is retained by
            Amazon Textract. For information about how to opt out, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_ai-opt-out.html">
            Managing AI services opt-out policy. </a> 
            </para>
             
            <para>
            For more information on data privacy, see the <a href="https://aws.amazon.com/compliance/data-privacy-faq/">Data
            Privacy FAQ</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.OutputConfig.S3Bucket">
            <summary>
            Gets and sets the property S3Bucket. 
            <para>
            The name of the bucket your output will go to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.OutputConfig.S3Prefix">
            <summary>
            Gets and sets the property S3Prefix. 
            <para>
            The prefix of the object key that the output will be saved to. When not enabled, the
            prefix will be “textract_output".
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.Point">
            <summary>
            The X and Y coordinates of a point on a document page. The X and Y values that are
            returned are ratios of the overall document page size. For example, if the input document
            is 700 x 200 and the operation returns X=0.5 and Y=0.25, then the point is at the
            (350,50) pixel coordinate on the document page.
            
             
            <para>
            An array of <code>Point</code> objects, <code>Polygon</code>, is returned by <a>DetectDocumentText</a>.
            <code>Polygon</code> represents a fine-grained polygon around detected text. For more
            information, see Geometry in the Amazon Textract Developer Guide. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.Point.X">
            <summary>
            Gets and sets the property X. 
            <para>
            The value of the X coordinate for a point on a <code>Polygon</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.Point.Y">
            <summary>
            Gets and sets the property Y. 
            <para>
            The value of the Y coordinate for a point on a <code>Polygon</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            <summary>
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </summary>
        </member>
        <member name="M:Amazon.Textract.Model.ProvisionedThroughputExceededException.#ctor(System.String)">
            <summary>
            Constructs a new ProvisionedThroughputExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Textract.Model.ProvisionedThroughputExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ProvisionedThroughputExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Textract.Model.ProvisionedThroughputExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of ProvisionedThroughputExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Textract.Model.ProvisionedThroughputExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ProvisionedThroughputExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Textract.Model.ProvisionedThroughputExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ProvisionedThroughputExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Textract.Model.ProvisionedThroughputExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ProvisionedThroughputExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Textract.Model.ProvisionedThroughputExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Textract.Model.Relationship">
            <summary>
            Information about how blocks are related to each other. A <code>Block</code> object
            contains 0 or more <code>Relation</code> objects in a list, <code>Relationships</code>.
            For more information, see <a>Block</a>.
            
             
            <para>
            The <code>Type</code> element provides the type of the relationship for all blocks
            in the <code>IDs</code> array. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.Relationship.Ids">
            <summary>
            Gets and sets the property Ids. 
            <para>
            An array of IDs for related blocks. You can get the type of the relationship from
            the <code>Type</code> element.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.Relationship.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of relationship that the blocks in the IDs array have with the current block.
            The relationship can be <code>VALUE</code> or <code>CHILD</code>. A relationship of
            type VALUE is a list that contains the ID of the VALUE block that's associated with
            the KEY of a key-value pair. A relationship of type CHILD is a list of IDs that identify
            WORD blocks in the case of lines Cell blocks in the case of Tables, and WORD blocks
            in the case of Selection Elements.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.S3Object">
            <summary>
            The S3 bucket name and file name that identifies the document.
            
             
            <para>
            The AWS Region for the S3 bucket that contains the document must match the Region
            that you use for Amazon Textract operations.
            </para>
             
            <para>
            For Amazon Textract to process a file in an S3 bucket, the user must have permission
            to access the S3 bucket and file. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.S3Object.Bucket">
            <summary>
            Gets and sets the property Bucket. 
            <para>
            The name of the S3 bucket. Note that the # character is not valid in the file name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.S3Object.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The file name of the input document. Synchronous operations can use image files that
            are in JPEG or PNG format. Asynchronous operations also support PDF format files.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.S3Object.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            If the bucket has versioning enabled, you can specify the object version. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.StartDocumentAnalysisRequest">
            <summary>
            Container for the parameters to the StartDocumentAnalysis operation.
            Starts the asynchronous analysis of an input document for relationships between detected
            items such as key-value pairs, tables, and selection elements.
            
             
            <para>
             <code>StartDocumentAnalysis</code> can analyze text in documents that are in JPEG,
            PNG, and PDF format. The documents are stored in an Amazon S3 bucket. Use <a>DocumentLocation</a>
            to specify the bucket name and file name of the document. 
            </para>
             
            <para>
             <code>StartDocumentAnalysis</code> returns a job identifier (<code>JobId</code>)
            that you use to get the results of the operation. When text analysis is finished,
            Amazon Textract publishes a completion status to the Amazon Simple Notification Service
            (Amazon SNS) topic that you specify in <code>NotificationChannel</code>. To get the
            results of the text analysis operation, first check that the status value published
            to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <a>GetDocumentAnalysis</a>,
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartDocumentAnalysis</code>.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/textract/latest/dg/how-it-works-analyzing.html">Document
            Text Analysis</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.StartDocumentAnalysisRequest.ClientRequestToken">
            <summary>
            Gets and sets the property ClientRequestToken. 
            <para>
            The idempotent token that you use to identify the start request. If you use the same
            token with multiple <code>StartDocumentAnalysis</code> requests, the same <code>JobId</code>
            is returned. Use <code>ClientRequestToken</code> to prevent the same job from being
            accidentally started more than once. For more information, see <a href="https://docs.aws.amazon.com/textract/latest/dg/api-async.html">Calling
            Amazon Textract Asynchronous Operations</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.StartDocumentAnalysisRequest.DocumentLocation">
            <summary>
            Gets and sets the property DocumentLocation. 
            <para>
            The location of the document to be processed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.StartDocumentAnalysisRequest.FeatureTypes">
            <summary>
            Gets and sets the property FeatureTypes. 
            <para>
            A list of the types of analysis to perform. Add TABLES to the list to return information
            about the tables that are detected in the input document. Add FORMS to return detected
            form data. To perform both types of analysis, add TABLES and FORMS to <code>FeatureTypes</code>.
            All lines and words detected in the document are included in the response (including
            text that isn't related to the value of <code>FeatureTypes</code>). 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.StartDocumentAnalysisRequest.JobTag">
            <summary>
            Gets and sets the property JobTag. 
            <para>
            An identifier that you specify that's included in the completion notification published
            to the Amazon SNS topic. For example, you can use <code>JobTag</code> to identify
            the type of document that the completion notification corresponds to (such as a tax
            form or a receipt).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.StartDocumentAnalysisRequest.KMSKeyId">
            <summary>
            Gets and sets the property KMSKeyId. 
            <para>
            The KMS key used to encrypt the inference results. This can be in either Key ID or
            Key Alias format. When a KMS key is provided, the KMS key will be used for server-side
            encryption of the objects in the customer bucket. When this parameter is not enabled,
            the result will be encrypted server side,using SSE-S3.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.StartDocumentAnalysisRequest.NotificationChannel">
            <summary>
            Gets and sets the property NotificationChannel. 
            <para>
            The Amazon SNS topic ARN that you want Amazon Textract to publish the completion status
            of the operation to. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.StartDocumentAnalysisRequest.OutputConfig">
            <summary>
            Gets and sets the property OutputConfig. 
            <para>
            Sets if the output will go to a customer defined bucket. By default, Amazon Textract
            will save the results internally to be accessed by the GetDocumentAnalysis operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.StartDocumentAnalysisResponse">
            <summary>
            This is the response object from the StartDocumentAnalysis operation.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.StartDocumentAnalysisResponse.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            The identifier for the document text detection job. Use <code>JobId</code> to identify
            the job in a subsequent call to <code>GetDocumentAnalysis</code>. A <code>JobId</code>
            value is only valid for 7 days.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.StartDocumentTextDetectionRequest">
            <summary>
            Container for the parameters to the StartDocumentTextDetection operation.
            Starts the asynchronous detection of text in a document. Amazon Textract can detect
            lines of text and the words that make up a line of text.
            
             
            <para>
             <code>StartDocumentTextDetection</code> can analyze text in documents that are in
            JPEG, PNG, and PDF format. The documents are stored in an Amazon S3 bucket. Use <a>DocumentLocation</a>
            to specify the bucket name and file name of the document. 
            </para>
             
            <para>
             <code>StartTextDetection</code> returns a job identifier (<code>JobId</code>) that
            you use to get the results of the operation. When text detection is finished, Amazon
            Textract publishes a completion status to the Amazon Simple Notification Service (Amazon
            SNS) topic that you specify in <code>NotificationChannel</code>. To get the results
            of the text detection operation, first check that the status value published to the
            Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <a>GetDocumentTextDetection</a>,
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartDocumentTextDetection</code>.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/textract/latest/dg/how-it-works-detecting.html">Document
            Text Detection</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.StartDocumentTextDetectionRequest.ClientRequestToken">
            <summary>
            Gets and sets the property ClientRequestToken. 
            <para>
            The idempotent token that's used to identify the start request. If you use the same
            token with multiple <code>StartDocumentTextDetection</code> requests, the same <code>JobId</code>
            is returned. Use <code>ClientRequestToken</code> to prevent the same job from being
            accidentally started more than once. For more information, see <a href="https://docs.aws.amazon.com/textract/latest/dg/api-async.html">Calling
            Amazon Textract Asynchronous Operations</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.StartDocumentTextDetectionRequest.DocumentLocation">
            <summary>
            Gets and sets the property DocumentLocation. 
            <para>
            The location of the document to be processed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.StartDocumentTextDetectionRequest.JobTag">
            <summary>
            Gets and sets the property JobTag. 
            <para>
            An identifier that you specify that's included in the completion notification published
            to the Amazon SNS topic. For example, you can use <code>JobTag</code> to identify
            the type of document that the completion notification corresponds to (such as a tax
            form or a receipt).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.StartDocumentTextDetectionRequest.KMSKeyId">
            <summary>
            Gets and sets the property KMSKeyId. 
            <para>
            The KMS key used to encrypt the inference results. This can be in either Key ID or
            Key Alias format. When a KMS key is provided, the KMS key will be used for server-side
            encryption of the objects in the customer bucket. When this parameter is not enabled,
            the result will be encrypted server side,using SSE-S3.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.StartDocumentTextDetectionRequest.NotificationChannel">
            <summary>
            Gets and sets the property NotificationChannel. 
            <para>
            The Amazon SNS topic ARN that you want Amazon Textract to publish the completion status
            of the operation to. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.StartDocumentTextDetectionRequest.OutputConfig">
            <summary>
            Gets and sets the property OutputConfig. 
            <para>
            Sets if the output will go to a customer defined bucket. By default Amazon Textract
            will save the results internally to be accessed with the GetDocumentTextDetection
            operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.StartDocumentTextDetectionResponse">
            <summary>
            This is the response object from the StartDocumentTextDetection operation.
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.StartDocumentTextDetectionResponse.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            The identifier of the text detection job for the document. Use <code>JobId</code>
            to identify the job in a subsequent call to <code>GetDocumentTextDetection</code>.
            A <code>JobId</code> value is only valid for 7 days.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.Model.ThrottlingException">
            <summary>
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </summary>
        </member>
        <member name="M:Amazon.Textract.Model.ThrottlingException.#ctor(System.String)">
            <summary>
            Constructs a new ThrottlingException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Textract.Model.ThrottlingException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Textract.Model.ThrottlingException.#ctor(System.Exception)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Textract.Model.ThrottlingException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Textract.Model.ThrottlingException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Textract.Model.ThrottlingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ThrottlingException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Textract.Model.ThrottlingException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Textract.Model.UnsupportedDocumentException">
            <summary>
            The format of the input document isn't supported. Documents for synchronous operations
            can be in PNG or JPEG format. Documents for asynchronous operations can also be in
            PDF format.
            </summary>
        </member>
        <member name="M:Amazon.Textract.Model.UnsupportedDocumentException.#ctor(System.String)">
            <summary>
            Constructs a new UnsupportedDocumentException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Textract.Model.UnsupportedDocumentException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of UnsupportedDocumentException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Textract.Model.UnsupportedDocumentException.#ctor(System.Exception)">
            <summary>
            Construct instance of UnsupportedDocumentException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Textract.Model.UnsupportedDocumentException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UnsupportedDocumentException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Textract.Model.UnsupportedDocumentException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UnsupportedDocumentException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Textract.Model.UnsupportedDocumentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the UnsupportedDocumentException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Textract.Model.UnsupportedDocumentException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Textract.Model.Warning">
            <summary>
            A warning about an issue that occurred during asynchronous text analysis (<a>StartDocumentAnalysis</a>)
            or asynchronous document text detection (<a>StartDocumentTextDetection</a>).
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.Warning.ErrorCode">
            <summary>
            Gets and sets the property ErrorCode. 
            <para>
            The error code for the warning.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Textract.Model.Warning.Pages">
            <summary>
            Gets and sets the property Pages. 
            <para>
            A list of the pages that the warning applies to.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Textract.AmazonTextractRequest">
            <summary>
            Base class for Textract operation requests.
            </summary>
        </member>
        <member name="T:Amazon.Textract.BlockType">
            <summary>
            Constants used for properties of type BlockType.
            </summary>
        </member>
        <member name="F:Amazon.Textract.BlockType.CELL">
            <summary>
            Constant CELL for BlockType
            </summary>
        </member>
        <member name="F:Amazon.Textract.BlockType.KEY_VALUE_SET">
            <summary>
            Constant KEY_VALUE_SET for BlockType
            </summary>
        </member>
        <member name="F:Amazon.Textract.BlockType.LINE">
            <summary>
            Constant LINE for BlockType
            </summary>
        </member>
        <member name="F:Amazon.Textract.BlockType.PAGE">
            <summary>
            Constant PAGE for BlockType
            </summary>
        </member>
        <member name="F:Amazon.Textract.BlockType.SELECTION_ELEMENT">
            <summary>
            Constant SELECTION_ELEMENT for BlockType
            </summary>
        </member>
        <member name="F:Amazon.Textract.BlockType.TABLE">
            <summary>
            Constant TABLE for BlockType
            </summary>
        </member>
        <member name="F:Amazon.Textract.BlockType.WORD">
            <summary>
            Constant WORD for BlockType
            </summary>
        </member>
        <member name="M:Amazon.Textract.BlockType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Textract.BlockType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Textract.BlockType.op_Implicit(System.String)~Amazon.Textract.BlockType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Textract.ContentClassifier">
            <summary>
            Constants used for properties of type ContentClassifier.
            </summary>
        </member>
        <member name="F:Amazon.Textract.ContentClassifier.FreeOfAdultContent">
            <summary>
            Constant FreeOfAdultContent for ContentClassifier
            </summary>
        </member>
        <member name="F:Amazon.Textract.ContentClassifier.FreeOfPersonallyIdentifiableInformation">
            <summary>
            Constant FreeOfPersonallyIdentifiableInformation for ContentClassifier
            </summary>
        </member>
        <member name="M:Amazon.Textract.ContentClassifier.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Textract.ContentClassifier.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Textract.ContentClassifier.op_Implicit(System.String)~Amazon.Textract.ContentClassifier">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Textract.EntityType">
            <summary>
            Constants used for properties of type EntityType.
            </summary>
        </member>
        <member name="F:Amazon.Textract.EntityType.KEY">
            <summary>
            Constant KEY for EntityType
            </summary>
        </member>
        <member name="F:Amazon.Textract.EntityType.VALUE">
            <summary>
            Constant VALUE for EntityType
            </summary>
        </member>
        <member name="M:Amazon.Textract.EntityType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Textract.EntityType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Textract.EntityType.op_Implicit(System.String)~Amazon.Textract.EntityType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Textract.FeatureType">
            <summary>
            Constants used for properties of type FeatureType.
            </summary>
        </member>
        <member name="F:Amazon.Textract.FeatureType.FORMS">
            <summary>
            Constant FORMS for FeatureType
            </summary>
        </member>
        <member name="F:Amazon.Textract.FeatureType.TABLES">
            <summary>
            Constant TABLES for FeatureType
            </summary>
        </member>
        <member name="M:Amazon.Textract.FeatureType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Textract.FeatureType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Textract.FeatureType.op_Implicit(System.String)~Amazon.Textract.FeatureType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Textract.JobStatus">
            <summary>
            Constants used for properties of type JobStatus.
            </summary>
        </member>
        <member name="F:Amazon.Textract.JobStatus.FAILED">
            <summary>
            Constant FAILED for JobStatus
            </summary>
        </member>
        <member name="F:Amazon.Textract.JobStatus.IN_PROGRESS">
            <summary>
            Constant IN_PROGRESS for JobStatus
            </summary>
        </member>
        <member name="F:Amazon.Textract.JobStatus.PARTIAL_SUCCESS">
            <summary>
            Constant PARTIAL_SUCCESS for JobStatus
            </summary>
        </member>
        <member name="F:Amazon.Textract.JobStatus.SUCCEEDED">
            <summary>
            Constant SUCCEEDED for JobStatus
            </summary>
        </member>
        <member name="M:Amazon.Textract.JobStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Textract.JobStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Textract.JobStatus.op_Implicit(System.String)~Amazon.Textract.JobStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Textract.RelationshipType">
            <summary>
            Constants used for properties of type RelationshipType.
            </summary>
        </member>
        <member name="F:Amazon.Textract.RelationshipType.CHILD">
            <summary>
            Constant CHILD for RelationshipType
            </summary>
        </member>
        <member name="F:Amazon.Textract.RelationshipType.COMPLEX_FEATURES">
            <summary>
            Constant COMPLEX_FEATURES for RelationshipType
            </summary>
        </member>
        <member name="F:Amazon.Textract.RelationshipType.VALUE">
            <summary>
            Constant VALUE for RelationshipType
            </summary>
        </member>
        <member name="M:Amazon.Textract.RelationshipType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Textract.RelationshipType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Textract.RelationshipType.op_Implicit(System.String)~Amazon.Textract.RelationshipType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Textract.SelectionStatus">
            <summary>
            Constants used for properties of type SelectionStatus.
            </summary>
        </member>
        <member name="F:Amazon.Textract.SelectionStatus.NOT_SELECTED">
            <summary>
            Constant NOT_SELECTED for SelectionStatus
            </summary>
        </member>
        <member name="F:Amazon.Textract.SelectionStatus.SELECTED">
            <summary>
            Constant SELECTED for SelectionStatus
            </summary>
        </member>
        <member name="M:Amazon.Textract.SelectionStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Textract.SelectionStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Textract.SelectionStatus.op_Implicit(System.String)~Amazon.Textract.SelectionStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Textract.TextType">
            <summary>
            Constants used for properties of type TextType.
            </summary>
        </member>
        <member name="F:Amazon.Textract.TextType.HANDWRITING">
            <summary>
            Constant HANDWRITING for TextType
            </summary>
        </member>
        <member name="F:Amazon.Textract.TextType.PRINTED">
            <summary>
            Constant PRINTED for TextType
            </summary>
        </member>
        <member name="M:Amazon.Textract.TextType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Textract.TextType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Textract.TextType.op_Implicit(System.String)~Amazon.Textract.TextType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Textract.AmazonTextractClient">
             <summary>
             Implementation for accessing Textract
            
             Amazon Textract detects and analyzes text in documents and converts it into machine-readable
             text. This is the API reference documentation for Amazon Textract.
             </summary>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractClient.#ctor">
             <summary>
             Constructs AmazonTextractClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonTextractClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractClient.#ctor(Amazon.Textract.AmazonTextractConfig)">
             <summary>
             Constructs AmazonTextractClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonTextractClient Configuration Object</param>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonTextractClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonTextractClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.Textract.AmazonTextractConfig)">
            <summary>
            Constructs AmazonTextractClient with AWS Credentials and an
            AmazonTextractClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonTextractClient Configuration Object</param>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonTextractClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonTextractClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractClient.#ctor(System.String,System.String,Amazon.Textract.AmazonTextractConfig)">
            <summary>
            Constructs AmazonTextractClient with AWS Access Key ID, AWS Secret Key and an
            AmazonTextractClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonTextractClient Configuration Object</param>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonTextractClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonTextractClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractClient.#ctor(System.String,System.String,System.String,Amazon.Textract.AmazonTextractConfig)">
            <summary>
            Constructs AmazonTextractClient with AWS Access Key ID, AWS Secret Key and an
            AmazonTextractClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonTextractClient Configuration Object</param>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="P:Amazon.Textract.AmazonTextractClient.ServiceMetadata">
            <summary>
            Capture metadata for the service.
            </summary>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractClient.AnalyzeDocument(Amazon.Textract.Model.AnalyzeDocumentRequest)">
            <summary>
            Analyzes an input document for relationships between detected items. 
            
             
            <para>
            The types of information returned are as follows: 
            </para>
             <ul> <li> 
            <para>
            Form data (key-value pairs). The related information is returned in two <a>Block</a>
            objects, each of type <code>KEY_VALUE_SET</code>: a KEY <code>Block</code> object
            and a VALUE <code>Block</code> object. For example, <i>Name: Ana Silva Carolina</i>
            contains a key and value. <i>Name:</i> is the key. <i>Ana Silva Carolina</i> is the
            value.
            </para>
             </li> <li> 
            <para>
            Table and table cell data. A TABLE <code>Block</code> object contains information
            about a detected table. A CELL <code>Block</code> object is returned for each cell
            in a table.
            </para>
             </li> <li> 
            <para>
            Lines and words of text. A LINE <code>Block</code> object contains one or more WORD
            <code>Block</code> objects. All lines and words that are detected in the document
            are returned (including text that doesn't have a relationship with the value of <code>FeatureTypes</code>).
            
            </para>
             </li> </ul> 
            <para>
            Selection elements such as check boxes and option buttons (radio buttons) can be detected
            in form data and in tables. A SELECTION_ELEMENT <code>Block</code> object contains
            information about a selection element, including the selection status.
            </para>
             
            <para>
            You can choose which type of analysis to perform by specifying the <code>FeatureTypes</code>
            list. 
            </para>
             
            <para>
            The output is returned in a list of <code>Block</code> objects.
            </para>
             
            <para>
             <code>AnalyzeDocument</code> is a synchronous operation. To analyze documents asynchronously,
            use <a>StartDocumentAnalysis</a>.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/textract/latest/dg/how-it-works-analyzing.html">Document
            Text Analysis</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AnalyzeDocument service method.</param>
            
            <returns>The response from the AnalyzeDocument service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.BadDocumentException">
            Amazon Textract isn't able to read the document. For more information on the document
            limits in Amazon Textract, see <a>limits</a>.
            </exception>
            <exception cref="T:Amazon.Textract.Model.DocumentTooLargeException">
            The document can't be processed because it's too large. The maximum document size
            for synchronous operations 10 MB. The maximum document size for asynchronous operations
            is 500 MB for PDF files.
            </exception>
            <exception cref="T:Amazon.Textract.Model.HumanLoopQuotaExceededException">
            Indicates you have exceeded the maximum number of active human in the loop workflows
            available
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidS3ObjectException">
            Amazon Textract is unable to access the S3 object that's specified in the request.
            for more information, <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html">Configure
            Access to Amazon S3</a> For troubleshooting information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/troubleshooting.html">Troubleshooting
            Amazon S3</a>
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.UnsupportedDocumentException">
            The format of the input document isn't supported. Documents for synchronous operations
            can be in PNG or JPEG format. Documents for asynchronous operations can also be in
            PDF format.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/AnalyzeDocument">REST API Reference for AnalyzeDocument Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractClient.AnalyzeDocumentAsync(Amazon.Textract.Model.AnalyzeDocumentRequest,System.Threading.CancellationToken)">
            <summary>
            Analyzes an input document for relationships between detected items. 
            
             
            <para>
            The types of information returned are as follows: 
            </para>
             <ul> <li> 
            <para>
            Form data (key-value pairs). The related information is returned in two <a>Block</a>
            objects, each of type <code>KEY_VALUE_SET</code>: a KEY <code>Block</code> object
            and a VALUE <code>Block</code> object. For example, <i>Name: Ana Silva Carolina</i>
            contains a key and value. <i>Name:</i> is the key. <i>Ana Silva Carolina</i> is the
            value.
            </para>
             </li> <li> 
            <para>
            Table and table cell data. A TABLE <code>Block</code> object contains information
            about a detected table. A CELL <code>Block</code> object is returned for each cell
            in a table.
            </para>
             </li> <li> 
            <para>
            Lines and words of text. A LINE <code>Block</code> object contains one or more WORD
            <code>Block</code> objects. All lines and words that are detected in the document
            are returned (including text that doesn't have a relationship with the value of <code>FeatureTypes</code>).
            
            </para>
             </li> </ul> 
            <para>
            Selection elements such as check boxes and option buttons (radio buttons) can be detected
            in form data and in tables. A SELECTION_ELEMENT <code>Block</code> object contains
            information about a selection element, including the selection status.
            </para>
             
            <para>
            You can choose which type of analysis to perform by specifying the <code>FeatureTypes</code>
            list. 
            </para>
             
            <para>
            The output is returned in a list of <code>Block</code> objects.
            </para>
             
            <para>
             <code>AnalyzeDocument</code> is a synchronous operation. To analyze documents asynchronously,
            use <a>StartDocumentAnalysis</a>.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/textract/latest/dg/how-it-works-analyzing.html">Document
            Text Analysis</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AnalyzeDocument service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AnalyzeDocument service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.BadDocumentException">
            Amazon Textract isn't able to read the document. For more information on the document
            limits in Amazon Textract, see <a>limits</a>.
            </exception>
            <exception cref="T:Amazon.Textract.Model.DocumentTooLargeException">
            The document can't be processed because it's too large. The maximum document size
            for synchronous operations 10 MB. The maximum document size for asynchronous operations
            is 500 MB for PDF files.
            </exception>
            <exception cref="T:Amazon.Textract.Model.HumanLoopQuotaExceededException">
            Indicates you have exceeded the maximum number of active human in the loop workflows
            available
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidS3ObjectException">
            Amazon Textract is unable to access the S3 object that's specified in the request.
            for more information, <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html">Configure
            Access to Amazon S3</a> For troubleshooting information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/troubleshooting.html">Troubleshooting
            Amazon S3</a>
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.UnsupportedDocumentException">
            The format of the input document isn't supported. Documents for synchronous operations
            can be in PNG or JPEG format. Documents for asynchronous operations can also be in
            PDF format.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/AnalyzeDocument">REST API Reference for AnalyzeDocument Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractClient.AnalyzeExpense(Amazon.Textract.Model.AnalyzeExpenseRequest)">
            <summary>
            Analyzes an input document for financially related relationships between text.
            
             
            <para>
            Information is returned as <code>ExpenseDocuments</code> and seperated as follows.
            </para>
             <ul> <li> 
            <para>
             <code>LineItemGroups</code>- A data set containing <code>LineItems</code> which store
            information about the lines of text, such as an item purchased and its price on a
            receipt.
            </para>
             </li> <li> 
            <para>
             <code>SummaryFields</code>- Contains all other information a receipt, such as header
            information or the vendors name.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AnalyzeExpense service method.</param>
            
            <returns>The response from the AnalyzeExpense service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.BadDocumentException">
            Amazon Textract isn't able to read the document. For more information on the document
            limits in Amazon Textract, see <a>limits</a>.
            </exception>
            <exception cref="T:Amazon.Textract.Model.DocumentTooLargeException">
            The document can't be processed because it's too large. The maximum document size
            for synchronous operations 10 MB. The maximum document size for asynchronous operations
            is 500 MB for PDF files.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidS3ObjectException">
            Amazon Textract is unable to access the S3 object that's specified in the request.
            for more information, <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html">Configure
            Access to Amazon S3</a> For troubleshooting information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/troubleshooting.html">Troubleshooting
            Amazon S3</a>
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.UnsupportedDocumentException">
            The format of the input document isn't supported. Documents for synchronous operations
            can be in PNG or JPEG format. Documents for asynchronous operations can also be in
            PDF format.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/AnalyzeExpense">REST API Reference for AnalyzeExpense Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractClient.AnalyzeExpenseAsync(Amazon.Textract.Model.AnalyzeExpenseRequest,System.Threading.CancellationToken)">
            <summary>
            Analyzes an input document for financially related relationships between text.
            
             
            <para>
            Information is returned as <code>ExpenseDocuments</code> and seperated as follows.
            </para>
             <ul> <li> 
            <para>
             <code>LineItemGroups</code>- A data set containing <code>LineItems</code> which store
            information about the lines of text, such as an item purchased and its price on a
            receipt.
            </para>
             </li> <li> 
            <para>
             <code>SummaryFields</code>- Contains all other information a receipt, such as header
            information or the vendors name.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AnalyzeExpense service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AnalyzeExpense service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.BadDocumentException">
            Amazon Textract isn't able to read the document. For more information on the document
            limits in Amazon Textract, see <a>limits</a>.
            </exception>
            <exception cref="T:Amazon.Textract.Model.DocumentTooLargeException">
            The document can't be processed because it's too large. The maximum document size
            for synchronous operations 10 MB. The maximum document size for asynchronous operations
            is 500 MB for PDF files.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidS3ObjectException">
            Amazon Textract is unable to access the S3 object that's specified in the request.
            for more information, <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html">Configure
            Access to Amazon S3</a> For troubleshooting information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/troubleshooting.html">Troubleshooting
            Amazon S3</a>
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.UnsupportedDocumentException">
            The format of the input document isn't supported. Documents for synchronous operations
            can be in PNG or JPEG format. Documents for asynchronous operations can also be in
            PDF format.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/AnalyzeExpense">REST API Reference for AnalyzeExpense Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractClient.DetectDocumentText(Amazon.Textract.Model.DetectDocumentTextRequest)">
            <summary>
            Detects text in the input document. Amazon Textract can detect lines of text and the
            words that make up a line of text. The input document must be an image in JPEG or
            PNG format. <code>DetectDocumentText</code> returns the detected text in an array
            of <a>Block</a> objects. 
            
             
            <para>
            Each document page has as an associated <code>Block</code> of type PAGE. Each PAGE
            <code>Block</code> object is the parent of LINE <code>Block</code> objects that represent
            the lines of detected text on a page. A LINE <code>Block</code> object is a parent
            for each word that makes up the line. Words are represented by <code>Block</code>
            objects of type WORD.
            </para>
             
            <para>
             <code>DetectDocumentText</code> is a synchronous operation. To analyze documents
            asynchronously, use <a>StartDocumentTextDetection</a>.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/textract/latest/dg/how-it-works-detecting.html">Document
            Text Detection</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DetectDocumentText service method.</param>
            
            <returns>The response from the DetectDocumentText service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.BadDocumentException">
            Amazon Textract isn't able to read the document. For more information on the document
            limits in Amazon Textract, see <a>limits</a>.
            </exception>
            <exception cref="T:Amazon.Textract.Model.DocumentTooLargeException">
            The document can't be processed because it's too large. The maximum document size
            for synchronous operations 10 MB. The maximum document size for asynchronous operations
            is 500 MB for PDF files.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidS3ObjectException">
            Amazon Textract is unable to access the S3 object that's specified in the request.
            for more information, <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html">Configure
            Access to Amazon S3</a> For troubleshooting information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/troubleshooting.html">Troubleshooting
            Amazon S3</a>
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.UnsupportedDocumentException">
            The format of the input document isn't supported. Documents for synchronous operations
            can be in PNG or JPEG format. Documents for asynchronous operations can also be in
            PDF format.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/DetectDocumentText">REST API Reference for DetectDocumentText Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractClient.DetectDocumentTextAsync(Amazon.Textract.Model.DetectDocumentTextRequest,System.Threading.CancellationToken)">
            <summary>
            Detects text in the input document. Amazon Textract can detect lines of text and the
            words that make up a line of text. The input document must be an image in JPEG or
            PNG format. <code>DetectDocumentText</code> returns the detected text in an array
            of <a>Block</a> objects. 
            
             
            <para>
            Each document page has as an associated <code>Block</code> of type PAGE. Each PAGE
            <code>Block</code> object is the parent of LINE <code>Block</code> objects that represent
            the lines of detected text on a page. A LINE <code>Block</code> object is a parent
            for each word that makes up the line. Words are represented by <code>Block</code>
            objects of type WORD.
            </para>
             
            <para>
             <code>DetectDocumentText</code> is a synchronous operation. To analyze documents
            asynchronously, use <a>StartDocumentTextDetection</a>.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/textract/latest/dg/how-it-works-detecting.html">Document
            Text Detection</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DetectDocumentText service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DetectDocumentText service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.BadDocumentException">
            Amazon Textract isn't able to read the document. For more information on the document
            limits in Amazon Textract, see <a>limits</a>.
            </exception>
            <exception cref="T:Amazon.Textract.Model.DocumentTooLargeException">
            The document can't be processed because it's too large. The maximum document size
            for synchronous operations 10 MB. The maximum document size for asynchronous operations
            is 500 MB for PDF files.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidS3ObjectException">
            Amazon Textract is unable to access the S3 object that's specified in the request.
            for more information, <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html">Configure
            Access to Amazon S3</a> For troubleshooting information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/troubleshooting.html">Troubleshooting
            Amazon S3</a>
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.UnsupportedDocumentException">
            The format of the input document isn't supported. Documents for synchronous operations
            can be in PNG or JPEG format. Documents for asynchronous operations can also be in
            PDF format.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/DetectDocumentText">REST API Reference for DetectDocumentText Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractClient.GetDocumentAnalysis(Amazon.Textract.Model.GetDocumentAnalysisRequest)">
            <summary>
            Gets the results for an Amazon Textract asynchronous operation that analyzes text
            in a document.
            
             
            <para>
            You start asynchronous text analysis by calling <a>StartDocumentAnalysis</a>, which
            returns a job identifier (<code>JobId</code>). When the text analysis operation finishes,
            Amazon Textract publishes a completion status to the Amazon Simple Notification Service
            (Amazon SNS) topic that's registered in the initial call to <code>StartDocumentAnalysis</code>.
            To get the results of the text-detection operation, first check that the status value
            published to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <code>GetDocumentAnalysis</code>,
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartDocumentAnalysis</code>.
            </para>
             
            <para>
             <code>GetDocumentAnalysis</code> returns an array of <a>Block</a> objects. The following
            types of information are returned: 
            </para>
             <ul> <li> 
            <para>
            Form data (key-value pairs). The related information is returned in two <a>Block</a>
            objects, each of type <code>KEY_VALUE_SET</code>: a KEY <code>Block</code> object
            and a VALUE <code>Block</code> object. For example, <i>Name: Ana Silva Carolina</i>
            contains a key and value. <i>Name:</i> is the key. <i>Ana Silva Carolina</i> is the
            value.
            </para>
             </li> <li> 
            <para>
            Table and table cell data. A TABLE <code>Block</code> object contains information
            about a detected table. A CELL <code>Block</code> object is returned for each cell
            in a table.
            </para>
             </li> <li> 
            <para>
            Lines and words of text. A LINE <code>Block</code> object contains one or more WORD
            <code>Block</code> objects. All lines and words that are detected in the document
            are returned (including text that doesn't have a relationship with the value of the
            <code>StartDocumentAnalysis</code> <code>FeatureTypes</code> input parameter). 
            </para>
             </li> </ul> 
            <para>
            Selection elements such as check boxes and option buttons (radio buttons) can be detected
            in form data and in tables. A SELECTION_ELEMENT <code>Block</code> object contains
            information about a selection element, including the selection status.
            </para>
             
            <para>
            Use the <code>MaxResults</code> parameter to limit the number of blocks that are returned.
            If there are more results than specified in <code>MaxResults</code>, the value of
            <code>NextToken</code> in the operation response contains a pagination token for getting
            the next set of results. To get the next page of results, call <code>GetDocumentAnalysis</code>,
            and populate the <code>NextToken</code> request parameter with the token value that's
            returned from the previous call to <code>GetDocumentAnalysis</code>.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/textract/latest/dg/how-it-works-analyzing.html">Document
            Text Analysis</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetDocumentAnalysis service method.</param>
            
            <returns>The response from the GetDocumentAnalysis service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidJobIdException">
            An invalid job identifier was passed to <a>GetDocumentAnalysis</a> or to <a>GetDocumentAnalysis</a>.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidKMSKeyException">
            Indicates you do not have decrypt permissions with the KMS key entered, or the KMS
            key was entered incorrectly.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidS3ObjectException">
            Amazon Textract is unable to access the S3 object that's specified in the request.
            for more information, <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html">Configure
            Access to Amazon S3</a> For troubleshooting information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/troubleshooting.html">Troubleshooting
            Amazon S3</a>
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/GetDocumentAnalysis">REST API Reference for GetDocumentAnalysis Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractClient.GetDocumentAnalysisAsync(Amazon.Textract.Model.GetDocumentAnalysisRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the results for an Amazon Textract asynchronous operation that analyzes text
            in a document.
            
             
            <para>
            You start asynchronous text analysis by calling <a>StartDocumentAnalysis</a>, which
            returns a job identifier (<code>JobId</code>). When the text analysis operation finishes,
            Amazon Textract publishes a completion status to the Amazon Simple Notification Service
            (Amazon SNS) topic that's registered in the initial call to <code>StartDocumentAnalysis</code>.
            To get the results of the text-detection operation, first check that the status value
            published to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <code>GetDocumentAnalysis</code>,
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartDocumentAnalysis</code>.
            </para>
             
            <para>
             <code>GetDocumentAnalysis</code> returns an array of <a>Block</a> objects. The following
            types of information are returned: 
            </para>
             <ul> <li> 
            <para>
            Form data (key-value pairs). The related information is returned in two <a>Block</a>
            objects, each of type <code>KEY_VALUE_SET</code>: a KEY <code>Block</code> object
            and a VALUE <code>Block</code> object. For example, <i>Name: Ana Silva Carolina</i>
            contains a key and value. <i>Name:</i> is the key. <i>Ana Silva Carolina</i> is the
            value.
            </para>
             </li> <li> 
            <para>
            Table and table cell data. A TABLE <code>Block</code> object contains information
            about a detected table. A CELL <code>Block</code> object is returned for each cell
            in a table.
            </para>
             </li> <li> 
            <para>
            Lines and words of text. A LINE <code>Block</code> object contains one or more WORD
            <code>Block</code> objects. All lines and words that are detected in the document
            are returned (including text that doesn't have a relationship with the value of the
            <code>StartDocumentAnalysis</code> <code>FeatureTypes</code> input parameter). 
            </para>
             </li> </ul> 
            <para>
            Selection elements such as check boxes and option buttons (radio buttons) can be detected
            in form data and in tables. A SELECTION_ELEMENT <code>Block</code> object contains
            information about a selection element, including the selection status.
            </para>
             
            <para>
            Use the <code>MaxResults</code> parameter to limit the number of blocks that are returned.
            If there are more results than specified in <code>MaxResults</code>, the value of
            <code>NextToken</code> in the operation response contains a pagination token for getting
            the next set of results. To get the next page of results, call <code>GetDocumentAnalysis</code>,
            and populate the <code>NextToken</code> request parameter with the token value that's
            returned from the previous call to <code>GetDocumentAnalysis</code>.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/textract/latest/dg/how-it-works-analyzing.html">Document
            Text Analysis</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetDocumentAnalysis service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetDocumentAnalysis service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidJobIdException">
            An invalid job identifier was passed to <a>GetDocumentAnalysis</a> or to <a>GetDocumentAnalysis</a>.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidKMSKeyException">
            Indicates you do not have decrypt permissions with the KMS key entered, or the KMS
            key was entered incorrectly.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidS3ObjectException">
            Amazon Textract is unable to access the S3 object that's specified in the request.
            for more information, <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html">Configure
            Access to Amazon S3</a> For troubleshooting information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/troubleshooting.html">Troubleshooting
            Amazon S3</a>
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/GetDocumentAnalysis">REST API Reference for GetDocumentAnalysis Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractClient.GetDocumentTextDetection(Amazon.Textract.Model.GetDocumentTextDetectionRequest)">
            <summary>
            Gets the results for an Amazon Textract asynchronous operation that detects text in
            a document. Amazon Textract can detect lines of text and the words that make up a
            line of text.
            
             
            <para>
            You start asynchronous text detection by calling <a>StartDocumentTextDetection</a>,
            which returns a job identifier (<code>JobId</code>). When the text detection operation
            finishes, Amazon Textract publishes a completion status to the Amazon Simple Notification
            Service (Amazon SNS) topic that's registered in the initial call to <code>StartDocumentTextDetection</code>.
            To get the results of the text-detection operation, first check that the status value
            published to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <code>GetDocumentTextDetection</code>,
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartDocumentTextDetection</code>.
            </para>
             
            <para>
             <code>GetDocumentTextDetection</code> returns an array of <a>Block</a> objects. 
            </para>
             
            <para>
            Each document page has as an associated <code>Block</code> of type PAGE. Each PAGE
            <code>Block</code> object is the parent of LINE <code>Block</code> objects that represent
            the lines of detected text on a page. A LINE <code>Block</code> object is a parent
            for each word that makes up the line. Words are represented by <code>Block</code>
            objects of type WORD.
            </para>
             
            <para>
            Use the MaxResults parameter to limit the number of blocks that are returned. If there
            are more results than specified in <code>MaxResults</code>, the value of <code>NextToken</code>
            in the operation response contains a pagination token for getting the next set of
            results. To get the next page of results, call <code>GetDocumentTextDetection</code>,
            and populate the <code>NextToken</code> request parameter with the token value that's
            returned from the previous call to <code>GetDocumentTextDetection</code>.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/textract/latest/dg/how-it-works-detecting.html">Document
            Text Detection</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetDocumentTextDetection service method.</param>
            
            <returns>The response from the GetDocumentTextDetection service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidJobIdException">
            An invalid job identifier was passed to <a>GetDocumentAnalysis</a> or to <a>GetDocumentAnalysis</a>.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidKMSKeyException">
            Indicates you do not have decrypt permissions with the KMS key entered, or the KMS
            key was entered incorrectly.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidS3ObjectException">
            Amazon Textract is unable to access the S3 object that's specified in the request.
            for more information, <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html">Configure
            Access to Amazon S3</a> For troubleshooting information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/troubleshooting.html">Troubleshooting
            Amazon S3</a>
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/GetDocumentTextDetection">REST API Reference for GetDocumentTextDetection Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractClient.GetDocumentTextDetectionAsync(Amazon.Textract.Model.GetDocumentTextDetectionRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the results for an Amazon Textract asynchronous operation that detects text in
            a document. Amazon Textract can detect lines of text and the words that make up a
            line of text.
            
             
            <para>
            You start asynchronous text detection by calling <a>StartDocumentTextDetection</a>,
            which returns a job identifier (<code>JobId</code>). When the text detection operation
            finishes, Amazon Textract publishes a completion status to the Amazon Simple Notification
            Service (Amazon SNS) topic that's registered in the initial call to <code>StartDocumentTextDetection</code>.
            To get the results of the text-detection operation, first check that the status value
            published to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <code>GetDocumentTextDetection</code>,
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartDocumentTextDetection</code>.
            </para>
             
            <para>
             <code>GetDocumentTextDetection</code> returns an array of <a>Block</a> objects. 
            </para>
             
            <para>
            Each document page has as an associated <code>Block</code> of type PAGE. Each PAGE
            <code>Block</code> object is the parent of LINE <code>Block</code> objects that represent
            the lines of detected text on a page. A LINE <code>Block</code> object is a parent
            for each word that makes up the line. Words are represented by <code>Block</code>
            objects of type WORD.
            </para>
             
            <para>
            Use the MaxResults parameter to limit the number of blocks that are returned. If there
            are more results than specified in <code>MaxResults</code>, the value of <code>NextToken</code>
            in the operation response contains a pagination token for getting the next set of
            results. To get the next page of results, call <code>GetDocumentTextDetection</code>,
            and populate the <code>NextToken</code> request parameter with the token value that's
            returned from the previous call to <code>GetDocumentTextDetection</code>.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/textract/latest/dg/how-it-works-detecting.html">Document
            Text Detection</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetDocumentTextDetection service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetDocumentTextDetection service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidJobIdException">
            An invalid job identifier was passed to <a>GetDocumentAnalysis</a> or to <a>GetDocumentAnalysis</a>.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidKMSKeyException">
            Indicates you do not have decrypt permissions with the KMS key entered, or the KMS
            key was entered incorrectly.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidS3ObjectException">
            Amazon Textract is unable to access the S3 object that's specified in the request.
            for more information, <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html">Configure
            Access to Amazon S3</a> For troubleshooting information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/troubleshooting.html">Troubleshooting
            Amazon S3</a>
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/GetDocumentTextDetection">REST API Reference for GetDocumentTextDetection Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractClient.StartDocumentAnalysis(Amazon.Textract.Model.StartDocumentAnalysisRequest)">
            <summary>
            Starts the asynchronous analysis of an input document for relationships between detected
            items such as key-value pairs, tables, and selection elements.
            
             
            <para>
             <code>StartDocumentAnalysis</code> can analyze text in documents that are in JPEG,
            PNG, and PDF format. The documents are stored in an Amazon S3 bucket. Use <a>DocumentLocation</a>
            to specify the bucket name and file name of the document. 
            </para>
             
            <para>
             <code>StartDocumentAnalysis</code> returns a job identifier (<code>JobId</code>)
            that you use to get the results of the operation. When text analysis is finished,
            Amazon Textract publishes a completion status to the Amazon Simple Notification Service
            (Amazon SNS) topic that you specify in <code>NotificationChannel</code>. To get the
            results of the text analysis operation, first check that the status value published
            to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <a>GetDocumentAnalysis</a>,
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartDocumentAnalysis</code>.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/textract/latest/dg/how-it-works-analyzing.html">Document
            Text Analysis</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartDocumentAnalysis service method.</param>
            
            <returns>The response from the StartDocumentAnalysis service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.BadDocumentException">
            Amazon Textract isn't able to read the document. For more information on the document
            limits in Amazon Textract, see <a>limits</a>.
            </exception>
            <exception cref="T:Amazon.Textract.Model.DocumentTooLargeException">
            The document can't be processed because it's too large. The maximum document size
            for synchronous operations 10 MB. The maximum document size for asynchronous operations
            is 500 MB for PDF files.
            </exception>
            <exception cref="T:Amazon.Textract.Model.IdempotentParameterMismatchException">
            A <code>ClientRequestToken</code> input parameter was reused with an operation, but
            at least one of the other input parameters is different from the previous call to
            the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidKMSKeyException">
            Indicates you do not have decrypt permissions with the KMS key entered, or the KMS
            key was entered incorrectly.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidS3ObjectException">
            Amazon Textract is unable to access the S3 object that's specified in the request.
            for more information, <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html">Configure
            Access to Amazon S3</a> For troubleshooting information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/troubleshooting.html">Troubleshooting
            Amazon S3</a>
            </exception>
            <exception cref="T:Amazon.Textract.Model.LimitExceededException">
            An Amazon Textract service limit was exceeded. For example, if you start too many
            asynchronous jobs concurrently, calls to start operations (<code>StartDocumentTextDetection</code>,
            for example) raise a LimitExceededException exception (HTTP status code: 400) until
            the number of concurrently running jobs is below the Amazon Textract service limit.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.UnsupportedDocumentException">
            The format of the input document isn't supported. Documents for synchronous operations
            can be in PNG or JPEG format. Documents for asynchronous operations can also be in
            PDF format.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/StartDocumentAnalysis">REST API Reference for StartDocumentAnalysis Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractClient.StartDocumentAnalysisAsync(Amazon.Textract.Model.StartDocumentAnalysisRequest,System.Threading.CancellationToken)">
            <summary>
            Starts the asynchronous analysis of an input document for relationships between detected
            items such as key-value pairs, tables, and selection elements.
            
             
            <para>
             <code>StartDocumentAnalysis</code> can analyze text in documents that are in JPEG,
            PNG, and PDF format. The documents are stored in an Amazon S3 bucket. Use <a>DocumentLocation</a>
            to specify the bucket name and file name of the document. 
            </para>
             
            <para>
             <code>StartDocumentAnalysis</code> returns a job identifier (<code>JobId</code>)
            that you use to get the results of the operation. When text analysis is finished,
            Amazon Textract publishes a completion status to the Amazon Simple Notification Service
            (Amazon SNS) topic that you specify in <code>NotificationChannel</code>. To get the
            results of the text analysis operation, first check that the status value published
            to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <a>GetDocumentAnalysis</a>,
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartDocumentAnalysis</code>.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/textract/latest/dg/how-it-works-analyzing.html">Document
            Text Analysis</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartDocumentAnalysis service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartDocumentAnalysis service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.BadDocumentException">
            Amazon Textract isn't able to read the document. For more information on the document
            limits in Amazon Textract, see <a>limits</a>.
            </exception>
            <exception cref="T:Amazon.Textract.Model.DocumentTooLargeException">
            The document can't be processed because it's too large. The maximum document size
            for synchronous operations 10 MB. The maximum document size for asynchronous operations
            is 500 MB for PDF files.
            </exception>
            <exception cref="T:Amazon.Textract.Model.IdempotentParameterMismatchException">
            A <code>ClientRequestToken</code> input parameter was reused with an operation, but
            at least one of the other input parameters is different from the previous call to
            the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidKMSKeyException">
            Indicates you do not have decrypt permissions with the KMS key entered, or the KMS
            key was entered incorrectly.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidS3ObjectException">
            Amazon Textract is unable to access the S3 object that's specified in the request.
            for more information, <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html">Configure
            Access to Amazon S3</a> For troubleshooting information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/troubleshooting.html">Troubleshooting
            Amazon S3</a>
            </exception>
            <exception cref="T:Amazon.Textract.Model.LimitExceededException">
            An Amazon Textract service limit was exceeded. For example, if you start too many
            asynchronous jobs concurrently, calls to start operations (<code>StartDocumentTextDetection</code>,
            for example) raise a LimitExceededException exception (HTTP status code: 400) until
            the number of concurrently running jobs is below the Amazon Textract service limit.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.UnsupportedDocumentException">
            The format of the input document isn't supported. Documents for synchronous operations
            can be in PNG or JPEG format. Documents for asynchronous operations can also be in
            PDF format.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/StartDocumentAnalysis">REST API Reference for StartDocumentAnalysis Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractClient.StartDocumentTextDetection(Amazon.Textract.Model.StartDocumentTextDetectionRequest)">
            <summary>
            Starts the asynchronous detection of text in a document. Amazon Textract can detect
            lines of text and the words that make up a line of text.
            
             
            <para>
             <code>StartDocumentTextDetection</code> can analyze text in documents that are in
            JPEG, PNG, and PDF format. The documents are stored in an Amazon S3 bucket. Use <a>DocumentLocation</a>
            to specify the bucket name and file name of the document. 
            </para>
             
            <para>
             <code>StartTextDetection</code> returns a job identifier (<code>JobId</code>) that
            you use to get the results of the operation. When text detection is finished, Amazon
            Textract publishes a completion status to the Amazon Simple Notification Service (Amazon
            SNS) topic that you specify in <code>NotificationChannel</code>. To get the results
            of the text detection operation, first check that the status value published to the
            Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <a>GetDocumentTextDetection</a>,
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartDocumentTextDetection</code>.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/textract/latest/dg/how-it-works-detecting.html">Document
            Text Detection</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartDocumentTextDetection service method.</param>
            
            <returns>The response from the StartDocumentTextDetection service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.BadDocumentException">
            Amazon Textract isn't able to read the document. For more information on the document
            limits in Amazon Textract, see <a>limits</a>.
            </exception>
            <exception cref="T:Amazon.Textract.Model.DocumentTooLargeException">
            The document can't be processed because it's too large. The maximum document size
            for synchronous operations 10 MB. The maximum document size for asynchronous operations
            is 500 MB for PDF files.
            </exception>
            <exception cref="T:Amazon.Textract.Model.IdempotentParameterMismatchException">
            A <code>ClientRequestToken</code> input parameter was reused with an operation, but
            at least one of the other input parameters is different from the previous call to
            the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidKMSKeyException">
            Indicates you do not have decrypt permissions with the KMS key entered, or the KMS
            key was entered incorrectly.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidS3ObjectException">
            Amazon Textract is unable to access the S3 object that's specified in the request.
            for more information, <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html">Configure
            Access to Amazon S3</a> For troubleshooting information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/troubleshooting.html">Troubleshooting
            Amazon S3</a>
            </exception>
            <exception cref="T:Amazon.Textract.Model.LimitExceededException">
            An Amazon Textract service limit was exceeded. For example, if you start too many
            asynchronous jobs concurrently, calls to start operations (<code>StartDocumentTextDetection</code>,
            for example) raise a LimitExceededException exception (HTTP status code: 400) until
            the number of concurrently running jobs is below the Amazon Textract service limit.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.UnsupportedDocumentException">
            The format of the input document isn't supported. Documents for synchronous operations
            can be in PNG or JPEG format. Documents for asynchronous operations can also be in
            PDF format.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/StartDocumentTextDetection">REST API Reference for StartDocumentTextDetection Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.AmazonTextractClient.StartDocumentTextDetectionAsync(Amazon.Textract.Model.StartDocumentTextDetectionRequest,System.Threading.CancellationToken)">
            <summary>
            Starts the asynchronous detection of text in a document. Amazon Textract can detect
            lines of text and the words that make up a line of text.
            
             
            <para>
             <code>StartDocumentTextDetection</code> can analyze text in documents that are in
            JPEG, PNG, and PDF format. The documents are stored in an Amazon S3 bucket. Use <a>DocumentLocation</a>
            to specify the bucket name and file name of the document. 
            </para>
             
            <para>
             <code>StartTextDetection</code> returns a job identifier (<code>JobId</code>) that
            you use to get the results of the operation. When text detection is finished, Amazon
            Textract publishes a completion status to the Amazon Simple Notification Service (Amazon
            SNS) topic that you specify in <code>NotificationChannel</code>. To get the results
            of the text detection operation, first check that the status value published to the
            Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <a>GetDocumentTextDetection</a>,
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartDocumentTextDetection</code>.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/textract/latest/dg/how-it-works-detecting.html">Document
            Text Detection</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartDocumentTextDetection service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartDocumentTextDetection service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.BadDocumentException">
            Amazon Textract isn't able to read the document. For more information on the document
            limits in Amazon Textract, see <a>limits</a>.
            </exception>
            <exception cref="T:Amazon.Textract.Model.DocumentTooLargeException">
            The document can't be processed because it's too large. The maximum document size
            for synchronous operations 10 MB. The maximum document size for asynchronous operations
            is 500 MB for PDF files.
            </exception>
            <exception cref="T:Amazon.Textract.Model.IdempotentParameterMismatchException">
            A <code>ClientRequestToken</code> input parameter was reused with an operation, but
            at least one of the other input parameters is different from the previous call to
            the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidKMSKeyException">
            Indicates you do not have decrypt permissions with the KMS key entered, or the KMS
            key was entered incorrectly.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidS3ObjectException">
            Amazon Textract is unable to access the S3 object that's specified in the request.
            for more information, <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html">Configure
            Access to Amazon S3</a> For troubleshooting information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/troubleshooting.html">Troubleshooting
            Amazon S3</a>
            </exception>
            <exception cref="T:Amazon.Textract.Model.LimitExceededException">
            An Amazon Textract service limit was exceeded. For example, if you start too many
            asynchronous jobs concurrently, calls to start operations (<code>StartDocumentTextDetection</code>,
            for example) raise a LimitExceededException exception (HTTP status code: 400) until
            the number of concurrently running jobs is below the Amazon Textract service limit.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.UnsupportedDocumentException">
            The format of the input document isn't supported. Documents for synchronous operations
            can be in PNG or JPEG format. Documents for asynchronous operations can also be in
            PDF format.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/StartDocumentTextDetection">REST API Reference for StartDocumentTextDetection Operation</seealso>
        </member>
        <member name="T:Amazon.Textract.IAmazonTextract">
             <summary>
             Interface for accessing Textract
            
             Amazon Textract detects and analyzes text in documents and converts it into machine-readable
             text. This is the API reference documentation for Amazon Textract.
             </summary>
        </member>
        <member name="M:Amazon.Textract.IAmazonTextract.AnalyzeDocument(Amazon.Textract.Model.AnalyzeDocumentRequest)">
            <summary>
            Analyzes an input document for relationships between detected items. 
            
             
            <para>
            The types of information returned are as follows: 
            </para>
             <ul> <li> 
            <para>
            Form data (key-value pairs). The related information is returned in two <a>Block</a>
            objects, each of type <code>KEY_VALUE_SET</code>: a KEY <code>Block</code> object
            and a VALUE <code>Block</code> object. For example, <i>Name: Ana Silva Carolina</i>
            contains a key and value. <i>Name:</i> is the key. <i>Ana Silva Carolina</i> is the
            value.
            </para>
             </li> <li> 
            <para>
            Table and table cell data. A TABLE <code>Block</code> object contains information
            about a detected table. A CELL <code>Block</code> object is returned for each cell
            in a table.
            </para>
             </li> <li> 
            <para>
            Lines and words of text. A LINE <code>Block</code> object contains one or more WORD
            <code>Block</code> objects. All lines and words that are detected in the document
            are returned (including text that doesn't have a relationship with the value of <code>FeatureTypes</code>).
            
            </para>
             </li> </ul> 
            <para>
            Selection elements such as check boxes and option buttons (radio buttons) can be detected
            in form data and in tables. A SELECTION_ELEMENT <code>Block</code> object contains
            information about a selection element, including the selection status.
            </para>
             
            <para>
            You can choose which type of analysis to perform by specifying the <code>FeatureTypes</code>
            list. 
            </para>
             
            <para>
            The output is returned in a list of <code>Block</code> objects.
            </para>
             
            <para>
             <code>AnalyzeDocument</code> is a synchronous operation. To analyze documents asynchronously,
            use <a>StartDocumentAnalysis</a>.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/textract/latest/dg/how-it-works-analyzing.html">Document
            Text Analysis</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AnalyzeDocument service method.</param>
            
            <returns>The response from the AnalyzeDocument service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.BadDocumentException">
            Amazon Textract isn't able to read the document. For more information on the document
            limits in Amazon Textract, see <a>limits</a>.
            </exception>
            <exception cref="T:Amazon.Textract.Model.DocumentTooLargeException">
            The document can't be processed because it's too large. The maximum document size
            for synchronous operations 10 MB. The maximum document size for asynchronous operations
            is 500 MB for PDF files.
            </exception>
            <exception cref="T:Amazon.Textract.Model.HumanLoopQuotaExceededException">
            Indicates you have exceeded the maximum number of active human in the loop workflows
            available
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidS3ObjectException">
            Amazon Textract is unable to access the S3 object that's specified in the request.
            for more information, <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html">Configure
            Access to Amazon S3</a> For troubleshooting information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/troubleshooting.html">Troubleshooting
            Amazon S3</a>
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.UnsupportedDocumentException">
            The format of the input document isn't supported. Documents for synchronous operations
            can be in PNG or JPEG format. Documents for asynchronous operations can also be in
            PDF format.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/AnalyzeDocument">REST API Reference for AnalyzeDocument Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.IAmazonTextract.AnalyzeDocumentAsync(Amazon.Textract.Model.AnalyzeDocumentRequest,System.Threading.CancellationToken)">
            <summary>
            Analyzes an input document for relationships between detected items. 
            
             
            <para>
            The types of information returned are as follows: 
            </para>
             <ul> <li> 
            <para>
            Form data (key-value pairs). The related information is returned in two <a>Block</a>
            objects, each of type <code>KEY_VALUE_SET</code>: a KEY <code>Block</code> object
            and a VALUE <code>Block</code> object. For example, <i>Name: Ana Silva Carolina</i>
            contains a key and value. <i>Name:</i> is the key. <i>Ana Silva Carolina</i> is the
            value.
            </para>
             </li> <li> 
            <para>
            Table and table cell data. A TABLE <code>Block</code> object contains information
            about a detected table. A CELL <code>Block</code> object is returned for each cell
            in a table.
            </para>
             </li> <li> 
            <para>
            Lines and words of text. A LINE <code>Block</code> object contains one or more WORD
            <code>Block</code> objects. All lines and words that are detected in the document
            are returned (including text that doesn't have a relationship with the value of <code>FeatureTypes</code>).
            
            </para>
             </li> </ul> 
            <para>
            Selection elements such as check boxes and option buttons (radio buttons) can be detected
            in form data and in tables. A SELECTION_ELEMENT <code>Block</code> object contains
            information about a selection element, including the selection status.
            </para>
             
            <para>
            You can choose which type of analysis to perform by specifying the <code>FeatureTypes</code>
            list. 
            </para>
             
            <para>
            The output is returned in a list of <code>Block</code> objects.
            </para>
             
            <para>
             <code>AnalyzeDocument</code> is a synchronous operation. To analyze documents asynchronously,
            use <a>StartDocumentAnalysis</a>.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/textract/latest/dg/how-it-works-analyzing.html">Document
            Text Analysis</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AnalyzeDocument service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AnalyzeDocument service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.BadDocumentException">
            Amazon Textract isn't able to read the document. For more information on the document
            limits in Amazon Textract, see <a>limits</a>.
            </exception>
            <exception cref="T:Amazon.Textract.Model.DocumentTooLargeException">
            The document can't be processed because it's too large. The maximum document size
            for synchronous operations 10 MB. The maximum document size for asynchronous operations
            is 500 MB for PDF files.
            </exception>
            <exception cref="T:Amazon.Textract.Model.HumanLoopQuotaExceededException">
            Indicates you have exceeded the maximum number of active human in the loop workflows
            available
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidS3ObjectException">
            Amazon Textract is unable to access the S3 object that's specified in the request.
            for more information, <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html">Configure
            Access to Amazon S3</a> For troubleshooting information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/troubleshooting.html">Troubleshooting
            Amazon S3</a>
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.UnsupportedDocumentException">
            The format of the input document isn't supported. Documents for synchronous operations
            can be in PNG or JPEG format. Documents for asynchronous operations can also be in
            PDF format.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/AnalyzeDocument">REST API Reference for AnalyzeDocument Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.IAmazonTextract.AnalyzeExpense(Amazon.Textract.Model.AnalyzeExpenseRequest)">
            <summary>
            Analyzes an input document for financially related relationships between text.
            
             
            <para>
            Information is returned as <code>ExpenseDocuments</code> and seperated as follows.
            </para>
             <ul> <li> 
            <para>
             <code>LineItemGroups</code>- A data set containing <code>LineItems</code> which store
            information about the lines of text, such as an item purchased and its price on a
            receipt.
            </para>
             </li> <li> 
            <para>
             <code>SummaryFields</code>- Contains all other information a receipt, such as header
            information or the vendors name.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AnalyzeExpense service method.</param>
            
            <returns>The response from the AnalyzeExpense service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.BadDocumentException">
            Amazon Textract isn't able to read the document. For more information on the document
            limits in Amazon Textract, see <a>limits</a>.
            </exception>
            <exception cref="T:Amazon.Textract.Model.DocumentTooLargeException">
            The document can't be processed because it's too large. The maximum document size
            for synchronous operations 10 MB. The maximum document size for asynchronous operations
            is 500 MB for PDF files.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidS3ObjectException">
            Amazon Textract is unable to access the S3 object that's specified in the request.
            for more information, <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html">Configure
            Access to Amazon S3</a> For troubleshooting information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/troubleshooting.html">Troubleshooting
            Amazon S3</a>
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.UnsupportedDocumentException">
            The format of the input document isn't supported. Documents for synchronous operations
            can be in PNG or JPEG format. Documents for asynchronous operations can also be in
            PDF format.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/AnalyzeExpense">REST API Reference for AnalyzeExpense Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.IAmazonTextract.AnalyzeExpenseAsync(Amazon.Textract.Model.AnalyzeExpenseRequest,System.Threading.CancellationToken)">
            <summary>
            Analyzes an input document for financially related relationships between text.
            
             
            <para>
            Information is returned as <code>ExpenseDocuments</code> and seperated as follows.
            </para>
             <ul> <li> 
            <para>
             <code>LineItemGroups</code>- A data set containing <code>LineItems</code> which store
            information about the lines of text, such as an item purchased and its price on a
            receipt.
            </para>
             </li> <li> 
            <para>
             <code>SummaryFields</code>- Contains all other information a receipt, such as header
            information or the vendors name.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AnalyzeExpense service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AnalyzeExpense service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.BadDocumentException">
            Amazon Textract isn't able to read the document. For more information on the document
            limits in Amazon Textract, see <a>limits</a>.
            </exception>
            <exception cref="T:Amazon.Textract.Model.DocumentTooLargeException">
            The document can't be processed because it's too large. The maximum document size
            for synchronous operations 10 MB. The maximum document size for asynchronous operations
            is 500 MB for PDF files.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidS3ObjectException">
            Amazon Textract is unable to access the S3 object that's specified in the request.
            for more information, <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html">Configure
            Access to Amazon S3</a> For troubleshooting information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/troubleshooting.html">Troubleshooting
            Amazon S3</a>
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.UnsupportedDocumentException">
            The format of the input document isn't supported. Documents for synchronous operations
            can be in PNG or JPEG format. Documents for asynchronous operations can also be in
            PDF format.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/AnalyzeExpense">REST API Reference for AnalyzeExpense Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.IAmazonTextract.DetectDocumentText(Amazon.Textract.Model.DetectDocumentTextRequest)">
            <summary>
            Detects text in the input document. Amazon Textract can detect lines of text and the
            words that make up a line of text. The input document must be an image in JPEG or
            PNG format. <code>DetectDocumentText</code> returns the detected text in an array
            of <a>Block</a> objects. 
            
             
            <para>
            Each document page has as an associated <code>Block</code> of type PAGE. Each PAGE
            <code>Block</code> object is the parent of LINE <code>Block</code> objects that represent
            the lines of detected text on a page. A LINE <code>Block</code> object is a parent
            for each word that makes up the line. Words are represented by <code>Block</code>
            objects of type WORD.
            </para>
             
            <para>
             <code>DetectDocumentText</code> is a synchronous operation. To analyze documents
            asynchronously, use <a>StartDocumentTextDetection</a>.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/textract/latest/dg/how-it-works-detecting.html">Document
            Text Detection</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DetectDocumentText service method.</param>
            
            <returns>The response from the DetectDocumentText service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.BadDocumentException">
            Amazon Textract isn't able to read the document. For more information on the document
            limits in Amazon Textract, see <a>limits</a>.
            </exception>
            <exception cref="T:Amazon.Textract.Model.DocumentTooLargeException">
            The document can't be processed because it's too large. The maximum document size
            for synchronous operations 10 MB. The maximum document size for asynchronous operations
            is 500 MB for PDF files.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidS3ObjectException">
            Amazon Textract is unable to access the S3 object that's specified in the request.
            for more information, <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html">Configure
            Access to Amazon S3</a> For troubleshooting information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/troubleshooting.html">Troubleshooting
            Amazon S3</a>
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.UnsupportedDocumentException">
            The format of the input document isn't supported. Documents for synchronous operations
            can be in PNG or JPEG format. Documents for asynchronous operations can also be in
            PDF format.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/DetectDocumentText">REST API Reference for DetectDocumentText Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.IAmazonTextract.DetectDocumentTextAsync(Amazon.Textract.Model.DetectDocumentTextRequest,System.Threading.CancellationToken)">
            <summary>
            Detects text in the input document. Amazon Textract can detect lines of text and the
            words that make up a line of text. The input document must be an image in JPEG or
            PNG format. <code>DetectDocumentText</code> returns the detected text in an array
            of <a>Block</a> objects. 
            
             
            <para>
            Each document page has as an associated <code>Block</code> of type PAGE. Each PAGE
            <code>Block</code> object is the parent of LINE <code>Block</code> objects that represent
            the lines of detected text on a page. A LINE <code>Block</code> object is a parent
            for each word that makes up the line. Words are represented by <code>Block</code>
            objects of type WORD.
            </para>
             
            <para>
             <code>DetectDocumentText</code> is a synchronous operation. To analyze documents
            asynchronously, use <a>StartDocumentTextDetection</a>.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/textract/latest/dg/how-it-works-detecting.html">Document
            Text Detection</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DetectDocumentText service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DetectDocumentText service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.BadDocumentException">
            Amazon Textract isn't able to read the document. For more information on the document
            limits in Amazon Textract, see <a>limits</a>.
            </exception>
            <exception cref="T:Amazon.Textract.Model.DocumentTooLargeException">
            The document can't be processed because it's too large. The maximum document size
            for synchronous operations 10 MB. The maximum document size for asynchronous operations
            is 500 MB for PDF files.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidS3ObjectException">
            Amazon Textract is unable to access the S3 object that's specified in the request.
            for more information, <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html">Configure
            Access to Amazon S3</a> For troubleshooting information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/troubleshooting.html">Troubleshooting
            Amazon S3</a>
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.UnsupportedDocumentException">
            The format of the input document isn't supported. Documents for synchronous operations
            can be in PNG or JPEG format. Documents for asynchronous operations can also be in
            PDF format.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/DetectDocumentText">REST API Reference for DetectDocumentText Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.IAmazonTextract.GetDocumentAnalysis(Amazon.Textract.Model.GetDocumentAnalysisRequest)">
            <summary>
            Gets the results for an Amazon Textract asynchronous operation that analyzes text
            in a document.
            
             
            <para>
            You start asynchronous text analysis by calling <a>StartDocumentAnalysis</a>, which
            returns a job identifier (<code>JobId</code>). When the text analysis operation finishes,
            Amazon Textract publishes a completion status to the Amazon Simple Notification Service
            (Amazon SNS) topic that's registered in the initial call to <code>StartDocumentAnalysis</code>.
            To get the results of the text-detection operation, first check that the status value
            published to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <code>GetDocumentAnalysis</code>,
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartDocumentAnalysis</code>.
            </para>
             
            <para>
             <code>GetDocumentAnalysis</code> returns an array of <a>Block</a> objects. The following
            types of information are returned: 
            </para>
             <ul> <li> 
            <para>
            Form data (key-value pairs). The related information is returned in two <a>Block</a>
            objects, each of type <code>KEY_VALUE_SET</code>: a KEY <code>Block</code> object
            and a VALUE <code>Block</code> object. For example, <i>Name: Ana Silva Carolina</i>
            contains a key and value. <i>Name:</i> is the key. <i>Ana Silva Carolina</i> is the
            value.
            </para>
             </li> <li> 
            <para>
            Table and table cell data. A TABLE <code>Block</code> object contains information
            about a detected table. A CELL <code>Block</code> object is returned for each cell
            in a table.
            </para>
             </li> <li> 
            <para>
            Lines and words of text. A LINE <code>Block</code> object contains one or more WORD
            <code>Block</code> objects. All lines and words that are detected in the document
            are returned (including text that doesn't have a relationship with the value of the
            <code>StartDocumentAnalysis</code> <code>FeatureTypes</code> input parameter). 
            </para>
             </li> </ul> 
            <para>
            Selection elements such as check boxes and option buttons (radio buttons) can be detected
            in form data and in tables. A SELECTION_ELEMENT <code>Block</code> object contains
            information about a selection element, including the selection status.
            </para>
             
            <para>
            Use the <code>MaxResults</code> parameter to limit the number of blocks that are returned.
            If there are more results than specified in <code>MaxResults</code>, the value of
            <code>NextToken</code> in the operation response contains a pagination token for getting
            the next set of results. To get the next page of results, call <code>GetDocumentAnalysis</code>,
            and populate the <code>NextToken</code> request parameter with the token value that's
            returned from the previous call to <code>GetDocumentAnalysis</code>.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/textract/latest/dg/how-it-works-analyzing.html">Document
            Text Analysis</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetDocumentAnalysis service method.</param>
            
            <returns>The response from the GetDocumentAnalysis service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidJobIdException">
            An invalid job identifier was passed to <a>GetDocumentAnalysis</a> or to <a>GetDocumentAnalysis</a>.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidKMSKeyException">
            Indicates you do not have decrypt permissions with the KMS key entered, or the KMS
            key was entered incorrectly.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidS3ObjectException">
            Amazon Textract is unable to access the S3 object that's specified in the request.
            for more information, <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html">Configure
            Access to Amazon S3</a> For troubleshooting information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/troubleshooting.html">Troubleshooting
            Amazon S3</a>
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/GetDocumentAnalysis">REST API Reference for GetDocumentAnalysis Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.IAmazonTextract.GetDocumentAnalysisAsync(Amazon.Textract.Model.GetDocumentAnalysisRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the results for an Amazon Textract asynchronous operation that analyzes text
            in a document.
            
             
            <para>
            You start asynchronous text analysis by calling <a>StartDocumentAnalysis</a>, which
            returns a job identifier (<code>JobId</code>). When the text analysis operation finishes,
            Amazon Textract publishes a completion status to the Amazon Simple Notification Service
            (Amazon SNS) topic that's registered in the initial call to <code>StartDocumentAnalysis</code>.
            To get the results of the text-detection operation, first check that the status value
            published to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <code>GetDocumentAnalysis</code>,
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartDocumentAnalysis</code>.
            </para>
             
            <para>
             <code>GetDocumentAnalysis</code> returns an array of <a>Block</a> objects. The following
            types of information are returned: 
            </para>
             <ul> <li> 
            <para>
            Form data (key-value pairs). The related information is returned in two <a>Block</a>
            objects, each of type <code>KEY_VALUE_SET</code>: a KEY <code>Block</code> object
            and a VALUE <code>Block</code> object. For example, <i>Name: Ana Silva Carolina</i>
            contains a key and value. <i>Name:</i> is the key. <i>Ana Silva Carolina</i> is the
            value.
            </para>
             </li> <li> 
            <para>
            Table and table cell data. A TABLE <code>Block</code> object contains information
            about a detected table. A CELL <code>Block</code> object is returned for each cell
            in a table.
            </para>
             </li> <li> 
            <para>
            Lines and words of text. A LINE <code>Block</code> object contains one or more WORD
            <code>Block</code> objects. All lines and words that are detected in the document
            are returned (including text that doesn't have a relationship with the value of the
            <code>StartDocumentAnalysis</code> <code>FeatureTypes</code> input parameter). 
            </para>
             </li> </ul> 
            <para>
            Selection elements such as check boxes and option buttons (radio buttons) can be detected
            in form data and in tables. A SELECTION_ELEMENT <code>Block</code> object contains
            information about a selection element, including the selection status.
            </para>
             
            <para>
            Use the <code>MaxResults</code> parameter to limit the number of blocks that are returned.
            If there are more results than specified in <code>MaxResults</code>, the value of
            <code>NextToken</code> in the operation response contains a pagination token for getting
            the next set of results. To get the next page of results, call <code>GetDocumentAnalysis</code>,
            and populate the <code>NextToken</code> request parameter with the token value that's
            returned from the previous call to <code>GetDocumentAnalysis</code>.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/textract/latest/dg/how-it-works-analyzing.html">Document
            Text Analysis</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetDocumentAnalysis service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetDocumentAnalysis service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidJobIdException">
            An invalid job identifier was passed to <a>GetDocumentAnalysis</a> or to <a>GetDocumentAnalysis</a>.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidKMSKeyException">
            Indicates you do not have decrypt permissions with the KMS key entered, or the KMS
            key was entered incorrectly.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidS3ObjectException">
            Amazon Textract is unable to access the S3 object that's specified in the request.
            for more information, <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html">Configure
            Access to Amazon S3</a> For troubleshooting information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/troubleshooting.html">Troubleshooting
            Amazon S3</a>
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/GetDocumentAnalysis">REST API Reference for GetDocumentAnalysis Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.IAmazonTextract.GetDocumentTextDetection(Amazon.Textract.Model.GetDocumentTextDetectionRequest)">
            <summary>
            Gets the results for an Amazon Textract asynchronous operation that detects text in
            a document. Amazon Textract can detect lines of text and the words that make up a
            line of text.
            
             
            <para>
            You start asynchronous text detection by calling <a>StartDocumentTextDetection</a>,
            which returns a job identifier (<code>JobId</code>). When the text detection operation
            finishes, Amazon Textract publishes a completion status to the Amazon Simple Notification
            Service (Amazon SNS) topic that's registered in the initial call to <code>StartDocumentTextDetection</code>.
            To get the results of the text-detection operation, first check that the status value
            published to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <code>GetDocumentTextDetection</code>,
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartDocumentTextDetection</code>.
            </para>
             
            <para>
             <code>GetDocumentTextDetection</code> returns an array of <a>Block</a> objects. 
            </para>
             
            <para>
            Each document page has as an associated <code>Block</code> of type PAGE. Each PAGE
            <code>Block</code> object is the parent of LINE <code>Block</code> objects that represent
            the lines of detected text on a page. A LINE <code>Block</code> object is a parent
            for each word that makes up the line. Words are represented by <code>Block</code>
            objects of type WORD.
            </para>
             
            <para>
            Use the MaxResults parameter to limit the number of blocks that are returned. If there
            are more results than specified in <code>MaxResults</code>, the value of <code>NextToken</code>
            in the operation response contains a pagination token for getting the next set of
            results. To get the next page of results, call <code>GetDocumentTextDetection</code>,
            and populate the <code>NextToken</code> request parameter with the token value that's
            returned from the previous call to <code>GetDocumentTextDetection</code>.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/textract/latest/dg/how-it-works-detecting.html">Document
            Text Detection</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetDocumentTextDetection service method.</param>
            
            <returns>The response from the GetDocumentTextDetection service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidJobIdException">
            An invalid job identifier was passed to <a>GetDocumentAnalysis</a> or to <a>GetDocumentAnalysis</a>.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidKMSKeyException">
            Indicates you do not have decrypt permissions with the KMS key entered, or the KMS
            key was entered incorrectly.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidS3ObjectException">
            Amazon Textract is unable to access the S3 object that's specified in the request.
            for more information, <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html">Configure
            Access to Amazon S3</a> For troubleshooting information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/troubleshooting.html">Troubleshooting
            Amazon S3</a>
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/GetDocumentTextDetection">REST API Reference for GetDocumentTextDetection Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.IAmazonTextract.GetDocumentTextDetectionAsync(Amazon.Textract.Model.GetDocumentTextDetectionRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the results for an Amazon Textract asynchronous operation that detects text in
            a document. Amazon Textract can detect lines of text and the words that make up a
            line of text.
            
             
            <para>
            You start asynchronous text detection by calling <a>StartDocumentTextDetection</a>,
            which returns a job identifier (<code>JobId</code>). When the text detection operation
            finishes, Amazon Textract publishes a completion status to the Amazon Simple Notification
            Service (Amazon SNS) topic that's registered in the initial call to <code>StartDocumentTextDetection</code>.
            To get the results of the text-detection operation, first check that the status value
            published to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <code>GetDocumentTextDetection</code>,
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartDocumentTextDetection</code>.
            </para>
             
            <para>
             <code>GetDocumentTextDetection</code> returns an array of <a>Block</a> objects. 
            </para>
             
            <para>
            Each document page has as an associated <code>Block</code> of type PAGE. Each PAGE
            <code>Block</code> object is the parent of LINE <code>Block</code> objects that represent
            the lines of detected text on a page. A LINE <code>Block</code> object is a parent
            for each word that makes up the line. Words are represented by <code>Block</code>
            objects of type WORD.
            </para>
             
            <para>
            Use the MaxResults parameter to limit the number of blocks that are returned. If there
            are more results than specified in <code>MaxResults</code>, the value of <code>NextToken</code>
            in the operation response contains a pagination token for getting the next set of
            results. To get the next page of results, call <code>GetDocumentTextDetection</code>,
            and populate the <code>NextToken</code> request parameter with the token value that's
            returned from the previous call to <code>GetDocumentTextDetection</code>.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/textract/latest/dg/how-it-works-detecting.html">Document
            Text Detection</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetDocumentTextDetection service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetDocumentTextDetection service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidJobIdException">
            An invalid job identifier was passed to <a>GetDocumentAnalysis</a> or to <a>GetDocumentAnalysis</a>.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidKMSKeyException">
            Indicates you do not have decrypt permissions with the KMS key entered, or the KMS
            key was entered incorrectly.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidS3ObjectException">
            Amazon Textract is unable to access the S3 object that's specified in the request.
            for more information, <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html">Configure
            Access to Amazon S3</a> For troubleshooting information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/troubleshooting.html">Troubleshooting
            Amazon S3</a>
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/GetDocumentTextDetection">REST API Reference for GetDocumentTextDetection Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.IAmazonTextract.StartDocumentAnalysis(Amazon.Textract.Model.StartDocumentAnalysisRequest)">
            <summary>
            Starts the asynchronous analysis of an input document for relationships between detected
            items such as key-value pairs, tables, and selection elements.
            
             
            <para>
             <code>StartDocumentAnalysis</code> can analyze text in documents that are in JPEG,
            PNG, and PDF format. The documents are stored in an Amazon S3 bucket. Use <a>DocumentLocation</a>
            to specify the bucket name and file name of the document. 
            </para>
             
            <para>
             <code>StartDocumentAnalysis</code> returns a job identifier (<code>JobId</code>)
            that you use to get the results of the operation. When text analysis is finished,
            Amazon Textract publishes a completion status to the Amazon Simple Notification Service
            (Amazon SNS) topic that you specify in <code>NotificationChannel</code>. To get the
            results of the text analysis operation, first check that the status value published
            to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <a>GetDocumentAnalysis</a>,
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartDocumentAnalysis</code>.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/textract/latest/dg/how-it-works-analyzing.html">Document
            Text Analysis</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartDocumentAnalysis service method.</param>
            
            <returns>The response from the StartDocumentAnalysis service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.BadDocumentException">
            Amazon Textract isn't able to read the document. For more information on the document
            limits in Amazon Textract, see <a>limits</a>.
            </exception>
            <exception cref="T:Amazon.Textract.Model.DocumentTooLargeException">
            The document can't be processed because it's too large. The maximum document size
            for synchronous operations 10 MB. The maximum document size for asynchronous operations
            is 500 MB for PDF files.
            </exception>
            <exception cref="T:Amazon.Textract.Model.IdempotentParameterMismatchException">
            A <code>ClientRequestToken</code> input parameter was reused with an operation, but
            at least one of the other input parameters is different from the previous call to
            the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidKMSKeyException">
            Indicates you do not have decrypt permissions with the KMS key entered, or the KMS
            key was entered incorrectly.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidS3ObjectException">
            Amazon Textract is unable to access the S3 object that's specified in the request.
            for more information, <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html">Configure
            Access to Amazon S3</a> For troubleshooting information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/troubleshooting.html">Troubleshooting
            Amazon S3</a>
            </exception>
            <exception cref="T:Amazon.Textract.Model.LimitExceededException">
            An Amazon Textract service limit was exceeded. For example, if you start too many
            asynchronous jobs concurrently, calls to start operations (<code>StartDocumentTextDetection</code>,
            for example) raise a LimitExceededException exception (HTTP status code: 400) until
            the number of concurrently running jobs is below the Amazon Textract service limit.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.UnsupportedDocumentException">
            The format of the input document isn't supported. Documents for synchronous operations
            can be in PNG or JPEG format. Documents for asynchronous operations can also be in
            PDF format.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/StartDocumentAnalysis">REST API Reference for StartDocumentAnalysis Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.IAmazonTextract.StartDocumentAnalysisAsync(Amazon.Textract.Model.StartDocumentAnalysisRequest,System.Threading.CancellationToken)">
            <summary>
            Starts the asynchronous analysis of an input document for relationships between detected
            items such as key-value pairs, tables, and selection elements.
            
             
            <para>
             <code>StartDocumentAnalysis</code> can analyze text in documents that are in JPEG,
            PNG, and PDF format. The documents are stored in an Amazon S3 bucket. Use <a>DocumentLocation</a>
            to specify the bucket name and file name of the document. 
            </para>
             
            <para>
             <code>StartDocumentAnalysis</code> returns a job identifier (<code>JobId</code>)
            that you use to get the results of the operation. When text analysis is finished,
            Amazon Textract publishes a completion status to the Amazon Simple Notification Service
            (Amazon SNS) topic that you specify in <code>NotificationChannel</code>. To get the
            results of the text analysis operation, first check that the status value published
            to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <a>GetDocumentAnalysis</a>,
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartDocumentAnalysis</code>.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/textract/latest/dg/how-it-works-analyzing.html">Document
            Text Analysis</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartDocumentAnalysis service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartDocumentAnalysis service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.BadDocumentException">
            Amazon Textract isn't able to read the document. For more information on the document
            limits in Amazon Textract, see <a>limits</a>.
            </exception>
            <exception cref="T:Amazon.Textract.Model.DocumentTooLargeException">
            The document can't be processed because it's too large. The maximum document size
            for synchronous operations 10 MB. The maximum document size for asynchronous operations
            is 500 MB for PDF files.
            </exception>
            <exception cref="T:Amazon.Textract.Model.IdempotentParameterMismatchException">
            A <code>ClientRequestToken</code> input parameter was reused with an operation, but
            at least one of the other input parameters is different from the previous call to
            the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidKMSKeyException">
            Indicates you do not have decrypt permissions with the KMS key entered, or the KMS
            key was entered incorrectly.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidS3ObjectException">
            Amazon Textract is unable to access the S3 object that's specified in the request.
            for more information, <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html">Configure
            Access to Amazon S3</a> For troubleshooting information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/troubleshooting.html">Troubleshooting
            Amazon S3</a>
            </exception>
            <exception cref="T:Amazon.Textract.Model.LimitExceededException">
            An Amazon Textract service limit was exceeded. For example, if you start too many
            asynchronous jobs concurrently, calls to start operations (<code>StartDocumentTextDetection</code>,
            for example) raise a LimitExceededException exception (HTTP status code: 400) until
            the number of concurrently running jobs is below the Amazon Textract service limit.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.UnsupportedDocumentException">
            The format of the input document isn't supported. Documents for synchronous operations
            can be in PNG or JPEG format. Documents for asynchronous operations can also be in
            PDF format.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/StartDocumentAnalysis">REST API Reference for StartDocumentAnalysis Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.IAmazonTextract.StartDocumentTextDetection(Amazon.Textract.Model.StartDocumentTextDetectionRequest)">
            <summary>
            Starts the asynchronous detection of text in a document. Amazon Textract can detect
            lines of text and the words that make up a line of text.
            
             
            <para>
             <code>StartDocumentTextDetection</code> can analyze text in documents that are in
            JPEG, PNG, and PDF format. The documents are stored in an Amazon S3 bucket. Use <a>DocumentLocation</a>
            to specify the bucket name and file name of the document. 
            </para>
             
            <para>
             <code>StartTextDetection</code> returns a job identifier (<code>JobId</code>) that
            you use to get the results of the operation. When text detection is finished, Amazon
            Textract publishes a completion status to the Amazon Simple Notification Service (Amazon
            SNS) topic that you specify in <code>NotificationChannel</code>. To get the results
            of the text detection operation, first check that the status value published to the
            Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <a>GetDocumentTextDetection</a>,
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartDocumentTextDetection</code>.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/textract/latest/dg/how-it-works-detecting.html">Document
            Text Detection</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartDocumentTextDetection service method.</param>
            
            <returns>The response from the StartDocumentTextDetection service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.BadDocumentException">
            Amazon Textract isn't able to read the document. For more information on the document
            limits in Amazon Textract, see <a>limits</a>.
            </exception>
            <exception cref="T:Amazon.Textract.Model.DocumentTooLargeException">
            The document can't be processed because it's too large. The maximum document size
            for synchronous operations 10 MB. The maximum document size for asynchronous operations
            is 500 MB for PDF files.
            </exception>
            <exception cref="T:Amazon.Textract.Model.IdempotentParameterMismatchException">
            A <code>ClientRequestToken</code> input parameter was reused with an operation, but
            at least one of the other input parameters is different from the previous call to
            the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidKMSKeyException">
            Indicates you do not have decrypt permissions with the KMS key entered, or the KMS
            key was entered incorrectly.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidS3ObjectException">
            Amazon Textract is unable to access the S3 object that's specified in the request.
            for more information, <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html">Configure
            Access to Amazon S3</a> For troubleshooting information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/troubleshooting.html">Troubleshooting
            Amazon S3</a>
            </exception>
            <exception cref="T:Amazon.Textract.Model.LimitExceededException">
            An Amazon Textract service limit was exceeded. For example, if you start too many
            asynchronous jobs concurrently, calls to start operations (<code>StartDocumentTextDetection</code>,
            for example) raise a LimitExceededException exception (HTTP status code: 400) until
            the number of concurrently running jobs is below the Amazon Textract service limit.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.UnsupportedDocumentException">
            The format of the input document isn't supported. Documents for synchronous operations
            can be in PNG or JPEG format. Documents for asynchronous operations can also be in
            PDF format.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/StartDocumentTextDetection">REST API Reference for StartDocumentTextDetection Operation</seealso>
        </member>
        <member name="M:Amazon.Textract.IAmazonTextract.StartDocumentTextDetectionAsync(Amazon.Textract.Model.StartDocumentTextDetectionRequest,System.Threading.CancellationToken)">
            <summary>
            Starts the asynchronous detection of text in a document. Amazon Textract can detect
            lines of text and the words that make up a line of text.
            
             
            <para>
             <code>StartDocumentTextDetection</code> can analyze text in documents that are in
            JPEG, PNG, and PDF format. The documents are stored in an Amazon S3 bucket. Use <a>DocumentLocation</a>
            to specify the bucket name and file name of the document. 
            </para>
             
            <para>
             <code>StartTextDetection</code> returns a job identifier (<code>JobId</code>) that
            you use to get the results of the operation. When text detection is finished, Amazon
            Textract publishes a completion status to the Amazon Simple Notification Service (Amazon
            SNS) topic that you specify in <code>NotificationChannel</code>. To get the results
            of the text detection operation, first check that the status value published to the
            Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <a>GetDocumentTextDetection</a>,
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartDocumentTextDetection</code>.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/textract/latest/dg/how-it-works-detecting.html">Document
            Text Detection</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartDocumentTextDetection service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartDocumentTextDetection service method, as returned by Textract.</returns>
            <exception cref="T:Amazon.Textract.Model.AccessDeniedException">
            You aren't authorized to perform the action. Use the Amazon Resource Name (ARN) of
            an authorized user or IAM role to perform the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.BadDocumentException">
            Amazon Textract isn't able to read the document. For more information on the document
            limits in Amazon Textract, see <a>limits</a>.
            </exception>
            <exception cref="T:Amazon.Textract.Model.DocumentTooLargeException">
            The document can't be processed because it's too large. The maximum document size
            for synchronous operations 10 MB. The maximum document size for asynchronous operations
            is 500 MB for PDF files.
            </exception>
            <exception cref="T:Amazon.Textract.Model.IdempotentParameterMismatchException">
            A <code>ClientRequestToken</code> input parameter was reused with an operation, but
            at least one of the other input parameters is different from the previous call to
            the operation.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InternalServerErrorException">
            Amazon Textract experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidKMSKeyException">
            Indicates you do not have decrypt permissions with the KMS key entered, or the KMS
            key was entered incorrectly.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidParameterException">
            An input parameter violated a constraint. For example, in synchronous operations,
            an <code>InvalidParameterException</code> exception occurs when neither of the <code>S3Object</code>
            or <code>Bytes</code> values are supplied in the <code>Document</code> request parameter.
            Validate your parameter before calling the API operation again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.InvalidS3ObjectException">
            Amazon Textract is unable to access the S3 object that's specified in the request.
            for more information, <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html">Configure
            Access to Amazon S3</a> For troubleshooting information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/troubleshooting.html">Troubleshooting
            Amazon S3</a>
            </exception>
            <exception cref="T:Amazon.Textract.Model.LimitExceededException">
            An Amazon Textract service limit was exceeded. For example, if you start too many
            asynchronous jobs concurrently, calls to start operations (<code>StartDocumentTextDetection</code>,
            for example) raise a LimitExceededException exception (HTTP status code: 400) until
            the number of concurrently running jobs is below the Amazon Textract service limit.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Textract.
            </exception>
            <exception cref="T:Amazon.Textract.Model.ThrottlingException">
            Amazon Textract is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Textract.Model.UnsupportedDocumentException">
            The format of the input document isn't supported. Documents for synchronous operations
            can be in PNG or JPEG format. Documents for asynchronous operations can also be in
            PDF format.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/StartDocumentTextDetection">REST API Reference for StartDocumentTextDetection Operation</seealso>
        </member>
    </members>
</doc>
