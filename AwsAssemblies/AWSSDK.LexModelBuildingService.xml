<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.LexModelBuildingService</name>
    </assembly>
    <members>
        <member name="T:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceConfig">
            <summary>
            Configuration for accessing Amazon LexModelBuildingService service
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceException">
            <summary>
             Common exception for the LexModelBuildingService service.
             </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonLexModelBuildingServiceException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonLexModelBuildingServiceException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonLexModelBuildingServiceException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonLexModelBuildingServiceException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonLexModelBuildingServiceException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the AmazonLexModelBuildingServiceException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Internal.AmazonLexModelBuildingServiceMetadata">
            <summary>
            Service metadata for  Amazon LexModelBuildingService service
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Internal.AmazonLexModelBuildingServiceMetadata.ServiceId">
            <summary>
            Gets the value of the Service Id.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Internal.AmazonLexModelBuildingServiceMetadata.OperationNameMapping">
            <summary>
            Gets the dictionary that gives mapping of renamed operations
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.AccessDeniedException">
            <summary>
            Your IAM user or role does not have permission to call the Amazon Lex V2 APIs required
            to migrate your bot.
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.AccessDeniedException.#ctor(System.String)">
            <summary>
            Constructs a new AccessDeniedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.AccessDeniedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.AccessDeniedException.#ctor(System.Exception)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.AccessDeniedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.AccessDeniedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.AccessDeniedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the AccessDeniedException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.AccessDeniedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            <summary>
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.BadRequestException.#ctor(System.String)">
            <summary>
            Constructs a new BadRequestException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.BadRequestException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of BadRequestException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.BadRequestException.#ctor(System.Exception)">
            <summary>
            Construct instance of BadRequestException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.BadRequestException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of BadRequestException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.BadRequestException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of BadRequestException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.BadRequestException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the BadRequestException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.BadRequestException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.BotAliasMetadata">
            <summary>
            Provides information about a bot alias.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.BotAliasMetadata.BotName">
            <summary>
            Gets and sets the property BotName. 
            <para>
            The name of the bot to which the alias points.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.BotAliasMetadata.BotVersion">
            <summary>
            Gets and sets the property BotVersion. 
            <para>
            The version of the Amazon Lex bot to which the alias points.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.BotAliasMetadata.Checksum">
            <summary>
            Gets and sets the property Checksum. 
            <para>
            Checksum of the bot alias.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.BotAliasMetadata.ConversationLogs">
            <summary>
            Gets and sets the property ConversationLogs. 
            <para>
            Settings that determine how Amazon Lex uses conversation logs for the alias.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.BotAliasMetadata.CreatedDate">
            <summary>
            Gets and sets the property CreatedDate. 
            <para>
            The date that the bot alias was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.BotAliasMetadata.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the bot alias.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.BotAliasMetadata.LastUpdatedDate">
            <summary>
            Gets and sets the property LastUpdatedDate. 
            <para>
            The date that the bot alias was updated. When you create a resource, the creation
            date and last updated date are the same.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.BotAliasMetadata.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the bot alias.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.BotChannelAssociation">
            <summary>
            Represents an association between an Amazon Lex bot and an external messaging platform.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.BotChannelAssociation.BotAlias">
            <summary>
            Gets and sets the property BotAlias. 
            <para>
            An alias pointing to the specific version of the Amazon Lex bot to which this association
            is being made. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.BotChannelAssociation.BotConfiguration">
            <summary>
            Gets and sets the property BotConfiguration. 
            <para>
            Provides information necessary to communicate with the messaging platform. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.BotChannelAssociation.BotName">
            <summary>
            Gets and sets the property BotName. 
            <para>
            The name of the Amazon Lex bot to which this association is being made. 
            </para>
             <note> 
            <para>
            Currently, Amazon Lex supports associations with Facebook and Slack, and Twilio.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.BotChannelAssociation.CreatedDate">
            <summary>
            Gets and sets the property CreatedDate. 
            <para>
            The date that the association between the Amazon Lex bot and the channel was created.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.BotChannelAssociation.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A text description of the association you are creating. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.BotChannelAssociation.FailureReason">
            <summary>
            Gets and sets the property FailureReason. 
            <para>
            If <code>status</code> is <code>FAILED</code>, Amazon Lex provides the reason that
            it failed to create the association.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.BotChannelAssociation.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the association between the bot and the channel. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.BotChannelAssociation.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the bot channel. 
            </para>
             <ul> <li> 
            <para>
             <code>CREATED</code> - The channel has been created and is ready for use.
            </para>
             </li> <li> 
            <para>
             <code>IN_PROGRESS</code> - Channel creation is in progress.
            </para>
             </li> <li> 
            <para>
             <code>FAILED</code> - There was an error creating the channel. For information about
            the reason for the failure, see the <code>failureReason</code> field.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.BotChannelAssociation.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            Specifies the type of association by indicating the type of channel being established
            between the Amazon Lex bot and the external messaging platform.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.BotMetadata">
            <summary>
            Provides information about a bot. .
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.BotMetadata.CreatedDate">
            <summary>
            Gets and sets the property CreatedDate. 
            <para>
            The date that the bot was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.BotMetadata.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the bot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.BotMetadata.LastUpdatedDate">
            <summary>
            Gets and sets the property LastUpdatedDate. 
            <para>
            The date that the bot was updated. When you create a bot, the creation date and last
            updated date are the same. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.BotMetadata.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the bot. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.BotMetadata.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the bot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.BotMetadata.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            The version of the bot. For a new bot, the version is always <code>$LATEST</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.BuiltinIntentMetadata">
            <summary>
            Provides metadata for a built-in intent.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.BuiltinIntentMetadata.Signature">
            <summary>
            Gets and sets the property Signature. 
            <para>
            A unique identifier for the built-in intent. To find the signature for an intent,
            see <a href="https://developer.amazon.com/public/solutions/alexa/alexa-skills-kit/docs/built-in-intent-ref/standard-intents">Standard
            Built-in Intents</a> in the <i>Alexa Skills Kit</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.BuiltinIntentMetadata.SupportedLocales">
            <summary>
            Gets and sets the property SupportedLocales. 
            <para>
            A list of identifiers for the locales that the intent supports.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.BuiltinIntentSlot">
            <summary>
            Provides information about a slot used in a built-in intent.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.BuiltinIntentSlot.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            A list of the slots defined for the intent.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.BuiltinSlotTypeMetadata">
            <summary>
            Provides information about a built in slot type.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.BuiltinSlotTypeMetadata.Signature">
            <summary>
            Gets and sets the property Signature. 
            <para>
            A unique identifier for the built-in slot type. To find the signature for a slot type,
            see <a href="https://developer.amazon.com/public/solutions/alexa/alexa-skills-kit/docs/built-in-intent-ref/slot-type-reference">Slot
            Type Reference</a> in the <i>Alexa Skills Kit</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.BuiltinSlotTypeMetadata.SupportedLocales">
            <summary>
            Gets and sets the property SupportedLocales. 
            <para>
            A list of target locales for the slot. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.CodeHook">
            <summary>
            Specifies a Lambda function that verifies requests to a bot or fulfills the user's
            request to a bot..
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CodeHook.MessageVersion">
            <summary>
            Gets and sets the property MessageVersion. 
            <para>
            The version of the request-response that you want Amazon Lex to use to invoke your
            Lambda function. For more information, see <a>using-lambda</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CodeHook.Uri">
            <summary>
            Gets and sets the property Uri. 
            <para>
            The Amazon Resource Name (ARN) of the Lambda function.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.ConflictException">
            <summary>
            There was a conflict processing the request. Try your request again.
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.ConflictException.#ctor(System.String)">
            <summary>
            Constructs a new ConflictException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.ConflictException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.ConflictException.#ctor(System.Exception)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.ConflictException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.ConflictException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.ConflictException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ConflictException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.ConflictException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.ConversationLogsRequest">
            <summary>
            Provides the settings needed for conversation logs.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.ConversationLogsRequest.IamRoleArn">
            <summary>
            Gets and sets the property IamRoleArn. 
            <para>
            The Amazon Resource Name (ARN) of an IAM role with permission to write to your CloudWatch
            Logs for text logs and your S3 bucket for audio logs. If audio encryption is enabled,
            this role also provides access permission for the AWS KMS key used for encrypting
            audio logs. For more information, see <a href="https://docs.aws.amazon.com/lex/latest/dg/conversation-logs-role-and-policy.html">Creating
            an IAM Role and Policy for Conversation Logs</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.ConversationLogsRequest.LogSettings">
            <summary>
            Gets and sets the property LogSettings. 
            <para>
            The settings for your conversation logs. You can log the conversation text, conversation
            audio, or both.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.ConversationLogsResponse">
            <summary>
            Contains information about conversation log settings.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.ConversationLogsResponse.IamRoleArn">
            <summary>
            Gets and sets the property IamRoleArn. 
            <para>
            The Amazon Resource Name (ARN) of the IAM role used to write your logs to CloudWatch
            Logs or an S3 bucket.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.ConversationLogsResponse.LogSettings">
            <summary>
            Gets and sets the property LogSettings. 
            <para>
            The settings for your conversation logs. You can log text, audio, or both.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.CreateBotVersionRequest">
            <summary>
            Container for the parameters to the CreateBotVersion operation.
            Creates a new version of the bot based on the <code>$LATEST</code> version. If the
            <code>$LATEST</code> version of this resource hasn't changed since you created the
            last version, Amazon Lex doesn't create a new version. It returns the last created
            version.
            
             <note> 
            <para>
            You can update only the <code>$LATEST</code> version of the bot. You can't update
            the numbered versions that you create with the <code>CreateBotVersion</code> operation.
            </para>
             </note> 
            <para>
             When you create the first version of a bot, Amazon Lex sets the version to 1. Subsequent
            versions increment by 1. For more information, see <a>versioning-intro</a>. 
            </para>
             
            <para>
             This operation requires permission for the <code>lex:CreateBotVersion</code> action.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateBotVersionRequest.Checksum">
            <summary>
            Gets and sets the property Checksum. 
            <para>
            Identifies a specific revision of the <code>$LATEST</code> version of the bot. If
            you specify a checksum and the <code>$LATEST</code> version of the bot has a different
            checksum, a <code>PreconditionFailedException</code> exception is returned and Amazon
            Lex doesn't publish a new version. If you don't specify a checksum, Amazon Lex publishes
            the <code>$LATEST</code> version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateBotVersionRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the bot that you want to create a new version of. The name is case sensitive.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.CreateBotVersionResponse">
            <summary>
            This is the response object from the CreateBotVersion operation.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateBotVersionResponse.AbortStatement">
            <summary>
            Gets and sets the property AbortStatement. 
            <para>
            The message that Amazon Lex uses to cancel a conversation. For more information, see
            <a>PutBot</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateBotVersionResponse.Checksum">
            <summary>
            Gets and sets the property Checksum. 
            <para>
            Checksum identifying the version of the bot that was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateBotVersionResponse.ChildDirected">
            <summary>
            Gets and sets the property ChildDirected. 
            <para>
            For each Amazon Lex bot created with the Amazon Lex Model Building Service, you must
            specify whether your use of Amazon Lex is related to a website, program, or other
            application that is directed or targeted, in whole or in part, to children under age
            13 and subject to the Children's Online Privacy Protection Act (COPPA) by specifying
            <code>true</code> or <code>false</code> in the <code>childDirected</code> field. By
            specifying <code>true</code> in the <code>childDirected</code> field, you confirm
            that your use of Amazon Lex <b>is</b> related to a website, program, or other application
            that is directed or targeted, in whole or in part, to children under age 13 and subject
            to COPPA. By specifying <code>false</code> in the <code>childDirected</code> field,
            you confirm that your use of Amazon Lex <b>is not</b> related to a website, program,
            or other application that is directed or targeted, in whole or in part, to children
            under age 13 and subject to COPPA. You may not specify a default value for the <code>childDirected</code>
            field that does not accurately reflect whether your use of Amazon Lex is related to
            a website, program, or other application that is directed or targeted, in whole or
            in part, to children under age 13 and subject to COPPA.
            </para>
             
            <para>
            If your use of Amazon Lex relates to a website, program, or other application that
            is directed in whole or in part, to children under age 13, you must obtain any required
            verifiable parental consent under COPPA. For information regarding the use of Amazon
            Lex in connection with websites, programs, or other applications that are directed
            or targeted, in whole or in part, to children under age 13, see the <a href="https://aws.amazon.com/lex/faqs#data-security">Amazon
            Lex FAQ.</a> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateBotVersionResponse.ClarificationPrompt">
            <summary>
            Gets and sets the property ClarificationPrompt. 
            <para>
            The message that Amazon Lex uses when it doesn't understand the user's request. For
            more information, see <a>PutBot</a>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateBotVersionResponse.CreatedDate">
            <summary>
            Gets and sets the property CreatedDate. 
            <para>
            The date when the bot version was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateBotVersionResponse.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the bot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateBotVersionResponse.DetectSentiment">
            <summary>
            Gets and sets the property DetectSentiment. 
            <para>
            Indicates whether utterances entered by the user should be sent to Amazon Comprehend
            for sentiment analysis.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateBotVersionResponse.EnableModelImprovements">
            <summary>
            Gets and sets the property EnableModelImprovements. 
            <para>
            Indicates whether the bot uses accuracy improvements. <code>true</code> indicates
            that the bot is using the improvements, otherwise, <code>false</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateBotVersionResponse.FailureReason">
            <summary>
            Gets and sets the property FailureReason. 
            <para>
            If <code>status</code> is <code>FAILED</code>, Amazon Lex provides the reason that
            it failed to build the bot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateBotVersionResponse.IdleSessionTTLInSeconds">
            <summary>
            Gets and sets the property IdleSessionTTLInSeconds. 
            <para>
            The maximum time in seconds that Amazon Lex retains the data gathered in a conversation.
            For more information, see <a>PutBot</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateBotVersionResponse.Intents">
            <summary>
            Gets and sets the property Intents. 
            <para>
            An array of <code>Intent</code> objects. For more information, see <a>PutBot</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateBotVersionResponse.LastUpdatedDate">
            <summary>
            Gets and sets the property LastUpdatedDate. 
            <para>
            The date when the <code>$LATEST</code> version of this bot was updated. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateBotVersionResponse.Locale">
            <summary>
            Gets and sets the property Locale. 
            <para>
             Specifies the target locale for the bot. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateBotVersionResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the bot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateBotVersionResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
             When you send a request to create or update a bot, Amazon Lex sets the <code>status</code>
            response element to <code>BUILDING</code>. After Amazon Lex builds the bot, it sets
            <code>status</code> to <code>READY</code>. If Amazon Lex can't build the bot, it sets
            <code>status</code> to <code>FAILED</code>. Amazon Lex returns the reason for the
            failure in the <code>failureReason</code> response element. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateBotVersionResponse.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            The version of the bot. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateBotVersionResponse.VoiceId">
            <summary>
            Gets and sets the property VoiceId. 
            <para>
            The Amazon Polly voice ID that Amazon Lex uses for voice interactions with the user.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.CreateIntentVersionRequest">
            <summary>
            Container for the parameters to the CreateIntentVersion operation.
            Creates a new version of an intent based on the <code>$LATEST</code> version of the
            intent. If the <code>$LATEST</code> version of this intent hasn't changed since you
            last updated it, Amazon Lex doesn't create a new version. It returns the last version
            you created.
            
             <note> 
            <para>
            You can update only the <code>$LATEST</code> version of the intent. You can't update
            the numbered versions that you create with the <code>CreateIntentVersion</code> operation.
            </para>
             </note> 
            <para>
             When you create a version of an intent, Amazon Lex sets the version to 1. Subsequent
            versions increment by 1. For more information, see <a>versioning-intro</a>. 
            </para>
             
            <para>
            This operation requires permissions to perform the <code>lex:CreateIntentVersion</code>
            action. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateIntentVersionRequest.Checksum">
            <summary>
            Gets and sets the property Checksum. 
            <para>
            Checksum of the <code>$LATEST</code> version of the intent that should be used to
            create the new version. If you specify a checksum and the <code>$LATEST</code> version
            of the intent has a different checksum, Amazon Lex returns a <code>PreconditionFailedException</code>
            exception and doesn't publish a new version. If you don't specify a checksum, Amazon
            Lex publishes the <code>$LATEST</code> version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateIntentVersionRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the intent that you want to create a new version of. The name is case
            sensitive. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.CreateIntentVersionResponse">
            <summary>
            This is the response object from the CreateIntentVersion operation.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateIntentVersionResponse.Checksum">
            <summary>
            Gets and sets the property Checksum. 
            <para>
            Checksum of the intent version created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateIntentVersionResponse.ConclusionStatement">
            <summary>
            Gets and sets the property ConclusionStatement. 
            <para>
            After the Lambda function specified in the <code>fulfillmentActivity</code> field
            fulfills the intent, Amazon Lex conveys this statement to the user. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateIntentVersionResponse.ConfirmationPrompt">
            <summary>
            Gets and sets the property ConfirmationPrompt. 
            <para>
            If defined, the prompt that Amazon Lex uses to confirm the user's intent before fulfilling
            it. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateIntentVersionResponse.CreatedDate">
            <summary>
            Gets and sets the property CreatedDate. 
            <para>
            The date that the intent was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateIntentVersionResponse.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the intent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateIntentVersionResponse.DialogCodeHook">
            <summary>
            Gets and sets the property DialogCodeHook. 
            <para>
            If defined, Amazon Lex invokes this Lambda function for each user input.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateIntentVersionResponse.FollowUpPrompt">
            <summary>
            Gets and sets the property FollowUpPrompt. 
            <para>
            If defined, Amazon Lex uses this prompt to solicit additional user activity after
            the intent is fulfilled. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateIntentVersionResponse.FulfillmentActivity">
            <summary>
            Gets and sets the property FulfillmentActivity. 
            <para>
             Describes how the intent is fulfilled. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateIntentVersionResponse.InputContexts">
            <summary>
            Gets and sets the property InputContexts. 
            <para>
            An array of <code>InputContext</code> objects that lists the contexts that must be
            active for Amazon Lex to choose the intent in a conversation with the user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateIntentVersionResponse.KendraConfiguration">
            <summary>
            Gets and sets the property KendraConfiguration. 
            <para>
            Configuration information, if any, for connecting an Amazon Kendra index with the
            <code>AMAZON.KendraSearchIntent</code> intent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateIntentVersionResponse.LastUpdatedDate">
            <summary>
            Gets and sets the property LastUpdatedDate. 
            <para>
            The date that the intent was updated. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateIntentVersionResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the intent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateIntentVersionResponse.OutputContexts">
            <summary>
            Gets and sets the property OutputContexts. 
            <para>
            An array of <code>OutputContext</code> objects that lists the contexts that the intent
            activates when the intent is fulfilled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateIntentVersionResponse.ParentIntentSignature">
            <summary>
            Gets and sets the property ParentIntentSignature. 
            <para>
            A unique identifier for a built-in intent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateIntentVersionResponse.RejectionStatement">
            <summary>
            Gets and sets the property RejectionStatement. 
            <para>
            If the user answers "no" to the question defined in <code>confirmationPrompt</code>,
            Amazon Lex responds with this statement to acknowledge that the intent was canceled.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateIntentVersionResponse.SampleUtterances">
            <summary>
            Gets and sets the property SampleUtterances. 
            <para>
            An array of sample utterances configured for the intent. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateIntentVersionResponse.Slots">
            <summary>
            Gets and sets the property Slots. 
            <para>
            An array of slot types that defines the information required to fulfill the intent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateIntentVersionResponse.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            The version number assigned to the new version of the intent.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.CreateSlotTypeVersionRequest">
            <summary>
            Container for the parameters to the CreateSlotTypeVersion operation.
            Creates a new version of a slot type based on the <code>$LATEST</code> version of
            the specified slot type. If the <code>$LATEST</code> version of this resource has
            not changed since the last version that you created, Amazon Lex doesn't create a new
            version. It returns the last version that you created. 
            
             <note> 
            <para>
            You can update only the <code>$LATEST</code> version of a slot type. You can't update
            the numbered versions that you create with the <code>CreateSlotTypeVersion</code>
            operation.
            </para>
             </note> 
            <para>
            When you create a version of a slot type, Amazon Lex sets the version to 1. Subsequent
            versions increment by 1. For more information, see <a>versioning-intro</a>. 
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:CreateSlotTypeVersion</code>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateSlotTypeVersionRequest.Checksum">
            <summary>
            Gets and sets the property Checksum. 
            <para>
            Checksum for the <code>$LATEST</code> version of the slot type that you want to publish.
            If you specify a checksum and the <code>$LATEST</code> version of the slot type has
            a different checksum, Amazon Lex returns a <code>PreconditionFailedException</code>
            exception and doesn't publish the new version. If you don't specify a checksum, Amazon
            Lex publishes the <code>$LATEST</code> version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateSlotTypeVersionRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the slot type that you want to create a new version for. The name is case
            sensitive. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.CreateSlotTypeVersionResponse">
            <summary>
            This is the response object from the CreateSlotTypeVersion operation.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateSlotTypeVersionResponse.Checksum">
            <summary>
            Gets and sets the property Checksum. 
            <para>
            Checksum of the <code>$LATEST</code> version of the slot type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateSlotTypeVersionResponse.CreatedDate">
            <summary>
            Gets and sets the property CreatedDate. 
            <para>
            The date that the slot type was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateSlotTypeVersionResponse.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the slot type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateSlotTypeVersionResponse.EnumerationValues">
            <summary>
            Gets and sets the property EnumerationValues. 
            <para>
            A list of <code>EnumerationValue</code> objects that defines the values that the slot
            type can take.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateSlotTypeVersionResponse.LastUpdatedDate">
            <summary>
            Gets and sets the property LastUpdatedDate. 
            <para>
            The date that the slot type was updated. When you create a resource, the creation
            date and last update date are the same.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateSlotTypeVersionResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the slot type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateSlotTypeVersionResponse.ParentSlotTypeSignature">
            <summary>
            Gets and sets the property ParentSlotTypeSignature. 
            <para>
            The built-in slot type used a the parent of the slot type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateSlotTypeVersionResponse.SlotTypeConfigurations">
            <summary>
            Gets and sets the property SlotTypeConfigurations. 
            <para>
            Configuration information that extends the parent built-in slot type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateSlotTypeVersionResponse.ValueSelectionStrategy">
            <summary>
            Gets and sets the property ValueSelectionStrategy. 
            <para>
            The strategy that Amazon Lex uses to determine the value of the slot. For more information,
            see <a>PutSlotType</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateSlotTypeVersionResponse.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            The version assigned to the new slot type version. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.DeleteBotAliasRequest">
            <summary>
            Container for the parameters to the DeleteBotAlias operation.
            Deletes an alias for the specified bot. 
            
             
            <para>
            You can't delete an alias that is used in the association between a bot and a messaging
            channel. If an alias is used in a channel association, the <code>DeleteBot</code>
            operation returns a <code>ResourceInUseException</code> exception that includes a
            reference to the channel association that refers to the bot. You can remove the reference
            to the alias by deleting the channel association. If you get the same exception again,
            delete the referring association until the <code>DeleteBotAlias</code> operation is
            successful.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.DeleteBotAliasRequest.BotName">
            <summary>
            Gets and sets the property BotName. 
            <para>
            The name of the bot that the alias points to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.DeleteBotAliasRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the alias to delete. The name is case sensitive. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.DeleteBotAliasResponse">
            <summary>
            This is the response object from the DeleteBotAlias operation.
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.DeleteBotChannelAssociationRequest">
            <summary>
            Container for the parameters to the DeleteBotChannelAssociation operation.
            Deletes the association between an Amazon Lex bot and a messaging platform.
            
             
            <para>
            This operation requires permission for the <code>lex:DeleteBotChannelAssociation</code>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.DeleteBotChannelAssociationRequest.BotAlias">
            <summary>
            Gets and sets the property BotAlias. 
            <para>
            An alias that points to the specific version of the Amazon Lex bot to which this association
            is being made.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.DeleteBotChannelAssociationRequest.BotName">
            <summary>
            Gets and sets the property BotName. 
            <para>
            The name of the Amazon Lex bot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.DeleteBotChannelAssociationRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the association. The name is case sensitive. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.DeleteBotChannelAssociationResponse">
            <summary>
            This is the response object from the DeleteBotChannelAssociation operation.
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.DeleteBotRequest">
            <summary>
            Container for the parameters to the DeleteBot operation.
            Deletes all versions of the bot, including the <code>$LATEST</code> version. To delete
            a specific version of the bot, use the <a>DeleteBotVersion</a> operation. The <code>DeleteBot</code>
            operation doesn't immediately remove the bot schema. Instead, it is marked for deletion
            and removed later.
            
             
            <para>
            Amazon Lex stores utterances indefinitely for improving the ability of your bot to
            respond to user inputs. These utterances are not removed when the bot is deleted.
            To remove the utterances, use the <a>DeleteUtterances</a> operation.
            </para>
             
            <para>
            If a bot has an alias, you can't delete it. Instead, the <code>DeleteBot</code> operation
            returns a <code>ResourceInUseException</code> exception that includes a reference
            to the alias that refers to the bot. To remove the reference to the bot, delete the
            alias. If you get the same exception again, delete the referring alias until the <code>DeleteBot</code>
            operation is successful.
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:DeleteBot</code> action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.DeleteBotRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the bot. The name is case sensitive. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.DeleteBotResponse">
            <summary>
            This is the response object from the DeleteBot operation.
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.DeleteBotVersionRequest">
            <summary>
            Container for the parameters to the DeleteBotVersion operation.
            Deletes a specific version of a bot. To delete all versions of a bot, use the <a>DeleteBot</a>
            operation. 
            
             
            <para>
            This operation requires permissions for the <code>lex:DeleteBotVersion</code> action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.DeleteBotVersionRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the bot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.DeleteBotVersionRequest.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            The version of the bot to delete. You cannot delete the <code>$LATEST</code> version
            of the bot. To delete the <code>$LATEST</code> version, use the <a>DeleteBot</a> operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.DeleteBotVersionResponse">
            <summary>
            This is the response object from the DeleteBotVersion operation.
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.DeleteIntentRequest">
            <summary>
            Container for the parameters to the DeleteIntent operation.
            Deletes all versions of the intent, including the <code>$LATEST</code> version. To
            delete a specific version of the intent, use the <a>DeleteIntentVersion</a> operation.
            
             
            <para>
             You can delete a version of an intent only if it is not referenced. To delete an
            intent that is referred to in one or more bots (see <a>how-it-works</a>), you must
            remove those references first. 
            </para>
             <note> 
            <para>
             If you get the <code>ResourceInUseException</code> exception, it provides an example
            reference that shows where the intent is referenced. To remove the reference to the
            intent, either update the bot or delete it. If you get the same exception when you
            attempt to delete the intent again, repeat until the intent has no references and
            the call to <code>DeleteIntent</code> is successful. 
            </para>
             </note> 
            <para>
             This operation requires permission for the <code>lex:DeleteIntent</code> action.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.DeleteIntentRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the intent. The name is case sensitive. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.DeleteIntentResponse">
            <summary>
            This is the response object from the DeleteIntent operation.
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.DeleteIntentVersionRequest">
            <summary>
            Container for the parameters to the DeleteIntentVersion operation.
            Deletes a specific version of an intent. To delete all versions of a intent, use the
            <a>DeleteIntent</a> operation. 
            
             
            <para>
            This operation requires permissions for the <code>lex:DeleteIntentVersion</code> action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.DeleteIntentVersionRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the intent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.DeleteIntentVersionRequest.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            The version of the intent to delete. You cannot delete the <code>$LATEST</code> version
            of the intent. To delete the <code>$LATEST</code> version, use the <a>DeleteIntent</a>
            operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.DeleteIntentVersionResponse">
            <summary>
            This is the response object from the DeleteIntentVersion operation.
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.DeleteSlotTypeRequest">
            <summary>
            Container for the parameters to the DeleteSlotType operation.
            Deletes all versions of the slot type, including the <code>$LATEST</code> version.
            To delete a specific version of the slot type, use the <a>DeleteSlotTypeVersion</a>
            operation.
            
             
            <para>
             You can delete a version of a slot type only if it is not referenced. To delete a
            slot type that is referred to in one or more intents, you must remove those references
            first. 
            </para>
             <note> 
            <para>
             If you get the <code>ResourceInUseException</code> exception, the exception provides
            an example reference that shows the intent where the slot type is referenced. To remove
            the reference to the slot type, either update the intent or delete it. If you get
            the same exception when you attempt to delete the slot type again, repeat until the
            slot type has no references and the <code>DeleteSlotType</code> call is successful.
            
            </para>
             </note> 
            <para>
            This operation requires permission for the <code>lex:DeleteSlotType</code> action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.DeleteSlotTypeRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the slot type. The name is case sensitive. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.DeleteSlotTypeResponse">
            <summary>
            This is the response object from the DeleteSlotType operation.
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.DeleteSlotTypeVersionRequest">
            <summary>
            Container for the parameters to the DeleteSlotTypeVersion operation.
            Deletes a specific version of a slot type. To delete all versions of a slot type,
            use the <a>DeleteSlotType</a> operation. 
            
             
            <para>
            This operation requires permissions for the <code>lex:DeleteSlotTypeVersion</code>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.DeleteSlotTypeVersionRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the slot type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.DeleteSlotTypeVersionRequest.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            The version of the slot type to delete. You cannot delete the <code>$LATEST</code>
            version of the slot type. To delete the <code>$LATEST</code> version, use the <a>DeleteSlotType</a>
            operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.DeleteSlotTypeVersionResponse">
            <summary>
            This is the response object from the DeleteSlotTypeVersion operation.
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.DeleteUtterancesRequest">
            <summary>
            Container for the parameters to the DeleteUtterances operation.
            Deletes stored utterances.
            
             
            <para>
            Amazon Lex stores the utterances that users send to your bot. Utterances are stored
            for 15 days for use with the <a>GetUtterancesView</a> operation, and then stored indefinitely
            for use in improving the ability of your bot to respond to user input.
            </para>
             
            <para>
            Use the <code>DeleteUtterances</code> operation to manually delete stored utterances
            for a specific user. When you use the <code>DeleteUtterances</code> operation, utterances
            stored for improving your bot's ability to respond to user input are deleted immediately.
            Utterances stored for use with the <code>GetUtterancesView</code> operation are deleted
            after 15 days.
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:DeleteUtterances</code> action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.DeleteUtterancesRequest.BotName">
            <summary>
            Gets and sets the property BotName. 
            <para>
            The name of the bot that stored the utterances.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.DeleteUtterancesRequest.UserId">
            <summary>
            Gets and sets the property UserId. 
            <para>
             The unique identifier for the user that made the utterances. This is the user ID
            that was sent in the <a href="http://docs.aws.amazon.com/lex/latest/dg/API_runtime_PostContent.html">PostContent</a>
            or <a href="http://docs.aws.amazon.com/lex/latest/dg/API_runtime_PostText.html">PostText</a>
            operation request that contained the utterance.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.DeleteUtterancesResponse">
            <summary>
            This is the response object from the DeleteUtterances operation.
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.EnumerationValue">
            <summary>
            Each slot type can have a set of values. Each enumeration value represents a value
            the slot type can take. 
            
             
            <para>
            For example, a pizza ordering bot could have a slot type that specifies the type of
            crust that the pizza should have. The slot type could include the values 
            </para>
             <ul> <li> 
            <para>
            thick
            </para>
             </li> <li> 
            <para>
            thin
            </para>
             </li> <li> 
            <para>
            stuffed
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.EnumerationValue.Synonyms">
            <summary>
            Gets and sets the property Synonyms. 
            <para>
            Additional values related to the slot type value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.EnumerationValue.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The value of the slot type.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.FollowUpPrompt">
            <summary>
            A prompt for additional activity after an intent is fulfilled. For example, after
            the <code>OrderPizza</code> intent is fulfilled, you might prompt the user to find
            out whether the user wants to order drinks.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.FollowUpPrompt.Prompt">
            <summary>
            Gets and sets the property Prompt. 
            <para>
            Prompts for information from the user. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.FollowUpPrompt.RejectionStatement">
            <summary>
            Gets and sets the property RejectionStatement. 
            <para>
            If the user answers "no" to the question defined in the <code>prompt</code> field,
            Amazon Lex responds with this statement to acknowledge that the intent was canceled.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.FulfillmentActivity">
            <summary>
            Describes how the intent is fulfilled after the user provides all of the information
            required for the intent. You can provide a Lambda function to process the intent,
            or you can return the intent information to the client application. We recommend that
            you use a Lambda function so that the relevant logic lives in the Cloud and limit
            the client-side code primarily to presentation. If you need to update the logic, you
            only update the Lambda function; you don't need to upgrade your client application.
            
            
             
            <para>
            Consider the following examples:
            </para>
             <ul> <li> 
            <para>
            In a pizza ordering application, after the user provides all of the information for
            placing an order, you use a Lambda function to place an order with a pizzeria. 
            </para>
             </li> <li> 
            <para>
            In a gaming application, when a user says "pick up a rock," this information must
            go back to the client application so that it can perform the operation and update
            the graphics. In this case, you want Amazon Lex to return the intent data to the client.
            
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.FulfillmentActivity.CodeHook">
            <summary>
            Gets and sets the property CodeHook. 
            <para>
             A description of the Lambda function that is run to fulfill the intent. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.FulfillmentActivity.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
             How the intent should be fulfilled, either by running a Lambda function or by returning
            the slot data to the client application. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetBotAliasesRequest">
            <summary>
            Container for the parameters to the GetBotAliases operation.
            Returns a list of aliases for a specified Amazon Lex bot.
            
             
            <para>
            This operation requires permissions for the <code>lex:GetBotAliases</code> action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotAliasesRequest.BotName">
            <summary>
            Gets and sets the property BotName. 
            <para>
            The name of the bot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotAliasesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of aliases to return in the response. The default is 50. . 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotAliasesRequest.NameContains">
            <summary>
            Gets and sets the property NameContains. 
            <para>
            Substring to match in bot alias names. An alias will be returned if any part of its
            name matches the substring. For example, "xyz" matches both "xyzabc" and "abcxyz."
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotAliasesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A pagination token for fetching the next page of aliases. If the response to this
            call is truncated, Amazon Lex returns a pagination token in the response. To fetch
            the next page of aliases, specify the pagination token in the next request. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetBotAliasesResponse">
            <summary>
            This is the response object from the GetBotAliases operation.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotAliasesResponse.BotAliases">
            <summary>
            Gets and sets the property BotAliases. 
            <para>
            An array of <code>BotAliasMetadata</code> objects, each describing a bot alias.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotAliasesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A pagination token for fetching next page of aliases. If the response to this call
            is truncated, Amazon Lex returns a pagination token in the response. To fetch the
            next page of aliases, specify the pagination token in the next request. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetBotAliasRequest">
            <summary>
            Container for the parameters to the GetBotAlias operation.
            Returns information about an Amazon Lex bot alias. For more information about aliases,
            see <a>versioning-aliases</a>.
            
             
            <para>
            This operation requires permissions for the <code>lex:GetBotAlias</code> action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotAliasRequest.BotName">
            <summary>
            Gets and sets the property BotName. 
            <para>
            The name of the bot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotAliasRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the bot alias. The name is case sensitive.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetBotAliasResponse">
            <summary>
            This is the response object from the GetBotAlias operation.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotAliasResponse.BotName">
            <summary>
            Gets and sets the property BotName. 
            <para>
            The name of the bot that the alias points to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotAliasResponse.BotVersion">
            <summary>
            Gets and sets the property BotVersion. 
            <para>
            The version of the bot that the alias points to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotAliasResponse.Checksum">
            <summary>
            Gets and sets the property Checksum. 
            <para>
            Checksum of the bot alias.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotAliasResponse.ConversationLogs">
            <summary>
            Gets and sets the property ConversationLogs. 
            <para>
            The settings that determine how Amazon Lex uses conversation logs for the alias.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotAliasResponse.CreatedDate">
            <summary>
            Gets and sets the property CreatedDate. 
            <para>
            The date that the bot alias was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotAliasResponse.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the bot alias.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotAliasResponse.LastUpdatedDate">
            <summary>
            Gets and sets the property LastUpdatedDate. 
            <para>
            The date that the bot alias was updated. When you create a resource, the creation
            date and the last updated date are the same.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotAliasResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the bot alias.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetBotChannelAssociationRequest">
            <summary>
            Container for the parameters to the GetBotChannelAssociation operation.
            Returns information about the association between an Amazon Lex bot and a messaging
            platform.
            
             
            <para>
            This operation requires permissions for the <code>lex:GetBotChannelAssociation</code>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotChannelAssociationRequest.BotAlias">
            <summary>
            Gets and sets the property BotAlias. 
            <para>
            An alias pointing to the specific version of the Amazon Lex bot to which this association
            is being made.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotChannelAssociationRequest.BotName">
            <summary>
            Gets and sets the property BotName. 
            <para>
            The name of the Amazon Lex bot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotChannelAssociationRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the association between the bot and the channel. The name is case sensitive.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetBotChannelAssociationResponse">
            <summary>
            This is the response object from the GetBotChannelAssociation operation.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotChannelAssociationResponse.BotAlias">
            <summary>
            Gets and sets the property BotAlias. 
            <para>
            An alias pointing to the specific version of the Amazon Lex bot to which this association
            is being made.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotChannelAssociationResponse.BotConfiguration">
            <summary>
            Gets and sets the property BotConfiguration. 
            <para>
            Provides information that the messaging platform needs to communicate with the Amazon
            Lex bot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotChannelAssociationResponse.BotName">
            <summary>
            Gets and sets the property BotName. 
            <para>
            The name of the Amazon Lex bot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotChannelAssociationResponse.CreatedDate">
            <summary>
            Gets and sets the property CreatedDate. 
            <para>
            The date that the association between the bot and the channel was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotChannelAssociationResponse.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the association between the bot and the channel.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotChannelAssociationResponse.FailureReason">
            <summary>
            Gets and sets the property FailureReason. 
            <para>
            If <code>status</code> is <code>FAILED</code>, Amazon Lex provides the reason that
            it failed to create the association.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotChannelAssociationResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the association between the bot and the channel.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotChannelAssociationResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the bot channel. 
            </para>
             <ul> <li> 
            <para>
             <code>CREATED</code> - The channel has been created and is ready for use.
            </para>
             </li> <li> 
            <para>
             <code>IN_PROGRESS</code> - Channel creation is in progress.
            </para>
             </li> <li> 
            <para>
             <code>FAILED</code> - There was an error creating the channel. For information about
            the reason for the failure, see the <code>failureReason</code> field.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotChannelAssociationResponse.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of the messaging platform.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetBotChannelAssociationsRequest">
            <summary>
            Container for the parameters to the GetBotChannelAssociations operation.
            Returns a list of all of the channels associated with the specified bot. 
            
             
            <para>
            The <code>GetBotChannelAssociations</code> operation requires permissions for the
            <code>lex:GetBotChannelAssociations</code> action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotChannelAssociationsRequest.BotAlias">
            <summary>
            Gets and sets the property BotAlias. 
            <para>
            An alias pointing to the specific version of the Amazon Lex bot to which this association
            is being made.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotChannelAssociationsRequest.BotName">
            <summary>
            Gets and sets the property BotName. 
            <para>
            The name of the Amazon Lex bot in the association.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotChannelAssociationsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of associations to return in the response. The default is 50. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotChannelAssociationsRequest.NameContains">
            <summary>
            Gets and sets the property NameContains. 
            <para>
            Substring to match in channel association names. An association will be returned if
            any part of its name matches the substring. For example, "xyz" matches both "xyzabc"
            and "abcxyz." To return all bot channel associations, use a hyphen ("-") as the <code>nameContains</code>
            parameter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotChannelAssociationsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A pagination token for fetching the next page of associations. If the response to
            this call is truncated, Amazon Lex returns a pagination token in the response. To
            fetch the next page of associations, specify the pagination token in the next request.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetBotChannelAssociationsResponse">
            <summary>
            This is the response object from the GetBotChannelAssociations operation.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotChannelAssociationsResponse.BotChannelAssociations">
            <summary>
            Gets and sets the property BotChannelAssociations. 
            <para>
            An array of objects, one for each association, that provides information about the
            Amazon Lex bot and its association with the channel. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotChannelAssociationsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A pagination token that fetches the next page of associations. If the response to
            this call is truncated, Amazon Lex returns a pagination token in the response. To
            fetch the next page of associations, specify the pagination token in the next request.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetBotRequest">
            <summary>
            Container for the parameters to the GetBot operation.
            Returns metadata information for a specific bot. You must provide the bot name and
            the bot version or alias. 
            
             
            <para>
             This operation requires permissions for the <code>lex:GetBot</code> action. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the bot. The name is case sensitive. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotRequest.VersionOrAlias">
            <summary>
            Gets and sets the property VersionOrAlias. 
            <para>
            The version or alias of the bot.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetBotResponse">
            <summary>
            This is the response object from the GetBot operation.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotResponse.AbortStatement">
            <summary>
            Gets and sets the property AbortStatement. 
            <para>
            The message that Amazon Lex returns when the user elects to end the conversation without
            completing it. For more information, see <a>PutBot</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotResponse.Checksum">
            <summary>
            Gets and sets the property Checksum. 
            <para>
            Checksum of the bot used to identify a specific revision of the bot's <code>$LATEST</code>
            version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotResponse.ChildDirected">
            <summary>
            Gets and sets the property ChildDirected. 
            <para>
            For each Amazon Lex bot created with the Amazon Lex Model Building Service, you must
            specify whether your use of Amazon Lex is related to a website, program, or other
            application that is directed or targeted, in whole or in part, to children under age
            13 and subject to the Children's Online Privacy Protection Act (COPPA) by specifying
            <code>true</code> or <code>false</code> in the <code>childDirected</code> field. By
            specifying <code>true</code> in the <code>childDirected</code> field, you confirm
            that your use of Amazon Lex <b>is</b> related to a website, program, or other application
            that is directed or targeted, in whole or in part, to children under age 13 and subject
            to COPPA. By specifying <code>false</code> in the <code>childDirected</code> field,
            you confirm that your use of Amazon Lex <b>is not</b> related to a website, program,
            or other application that is directed or targeted, in whole or in part, to children
            under age 13 and subject to COPPA. You may not specify a default value for the <code>childDirected</code>
            field that does not accurately reflect whether your use of Amazon Lex is related to
            a website, program, or other application that is directed or targeted, in whole or
            in part, to children under age 13 and subject to COPPA.
            </para>
             
            <para>
            If your use of Amazon Lex relates to a website, program, or other application that
            is directed in whole or in part, to children under age 13, you must obtain any required
            verifiable parental consent under COPPA. For information regarding the use of Amazon
            Lex in connection with websites, programs, or other applications that are directed
            or targeted, in whole or in part, to children under age 13, see the <a href="https://aws.amazon.com/lex/faqs#data-security">Amazon
            Lex FAQ.</a> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotResponse.ClarificationPrompt">
            <summary>
            Gets and sets the property ClarificationPrompt. 
            <para>
            The message Amazon Lex uses when it doesn't understand the user's request. For more
            information, see <a>PutBot</a>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotResponse.CreatedDate">
            <summary>
            Gets and sets the property CreatedDate. 
            <para>
            The date that the bot was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotResponse.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the bot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotResponse.DetectSentiment">
            <summary>
            Gets and sets the property DetectSentiment. 
            <para>
            Indicates whether user utterances should be sent to Amazon Comprehend for sentiment
            analysis.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotResponse.EnableModelImprovements">
            <summary>
            Gets and sets the property EnableModelImprovements. 
            <para>
            Indicates whether the bot uses accuracy improvements. <code>true</code> indicates
            that the bot is using the improvements, otherwise, <code>false</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotResponse.FailureReason">
            <summary>
            Gets and sets the property FailureReason. 
            <para>
            If <code>status</code> is <code>FAILED</code>, Amazon Lex explains why it failed to
            build the bot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotResponse.IdleSessionTTLInSeconds">
            <summary>
            Gets and sets the property IdleSessionTTLInSeconds. 
            <para>
            The maximum time in seconds that Amazon Lex retains the data gathered in a conversation.
            For more information, see <a>PutBot</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotResponse.Intents">
            <summary>
            Gets and sets the property Intents. 
            <para>
            An array of <code>intent</code> objects. For more information, see <a>PutBot</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotResponse.LastUpdatedDate">
            <summary>
            Gets and sets the property LastUpdatedDate. 
            <para>
            The date that the bot was updated. When you create a resource, the creation date and
            last updated date are the same. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotResponse.Locale">
            <summary>
            Gets and sets the property Locale. 
            <para>
             The target locale for the bot. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the bot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotResponse.NluIntentConfidenceThreshold">
            <summary>
            Gets and sets the property NluIntentConfidenceThreshold. 
            <para>
            The score that determines where Amazon Lex inserts the <code>AMAZON.FallbackIntent</code>,
            <code>AMAZON.KendraSearchIntent</code>, or both when returning alternative intents
            in a <a href="https://docs.aws.amazon.com/lex/latest/dg/API_runtime_PostContent.html">PostContent</a>
            or <a href="https://docs.aws.amazon.com/lex/latest/dg/API_runtime_PostText.html">PostText</a>
            response. <code>AMAZON.FallbackIntent</code> is inserted if the confidence score for
            all intents is below this value. <code>AMAZON.KendraSearchIntent</code> is only inserted
            if it is configured for the bot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the bot. 
            </para>
             
            <para>
            When the status is <code>BUILDING</code> Amazon Lex is building the bot for testing
            and use.
            </para>
             
            <para>
            If the status of the bot is <code>READY_BASIC_TESTING</code>, you can test the bot
            using the exact utterances specified in the bot's intents. When the bot is ready for
            full testing or to run, the status is <code>READY</code>.
            </para>
             
            <para>
            If there was a problem with building the bot, the status is <code>FAILED</code> and
            the <code>failureReason</code> field explains why the bot did not build.
            </para>
             
            <para>
            If the bot was saved but not built, the status is <code>NOT_BUILT</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotResponse.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            The version of the bot. For a new bot, the version is always <code>$LATEST</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotResponse.VoiceId">
            <summary>
            Gets and sets the property VoiceId. 
            <para>
            The Amazon Polly voice ID that Amazon Lex uses for voice interaction with the user.
            For more information, see <a>PutBot</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetBotsRequest">
            <summary>
            Container for the parameters to the GetBots operation.
            Returns bot information as follows: 
            
             <ul> <li> 
            <para>
            If you provide the <code>nameContains</code> field, the response includes information
            for the <code>$LATEST</code> version of all bots whose name contains the specified
            string.
            </para>
             </li> <li> 
            <para>
            If you don't specify the <code>nameContains</code> field, the operation returns information
            about the <code>$LATEST</code> version of all of your bots.
            </para>
             </li> </ul> 
            <para>
            This operation requires permission for the <code>lex:GetBots</code> action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of bots to return in the response that the request will return.
            The default is 10.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotsRequest.NameContains">
            <summary>
            Gets and sets the property NameContains. 
            <para>
            Substring to match in bot names. A bot will be returned if any part of its name matches
            the substring. For example, "xyz" matches both "xyzabc" and "abcxyz."
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A pagination token that fetches the next page of bots. If the response to this call
            is truncated, Amazon Lex returns a pagination token in the response. To fetch the
            next page of bots, specify the pagination token in the next request. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetBotsResponse">
            <summary>
            This is the response object from the GetBots operation.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotsResponse.Bots">
            <summary>
            Gets and sets the property Bots. 
            <para>
            An array of <code>botMetadata</code> objects, with one entry for each bot. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the response is truncated, it includes a pagination token that you can specify
            in your next request to fetch the next page of bots. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetBotVersionsRequest">
            <summary>
            Container for the parameters to the GetBotVersions operation.
            Gets information about all of the versions of a bot.
            
             
            <para>
            The <code>GetBotVersions</code> operation returns a <code>BotMetadata</code> object
            for each version of a bot. For example, if a bot has three numbered versions, the
            <code>GetBotVersions</code> operation returns four <code>BotMetadata</code> objects
            in the response, one for each numbered version and one for the <code>$LATEST</code>
            version. 
            </para>
             
            <para>
            The <code>GetBotVersions</code> operation always returns at least one version, the
            <code>$LATEST</code> version.
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:GetBotVersions</code> action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotVersionsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of bot versions to return in the response. The default is 10.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotVersionsRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the bot for which versions should be returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotVersionsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A pagination token for fetching the next page of bot versions. If the response to
            this call is truncated, Amazon Lex returns a pagination token in the response. To
            fetch the next page of versions, specify the pagination token in the next request.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetBotVersionsResponse">
            <summary>
            This is the response object from the GetBotVersions operation.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotVersionsResponse.Bots">
            <summary>
            Gets and sets the property Bots. 
            <para>
            An array of <code>BotMetadata</code> objects, one for each numbered version of the
            bot plus one for the <code>$LATEST</code> version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotVersionsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A pagination token for fetching the next page of bot versions. If the response to
            this call is truncated, Amazon Lex returns a pagination token in the response. To
            fetch the next page of versions, specify the pagination token in the next request.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetBuiltinIntentRequest">
            <summary>
            Container for the parameters to the GetBuiltinIntent operation.
            Returns information about a built-in intent.
            
             
            <para>
            This operation requires permission for the <code>lex:GetBuiltinIntent</code> action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBuiltinIntentRequest.Signature">
            <summary>
            Gets and sets the property Signature. 
            <para>
            The unique identifier for a built-in intent. To find the signature for an intent,
            see <a href="https://developer.amazon.com/public/solutions/alexa/alexa-skills-kit/docs/built-in-intent-ref/standard-intents">Standard
            Built-in Intents</a> in the <i>Alexa Skills Kit</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetBuiltinIntentResponse">
            <summary>
            This is the response object from the GetBuiltinIntent operation.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBuiltinIntentResponse.Signature">
            <summary>
            Gets and sets the property Signature. 
            <para>
            The unique identifier for a built-in intent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBuiltinIntentResponse.Slots">
            <summary>
            Gets and sets the property Slots. 
            <para>
            An array of <code>BuiltinIntentSlot</code> objects, one entry for each slot type in
            the intent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBuiltinIntentResponse.SupportedLocales">
            <summary>
            Gets and sets the property SupportedLocales. 
            <para>
            A list of locales that the intent supports.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetBuiltinIntentsRequest">
            <summary>
            Container for the parameters to the GetBuiltinIntents operation.
            Gets a list of built-in intents that meet the specified criteria.
            
             
            <para>
            This operation requires permission for the <code>lex:GetBuiltinIntents</code> action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBuiltinIntentsRequest.Locale">
            <summary>
            Gets and sets the property Locale. 
            <para>
            A list of locales that the intent supports.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBuiltinIntentsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of intents to return in the response. The default is 10.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBuiltinIntentsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A pagination token that fetches the next page of intents. If this API call is truncated,
            Amazon Lex returns a pagination token in the response. To fetch the next page of intents,
            use the pagination token in the next request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBuiltinIntentsRequest.SignatureContains">
            <summary>
            Gets and sets the property SignatureContains. 
            <para>
            Substring to match in built-in intent signatures. An intent will be returned if any
            part of its signature matches the substring. For example, "xyz" matches both "xyzabc"
            and "abcxyz." To find the signature for an intent, see <a href="https://developer.amazon.com/public/solutions/alexa/alexa-skills-kit/docs/built-in-intent-ref/standard-intents">Standard
            Built-in Intents</a> in the <i>Alexa Skills Kit</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetBuiltinIntentsResponse">
            <summary>
            This is the response object from the GetBuiltinIntents operation.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBuiltinIntentsResponse.Intents">
            <summary>
            Gets and sets the property Intents. 
            <para>
            An array of <code>builtinIntentMetadata</code> objects, one for each intent in the
            response.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBuiltinIntentsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A pagination token that fetches the next page of intents. If the response to this
            API call is truncated, Amazon Lex returns a pagination token in the response. To fetch
            the next page of intents, specify the pagination token in the next request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetBuiltinSlotTypesRequest">
            <summary>
            Container for the parameters to the GetBuiltinSlotTypes operation.
            Gets a list of built-in slot types that meet the specified criteria.
            
             
            <para>
            For a list of built-in slot types, see <a href="https://developer.amazon.com/public/solutions/alexa/alexa-skills-kit/docs/built-in-intent-ref/slot-type-reference">Slot
            Type Reference</a> in the <i>Alexa Skills Kit</i>.
            </para>
             
            <para>
            This operation requires permission for the <code>lex:GetBuiltInSlotTypes</code> action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBuiltinSlotTypesRequest.Locale">
            <summary>
            Gets and sets the property Locale. 
            <para>
            A list of locales that the slot type supports.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBuiltinSlotTypesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of slot types to return in the response. The default is 10.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBuiltinSlotTypesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A pagination token that fetches the next page of slot types. If the response to this
            API call is truncated, Amazon Lex returns a pagination token in the response. To fetch
            the next page of slot types, specify the pagination token in the next request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBuiltinSlotTypesRequest.SignatureContains">
            <summary>
            Gets and sets the property SignatureContains. 
            <para>
            Substring to match in built-in slot type signatures. A slot type will be returned
            if any part of its signature matches the substring. For example, "xyz" matches both
            "xyzabc" and "abcxyz."
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetBuiltinSlotTypesResponse">
            <summary>
            This is the response object from the GetBuiltinSlotTypes operation.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBuiltinSlotTypesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the response is truncated, the response includes a pagination token that you can
            use in your next request to fetch the next page of slot types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBuiltinSlotTypesResponse.SlotTypes">
            <summary>
            Gets and sets the property SlotTypes. 
            <para>
            An array of <code>BuiltInSlotTypeMetadata</code> objects, one entry for each slot
            type returned.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetExportRequest">
            <summary>
            Container for the parameters to the GetExport operation.
            Exports the contents of a Amazon Lex resource in a specified format.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetExportRequest.ExportType">
            <summary>
            Gets and sets the property ExportType. 
            <para>
            The format of the exported data.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetExportRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the bot to export.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetExportRequest.ResourceType">
            <summary>
            Gets and sets the property ResourceType. 
            <para>
            The type of resource to export. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetExportRequest.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            The version of the bot to export.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetExportResponse">
            <summary>
            This is the response object from the GetExport operation.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetExportResponse.ExportStatus">
            <summary>
            Gets and sets the property ExportStatus. 
            <para>
            The status of the export. 
            </para>
             <ul> <li> 
            <para>
             <code>IN_PROGRESS</code> - The export is in progress.
            </para>
             </li> <li> 
            <para>
             <code>READY</code> - The export is complete.
            </para>
             </li> <li> 
            <para>
             <code>FAILED</code> - The export could not be completed.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetExportResponse.ExportType">
            <summary>
            Gets and sets the property ExportType. 
            <para>
            The format of the exported data.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetExportResponse.FailureReason">
            <summary>
            Gets and sets the property FailureReason. 
            <para>
            If <code>status</code> is <code>FAILED</code>, Amazon Lex provides the reason that
            it failed to export the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetExportResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the bot being exported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetExportResponse.ResourceType">
            <summary>
            Gets and sets the property ResourceType. 
            <para>
            The type of the exported resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetExportResponse.Url">
            <summary>
            Gets and sets the property Url. 
            <para>
            An S3 pre-signed URL that provides the location of the exported resource. The exported
            resource is a ZIP archive that contains the exported resource in JSON format. The
            structure of the archive may change. Your code should not rely on the archive structure.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetExportResponse.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            The version of the bot being exported.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetImportRequest">
            <summary>
            Container for the parameters to the GetImport operation.
            Gets information about an import job started with the <code>StartImport</code> operation.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetImportRequest.ImportId">
            <summary>
            Gets and sets the property ImportId. 
            <para>
            The identifier of the import job information to return.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetImportResponse">
            <summary>
            This is the response object from the GetImport operation.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetImportResponse.CreatedDate">
            <summary>
            Gets and sets the property CreatedDate. 
            <para>
            A timestamp for the date and time that the import job was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetImportResponse.FailureReason">
            <summary>
            Gets and sets the property FailureReason. 
            <para>
            A string that describes why an import job failed to complete.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetImportResponse.ImportId">
            <summary>
            Gets and sets the property ImportId. 
            <para>
            The identifier for the specific import job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetImportResponse.ImportStatus">
            <summary>
            Gets and sets the property ImportStatus. 
            <para>
            The status of the import job. If the status is <code>FAILED</code>, you can get the
            reason for the failure from the <code>failureReason</code> field.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetImportResponse.MergeStrategy">
            <summary>
            Gets and sets the property MergeStrategy. 
            <para>
            The action taken when there was a conflict between an existing resource and a resource
            in the import file.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetImportResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name given to the import job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetImportResponse.ResourceType">
            <summary>
            Gets and sets the property ResourceType. 
            <para>
            The type of resource imported.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetIntentRequest">
            <summary>
            Container for the parameters to the GetIntent operation.
            Returns information about an intent. In addition to the intent name, you must specify
            the intent version. 
            
             
            <para>
             This operation requires permissions to perform the <code>lex:GetIntent</code> action.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetIntentRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the intent. The name is case sensitive. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetIntentRequest.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            The version of the intent.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetIntentResponse">
            <summary>
            This is the response object from the GetIntent operation.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetIntentResponse.Checksum">
            <summary>
            Gets and sets the property Checksum. 
            <para>
            Checksum of the intent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetIntentResponse.ConclusionStatement">
            <summary>
            Gets and sets the property ConclusionStatement. 
            <para>
            After the Lambda function specified in the <code>fulfillmentActivity</code> element
            fulfills the intent, Amazon Lex conveys this statement to the user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetIntentResponse.ConfirmationPrompt">
            <summary>
            Gets and sets the property ConfirmationPrompt. 
            <para>
            If defined in the bot, Amazon Lex uses prompt to confirm the intent before fulfilling
            the user's request. For more information, see <a>PutIntent</a>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetIntentResponse.CreatedDate">
            <summary>
            Gets and sets the property CreatedDate. 
            <para>
            The date that the intent was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetIntentResponse.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the intent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetIntentResponse.DialogCodeHook">
            <summary>
            Gets and sets the property DialogCodeHook. 
            <para>
            If defined in the bot, Amazon Amazon Lex invokes this Lambda function for each user
            input. For more information, see <a>PutIntent</a>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetIntentResponse.FollowUpPrompt">
            <summary>
            Gets and sets the property FollowUpPrompt. 
            <para>
            If defined in the bot, Amazon Lex uses this prompt to solicit additional user activity
            after the intent is fulfilled. For more information, see <a>PutIntent</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetIntentResponse.FulfillmentActivity">
            <summary>
            Gets and sets the property FulfillmentActivity. 
            <para>
            Describes how the intent is fulfilled. For more information, see <a>PutIntent</a>.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetIntentResponse.InputContexts">
            <summary>
            Gets and sets the property InputContexts. 
            <para>
            An array of <code>InputContext</code> objects that lists the contexts that must be
            active for Amazon Lex to choose the intent in a conversation with the user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetIntentResponse.KendraConfiguration">
            <summary>
            Gets and sets the property KendraConfiguration. 
            <para>
            Configuration information, if any, to connect to an Amazon Kendra index with the <code>AMAZON.KendraSearchIntent</code>
            intent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetIntentResponse.LastUpdatedDate">
            <summary>
            Gets and sets the property LastUpdatedDate. 
            <para>
            The date that the intent was updated. When you create a resource, the creation date
            and the last updated date are the same. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetIntentResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the intent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetIntentResponse.OutputContexts">
            <summary>
            Gets and sets the property OutputContexts. 
            <para>
            An array of <code>OutputContext</code> objects that lists the contexts that the intent
            activates when the intent is fulfilled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetIntentResponse.ParentIntentSignature">
            <summary>
            Gets and sets the property ParentIntentSignature. 
            <para>
            A unique identifier for a built-in intent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetIntentResponse.RejectionStatement">
            <summary>
            Gets and sets the property RejectionStatement. 
            <para>
            If the user answers "no" to the question defined in <code>confirmationPrompt</code>,
            Amazon Lex responds with this statement to acknowledge that the intent was canceled.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetIntentResponse.SampleUtterances">
            <summary>
            Gets and sets the property SampleUtterances. 
            <para>
            An array of sample utterances configured for the intent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetIntentResponse.Slots">
            <summary>
            Gets and sets the property Slots. 
            <para>
            An array of intent slots configured for the intent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetIntentResponse.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            The version of the intent.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetIntentsRequest">
            <summary>
            Container for the parameters to the GetIntents operation.
            Returns intent information as follows: 
            
             <ul> <li> 
            <para>
            If you specify the <code>nameContains</code> field, returns the <code>$LATEST</code>
            version of all intents that contain the specified string.
            </para>
             </li> <li> 
            <para>
             If you don't specify the <code>nameContains</code> field, returns information about
            the <code>$LATEST</code> version of all intents. 
            </para>
             </li> </ul> 
            <para>
             The operation requires permission for the <code>lex:GetIntents</code> action. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetIntentsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of intents to return in the response. The default is 10.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetIntentsRequest.NameContains">
            <summary>
            Gets and sets the property NameContains. 
            <para>
            Substring to match in intent names. An intent will be returned if any part of its
            name matches the substring. For example, "xyz" matches both "xyzabc" and "abcxyz."
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetIntentsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A pagination token that fetches the next page of intents. If the response to this
            API call is truncated, Amazon Lex returns a pagination token in the response. To fetch
            the next page of intents, specify the pagination token in the next request. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetIntentsResponse">
            <summary>
            This is the response object from the GetIntents operation.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetIntentsResponse.Intents">
            <summary>
            Gets and sets the property Intents. 
            <para>
            An array of <code>Intent</code> objects. For more information, see <a>PutBot</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetIntentsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the response is truncated, the response includes a pagination token that you can
            specify in your next request to fetch the next page of intents. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetIntentVersionsRequest">
            <summary>
            Container for the parameters to the GetIntentVersions operation.
            Gets information about all of the versions of an intent.
            
             
            <para>
            The <code>GetIntentVersions</code> operation returns an <code>IntentMetadata</code>
            object for each version of an intent. For example, if an intent has three numbered
            versions, the <code>GetIntentVersions</code> operation returns four <code>IntentMetadata</code>
            objects in the response, one for each numbered version and one for the <code>$LATEST</code>
            version. 
            </para>
             
            <para>
            The <code>GetIntentVersions</code> operation always returns at least one version,
            the <code>$LATEST</code> version.
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:GetIntentVersions</code> action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetIntentVersionsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of intent versions to return in the response. The default is 10.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetIntentVersionsRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the intent for which versions should be returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetIntentVersionsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A pagination token for fetching the next page of intent versions. If the response
            to this call is truncated, Amazon Lex returns a pagination token in the response.
            To fetch the next page of versions, specify the pagination token in the next request.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetIntentVersionsResponse">
            <summary>
            This is the response object from the GetIntentVersions operation.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetIntentVersionsResponse.Intents">
            <summary>
            Gets and sets the property Intents. 
            <para>
            An array of <code>IntentMetadata</code> objects, one for each numbered version of
            the intent plus one for the <code>$LATEST</code> version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetIntentVersionsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A pagination token for fetching the next page of intent versions. If the response
            to this call is truncated, Amazon Lex returns a pagination token in the response.
            To fetch the next page of versions, specify the pagination token in the next request.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetMigrationRequest">
            <summary>
            Container for the parameters to the GetMigration operation.
            Provides details about an ongoing or complete migration from an Amazon Lex V1 bot
            to an Amazon Lex V2 bot. Use this operation to view the migration alerts and warnings
            related to the migration.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetMigrationRequest.MigrationId">
            <summary>
            Gets and sets the property MigrationId. 
            <para>
            The unique identifier of the migration to view. The <code>migrationID</code> is returned
            by the operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetMigrationResponse">
            <summary>
            This is the response object from the GetMigration operation.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetMigrationResponse.Alerts">
            <summary>
            Gets and sets the property Alerts. 
            <para>
            A list of alerts and warnings that indicate issues with the migration for the Amazon
            Lex V1 bot to Amazon Lex V2. You receive a warning when an Amazon Lex V1 feature has
            a different implementation if Amazon Lex V2.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/lexv2/latest/dg/migrate.html">Migrating
            a bot</a> in the <i>Amazon Lex V2 developer guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetMigrationResponse.MigrationId">
            <summary>
            Gets and sets the property MigrationId. 
            <para>
            The unique identifier of the migration. This is the same as the identifier used when
            calling the <code>GetMigration</code> operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetMigrationResponse.MigrationStatus">
            <summary>
            Gets and sets the property MigrationStatus. 
            <para>
            Indicates the status of the migration. When the status is <code>COMPLETE</code> the
            migration is finished and the bot is available in Amazon Lex V2. There may be alerts
            and warnings that need to be resolved to complete the migration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetMigrationResponse.MigrationStrategy">
            <summary>
            Gets and sets the property MigrationStrategy. 
            <para>
            The strategy used to conduct the migration.
            </para>
             <ul> <li> 
            <para>
             <code>CREATE_NEW</code> - Creates a new Amazon Lex V2 bot and migrates the Amazon
            Lex V1 bot to the new bot.
            </para>
             </li> <li> 
            <para>
             <code>UPDATE_EXISTING</code> - Overwrites the existing Amazon Lex V2 bot metadata
            and the locale being migrated. It doesn't change any other locales in the Amazon Lex
            V2 bot. If the locale doesn't exist, a new locale is created in the Amazon Lex V2
            bot.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetMigrationResponse.MigrationTimestamp">
            <summary>
            Gets and sets the property MigrationTimestamp. 
            <para>
            The date and time that the migration started.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetMigrationResponse.V1BotLocale">
            <summary>
            Gets and sets the property V1BotLocale. 
            <para>
            The locale of the Amazon Lex V1 bot migrated to Amazon Lex V2.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetMigrationResponse.V1BotName">
            <summary>
            Gets and sets the property V1BotName. 
            <para>
            The name of the Amazon Lex V1 bot migrated to Amazon Lex V2.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetMigrationResponse.V1BotVersion">
            <summary>
            Gets and sets the property V1BotVersion. 
            <para>
            The version of the Amazon Lex V1 bot migrated to Amazon Lex V2.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetMigrationResponse.V2BotId">
            <summary>
            Gets and sets the property V2BotId. 
            <para>
            The unique identifier of the Amazon Lex V2 bot that the Amazon Lex V1 is being migrated
            to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetMigrationResponse.V2BotRole">
            <summary>
            Gets and sets the property V2BotRole. 
            <para>
            The IAM role that Amazon Lex uses to run the Amazon Lex V2 bot.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetMigrationsRequest">
            <summary>
            Container for the parameters to the GetMigrations operation.
            Gets a list of migrations between Amazon Lex V1 and Amazon Lex V2.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetMigrationsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of migrations to return in the response. The default is 10.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetMigrationsRequest.MigrationStatusEquals">
            <summary>
            Gets and sets the property MigrationStatusEquals. 
            <para>
            Filters the list to contain only migrations in the specified state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetMigrationsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A pagination token that fetches the next page of migrations. If the response to this
            operation is truncated, Amazon Lex returns a pagination token in the response. To
            fetch the next page of migrations, specify the pagination token in the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetMigrationsRequest.SortByAttribute">
            <summary>
            Gets and sets the property SortByAttribute. 
            <para>
            The field to sort the list of migrations by. You can sort by the Amazon Lex V1 bot
            name or the date and time that the migration was started.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetMigrationsRequest.SortByOrder">
            <summary>
            Gets and sets the property SortByOrder. 
            <para>
            The order so sort the list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetMigrationsRequest.V1BotNameContains">
            <summary>
            Gets and sets the property V1BotNameContains. 
            <para>
            Filters the list to contain only bots whose name contains the specified string. The
            string is matched anywhere in bot name.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetMigrationsResponse">
            <summary>
            This is the response object from the GetMigrations operation.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetMigrationsResponse.MigrationSummaries">
            <summary>
            Gets and sets the property MigrationSummaries. 
            <para>
            An array of summaries for migrations from Amazon Lex V1 to Amazon Lex V2. To see details
            of the migration, use the <code>migrationId</code> from the summary in a call to the
            operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetMigrationsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the response is truncated, it includes a pagination token that you can specify
            in your next request to fetch the next page of migrations.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetSlotTypeRequest">
            <summary>
            Container for the parameters to the GetSlotType operation.
            Returns information about a specific version of a slot type. In addition to specifying
            the slot type name, you must specify the slot type version.
            
             
            <para>
            This operation requires permissions for the <code>lex:GetSlotType</code> action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetSlotTypeRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the slot type. The name is case sensitive. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetSlotTypeRequest.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            The version of the slot type. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetSlotTypeResponse">
            <summary>
            This is the response object from the GetSlotType operation.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetSlotTypeResponse.Checksum">
            <summary>
            Gets and sets the property Checksum. 
            <para>
            Checksum of the <code>$LATEST</code> version of the slot type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetSlotTypeResponse.CreatedDate">
            <summary>
            Gets and sets the property CreatedDate. 
            <para>
            The date that the slot type was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetSlotTypeResponse.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the slot type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetSlotTypeResponse.EnumerationValues">
            <summary>
            Gets and sets the property EnumerationValues. 
            <para>
            A list of <code>EnumerationValue</code> objects that defines the values that the slot
            type can take.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetSlotTypeResponse.LastUpdatedDate">
            <summary>
            Gets and sets the property LastUpdatedDate. 
            <para>
            The date that the slot type was updated. When you create a resource, the creation
            date and last update date are the same.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetSlotTypeResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the slot type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetSlotTypeResponse.ParentSlotTypeSignature">
            <summary>
            Gets and sets the property ParentSlotTypeSignature. 
            <para>
            The built-in slot type used as a parent for the slot type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetSlotTypeResponse.SlotTypeConfigurations">
            <summary>
            Gets and sets the property SlotTypeConfigurations. 
            <para>
            Configuration information that extends the parent built-in slot type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetSlotTypeResponse.ValueSelectionStrategy">
            <summary>
            Gets and sets the property ValueSelectionStrategy. 
            <para>
            The strategy that Amazon Lex uses to determine the value of the slot. For more information,
            see <a>PutSlotType</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetSlotTypeResponse.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            The version of the slot type.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetSlotTypesRequest">
            <summary>
            Container for the parameters to the GetSlotTypes operation.
            Returns slot type information as follows: 
            
             <ul> <li> 
            <para>
            If you specify the <code>nameContains</code> field, returns the <code>$LATEST</code>
            version of all slot types that contain the specified string.
            </para>
             </li> <li> 
            <para>
             If you don't specify the <code>nameContains</code> field, returns information about
            the <code>$LATEST</code> version of all slot types. 
            </para>
             </li> </ul> 
            <para>
             The operation requires permission for the <code>lex:GetSlotTypes</code> action. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetSlotTypesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of slot types to return in the response. The default is 10.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetSlotTypesRequest.NameContains">
            <summary>
            Gets and sets the property NameContains. 
            <para>
            Substring to match in slot type names. A slot type will be returned if any part of
            its name matches the substring. For example, "xyz" matches both "xyzabc" and "abcxyz."
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetSlotTypesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A pagination token that fetches the next page of slot types. If the response to this
            API call is truncated, Amazon Lex returns a pagination token in the response. To fetch
            next page of slot types, specify the pagination token in the next request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetSlotTypesResponse">
            <summary>
            This is the response object from the GetSlotTypes operation.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetSlotTypesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the response is truncated, it includes a pagination token that you can specify
            in your next request to fetch the next page of slot types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetSlotTypesResponse.SlotTypes">
            <summary>
            Gets and sets the property SlotTypes. 
            <para>
            An array of objects, one for each slot type, that provides information such as the
            name of the slot type, the version, and a description.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetSlotTypeVersionsRequest">
            <summary>
            Container for the parameters to the GetSlotTypeVersions operation.
            Gets information about all versions of a slot type.
            
             
            <para>
            The <code>GetSlotTypeVersions</code> operation returns a <code>SlotTypeMetadata</code>
            object for each version of a slot type. For example, if a slot type has three numbered
            versions, the <code>GetSlotTypeVersions</code> operation returns four <code>SlotTypeMetadata</code>
            objects in the response, one for each numbered version and one for the <code>$LATEST</code>
            version. 
            </para>
             
            <para>
            The <code>GetSlotTypeVersions</code> operation always returns at least one version,
            the <code>$LATEST</code> version.
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:GetSlotTypeVersions</code> action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetSlotTypeVersionsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of slot type versions to return in the response. The default is
            10.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetSlotTypeVersionsRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the slot type for which versions should be returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetSlotTypeVersionsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A pagination token for fetching the next page of slot type versions. If the response
            to this call is truncated, Amazon Lex returns a pagination token in the response.
            To fetch the next page of versions, specify the pagination token in the next request.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetSlotTypeVersionsResponse">
            <summary>
            This is the response object from the GetSlotTypeVersions operation.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetSlotTypeVersionsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A pagination token for fetching the next page of slot type versions. If the response
            to this call is truncated, Amazon Lex returns a pagination token in the response.
            To fetch the next page of versions, specify the pagination token in the next request.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetSlotTypeVersionsResponse.SlotTypes">
            <summary>
            Gets and sets the property SlotTypes. 
            <para>
            An array of <code>SlotTypeMetadata</code> objects, one for each numbered version of
            the slot type plus one for the <code>$LATEST</code> version.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetUtterancesViewRequest">
            <summary>
            Container for the parameters to the GetUtterancesView operation.
            Use the <code>GetUtterancesView</code> operation to get information about the utterances
            that your users have made to your bot. You can use this list to tune the utterances
            that your bot responds to.
            
             
            <para>
            For example, say that you have created a bot to order flowers. After your users have
            used your bot for a while, use the <code>GetUtterancesView</code> operation to see
            the requests that they have made and whether they have been successful. You might
            find that the utterance "I want flowers" is not being recognized. You could add this
            utterance to the <code>OrderFlowers</code> intent so that your bot recognizes that
            utterance.
            </para>
             
            <para>
            After you publish a new version of a bot, you can get information about the old version
            and the new so that you can compare the performance across the two versions. 
            </para>
             
            <para>
            Utterance statistics are generated once a day. Data is available for the last 15 days.
            You can request information for up to 5 versions of your bot in each request. Amazon
            Lex returns the most frequent utterances received by the bot in the last 15 days.
            The response contains information about a maximum of 100 utterances for each version.
            </para>
             
            <para>
            If you set <code>childDirected</code> field to true when you created your bot, if
            you are using slot obfuscation with one or more slots, or if you opted out of participating
            in improving Amazon Lex, utterances are not available.
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:GetUtterancesView</code> action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetUtterancesViewRequest.BotName">
            <summary>
            Gets and sets the property BotName. 
            <para>
            The name of the bot for which utterance information should be returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetUtterancesViewRequest.BotVersions">
            <summary>
            Gets and sets the property BotVersions. 
            <para>
            An array of bot versions for which utterance information should be returned. The limit
            is 5 versions per request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetUtterancesViewRequest.StatusType">
            <summary>
            Gets and sets the property StatusType. 
            <para>
            To return utterances that were recognized and handled, use <code>Detected</code>.
            To return utterances that were not recognized, use <code>Missed</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetUtterancesViewResponse">
            <summary>
            This is the response object from the GetUtterancesView operation.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetUtterancesViewResponse.BotName">
            <summary>
            Gets and sets the property BotName. 
            <para>
            The name of the bot for which utterance information was returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetUtterancesViewResponse.Utterances">
            <summary>
            Gets and sets the property Utterances. 
            <para>
            An array of <a>UtteranceList</a> objects, each containing a list of <a>UtteranceData</a>
            objects describing the utterances that were processed by your bot. The response contains
            a maximum of 100 <code>UtteranceData</code> objects for each version. Amazon Lex returns
            the most frequent utterances received by the bot in the last 15 days.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.InputContext">
            <summary>
            The name of a context that must be active for an intent to be selected by Amazon Lex.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.InputContext.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the context.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Intent">
            <summary>
            Identifies the specific version of an intent.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Intent.IntentName">
            <summary>
            Gets and sets the property IntentName. 
            <para>
            The name of the intent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Intent.IntentVersion">
            <summary>
            Gets and sets the property IntentVersion. 
            <para>
            The version of the intent.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.IntentMetadata">
            <summary>
            Provides information about an intent.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.IntentMetadata.CreatedDate">
            <summary>
            Gets and sets the property CreatedDate. 
            <para>
            The date that the intent was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.IntentMetadata.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the intent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.IntentMetadata.LastUpdatedDate">
            <summary>
            Gets and sets the property LastUpdatedDate. 
            <para>
            The date that the intent was updated. When you create an intent, the creation date
            and last updated date are the same.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.IntentMetadata.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the intent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.IntentMetadata.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            The version of the intent.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            <summary>
            An internal Amazon Lex error occurred. Try your request again.
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.InternalFailureException.#ctor(System.String)">
            <summary>
            Constructs a new InternalFailureException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.InternalFailureException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InternalFailureException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.InternalFailureException.#ctor(System.Exception)">
            <summary>
            Construct instance of InternalFailureException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.InternalFailureException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalFailureException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.InternalFailureException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalFailureException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.InternalFailureException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InternalFailureException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.InternalFailureException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for AccessDeniedException Object
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.BadRequestExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for BadRequestException Object
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.BadRequestExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.BadRequestExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.BadRequestExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.BotAliasMetadataUnmarshaller">
            <summary>
            Response Unmarshaller for BotAliasMetadata Object
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.BotAliasMetadataUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LexModelBuildingService#Model#BotAliasMetadata,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.BotAliasMetadataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.BotAliasMetadataUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.BotChannelAssociationUnmarshaller">
            <summary>
            Response Unmarshaller for BotChannelAssociation Object
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.BotChannelAssociationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LexModelBuildingService#Model#BotChannelAssociation,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.BotChannelAssociationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.BotChannelAssociationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.BotMetadataUnmarshaller">
            <summary>
            Response Unmarshaller for BotMetadata Object
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.BotMetadataUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LexModelBuildingService#Model#BotMetadata,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.BotMetadataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.BotMetadataUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.BuiltinIntentMetadataUnmarshaller">
            <summary>
            Response Unmarshaller for BuiltinIntentMetadata Object
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.BuiltinIntentMetadataUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LexModelBuildingService#Model#BuiltinIntentMetadata,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.BuiltinIntentMetadataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.BuiltinIntentMetadataUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.BuiltinIntentSlotUnmarshaller">
            <summary>
            Response Unmarshaller for BuiltinIntentSlot Object
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.BuiltinIntentSlotUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LexModelBuildingService#Model#BuiltinIntentSlot,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.BuiltinIntentSlotUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.BuiltinIntentSlotUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.BuiltinSlotTypeMetadataUnmarshaller">
            <summary>
            Response Unmarshaller for BuiltinSlotTypeMetadata Object
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.BuiltinSlotTypeMetadataUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LexModelBuildingService#Model#BuiltinSlotTypeMetadata,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.BuiltinSlotTypeMetadataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.BuiltinSlotTypeMetadataUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.CodeHookMarshaller">
            <summary>
            CodeHook Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.CodeHookMarshaller.Marshall(Amazon.LexModelBuildingService.Model.CodeHook,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.CodeHookMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.CodeHookUnmarshaller">
            <summary>
            Response Unmarshaller for CodeHook Object
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.CodeHookUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LexModelBuildingService#Model#CodeHook,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.CodeHookUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.CodeHookUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ConflictException Object
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.ConversationLogsRequestMarshaller">
            <summary>
            ConversationLogsRequest Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.ConversationLogsRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.ConversationLogsRequest,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.ConversationLogsRequestMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.ConversationLogsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ConversationLogsResponse Object
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.ConversationLogsResponseUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LexModelBuildingService#Model#ConversationLogsResponse,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.ConversationLogsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.ConversationLogsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.CreateBotVersionRequestMarshaller">
            <summary>
            CreateBotVersion Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.CreateBotVersionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.CreateBotVersionRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.CreateBotVersionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.CreateBotVersionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.CreateBotVersionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateBotVersion operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.CreateBotVersionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.CreateBotVersionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.CreateBotVersionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.CreateIntentVersionRequestMarshaller">
            <summary>
            CreateIntentVersion Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.CreateIntentVersionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.CreateIntentVersionRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.CreateIntentVersionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.CreateIntentVersionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.CreateIntentVersionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateIntentVersion operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.CreateIntentVersionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.CreateIntentVersionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.CreateIntentVersionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.CreateSlotTypeVersionRequestMarshaller">
            <summary>
            CreateSlotTypeVersion Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.CreateSlotTypeVersionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.CreateSlotTypeVersionRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.CreateSlotTypeVersionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.CreateSlotTypeVersionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.CreateSlotTypeVersionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateSlotTypeVersion operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.CreateSlotTypeVersionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.CreateSlotTypeVersionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.CreateSlotTypeVersionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteBotAliasRequestMarshaller">
            <summary>
            DeleteBotAlias Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteBotAliasRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteBotAliasRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.DeleteBotAliasRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteBotAliasRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteBotAliasResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteBotAlias operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteBotAliasResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteBotAliasResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteBotAliasResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteBotChannelAssociationRequestMarshaller">
            <summary>
            DeleteBotChannelAssociation Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteBotChannelAssociationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteBotChannelAssociationRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.DeleteBotChannelAssociationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteBotChannelAssociationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteBotChannelAssociationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteBotChannelAssociation operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteBotChannelAssociationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteBotChannelAssociationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteBotChannelAssociationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteBotRequestMarshaller">
            <summary>
            DeleteBot Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteBotRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteBotRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.DeleteBotRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteBotRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteBotResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteBot operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteBotResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteBotResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteBotResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteBotVersionRequestMarshaller">
            <summary>
            DeleteBotVersion Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteBotVersionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteBotVersionRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.DeleteBotVersionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteBotVersionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteBotVersionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteBotVersion operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteBotVersionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteBotVersionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteBotVersionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteIntentRequestMarshaller">
            <summary>
            DeleteIntent Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteIntentRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteIntentRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.DeleteIntentRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteIntentRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteIntentResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteIntent operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteIntentResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteIntentResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteIntentResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteIntentVersionRequestMarshaller">
            <summary>
            DeleteIntentVersion Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteIntentVersionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteIntentVersionRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.DeleteIntentVersionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteIntentVersionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteIntentVersionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteIntentVersion operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteIntentVersionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteIntentVersionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteIntentVersionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteSlotTypeRequestMarshaller">
            <summary>
            DeleteSlotType Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteSlotTypeRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteSlotTypeRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.DeleteSlotTypeRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteSlotTypeRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteSlotTypeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteSlotType operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteSlotTypeResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteSlotTypeResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteSlotTypeResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteSlotTypeVersionRequestMarshaller">
            <summary>
            DeleteSlotTypeVersion Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteSlotTypeVersionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteSlotTypeVersionRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.DeleteSlotTypeVersionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteSlotTypeVersionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteSlotTypeVersionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteSlotTypeVersion operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteSlotTypeVersionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteSlotTypeVersionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteSlotTypeVersionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteUtterancesRequestMarshaller">
            <summary>
            DeleteUtterances Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteUtterancesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteUtterancesRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.DeleteUtterancesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteUtterancesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteUtterancesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteUtterances operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteUtterancesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteUtterancesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteUtterancesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.EnumerationValueMarshaller">
            <summary>
            EnumerationValue Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.EnumerationValueMarshaller.Marshall(Amazon.LexModelBuildingService.Model.EnumerationValue,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.EnumerationValueMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.EnumerationValueUnmarshaller">
            <summary>
            Response Unmarshaller for EnumerationValue Object
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.EnumerationValueUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LexModelBuildingService#Model#EnumerationValue,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.EnumerationValueUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.EnumerationValueUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.FollowUpPromptMarshaller">
            <summary>
            FollowUpPrompt Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.FollowUpPromptMarshaller.Marshall(Amazon.LexModelBuildingService.Model.FollowUpPrompt,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.FollowUpPromptMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.FollowUpPromptUnmarshaller">
            <summary>
            Response Unmarshaller for FollowUpPrompt Object
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.FollowUpPromptUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LexModelBuildingService#Model#FollowUpPrompt,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.FollowUpPromptUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.FollowUpPromptUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.FulfillmentActivityMarshaller">
            <summary>
            FulfillmentActivity Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.FulfillmentActivityMarshaller.Marshall(Amazon.LexModelBuildingService.Model.FulfillmentActivity,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.FulfillmentActivityMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.FulfillmentActivityUnmarshaller">
            <summary>
            Response Unmarshaller for FulfillmentActivity Object
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.FulfillmentActivityUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LexModelBuildingService#Model#FulfillmentActivity,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.FulfillmentActivityUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.FulfillmentActivityUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotAliasesRequestMarshaller">
            <summary>
            GetBotAliases Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotAliasesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotAliasesRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.GetBotAliasesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotAliasesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotAliasesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetBotAliases operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotAliasesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotAliasesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotAliasesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotAliasRequestMarshaller">
            <summary>
            GetBotAlias Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotAliasRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotAliasRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.GetBotAliasRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotAliasRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotAliasResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetBotAlias operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotAliasResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotAliasResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotAliasResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotChannelAssociationRequestMarshaller">
            <summary>
            GetBotChannelAssociation Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotChannelAssociationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotChannelAssociationRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.GetBotChannelAssociationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotChannelAssociationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotChannelAssociationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetBotChannelAssociation operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotChannelAssociationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotChannelAssociationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotChannelAssociationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotChannelAssociationsRequestMarshaller">
            <summary>
            GetBotChannelAssociations Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotChannelAssociationsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotChannelAssociationsRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.GetBotChannelAssociationsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotChannelAssociationsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotChannelAssociationsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetBotChannelAssociations operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotChannelAssociationsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotChannelAssociationsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotChannelAssociationsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotRequestMarshaller">
            <summary>
            GetBot Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.GetBotRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetBot operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotsRequestMarshaller">
            <summary>
            GetBots Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotsRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.GetBotsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetBots operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotVersionsRequestMarshaller">
            <summary>
            GetBotVersions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotVersionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotVersionsRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.GetBotVersionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotVersionsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotVersionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetBotVersions operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotVersionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotVersionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotVersionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBuiltinIntentRequestMarshaller">
            <summary>
            GetBuiltinIntent Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBuiltinIntentRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBuiltinIntentRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.GetBuiltinIntentRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBuiltinIntentRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBuiltinIntentResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetBuiltinIntent operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBuiltinIntentResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBuiltinIntentResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBuiltinIntentResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBuiltinIntentsRequestMarshaller">
            <summary>
            GetBuiltinIntents Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBuiltinIntentsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBuiltinIntentsRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.GetBuiltinIntentsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBuiltinIntentsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBuiltinIntentsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetBuiltinIntents operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBuiltinIntentsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBuiltinIntentsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBuiltinIntentsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBuiltinSlotTypesRequestMarshaller">
            <summary>
            GetBuiltinSlotTypes Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBuiltinSlotTypesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBuiltinSlotTypesRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.GetBuiltinSlotTypesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBuiltinSlotTypesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBuiltinSlotTypesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetBuiltinSlotTypes operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBuiltinSlotTypesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBuiltinSlotTypesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBuiltinSlotTypesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetExportRequestMarshaller">
            <summary>
            GetExport Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetExportRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetExportRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.GetExportRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetExportRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetExportResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetExport operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetExportResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetExportResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetExportResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetImportRequestMarshaller">
            <summary>
            GetImport Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetImportRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetImportRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.GetImportRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetImportRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetImportResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetImport operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetImportResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetImportResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetImportResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetIntentRequestMarshaller">
            <summary>
            GetIntent Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetIntentRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetIntentRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.GetIntentRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetIntentRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetIntentResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetIntent operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetIntentResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetIntentResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetIntentResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetIntentsRequestMarshaller">
            <summary>
            GetIntents Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetIntentsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetIntentsRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.GetIntentsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetIntentsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetIntentsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetIntents operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetIntentsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetIntentsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetIntentsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetIntentVersionsRequestMarshaller">
            <summary>
            GetIntentVersions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetIntentVersionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetIntentVersionsRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.GetIntentVersionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetIntentVersionsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetIntentVersionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetIntentVersions operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetIntentVersionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetIntentVersionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetIntentVersionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetMigrationRequestMarshaller">
            <summary>
            GetMigration Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetMigrationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetMigrationRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.GetMigrationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetMigrationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetMigrationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetMigration operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetMigrationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetMigrationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetMigrationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetMigrationsRequestMarshaller">
            <summary>
            GetMigrations Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetMigrationsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetMigrationsRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.GetMigrationsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetMigrationsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetMigrationsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetMigrations operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetMigrationsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetMigrationsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetMigrationsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetSlotTypeRequestMarshaller">
            <summary>
            GetSlotType Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetSlotTypeRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetSlotTypeRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.GetSlotTypeRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetSlotTypeRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetSlotTypeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetSlotType operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetSlotTypeResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetSlotTypeResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetSlotTypeResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetSlotTypesRequestMarshaller">
            <summary>
            GetSlotTypes Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetSlotTypesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetSlotTypesRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.GetSlotTypesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetSlotTypesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetSlotTypesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetSlotTypes operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetSlotTypesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetSlotTypesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetSlotTypesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetSlotTypeVersionsRequestMarshaller">
            <summary>
            GetSlotTypeVersions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetSlotTypeVersionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetSlotTypeVersionsRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.GetSlotTypeVersionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetSlotTypeVersionsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetSlotTypeVersionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetSlotTypeVersions operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetSlotTypeVersionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetSlotTypeVersionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetSlotTypeVersionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetUtterancesViewRequestMarshaller">
            <summary>
            GetUtterancesView Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetUtterancesViewRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetUtterancesViewRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.GetUtterancesViewRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetUtterancesViewRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetUtterancesViewResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetUtterancesView operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetUtterancesViewResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetUtterancesViewResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetUtterancesViewResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.InputContextMarshaller">
            <summary>
            InputContext Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.InputContextMarshaller.Marshall(Amazon.LexModelBuildingService.Model.InputContext,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.InputContextMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.InputContextUnmarshaller">
            <summary>
            Response Unmarshaller for InputContext Object
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.InputContextUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LexModelBuildingService#Model#InputContext,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.InputContextUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.InputContextUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.IntentMarshaller">
            <summary>
            Intent Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.IntentMarshaller.Marshall(Amazon.LexModelBuildingService.Model.Intent,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.IntentMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.IntentMetadataUnmarshaller">
            <summary>
            Response Unmarshaller for IntentMetadata Object
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.IntentMetadataUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LexModelBuildingService#Model#IntentMetadata,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.IntentMetadataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.IntentMetadataUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.IntentUnmarshaller">
            <summary>
            Response Unmarshaller for Intent Object
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.IntentUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LexModelBuildingService#Model#Intent,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.IntentUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.IntentUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.InternalFailureExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InternalFailureException Object
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.InternalFailureExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.InternalFailureExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.InternalFailureExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.KendraConfigurationMarshaller">
            <summary>
            KendraConfiguration Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.KendraConfigurationMarshaller.Marshall(Amazon.LexModelBuildingService.Model.KendraConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.KendraConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.KendraConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for KendraConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.KendraConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LexModelBuildingService#Model#KendraConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.KendraConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.KendraConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for LimitExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller">
            <summary>
            ListTagsForResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.ListTagsForResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListTagsForResource operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.LogSettingsRequestMarshaller">
            <summary>
            LogSettingsRequest Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.LogSettingsRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.LogSettingsRequest,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.LogSettingsRequestMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.LogSettingsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for LogSettingsResponse Object
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.LogSettingsResponseUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LexModelBuildingService#Model#LogSettingsResponse,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.LogSettingsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.LogSettingsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.MessageMarshaller">
            <summary>
            Message Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.MessageMarshaller.Marshall(Amazon.LexModelBuildingService.Model.Message,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.MessageMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.MessageUnmarshaller">
            <summary>
            Response Unmarshaller for Message Object
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.MessageUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LexModelBuildingService#Model#Message,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.MessageUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.MessageUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.MigrationAlertUnmarshaller">
            <summary>
            Response Unmarshaller for MigrationAlert Object
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.MigrationAlertUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LexModelBuildingService#Model#MigrationAlert,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.MigrationAlertUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.MigrationAlertUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.MigrationSummaryUnmarshaller">
            <summary>
            Response Unmarshaller for MigrationSummary Object
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.MigrationSummaryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LexModelBuildingService#Model#MigrationSummary,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.MigrationSummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.MigrationSummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.NotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for NotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.NotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.NotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.NotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.OutputContextMarshaller">
            <summary>
            OutputContext Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.OutputContextMarshaller.Marshall(Amazon.LexModelBuildingService.Model.OutputContext,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.OutputContextMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.OutputContextUnmarshaller">
            <summary>
            Response Unmarshaller for OutputContext Object
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.OutputContextUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LexModelBuildingService#Model#OutputContext,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.OutputContextUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.OutputContextUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PreconditionFailedExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for PreconditionFailedException Object
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PreconditionFailedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PreconditionFailedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PreconditionFailedExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PromptMarshaller">
            <summary>
            Prompt Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PromptMarshaller.Marshall(Amazon.LexModelBuildingService.Model.Prompt,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PromptMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PromptUnmarshaller">
            <summary>
            Response Unmarshaller for Prompt Object
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PromptUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LexModelBuildingService#Model#Prompt,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PromptUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PromptUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PutBotAliasRequestMarshaller">
            <summary>
            PutBotAlias Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PutBotAliasRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PutBotAliasRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.PutBotAliasRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PutBotAliasRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PutBotAliasResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutBotAlias operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PutBotAliasResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PutBotAliasResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PutBotAliasResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PutBotRequestMarshaller">
            <summary>
            PutBot Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PutBotRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PutBotRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.PutBotRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PutBotRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PutBotResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutBot operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PutBotResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PutBotResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PutBotResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PutIntentRequestMarshaller">
            <summary>
            PutIntent Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PutIntentRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PutIntentRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.PutIntentRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PutIntentRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PutIntentResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutIntent operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PutIntentResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PutIntentResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PutIntentResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PutSlotTypeRequestMarshaller">
            <summary>
            PutSlotType Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PutSlotTypeRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PutSlotTypeRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.PutSlotTypeRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PutSlotTypeRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PutSlotTypeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutSlotType operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PutSlotTypeResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PutSlotTypeResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PutSlotTypeResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.ResourceInUseExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceInUseException Object
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.ResourceInUseExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.ResourceInUseExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.ResourceInUseExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.ResourceReferenceUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceReference Object
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.ResourceReferenceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LexModelBuildingService#Model#ResourceReference,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.ResourceReferenceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.ResourceReferenceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.SlotDefaultValueMarshaller">
            <summary>
            SlotDefaultValue Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.SlotDefaultValueMarshaller.Marshall(Amazon.LexModelBuildingService.Model.SlotDefaultValue,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.SlotDefaultValueMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.SlotDefaultValueSpecMarshaller">
            <summary>
            SlotDefaultValueSpec Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.SlotDefaultValueSpecMarshaller.Marshall(Amazon.LexModelBuildingService.Model.SlotDefaultValueSpec,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.SlotDefaultValueSpecMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.SlotDefaultValueSpecUnmarshaller">
            <summary>
            Response Unmarshaller for SlotDefaultValueSpec Object
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.SlotDefaultValueSpecUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LexModelBuildingService#Model#SlotDefaultValueSpec,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.SlotDefaultValueSpecUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.SlotDefaultValueSpecUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.SlotDefaultValueUnmarshaller">
            <summary>
            Response Unmarshaller for SlotDefaultValue Object
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.SlotDefaultValueUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LexModelBuildingService#Model#SlotDefaultValue,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.SlotDefaultValueUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.SlotDefaultValueUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.SlotMarshaller">
            <summary>
            Slot Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.SlotMarshaller.Marshall(Amazon.LexModelBuildingService.Model.Slot,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.SlotMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.SlotTypeConfigurationMarshaller">
            <summary>
            SlotTypeConfiguration Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.SlotTypeConfigurationMarshaller.Marshall(Amazon.LexModelBuildingService.Model.SlotTypeConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.SlotTypeConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.SlotTypeConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for SlotTypeConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.SlotTypeConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LexModelBuildingService#Model#SlotTypeConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.SlotTypeConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.SlotTypeConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.SlotTypeMetadataUnmarshaller">
            <summary>
            Response Unmarshaller for SlotTypeMetadata Object
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.SlotTypeMetadataUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LexModelBuildingService#Model#SlotTypeMetadata,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.SlotTypeMetadataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.SlotTypeMetadataUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.SlotTypeRegexConfigurationMarshaller">
            <summary>
            SlotTypeRegexConfiguration Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.SlotTypeRegexConfigurationMarshaller.Marshall(Amazon.LexModelBuildingService.Model.SlotTypeRegexConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.SlotTypeRegexConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.SlotTypeRegexConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for SlotTypeRegexConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.SlotTypeRegexConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LexModelBuildingService#Model#SlotTypeRegexConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.SlotTypeRegexConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.SlotTypeRegexConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.SlotUnmarshaller">
            <summary>
            Response Unmarshaller for Slot Object
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.SlotUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LexModelBuildingService#Model#Slot,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.SlotUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.SlotUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.StartImportRequestMarshaller">
            <summary>
            StartImport Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.StartImportRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.StartImportRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.StartImportRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.StartImportRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.StartImportResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StartImport operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.StartImportResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.StartImportResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.StartImportResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.StartMigrationRequestMarshaller">
            <summary>
            StartMigration Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.StartMigrationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.StartMigrationRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.StartMigrationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.StartMigrationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.StartMigrationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StartMigration operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.StartMigrationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.StartMigrationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.StartMigrationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.StatementMarshaller">
            <summary>
            Statement Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.StatementMarshaller.Marshall(Amazon.LexModelBuildingService.Model.Statement,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.StatementMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.StatementUnmarshaller">
            <summary>
            Response Unmarshaller for Statement Object
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.StatementUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LexModelBuildingService#Model#Statement,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.StatementUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.StatementUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.TagMarshaller">
            <summary>
            Tag Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.TagMarshaller.Marshall(Amazon.LexModelBuildingService.Model.Tag,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.TagMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller">
            <summary>
            TagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.TagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for TagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.TagUnmarshaller">
            <summary>
            Response Unmarshaller for Tag Object
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.TagUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LexModelBuildingService#Model#Tag,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.TagUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.TagUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller">
            <summary>
            UntagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.UntagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UntagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.UtteranceDataUnmarshaller">
            <summary>
            Response Unmarshaller for UtteranceData Object
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.UtteranceDataUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LexModelBuildingService#Model#UtteranceData,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.UtteranceDataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.UtteranceDataUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.UtteranceListUnmarshaller">
            <summary>
            Response Unmarshaller for UtteranceList Object
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.UtteranceListUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LexModelBuildingService#Model#UtteranceList,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.UtteranceListUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.UtteranceListUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.KendraConfiguration">
            <summary>
            Provides configuration information for the AMAZON.KendraSearchIntent intent. When
            you use this intent, Amazon Lex searches the specified Amazon Kendra index and returns
            documents from the index that match the user's utterance. For more information, see
            <a href="http://docs.aws.amazon.com/lex/latest/dg/built-in-intent-kendra-search.html">
            AMAZON.KendraSearchIntent</a>.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.KendraConfiguration.KendraIndex">
            <summary>
            Gets and sets the property KendraIndex. 
            <para>
            The Amazon Resource Name (ARN) of the Amazon Kendra index that you want the AMAZON.KendraSearchIntent
            intent to search. The index must be in the same account and Region as the Amazon Lex
            bot. If the Amazon Kendra index does not exist, you get an exception when you call
            the <code>PutIntent</code> operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.KendraConfiguration.QueryFilterString">
            <summary>
            Gets and sets the property QueryFilterString. 
            <para>
            A query filter that Amazon Lex sends to Amazon Kendra to filter the response from
            the query. The filter is in the format defined by Amazon Kendra. For more information,
            see <a href="http://docs.aws.amazon.com/kendra/latest/dg/filtering.html">Filtering
            queries</a>.
            </para>
             
            <para>
            You can override this filter string with a new filter string at runtime.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.KendraConfiguration.Role">
            <summary>
            Gets and sets the property Role. 
            <para>
            The Amazon Resource Name (ARN) of an IAM role that has permission to search the Amazon
            Kendra index. The role must be in the same account and Region as the Amazon Lex bot.
            If the role does not exist, you get an exception when you call the <code>PutIntent</code>
            operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            <summary>
            The request exceeded a limit. Try your request again.
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.LimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new LimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.LimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.LimitExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.LimitExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.LimitExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.LimitExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the LimitExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.LimitExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.LimitExceededException.RetryAfterSeconds">
            <summary>
            Gets and sets the property RetryAfterSeconds.
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.ListTagsForResourceRequest">
            <summary>
            Container for the parameters to the ListTagsForResource operation.
            Gets a list of tags associated with the specified resource. Only bots, bot aliases,
            and bot channels can have tags associated with them.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.ListTagsForResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The Amazon Resource Name (ARN) of the resource to get a list of tags for.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.ListTagsForResourceResponse">
            <summary>
            This is the response object from the ListTagsForResource operation.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.ListTagsForResourceResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags associated with a resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.LogSettingsRequest">
            <summary>
            Settings used to configure delivery mode and destination for conversation logs.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.LogSettingsRequest.Destination">
            <summary>
            Gets and sets the property Destination. 
            <para>
            Where the logs will be delivered. Text logs are delivered to a CloudWatch Logs log
            group. Audio logs are delivered to an S3 bucket.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.LogSettingsRequest.KmsKeyArn">
            <summary>
            Gets and sets the property KmsKeyArn. 
            <para>
            The Amazon Resource Name (ARN) of the AWS KMS customer managed key for encrypting
            audio logs delivered to an S3 bucket. The key does not apply to CloudWatch Logs and
            is optional for S3 buckets.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.LogSettingsRequest.LogType">
            <summary>
            Gets and sets the property LogType. 
            <para>
            The type of logging to enable. Text logs are delivered to a CloudWatch Logs log group.
            Audio logs are delivered to an S3 bucket.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.LogSettingsRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The Amazon Resource Name (ARN) of the CloudWatch Logs log group or S3 bucket where
            the logs should be delivered.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.LogSettingsResponse">
            <summary>
            The settings for conversation logs.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.LogSettingsResponse.Destination">
            <summary>
            Gets and sets the property Destination. 
            <para>
            The destination where logs are delivered.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.LogSettingsResponse.KmsKeyArn">
            <summary>
            Gets and sets the property KmsKeyArn. 
            <para>
            The Amazon Resource Name (ARN) of the key used to encrypt audio logs in an S3 bucket.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.LogSettingsResponse.LogType">
            <summary>
            Gets and sets the property LogType. 
            <para>
            The type of logging that is enabled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.LogSettingsResponse.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The Amazon Resource Name (ARN) of the CloudWatch Logs log group or S3 bucket where
            the logs are delivered.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.LogSettingsResponse.ResourcePrefix">
            <summary>
            Gets and sets the property ResourcePrefix. 
            <para>
            The resource prefix is the first part of the S3 object key within the S3 bucket that
            you specified to contain audio logs. For CloudWatch Logs it is the prefix of the log
            stream name within the log group that you specified. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Message">
            <summary>
            The message object that provides the message text and its type.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Message.Content">
            <summary>
            Gets and sets the property Content. 
            <para>
            The text of the message.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Message.ContentType">
            <summary>
            Gets and sets the property ContentType. 
            <para>
            The content type of the message string.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Message.GroupNumber">
            <summary>
            Gets and sets the property GroupNumber. 
            <para>
            Identifies the message group that the message belongs to. When a group is assigned
            to a message, Amazon Lex returns one message from each group in the response.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.MigrationAlert">
            <summary>
            Provides information about alerts and warnings that Amazon Lex sends during a migration.
            The alerts include information about how to resolve the issue.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.MigrationAlert.Details">
            <summary>
            Gets and sets the property Details. 
            <para>
            Additional details about the alert.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.MigrationAlert.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            A message that describes why the alert was issued.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.MigrationAlert.ReferenceURLs">
            <summary>
            Gets and sets the property ReferenceURLs. 
            <para>
            A link to the Amazon Lex documentation that describes how to resolve the alert.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.MigrationAlert.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of alert. There are two kinds of alerts:
            </para>
             <ul> <li> 
            <para>
             <code>ERROR</code> - There was an issue with the migration that can't be resolved.
            The migration stops.
            </para>
             </li> <li> 
            <para>
             <code>WARN</code> - There was an issue with the migration that requires manual changes
            to the new Amazon Lex V2 bot. The migration continues.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.MigrationSummary">
            <summary>
            Provides information about migrating a bot from Amazon Lex V1 to Amazon Lex V2.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.MigrationSummary.MigrationId">
            <summary>
            Gets and sets the property MigrationId. 
            <para>
            The unique identifier that Amazon Lex assigned to the migration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.MigrationSummary.MigrationStatus">
            <summary>
            Gets and sets the property MigrationStatus. 
            <para>
            The status of the operation. When the status is <code>COMPLETE</code> the bot is available
            in Amazon Lex V2. There may be alerts and warnings that need to be resolved to complete
            the migration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.MigrationSummary.MigrationStrategy">
            <summary>
            Gets and sets the property MigrationStrategy. 
            <para>
            The strategy used to conduct the migration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.MigrationSummary.MigrationTimestamp">
            <summary>
            Gets and sets the property MigrationTimestamp. 
            <para>
            The date and time that the migration started.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.MigrationSummary.V1BotLocale">
            <summary>
            Gets and sets the property V1BotLocale. 
            <para>
            The locale of the Amazon Lex V1 bot that is the source of the migration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.MigrationSummary.V1BotName">
            <summary>
            Gets and sets the property V1BotName. 
            <para>
            The name of the Amazon Lex V1 bot that is the source of the migration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.MigrationSummary.V1BotVersion">
            <summary>
            Gets and sets the property V1BotVersion. 
            <para>
            The version of the Amazon Lex V1 bot that is the source of the migration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.MigrationSummary.V2BotId">
            <summary>
            Gets and sets the property V2BotId. 
            <para>
            The unique identifier of the Amazon Lex V2 that is the destination of the migration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.MigrationSummary.V2BotRole">
            <summary>
            Gets and sets the property V2BotRole. 
            <para>
            The IAM role that Amazon Lex uses to run the Amazon Lex V2 bot.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            <summary>
            The resource specified in the request was not found. Check the resource and try again.
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.NotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new NotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.NotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of NotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.NotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of NotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.NotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of NotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.NotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of NotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.NotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the NotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.NotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.OutputContext">
            <summary>
            The specification of an output context that is set when an intent is fulfilled.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.OutputContext.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the context.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.OutputContext.TimeToLiveInSeconds">
            <summary>
            Gets and sets the property TimeToLiveInSeconds. 
            <para>
            The number of seconds that the context should be active after it is first sent in
            a <code>PostContent</code> or <code>PostText</code> response. You can set the value
            between 5 and 86,400 seconds (24 hours).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.OutputContext.TurnsToLive">
            <summary>
            Gets and sets the property TurnsToLive. 
            <para>
            The number of conversation turns that the context should be active. A conversation
            turn is one <code>PostContent</code> or <code>PostText</code> request and the corresponding
            response from Amazon Lex.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.PreconditionFailedException">
            <summary>
            The checksum of the resource that you are trying to change does not match the checksum
            in the request. Check the resource's checksum and try again.
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.PreconditionFailedException.#ctor(System.String)">
            <summary>
            Constructs a new PreconditionFailedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.PreconditionFailedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of PreconditionFailedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.PreconditionFailedException.#ctor(System.Exception)">
            <summary>
            Construct instance of PreconditionFailedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.PreconditionFailedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of PreconditionFailedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.PreconditionFailedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of PreconditionFailedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.PreconditionFailedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the PreconditionFailedException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.PreconditionFailedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Prompt">
            <summary>
            Obtains information from the user. To define a prompt, provide one or more messages
            and specify the number of attempts to get information from the user. If you provide
            more than one message, Amazon Lex chooses one of the messages to use to prompt the
            user. For more information, see <a>how-it-works</a>.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Prompt.MaxAttempts">
            <summary>
            Gets and sets the property MaxAttempts. 
            <para>
            The number of times to prompt the user for information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Prompt.Messages">
            <summary>
            Gets and sets the property Messages. 
            <para>
            An array of objects, each of which provides a message string and its type. You can
            specify the message string in plain text or in Speech Synthesis Markup Language (SSML).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Prompt.ResponseCard">
            <summary>
            Gets and sets the property ResponseCard. 
            <para>
            A response card. Amazon Lex uses this prompt at runtime, in the <code>PostText</code>
            API response. It substitutes session attributes and slot values for placeholders in
            the response card. For more information, see <a>ex-resp-card</a>. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.PutBotAliasRequest">
            <summary>
            Container for the parameters to the PutBotAlias operation.
            Creates an alias for the specified version of the bot or replaces an alias for the
            specified bot. To change the version of the bot that the alias points to, replace
            the alias. For more information about aliases, see <a>versioning-aliases</a>.
            
             
            <para>
            This operation requires permissions for the <code>lex:PutBotAlias</code> action. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotAliasRequest.BotName">
            <summary>
            Gets and sets the property BotName. 
            <para>
            The name of the bot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotAliasRequest.BotVersion">
            <summary>
            Gets and sets the property BotVersion. 
            <para>
            The version of the bot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotAliasRequest.Checksum">
            <summary>
            Gets and sets the property Checksum. 
            <para>
            Identifies a specific revision of the <code>$LATEST</code> version.
            </para>
             
            <para>
            When you create a new bot alias, leave the <code>checksum</code> field blank. If you
            specify a checksum you get a <code>BadRequestException</code> exception.
            </para>
             
            <para>
            When you want to update a bot alias, set the <code>checksum</code> field to the checksum
            of the most recent revision of the <code>$LATEST</code> version. If you don't specify
            the <code> checksum</code> field, or if the checksum does not match the <code>$LATEST</code>
            version, you get a <code>PreconditionFailedException</code> exception.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotAliasRequest.ConversationLogs">
            <summary>
            Gets and sets the property ConversationLogs. 
            <para>
            Settings for conversation logs for the alias.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotAliasRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the alias.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotAliasRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the alias. The name is <i>not</i> case sensitive.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotAliasRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            A list of tags to add to the bot alias. You can only add tags when you create an alias,
            you can't use the <code>PutBotAlias</code> operation to update the tags on a bot alias.
            To update tags, use the <code>TagResource</code> operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.PutBotAliasResponse">
            <summary>
            This is the response object from the PutBotAlias operation.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotAliasResponse.BotName">
            <summary>
            Gets and sets the property BotName. 
            <para>
            The name of the bot that the alias points to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotAliasResponse.BotVersion">
            <summary>
            Gets and sets the property BotVersion. 
            <para>
            The version of the bot that the alias points to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotAliasResponse.Checksum">
            <summary>
            Gets and sets the property Checksum. 
            <para>
            The checksum for the current version of the alias.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotAliasResponse.ConversationLogs">
            <summary>
            Gets and sets the property ConversationLogs. 
            <para>
            The settings that determine how Amazon Lex uses conversation logs for the alias.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotAliasResponse.CreatedDate">
            <summary>
            Gets and sets the property CreatedDate. 
            <para>
            The date that the bot alias was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotAliasResponse.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the alias.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotAliasResponse.LastUpdatedDate">
            <summary>
            Gets and sets the property LastUpdatedDate. 
            <para>
            The date that the bot alias was updated. When you create a resource, the creation
            date and the last updated date are the same.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotAliasResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the alias.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotAliasResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            A list of tags associated with a bot.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.PutBotRequest">
            <summary>
            Container for the parameters to the PutBot operation.
            Creates an Amazon Lex conversational bot or replaces an existing bot. When you create
            or update a bot you are only required to specify a name, a locale, and whether the
            bot is directed toward children under age 13. You can use this to add intents later,
            or to remove intents from an existing bot. When you create a bot with the minimum
            information, the bot is created or updated but Amazon Lex returns the <code/> response
            <code>FAILED</code>. You can build the bot after you add one or more intents. For
            more information about Amazon Lex bots, see <a>how-it-works</a>. 
            
             
            <para>
            If you specify the name of an existing bot, the fields in the request replace the
            existing values in the <code>$LATEST</code> version of the bot. Amazon Lex removes
            any fields that you don't provide values for in the request, except for the <code>idleTTLInSeconds</code>
            and <code>privacySettings</code> fields, which are set to their default values. If
            you don't specify values for required fields, Amazon Lex throws an exception.
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:PutBot</code> action. For more
            information, see <a>security-iam</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotRequest.AbortStatement">
            <summary>
            Gets and sets the property AbortStatement. 
            <para>
            When Amazon Lex can't understand the user's input in context, it tries to elicit the
            information a few times. After that, Amazon Lex sends the message defined in <code>abortStatement</code>
            to the user, and then cancels the conversation. To set the number of retries, use
            the <code>valueElicitationPrompt</code> field for the slot type. 
            </para>
             
            <para>
            For example, in a pizza ordering bot, Amazon Lex might ask a user "What type of crust
            would you like?" If the user's response is not one of the expected responses (for
            example, "thin crust, "deep dish," etc.), Amazon Lex tries to elicit a correct response
            a few more times. 
            </para>
             
            <para>
            For example, in a pizza ordering application, <code>OrderPizza</code> might be one
            of the intents. This intent might require the <code>CrustType</code> slot. You specify
            the <code>valueElicitationPrompt</code> field when you create the <code>CrustType</code>
            slot.
            </para>
             
            <para>
            If you have defined a fallback intent the cancel statement will not be sent to the
            user, the fallback intent is used instead. For more information, see <a href="https://docs.aws.amazon.com/lex/latest/dg/built-in-intent-fallback.html">
            AMAZON.FallbackIntent</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotRequest.Checksum">
            <summary>
            Gets and sets the property Checksum. 
            <para>
            Identifies a specific revision of the <code>$LATEST</code> version.
            </para>
             
            <para>
            When you create a new bot, leave the <code>checksum</code> field blank. If you specify
            a checksum you get a <code>BadRequestException</code> exception.
            </para>
             
            <para>
            When you want to update a bot, set the <code>checksum</code> field to the checksum
            of the most recent revision of the <code>$LATEST</code> version. If you don't specify
            the <code> checksum</code> field, or if the checksum does not match the <code>$LATEST</code>
            version, you get a <code>PreconditionFailedException</code> exception.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotRequest.ChildDirected">
            <summary>
            Gets and sets the property ChildDirected. 
            <para>
            For each Amazon Lex bot created with the Amazon Lex Model Building Service, you must
            specify whether your use of Amazon Lex is related to a website, program, or other
            application that is directed or targeted, in whole or in part, to children under age
            13 and subject to the Children's Online Privacy Protection Act (COPPA) by specifying
            <code>true</code> or <code>false</code> in the <code>childDirected</code> field. By
            specifying <code>true</code> in the <code>childDirected</code> field, you confirm
            that your use of Amazon Lex <b>is</b> related to a website, program, or other application
            that is directed or targeted, in whole or in part, to children under age 13 and subject
            to COPPA. By specifying <code>false</code> in the <code>childDirected</code> field,
            you confirm that your use of Amazon Lex <b>is not</b> related to a website, program,
            or other application that is directed or targeted, in whole or in part, to children
            under age 13 and subject to COPPA. You may not specify a default value for the <code>childDirected</code>
            field that does not accurately reflect whether your use of Amazon Lex is related to
            a website, program, or other application that is directed or targeted, in whole or
            in part, to children under age 13 and subject to COPPA.
            </para>
             
            <para>
            If your use of Amazon Lex relates to a website, program, or other application that
            is directed in whole or in part, to children under age 13, you must obtain any required
            verifiable parental consent under COPPA. For information regarding the use of Amazon
            Lex in connection with websites, programs, or other applications that are directed
            or targeted, in whole or in part, to children under age 13, see the <a href="https://aws.amazon.com/lex/faqs#data-security">Amazon
            Lex FAQ.</a> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotRequest.ClarificationPrompt">
            <summary>
            Gets and sets the property ClarificationPrompt. 
            <para>
            When Amazon Lex doesn't understand the user's intent, it uses this message to get
            clarification. To specify how many times Amazon Lex should repeat the clarification
            prompt, use the <code>maxAttempts</code> field. If Amazon Lex still doesn't understand,
            it sends the message in the <code>abortStatement</code> field. 
            </para>
             
            <para>
            When you create a clarification prompt, make sure that it suggests the correct response
            from the user. for example, for a bot that orders pizza and drinks, you might create
            this clarification prompt: "What would you like to do? You can say 'Order a pizza'
            or 'Order a drink.'"
            </para>
             
            <para>
            If you have defined a fallback intent, it will be invoked if the clarification prompt
            is repeated the number of times defined in the <code>maxAttempts</code> field. For
            more information, see <a href="https://docs.aws.amazon.com/lex/latest/dg/built-in-intent-fallback.html">
            AMAZON.FallbackIntent</a>.
            </para>
             
            <para>
            If you don't define a clarification prompt, at runtime Amazon Lex will return a 400
            Bad Request exception in three cases: 
            </para>
             <ul> <li> 
            <para>
            Follow-up prompt - When the user responds to a follow-up prompt but does not provide
            an intent. For example, in response to a follow-up prompt that says "Would you like
            anything else today?" the user says "Yes." Amazon Lex will return a 400 Bad Request
            exception because it does not have a clarification prompt to send to the user to get
            an intent.
            </para>
             </li> <li> 
            <para>
            Lambda function - When using a Lambda function, you return an <code>ElicitIntent</code>
            dialog type. Since Amazon Lex does not have a clarification prompt to get an intent
            from the user, it returns a 400 Bad Request exception.
            </para>
             </li> <li> 
            <para>
            PutSession operation - When using the <code>PutSession</code> operation, you send
            an <code>ElicitIntent</code> dialog type. Since Amazon Lex does not have a clarification
            prompt to get an intent from the user, it returns a 400 Bad Request exception.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotRequest.CreateVersion">
            <summary>
            Gets and sets the property CreateVersion. 
            <para>
            When set to <code>true</code> a new numbered version of the bot is created. This is
            the same as calling the <code>CreateBotVersion</code> operation. If you don't specify
            <code>createVersion</code>, the default is <code>false</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the bot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotRequest.DetectSentiment">
            <summary>
            Gets and sets the property DetectSentiment. 
            <para>
            When set to <code>true</code> user utterances are sent to Amazon Comprehend for sentiment
            analysis. If you don't specify <code>detectSentiment</code>, the default is <code>false</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotRequest.EnableModelImprovements">
            <summary>
            Gets and sets the property EnableModelImprovements. 
            <para>
            Set to <code>true</code> to enable access to natural language understanding improvements.
            
            </para>
             
            <para>
            When you set the <code>enableModelImprovements</code> parameter to <code>true</code>
            you can use the <code>nluIntentConfidenceThreshold</code> parameter to configure confidence
            scores. For more information, see <a href="https://docs.aws.amazon.com/lex/latest/dg/confidence-scores.html">Confidence
            Scores</a>.
            </para>
             
            <para>
            You can only set the <code>enableModelImprovements</code> parameter in certain Regions.
            If you set the parameter to <code>true</code>, your bot has access to accuracy improvements.
            </para>
             
            <para>
            The Regions where you can set the <code>enableModelImprovements</code> parameter to
            <code>true</code> are:
            </para>
             <ul> <li> 
            <para>
            US East (N. Virginia) (us-east-1)
            </para>
             </li> <li> 
            <para>
            US West (Oregon) (us-west-2)
            </para>
             </li> <li> 
            <para>
            Asia Pacific (Sydney) (ap-southeast-2)
            </para>
             </li> <li> 
            <para>
            EU (Ireland) (eu-west-1)
            </para>
             </li> </ul> 
            <para>
            In other Regions, the <code>enableModelImprovements</code> parameter is set to <code>true</code>
            by default. In these Regions setting the parameter to <code>false</code> throws a
            <code>ValidationException</code> exception.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotRequest.IdleSessionTTLInSeconds">
            <summary>
            Gets and sets the property IdleSessionTTLInSeconds. 
            <para>
            The maximum time in seconds that Amazon Lex retains the data gathered in a conversation.
            </para>
             
            <para>
            A user interaction session remains active for the amount of time specified. If no
            conversation occurs during this time, the session expires and Amazon Lex deletes any
            data provided before the timeout.
            </para>
             
            <para>
            For example, suppose that a user chooses the OrderPizza intent, but gets sidetracked
            halfway through placing an order. If the user doesn't complete the order within the
            specified time, Amazon Lex discards the slot information that it gathered, and the
            user must start over.
            </para>
             
            <para>
            If you don't include the <code>idleSessionTTLInSeconds</code> element in a <code>PutBot</code>
            operation request, Amazon Lex uses the default value. This is also true if the request
            replaces an existing bot.
            </para>
             
            <para>
            The default is 300 seconds (5 minutes).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotRequest.Intents">
            <summary>
            Gets and sets the property Intents. 
            <para>
            An array of <code>Intent</code> objects. Each intent represents a command that a user
            can express. For example, a pizza ordering bot might support an OrderPizza intent.
            For more information, see <a>how-it-works</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotRequest.Locale">
            <summary>
            Gets and sets the property Locale. 
            <para>
             Specifies the target locale for the bot. Any intent used in the bot must be compatible
            with the locale of the bot. 
            </para>
             
            <para>
            The default is <code>en-US</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the bot. The name is <i>not</i> case sensitive. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotRequest.NluIntentConfidenceThreshold">
            <summary>
            Gets and sets the property NluIntentConfidenceThreshold. 
            <para>
            Determines the threshold where Amazon Lex will insert the <code>AMAZON.FallbackIntent</code>,
            <code>AMAZON.KendraSearchIntent</code>, or both when returning alternative intents
            in a <a href="https://docs.aws.amazon.com/lex/latest/dg/API_runtime_PostContent.html">PostContent</a>
            or <a href="https://docs.aws.amazon.com/lex/latest/dg/API_runtime_PostText.html">PostText</a>
            response. <code>AMAZON.FallbackIntent</code> and <code>AMAZON.KendraSearchIntent</code>
            are only inserted if they are configured for the bot.
            </para>
             
            <para>
            You must set the <code>enableModelImprovements</code> parameter to <code>true</code>
            to use confidence scores in the following regions.
            </para>
             <ul> <li> 
            <para>
            US East (N. Virginia) (us-east-1)
            </para>
             </li> <li> 
            <para>
            US West (Oregon) (us-west-2)
            </para>
             </li> <li> 
            <para>
            Asia Pacific (Sydney) (ap-southeast-2)
            </para>
             </li> <li> 
            <para>
            EU (Ireland) (eu-west-1)
            </para>
             </li> </ul> 
            <para>
            In other Regions, the <code>enableModelImprovements</code> parameter is set to <code>true</code>
            by default.
            </para>
             
            <para>
            For example, suppose a bot is configured with the confidence threshold of 0.80 and
            the <code>AMAZON.FallbackIntent</code>. Amazon Lex returns three alternative intents
            with the following confidence scores: IntentA (0.70), IntentB (0.60), IntentC (0.50).
            The response from the <code>PostText</code> operation would be:
            </para>
             <ul> <li> 
            <para>
            AMAZON.FallbackIntent
            </para>
             </li> <li> 
            <para>
            IntentA
            </para>
             </li> <li> 
            <para>
            IntentB
            </para>
             </li> <li> 
            <para>
            IntentC
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotRequest.ProcessBehavior">
            <summary>
            Gets and sets the property ProcessBehavior. 
            <para>
            If you set the <code>processBehavior</code> element to <code>BUILD</code>, Amazon
            Lex builds the bot so that it can be run. If you set the element to <code>SAVE</code>
            Amazon Lex saves the bot, but doesn't build it. 
            </para>
             
            <para>
            If you don't specify this value, the default value is <code>BUILD</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            A list of tags to add to the bot. You can only add tags when you create a bot, you
            can't use the <code>PutBot</code> operation to update the tags on a bot. To update
            tags, use the <code>TagResource</code> operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotRequest.VoiceId">
            <summary>
            Gets and sets the property VoiceId. 
            <para>
            The Amazon Polly voice ID that you want Amazon Lex to use for voice interactions with
            the user. The locale configured for the voice must match the locale of the bot. For
            more information, see <a href="https://docs.aws.amazon.com/polly/latest/dg/voicelist.html">Voices
            in Amazon Polly</a> in the <i>Amazon Polly Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.PutBotResponse">
            <summary>
            This is the response object from the PutBot operation.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotResponse.AbortStatement">
            <summary>
            Gets and sets the property AbortStatement. 
            <para>
            The message that Amazon Lex uses to cancel a conversation. For more information, see
            <a>PutBot</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotResponse.Checksum">
            <summary>
            Gets and sets the property Checksum. 
            <para>
            Checksum of the bot that you created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotResponse.ChildDirected">
            <summary>
            Gets and sets the property ChildDirected. 
            <para>
            For each Amazon Lex bot created with the Amazon Lex Model Building Service, you must
            specify whether your use of Amazon Lex is related to a website, program, or other
            application that is directed or targeted, in whole or in part, to children under age
            13 and subject to the Children's Online Privacy Protection Act (COPPA) by specifying
            <code>true</code> or <code>false</code> in the <code>childDirected</code> field. By
            specifying <code>true</code> in the <code>childDirected</code> field, you confirm
            that your use of Amazon Lex <b>is</b> related to a website, program, or other application
            that is directed or targeted, in whole or in part, to children under age 13 and subject
            to COPPA. By specifying <code>false</code> in the <code>childDirected</code> field,
            you confirm that your use of Amazon Lex <b>is not</b> related to a website, program,
            or other application that is directed or targeted, in whole or in part, to children
            under age 13 and subject to COPPA. You may not specify a default value for the <code>childDirected</code>
            field that does not accurately reflect whether your use of Amazon Lex is related to
            a website, program, or other application that is directed or targeted, in whole or
            in part, to children under age 13 and subject to COPPA.
            </para>
             
            <para>
            If your use of Amazon Lex relates to a website, program, or other application that
            is directed in whole or in part, to children under age 13, you must obtain any required
            verifiable parental consent under COPPA. For information regarding the use of Amazon
            Lex in connection with websites, programs, or other applications that are directed
            or targeted, in whole or in part, to children under age 13, see the <a href="https://aws.amazon.com/lex/faqs#data-security">Amazon
            Lex FAQ.</a> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotResponse.ClarificationPrompt">
            <summary>
            Gets and sets the property ClarificationPrompt. 
            <para>
             The prompts that Amazon Lex uses when it doesn't understand the user's intent. For
            more information, see <a>PutBot</a>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotResponse.CreatedDate">
            <summary>
            Gets and sets the property CreatedDate. 
            <para>
            The date that the bot was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotResponse.CreateVersion">
            <summary>
            Gets and sets the property CreateVersion. 
            <para>
             <code>True</code> if a new version of the bot was created. If the <code>createVersion</code>
            field was not specified in the request, the <code>createVersion</code> field is set
            to false in the response.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotResponse.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the bot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotResponse.DetectSentiment">
            <summary>
            Gets and sets the property DetectSentiment. 
            <para>
             <code>true</code> if the bot is configured to send user utterances to Amazon Comprehend
            for sentiment analysis. If the <code>detectSentiment</code> field was not specified
            in the request, the <code>detectSentiment</code> field is <code>false</code> in the
            response.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotResponse.EnableModelImprovements">
            <summary>
            Gets and sets the property EnableModelImprovements. 
            <para>
            Indicates whether the bot uses accuracy improvements. <code>true</code> indicates
            that the bot is using the improvements, otherwise, <code>false</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotResponse.FailureReason">
            <summary>
            Gets and sets the property FailureReason. 
            <para>
            If <code>status</code> is <code>FAILED</code>, Amazon Lex provides the reason that
            it failed to build the bot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotResponse.IdleSessionTTLInSeconds">
            <summary>
            Gets and sets the property IdleSessionTTLInSeconds. 
            <para>
            The maximum length of time that Amazon Lex retains the data gathered in a conversation.
            For more information, see <a>PutBot</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotResponse.Intents">
            <summary>
            Gets and sets the property Intents. 
            <para>
            An array of <code>Intent</code> objects. For more information, see <a>PutBot</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotResponse.LastUpdatedDate">
            <summary>
            Gets and sets the property LastUpdatedDate. 
            <para>
            The date that the bot was updated. When you create a resource, the creation date and
            last updated date are the same.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotResponse.Locale">
            <summary>
            Gets and sets the property Locale. 
            <para>
             The target locale for the bot. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the bot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotResponse.NluIntentConfidenceThreshold">
            <summary>
            Gets and sets the property NluIntentConfidenceThreshold. 
            <para>
            The score that determines where Amazon Lex inserts the <code>AMAZON.FallbackIntent</code>,
            <code>AMAZON.KendraSearchIntent</code>, or both when returning alternative intents
            in a <a href="https://docs.aws.amazon.com/lex/latest/dg/API_runtime_PostContent.html">PostContent</a>
            or <a href="https://docs.aws.amazon.com/lex/latest/dg/API_runtime_PostText.html">PostText</a>
            response. <code>AMAZON.FallbackIntent</code> is inserted if the confidence score for
            all intents is below this value. <code>AMAZON.KendraSearchIntent</code> is only inserted
            if it is configured for the bot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
             When you send a request to create a bot with <code>processBehavior</code> set to
            <code>BUILD</code>, Amazon Lex sets the <code>status</code> response element to <code>BUILDING</code>.
            </para>
             
            <para>
            In the <code>READY_BASIC_TESTING</code> state you can test the bot with user inputs
            that exactly match the utterances configured for the bot's intents and values in the
            slot types.
            </para>
             
            <para>
            If Amazon Lex can't build the bot, Amazon Lex sets <code>status</code> to <code>FAILED</code>.
            Amazon Lex returns the reason for the failure in the <code>failureReason</code> response
            element. 
            </para>
             
            <para>
            When you set <code>processBehavior</code> to <code>SAVE</code>, Amazon Lex sets the
            status code to <code>NOT BUILT</code>.
            </para>
             
            <para>
            When the bot is in the <code>READY</code> state you can test and publish the bot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            A list of tags associated with the bot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotResponse.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            The version of the bot. For a new bot, the version is always <code>$LATEST</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotResponse.VoiceId">
            <summary>
            Gets and sets the property VoiceId. 
            <para>
            The Amazon Polly voice ID that Amazon Lex uses for voice interaction with the user.
            For more information, see <a>PutBot</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.PutIntentRequest">
            <summary>
            Container for the parameters to the PutIntent operation.
            Creates an intent or replaces an existing intent.
            
             
            <para>
            To define the interaction between the user and your bot, you use one or more intents.
            For a pizza ordering bot, for example, you would create an <code>OrderPizza</code>
            intent. 
            </para>
             
            <para>
            To create an intent or replace an existing intent, you must provide the following:
            </para>
             <ul> <li> 
            <para>
            Intent name. For example, <code>OrderPizza</code>.
            </para>
             </li> <li> 
            <para>
            Sample utterances. For example, "Can I order a pizza, please." and "I want to order
            a pizza."
            </para>
             </li> <li> 
            <para>
            Information to be gathered. You specify slot types for the information that your bot
            will request from the user. You can specify standard slot types, such as a date or
            a time, or custom slot types such as the size and crust of a pizza.
            </para>
             </li> <li> 
            <para>
            How the intent will be fulfilled. You can provide a Lambda function or configure the
            intent to return the intent information to the client application. If you use a Lambda
            function, when all of the intent information is available, Amazon Lex invokes your
            Lambda function. If you configure your intent to return the intent information to
            the client application. 
            </para>
             </li> </ul> 
            <para>
            You can specify other optional information in the request, such as:
            </para>
             <ul> <li> 
            <para>
            A confirmation prompt to ask the user to confirm an intent. For example, "Shall I
            order your pizza?"
            </para>
             </li> <li> 
            <para>
            A conclusion statement to send to the user after the intent has been fulfilled. For
            example, "I placed your pizza order."
            </para>
             </li> <li> 
            <para>
            A follow-up prompt that asks the user for additional activity. For example, asking
            "Do you want to order a drink with your pizza?"
            </para>
             </li> </ul> 
            <para>
            If you specify an existing intent name to update the intent, Amazon Lex replaces the
            values in the <code>$LATEST</code> version of the intent with the values in the request.
            Amazon Lex removes fields that you don't provide in the request. If you don't specify
            the required fields, Amazon Lex throws an exception. When you update the <code>$LATEST</code>
            version of an intent, the <code>status</code> field of any bot that uses the <code>$LATEST</code>
            version of the intent is set to <code>NOT_BUILT</code>.
            </para>
             
            <para>
            For more information, see <a>how-it-works</a>.
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:PutIntent</code> action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutIntentRequest.Checksum">
            <summary>
            Gets and sets the property Checksum. 
            <para>
            Identifies a specific revision of the <code>$LATEST</code> version.
            </para>
             
            <para>
            When you create a new intent, leave the <code>checksum</code> field blank. If you
            specify a checksum you get a <code>BadRequestException</code> exception.
            </para>
             
            <para>
            When you want to update a intent, set the <code>checksum</code> field to the checksum
            of the most recent revision of the <code>$LATEST</code> version. If you don't specify
            the <code> checksum</code> field, or if the checksum does not match the <code>$LATEST</code>
            version, you get a <code>PreconditionFailedException</code> exception.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutIntentRequest.ConclusionStatement">
            <summary>
            Gets and sets the property ConclusionStatement. 
            <para>
             The statement that you want Amazon Lex to convey to the user after the intent is
            successfully fulfilled by the Lambda function. 
            </para>
             
            <para>
            This element is relevant only if you provide a Lambda function in the <code>fulfillmentActivity</code>.
            If you return the intent to the client application, you can't specify this element.
            </para>
             <note> 
            <para>
            The <code>followUpPrompt</code> and <code>conclusionStatement</code> are mutually
            exclusive. You can specify only one.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutIntentRequest.ConfirmationPrompt">
            <summary>
            Gets and sets the property ConfirmationPrompt. 
            <para>
            Prompts the user to confirm the intent. This question should have a yes or no answer.
            </para>
             
            <para>
            Amazon Lex uses this prompt to ensure that the user acknowledges that the intent is
            ready for fulfillment. For example, with the <code>OrderPizza</code> intent, you might
            want to confirm that the order is correct before placing it. For other intents, such
            as intents that simply respond to user questions, you might not need to ask the user
            for confirmation before providing the information. 
            </para>
             <note> 
            <para>
            You you must provide both the <code>rejectionStatement</code> and the <code>confirmationPrompt</code>,
            or neither.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutIntentRequest.CreateVersion">
            <summary>
            Gets and sets the property CreateVersion. 
            <para>
            When set to <code>true</code> a new numbered version of the intent is created. This
            is the same as calling the <code>CreateIntentVersion</code> operation. If you do not
            specify <code>createVersion</code>, the default is <code>false</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutIntentRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the intent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutIntentRequest.DialogCodeHook">
            <summary>
            Gets and sets the property DialogCodeHook. 
            <para>
             Specifies a Lambda function to invoke for each user input. You can invoke this Lambda
            function to personalize user interaction. 
            </para>
             
            <para>
            For example, suppose your bot determines that the user is John. Your Lambda function
            might retrieve John's information from a backend database and prepopulate some of
            the values. For example, if you find that John is gluten intolerant, you might set
            the corresponding intent slot, <code>GlutenIntolerant</code>, to true. You might find
            John's phone number and set the corresponding session attribute. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutIntentRequest.FollowUpPrompt">
            <summary>
            Gets and sets the property FollowUpPrompt. 
            <para>
            Amazon Lex uses this prompt to solicit additional activity after fulfilling an intent.
            For example, after the <code>OrderPizza</code> intent is fulfilled, you might prompt
            the user to order a drink.
            </para>
             
            <para>
            The action that Amazon Lex takes depends on the user's response, as follows:
            </para>
             <ul> <li> 
            <para>
            If the user says "Yes" it responds with the clarification prompt that is configured
            for the bot.
            </para>
             </li> <li> 
            <para>
            if the user says "Yes" and continues with an utterance that triggers an intent it
            starts a conversation for the intent.
            </para>
             </li> <li> 
            <para>
            If the user says "No" it responds with the rejection statement configured for the
            the follow-up prompt.
            </para>
             </li> <li> 
            <para>
            If it doesn't recognize the utterance it repeats the follow-up prompt again.
            </para>
             </li> </ul> 
            <para>
            The <code>followUpPrompt</code> field and the <code>conclusionStatement</code> field
            are mutually exclusive. You can specify only one. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutIntentRequest.FulfillmentActivity">
            <summary>
            Gets and sets the property FulfillmentActivity. 
            <para>
            Required. Describes how the intent is fulfilled. For example, after a user provides
            all of the information for a pizza order, <code>fulfillmentActivity</code> defines
            how the bot places an order with a local pizza store. 
            </para>
             
            <para>
             You might configure Amazon Lex to return all of the intent information to the client
            application, or direct it to invoke a Lambda function that can process the intent
            (for example, place an order with a pizzeria). 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutIntentRequest.InputContexts">
            <summary>
            Gets and sets the property InputContexts. 
            <para>
            An array of <code>InputContext</code> objects that lists the contexts that must be
            active for Amazon Lex to choose the intent in a conversation with the user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutIntentRequest.KendraConfiguration">
            <summary>
            Gets and sets the property KendraConfiguration. 
            <para>
            Configuration information required to use the <code>AMAZON.KendraSearchIntent</code>
            intent to connect to an Amazon Kendra index. For more information, see <a href="http://docs.aws.amazon.com/lex/latest/dg/built-in-intent-kendra-search.html">
            AMAZON.KendraSearchIntent</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutIntentRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the intent. The name is <i>not</i> case sensitive. 
            </para>
             
            <para>
            The name can't match a built-in intent name, or a built-in intent name with "AMAZON."
            removed. For example, because there is a built-in intent called <code>AMAZON.HelpIntent</code>,
            you can't create a custom intent called <code>HelpIntent</code>.
            </para>
             
            <para>
            For a list of built-in intents, see <a href="https://developer.amazon.com/public/solutions/alexa/alexa-skills-kit/docs/built-in-intent-ref/standard-intents">Standard
            Built-in Intents</a> in the <i>Alexa Skills Kit</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutIntentRequest.OutputContexts">
            <summary>
            Gets and sets the property OutputContexts. 
            <para>
            An array of <code>OutputContext</code> objects that lists the contexts that the intent
            activates when the intent is fulfilled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutIntentRequest.ParentIntentSignature">
            <summary>
            Gets and sets the property ParentIntentSignature. 
            <para>
            A unique identifier for the built-in intent to base this intent on. To find the signature
            for an intent, see <a href="https://developer.amazon.com/public/solutions/alexa/alexa-skills-kit/docs/built-in-intent-ref/standard-intents">Standard
            Built-in Intents</a> in the <i>Alexa Skills Kit</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutIntentRequest.RejectionStatement">
            <summary>
            Gets and sets the property RejectionStatement. 
            <para>
            When the user answers "no" to the question defined in <code>confirmationPrompt</code>,
            Amazon Lex responds with this statement to acknowledge that the intent was canceled.
            
            </para>
             <note> 
            <para>
            You must provide both the <code>rejectionStatement</code> and the <code>confirmationPrompt</code>,
            or neither.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutIntentRequest.SampleUtterances">
            <summary>
            Gets and sets the property SampleUtterances. 
            <para>
            An array of utterances (strings) that a user might say to signal the intent. For example,
            "I want {PizzaSize} pizza", "Order {Quantity} {PizzaSize} pizzas". 
            </para>
             
            <para>
            In each utterance, a slot name is enclosed in curly braces. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutIntentRequest.Slots">
            <summary>
            Gets and sets the property Slots. 
            <para>
            An array of intent slots. At runtime, Amazon Lex elicits required slot values from
            the user using prompts defined in the slots. For more information, see <a>how-it-works</a>.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.PutIntentResponse">
            <summary>
            This is the response object from the PutIntent operation.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutIntentResponse.Checksum">
            <summary>
            Gets and sets the property Checksum. 
            <para>
            Checksum of the <code>$LATEST</code>version of the intent created or updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutIntentResponse.ConclusionStatement">
            <summary>
            Gets and sets the property ConclusionStatement. 
            <para>
            After the Lambda function specified in the<code>fulfillmentActivity</code>intent fulfills
            the intent, Amazon Lex conveys this statement to the user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutIntentResponse.ConfirmationPrompt">
            <summary>
            Gets and sets the property ConfirmationPrompt. 
            <para>
            If defined in the intent, Amazon Lex prompts the user to confirm the intent before
            fulfilling it.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutIntentResponse.CreatedDate">
            <summary>
            Gets and sets the property CreatedDate. 
            <para>
            The date that the intent was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutIntentResponse.CreateVersion">
            <summary>
            Gets and sets the property CreateVersion. 
            <para>
             <code>True</code> if a new version of the intent was created. If the <code>createVersion</code>
            field was not specified in the request, the <code>createVersion</code> field is set
            to false in the response.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutIntentResponse.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the intent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutIntentResponse.DialogCodeHook">
            <summary>
            Gets and sets the property DialogCodeHook. 
            <para>
            If defined in the intent, Amazon Lex invokes this Lambda function for each user input.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutIntentResponse.FollowUpPrompt">
            <summary>
            Gets and sets the property FollowUpPrompt. 
            <para>
            If defined in the intent, Amazon Lex uses this prompt to solicit additional user activity
            after the intent is fulfilled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutIntentResponse.FulfillmentActivity">
            <summary>
            Gets and sets the property FulfillmentActivity. 
            <para>
            If defined in the intent, Amazon Lex invokes this Lambda function to fulfill the intent
            after the user provides all of the information required by the intent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutIntentResponse.InputContexts">
            <summary>
            Gets and sets the property InputContexts. 
            <para>
            An array of <code>InputContext</code> objects that lists the contexts that must be
            active for Amazon Lex to choose the intent in a conversation with the user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutIntentResponse.KendraConfiguration">
            <summary>
            Gets and sets the property KendraConfiguration. 
            <para>
            Configuration information, if any, required to connect to an Amazon Kendra index and
            use the <code>AMAZON.KendraSearchIntent</code> intent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutIntentResponse.LastUpdatedDate">
            <summary>
            Gets and sets the property LastUpdatedDate. 
            <para>
            The date that the intent was updated. When you create a resource, the creation date
            and last update dates are the same.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutIntentResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the intent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutIntentResponse.OutputContexts">
            <summary>
            Gets and sets the property OutputContexts. 
            <para>
            An array of <code>OutputContext</code> objects that lists the contexts that the intent
            activates when the intent is fulfilled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutIntentResponse.ParentIntentSignature">
            <summary>
            Gets and sets the property ParentIntentSignature. 
            <para>
            A unique identifier for the built-in intent that this intent is based on.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutIntentResponse.RejectionStatement">
            <summary>
            Gets and sets the property RejectionStatement. 
            <para>
            If the user answers "no" to the question defined in <code>confirmationPrompt</code>
            Amazon Lex responds with this statement to acknowledge that the intent was canceled.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutIntentResponse.SampleUtterances">
            <summary>
            Gets and sets the property SampleUtterances. 
            <para>
             An array of sample utterances that are configured for the intent. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutIntentResponse.Slots">
            <summary>
            Gets and sets the property Slots. 
            <para>
            An array of intent slots that are configured for the intent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutIntentResponse.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            The version of the intent. For a new intent, the version is always <code>$LATEST</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.PutSlotTypeRequest">
            <summary>
            Container for the parameters to the PutSlotType operation.
            Creates a custom slot type or replaces an existing custom slot type.
            
             
            <para>
            To create a custom slot type, specify a name for the slot type and a set of enumeration
            values, which are the values that a slot of this type can assume. For more information,
            see <a>how-it-works</a>.
            </para>
             
            <para>
            If you specify the name of an existing slot type, the fields in the request replace
            the existing values in the <code>$LATEST</code> version of the slot type. Amazon Lex
            removes the fields that you don't provide in the request. If you don't specify required
            fields, Amazon Lex throws an exception. When you update the <code>$LATEST</code> version
            of a slot type, if a bot uses the <code>$LATEST</code> version of an intent that contains
            the slot type, the bot's <code>status</code> field is set to <code>NOT_BUILT</code>.
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:PutSlotType</code> action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutSlotTypeRequest.Checksum">
            <summary>
            Gets and sets the property Checksum. 
            <para>
            Identifies a specific revision of the <code>$LATEST</code> version.
            </para>
             
            <para>
            When you create a new slot type, leave the <code>checksum</code> field blank. If you
            specify a checksum you get a <code>BadRequestException</code> exception.
            </para>
             
            <para>
            When you want to update a slot type, set the <code>checksum</code> field to the checksum
            of the most recent revision of the <code>$LATEST</code> version. If you don't specify
            the <code> checksum</code> field, or if the checksum does not match the <code>$LATEST</code>
            version, you get a <code>PreconditionFailedException</code> exception.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutSlotTypeRequest.CreateVersion">
            <summary>
            Gets and sets the property CreateVersion. 
            <para>
            When set to <code>true</code> a new numbered version of the slot type is created.
            This is the same as calling the <code>CreateSlotTypeVersion</code> operation. If you
            do not specify <code>createVersion</code>, the default is <code>false</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutSlotTypeRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the slot type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutSlotTypeRequest.EnumerationValues">
            <summary>
            Gets and sets the property EnumerationValues. 
            <para>
            A list of <code>EnumerationValue</code> objects that defines the values that the slot
            type can take. Each value can have a list of <code>synonyms</code>, which are additional
            values that help train the machine learning model about the values that it resolves
            for a slot. 
            </para>
             
            <para>
            A regular expression slot type doesn't require enumeration values. All other slot
            types require a list of enumeration values.
            </para>
             
            <para>
            When Amazon Lex resolves a slot value, it generates a resolution list that contains
            up to five possible values for the slot. If you are using a Lambda function, this
            resolution list is passed to the function. If you are not using a Lambda function
            you can choose to return the value that the user entered or the first value in the
            resolution list as the slot value. The <code>valueSelectionStrategy</code> field indicates
            the option to use. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutSlotTypeRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the slot type. The name is <i>not</i> case sensitive. 
            </para>
             
            <para>
            The name can't match a built-in slot type name, or a built-in slot type name with
            "AMAZON." removed. For example, because there is a built-in slot type called <code>AMAZON.DATE</code>,
            you can't create a custom slot type called <code>DATE</code>.
            </para>
             
            <para>
            For a list of built-in slot types, see <a href="https://developer.amazon.com/public/solutions/alexa/alexa-skills-kit/docs/built-in-intent-ref/slot-type-reference">Slot
            Type Reference</a> in the <i>Alexa Skills Kit</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutSlotTypeRequest.ParentSlotTypeSignature">
            <summary>
            Gets and sets the property ParentSlotTypeSignature. 
            <para>
            The built-in slot type used as the parent of the slot type. When you define a parent
            slot type, the new slot type has all of the same configuration as the parent.
            </para>
             
            <para>
            Only <code>AMAZON.AlphaNumeric</code> is supported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutSlotTypeRequest.SlotTypeConfigurations">
            <summary>
            Gets and sets the property SlotTypeConfigurations. 
            <para>
            Configuration information that extends the parent built-in slot type. The configuration
            is added to the settings for the parent slot type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutSlotTypeRequest.ValueSelectionStrategy">
            <summary>
            Gets and sets the property ValueSelectionStrategy. 
            <para>
            Determines the slot resolution strategy that Amazon Lex uses to return slot type values.
            The field can be set to one of the following values:
            </para>
             <ul> <li> 
            <para>
             <code>ORIGINAL_VALUE</code> - Returns the value entered by the user, if the user
            value is similar to the slot value.
            </para>
             </li> <li> 
            <para>
             <code>TOP_RESOLUTION</code> - If there is a resolution list for the slot, return
            the first value in the resolution list as the slot type value. If there is no resolution
            list, null is returned.
            </para>
             </li> </ul> 
            <para>
            If you don't specify the <code>valueSelectionStrategy</code>, the default is <code>ORIGINAL_VALUE</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.PutSlotTypeResponse">
            <summary>
            This is the response object from the PutSlotType operation.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutSlotTypeResponse.Checksum">
            <summary>
            Gets and sets the property Checksum. 
            <para>
            Checksum of the <code>$LATEST</code> version of the slot type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutSlotTypeResponse.CreatedDate">
            <summary>
            Gets and sets the property CreatedDate. 
            <para>
            The date that the slot type was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutSlotTypeResponse.CreateVersion">
            <summary>
            Gets and sets the property CreateVersion. 
            <para>
             <code>True</code> if a new version of the slot type was created. If the <code>createVersion</code>
            field was not specified in the request, the <code>createVersion</code> field is set
            to false in the response.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutSlotTypeResponse.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the slot type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutSlotTypeResponse.EnumerationValues">
            <summary>
            Gets and sets the property EnumerationValues. 
            <para>
            A list of <code>EnumerationValue</code> objects that defines the values that the slot
            type can take.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutSlotTypeResponse.LastUpdatedDate">
            <summary>
            Gets and sets the property LastUpdatedDate. 
            <para>
            The date that the slot type was updated. When you create a slot type, the creation
            date and last update date are the same.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutSlotTypeResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the slot type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutSlotTypeResponse.ParentSlotTypeSignature">
            <summary>
            Gets and sets the property ParentSlotTypeSignature. 
            <para>
            The built-in slot type used as the parent of the slot type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutSlotTypeResponse.SlotTypeConfigurations">
            <summary>
            Gets and sets the property SlotTypeConfigurations. 
            <para>
            Configuration information that extends the parent built-in slot type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutSlotTypeResponse.ValueSelectionStrategy">
            <summary>
            Gets and sets the property ValueSelectionStrategy. 
            <para>
            The slot resolution strategy that Amazon Lex uses to determine the value of the slot.
            For more information, see <a>PutSlotType</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutSlotTypeResponse.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            The version of the slot type. For a new slot type, the version is always <code>$LATEST</code>.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.ResourceInUseException">
            <summary>
            The resource that you are attempting to delete is referred to by another resource.
            Use this information to remove references to the resource that you are trying to delete.
            
             
            <para>
            The body of the exception contains a JSON object that describes the resource.
            </para>
             
            <para>
             <code>{ "resourceType": BOT | BOTALIAS | BOTCHANNEL | INTENT,</code> 
            </para>
             
            <para>
             <code>"resourceReference": {</code> 
            </para>
             
            <para>
             <code>"name": <i>string</i>, "version": <i>string</i> } }</code> 
            </para>
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.ResourceInUseException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceInUseException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.ResourceInUseException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceInUseException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.ResourceInUseException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceInUseException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.ResourceInUseException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceInUseException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.ResourceInUseException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceInUseException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.ResourceInUseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ResourceInUseException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.ResourceInUseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.ResourceInUseException.ExampleReference">
            <summary>
            Gets and sets the property ExampleReference.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.ResourceInUseException.ReferenceType">
            <summary>
            Gets and sets the property ReferenceType.
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.ResourceReference">
            <summary>
            Describes the resource that refers to the resource that you are attempting to delete.
            This object is returned as part of the <code>ResourceInUseException</code> exception.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.ResourceReference.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the resource that is using the resource that you are trying to delete.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.ResourceReference.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            The version of the resource that is using the resource that you are trying to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Slot">
            <summary>
            Identifies the version of a specific slot.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Slot.DefaultValueSpec">
            <summary>
            Gets and sets the property DefaultValueSpec. 
            <para>
            A list of default values for the slot. Default values are used when Amazon Lex hasn't
            determined a value for a slot. You can specify default values from context variables,
            session attributes, and defined values.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Slot.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the slot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Slot.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the slot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Slot.ObfuscationSetting">
            <summary>
            Gets and sets the property ObfuscationSetting. 
            <para>
            Determines whether a slot is obfuscated in conversation logs and stored utterances.
            When you obfuscate a slot, the value is replaced by the slot name in curly braces
            ({}). For example, if the slot name is "full_name", obfuscated values are replaced
            with "{full_name}". For more information, see <a href="https://docs.aws.amazon.com/lex/latest/dg/how-obfuscate.html">
            Slot Obfuscation </a>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Slot.Priority">
            <summary>
            Gets and sets the property Priority. 
            <para>
             Directs Amazon Lex the order in which to elicit this slot value from the user. For
            example, if the intent has two slots with priorities 1 and 2, AWS Amazon Lex first
            elicits a value for the slot with priority 1.
            </para>
             
            <para>
            If multiple slots share the same priority, the order in which Amazon Lex elicits values
            is arbitrary.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Slot.ResponseCard">
            <summary>
            Gets and sets the property ResponseCard. 
            <para>
             A set of possible responses for the slot type used by text-based clients. A user
            chooses an option from the response card, instead of using text to reply. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Slot.SampleUtterances">
            <summary>
            Gets and sets the property SampleUtterances. 
            <para>
             If you know a specific pattern with which users might respond to an Amazon Lex request
            for a slot value, you can provide those utterances to improve accuracy. This is optional.
            In most cases, Amazon Lex is capable of understanding user utterances. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Slot.SlotConstraint">
            <summary>
            Gets and sets the property SlotConstraint. 
            <para>
            Specifies whether the slot is required or optional. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Slot.SlotType">
            <summary>
            Gets and sets the property SlotType. 
            <para>
            The type of the slot, either a custom slot type that you defined or one of the built-in
            slot types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Slot.SlotTypeVersion">
            <summary>
            Gets and sets the property SlotTypeVersion. 
            <para>
            The version of the slot type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Slot.ValueElicitationPrompt">
            <summary>
            Gets and sets the property ValueElicitationPrompt. 
            <para>
            The prompt that Amazon Lex uses to elicit the slot value from the user.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.SlotDefaultValue">
            <summary>
            A default value for a slot.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.SlotDefaultValue.DefaultValue">
            <summary>
            Gets and sets the property DefaultValue. 
            <para>
            The default value for the slot. You can specify one of the following:
            </para>
             <ul> <li> 
            <para>
             <code>#context-name.slot-name</code> - The slot value "slot-name" in the context
            "context-name."
            </para>
             </li> <li> 
            <para>
             <code>{attribute}</code> - The slot value of the session attribute "attribute."
            </para>
             </li> <li> 
            <para>
             <code>'value'</code> - The discrete value "value."
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.SlotDefaultValueSpec">
            <summary>
            Contains the default values for a slot. Default values are used when Amazon Lex hasn't
            determined a value for a slot.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.SlotDefaultValueSpec.DefaultValueList">
            <summary>
            Gets and sets the property DefaultValueList. 
            <para>
            The default values for a slot. You can specify more than one default. For example,
            you can specify a default value to use from a matching context variable, a session
            attribute, or a fixed value.
            </para>
             
            <para>
            The default value chosen is selected based on the order that you specify them in the
            list. For example, if you specify a context variable and a fixed value in that order,
            Amazon Lex uses the context variable if it is available, else it uses the fixed value.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.SlotTypeConfiguration">
            <summary>
            Provides configuration information for a slot type.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.SlotTypeConfiguration.RegexConfiguration">
            <summary>
            Gets and sets the property RegexConfiguration. 
            <para>
            A regular expression used to validate the value of a slot.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.SlotTypeMetadata">
            <summary>
            Provides information about a slot type..
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.SlotTypeMetadata.CreatedDate">
            <summary>
            Gets and sets the property CreatedDate. 
            <para>
            The date that the slot type was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.SlotTypeMetadata.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the slot type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.SlotTypeMetadata.LastUpdatedDate">
            <summary>
            Gets and sets the property LastUpdatedDate. 
            <para>
            The date that the slot type was updated. When you create a resource, the creation
            date and last updated date are the same. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.SlotTypeMetadata.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the slot type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.SlotTypeMetadata.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            The version of the slot type.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.SlotTypeRegexConfiguration">
            <summary>
            Provides a regular expression used to validate the value of a slot.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.SlotTypeRegexConfiguration.Pattern">
            <summary>
            Gets and sets the property Pattern. 
            <para>
            A regular expression used to validate the value of a slot. 
            </para>
             
            <para>
            Use a standard regular expression. Amazon Lex supports the following characters in
            the regular expression:
            </para>
             <ul> <li> 
            <para>
            A-Z, a-z
            </para>
             </li> <li> 
            <para>
            0-9
            </para>
             </li> <li> 
            <para>
            Unicode characters ("\ u&lt;Unicode&gt;")
            </para>
             </li> </ul> 
            <para>
            Represent Unicode characters with four digits, for example "\u0041" or "\u005A".
            </para>
             
            <para>
            The following regular expression operators are not supported:
            </para>
             <ul> <li> 
            <para>
            Infinite repeaters: *, +, or {x,} with no upper bound.
            </para>
             </li> <li> 
            <para>
            Wild card (.)
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.StartImportRequest">
            <summary>
            Container for the parameters to the StartImport operation.
            Starts a job to import a resource to Amazon Lex.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.StartImportRequest.MergeStrategy">
            <summary>
            Gets and sets the property MergeStrategy. 
            <para>
            Specifies the action that the <code>StartImport</code> operation should take when
            there is an existing resource with the same name.
            </para>
             <ul> <li> 
            <para>
            FAIL_ON_CONFLICT - The import operation is stopped on the first conflict between a
            resource in the import file and an existing resource. The name of the resource causing
            the conflict is in the <code>failureReason</code> field of the response to the <code>GetImport</code>
            operation.
            </para>
             
            <para>
            OVERWRITE_LATEST - The import operation proceeds even if there is a conflict with
            an existing resource. The $LASTEST version of the existing resource is overwritten
            with the data from the import file.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.StartImportRequest.Payload">
            <summary>
            Gets and sets the property Payload. 
            <para>
            A zip archive in binary format. The archive should contain one file, a JSON file containing
            the resource to import. The resource should match the type specified in the <code>resourceType</code>
            field.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.StartImportRequest.ResourceType">
            <summary>
            Gets and sets the property ResourceType. 
            <para>
            Specifies the type of resource to export. Each resource also exports any resources
            that it depends on. 
            </para>
             <ul> <li> 
            <para>
            A bot exports dependent intents.
            </para>
             </li> <li> 
            <para>
            An intent exports dependent slot types.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.StartImportRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            A list of tags to add to the imported bot. You can only add tags when you import a
            bot, you can't add tags to an intent or slot type.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.StartImportResponse">
            <summary>
            This is the response object from the StartImport operation.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.StartImportResponse.CreatedDate">
            <summary>
            Gets and sets the property CreatedDate. 
            <para>
            A timestamp for the date and time that the import job was requested.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.StartImportResponse.ImportId">
            <summary>
            Gets and sets the property ImportId. 
            <para>
            The identifier for the specific import job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.StartImportResponse.ImportStatus">
            <summary>
            Gets and sets the property ImportStatus. 
            <para>
            The status of the import job. If the status is <code>FAILED</code>, you can get the
            reason for the failure using the <code>GetImport</code> operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.StartImportResponse.MergeStrategy">
            <summary>
            Gets and sets the property MergeStrategy. 
            <para>
            The action to take when there is a merge conflict.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.StartImportResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name given to the import job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.StartImportResponse.ResourceType">
            <summary>
            Gets and sets the property ResourceType. 
            <para>
            The type of resource to import.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.StartImportResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            A list of tags added to the imported bot.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.StartMigrationRequest">
            <summary>
            Container for the parameters to the StartMigration operation.
            Starts migrating a bot from Amazon Lex V1 to Amazon Lex V2. Migrate your bot when
            you want to take advantage of the new features of Amazon Lex V2.
            
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/lex/latest/dg/migrate.html">Migrating
            a bot</a> in the <i>Amazon Lex developer guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.StartMigrationRequest.MigrationStrategy">
            <summary>
            Gets and sets the property MigrationStrategy. 
            <para>
            The strategy used to conduct the migration.
            </para>
             <ul> <li> 
            <para>
             <code>CREATE_NEW</code> - Creates a new Amazon Lex V2 bot and migrates the Amazon
            Lex V1 bot to the new bot.
            </para>
             </li> <li> 
            <para>
             <code>UPDATE_EXISTING</code> - Overwrites the existing Amazon Lex V2 bot metadata
            and the locale being migrated. It doesn't change any other locales in the Amazon Lex
            V2 bot. If the locale doesn't exist, a new locale is created in the Amazon Lex V2
            bot.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.StartMigrationRequest.V1BotName">
            <summary>
            Gets and sets the property V1BotName. 
            <para>
            The name of the Amazon Lex V1 bot that you are migrating to Amazon Lex V2.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.StartMigrationRequest.V1BotVersion">
            <summary>
            Gets and sets the property V1BotVersion. 
            <para>
            The version of the bot to migrate to Amazon Lex V2. You can migrate the <code>$LATEST</code>
            version as well as any numbered version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.StartMigrationRequest.V2BotName">
            <summary>
            Gets and sets the property V2BotName. 
            <para>
            The name of the Amazon Lex V2 bot that you are migrating the Amazon Lex V1 bot to.
            
            </para>
             <ul> <li> 
            <para>
            If the Amazon Lex V2 bot doesn't exist, you must use the <code>CREATE_NEW</code> migration
            strategy.
            </para>
             </li> <li> 
            <para>
            If the Amazon Lex V2 bot exists, you must use the <code>UPDATE_EXISTING</code> migration
            strategy to change the contents of the Amazon Lex V2 bot.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.StartMigrationRequest.V2BotRole">
            <summary>
            Gets and sets the property V2BotRole. 
            <para>
            The IAM role that Amazon Lex uses to run the Amazon Lex V2 bot.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.StartMigrationResponse">
            <summary>
            This is the response object from the StartMigration operation.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.StartMigrationResponse.MigrationId">
            <summary>
            Gets and sets the property MigrationId. 
            <para>
            The unique identifier that Amazon Lex assigned to the migration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.StartMigrationResponse.MigrationStrategy">
            <summary>
            Gets and sets the property MigrationStrategy. 
            <para>
            The strategy used to conduct the migration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.StartMigrationResponse.MigrationTimestamp">
            <summary>
            Gets and sets the property MigrationTimestamp. 
            <para>
            The date and time that the migration started.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.StartMigrationResponse.V1BotLocale">
            <summary>
            Gets and sets the property V1BotLocale. 
            <para>
            The locale used for the Amazon Lex V1 bot. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.StartMigrationResponse.V1BotName">
            <summary>
            Gets and sets the property V1BotName. 
            <para>
            The name of the Amazon Lex V1 bot that you are migrating to Amazon Lex V2.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.StartMigrationResponse.V1BotVersion">
            <summary>
            Gets and sets the property V1BotVersion. 
            <para>
            The version of the bot to migrate to Amazon Lex V2. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.StartMigrationResponse.V2BotId">
            <summary>
            Gets and sets the property V2BotId. 
            <para>
            The unique identifier for the Amazon Lex V2 bot. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.StartMigrationResponse.V2BotRole">
            <summary>
            Gets and sets the property V2BotRole. 
            <para>
            The IAM role that Amazon Lex uses to run the Amazon Lex V2 bot.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Statement">
            <summary>
            A collection of messages that convey information to the user. At runtime, Amazon Lex
            selects the message to convey.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Statement.Messages">
            <summary>
            Gets and sets the property Messages. 
            <para>
            A collection of message objects.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Statement.ResponseCard">
            <summary>
            Gets and sets the property ResponseCard. 
            <para>
             At runtime, if the client is using the <a href="http://docs.aws.amazon.com/lex/latest/dg/API_runtime_PostText.html">PostText</a>
            API, Amazon Lex includes the response card in the response. It substitutes all of
            the session attributes and slot values for placeholders in the response card. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Tag">
            <summary>
            A list of key/value pairs that identify a bot, bot alias, or bot channel. Tag keys
            and values can consist of Unicode letters, digits, white space, and any of the following
            symbols: _ . : / = + - @.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Tag.Key">
            <summary>
            Gets and sets the property Key. 
            <para>
            The key for the tag. Keys are not case-sensitive and must be unique.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Tag.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The value associated with a key. The value may be an empty string but it can't be
            null.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.TagResourceRequest">
            <summary>
            Container for the parameters to the TagResource operation.
            Adds the specified tags to the specified resource. If a tag key already exists, the
            existing value is replaced with the new value.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.TagResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The Amazon Resource Name (ARN) of the bot, bot alias, or bot channel to tag.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.TagResourceRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            A list of tag keys to add to the resource. If a tag key already exists, the existing
            value is replaced with the new value.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.TagResourceResponse">
            <summary>
            This is the response object from the TagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.UntagResourceRequest">
            <summary>
            Container for the parameters to the UntagResource operation.
            Removes tags from a bot, bot alias or bot channel.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.UntagResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The Amazon Resource Name (ARN) of the resource to remove the tags from.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.UntagResourceRequest.TagKeys">
            <summary>
            Gets and sets the property TagKeys. 
            <para>
            A list of tag keys to remove from the resource. If a tag key does not exist on the
            resource, it is ignored.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.UntagResourceResponse">
            <summary>
            This is the response object from the UntagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.UtteranceData">
            <summary>
            Provides information about a single utterance that was made to your bot.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.UtteranceData.Count">
            <summary>
            Gets and sets the property Count. 
            <para>
            The number of times that the utterance was processed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.UtteranceData.DistinctUsers">
            <summary>
            Gets and sets the property DistinctUsers. 
            <para>
            The total number of individuals that used the utterance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.UtteranceData.FirstUtteredDate">
            <summary>
            Gets and sets the property FirstUtteredDate. 
            <para>
            The date that the utterance was first recorded.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.UtteranceData.LastUtteredDate">
            <summary>
            Gets and sets the property LastUtteredDate. 
            <para>
            The date that the utterance was last recorded.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.UtteranceData.UtteranceString">
            <summary>
            Gets and sets the property UtteranceString. 
            <para>
            The text that was entered by the user or the text representation of an audio clip.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.UtteranceList">
            <summary>
            Provides a list of utterances that have been made to a specific version of your bot.
            The list contains a maximum of 100 utterances.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.UtteranceList.BotVersion">
            <summary>
            Gets and sets the property BotVersion. 
            <para>
            The version of the bot that processed the list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.UtteranceList.Utterances">
            <summary>
            Gets and sets the property Utterances. 
            <para>
            One or more <a>UtteranceData</a> objects that contain information about the utterances
            that have been made to a bot. The maximum number of object is 100.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetBotAliasesPaginator">
            <summary>
            Base class for GetBotAliases paginators.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotAliasesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetBotChannelAssociationsPaginator">
            <summary>
            Base class for GetBotChannelAssociations paginators.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotChannelAssociationsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetBotsPaginator">
            <summary>
            Base class for GetBots paginators.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetBotVersionsPaginator">
            <summary>
            Base class for GetBotVersions paginators.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotVersionsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetBuiltinIntentsPaginator">
            <summary>
            Base class for GetBuiltinIntents paginators.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBuiltinIntentsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetBuiltinSlotTypesPaginator">
            <summary>
            Base class for GetBuiltinSlotTypes paginators.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBuiltinSlotTypesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetIntentsPaginator">
            <summary>
            Base class for GetIntents paginators.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetIntentsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetIntentVersionsPaginator">
            <summary>
            Base class for GetIntentVersions paginators.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetIntentVersionsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetMigrationsPaginator">
            <summary>
            Base class for GetMigrations paginators.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetMigrationsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetSlotTypesPaginator">
            <summary>
            Base class for GetSlotTypes paginators.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetSlotTypesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetSlotTypeVersionsPaginator">
            <summary>
            Base class for GetSlotTypeVersions paginators.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetSlotTypeVersionsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.IGetBotAliasesPaginator">
             <summary>
             Paginator for the GetBotAliases operation
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.IGetBotAliasesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.IGetBotChannelAssociationsPaginator">
             <summary>
             Paginator for the GetBotChannelAssociations operation
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.IGetBotChannelAssociationsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.IGetBotsPaginator">
             <summary>
             Paginator for the GetBots operation
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.IGetBotsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.IGetBotVersionsPaginator">
             <summary>
             Paginator for the GetBotVersions operation
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.IGetBotVersionsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.IGetBuiltinIntentsPaginator">
             <summary>
             Paginator for the GetBuiltinIntents operation
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.IGetBuiltinIntentsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.IGetBuiltinSlotTypesPaginator">
             <summary>
             Paginator for the GetBuiltinSlotTypes operation
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.IGetBuiltinSlotTypesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.IGetIntentsPaginator">
             <summary>
             Paginator for the GetIntents operation
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.IGetIntentsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.IGetIntentVersionsPaginator">
             <summary>
             Paginator for the GetIntentVersions operation
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.IGetIntentVersionsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.IGetMigrationsPaginator">
             <summary>
             Paginator for the GetMigrations operation
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.IGetMigrationsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.IGetSlotTypesPaginator">
             <summary>
             Paginator for the GetSlotTypes operation
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.IGetSlotTypesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.IGetSlotTypeVersionsPaginator">
             <summary>
             Paginator for the GetSlotTypeVersions operation
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.IGetSlotTypeVersionsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.ILexModelBuildingServicePaginatorFactory">
             <summary>
             Paginators for the LexModelBuildingService service
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.ILexModelBuildingServicePaginatorFactory.GetBotAliases(Amazon.LexModelBuildingService.Model.GetBotAliasesRequest)">
             <summary>
             Paginator for GetBotAliases operation
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.ILexModelBuildingServicePaginatorFactory.GetBotChannelAssociations(Amazon.LexModelBuildingService.Model.GetBotChannelAssociationsRequest)">
             <summary>
             Paginator for GetBotChannelAssociations operation
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.ILexModelBuildingServicePaginatorFactory.GetBots(Amazon.LexModelBuildingService.Model.GetBotsRequest)">
             <summary>
             Paginator for GetBots operation
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.ILexModelBuildingServicePaginatorFactory.GetBotVersions(Amazon.LexModelBuildingService.Model.GetBotVersionsRequest)">
             <summary>
             Paginator for GetBotVersions operation
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.ILexModelBuildingServicePaginatorFactory.GetBuiltinIntents(Amazon.LexModelBuildingService.Model.GetBuiltinIntentsRequest)">
             <summary>
             Paginator for GetBuiltinIntents operation
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.ILexModelBuildingServicePaginatorFactory.GetBuiltinSlotTypes(Amazon.LexModelBuildingService.Model.GetBuiltinSlotTypesRequest)">
             <summary>
             Paginator for GetBuiltinSlotTypes operation
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.ILexModelBuildingServicePaginatorFactory.GetIntents(Amazon.LexModelBuildingService.Model.GetIntentsRequest)">
             <summary>
             Paginator for GetIntents operation
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.ILexModelBuildingServicePaginatorFactory.GetIntentVersions(Amazon.LexModelBuildingService.Model.GetIntentVersionsRequest)">
             <summary>
             Paginator for GetIntentVersions operation
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.ILexModelBuildingServicePaginatorFactory.GetMigrations(Amazon.LexModelBuildingService.Model.GetMigrationsRequest)">
             <summary>
             Paginator for GetMigrations operation
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.ILexModelBuildingServicePaginatorFactory.GetSlotTypes(Amazon.LexModelBuildingService.Model.GetSlotTypesRequest)">
             <summary>
             Paginator for GetSlotTypes operation
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.ILexModelBuildingServicePaginatorFactory.GetSlotTypeVersions(Amazon.LexModelBuildingService.Model.GetSlotTypeVersionsRequest)">
             <summary>
             Paginator for GetSlotTypeVersions operation
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.LexModelBuildingServicePaginatorFactory">
             <summary>
             Paginators for the LexModelBuildingService service
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.LexModelBuildingServicePaginatorFactory.GetBotAliases(Amazon.LexModelBuildingService.Model.GetBotAliasesRequest)">
             <summary>
             Paginator for GetBotAliases operation
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.LexModelBuildingServicePaginatorFactory.GetBotChannelAssociations(Amazon.LexModelBuildingService.Model.GetBotChannelAssociationsRequest)">
             <summary>
             Paginator for GetBotChannelAssociations operation
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.LexModelBuildingServicePaginatorFactory.GetBots(Amazon.LexModelBuildingService.Model.GetBotsRequest)">
             <summary>
             Paginator for GetBots operation
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.LexModelBuildingServicePaginatorFactory.GetBotVersions(Amazon.LexModelBuildingService.Model.GetBotVersionsRequest)">
             <summary>
             Paginator for GetBotVersions operation
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.LexModelBuildingServicePaginatorFactory.GetBuiltinIntents(Amazon.LexModelBuildingService.Model.GetBuiltinIntentsRequest)">
             <summary>
             Paginator for GetBuiltinIntents operation
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.LexModelBuildingServicePaginatorFactory.GetBuiltinSlotTypes(Amazon.LexModelBuildingService.Model.GetBuiltinSlotTypesRequest)">
             <summary>
             Paginator for GetBuiltinSlotTypes operation
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.LexModelBuildingServicePaginatorFactory.GetIntents(Amazon.LexModelBuildingService.Model.GetIntentsRequest)">
             <summary>
             Paginator for GetIntents operation
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.LexModelBuildingServicePaginatorFactory.GetIntentVersions(Amazon.LexModelBuildingService.Model.GetIntentVersionsRequest)">
             <summary>
             Paginator for GetIntentVersions operation
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.LexModelBuildingServicePaginatorFactory.GetMigrations(Amazon.LexModelBuildingService.Model.GetMigrationsRequest)">
             <summary>
             Paginator for GetMigrations operation
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.LexModelBuildingServicePaginatorFactory.GetSlotTypes(Amazon.LexModelBuildingService.Model.GetSlotTypesRequest)">
             <summary>
             Paginator for GetSlotTypes operation
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.LexModelBuildingServicePaginatorFactory.GetSlotTypeVersions(Amazon.LexModelBuildingService.Model.GetSlotTypeVersionsRequest)">
             <summary>
             Paginator for GetSlotTypeVersions operation
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceRequest">
            <summary>
            Base class for LexModelBuildingService operation requests.
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.ChannelStatus">
            <summary>
            Constants used for properties of type ChannelStatus.
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.ChannelStatus.CREATED">
            <summary>
            Constant CREATED for ChannelStatus
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.ChannelStatus.FAILED">
            <summary>
            Constant FAILED for ChannelStatus
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.ChannelStatus.IN_PROGRESS">
            <summary>
            Constant IN_PROGRESS for ChannelStatus
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.ChannelStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.ChannelStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.ChannelStatus.op_Implicit(System.String)~Amazon.LexModelBuildingService.ChannelStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexModelBuildingService.ChannelType">
            <summary>
            Constants used for properties of type ChannelType.
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.ChannelType.Facebook">
            <summary>
            Constant Facebook for ChannelType
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.ChannelType.Kik">
            <summary>
            Constant Kik for ChannelType
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.ChannelType.Slack">
            <summary>
            Constant Slack for ChannelType
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.ChannelType.TwilioSms">
            <summary>
            Constant TwilioSms for ChannelType
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.ChannelType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.ChannelType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.ChannelType.op_Implicit(System.String)~Amazon.LexModelBuildingService.ChannelType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexModelBuildingService.ContentType">
            <summary>
            Constants used for properties of type ContentType.
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.ContentType.CustomPayload">
            <summary>
            Constant CustomPayload for ContentType
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.ContentType.PlainText">
            <summary>
            Constant PlainText for ContentType
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.ContentType.SSML">
            <summary>
            Constant SSML for ContentType
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.ContentType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.ContentType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.ContentType.op_Implicit(System.String)~Amazon.LexModelBuildingService.ContentType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Destination">
            <summary>
            Constants used for properties of type Destination.
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.Destination.CLOUDWATCH_LOGS">
            <summary>
            Constant CLOUDWATCH_LOGS for Destination
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.Destination.S3">
            <summary>
            Constant S3 for Destination
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Destination.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Destination.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Destination.op_Implicit(System.String)~Amazon.LexModelBuildingService.Destination">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexModelBuildingService.ExportStatus">
            <summary>
            Constants used for properties of type ExportStatus.
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.ExportStatus.FAILED">
            <summary>
            Constant FAILED for ExportStatus
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.ExportStatus.IN_PROGRESS">
            <summary>
            Constant IN_PROGRESS for ExportStatus
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.ExportStatus.READY">
            <summary>
            Constant READY for ExportStatus
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.ExportStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.ExportStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.ExportStatus.op_Implicit(System.String)~Amazon.LexModelBuildingService.ExportStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexModelBuildingService.ExportType">
            <summary>
            Constants used for properties of type ExportType.
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.ExportType.ALEXA_SKILLS_KIT">
            <summary>
            Constant ALEXA_SKILLS_KIT for ExportType
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.ExportType.LEX">
            <summary>
            Constant LEX for ExportType
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.ExportType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.ExportType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.ExportType.op_Implicit(System.String)~Amazon.LexModelBuildingService.ExportType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexModelBuildingService.FulfillmentActivityType">
            <summary>
            Constants used for properties of type FulfillmentActivityType.
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.FulfillmentActivityType.CodeHook">
            <summary>
            Constant CodeHook for FulfillmentActivityType
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.FulfillmentActivityType.ReturnIntent">
            <summary>
            Constant ReturnIntent for FulfillmentActivityType
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.FulfillmentActivityType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.FulfillmentActivityType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.FulfillmentActivityType.op_Implicit(System.String)~Amazon.LexModelBuildingService.FulfillmentActivityType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexModelBuildingService.ImportStatus">
            <summary>
            Constants used for properties of type ImportStatus.
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.ImportStatus.COMPLETE">
            <summary>
            Constant COMPLETE for ImportStatus
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.ImportStatus.FAILED">
            <summary>
            Constant FAILED for ImportStatus
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.ImportStatus.IN_PROGRESS">
            <summary>
            Constant IN_PROGRESS for ImportStatus
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.ImportStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.ImportStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.ImportStatus.op_Implicit(System.String)~Amazon.LexModelBuildingService.ImportStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Locale">
            <summary>
            Constants used for properties of type Locale.
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.Locale.DeDE">
            <summary>
            Constant DeDE for Locale
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.Locale.EnAU">
            <summary>
            Constant EnAU for Locale
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.Locale.EnGB">
            <summary>
            Constant EnGB for Locale
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.Locale.EnIN">
            <summary>
            Constant EnIN for Locale
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.Locale.EnUS">
            <summary>
            Constant EnUS for Locale
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.Locale.Es419">
            <summary>
            Constant Es419 for Locale
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.Locale.EsES">
            <summary>
            Constant EsES for Locale
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.Locale.EsUS">
            <summary>
            Constant EsUS for Locale
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.Locale.FrCA">
            <summary>
            Constant FrCA for Locale
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.Locale.FrFR">
            <summary>
            Constant FrFR for Locale
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.Locale.ItIT">
            <summary>
            Constant ItIT for Locale
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.Locale.JaJP">
            <summary>
            Constant JaJP for Locale
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.Locale.KoKR">
            <summary>
            Constant KoKR for Locale
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Locale.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Locale.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Locale.op_Implicit(System.String)~Amazon.LexModelBuildingService.Locale">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexModelBuildingService.LogType">
            <summary>
            Constants used for properties of type LogType.
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.LogType.AUDIO">
            <summary>
            Constant AUDIO for LogType
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.LogType.TEXT">
            <summary>
            Constant TEXT for LogType
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.LogType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.LogType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.LogType.op_Implicit(System.String)~Amazon.LexModelBuildingService.LogType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexModelBuildingService.MergeStrategy">
            <summary>
            Constants used for properties of type MergeStrategy.
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.MergeStrategy.FAIL_ON_CONFLICT">
            <summary>
            Constant FAIL_ON_CONFLICT for MergeStrategy
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.MergeStrategy.OVERWRITE_LATEST">
            <summary>
            Constant OVERWRITE_LATEST for MergeStrategy
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.MergeStrategy.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.MergeStrategy.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.MergeStrategy.op_Implicit(System.String)~Amazon.LexModelBuildingService.MergeStrategy">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexModelBuildingService.MigrationAlertType">
            <summary>
            Constants used for properties of type MigrationAlertType.
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.MigrationAlertType.ERROR">
            <summary>
            Constant ERROR for MigrationAlertType
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.MigrationAlertType.WARN">
            <summary>
            Constant WARN for MigrationAlertType
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.MigrationAlertType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.MigrationAlertType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.MigrationAlertType.op_Implicit(System.String)~Amazon.LexModelBuildingService.MigrationAlertType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexModelBuildingService.MigrationSortAttribute">
            <summary>
            Constants used for properties of type MigrationSortAttribute.
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.MigrationSortAttribute.MIGRATION_DATE_TIME">
            <summary>
            Constant MIGRATION_DATE_TIME for MigrationSortAttribute
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.MigrationSortAttribute.V1_BOT_NAME">
            <summary>
            Constant V1_BOT_NAME for MigrationSortAttribute
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.MigrationSortAttribute.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.MigrationSortAttribute.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.MigrationSortAttribute.op_Implicit(System.String)~Amazon.LexModelBuildingService.MigrationSortAttribute">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexModelBuildingService.MigrationStatus">
            <summary>
            Constants used for properties of type MigrationStatus.
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.MigrationStatus.COMPLETED">
            <summary>
            Constant COMPLETED for MigrationStatus
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.MigrationStatus.FAILED">
            <summary>
            Constant FAILED for MigrationStatus
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.MigrationStatus.IN_PROGRESS">
            <summary>
            Constant IN_PROGRESS for MigrationStatus
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.MigrationStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.MigrationStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.MigrationStatus.op_Implicit(System.String)~Amazon.LexModelBuildingService.MigrationStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexModelBuildingService.MigrationStrategy">
            <summary>
            Constants used for properties of type MigrationStrategy.
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.MigrationStrategy.CREATE_NEW">
            <summary>
            Constant CREATE_NEW for MigrationStrategy
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.MigrationStrategy.UPDATE_EXISTING">
            <summary>
            Constant UPDATE_EXISTING for MigrationStrategy
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.MigrationStrategy.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.MigrationStrategy.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.MigrationStrategy.op_Implicit(System.String)~Amazon.LexModelBuildingService.MigrationStrategy">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexModelBuildingService.ObfuscationSetting">
            <summary>
            Constants used for properties of type ObfuscationSetting.
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.ObfuscationSetting.DEFAULT_OBFUSCATION">
            <summary>
            Constant DEFAULT_OBFUSCATION for ObfuscationSetting
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.ObfuscationSetting.NONE">
            <summary>
            Constant NONE for ObfuscationSetting
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.ObfuscationSetting.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.ObfuscationSetting.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.ObfuscationSetting.op_Implicit(System.String)~Amazon.LexModelBuildingService.ObfuscationSetting">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexModelBuildingService.ProcessBehavior">
            <summary>
            Constants used for properties of type ProcessBehavior.
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.ProcessBehavior.BUILD">
            <summary>
            Constant BUILD for ProcessBehavior
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.ProcessBehavior.SAVE">
            <summary>
            Constant SAVE for ProcessBehavior
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.ProcessBehavior.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.ProcessBehavior.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.ProcessBehavior.op_Implicit(System.String)~Amazon.LexModelBuildingService.ProcessBehavior">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexModelBuildingService.ReferenceType">
            <summary>
            Constants used for properties of type ReferenceType.
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.ReferenceType.Bot">
            <summary>
            Constant Bot for ReferenceType
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.ReferenceType.BotAlias">
            <summary>
            Constant BotAlias for ReferenceType
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.ReferenceType.BotChannel">
            <summary>
            Constant BotChannel for ReferenceType
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.ReferenceType.Intent">
            <summary>
            Constant Intent for ReferenceType
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.ReferenceType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.ReferenceType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.ReferenceType.op_Implicit(System.String)~Amazon.LexModelBuildingService.ReferenceType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexModelBuildingService.ResourceType">
            <summary>
            Constants used for properties of type ResourceType.
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.ResourceType.BOT">
            <summary>
            Constant BOT for ResourceType
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.ResourceType.INTENT">
            <summary>
            Constant INTENT for ResourceType
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.ResourceType.SLOT_TYPE">
            <summary>
            Constant SLOT_TYPE for ResourceType
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.ResourceType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.ResourceType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.ResourceType.op_Implicit(System.String)~Amazon.LexModelBuildingService.ResourceType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexModelBuildingService.SlotConstraint">
            <summary>
            Constants used for properties of type SlotConstraint.
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.SlotConstraint.Optional">
            <summary>
            Constant Optional for SlotConstraint
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.SlotConstraint.Required">
            <summary>
            Constant Required for SlotConstraint
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.SlotConstraint.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.SlotConstraint.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.SlotConstraint.op_Implicit(System.String)~Amazon.LexModelBuildingService.SlotConstraint">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexModelBuildingService.SlotValueSelectionStrategy">
            <summary>
            Constants used for properties of type SlotValueSelectionStrategy.
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.SlotValueSelectionStrategy.ORIGINAL_VALUE">
            <summary>
            Constant ORIGINAL_VALUE for SlotValueSelectionStrategy
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.SlotValueSelectionStrategy.TOP_RESOLUTION">
            <summary>
            Constant TOP_RESOLUTION for SlotValueSelectionStrategy
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.SlotValueSelectionStrategy.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.SlotValueSelectionStrategy.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.SlotValueSelectionStrategy.op_Implicit(System.String)~Amazon.LexModelBuildingService.SlotValueSelectionStrategy">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexModelBuildingService.SortOrder">
            <summary>
            Constants used for properties of type SortOrder.
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.SortOrder.ASCENDING">
            <summary>
            Constant ASCENDING for SortOrder
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.SortOrder.DESCENDING">
            <summary>
            Constant DESCENDING for SortOrder
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.SortOrder.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.SortOrder.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.SortOrder.op_Implicit(System.String)~Amazon.LexModelBuildingService.SortOrder">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Status">
            <summary>
            Constants used for properties of type Status.
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.Status.BUILDING">
            <summary>
            Constant BUILDING for Status
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.Status.FAILED">
            <summary>
            Constant FAILED for Status
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.Status.NOT_BUILT">
            <summary>
            Constant NOT_BUILT for Status
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.Status.READY">
            <summary>
            Constant READY for Status
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.Status.READY_BASIC_TESTING">
            <summary>
            Constant READY_BASIC_TESTING for Status
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Status.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Status.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Status.op_Implicit(System.String)~Amazon.LexModelBuildingService.Status">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexModelBuildingService.StatusType">
            <summary>
            Constants used for properties of type StatusType.
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.StatusType.Detected">
            <summary>
            Constant Detected for StatusType
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.StatusType.Missed">
            <summary>
            Constant Missed for StatusType
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.StatusType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.StatusType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.StatusType.op_Implicit(System.String)~Amazon.LexModelBuildingService.StatusType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient">
             <summary>
             Implementation for accessing LexModelBuildingService
            
             Amazon Lex Build-Time Actions 
             <para>
              Amazon Lex is an AWS service for building conversational voice and text interfaces.
             Use these actions to create, update, and delete conversational bots for new and existing
             client applications. 
             </para>
             </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.#ctor">
             <summary>
             Constructs AmazonLexModelBuildingServiceClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonLexModelBuildingServiceClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.#ctor(Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceConfig)">
             <summary>
             Constructs AmazonLexModelBuildingServiceClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonLexModelBuildingServiceClient Configuration Object</param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonLexModelBuildingServiceClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonLexModelBuildingServiceClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceConfig)">
            <summary>
            Constructs AmazonLexModelBuildingServiceClient with AWS Credentials and an
            AmazonLexModelBuildingServiceClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonLexModelBuildingServiceClient Configuration Object</param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonLexModelBuildingServiceClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonLexModelBuildingServiceClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.#ctor(System.String,System.String,Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceConfig)">
            <summary>
            Constructs AmazonLexModelBuildingServiceClient with AWS Access Key ID, AWS Secret Key and an
            AmazonLexModelBuildingServiceClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonLexModelBuildingServiceClient Configuration Object</param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonLexModelBuildingServiceClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonLexModelBuildingServiceClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.#ctor(System.String,System.String,System.String,Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceConfig)">
            <summary>
            Constructs AmazonLexModelBuildingServiceClient with AWS Access Key ID, AWS Secret Key and an
            AmazonLexModelBuildingServiceClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonLexModelBuildingServiceClient Configuration Object</param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.ServiceMetadata">
            <summary>
            Capture metadata for the service.
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.CreateBotVersion(Amazon.LexModelBuildingService.Model.CreateBotVersionRequest)">
            <summary>
            Creates a new version of the bot based on the <code>$LATEST</code> version. If the
            <code>$LATEST</code> version of this resource hasn't changed since you created the
            last version, Amazon Lex doesn't create a new version. It returns the last created
            version.
            
             <note> 
            <para>
            You can update only the <code>$LATEST</code> version of the bot. You can't update
            the numbered versions that you create with the <code>CreateBotVersion</code> operation.
            </para>
             </note> 
            <para>
             When you create the first version of a bot, Amazon Lex sets the version to 1. Subsequent
            versions increment by 1. For more information, see <a>versioning-intro</a>. 
            </para>
             
            <para>
             This operation requires permission for the <code>lex:CreateBotVersion</code> action.
            
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateBotVersion service method.</param>
            
            <returns>The response from the CreateBotVersion service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.PreconditionFailedException">
            The checksum of the resource that you are trying to change does not match the checksum
            in the request. Check the resource's checksum and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/CreateBotVersion">REST API Reference for CreateBotVersion Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.CreateBotVersionAsync(Amazon.LexModelBuildingService.Model.CreateBotVersionRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new version of the bot based on the <code>$LATEST</code> version. If the
            <code>$LATEST</code> version of this resource hasn't changed since you created the
            last version, Amazon Lex doesn't create a new version. It returns the last created
            version.
            
             <note> 
            <para>
            You can update only the <code>$LATEST</code> version of the bot. You can't update
            the numbered versions that you create with the <code>CreateBotVersion</code> operation.
            </para>
             </note> 
            <para>
             When you create the first version of a bot, Amazon Lex sets the version to 1. Subsequent
            versions increment by 1. For more information, see <a>versioning-intro</a>. 
            </para>
             
            <para>
             This operation requires permission for the <code>lex:CreateBotVersion</code> action.
            
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateBotVersion service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateBotVersion service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.PreconditionFailedException">
            The checksum of the resource that you are trying to change does not match the checksum
            in the request. Check the resource's checksum and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/CreateBotVersion">REST API Reference for CreateBotVersion Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.CreateIntentVersion(Amazon.LexModelBuildingService.Model.CreateIntentVersionRequest)">
            <summary>
            Creates a new version of an intent based on the <code>$LATEST</code> version of the
            intent. If the <code>$LATEST</code> version of this intent hasn't changed since you
            last updated it, Amazon Lex doesn't create a new version. It returns the last version
            you created.
            
             <note> 
            <para>
            You can update only the <code>$LATEST</code> version of the intent. You can't update
            the numbered versions that you create with the <code>CreateIntentVersion</code> operation.
            </para>
             </note> 
            <para>
             When you create a version of an intent, Amazon Lex sets the version to 1. Subsequent
            versions increment by 1. For more information, see <a>versioning-intro</a>. 
            </para>
             
            <para>
            This operation requires permissions to perform the <code>lex:CreateIntentVersion</code>
            action. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateIntentVersion service method.</param>
            
            <returns>The response from the CreateIntentVersion service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.PreconditionFailedException">
            The checksum of the resource that you are trying to change does not match the checksum
            in the request. Check the resource's checksum and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/CreateIntentVersion">REST API Reference for CreateIntentVersion Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.CreateIntentVersionAsync(Amazon.LexModelBuildingService.Model.CreateIntentVersionRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new version of an intent based on the <code>$LATEST</code> version of the
            intent. If the <code>$LATEST</code> version of this intent hasn't changed since you
            last updated it, Amazon Lex doesn't create a new version. It returns the last version
            you created.
            
             <note> 
            <para>
            You can update only the <code>$LATEST</code> version of the intent. You can't update
            the numbered versions that you create with the <code>CreateIntentVersion</code> operation.
            </para>
             </note> 
            <para>
             When you create a version of an intent, Amazon Lex sets the version to 1. Subsequent
            versions increment by 1. For more information, see <a>versioning-intro</a>. 
            </para>
             
            <para>
            This operation requires permissions to perform the <code>lex:CreateIntentVersion</code>
            action. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateIntentVersion service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateIntentVersion service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.PreconditionFailedException">
            The checksum of the resource that you are trying to change does not match the checksum
            in the request. Check the resource's checksum and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/CreateIntentVersion">REST API Reference for CreateIntentVersion Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.CreateSlotTypeVersion(Amazon.LexModelBuildingService.Model.CreateSlotTypeVersionRequest)">
            <summary>
            Creates a new version of a slot type based on the <code>$LATEST</code> version of
            the specified slot type. If the <code>$LATEST</code> version of this resource has
            not changed since the last version that you created, Amazon Lex doesn't create a new
            version. It returns the last version that you created. 
            
             <note> 
            <para>
            You can update only the <code>$LATEST</code> version of a slot type. You can't update
            the numbered versions that you create with the <code>CreateSlotTypeVersion</code>
            operation.
            </para>
             </note> 
            <para>
            When you create a version of a slot type, Amazon Lex sets the version to 1. Subsequent
            versions increment by 1. For more information, see <a>versioning-intro</a>. 
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:CreateSlotTypeVersion</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateSlotTypeVersion service method.</param>
            
            <returns>The response from the CreateSlotTypeVersion service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.PreconditionFailedException">
            The checksum of the resource that you are trying to change does not match the checksum
            in the request. Check the resource's checksum and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/CreateSlotTypeVersion">REST API Reference for CreateSlotTypeVersion Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.CreateSlotTypeVersionAsync(Amazon.LexModelBuildingService.Model.CreateSlotTypeVersionRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new version of a slot type based on the <code>$LATEST</code> version of
            the specified slot type. If the <code>$LATEST</code> version of this resource has
            not changed since the last version that you created, Amazon Lex doesn't create a new
            version. It returns the last version that you created. 
            
             <note> 
            <para>
            You can update only the <code>$LATEST</code> version of a slot type. You can't update
            the numbered versions that you create with the <code>CreateSlotTypeVersion</code>
            operation.
            </para>
             </note> 
            <para>
            When you create a version of a slot type, Amazon Lex sets the version to 1. Subsequent
            versions increment by 1. For more information, see <a>versioning-intro</a>. 
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:CreateSlotTypeVersion</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateSlotTypeVersion service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateSlotTypeVersion service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.PreconditionFailedException">
            The checksum of the resource that you are trying to change does not match the checksum
            in the request. Check the resource's checksum and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/CreateSlotTypeVersion">REST API Reference for CreateSlotTypeVersion Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.DeleteBot(Amazon.LexModelBuildingService.Model.DeleteBotRequest)">
            <summary>
            Deletes all versions of the bot, including the <code>$LATEST</code> version. To delete
            a specific version of the bot, use the <a>DeleteBotVersion</a> operation. The <code>DeleteBot</code>
            operation doesn't immediately remove the bot schema. Instead, it is marked for deletion
            and removed later.
            
             
            <para>
            Amazon Lex stores utterances indefinitely for improving the ability of your bot to
            respond to user inputs. These utterances are not removed when the bot is deleted.
            To remove the utterances, use the <a>DeleteUtterances</a> operation.
            </para>
             
            <para>
            If a bot has an alias, you can't delete it. Instead, the <code>DeleteBot</code> operation
            returns a <code>ResourceInUseException</code> exception that includes a reference
            to the alias that refers to the bot. To remove the reference to the bot, delete the
            alias. If you get the same exception again, delete the referring alias until the <code>DeleteBot</code>
            operation is successful.
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:DeleteBot</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteBot service method.</param>
            
            <returns>The response from the DeleteBot service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ResourceInUseException">
            The resource that you are attempting to delete is referred to by another resource.
            Use this information to remove references to the resource that you are trying to delete.
            
             
            <para>
            The body of the exception contains a JSON object that describes the resource.
            </para>
             
            <para>
             <code>{ "resourceType": BOT | BOTALIAS | BOTCHANNEL | INTENT,</code> 
            </para>
             
            <para>
             <code>"resourceReference": {</code> 
            </para>
             
            <para>
             <code>"name": <i>string</i>, "version": <i>string</i> } }</code> 
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteBot">REST API Reference for DeleteBot Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.DeleteBotAsync(Amazon.LexModelBuildingService.Model.DeleteBotRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes all versions of the bot, including the <code>$LATEST</code> version. To delete
            a specific version of the bot, use the <a>DeleteBotVersion</a> operation. The <code>DeleteBot</code>
            operation doesn't immediately remove the bot schema. Instead, it is marked for deletion
            and removed later.
            
             
            <para>
            Amazon Lex stores utterances indefinitely for improving the ability of your bot to
            respond to user inputs. These utterances are not removed when the bot is deleted.
            To remove the utterances, use the <a>DeleteUtterances</a> operation.
            </para>
             
            <para>
            If a bot has an alias, you can't delete it. Instead, the <code>DeleteBot</code> operation
            returns a <code>ResourceInUseException</code> exception that includes a reference
            to the alias that refers to the bot. To remove the reference to the bot, delete the
            alias. If you get the same exception again, delete the referring alias until the <code>DeleteBot</code>
            operation is successful.
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:DeleteBot</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteBot service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteBot service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ResourceInUseException">
            The resource that you are attempting to delete is referred to by another resource.
            Use this information to remove references to the resource that you are trying to delete.
            
             
            <para>
            The body of the exception contains a JSON object that describes the resource.
            </para>
             
            <para>
             <code>{ "resourceType": BOT | BOTALIAS | BOTCHANNEL | INTENT,</code> 
            </para>
             
            <para>
             <code>"resourceReference": {</code> 
            </para>
             
            <para>
             <code>"name": <i>string</i>, "version": <i>string</i> } }</code> 
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteBot">REST API Reference for DeleteBot Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.DeleteBotAlias(Amazon.LexModelBuildingService.Model.DeleteBotAliasRequest)">
            <summary>
            Deletes an alias for the specified bot. 
            
             
            <para>
            You can't delete an alias that is used in the association between a bot and a messaging
            channel. If an alias is used in a channel association, the <code>DeleteBot</code>
            operation returns a <code>ResourceInUseException</code> exception that includes a
            reference to the channel association that refers to the bot. You can remove the reference
            to the alias by deleting the channel association. If you get the same exception again,
            delete the referring association until the <code>DeleteBotAlias</code> operation is
            successful.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteBotAlias service method.</param>
            
            <returns>The response from the DeleteBotAlias service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ResourceInUseException">
            The resource that you are attempting to delete is referred to by another resource.
            Use this information to remove references to the resource that you are trying to delete.
            
             
            <para>
            The body of the exception contains a JSON object that describes the resource.
            </para>
             
            <para>
             <code>{ "resourceType": BOT | BOTALIAS | BOTCHANNEL | INTENT,</code> 
            </para>
             
            <para>
             <code>"resourceReference": {</code> 
            </para>
             
            <para>
             <code>"name": <i>string</i>, "version": <i>string</i> } }</code> 
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteBotAlias">REST API Reference for DeleteBotAlias Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.DeleteBotAliasAsync(Amazon.LexModelBuildingService.Model.DeleteBotAliasRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes an alias for the specified bot. 
            
             
            <para>
            You can't delete an alias that is used in the association between a bot and a messaging
            channel. If an alias is used in a channel association, the <code>DeleteBot</code>
            operation returns a <code>ResourceInUseException</code> exception that includes a
            reference to the channel association that refers to the bot. You can remove the reference
            to the alias by deleting the channel association. If you get the same exception again,
            delete the referring association until the <code>DeleteBotAlias</code> operation is
            successful.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteBotAlias service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteBotAlias service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ResourceInUseException">
            The resource that you are attempting to delete is referred to by another resource.
            Use this information to remove references to the resource that you are trying to delete.
            
             
            <para>
            The body of the exception contains a JSON object that describes the resource.
            </para>
             
            <para>
             <code>{ "resourceType": BOT | BOTALIAS | BOTCHANNEL | INTENT,</code> 
            </para>
             
            <para>
             <code>"resourceReference": {</code> 
            </para>
             
            <para>
             <code>"name": <i>string</i>, "version": <i>string</i> } }</code> 
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteBotAlias">REST API Reference for DeleteBotAlias Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.DeleteBotChannelAssociation(Amazon.LexModelBuildingService.Model.DeleteBotChannelAssociationRequest)">
            <summary>
            Deletes the association between an Amazon Lex bot and a messaging platform.
            
             
            <para>
            This operation requires permission for the <code>lex:DeleteBotChannelAssociation</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteBotChannelAssociation service method.</param>
            
            <returns>The response from the DeleteBotChannelAssociation service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteBotChannelAssociation">REST API Reference for DeleteBotChannelAssociation Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.DeleteBotChannelAssociationAsync(Amazon.LexModelBuildingService.Model.DeleteBotChannelAssociationRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the association between an Amazon Lex bot and a messaging platform.
            
             
            <para>
            This operation requires permission for the <code>lex:DeleteBotChannelAssociation</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteBotChannelAssociation service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteBotChannelAssociation service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteBotChannelAssociation">REST API Reference for DeleteBotChannelAssociation Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.DeleteBotVersion(Amazon.LexModelBuildingService.Model.DeleteBotVersionRequest)">
            <summary>
            Deletes a specific version of a bot. To delete all versions of a bot, use the <a>DeleteBot</a>
            operation. 
            
             
            <para>
            This operation requires permissions for the <code>lex:DeleteBotVersion</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteBotVersion service method.</param>
            
            <returns>The response from the DeleteBotVersion service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ResourceInUseException">
            The resource that you are attempting to delete is referred to by another resource.
            Use this information to remove references to the resource that you are trying to delete.
            
             
            <para>
            The body of the exception contains a JSON object that describes the resource.
            </para>
             
            <para>
             <code>{ "resourceType": BOT | BOTALIAS | BOTCHANNEL | INTENT,</code> 
            </para>
             
            <para>
             <code>"resourceReference": {</code> 
            </para>
             
            <para>
             <code>"name": <i>string</i>, "version": <i>string</i> } }</code> 
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteBotVersion">REST API Reference for DeleteBotVersion Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.DeleteBotVersionAsync(Amazon.LexModelBuildingService.Model.DeleteBotVersionRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a specific version of a bot. To delete all versions of a bot, use the <a>DeleteBot</a>
            operation. 
            
             
            <para>
            This operation requires permissions for the <code>lex:DeleteBotVersion</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteBotVersion service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteBotVersion service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ResourceInUseException">
            The resource that you are attempting to delete is referred to by another resource.
            Use this information to remove references to the resource that you are trying to delete.
            
             
            <para>
            The body of the exception contains a JSON object that describes the resource.
            </para>
             
            <para>
             <code>{ "resourceType": BOT | BOTALIAS | BOTCHANNEL | INTENT,</code> 
            </para>
             
            <para>
             <code>"resourceReference": {</code> 
            </para>
             
            <para>
             <code>"name": <i>string</i>, "version": <i>string</i> } }</code> 
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteBotVersion">REST API Reference for DeleteBotVersion Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.DeleteIntent(Amazon.LexModelBuildingService.Model.DeleteIntentRequest)">
            <summary>
            Deletes all versions of the intent, including the <code>$LATEST</code> version. To
            delete a specific version of the intent, use the <a>DeleteIntentVersion</a> operation.
            
             
            <para>
             You can delete a version of an intent only if it is not referenced. To delete an
            intent that is referred to in one or more bots (see <a>how-it-works</a>), you must
            remove those references first. 
            </para>
             <note> 
            <para>
             If you get the <code>ResourceInUseException</code> exception, it provides an example
            reference that shows where the intent is referenced. To remove the reference to the
            intent, either update the bot or delete it. If you get the same exception when you
            attempt to delete the intent again, repeat until the intent has no references and
            the call to <code>DeleteIntent</code> is successful. 
            </para>
             </note> 
            <para>
             This operation requires permission for the <code>lex:DeleteIntent</code> action.
            
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteIntent service method.</param>
            
            <returns>The response from the DeleteIntent service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ResourceInUseException">
            The resource that you are attempting to delete is referred to by another resource.
            Use this information to remove references to the resource that you are trying to delete.
            
             
            <para>
            The body of the exception contains a JSON object that describes the resource.
            </para>
             
            <para>
             <code>{ "resourceType": BOT | BOTALIAS | BOTCHANNEL | INTENT,</code> 
            </para>
             
            <para>
             <code>"resourceReference": {</code> 
            </para>
             
            <para>
             <code>"name": <i>string</i>, "version": <i>string</i> } }</code> 
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteIntent">REST API Reference for DeleteIntent Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.DeleteIntentAsync(Amazon.LexModelBuildingService.Model.DeleteIntentRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes all versions of the intent, including the <code>$LATEST</code> version. To
            delete a specific version of the intent, use the <a>DeleteIntentVersion</a> operation.
            
             
            <para>
             You can delete a version of an intent only if it is not referenced. To delete an
            intent that is referred to in one or more bots (see <a>how-it-works</a>), you must
            remove those references first. 
            </para>
             <note> 
            <para>
             If you get the <code>ResourceInUseException</code> exception, it provides an example
            reference that shows where the intent is referenced. To remove the reference to the
            intent, either update the bot or delete it. If you get the same exception when you
            attempt to delete the intent again, repeat until the intent has no references and
            the call to <code>DeleteIntent</code> is successful. 
            </para>
             </note> 
            <para>
             This operation requires permission for the <code>lex:DeleteIntent</code> action.
            
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteIntent service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteIntent service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ResourceInUseException">
            The resource that you are attempting to delete is referred to by another resource.
            Use this information to remove references to the resource that you are trying to delete.
            
             
            <para>
            The body of the exception contains a JSON object that describes the resource.
            </para>
             
            <para>
             <code>{ "resourceType": BOT | BOTALIAS | BOTCHANNEL | INTENT,</code> 
            </para>
             
            <para>
             <code>"resourceReference": {</code> 
            </para>
             
            <para>
             <code>"name": <i>string</i>, "version": <i>string</i> } }</code> 
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteIntent">REST API Reference for DeleteIntent Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.DeleteIntentVersion(Amazon.LexModelBuildingService.Model.DeleteIntentVersionRequest)">
            <summary>
            Deletes a specific version of an intent. To delete all versions of a intent, use the
            <a>DeleteIntent</a> operation. 
            
             
            <para>
            This operation requires permissions for the <code>lex:DeleteIntentVersion</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteIntentVersion service method.</param>
            
            <returns>The response from the DeleteIntentVersion service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ResourceInUseException">
            The resource that you are attempting to delete is referred to by another resource.
            Use this information to remove references to the resource that you are trying to delete.
            
             
            <para>
            The body of the exception contains a JSON object that describes the resource.
            </para>
             
            <para>
             <code>{ "resourceType": BOT | BOTALIAS | BOTCHANNEL | INTENT,</code> 
            </para>
             
            <para>
             <code>"resourceReference": {</code> 
            </para>
             
            <para>
             <code>"name": <i>string</i>, "version": <i>string</i> } }</code> 
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteIntentVersion">REST API Reference for DeleteIntentVersion Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.DeleteIntentVersionAsync(Amazon.LexModelBuildingService.Model.DeleteIntentVersionRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a specific version of an intent. To delete all versions of a intent, use the
            <a>DeleteIntent</a> operation. 
            
             
            <para>
            This operation requires permissions for the <code>lex:DeleteIntentVersion</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteIntentVersion service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteIntentVersion service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ResourceInUseException">
            The resource that you are attempting to delete is referred to by another resource.
            Use this information to remove references to the resource that you are trying to delete.
            
             
            <para>
            The body of the exception contains a JSON object that describes the resource.
            </para>
             
            <para>
             <code>{ "resourceType": BOT | BOTALIAS | BOTCHANNEL | INTENT,</code> 
            </para>
             
            <para>
             <code>"resourceReference": {</code> 
            </para>
             
            <para>
             <code>"name": <i>string</i>, "version": <i>string</i> } }</code> 
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteIntentVersion">REST API Reference for DeleteIntentVersion Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.DeleteSlotType(Amazon.LexModelBuildingService.Model.DeleteSlotTypeRequest)">
            <summary>
            Deletes all versions of the slot type, including the <code>$LATEST</code> version.
            To delete a specific version of the slot type, use the <a>DeleteSlotTypeVersion</a>
            operation.
            
             
            <para>
             You can delete a version of a slot type only if it is not referenced. To delete a
            slot type that is referred to in one or more intents, you must remove those references
            first. 
            </para>
             <note> 
            <para>
             If you get the <code>ResourceInUseException</code> exception, the exception provides
            an example reference that shows the intent where the slot type is referenced. To remove
            the reference to the slot type, either update the intent or delete it. If you get
            the same exception when you attempt to delete the slot type again, repeat until the
            slot type has no references and the <code>DeleteSlotType</code> call is successful.
            
            </para>
             </note> 
            <para>
            This operation requires permission for the <code>lex:DeleteSlotType</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteSlotType service method.</param>
            
            <returns>The response from the DeleteSlotType service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ResourceInUseException">
            The resource that you are attempting to delete is referred to by another resource.
            Use this information to remove references to the resource that you are trying to delete.
            
             
            <para>
            The body of the exception contains a JSON object that describes the resource.
            </para>
             
            <para>
             <code>{ "resourceType": BOT | BOTALIAS | BOTCHANNEL | INTENT,</code> 
            </para>
             
            <para>
             <code>"resourceReference": {</code> 
            </para>
             
            <para>
             <code>"name": <i>string</i>, "version": <i>string</i> } }</code> 
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteSlotType">REST API Reference for DeleteSlotType Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.DeleteSlotTypeAsync(Amazon.LexModelBuildingService.Model.DeleteSlotTypeRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes all versions of the slot type, including the <code>$LATEST</code> version.
            To delete a specific version of the slot type, use the <a>DeleteSlotTypeVersion</a>
            operation.
            
             
            <para>
             You can delete a version of a slot type only if it is not referenced. To delete a
            slot type that is referred to in one or more intents, you must remove those references
            first. 
            </para>
             <note> 
            <para>
             If you get the <code>ResourceInUseException</code> exception, the exception provides
            an example reference that shows the intent where the slot type is referenced. To remove
            the reference to the slot type, either update the intent or delete it. If you get
            the same exception when you attempt to delete the slot type again, repeat until the
            slot type has no references and the <code>DeleteSlotType</code> call is successful.
            
            </para>
             </note> 
            <para>
            This operation requires permission for the <code>lex:DeleteSlotType</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteSlotType service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteSlotType service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ResourceInUseException">
            The resource that you are attempting to delete is referred to by another resource.
            Use this information to remove references to the resource that you are trying to delete.
            
             
            <para>
            The body of the exception contains a JSON object that describes the resource.
            </para>
             
            <para>
             <code>{ "resourceType": BOT | BOTALIAS | BOTCHANNEL | INTENT,</code> 
            </para>
             
            <para>
             <code>"resourceReference": {</code> 
            </para>
             
            <para>
             <code>"name": <i>string</i>, "version": <i>string</i> } }</code> 
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteSlotType">REST API Reference for DeleteSlotType Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.DeleteSlotTypeVersion(Amazon.LexModelBuildingService.Model.DeleteSlotTypeVersionRequest)">
            <summary>
            Deletes a specific version of a slot type. To delete all versions of a slot type,
            use the <a>DeleteSlotType</a> operation. 
            
             
            <para>
            This operation requires permissions for the <code>lex:DeleteSlotTypeVersion</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteSlotTypeVersion service method.</param>
            
            <returns>The response from the DeleteSlotTypeVersion service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ResourceInUseException">
            The resource that you are attempting to delete is referred to by another resource.
            Use this information to remove references to the resource that you are trying to delete.
            
             
            <para>
            The body of the exception contains a JSON object that describes the resource.
            </para>
             
            <para>
             <code>{ "resourceType": BOT | BOTALIAS | BOTCHANNEL | INTENT,</code> 
            </para>
             
            <para>
             <code>"resourceReference": {</code> 
            </para>
             
            <para>
             <code>"name": <i>string</i>, "version": <i>string</i> } }</code> 
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteSlotTypeVersion">REST API Reference for DeleteSlotTypeVersion Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.DeleteSlotTypeVersionAsync(Amazon.LexModelBuildingService.Model.DeleteSlotTypeVersionRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a specific version of a slot type. To delete all versions of a slot type,
            use the <a>DeleteSlotType</a> operation. 
            
             
            <para>
            This operation requires permissions for the <code>lex:DeleteSlotTypeVersion</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteSlotTypeVersion service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteSlotTypeVersion service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ResourceInUseException">
            The resource that you are attempting to delete is referred to by another resource.
            Use this information to remove references to the resource that you are trying to delete.
            
             
            <para>
            The body of the exception contains a JSON object that describes the resource.
            </para>
             
            <para>
             <code>{ "resourceType": BOT | BOTALIAS | BOTCHANNEL | INTENT,</code> 
            </para>
             
            <para>
             <code>"resourceReference": {</code> 
            </para>
             
            <para>
             <code>"name": <i>string</i>, "version": <i>string</i> } }</code> 
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteSlotTypeVersion">REST API Reference for DeleteSlotTypeVersion Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.DeleteUtterances(Amazon.LexModelBuildingService.Model.DeleteUtterancesRequest)">
            <summary>
            Deletes stored utterances.
            
             
            <para>
            Amazon Lex stores the utterances that users send to your bot. Utterances are stored
            for 15 days for use with the <a>GetUtterancesView</a> operation, and then stored indefinitely
            for use in improving the ability of your bot to respond to user input.
            </para>
             
            <para>
            Use the <code>DeleteUtterances</code> operation to manually delete stored utterances
            for a specific user. When you use the <code>DeleteUtterances</code> operation, utterances
            stored for improving your bot's ability to respond to user input are deleted immediately.
            Utterances stored for use with the <code>GetUtterancesView</code> operation are deleted
            after 15 days.
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:DeleteUtterances</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteUtterances service method.</param>
            
            <returns>The response from the DeleteUtterances service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteUtterances">REST API Reference for DeleteUtterances Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.DeleteUtterancesAsync(Amazon.LexModelBuildingService.Model.DeleteUtterancesRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes stored utterances.
            
             
            <para>
            Amazon Lex stores the utterances that users send to your bot. Utterances are stored
            for 15 days for use with the <a>GetUtterancesView</a> operation, and then stored indefinitely
            for use in improving the ability of your bot to respond to user input.
            </para>
             
            <para>
            Use the <code>DeleteUtterances</code> operation to manually delete stored utterances
            for a specific user. When you use the <code>DeleteUtterances</code> operation, utterances
            stored for improving your bot's ability to respond to user input are deleted immediately.
            Utterances stored for use with the <code>GetUtterancesView</code> operation are deleted
            after 15 days.
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:DeleteUtterances</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteUtterances service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteUtterances service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteUtterances">REST API Reference for DeleteUtterances Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetBot(Amazon.LexModelBuildingService.Model.GetBotRequest)">
            <summary>
            Returns metadata information for a specific bot. You must provide the bot name and
            the bot version or alias. 
            
             
            <para>
             This operation requires permissions for the <code>lex:GetBot</code> action. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetBot service method.</param>
            
            <returns>The response from the GetBot service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBot">REST API Reference for GetBot Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetBotAsync(Amazon.LexModelBuildingService.Model.GetBotRequest,System.Threading.CancellationToken)">
            <summary>
            Returns metadata information for a specific bot. You must provide the bot name and
            the bot version or alias. 
            
             
            <para>
             This operation requires permissions for the <code>lex:GetBot</code> action. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetBot service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetBot service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBot">REST API Reference for GetBot Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetBotAlias(Amazon.LexModelBuildingService.Model.GetBotAliasRequest)">
            <summary>
            Returns information about an Amazon Lex bot alias. For more information about aliases,
            see <a>versioning-aliases</a>.
            
             
            <para>
            This operation requires permissions for the <code>lex:GetBotAlias</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetBotAlias service method.</param>
            
            <returns>The response from the GetBotAlias service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBotAlias">REST API Reference for GetBotAlias Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetBotAliasAsync(Amazon.LexModelBuildingService.Model.GetBotAliasRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about an Amazon Lex bot alias. For more information about aliases,
            see <a>versioning-aliases</a>.
            
             
            <para>
            This operation requires permissions for the <code>lex:GetBotAlias</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetBotAlias service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetBotAlias service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBotAlias">REST API Reference for GetBotAlias Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetBotAliases(Amazon.LexModelBuildingService.Model.GetBotAliasesRequest)">
            <summary>
            Returns a list of aliases for a specified Amazon Lex bot.
            
             
            <para>
            This operation requires permissions for the <code>lex:GetBotAliases</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetBotAliases service method.</param>
            
            <returns>The response from the GetBotAliases service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBotAliases">REST API Reference for GetBotAliases Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetBotAliasesAsync(Amazon.LexModelBuildingService.Model.GetBotAliasesRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of aliases for a specified Amazon Lex bot.
            
             
            <para>
            This operation requires permissions for the <code>lex:GetBotAliases</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetBotAliases service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetBotAliases service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBotAliases">REST API Reference for GetBotAliases Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetBotChannelAssociation(Amazon.LexModelBuildingService.Model.GetBotChannelAssociationRequest)">
            <summary>
            Returns information about the association between an Amazon Lex bot and a messaging
            platform.
            
             
            <para>
            This operation requires permissions for the <code>lex:GetBotChannelAssociation</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetBotChannelAssociation service method.</param>
            
            <returns>The response from the GetBotChannelAssociation service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBotChannelAssociation">REST API Reference for GetBotChannelAssociation Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetBotChannelAssociationAsync(Amazon.LexModelBuildingService.Model.GetBotChannelAssociationRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about the association between an Amazon Lex bot and a messaging
            platform.
            
             
            <para>
            This operation requires permissions for the <code>lex:GetBotChannelAssociation</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetBotChannelAssociation service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetBotChannelAssociation service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBotChannelAssociation">REST API Reference for GetBotChannelAssociation Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetBotChannelAssociations(Amazon.LexModelBuildingService.Model.GetBotChannelAssociationsRequest)">
            <summary>
            Returns a list of all of the channels associated with the specified bot. 
            
             
            <para>
            The <code>GetBotChannelAssociations</code> operation requires permissions for the
            <code>lex:GetBotChannelAssociations</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetBotChannelAssociations service method.</param>
            
            <returns>The response from the GetBotChannelAssociations service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBotChannelAssociations">REST API Reference for GetBotChannelAssociations Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetBotChannelAssociationsAsync(Amazon.LexModelBuildingService.Model.GetBotChannelAssociationsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of all of the channels associated with the specified bot. 
            
             
            <para>
            The <code>GetBotChannelAssociations</code> operation requires permissions for the
            <code>lex:GetBotChannelAssociations</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetBotChannelAssociations service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetBotChannelAssociations service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBotChannelAssociations">REST API Reference for GetBotChannelAssociations Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetBots(Amazon.LexModelBuildingService.Model.GetBotsRequest)">
            <summary>
            Returns bot information as follows: 
            
             <ul> <li> 
            <para>
            If you provide the <code>nameContains</code> field, the response includes information
            for the <code>$LATEST</code> version of all bots whose name contains the specified
            string.
            </para>
             </li> <li> 
            <para>
            If you don't specify the <code>nameContains</code> field, the operation returns information
            about the <code>$LATEST</code> version of all of your bots.
            </para>
             </li> </ul> 
            <para>
            This operation requires permission for the <code>lex:GetBots</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetBots service method.</param>
            
            <returns>The response from the GetBots service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBots">REST API Reference for GetBots Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetBotsAsync(Amazon.LexModelBuildingService.Model.GetBotsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns bot information as follows: 
            
             <ul> <li> 
            <para>
            If you provide the <code>nameContains</code> field, the response includes information
            for the <code>$LATEST</code> version of all bots whose name contains the specified
            string.
            </para>
             </li> <li> 
            <para>
            If you don't specify the <code>nameContains</code> field, the operation returns information
            about the <code>$LATEST</code> version of all of your bots.
            </para>
             </li> </ul> 
            <para>
            This operation requires permission for the <code>lex:GetBots</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetBots service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetBots service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBots">REST API Reference for GetBots Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetBotVersions(Amazon.LexModelBuildingService.Model.GetBotVersionsRequest)">
            <summary>
            Gets information about all of the versions of a bot.
            
             
            <para>
            The <code>GetBotVersions</code> operation returns a <code>BotMetadata</code> object
            for each version of a bot. For example, if a bot has three numbered versions, the
            <code>GetBotVersions</code> operation returns four <code>BotMetadata</code> objects
            in the response, one for each numbered version and one for the <code>$LATEST</code>
            version. 
            </para>
             
            <para>
            The <code>GetBotVersions</code> operation always returns at least one version, the
            <code>$LATEST</code> version.
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:GetBotVersions</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetBotVersions service method.</param>
            
            <returns>The response from the GetBotVersions service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBotVersions">REST API Reference for GetBotVersions Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetBotVersionsAsync(Amazon.LexModelBuildingService.Model.GetBotVersionsRequest,System.Threading.CancellationToken)">
            <summary>
            Gets information about all of the versions of a bot.
            
             
            <para>
            The <code>GetBotVersions</code> operation returns a <code>BotMetadata</code> object
            for each version of a bot. For example, if a bot has three numbered versions, the
            <code>GetBotVersions</code> operation returns four <code>BotMetadata</code> objects
            in the response, one for each numbered version and one for the <code>$LATEST</code>
            version. 
            </para>
             
            <para>
            The <code>GetBotVersions</code> operation always returns at least one version, the
            <code>$LATEST</code> version.
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:GetBotVersions</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetBotVersions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetBotVersions service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBotVersions">REST API Reference for GetBotVersions Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetBuiltinIntent(Amazon.LexModelBuildingService.Model.GetBuiltinIntentRequest)">
            <summary>
            Returns information about a built-in intent.
            
             
            <para>
            This operation requires permission for the <code>lex:GetBuiltinIntent</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetBuiltinIntent service method.</param>
            
            <returns>The response from the GetBuiltinIntent service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBuiltinIntent">REST API Reference for GetBuiltinIntent Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetBuiltinIntentAsync(Amazon.LexModelBuildingService.Model.GetBuiltinIntentRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about a built-in intent.
            
             
            <para>
            This operation requires permission for the <code>lex:GetBuiltinIntent</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetBuiltinIntent service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetBuiltinIntent service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBuiltinIntent">REST API Reference for GetBuiltinIntent Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetBuiltinIntents(Amazon.LexModelBuildingService.Model.GetBuiltinIntentsRequest)">
            <summary>
            Gets a list of built-in intents that meet the specified criteria.
            
             
            <para>
            This operation requires permission for the <code>lex:GetBuiltinIntents</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetBuiltinIntents service method.</param>
            
            <returns>The response from the GetBuiltinIntents service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBuiltinIntents">REST API Reference for GetBuiltinIntents Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetBuiltinIntentsAsync(Amazon.LexModelBuildingService.Model.GetBuiltinIntentsRequest,System.Threading.CancellationToken)">
            <summary>
            Gets a list of built-in intents that meet the specified criteria.
            
             
            <para>
            This operation requires permission for the <code>lex:GetBuiltinIntents</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetBuiltinIntents service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetBuiltinIntents service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBuiltinIntents">REST API Reference for GetBuiltinIntents Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetBuiltinSlotTypes(Amazon.LexModelBuildingService.Model.GetBuiltinSlotTypesRequest)">
            <summary>
            Gets a list of built-in slot types that meet the specified criteria.
            
             
            <para>
            For a list of built-in slot types, see <a href="https://developer.amazon.com/public/solutions/alexa/alexa-skills-kit/docs/built-in-intent-ref/slot-type-reference">Slot
            Type Reference</a> in the <i>Alexa Skills Kit</i>.
            </para>
             
            <para>
            This operation requires permission for the <code>lex:GetBuiltInSlotTypes</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetBuiltinSlotTypes service method.</param>
            
            <returns>The response from the GetBuiltinSlotTypes service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBuiltinSlotTypes">REST API Reference for GetBuiltinSlotTypes Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetBuiltinSlotTypesAsync(Amazon.LexModelBuildingService.Model.GetBuiltinSlotTypesRequest,System.Threading.CancellationToken)">
            <summary>
            Gets a list of built-in slot types that meet the specified criteria.
            
             
            <para>
            For a list of built-in slot types, see <a href="https://developer.amazon.com/public/solutions/alexa/alexa-skills-kit/docs/built-in-intent-ref/slot-type-reference">Slot
            Type Reference</a> in the <i>Alexa Skills Kit</i>.
            </para>
             
            <para>
            This operation requires permission for the <code>lex:GetBuiltInSlotTypes</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetBuiltinSlotTypes service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetBuiltinSlotTypes service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBuiltinSlotTypes">REST API Reference for GetBuiltinSlotTypes Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetExport(Amazon.LexModelBuildingService.Model.GetExportRequest)">
            <summary>
            Exports the contents of a Amazon Lex resource in a specified format.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetExport service method.</param>
            
            <returns>The response from the GetExport service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetExport">REST API Reference for GetExport Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetExportAsync(Amazon.LexModelBuildingService.Model.GetExportRequest,System.Threading.CancellationToken)">
            <summary>
            Exports the contents of a Amazon Lex resource in a specified format.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetExport service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetExport service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetExport">REST API Reference for GetExport Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetImport(Amazon.LexModelBuildingService.Model.GetImportRequest)">
            <summary>
            Gets information about an import job started with the <code>StartImport</code> operation.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetImport service method.</param>
            
            <returns>The response from the GetImport service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetImport">REST API Reference for GetImport Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetImportAsync(Amazon.LexModelBuildingService.Model.GetImportRequest,System.Threading.CancellationToken)">
            <summary>
            Gets information about an import job started with the <code>StartImport</code> operation.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetImport service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetImport service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetImport">REST API Reference for GetImport Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetIntent(Amazon.LexModelBuildingService.Model.GetIntentRequest)">
            <summary>
            Returns information about an intent. In addition to the intent name, you must specify
            the intent version. 
            
             
            <para>
             This operation requires permissions to perform the <code>lex:GetIntent</code> action.
            
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetIntent service method.</param>
            
            <returns>The response from the GetIntent service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetIntent">REST API Reference for GetIntent Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetIntentAsync(Amazon.LexModelBuildingService.Model.GetIntentRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about an intent. In addition to the intent name, you must specify
            the intent version. 
            
             
            <para>
             This operation requires permissions to perform the <code>lex:GetIntent</code> action.
            
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetIntent service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetIntent service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetIntent">REST API Reference for GetIntent Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetIntents(Amazon.LexModelBuildingService.Model.GetIntentsRequest)">
            <summary>
            Returns intent information as follows: 
            
             <ul> <li> 
            <para>
            If you specify the <code>nameContains</code> field, returns the <code>$LATEST</code>
            version of all intents that contain the specified string.
            </para>
             </li> <li> 
            <para>
             If you don't specify the <code>nameContains</code> field, returns information about
            the <code>$LATEST</code> version of all intents. 
            </para>
             </li> </ul> 
            <para>
             The operation requires permission for the <code>lex:GetIntents</code> action. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetIntents service method.</param>
            
            <returns>The response from the GetIntents service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetIntents">REST API Reference for GetIntents Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetIntentsAsync(Amazon.LexModelBuildingService.Model.GetIntentsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns intent information as follows: 
            
             <ul> <li> 
            <para>
            If you specify the <code>nameContains</code> field, returns the <code>$LATEST</code>
            version of all intents that contain the specified string.
            </para>
             </li> <li> 
            <para>
             If you don't specify the <code>nameContains</code> field, returns information about
            the <code>$LATEST</code> version of all intents. 
            </para>
             </li> </ul> 
            <para>
             The operation requires permission for the <code>lex:GetIntents</code> action. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetIntents service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetIntents service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetIntents">REST API Reference for GetIntents Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetIntentVersions(Amazon.LexModelBuildingService.Model.GetIntentVersionsRequest)">
            <summary>
            Gets information about all of the versions of an intent.
            
             
            <para>
            The <code>GetIntentVersions</code> operation returns an <code>IntentMetadata</code>
            object for each version of an intent. For example, if an intent has three numbered
            versions, the <code>GetIntentVersions</code> operation returns four <code>IntentMetadata</code>
            objects in the response, one for each numbered version and one for the <code>$LATEST</code>
            version. 
            </para>
             
            <para>
            The <code>GetIntentVersions</code> operation always returns at least one version,
            the <code>$LATEST</code> version.
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:GetIntentVersions</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetIntentVersions service method.</param>
            
            <returns>The response from the GetIntentVersions service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetIntentVersions">REST API Reference for GetIntentVersions Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetIntentVersionsAsync(Amazon.LexModelBuildingService.Model.GetIntentVersionsRequest,System.Threading.CancellationToken)">
            <summary>
            Gets information about all of the versions of an intent.
            
             
            <para>
            The <code>GetIntentVersions</code> operation returns an <code>IntentMetadata</code>
            object for each version of an intent. For example, if an intent has three numbered
            versions, the <code>GetIntentVersions</code> operation returns four <code>IntentMetadata</code>
            objects in the response, one for each numbered version and one for the <code>$LATEST</code>
            version. 
            </para>
             
            <para>
            The <code>GetIntentVersions</code> operation always returns at least one version,
            the <code>$LATEST</code> version.
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:GetIntentVersions</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetIntentVersions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetIntentVersions service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetIntentVersions">REST API Reference for GetIntentVersions Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetMigration(Amazon.LexModelBuildingService.Model.GetMigrationRequest)">
            <summary>
            Provides details about an ongoing or complete migration from an Amazon Lex V1 bot
            to an Amazon Lex V2 bot. Use this operation to view the migration alerts and warnings
            related to the migration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetMigration service method.</param>
            
            <returns>The response from the GetMigration service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetMigration">REST API Reference for GetMigration Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetMigrationAsync(Amazon.LexModelBuildingService.Model.GetMigrationRequest,System.Threading.CancellationToken)">
            <summary>
            Provides details about an ongoing or complete migration from an Amazon Lex V1 bot
            to an Amazon Lex V2 bot. Use this operation to view the migration alerts and warnings
            related to the migration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetMigration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetMigration service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetMigration">REST API Reference for GetMigration Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetMigrations(Amazon.LexModelBuildingService.Model.GetMigrationsRequest)">
            <summary>
            Gets a list of migrations between Amazon Lex V1 and Amazon Lex V2.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetMigrations service method.</param>
            
            <returns>The response from the GetMigrations service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetMigrations">REST API Reference for GetMigrations Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetMigrationsAsync(Amazon.LexModelBuildingService.Model.GetMigrationsRequest,System.Threading.CancellationToken)">
            <summary>
            Gets a list of migrations between Amazon Lex V1 and Amazon Lex V2.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetMigrations service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetMigrations service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetMigrations">REST API Reference for GetMigrations Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetSlotType(Amazon.LexModelBuildingService.Model.GetSlotTypeRequest)">
            <summary>
            Returns information about a specific version of a slot type. In addition to specifying
            the slot type name, you must specify the slot type version.
            
             
            <para>
            This operation requires permissions for the <code>lex:GetSlotType</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSlotType service method.</param>
            
            <returns>The response from the GetSlotType service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetSlotType">REST API Reference for GetSlotType Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetSlotTypeAsync(Amazon.LexModelBuildingService.Model.GetSlotTypeRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about a specific version of a slot type. In addition to specifying
            the slot type name, you must specify the slot type version.
            
             
            <para>
            This operation requires permissions for the <code>lex:GetSlotType</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSlotType service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetSlotType service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetSlotType">REST API Reference for GetSlotType Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetSlotTypes(Amazon.LexModelBuildingService.Model.GetSlotTypesRequest)">
            <summary>
            Returns slot type information as follows: 
            
             <ul> <li> 
            <para>
            If you specify the <code>nameContains</code> field, returns the <code>$LATEST</code>
            version of all slot types that contain the specified string.
            </para>
             </li> <li> 
            <para>
             If you don't specify the <code>nameContains</code> field, returns information about
            the <code>$LATEST</code> version of all slot types. 
            </para>
             </li> </ul> 
            <para>
             The operation requires permission for the <code>lex:GetSlotTypes</code> action. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSlotTypes service method.</param>
            
            <returns>The response from the GetSlotTypes service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetSlotTypes">REST API Reference for GetSlotTypes Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetSlotTypesAsync(Amazon.LexModelBuildingService.Model.GetSlotTypesRequest,System.Threading.CancellationToken)">
            <summary>
            Returns slot type information as follows: 
            
             <ul> <li> 
            <para>
            If you specify the <code>nameContains</code> field, returns the <code>$LATEST</code>
            version of all slot types that contain the specified string.
            </para>
             </li> <li> 
            <para>
             If you don't specify the <code>nameContains</code> field, returns information about
            the <code>$LATEST</code> version of all slot types. 
            </para>
             </li> </ul> 
            <para>
             The operation requires permission for the <code>lex:GetSlotTypes</code> action. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSlotTypes service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetSlotTypes service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetSlotTypes">REST API Reference for GetSlotTypes Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetSlotTypeVersions(Amazon.LexModelBuildingService.Model.GetSlotTypeVersionsRequest)">
            <summary>
            Gets information about all versions of a slot type.
            
             
            <para>
            The <code>GetSlotTypeVersions</code> operation returns a <code>SlotTypeMetadata</code>
            object for each version of a slot type. For example, if a slot type has three numbered
            versions, the <code>GetSlotTypeVersions</code> operation returns four <code>SlotTypeMetadata</code>
            objects in the response, one for each numbered version and one for the <code>$LATEST</code>
            version. 
            </para>
             
            <para>
            The <code>GetSlotTypeVersions</code> operation always returns at least one version,
            the <code>$LATEST</code> version.
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:GetSlotTypeVersions</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSlotTypeVersions service method.</param>
            
            <returns>The response from the GetSlotTypeVersions service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetSlotTypeVersions">REST API Reference for GetSlotTypeVersions Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetSlotTypeVersionsAsync(Amazon.LexModelBuildingService.Model.GetSlotTypeVersionsRequest,System.Threading.CancellationToken)">
            <summary>
            Gets information about all versions of a slot type.
            
             
            <para>
            The <code>GetSlotTypeVersions</code> operation returns a <code>SlotTypeMetadata</code>
            object for each version of a slot type. For example, if a slot type has three numbered
            versions, the <code>GetSlotTypeVersions</code> operation returns four <code>SlotTypeMetadata</code>
            objects in the response, one for each numbered version and one for the <code>$LATEST</code>
            version. 
            </para>
             
            <para>
            The <code>GetSlotTypeVersions</code> operation always returns at least one version,
            the <code>$LATEST</code> version.
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:GetSlotTypeVersions</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSlotTypeVersions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetSlotTypeVersions service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetSlotTypeVersions">REST API Reference for GetSlotTypeVersions Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetUtterancesView(Amazon.LexModelBuildingService.Model.GetUtterancesViewRequest)">
            <summary>
            Use the <code>GetUtterancesView</code> operation to get information about the utterances
            that your users have made to your bot. You can use this list to tune the utterances
            that your bot responds to.
            
             
            <para>
            For example, say that you have created a bot to order flowers. After your users have
            used your bot for a while, use the <code>GetUtterancesView</code> operation to see
            the requests that they have made and whether they have been successful. You might
            find that the utterance "I want flowers" is not being recognized. You could add this
            utterance to the <code>OrderFlowers</code> intent so that your bot recognizes that
            utterance.
            </para>
             
            <para>
            After you publish a new version of a bot, you can get information about the old version
            and the new so that you can compare the performance across the two versions. 
            </para>
             
            <para>
            Utterance statistics are generated once a day. Data is available for the last 15 days.
            You can request information for up to 5 versions of your bot in each request. Amazon
            Lex returns the most frequent utterances received by the bot in the last 15 days.
            The response contains information about a maximum of 100 utterances for each version.
            </para>
             
            <para>
            If you set <code>childDirected</code> field to true when you created your bot, if
            you are using slot obfuscation with one or more slots, or if you opted out of participating
            in improving Amazon Lex, utterances are not available.
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:GetUtterancesView</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetUtterancesView service method.</param>
            
            <returns>The response from the GetUtterancesView service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetUtterancesView">REST API Reference for GetUtterancesView Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetUtterancesViewAsync(Amazon.LexModelBuildingService.Model.GetUtterancesViewRequest,System.Threading.CancellationToken)">
            <summary>
            Use the <code>GetUtterancesView</code> operation to get information about the utterances
            that your users have made to your bot. You can use this list to tune the utterances
            that your bot responds to.
            
             
            <para>
            For example, say that you have created a bot to order flowers. After your users have
            used your bot for a while, use the <code>GetUtterancesView</code> operation to see
            the requests that they have made and whether they have been successful. You might
            find that the utterance "I want flowers" is not being recognized. You could add this
            utterance to the <code>OrderFlowers</code> intent so that your bot recognizes that
            utterance.
            </para>
             
            <para>
            After you publish a new version of a bot, you can get information about the old version
            and the new so that you can compare the performance across the two versions. 
            </para>
             
            <para>
            Utterance statistics are generated once a day. Data is available for the last 15 days.
            You can request information for up to 5 versions of your bot in each request. Amazon
            Lex returns the most frequent utterances received by the bot in the last 15 days.
            The response contains information about a maximum of 100 utterances for each version.
            </para>
             
            <para>
            If you set <code>childDirected</code> field to true when you created your bot, if
            you are using slot obfuscation with one or more slots, or if you opted out of participating
            in improving Amazon Lex, utterances are not available.
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:GetUtterancesView</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetUtterancesView service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetUtterancesView service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetUtterancesView">REST API Reference for GetUtterancesView Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.ListTagsForResource(Amazon.LexModelBuildingService.Model.ListTagsForResourceRequest)">
            <summary>
            Gets a list of tags associated with the specified resource. Only bots, bot aliases,
            and bot channels can have tags associated with them.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            
            <returns>The response from the ListTagsForResource service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.ListTagsForResourceAsync(Amazon.LexModelBuildingService.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Gets a list of tags associated with the specified resource. Only bots, bot aliases,
            and bot channels can have tags associated with them.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.PutBot(Amazon.LexModelBuildingService.Model.PutBotRequest)">
            <summary>
            Creates an Amazon Lex conversational bot or replaces an existing bot. When you create
            or update a bot you are only required to specify a name, a locale, and whether the
            bot is directed toward children under age 13. You can use this to add intents later,
            or to remove intents from an existing bot. When you create a bot with the minimum
            information, the bot is created or updated but Amazon Lex returns the <code/> response
            <code>FAILED</code>. You can build the bot after you add one or more intents. For
            more information about Amazon Lex bots, see <a>how-it-works</a>. 
            
             
            <para>
            If you specify the name of an existing bot, the fields in the request replace the
            existing values in the <code>$LATEST</code> version of the bot. Amazon Lex removes
            any fields that you don't provide values for in the request, except for the <code>idleTTLInSeconds</code>
            and <code>privacySettings</code> fields, which are set to their default values. If
            you don't specify values for required fields, Amazon Lex throws an exception.
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:PutBot</code> action. For more
            information, see <a>security-iam</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutBot service method.</param>
            
            <returns>The response from the PutBot service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.PreconditionFailedException">
            The checksum of the resource that you are trying to change does not match the checksum
            in the request. Check the resource's checksum and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/PutBot">REST API Reference for PutBot Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.PutBotAsync(Amazon.LexModelBuildingService.Model.PutBotRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an Amazon Lex conversational bot or replaces an existing bot. When you create
            or update a bot you are only required to specify a name, a locale, and whether the
            bot is directed toward children under age 13. You can use this to add intents later,
            or to remove intents from an existing bot. When you create a bot with the minimum
            information, the bot is created or updated but Amazon Lex returns the <code/> response
            <code>FAILED</code>. You can build the bot after you add one or more intents. For
            more information about Amazon Lex bots, see <a>how-it-works</a>. 
            
             
            <para>
            If you specify the name of an existing bot, the fields in the request replace the
            existing values in the <code>$LATEST</code> version of the bot. Amazon Lex removes
            any fields that you don't provide values for in the request, except for the <code>idleTTLInSeconds</code>
            and <code>privacySettings</code> fields, which are set to their default values. If
            you don't specify values for required fields, Amazon Lex throws an exception.
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:PutBot</code> action. For more
            information, see <a>security-iam</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutBot service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutBot service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.PreconditionFailedException">
            The checksum of the resource that you are trying to change does not match the checksum
            in the request. Check the resource's checksum and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/PutBot">REST API Reference for PutBot Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.PutBotAlias(Amazon.LexModelBuildingService.Model.PutBotAliasRequest)">
            <summary>
            Creates an alias for the specified version of the bot or replaces an alias for the
            specified bot. To change the version of the bot that the alias points to, replace
            the alias. For more information about aliases, see <a>versioning-aliases</a>.
            
             
            <para>
            This operation requires permissions for the <code>lex:PutBotAlias</code> action. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutBotAlias service method.</param>
            
            <returns>The response from the PutBotAlias service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.PreconditionFailedException">
            The checksum of the resource that you are trying to change does not match the checksum
            in the request. Check the resource's checksum and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/PutBotAlias">REST API Reference for PutBotAlias Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.PutBotAliasAsync(Amazon.LexModelBuildingService.Model.PutBotAliasRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an alias for the specified version of the bot or replaces an alias for the
            specified bot. To change the version of the bot that the alias points to, replace
            the alias. For more information about aliases, see <a>versioning-aliases</a>.
            
             
            <para>
            This operation requires permissions for the <code>lex:PutBotAlias</code> action. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutBotAlias service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutBotAlias service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.PreconditionFailedException">
            The checksum of the resource that you are trying to change does not match the checksum
            in the request. Check the resource's checksum and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/PutBotAlias">REST API Reference for PutBotAlias Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.PutIntent(Amazon.LexModelBuildingService.Model.PutIntentRequest)">
            <summary>
            Creates an intent or replaces an existing intent.
            
             
            <para>
            To define the interaction between the user and your bot, you use one or more intents.
            For a pizza ordering bot, for example, you would create an <code>OrderPizza</code>
            intent. 
            </para>
             
            <para>
            To create an intent or replace an existing intent, you must provide the following:
            </para>
             <ul> <li> 
            <para>
            Intent name. For example, <code>OrderPizza</code>.
            </para>
             </li> <li> 
            <para>
            Sample utterances. For example, "Can I order a pizza, please." and "I want to order
            a pizza."
            </para>
             </li> <li> 
            <para>
            Information to be gathered. You specify slot types for the information that your bot
            will request from the user. You can specify standard slot types, such as a date or
            a time, or custom slot types such as the size and crust of a pizza.
            </para>
             </li> <li> 
            <para>
            How the intent will be fulfilled. You can provide a Lambda function or configure the
            intent to return the intent information to the client application. If you use a Lambda
            function, when all of the intent information is available, Amazon Lex invokes your
            Lambda function. If you configure your intent to return the intent information to
            the client application. 
            </para>
             </li> </ul> 
            <para>
            You can specify other optional information in the request, such as:
            </para>
             <ul> <li> 
            <para>
            A confirmation prompt to ask the user to confirm an intent. For example, "Shall I
            order your pizza?"
            </para>
             </li> <li> 
            <para>
            A conclusion statement to send to the user after the intent has been fulfilled. For
            example, "I placed your pizza order."
            </para>
             </li> <li> 
            <para>
            A follow-up prompt that asks the user for additional activity. For example, asking
            "Do you want to order a drink with your pizza?"
            </para>
             </li> </ul> 
            <para>
            If you specify an existing intent name to update the intent, Amazon Lex replaces the
            values in the <code>$LATEST</code> version of the intent with the values in the request.
            Amazon Lex removes fields that you don't provide in the request. If you don't specify
            the required fields, Amazon Lex throws an exception. When you update the <code>$LATEST</code>
            version of an intent, the <code>status</code> field of any bot that uses the <code>$LATEST</code>
            version of the intent is set to <code>NOT_BUILT</code>.
            </para>
             
            <para>
            For more information, see <a>how-it-works</a>.
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:PutIntent</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutIntent service method.</param>
            
            <returns>The response from the PutIntent service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.PreconditionFailedException">
            The checksum of the resource that you are trying to change does not match the checksum
            in the request. Check the resource's checksum and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/PutIntent">REST API Reference for PutIntent Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.PutIntentAsync(Amazon.LexModelBuildingService.Model.PutIntentRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an intent or replaces an existing intent.
            
             
            <para>
            To define the interaction between the user and your bot, you use one or more intents.
            For a pizza ordering bot, for example, you would create an <code>OrderPizza</code>
            intent. 
            </para>
             
            <para>
            To create an intent or replace an existing intent, you must provide the following:
            </para>
             <ul> <li> 
            <para>
            Intent name. For example, <code>OrderPizza</code>.
            </para>
             </li> <li> 
            <para>
            Sample utterances. For example, "Can I order a pizza, please." and "I want to order
            a pizza."
            </para>
             </li> <li> 
            <para>
            Information to be gathered. You specify slot types for the information that your bot
            will request from the user. You can specify standard slot types, such as a date or
            a time, or custom slot types such as the size and crust of a pizza.
            </para>
             </li> <li> 
            <para>
            How the intent will be fulfilled. You can provide a Lambda function or configure the
            intent to return the intent information to the client application. If you use a Lambda
            function, when all of the intent information is available, Amazon Lex invokes your
            Lambda function. If you configure your intent to return the intent information to
            the client application. 
            </para>
             </li> </ul> 
            <para>
            You can specify other optional information in the request, such as:
            </para>
             <ul> <li> 
            <para>
            A confirmation prompt to ask the user to confirm an intent. For example, "Shall I
            order your pizza?"
            </para>
             </li> <li> 
            <para>
            A conclusion statement to send to the user after the intent has been fulfilled. For
            example, "I placed your pizza order."
            </para>
             </li> <li> 
            <para>
            A follow-up prompt that asks the user for additional activity. For example, asking
            "Do you want to order a drink with your pizza?"
            </para>
             </li> </ul> 
            <para>
            If you specify an existing intent name to update the intent, Amazon Lex replaces the
            values in the <code>$LATEST</code> version of the intent with the values in the request.
            Amazon Lex removes fields that you don't provide in the request. If you don't specify
            the required fields, Amazon Lex throws an exception. When you update the <code>$LATEST</code>
            version of an intent, the <code>status</code> field of any bot that uses the <code>$LATEST</code>
            version of the intent is set to <code>NOT_BUILT</code>.
            </para>
             
            <para>
            For more information, see <a>how-it-works</a>.
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:PutIntent</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutIntent service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutIntent service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.PreconditionFailedException">
            The checksum of the resource that you are trying to change does not match the checksum
            in the request. Check the resource's checksum and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/PutIntent">REST API Reference for PutIntent Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.PutSlotType(Amazon.LexModelBuildingService.Model.PutSlotTypeRequest)">
            <summary>
            Creates a custom slot type or replaces an existing custom slot type.
            
             
            <para>
            To create a custom slot type, specify a name for the slot type and a set of enumeration
            values, which are the values that a slot of this type can assume. For more information,
            see <a>how-it-works</a>.
            </para>
             
            <para>
            If you specify the name of an existing slot type, the fields in the request replace
            the existing values in the <code>$LATEST</code> version of the slot type. Amazon Lex
            removes the fields that you don't provide in the request. If you don't specify required
            fields, Amazon Lex throws an exception. When you update the <code>$LATEST</code> version
            of a slot type, if a bot uses the <code>$LATEST</code> version of an intent that contains
            the slot type, the bot's <code>status</code> field is set to <code>NOT_BUILT</code>.
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:PutSlotType</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutSlotType service method.</param>
            
            <returns>The response from the PutSlotType service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.PreconditionFailedException">
            The checksum of the resource that you are trying to change does not match the checksum
            in the request. Check the resource's checksum and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/PutSlotType">REST API Reference for PutSlotType Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.PutSlotTypeAsync(Amazon.LexModelBuildingService.Model.PutSlotTypeRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a custom slot type or replaces an existing custom slot type.
            
             
            <para>
            To create a custom slot type, specify a name for the slot type and a set of enumeration
            values, which are the values that a slot of this type can assume. For more information,
            see <a>how-it-works</a>.
            </para>
             
            <para>
            If you specify the name of an existing slot type, the fields in the request replace
            the existing values in the <code>$LATEST</code> version of the slot type. Amazon Lex
            removes the fields that you don't provide in the request. If you don't specify required
            fields, Amazon Lex throws an exception. When you update the <code>$LATEST</code> version
            of a slot type, if a bot uses the <code>$LATEST</code> version of an intent that contains
            the slot type, the bot's <code>status</code> field is set to <code>NOT_BUILT</code>.
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:PutSlotType</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutSlotType service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutSlotType service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.PreconditionFailedException">
            The checksum of the resource that you are trying to change does not match the checksum
            in the request. Check the resource's checksum and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/PutSlotType">REST API Reference for PutSlotType Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.StartImport(Amazon.LexModelBuildingService.Model.StartImportRequest)">
            <summary>
            Starts a job to import a resource to Amazon Lex.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartImport service method.</param>
            
            <returns>The response from the StartImport service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/StartImport">REST API Reference for StartImport Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.StartImportAsync(Amazon.LexModelBuildingService.Model.StartImportRequest,System.Threading.CancellationToken)">
            <summary>
            Starts a job to import a resource to Amazon Lex.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartImport service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartImport service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/StartImport">REST API Reference for StartImport Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.StartMigration(Amazon.LexModelBuildingService.Model.StartMigrationRequest)">
            <summary>
            Starts migrating a bot from Amazon Lex V1 to Amazon Lex V2. Migrate your bot when
            you want to take advantage of the new features of Amazon Lex V2.
            
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/lex/latest/dg/migrate.html">Migrating
            a bot</a> in the <i>Amazon Lex developer guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartMigration service method.</param>
            
            <returns>The response from the StartMigration service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.AccessDeniedException">
            Your IAM user or role does not have permission to call the Amazon Lex V2 APIs required
            to migrate your bot.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/StartMigration">REST API Reference for StartMigration Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.StartMigrationAsync(Amazon.LexModelBuildingService.Model.StartMigrationRequest,System.Threading.CancellationToken)">
            <summary>
            Starts migrating a bot from Amazon Lex V1 to Amazon Lex V2. Migrate your bot when
            you want to take advantage of the new features of Amazon Lex V2.
            
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/lex/latest/dg/migrate.html">Migrating
            a bot</a> in the <i>Amazon Lex developer guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartMigration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartMigration service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.AccessDeniedException">
            Your IAM user or role does not have permission to call the Amazon Lex V2 APIs required
            to migrate your bot.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/StartMigration">REST API Reference for StartMigration Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.TagResource(Amazon.LexModelBuildingService.Model.TagResourceRequest)">
            <summary>
            Adds the specified tags to the specified resource. If a tag key already exists, the
            existing value is replaced with the new value.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            
            <returns>The response from the TagResource service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.TagResourceAsync(Amazon.LexModelBuildingService.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Adds the specified tags to the specified resource. If a tag key already exists, the
            existing value is replaced with the new value.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.UntagResource(Amazon.LexModelBuildingService.Model.UntagResourceRequest)">
            <summary>
            Removes tags from a bot, bot alias or bot channel.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            
            <returns>The response from the UntagResource service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.UntagResourceAsync(Amazon.LexModelBuildingService.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Removes tags from a bot, bot alias or bot channel.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="T:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService">
             <summary>
             Interface for accessing LexModelBuildingService
            
             Amazon Lex Build-Time Actions 
             <para>
              Amazon Lex is an AWS service for building conversational voice and text interfaces.
             Use these actions to create, update, and delete conversational bots for new and existing
             client applications. 
             </para>
             </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.CreateBotVersion(Amazon.LexModelBuildingService.Model.CreateBotVersionRequest)">
            <summary>
            Creates a new version of the bot based on the <code>$LATEST</code> version. If the
            <code>$LATEST</code> version of this resource hasn't changed since you created the
            last version, Amazon Lex doesn't create a new version. It returns the last created
            version.
            
             <note> 
            <para>
            You can update only the <code>$LATEST</code> version of the bot. You can't update
            the numbered versions that you create with the <code>CreateBotVersion</code> operation.
            </para>
             </note> 
            <para>
             When you create the first version of a bot, Amazon Lex sets the version to 1. Subsequent
            versions increment by 1. For more information, see <a>versioning-intro</a>. 
            </para>
             
            <para>
             This operation requires permission for the <code>lex:CreateBotVersion</code> action.
            
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateBotVersion service method.</param>
            
            <returns>The response from the CreateBotVersion service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.PreconditionFailedException">
            The checksum of the resource that you are trying to change does not match the checksum
            in the request. Check the resource's checksum and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/CreateBotVersion">REST API Reference for CreateBotVersion Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.CreateBotVersionAsync(Amazon.LexModelBuildingService.Model.CreateBotVersionRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new version of the bot based on the <code>$LATEST</code> version. If the
            <code>$LATEST</code> version of this resource hasn't changed since you created the
            last version, Amazon Lex doesn't create a new version. It returns the last created
            version.
            
             <note> 
            <para>
            You can update only the <code>$LATEST</code> version of the bot. You can't update
            the numbered versions that you create with the <code>CreateBotVersion</code> operation.
            </para>
             </note> 
            <para>
             When you create the first version of a bot, Amazon Lex sets the version to 1. Subsequent
            versions increment by 1. For more information, see <a>versioning-intro</a>. 
            </para>
             
            <para>
             This operation requires permission for the <code>lex:CreateBotVersion</code> action.
            
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateBotVersion service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateBotVersion service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.PreconditionFailedException">
            The checksum of the resource that you are trying to change does not match the checksum
            in the request. Check the resource's checksum and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/CreateBotVersion">REST API Reference for CreateBotVersion Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.CreateIntentVersion(Amazon.LexModelBuildingService.Model.CreateIntentVersionRequest)">
            <summary>
            Creates a new version of an intent based on the <code>$LATEST</code> version of the
            intent. If the <code>$LATEST</code> version of this intent hasn't changed since you
            last updated it, Amazon Lex doesn't create a new version. It returns the last version
            you created.
            
             <note> 
            <para>
            You can update only the <code>$LATEST</code> version of the intent. You can't update
            the numbered versions that you create with the <code>CreateIntentVersion</code> operation.
            </para>
             </note> 
            <para>
             When you create a version of an intent, Amazon Lex sets the version to 1. Subsequent
            versions increment by 1. For more information, see <a>versioning-intro</a>. 
            </para>
             
            <para>
            This operation requires permissions to perform the <code>lex:CreateIntentVersion</code>
            action. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateIntentVersion service method.</param>
            
            <returns>The response from the CreateIntentVersion service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.PreconditionFailedException">
            The checksum of the resource that you are trying to change does not match the checksum
            in the request. Check the resource's checksum and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/CreateIntentVersion">REST API Reference for CreateIntentVersion Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.CreateIntentVersionAsync(Amazon.LexModelBuildingService.Model.CreateIntentVersionRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new version of an intent based on the <code>$LATEST</code> version of the
            intent. If the <code>$LATEST</code> version of this intent hasn't changed since you
            last updated it, Amazon Lex doesn't create a new version. It returns the last version
            you created.
            
             <note> 
            <para>
            You can update only the <code>$LATEST</code> version of the intent. You can't update
            the numbered versions that you create with the <code>CreateIntentVersion</code> operation.
            </para>
             </note> 
            <para>
             When you create a version of an intent, Amazon Lex sets the version to 1. Subsequent
            versions increment by 1. For more information, see <a>versioning-intro</a>. 
            </para>
             
            <para>
            This operation requires permissions to perform the <code>lex:CreateIntentVersion</code>
            action. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateIntentVersion service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateIntentVersion service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.PreconditionFailedException">
            The checksum of the resource that you are trying to change does not match the checksum
            in the request. Check the resource's checksum and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/CreateIntentVersion">REST API Reference for CreateIntentVersion Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.CreateSlotTypeVersion(Amazon.LexModelBuildingService.Model.CreateSlotTypeVersionRequest)">
            <summary>
            Creates a new version of a slot type based on the <code>$LATEST</code> version of
            the specified slot type. If the <code>$LATEST</code> version of this resource has
            not changed since the last version that you created, Amazon Lex doesn't create a new
            version. It returns the last version that you created. 
            
             <note> 
            <para>
            You can update only the <code>$LATEST</code> version of a slot type. You can't update
            the numbered versions that you create with the <code>CreateSlotTypeVersion</code>
            operation.
            </para>
             </note> 
            <para>
            When you create a version of a slot type, Amazon Lex sets the version to 1. Subsequent
            versions increment by 1. For more information, see <a>versioning-intro</a>. 
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:CreateSlotTypeVersion</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateSlotTypeVersion service method.</param>
            
            <returns>The response from the CreateSlotTypeVersion service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.PreconditionFailedException">
            The checksum of the resource that you are trying to change does not match the checksum
            in the request. Check the resource's checksum and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/CreateSlotTypeVersion">REST API Reference for CreateSlotTypeVersion Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.CreateSlotTypeVersionAsync(Amazon.LexModelBuildingService.Model.CreateSlotTypeVersionRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new version of a slot type based on the <code>$LATEST</code> version of
            the specified slot type. If the <code>$LATEST</code> version of this resource has
            not changed since the last version that you created, Amazon Lex doesn't create a new
            version. It returns the last version that you created. 
            
             <note> 
            <para>
            You can update only the <code>$LATEST</code> version of a slot type. You can't update
            the numbered versions that you create with the <code>CreateSlotTypeVersion</code>
            operation.
            </para>
             </note> 
            <para>
            When you create a version of a slot type, Amazon Lex sets the version to 1. Subsequent
            versions increment by 1. For more information, see <a>versioning-intro</a>. 
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:CreateSlotTypeVersion</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateSlotTypeVersion service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateSlotTypeVersion service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.PreconditionFailedException">
            The checksum of the resource that you are trying to change does not match the checksum
            in the request. Check the resource's checksum and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/CreateSlotTypeVersion">REST API Reference for CreateSlotTypeVersion Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.DeleteBot(Amazon.LexModelBuildingService.Model.DeleteBotRequest)">
            <summary>
            Deletes all versions of the bot, including the <code>$LATEST</code> version. To delete
            a specific version of the bot, use the <a>DeleteBotVersion</a> operation. The <code>DeleteBot</code>
            operation doesn't immediately remove the bot schema. Instead, it is marked for deletion
            and removed later.
            
             
            <para>
            Amazon Lex stores utterances indefinitely for improving the ability of your bot to
            respond to user inputs. These utterances are not removed when the bot is deleted.
            To remove the utterances, use the <a>DeleteUtterances</a> operation.
            </para>
             
            <para>
            If a bot has an alias, you can't delete it. Instead, the <code>DeleteBot</code> operation
            returns a <code>ResourceInUseException</code> exception that includes a reference
            to the alias that refers to the bot. To remove the reference to the bot, delete the
            alias. If you get the same exception again, delete the referring alias until the <code>DeleteBot</code>
            operation is successful.
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:DeleteBot</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteBot service method.</param>
            
            <returns>The response from the DeleteBot service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ResourceInUseException">
            The resource that you are attempting to delete is referred to by another resource.
            Use this information to remove references to the resource that you are trying to delete.
            
             
            <para>
            The body of the exception contains a JSON object that describes the resource.
            </para>
             
            <para>
             <code>{ "resourceType": BOT | BOTALIAS | BOTCHANNEL | INTENT,</code> 
            </para>
             
            <para>
             <code>"resourceReference": {</code> 
            </para>
             
            <para>
             <code>"name": <i>string</i>, "version": <i>string</i> } }</code> 
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteBot">REST API Reference for DeleteBot Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.DeleteBotAsync(Amazon.LexModelBuildingService.Model.DeleteBotRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes all versions of the bot, including the <code>$LATEST</code> version. To delete
            a specific version of the bot, use the <a>DeleteBotVersion</a> operation. The <code>DeleteBot</code>
            operation doesn't immediately remove the bot schema. Instead, it is marked for deletion
            and removed later.
            
             
            <para>
            Amazon Lex stores utterances indefinitely for improving the ability of your bot to
            respond to user inputs. These utterances are not removed when the bot is deleted.
            To remove the utterances, use the <a>DeleteUtterances</a> operation.
            </para>
             
            <para>
            If a bot has an alias, you can't delete it. Instead, the <code>DeleteBot</code> operation
            returns a <code>ResourceInUseException</code> exception that includes a reference
            to the alias that refers to the bot. To remove the reference to the bot, delete the
            alias. If you get the same exception again, delete the referring alias until the <code>DeleteBot</code>
            operation is successful.
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:DeleteBot</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteBot service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteBot service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ResourceInUseException">
            The resource that you are attempting to delete is referred to by another resource.
            Use this information to remove references to the resource that you are trying to delete.
            
             
            <para>
            The body of the exception contains a JSON object that describes the resource.
            </para>
             
            <para>
             <code>{ "resourceType": BOT | BOTALIAS | BOTCHANNEL | INTENT,</code> 
            </para>
             
            <para>
             <code>"resourceReference": {</code> 
            </para>
             
            <para>
             <code>"name": <i>string</i>, "version": <i>string</i> } }</code> 
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteBot">REST API Reference for DeleteBot Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.DeleteBotAlias(Amazon.LexModelBuildingService.Model.DeleteBotAliasRequest)">
            <summary>
            Deletes an alias for the specified bot. 
            
             
            <para>
            You can't delete an alias that is used in the association between a bot and a messaging
            channel. If an alias is used in a channel association, the <code>DeleteBot</code>
            operation returns a <code>ResourceInUseException</code> exception that includes a
            reference to the channel association that refers to the bot. You can remove the reference
            to the alias by deleting the channel association. If you get the same exception again,
            delete the referring association until the <code>DeleteBotAlias</code> operation is
            successful.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteBotAlias service method.</param>
            
            <returns>The response from the DeleteBotAlias service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ResourceInUseException">
            The resource that you are attempting to delete is referred to by another resource.
            Use this information to remove references to the resource that you are trying to delete.
            
             
            <para>
            The body of the exception contains a JSON object that describes the resource.
            </para>
             
            <para>
             <code>{ "resourceType": BOT | BOTALIAS | BOTCHANNEL | INTENT,</code> 
            </para>
             
            <para>
             <code>"resourceReference": {</code> 
            </para>
             
            <para>
             <code>"name": <i>string</i>, "version": <i>string</i> } }</code> 
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteBotAlias">REST API Reference for DeleteBotAlias Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.DeleteBotAliasAsync(Amazon.LexModelBuildingService.Model.DeleteBotAliasRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes an alias for the specified bot. 
            
             
            <para>
            You can't delete an alias that is used in the association between a bot and a messaging
            channel. If an alias is used in a channel association, the <code>DeleteBot</code>
            operation returns a <code>ResourceInUseException</code> exception that includes a
            reference to the channel association that refers to the bot. You can remove the reference
            to the alias by deleting the channel association. If you get the same exception again,
            delete the referring association until the <code>DeleteBotAlias</code> operation is
            successful.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteBotAlias service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteBotAlias service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ResourceInUseException">
            The resource that you are attempting to delete is referred to by another resource.
            Use this information to remove references to the resource that you are trying to delete.
            
             
            <para>
            The body of the exception contains a JSON object that describes the resource.
            </para>
             
            <para>
             <code>{ "resourceType": BOT | BOTALIAS | BOTCHANNEL | INTENT,</code> 
            </para>
             
            <para>
             <code>"resourceReference": {</code> 
            </para>
             
            <para>
             <code>"name": <i>string</i>, "version": <i>string</i> } }</code> 
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteBotAlias">REST API Reference for DeleteBotAlias Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.DeleteBotChannelAssociation(Amazon.LexModelBuildingService.Model.DeleteBotChannelAssociationRequest)">
            <summary>
            Deletes the association between an Amazon Lex bot and a messaging platform.
            
             
            <para>
            This operation requires permission for the <code>lex:DeleteBotChannelAssociation</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteBotChannelAssociation service method.</param>
            
            <returns>The response from the DeleteBotChannelAssociation service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteBotChannelAssociation">REST API Reference for DeleteBotChannelAssociation Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.DeleteBotChannelAssociationAsync(Amazon.LexModelBuildingService.Model.DeleteBotChannelAssociationRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the association between an Amazon Lex bot and a messaging platform.
            
             
            <para>
            This operation requires permission for the <code>lex:DeleteBotChannelAssociation</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteBotChannelAssociation service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteBotChannelAssociation service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteBotChannelAssociation">REST API Reference for DeleteBotChannelAssociation Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.DeleteBotVersion(Amazon.LexModelBuildingService.Model.DeleteBotVersionRequest)">
            <summary>
            Deletes a specific version of a bot. To delete all versions of a bot, use the <a>DeleteBot</a>
            operation. 
            
             
            <para>
            This operation requires permissions for the <code>lex:DeleteBotVersion</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteBotVersion service method.</param>
            
            <returns>The response from the DeleteBotVersion service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ResourceInUseException">
            The resource that you are attempting to delete is referred to by another resource.
            Use this information to remove references to the resource that you are trying to delete.
            
             
            <para>
            The body of the exception contains a JSON object that describes the resource.
            </para>
             
            <para>
             <code>{ "resourceType": BOT | BOTALIAS | BOTCHANNEL | INTENT,</code> 
            </para>
             
            <para>
             <code>"resourceReference": {</code> 
            </para>
             
            <para>
             <code>"name": <i>string</i>, "version": <i>string</i> } }</code> 
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteBotVersion">REST API Reference for DeleteBotVersion Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.DeleteBotVersionAsync(Amazon.LexModelBuildingService.Model.DeleteBotVersionRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a specific version of a bot. To delete all versions of a bot, use the <a>DeleteBot</a>
            operation. 
            
             
            <para>
            This operation requires permissions for the <code>lex:DeleteBotVersion</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteBotVersion service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteBotVersion service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ResourceInUseException">
            The resource that you are attempting to delete is referred to by another resource.
            Use this information to remove references to the resource that you are trying to delete.
            
             
            <para>
            The body of the exception contains a JSON object that describes the resource.
            </para>
             
            <para>
             <code>{ "resourceType": BOT | BOTALIAS | BOTCHANNEL | INTENT,</code> 
            </para>
             
            <para>
             <code>"resourceReference": {</code> 
            </para>
             
            <para>
             <code>"name": <i>string</i>, "version": <i>string</i> } }</code> 
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteBotVersion">REST API Reference for DeleteBotVersion Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.DeleteIntent(Amazon.LexModelBuildingService.Model.DeleteIntentRequest)">
            <summary>
            Deletes all versions of the intent, including the <code>$LATEST</code> version. To
            delete a specific version of the intent, use the <a>DeleteIntentVersion</a> operation.
            
             
            <para>
             You can delete a version of an intent only if it is not referenced. To delete an
            intent that is referred to in one or more bots (see <a>how-it-works</a>), you must
            remove those references first. 
            </para>
             <note> 
            <para>
             If you get the <code>ResourceInUseException</code> exception, it provides an example
            reference that shows where the intent is referenced. To remove the reference to the
            intent, either update the bot or delete it. If you get the same exception when you
            attempt to delete the intent again, repeat until the intent has no references and
            the call to <code>DeleteIntent</code> is successful. 
            </para>
             </note> 
            <para>
             This operation requires permission for the <code>lex:DeleteIntent</code> action.
            
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteIntent service method.</param>
            
            <returns>The response from the DeleteIntent service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ResourceInUseException">
            The resource that you are attempting to delete is referred to by another resource.
            Use this information to remove references to the resource that you are trying to delete.
            
             
            <para>
            The body of the exception contains a JSON object that describes the resource.
            </para>
             
            <para>
             <code>{ "resourceType": BOT | BOTALIAS | BOTCHANNEL | INTENT,</code> 
            </para>
             
            <para>
             <code>"resourceReference": {</code> 
            </para>
             
            <para>
             <code>"name": <i>string</i>, "version": <i>string</i> } }</code> 
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteIntent">REST API Reference for DeleteIntent Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.DeleteIntentAsync(Amazon.LexModelBuildingService.Model.DeleteIntentRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes all versions of the intent, including the <code>$LATEST</code> version. To
            delete a specific version of the intent, use the <a>DeleteIntentVersion</a> operation.
            
             
            <para>
             You can delete a version of an intent only if it is not referenced. To delete an
            intent that is referred to in one or more bots (see <a>how-it-works</a>), you must
            remove those references first. 
            </para>
             <note> 
            <para>
             If you get the <code>ResourceInUseException</code> exception, it provides an example
            reference that shows where the intent is referenced. To remove the reference to the
            intent, either update the bot or delete it. If you get the same exception when you
            attempt to delete the intent again, repeat until the intent has no references and
            the call to <code>DeleteIntent</code> is successful. 
            </para>
             </note> 
            <para>
             This operation requires permission for the <code>lex:DeleteIntent</code> action.
            
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteIntent service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteIntent service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ResourceInUseException">
            The resource that you are attempting to delete is referred to by another resource.
            Use this information to remove references to the resource that you are trying to delete.
            
             
            <para>
            The body of the exception contains a JSON object that describes the resource.
            </para>
             
            <para>
             <code>{ "resourceType": BOT | BOTALIAS | BOTCHANNEL | INTENT,</code> 
            </para>
             
            <para>
             <code>"resourceReference": {</code> 
            </para>
             
            <para>
             <code>"name": <i>string</i>, "version": <i>string</i> } }</code> 
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteIntent">REST API Reference for DeleteIntent Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.DeleteIntentVersion(Amazon.LexModelBuildingService.Model.DeleteIntentVersionRequest)">
            <summary>
            Deletes a specific version of an intent. To delete all versions of a intent, use the
            <a>DeleteIntent</a> operation. 
            
             
            <para>
            This operation requires permissions for the <code>lex:DeleteIntentVersion</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteIntentVersion service method.</param>
            
            <returns>The response from the DeleteIntentVersion service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ResourceInUseException">
            The resource that you are attempting to delete is referred to by another resource.
            Use this information to remove references to the resource that you are trying to delete.
            
             
            <para>
            The body of the exception contains a JSON object that describes the resource.
            </para>
             
            <para>
             <code>{ "resourceType": BOT | BOTALIAS | BOTCHANNEL | INTENT,</code> 
            </para>
             
            <para>
             <code>"resourceReference": {</code> 
            </para>
             
            <para>
             <code>"name": <i>string</i>, "version": <i>string</i> } }</code> 
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteIntentVersion">REST API Reference for DeleteIntentVersion Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.DeleteIntentVersionAsync(Amazon.LexModelBuildingService.Model.DeleteIntentVersionRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a specific version of an intent. To delete all versions of a intent, use the
            <a>DeleteIntent</a> operation. 
            
             
            <para>
            This operation requires permissions for the <code>lex:DeleteIntentVersion</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteIntentVersion service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteIntentVersion service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ResourceInUseException">
            The resource that you are attempting to delete is referred to by another resource.
            Use this information to remove references to the resource that you are trying to delete.
            
             
            <para>
            The body of the exception contains a JSON object that describes the resource.
            </para>
             
            <para>
             <code>{ "resourceType": BOT | BOTALIAS | BOTCHANNEL | INTENT,</code> 
            </para>
             
            <para>
             <code>"resourceReference": {</code> 
            </para>
             
            <para>
             <code>"name": <i>string</i>, "version": <i>string</i> } }</code> 
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteIntentVersion">REST API Reference for DeleteIntentVersion Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.DeleteSlotType(Amazon.LexModelBuildingService.Model.DeleteSlotTypeRequest)">
            <summary>
            Deletes all versions of the slot type, including the <code>$LATEST</code> version.
            To delete a specific version of the slot type, use the <a>DeleteSlotTypeVersion</a>
            operation.
            
             
            <para>
             You can delete a version of a slot type only if it is not referenced. To delete a
            slot type that is referred to in one or more intents, you must remove those references
            first. 
            </para>
             <note> 
            <para>
             If you get the <code>ResourceInUseException</code> exception, the exception provides
            an example reference that shows the intent where the slot type is referenced. To remove
            the reference to the slot type, either update the intent or delete it. If you get
            the same exception when you attempt to delete the slot type again, repeat until the
            slot type has no references and the <code>DeleteSlotType</code> call is successful.
            
            </para>
             </note> 
            <para>
            This operation requires permission for the <code>lex:DeleteSlotType</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteSlotType service method.</param>
            
            <returns>The response from the DeleteSlotType service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ResourceInUseException">
            The resource that you are attempting to delete is referred to by another resource.
            Use this information to remove references to the resource that you are trying to delete.
            
             
            <para>
            The body of the exception contains a JSON object that describes the resource.
            </para>
             
            <para>
             <code>{ "resourceType": BOT | BOTALIAS | BOTCHANNEL | INTENT,</code> 
            </para>
             
            <para>
             <code>"resourceReference": {</code> 
            </para>
             
            <para>
             <code>"name": <i>string</i>, "version": <i>string</i> } }</code> 
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteSlotType">REST API Reference for DeleteSlotType Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.DeleteSlotTypeAsync(Amazon.LexModelBuildingService.Model.DeleteSlotTypeRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes all versions of the slot type, including the <code>$LATEST</code> version.
            To delete a specific version of the slot type, use the <a>DeleteSlotTypeVersion</a>
            operation.
            
             
            <para>
             You can delete a version of a slot type only if it is not referenced. To delete a
            slot type that is referred to in one or more intents, you must remove those references
            first. 
            </para>
             <note> 
            <para>
             If you get the <code>ResourceInUseException</code> exception, the exception provides
            an example reference that shows the intent where the slot type is referenced. To remove
            the reference to the slot type, either update the intent or delete it. If you get
            the same exception when you attempt to delete the slot type again, repeat until the
            slot type has no references and the <code>DeleteSlotType</code> call is successful.
            
            </para>
             </note> 
            <para>
            This operation requires permission for the <code>lex:DeleteSlotType</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteSlotType service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteSlotType service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ResourceInUseException">
            The resource that you are attempting to delete is referred to by another resource.
            Use this information to remove references to the resource that you are trying to delete.
            
             
            <para>
            The body of the exception contains a JSON object that describes the resource.
            </para>
             
            <para>
             <code>{ "resourceType": BOT | BOTALIAS | BOTCHANNEL | INTENT,</code> 
            </para>
             
            <para>
             <code>"resourceReference": {</code> 
            </para>
             
            <para>
             <code>"name": <i>string</i>, "version": <i>string</i> } }</code> 
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteSlotType">REST API Reference for DeleteSlotType Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.DeleteSlotTypeVersion(Amazon.LexModelBuildingService.Model.DeleteSlotTypeVersionRequest)">
            <summary>
            Deletes a specific version of a slot type. To delete all versions of a slot type,
            use the <a>DeleteSlotType</a> operation. 
            
             
            <para>
            This operation requires permissions for the <code>lex:DeleteSlotTypeVersion</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteSlotTypeVersion service method.</param>
            
            <returns>The response from the DeleteSlotTypeVersion service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ResourceInUseException">
            The resource that you are attempting to delete is referred to by another resource.
            Use this information to remove references to the resource that you are trying to delete.
            
             
            <para>
            The body of the exception contains a JSON object that describes the resource.
            </para>
             
            <para>
             <code>{ "resourceType": BOT | BOTALIAS | BOTCHANNEL | INTENT,</code> 
            </para>
             
            <para>
             <code>"resourceReference": {</code> 
            </para>
             
            <para>
             <code>"name": <i>string</i>, "version": <i>string</i> } }</code> 
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteSlotTypeVersion">REST API Reference for DeleteSlotTypeVersion Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.DeleteSlotTypeVersionAsync(Amazon.LexModelBuildingService.Model.DeleteSlotTypeVersionRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a specific version of a slot type. To delete all versions of a slot type,
            use the <a>DeleteSlotType</a> operation. 
            
             
            <para>
            This operation requires permissions for the <code>lex:DeleteSlotTypeVersion</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteSlotTypeVersion service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteSlotTypeVersion service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ResourceInUseException">
            The resource that you are attempting to delete is referred to by another resource.
            Use this information to remove references to the resource that you are trying to delete.
            
             
            <para>
            The body of the exception contains a JSON object that describes the resource.
            </para>
             
            <para>
             <code>{ "resourceType": BOT | BOTALIAS | BOTCHANNEL | INTENT,</code> 
            </para>
             
            <para>
             <code>"resourceReference": {</code> 
            </para>
             
            <para>
             <code>"name": <i>string</i>, "version": <i>string</i> } }</code> 
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteSlotTypeVersion">REST API Reference for DeleteSlotTypeVersion Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.DeleteUtterances(Amazon.LexModelBuildingService.Model.DeleteUtterancesRequest)">
            <summary>
            Deletes stored utterances.
            
             
            <para>
            Amazon Lex stores the utterances that users send to your bot. Utterances are stored
            for 15 days for use with the <a>GetUtterancesView</a> operation, and then stored indefinitely
            for use in improving the ability of your bot to respond to user input.
            </para>
             
            <para>
            Use the <code>DeleteUtterances</code> operation to manually delete stored utterances
            for a specific user. When you use the <code>DeleteUtterances</code> operation, utterances
            stored for improving your bot's ability to respond to user input are deleted immediately.
            Utterances stored for use with the <code>GetUtterancesView</code> operation are deleted
            after 15 days.
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:DeleteUtterances</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteUtterances service method.</param>
            
            <returns>The response from the DeleteUtterances service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteUtterances">REST API Reference for DeleteUtterances Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.DeleteUtterancesAsync(Amazon.LexModelBuildingService.Model.DeleteUtterancesRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes stored utterances.
            
             
            <para>
            Amazon Lex stores the utterances that users send to your bot. Utterances are stored
            for 15 days for use with the <a>GetUtterancesView</a> operation, and then stored indefinitely
            for use in improving the ability of your bot to respond to user input.
            </para>
             
            <para>
            Use the <code>DeleteUtterances</code> operation to manually delete stored utterances
            for a specific user. When you use the <code>DeleteUtterances</code> operation, utterances
            stored for improving your bot's ability to respond to user input are deleted immediately.
            Utterances stored for use with the <code>GetUtterancesView</code> operation are deleted
            after 15 days.
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:DeleteUtterances</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteUtterances service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteUtterances service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteUtterances">REST API Reference for DeleteUtterances Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetBot(Amazon.LexModelBuildingService.Model.GetBotRequest)">
            <summary>
            Returns metadata information for a specific bot. You must provide the bot name and
            the bot version or alias. 
            
             
            <para>
             This operation requires permissions for the <code>lex:GetBot</code> action. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetBot service method.</param>
            
            <returns>The response from the GetBot service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBot">REST API Reference for GetBot Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetBotAsync(Amazon.LexModelBuildingService.Model.GetBotRequest,System.Threading.CancellationToken)">
            <summary>
            Returns metadata information for a specific bot. You must provide the bot name and
            the bot version or alias. 
            
             
            <para>
             This operation requires permissions for the <code>lex:GetBot</code> action. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetBot service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetBot service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBot">REST API Reference for GetBot Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetBotAlias(Amazon.LexModelBuildingService.Model.GetBotAliasRequest)">
            <summary>
            Returns information about an Amazon Lex bot alias. For more information about aliases,
            see <a>versioning-aliases</a>.
            
             
            <para>
            This operation requires permissions for the <code>lex:GetBotAlias</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetBotAlias service method.</param>
            
            <returns>The response from the GetBotAlias service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBotAlias">REST API Reference for GetBotAlias Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetBotAliasAsync(Amazon.LexModelBuildingService.Model.GetBotAliasRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about an Amazon Lex bot alias. For more information about aliases,
            see <a>versioning-aliases</a>.
            
             
            <para>
            This operation requires permissions for the <code>lex:GetBotAlias</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetBotAlias service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetBotAlias service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBotAlias">REST API Reference for GetBotAlias Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetBotAliases(Amazon.LexModelBuildingService.Model.GetBotAliasesRequest)">
            <summary>
            Returns a list of aliases for a specified Amazon Lex bot.
            
             
            <para>
            This operation requires permissions for the <code>lex:GetBotAliases</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetBotAliases service method.</param>
            
            <returns>The response from the GetBotAliases service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBotAliases">REST API Reference for GetBotAliases Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetBotAliasesAsync(Amazon.LexModelBuildingService.Model.GetBotAliasesRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of aliases for a specified Amazon Lex bot.
            
             
            <para>
            This operation requires permissions for the <code>lex:GetBotAliases</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetBotAliases service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetBotAliases service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBotAliases">REST API Reference for GetBotAliases Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetBotChannelAssociation(Amazon.LexModelBuildingService.Model.GetBotChannelAssociationRequest)">
            <summary>
            Returns information about the association between an Amazon Lex bot and a messaging
            platform.
            
             
            <para>
            This operation requires permissions for the <code>lex:GetBotChannelAssociation</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetBotChannelAssociation service method.</param>
            
            <returns>The response from the GetBotChannelAssociation service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBotChannelAssociation">REST API Reference for GetBotChannelAssociation Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetBotChannelAssociationAsync(Amazon.LexModelBuildingService.Model.GetBotChannelAssociationRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about the association between an Amazon Lex bot and a messaging
            platform.
            
             
            <para>
            This operation requires permissions for the <code>lex:GetBotChannelAssociation</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetBotChannelAssociation service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetBotChannelAssociation service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBotChannelAssociation">REST API Reference for GetBotChannelAssociation Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetBotChannelAssociations(Amazon.LexModelBuildingService.Model.GetBotChannelAssociationsRequest)">
            <summary>
            Returns a list of all of the channels associated with the specified bot. 
            
             
            <para>
            The <code>GetBotChannelAssociations</code> operation requires permissions for the
            <code>lex:GetBotChannelAssociations</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetBotChannelAssociations service method.</param>
            
            <returns>The response from the GetBotChannelAssociations service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBotChannelAssociations">REST API Reference for GetBotChannelAssociations Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetBotChannelAssociationsAsync(Amazon.LexModelBuildingService.Model.GetBotChannelAssociationsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of all of the channels associated with the specified bot. 
            
             
            <para>
            The <code>GetBotChannelAssociations</code> operation requires permissions for the
            <code>lex:GetBotChannelAssociations</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetBotChannelAssociations service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetBotChannelAssociations service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBotChannelAssociations">REST API Reference for GetBotChannelAssociations Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetBots(Amazon.LexModelBuildingService.Model.GetBotsRequest)">
            <summary>
            Returns bot information as follows: 
            
             <ul> <li> 
            <para>
            If you provide the <code>nameContains</code> field, the response includes information
            for the <code>$LATEST</code> version of all bots whose name contains the specified
            string.
            </para>
             </li> <li> 
            <para>
            If you don't specify the <code>nameContains</code> field, the operation returns information
            about the <code>$LATEST</code> version of all of your bots.
            </para>
             </li> </ul> 
            <para>
            This operation requires permission for the <code>lex:GetBots</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetBots service method.</param>
            
            <returns>The response from the GetBots service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBots">REST API Reference for GetBots Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetBotsAsync(Amazon.LexModelBuildingService.Model.GetBotsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns bot information as follows: 
            
             <ul> <li> 
            <para>
            If you provide the <code>nameContains</code> field, the response includes information
            for the <code>$LATEST</code> version of all bots whose name contains the specified
            string.
            </para>
             </li> <li> 
            <para>
            If you don't specify the <code>nameContains</code> field, the operation returns information
            about the <code>$LATEST</code> version of all of your bots.
            </para>
             </li> </ul> 
            <para>
            This operation requires permission for the <code>lex:GetBots</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetBots service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetBots service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBots">REST API Reference for GetBots Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetBotVersions(Amazon.LexModelBuildingService.Model.GetBotVersionsRequest)">
            <summary>
            Gets information about all of the versions of a bot.
            
             
            <para>
            The <code>GetBotVersions</code> operation returns a <code>BotMetadata</code> object
            for each version of a bot. For example, if a bot has three numbered versions, the
            <code>GetBotVersions</code> operation returns four <code>BotMetadata</code> objects
            in the response, one for each numbered version and one for the <code>$LATEST</code>
            version. 
            </para>
             
            <para>
            The <code>GetBotVersions</code> operation always returns at least one version, the
            <code>$LATEST</code> version.
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:GetBotVersions</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetBotVersions service method.</param>
            
            <returns>The response from the GetBotVersions service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBotVersions">REST API Reference for GetBotVersions Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetBotVersionsAsync(Amazon.LexModelBuildingService.Model.GetBotVersionsRequest,System.Threading.CancellationToken)">
            <summary>
            Gets information about all of the versions of a bot.
            
             
            <para>
            The <code>GetBotVersions</code> operation returns a <code>BotMetadata</code> object
            for each version of a bot. For example, if a bot has three numbered versions, the
            <code>GetBotVersions</code> operation returns four <code>BotMetadata</code> objects
            in the response, one for each numbered version and one for the <code>$LATEST</code>
            version. 
            </para>
             
            <para>
            The <code>GetBotVersions</code> operation always returns at least one version, the
            <code>$LATEST</code> version.
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:GetBotVersions</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetBotVersions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetBotVersions service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBotVersions">REST API Reference for GetBotVersions Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetBuiltinIntent(Amazon.LexModelBuildingService.Model.GetBuiltinIntentRequest)">
            <summary>
            Returns information about a built-in intent.
            
             
            <para>
            This operation requires permission for the <code>lex:GetBuiltinIntent</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetBuiltinIntent service method.</param>
            
            <returns>The response from the GetBuiltinIntent service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBuiltinIntent">REST API Reference for GetBuiltinIntent Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetBuiltinIntentAsync(Amazon.LexModelBuildingService.Model.GetBuiltinIntentRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about a built-in intent.
            
             
            <para>
            This operation requires permission for the <code>lex:GetBuiltinIntent</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetBuiltinIntent service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetBuiltinIntent service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBuiltinIntent">REST API Reference for GetBuiltinIntent Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetBuiltinIntents(Amazon.LexModelBuildingService.Model.GetBuiltinIntentsRequest)">
            <summary>
            Gets a list of built-in intents that meet the specified criteria.
            
             
            <para>
            This operation requires permission for the <code>lex:GetBuiltinIntents</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetBuiltinIntents service method.</param>
            
            <returns>The response from the GetBuiltinIntents service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBuiltinIntents">REST API Reference for GetBuiltinIntents Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetBuiltinIntentsAsync(Amazon.LexModelBuildingService.Model.GetBuiltinIntentsRequest,System.Threading.CancellationToken)">
            <summary>
            Gets a list of built-in intents that meet the specified criteria.
            
             
            <para>
            This operation requires permission for the <code>lex:GetBuiltinIntents</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetBuiltinIntents service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetBuiltinIntents service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBuiltinIntents">REST API Reference for GetBuiltinIntents Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetBuiltinSlotTypes(Amazon.LexModelBuildingService.Model.GetBuiltinSlotTypesRequest)">
            <summary>
            Gets a list of built-in slot types that meet the specified criteria.
            
             
            <para>
            For a list of built-in slot types, see <a href="https://developer.amazon.com/public/solutions/alexa/alexa-skills-kit/docs/built-in-intent-ref/slot-type-reference">Slot
            Type Reference</a> in the <i>Alexa Skills Kit</i>.
            </para>
             
            <para>
            This operation requires permission for the <code>lex:GetBuiltInSlotTypes</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetBuiltinSlotTypes service method.</param>
            
            <returns>The response from the GetBuiltinSlotTypes service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBuiltinSlotTypes">REST API Reference for GetBuiltinSlotTypes Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetBuiltinSlotTypesAsync(Amazon.LexModelBuildingService.Model.GetBuiltinSlotTypesRequest,System.Threading.CancellationToken)">
            <summary>
            Gets a list of built-in slot types that meet the specified criteria.
            
             
            <para>
            For a list of built-in slot types, see <a href="https://developer.amazon.com/public/solutions/alexa/alexa-skills-kit/docs/built-in-intent-ref/slot-type-reference">Slot
            Type Reference</a> in the <i>Alexa Skills Kit</i>.
            </para>
             
            <para>
            This operation requires permission for the <code>lex:GetBuiltInSlotTypes</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetBuiltinSlotTypes service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetBuiltinSlotTypes service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBuiltinSlotTypes">REST API Reference for GetBuiltinSlotTypes Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetExport(Amazon.LexModelBuildingService.Model.GetExportRequest)">
            <summary>
            Exports the contents of a Amazon Lex resource in a specified format.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetExport service method.</param>
            
            <returns>The response from the GetExport service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetExport">REST API Reference for GetExport Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetExportAsync(Amazon.LexModelBuildingService.Model.GetExportRequest,System.Threading.CancellationToken)">
            <summary>
            Exports the contents of a Amazon Lex resource in a specified format.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetExport service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetExport service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetExport">REST API Reference for GetExport Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetImport(Amazon.LexModelBuildingService.Model.GetImportRequest)">
            <summary>
            Gets information about an import job started with the <code>StartImport</code> operation.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetImport service method.</param>
            
            <returns>The response from the GetImport service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetImport">REST API Reference for GetImport Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetImportAsync(Amazon.LexModelBuildingService.Model.GetImportRequest,System.Threading.CancellationToken)">
            <summary>
            Gets information about an import job started with the <code>StartImport</code> operation.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetImport service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetImport service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetImport">REST API Reference for GetImport Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetIntent(Amazon.LexModelBuildingService.Model.GetIntentRequest)">
            <summary>
            Returns information about an intent. In addition to the intent name, you must specify
            the intent version. 
            
             
            <para>
             This operation requires permissions to perform the <code>lex:GetIntent</code> action.
            
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetIntent service method.</param>
            
            <returns>The response from the GetIntent service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetIntent">REST API Reference for GetIntent Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetIntentAsync(Amazon.LexModelBuildingService.Model.GetIntentRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about an intent. In addition to the intent name, you must specify
            the intent version. 
            
             
            <para>
             This operation requires permissions to perform the <code>lex:GetIntent</code> action.
            
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetIntent service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetIntent service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetIntent">REST API Reference for GetIntent Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetIntents(Amazon.LexModelBuildingService.Model.GetIntentsRequest)">
            <summary>
            Returns intent information as follows: 
            
             <ul> <li> 
            <para>
            If you specify the <code>nameContains</code> field, returns the <code>$LATEST</code>
            version of all intents that contain the specified string.
            </para>
             </li> <li> 
            <para>
             If you don't specify the <code>nameContains</code> field, returns information about
            the <code>$LATEST</code> version of all intents. 
            </para>
             </li> </ul> 
            <para>
             The operation requires permission for the <code>lex:GetIntents</code> action. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetIntents service method.</param>
            
            <returns>The response from the GetIntents service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetIntents">REST API Reference for GetIntents Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetIntentsAsync(Amazon.LexModelBuildingService.Model.GetIntentsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns intent information as follows: 
            
             <ul> <li> 
            <para>
            If you specify the <code>nameContains</code> field, returns the <code>$LATEST</code>
            version of all intents that contain the specified string.
            </para>
             </li> <li> 
            <para>
             If you don't specify the <code>nameContains</code> field, returns information about
            the <code>$LATEST</code> version of all intents. 
            </para>
             </li> </ul> 
            <para>
             The operation requires permission for the <code>lex:GetIntents</code> action. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetIntents service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetIntents service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetIntents">REST API Reference for GetIntents Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetIntentVersions(Amazon.LexModelBuildingService.Model.GetIntentVersionsRequest)">
            <summary>
            Gets information about all of the versions of an intent.
            
             
            <para>
            The <code>GetIntentVersions</code> operation returns an <code>IntentMetadata</code>
            object for each version of an intent. For example, if an intent has three numbered
            versions, the <code>GetIntentVersions</code> operation returns four <code>IntentMetadata</code>
            objects in the response, one for each numbered version and one for the <code>$LATEST</code>
            version. 
            </para>
             
            <para>
            The <code>GetIntentVersions</code> operation always returns at least one version,
            the <code>$LATEST</code> version.
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:GetIntentVersions</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetIntentVersions service method.</param>
            
            <returns>The response from the GetIntentVersions service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetIntentVersions">REST API Reference for GetIntentVersions Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetIntentVersionsAsync(Amazon.LexModelBuildingService.Model.GetIntentVersionsRequest,System.Threading.CancellationToken)">
            <summary>
            Gets information about all of the versions of an intent.
            
             
            <para>
            The <code>GetIntentVersions</code> operation returns an <code>IntentMetadata</code>
            object for each version of an intent. For example, if an intent has three numbered
            versions, the <code>GetIntentVersions</code> operation returns four <code>IntentMetadata</code>
            objects in the response, one for each numbered version and one for the <code>$LATEST</code>
            version. 
            </para>
             
            <para>
            The <code>GetIntentVersions</code> operation always returns at least one version,
            the <code>$LATEST</code> version.
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:GetIntentVersions</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetIntentVersions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetIntentVersions service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetIntentVersions">REST API Reference for GetIntentVersions Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetMigration(Amazon.LexModelBuildingService.Model.GetMigrationRequest)">
            <summary>
            Provides details about an ongoing or complete migration from an Amazon Lex V1 bot
            to an Amazon Lex V2 bot. Use this operation to view the migration alerts and warnings
            related to the migration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetMigration service method.</param>
            
            <returns>The response from the GetMigration service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetMigration">REST API Reference for GetMigration Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetMigrationAsync(Amazon.LexModelBuildingService.Model.GetMigrationRequest,System.Threading.CancellationToken)">
            <summary>
            Provides details about an ongoing or complete migration from an Amazon Lex V1 bot
            to an Amazon Lex V2 bot. Use this operation to view the migration alerts and warnings
            related to the migration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetMigration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetMigration service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetMigration">REST API Reference for GetMigration Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetMigrations(Amazon.LexModelBuildingService.Model.GetMigrationsRequest)">
            <summary>
            Gets a list of migrations between Amazon Lex V1 and Amazon Lex V2.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetMigrations service method.</param>
            
            <returns>The response from the GetMigrations service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetMigrations">REST API Reference for GetMigrations Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetMigrationsAsync(Amazon.LexModelBuildingService.Model.GetMigrationsRequest,System.Threading.CancellationToken)">
            <summary>
            Gets a list of migrations between Amazon Lex V1 and Amazon Lex V2.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetMigrations service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetMigrations service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetMigrations">REST API Reference for GetMigrations Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetSlotType(Amazon.LexModelBuildingService.Model.GetSlotTypeRequest)">
            <summary>
            Returns information about a specific version of a slot type. In addition to specifying
            the slot type name, you must specify the slot type version.
            
             
            <para>
            This operation requires permissions for the <code>lex:GetSlotType</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSlotType service method.</param>
            
            <returns>The response from the GetSlotType service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetSlotType">REST API Reference for GetSlotType Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetSlotTypeAsync(Amazon.LexModelBuildingService.Model.GetSlotTypeRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about a specific version of a slot type. In addition to specifying
            the slot type name, you must specify the slot type version.
            
             
            <para>
            This operation requires permissions for the <code>lex:GetSlotType</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSlotType service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetSlotType service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetSlotType">REST API Reference for GetSlotType Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetSlotTypes(Amazon.LexModelBuildingService.Model.GetSlotTypesRequest)">
            <summary>
            Returns slot type information as follows: 
            
             <ul> <li> 
            <para>
            If you specify the <code>nameContains</code> field, returns the <code>$LATEST</code>
            version of all slot types that contain the specified string.
            </para>
             </li> <li> 
            <para>
             If you don't specify the <code>nameContains</code> field, returns information about
            the <code>$LATEST</code> version of all slot types. 
            </para>
             </li> </ul> 
            <para>
             The operation requires permission for the <code>lex:GetSlotTypes</code> action. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSlotTypes service method.</param>
            
            <returns>The response from the GetSlotTypes service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetSlotTypes">REST API Reference for GetSlotTypes Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetSlotTypesAsync(Amazon.LexModelBuildingService.Model.GetSlotTypesRequest,System.Threading.CancellationToken)">
            <summary>
            Returns slot type information as follows: 
            
             <ul> <li> 
            <para>
            If you specify the <code>nameContains</code> field, returns the <code>$LATEST</code>
            version of all slot types that contain the specified string.
            </para>
             </li> <li> 
            <para>
             If you don't specify the <code>nameContains</code> field, returns information about
            the <code>$LATEST</code> version of all slot types. 
            </para>
             </li> </ul> 
            <para>
             The operation requires permission for the <code>lex:GetSlotTypes</code> action. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSlotTypes service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetSlotTypes service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetSlotTypes">REST API Reference for GetSlotTypes Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetSlotTypeVersions(Amazon.LexModelBuildingService.Model.GetSlotTypeVersionsRequest)">
            <summary>
            Gets information about all versions of a slot type.
            
             
            <para>
            The <code>GetSlotTypeVersions</code> operation returns a <code>SlotTypeMetadata</code>
            object for each version of a slot type. For example, if a slot type has three numbered
            versions, the <code>GetSlotTypeVersions</code> operation returns four <code>SlotTypeMetadata</code>
            objects in the response, one for each numbered version and one for the <code>$LATEST</code>
            version. 
            </para>
             
            <para>
            The <code>GetSlotTypeVersions</code> operation always returns at least one version,
            the <code>$LATEST</code> version.
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:GetSlotTypeVersions</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSlotTypeVersions service method.</param>
            
            <returns>The response from the GetSlotTypeVersions service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetSlotTypeVersions">REST API Reference for GetSlotTypeVersions Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetSlotTypeVersionsAsync(Amazon.LexModelBuildingService.Model.GetSlotTypeVersionsRequest,System.Threading.CancellationToken)">
            <summary>
            Gets information about all versions of a slot type.
            
             
            <para>
            The <code>GetSlotTypeVersions</code> operation returns a <code>SlotTypeMetadata</code>
            object for each version of a slot type. For example, if a slot type has three numbered
            versions, the <code>GetSlotTypeVersions</code> operation returns four <code>SlotTypeMetadata</code>
            objects in the response, one for each numbered version and one for the <code>$LATEST</code>
            version. 
            </para>
             
            <para>
            The <code>GetSlotTypeVersions</code> operation always returns at least one version,
            the <code>$LATEST</code> version.
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:GetSlotTypeVersions</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSlotTypeVersions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetSlotTypeVersions service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetSlotTypeVersions">REST API Reference for GetSlotTypeVersions Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetUtterancesView(Amazon.LexModelBuildingService.Model.GetUtterancesViewRequest)">
            <summary>
            Use the <code>GetUtterancesView</code> operation to get information about the utterances
            that your users have made to your bot. You can use this list to tune the utterances
            that your bot responds to.
            
             
            <para>
            For example, say that you have created a bot to order flowers. After your users have
            used your bot for a while, use the <code>GetUtterancesView</code> operation to see
            the requests that they have made and whether they have been successful. You might
            find that the utterance "I want flowers" is not being recognized. You could add this
            utterance to the <code>OrderFlowers</code> intent so that your bot recognizes that
            utterance.
            </para>
             
            <para>
            After you publish a new version of a bot, you can get information about the old version
            and the new so that you can compare the performance across the two versions. 
            </para>
             
            <para>
            Utterance statistics are generated once a day. Data is available for the last 15 days.
            You can request information for up to 5 versions of your bot in each request. Amazon
            Lex returns the most frequent utterances received by the bot in the last 15 days.
            The response contains information about a maximum of 100 utterances for each version.
            </para>
             
            <para>
            If you set <code>childDirected</code> field to true when you created your bot, if
            you are using slot obfuscation with one or more slots, or if you opted out of participating
            in improving Amazon Lex, utterances are not available.
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:GetUtterancesView</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetUtterancesView service method.</param>
            
            <returns>The response from the GetUtterancesView service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetUtterancesView">REST API Reference for GetUtterancesView Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetUtterancesViewAsync(Amazon.LexModelBuildingService.Model.GetUtterancesViewRequest,System.Threading.CancellationToken)">
            <summary>
            Use the <code>GetUtterancesView</code> operation to get information about the utterances
            that your users have made to your bot. You can use this list to tune the utterances
            that your bot responds to.
            
             
            <para>
            For example, say that you have created a bot to order flowers. After your users have
            used your bot for a while, use the <code>GetUtterancesView</code> operation to see
            the requests that they have made and whether they have been successful. You might
            find that the utterance "I want flowers" is not being recognized. You could add this
            utterance to the <code>OrderFlowers</code> intent so that your bot recognizes that
            utterance.
            </para>
             
            <para>
            After you publish a new version of a bot, you can get information about the old version
            and the new so that you can compare the performance across the two versions. 
            </para>
             
            <para>
            Utterance statistics are generated once a day. Data is available for the last 15 days.
            You can request information for up to 5 versions of your bot in each request. Amazon
            Lex returns the most frequent utterances received by the bot in the last 15 days.
            The response contains information about a maximum of 100 utterances for each version.
            </para>
             
            <para>
            If you set <code>childDirected</code> field to true when you created your bot, if
            you are using slot obfuscation with one or more slots, or if you opted out of participating
            in improving Amazon Lex, utterances are not available.
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:GetUtterancesView</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetUtterancesView service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetUtterancesView service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetUtterancesView">REST API Reference for GetUtterancesView Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.ListTagsForResource(Amazon.LexModelBuildingService.Model.ListTagsForResourceRequest)">
            <summary>
            Gets a list of tags associated with the specified resource. Only bots, bot aliases,
            and bot channels can have tags associated with them.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            
            <returns>The response from the ListTagsForResource service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.ListTagsForResourceAsync(Amazon.LexModelBuildingService.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Gets a list of tags associated with the specified resource. Only bots, bot aliases,
            and bot channels can have tags associated with them.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.PutBot(Amazon.LexModelBuildingService.Model.PutBotRequest)">
            <summary>
            Creates an Amazon Lex conversational bot or replaces an existing bot. When you create
            or update a bot you are only required to specify a name, a locale, and whether the
            bot is directed toward children under age 13. You can use this to add intents later,
            or to remove intents from an existing bot. When you create a bot with the minimum
            information, the bot is created or updated but Amazon Lex returns the <code/> response
            <code>FAILED</code>. You can build the bot after you add one or more intents. For
            more information about Amazon Lex bots, see <a>how-it-works</a>. 
            
             
            <para>
            If you specify the name of an existing bot, the fields in the request replace the
            existing values in the <code>$LATEST</code> version of the bot. Amazon Lex removes
            any fields that you don't provide values for in the request, except for the <code>idleTTLInSeconds</code>
            and <code>privacySettings</code> fields, which are set to their default values. If
            you don't specify values for required fields, Amazon Lex throws an exception.
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:PutBot</code> action. For more
            information, see <a>security-iam</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutBot service method.</param>
            
            <returns>The response from the PutBot service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.PreconditionFailedException">
            The checksum of the resource that you are trying to change does not match the checksum
            in the request. Check the resource's checksum and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/PutBot">REST API Reference for PutBot Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.PutBotAsync(Amazon.LexModelBuildingService.Model.PutBotRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an Amazon Lex conversational bot or replaces an existing bot. When you create
            or update a bot you are only required to specify a name, a locale, and whether the
            bot is directed toward children under age 13. You can use this to add intents later,
            or to remove intents from an existing bot. When you create a bot with the minimum
            information, the bot is created or updated but Amazon Lex returns the <code/> response
            <code>FAILED</code>. You can build the bot after you add one or more intents. For
            more information about Amazon Lex bots, see <a>how-it-works</a>. 
            
             
            <para>
            If you specify the name of an existing bot, the fields in the request replace the
            existing values in the <code>$LATEST</code> version of the bot. Amazon Lex removes
            any fields that you don't provide values for in the request, except for the <code>idleTTLInSeconds</code>
            and <code>privacySettings</code> fields, which are set to their default values. If
            you don't specify values for required fields, Amazon Lex throws an exception.
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:PutBot</code> action. For more
            information, see <a>security-iam</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutBot service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutBot service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.PreconditionFailedException">
            The checksum of the resource that you are trying to change does not match the checksum
            in the request. Check the resource's checksum and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/PutBot">REST API Reference for PutBot Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.PutBotAlias(Amazon.LexModelBuildingService.Model.PutBotAliasRequest)">
            <summary>
            Creates an alias for the specified version of the bot or replaces an alias for the
            specified bot. To change the version of the bot that the alias points to, replace
            the alias. For more information about aliases, see <a>versioning-aliases</a>.
            
             
            <para>
            This operation requires permissions for the <code>lex:PutBotAlias</code> action. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutBotAlias service method.</param>
            
            <returns>The response from the PutBotAlias service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.PreconditionFailedException">
            The checksum of the resource that you are trying to change does not match the checksum
            in the request. Check the resource's checksum and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/PutBotAlias">REST API Reference for PutBotAlias Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.PutBotAliasAsync(Amazon.LexModelBuildingService.Model.PutBotAliasRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an alias for the specified version of the bot or replaces an alias for the
            specified bot. To change the version of the bot that the alias points to, replace
            the alias. For more information about aliases, see <a>versioning-aliases</a>.
            
             
            <para>
            This operation requires permissions for the <code>lex:PutBotAlias</code> action. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutBotAlias service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutBotAlias service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.PreconditionFailedException">
            The checksum of the resource that you are trying to change does not match the checksum
            in the request. Check the resource's checksum and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/PutBotAlias">REST API Reference for PutBotAlias Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.PutIntent(Amazon.LexModelBuildingService.Model.PutIntentRequest)">
            <summary>
            Creates an intent or replaces an existing intent.
            
             
            <para>
            To define the interaction between the user and your bot, you use one or more intents.
            For a pizza ordering bot, for example, you would create an <code>OrderPizza</code>
            intent. 
            </para>
             
            <para>
            To create an intent or replace an existing intent, you must provide the following:
            </para>
             <ul> <li> 
            <para>
            Intent name. For example, <code>OrderPizza</code>.
            </para>
             </li> <li> 
            <para>
            Sample utterances. For example, "Can I order a pizza, please." and "I want to order
            a pizza."
            </para>
             </li> <li> 
            <para>
            Information to be gathered. You specify slot types for the information that your bot
            will request from the user. You can specify standard slot types, such as a date or
            a time, or custom slot types such as the size and crust of a pizza.
            </para>
             </li> <li> 
            <para>
            How the intent will be fulfilled. You can provide a Lambda function or configure the
            intent to return the intent information to the client application. If you use a Lambda
            function, when all of the intent information is available, Amazon Lex invokes your
            Lambda function. If you configure your intent to return the intent information to
            the client application. 
            </para>
             </li> </ul> 
            <para>
            You can specify other optional information in the request, such as:
            </para>
             <ul> <li> 
            <para>
            A confirmation prompt to ask the user to confirm an intent. For example, "Shall I
            order your pizza?"
            </para>
             </li> <li> 
            <para>
            A conclusion statement to send to the user after the intent has been fulfilled. For
            example, "I placed your pizza order."
            </para>
             </li> <li> 
            <para>
            A follow-up prompt that asks the user for additional activity. For example, asking
            "Do you want to order a drink with your pizza?"
            </para>
             </li> </ul> 
            <para>
            If you specify an existing intent name to update the intent, Amazon Lex replaces the
            values in the <code>$LATEST</code> version of the intent with the values in the request.
            Amazon Lex removes fields that you don't provide in the request. If you don't specify
            the required fields, Amazon Lex throws an exception. When you update the <code>$LATEST</code>
            version of an intent, the <code>status</code> field of any bot that uses the <code>$LATEST</code>
            version of the intent is set to <code>NOT_BUILT</code>.
            </para>
             
            <para>
            For more information, see <a>how-it-works</a>.
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:PutIntent</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutIntent service method.</param>
            
            <returns>The response from the PutIntent service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.PreconditionFailedException">
            The checksum of the resource that you are trying to change does not match the checksum
            in the request. Check the resource's checksum and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/PutIntent">REST API Reference for PutIntent Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.PutIntentAsync(Amazon.LexModelBuildingService.Model.PutIntentRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an intent or replaces an existing intent.
            
             
            <para>
            To define the interaction between the user and your bot, you use one or more intents.
            For a pizza ordering bot, for example, you would create an <code>OrderPizza</code>
            intent. 
            </para>
             
            <para>
            To create an intent or replace an existing intent, you must provide the following:
            </para>
             <ul> <li> 
            <para>
            Intent name. For example, <code>OrderPizza</code>.
            </para>
             </li> <li> 
            <para>
            Sample utterances. For example, "Can I order a pizza, please." and "I want to order
            a pizza."
            </para>
             </li> <li> 
            <para>
            Information to be gathered. You specify slot types for the information that your bot
            will request from the user. You can specify standard slot types, such as a date or
            a time, or custom slot types such as the size and crust of a pizza.
            </para>
             </li> <li> 
            <para>
            How the intent will be fulfilled. You can provide a Lambda function or configure the
            intent to return the intent information to the client application. If you use a Lambda
            function, when all of the intent information is available, Amazon Lex invokes your
            Lambda function. If you configure your intent to return the intent information to
            the client application. 
            </para>
             </li> </ul> 
            <para>
            You can specify other optional information in the request, such as:
            </para>
             <ul> <li> 
            <para>
            A confirmation prompt to ask the user to confirm an intent. For example, "Shall I
            order your pizza?"
            </para>
             </li> <li> 
            <para>
            A conclusion statement to send to the user after the intent has been fulfilled. For
            example, "I placed your pizza order."
            </para>
             </li> <li> 
            <para>
            A follow-up prompt that asks the user for additional activity. For example, asking
            "Do you want to order a drink with your pizza?"
            </para>
             </li> </ul> 
            <para>
            If you specify an existing intent name to update the intent, Amazon Lex replaces the
            values in the <code>$LATEST</code> version of the intent with the values in the request.
            Amazon Lex removes fields that you don't provide in the request. If you don't specify
            the required fields, Amazon Lex throws an exception. When you update the <code>$LATEST</code>
            version of an intent, the <code>status</code> field of any bot that uses the <code>$LATEST</code>
            version of the intent is set to <code>NOT_BUILT</code>.
            </para>
             
            <para>
            For more information, see <a>how-it-works</a>.
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:PutIntent</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutIntent service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutIntent service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.PreconditionFailedException">
            The checksum of the resource that you are trying to change does not match the checksum
            in the request. Check the resource's checksum and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/PutIntent">REST API Reference for PutIntent Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.PutSlotType(Amazon.LexModelBuildingService.Model.PutSlotTypeRequest)">
            <summary>
            Creates a custom slot type or replaces an existing custom slot type.
            
             
            <para>
            To create a custom slot type, specify a name for the slot type and a set of enumeration
            values, which are the values that a slot of this type can assume. For more information,
            see <a>how-it-works</a>.
            </para>
             
            <para>
            If you specify the name of an existing slot type, the fields in the request replace
            the existing values in the <code>$LATEST</code> version of the slot type. Amazon Lex
            removes the fields that you don't provide in the request. If you don't specify required
            fields, Amazon Lex throws an exception. When you update the <code>$LATEST</code> version
            of a slot type, if a bot uses the <code>$LATEST</code> version of an intent that contains
            the slot type, the bot's <code>status</code> field is set to <code>NOT_BUILT</code>.
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:PutSlotType</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutSlotType service method.</param>
            
            <returns>The response from the PutSlotType service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.PreconditionFailedException">
            The checksum of the resource that you are trying to change does not match the checksum
            in the request. Check the resource's checksum and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/PutSlotType">REST API Reference for PutSlotType Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.PutSlotTypeAsync(Amazon.LexModelBuildingService.Model.PutSlotTypeRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a custom slot type or replaces an existing custom slot type.
            
             
            <para>
            To create a custom slot type, specify a name for the slot type and a set of enumeration
            values, which are the values that a slot of this type can assume. For more information,
            see <a>how-it-works</a>.
            </para>
             
            <para>
            If you specify the name of an existing slot type, the fields in the request replace
            the existing values in the <code>$LATEST</code> version of the slot type. Amazon Lex
            removes the fields that you don't provide in the request. If you don't specify required
            fields, Amazon Lex throws an exception. When you update the <code>$LATEST</code> version
            of a slot type, if a bot uses the <code>$LATEST</code> version of an intent that contains
            the slot type, the bot's <code>status</code> field is set to <code>NOT_BUILT</code>.
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:PutSlotType</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutSlotType service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutSlotType service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.PreconditionFailedException">
            The checksum of the resource that you are trying to change does not match the checksum
            in the request. Check the resource's checksum and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/PutSlotType">REST API Reference for PutSlotType Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.StartImport(Amazon.LexModelBuildingService.Model.StartImportRequest)">
            <summary>
            Starts a job to import a resource to Amazon Lex.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartImport service method.</param>
            
            <returns>The response from the StartImport service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/StartImport">REST API Reference for StartImport Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.StartImportAsync(Amazon.LexModelBuildingService.Model.StartImportRequest,System.Threading.CancellationToken)">
            <summary>
            Starts a job to import a resource to Amazon Lex.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartImport service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartImport service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/StartImport">REST API Reference for StartImport Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.StartMigration(Amazon.LexModelBuildingService.Model.StartMigrationRequest)">
            <summary>
            Starts migrating a bot from Amazon Lex V1 to Amazon Lex V2. Migrate your bot when
            you want to take advantage of the new features of Amazon Lex V2.
            
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/lex/latest/dg/migrate.html">Migrating
            a bot</a> in the <i>Amazon Lex developer guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartMigration service method.</param>
            
            <returns>The response from the StartMigration service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.AccessDeniedException">
            Your IAM user or role does not have permission to call the Amazon Lex V2 APIs required
            to migrate your bot.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/StartMigration">REST API Reference for StartMigration Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.StartMigrationAsync(Amazon.LexModelBuildingService.Model.StartMigrationRequest,System.Threading.CancellationToken)">
            <summary>
            Starts migrating a bot from Amazon Lex V1 to Amazon Lex V2. Migrate your bot when
            you want to take advantage of the new features of Amazon Lex V2.
            
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/lex/latest/dg/migrate.html">Migrating
            a bot</a> in the <i>Amazon Lex developer guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartMigration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartMigration service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.AccessDeniedException">
            Your IAM user or role does not have permission to call the Amazon Lex V2 APIs required
            to migrate your bot.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/StartMigration">REST API Reference for StartMigration Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.TagResource(Amazon.LexModelBuildingService.Model.TagResourceRequest)">
            <summary>
            Adds the specified tags to the specified resource. If a tag key already exists, the
            existing value is replaced with the new value.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            
            <returns>The response from the TagResource service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.TagResourceAsync(Amazon.LexModelBuildingService.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Adds the specified tags to the specified resource. If a tag key already exists, the
            existing value is replaced with the new value.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.UntagResource(Amazon.LexModelBuildingService.Model.UntagResourceRequest)">
            <summary>
            Removes tags from a bot, bot alias or bot channel.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            
            <returns>The response from the UntagResource service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.UntagResourceAsync(Amazon.LexModelBuildingService.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Removes tags from a bot, bot alias or bot channel.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
    </members>
</doc>
