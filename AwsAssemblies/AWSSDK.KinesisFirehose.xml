<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.KinesisFirehose</name>
    </assembly>
    <members>
        <member name="T:Amazon.KinesisFirehose.AmazonKinesisFirehoseConfig">
            <summary>
            Configuration for accessing Amazon KinesisFirehose service
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.AmazonKinesisFirehoseConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.AmazonKinesisFirehoseConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.AmazonKinesisFirehoseConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.AmazonKinesisFirehoseException">
            <summary>
             Common exception for the KinesisFirehose service.
             </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonKinesisFirehoseException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonKinesisFirehoseException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonKinesisFirehoseException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonKinesisFirehoseException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonKinesisFirehoseException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the AmazonKinesisFirehoseException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.KinesisFirehose.Internal.AmazonKinesisFirehoseMetadata">
            <summary>
            Service metadata for  Amazon KinesisFirehose service
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Internal.AmazonKinesisFirehoseMetadata.ServiceId">
            <summary>
            Gets the value of the Service Id.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Internal.AmazonKinesisFirehoseMetadata.OperationNameMapping">
            <summary>
            Gets the dictionary that gives mapping of renamed operations
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.AmazonKinesisFirehoseRequest">
            <summary>
            Base class for KinesisFirehose operation requests.
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.AmazonopensearchserviceBufferingHints">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.AmazonopensearchserviceBufferingHints.IntervalInSeconds">
            <summary>
            Gets and sets the property IntervalInSeconds.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.AmazonopensearchserviceBufferingHints.SizeInMBs">
            <summary>
            Gets and sets the property SizeInMBs.
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.AmazonopensearchserviceDestinationConfiguration">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.AmazonopensearchserviceDestinationConfiguration.BufferingHints">
            <summary>
            Gets and sets the property BufferingHints.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.AmazonopensearchserviceDestinationConfiguration.CloudWatchLoggingOptions">
            <summary>
            Gets and sets the property CloudWatchLoggingOptions.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.AmazonopensearchserviceDestinationConfiguration.ClusterEndpoint">
            <summary>
            Gets and sets the property ClusterEndpoint.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.AmazonopensearchserviceDestinationConfiguration.DomainARN">
            <summary>
            Gets and sets the property DomainARN.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.AmazonopensearchserviceDestinationConfiguration.IndexName">
            <summary>
            Gets and sets the property IndexName.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.AmazonopensearchserviceDestinationConfiguration.IndexRotationPeriod">
            <summary>
            Gets and sets the property IndexRotationPeriod.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.AmazonopensearchserviceDestinationConfiguration.ProcessingConfiguration">
            <summary>
            Gets and sets the property ProcessingConfiguration.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.AmazonopensearchserviceDestinationConfiguration.RetryOptions">
            <summary>
            Gets and sets the property RetryOptions.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.AmazonopensearchserviceDestinationConfiguration.RoleARN">
            <summary>
            Gets and sets the property RoleARN.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.AmazonopensearchserviceDestinationConfiguration.S3BackupMode">
            <summary>
            Gets and sets the property S3BackupMode.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.AmazonopensearchserviceDestinationConfiguration.S3Configuration">
            <summary>
            Gets and sets the property S3Configuration.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.AmazonopensearchserviceDestinationConfiguration.TypeName">
            <summary>
            Gets and sets the property TypeName.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.AmazonopensearchserviceDestinationConfiguration.VpcConfiguration">
            <summary>
            Gets and sets the property VpcConfiguration.
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.AmazonopensearchserviceDestinationDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.AmazonopensearchserviceDestinationDescription.BufferingHints">
            <summary>
            Gets and sets the property BufferingHints.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.AmazonopensearchserviceDestinationDescription.CloudWatchLoggingOptions">
            <summary>
            Gets and sets the property CloudWatchLoggingOptions.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.AmazonopensearchserviceDestinationDescription.ClusterEndpoint">
            <summary>
            Gets and sets the property ClusterEndpoint.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.AmazonopensearchserviceDestinationDescription.DomainARN">
            <summary>
            Gets and sets the property DomainARN.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.AmazonopensearchserviceDestinationDescription.IndexName">
            <summary>
            Gets and sets the property IndexName.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.AmazonopensearchserviceDestinationDescription.IndexRotationPeriod">
            <summary>
            Gets and sets the property IndexRotationPeriod.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.AmazonopensearchserviceDestinationDescription.ProcessingConfiguration">
            <summary>
            Gets and sets the property ProcessingConfiguration.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.AmazonopensearchserviceDestinationDescription.RetryOptions">
            <summary>
            Gets and sets the property RetryOptions.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.AmazonopensearchserviceDestinationDescription.RoleARN">
            <summary>
            Gets and sets the property RoleARN.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.AmazonopensearchserviceDestinationDescription.S3BackupMode">
            <summary>
            Gets and sets the property S3BackupMode.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.AmazonopensearchserviceDestinationDescription.S3DestinationDescription">
            <summary>
            Gets and sets the property S3DestinationDescription.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.AmazonopensearchserviceDestinationDescription.TypeName">
            <summary>
            Gets and sets the property TypeName.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.AmazonopensearchserviceDestinationDescription.VpcConfigurationDescription">
            <summary>
            Gets and sets the property VpcConfigurationDescription.
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.AmazonopensearchserviceDestinationUpdate">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.AmazonopensearchserviceDestinationUpdate.BufferingHints">
            <summary>
            Gets and sets the property BufferingHints.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.AmazonopensearchserviceDestinationUpdate.CloudWatchLoggingOptions">
            <summary>
            Gets and sets the property CloudWatchLoggingOptions.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.AmazonopensearchserviceDestinationUpdate.ClusterEndpoint">
            <summary>
            Gets and sets the property ClusterEndpoint.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.AmazonopensearchserviceDestinationUpdate.DomainARN">
            <summary>
            Gets and sets the property DomainARN.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.AmazonopensearchserviceDestinationUpdate.IndexName">
            <summary>
            Gets and sets the property IndexName.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.AmazonopensearchserviceDestinationUpdate.IndexRotationPeriod">
            <summary>
            Gets and sets the property IndexRotationPeriod.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.AmazonopensearchserviceDestinationUpdate.ProcessingConfiguration">
            <summary>
            Gets and sets the property ProcessingConfiguration.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.AmazonopensearchserviceDestinationUpdate.RetryOptions">
            <summary>
            Gets and sets the property RetryOptions.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.AmazonopensearchserviceDestinationUpdate.RoleARN">
            <summary>
            Gets and sets the property RoleARN.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.AmazonopensearchserviceDestinationUpdate.S3Update">
            <summary>
            Gets and sets the property S3Update.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.AmazonopensearchserviceDestinationUpdate.TypeName">
            <summary>
            Gets and sets the property TypeName.
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.AmazonopensearchserviceRetryOptions">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.AmazonopensearchserviceRetryOptions.DurationInSeconds">
            <summary>
            Gets and sets the property DurationInSeconds.
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.BufferingHints">
            <summary>
            Describes hints for the buffering to perform before delivering data to the destination.
            These options are treated as hints, and therefore Kinesis Data Firehose might choose
            to use different values when it is optimal. The <code>SizeInMBs</code> and <code>IntervalInSeconds</code>
            parameters are optional. However, if specify a value for one of them, you must also
            provide a value for the other.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.BufferingHints.IntervalInSeconds">
            <summary>
            Gets and sets the property IntervalInSeconds. 
            <para>
            Buffer incoming data for the specified period of time, in seconds, before delivering
            it to the destination. The default value is 300. This parameter is optional but if
            you specify a value for it, you must also specify a value for <code>SizeInMBs</code>,
            and vice versa.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.BufferingHints.SizeInMBs">
            <summary>
            Gets and sets the property SizeInMBs. 
            <para>
            Buffer incoming data to the specified size, in MiBs, before delivering it to the destination.
            The default value is 5. This parameter is optional but if you specify a value for
            it, you must also specify a value for <code>IntervalInSeconds</code>, and vice versa.
            </para>
             
            <para>
            We recommend setting this parameter to a value greater than the amount of data you
            typically ingest into the delivery stream in 10 seconds. For example, if you typically
            ingest data at 1 MiB/sec, the value should be 10 MiB or higher.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.CloudWatchLoggingOptions">
            <summary>
            Describes the Amazon CloudWatch logging options for your delivery stream.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.CloudWatchLoggingOptions.Enabled">
            <summary>
            Gets and sets the property Enabled. 
            <para>
            Enables or disables CloudWatch logging.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.CloudWatchLoggingOptions.LogGroupName">
            <summary>
            Gets and sets the property LogGroupName. 
            <para>
            The CloudWatch group name for logging. This value is required if CloudWatch logging
            is enabled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.CloudWatchLoggingOptions.LogStreamName">
            <summary>
            Gets and sets the property LogStreamName. 
            <para>
            The CloudWatch log stream name for logging. This value is required if CloudWatch logging
            is enabled.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.ConcurrentModificationException">
            <summary>
            Another modification has already happened. Fetch <code>VersionId</code> again and
            use it to update the destination.
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.ConcurrentModificationException.#ctor(System.String)">
            <summary>
            Constructs a new ConcurrentModificationException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.ConcurrentModificationException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ConcurrentModificationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.ConcurrentModificationException.#ctor(System.Exception)">
            <summary>
            Construct instance of ConcurrentModificationException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.ConcurrentModificationException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConcurrentModificationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.ConcurrentModificationException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConcurrentModificationException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.ConcurrentModificationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ConcurrentModificationException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.ConcurrentModificationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.CopyCommand">
            <summary>
            Describes a <code>COPY</code> command for Amazon Redshift.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.CopyCommand.CopyOptions">
            <summary>
            Gets and sets the property CopyOptions. 
            <para>
            Optional parameters to use with the Amazon Redshift <code>COPY</code> command. For
            more information, see the "Optional Parameters" section of <a href="https://docs.aws.amazon.com/redshift/latest/dg/r_COPY.html">Amazon
            Redshift COPY command</a>. Some possible examples that would apply to Kinesis Data
            Firehose are as follows:
            </para>
             
            <para>
             <code>delimiter '\t' lzop;</code> - fields are delimited with "\t" (TAB character)
            and compressed using lzop.
            </para>
             
            <para>
             <code>delimiter '|'</code> - fields are delimited with "|" (this is the default delimiter).
            </para>
             
            <para>
             <code>delimiter '|' escape</code> - the delimiter should be escaped.
            </para>
             
            <para>
             <code>fixedwidth 'venueid:3,venuename:25,venuecity:12,venuestate:2,venueseats:6'</code>
            - fields are fixed width in the source, with each width specified after every column
            in the table.
            </para>
             
            <para>
             <code>JSON 's3://mybucket/jsonpaths.txt'</code> - data is in JSON format, and the
            path specified is the format of the data.
            </para>
             
            <para>
            For more examples, see <a href="https://docs.aws.amazon.com/redshift/latest/dg/r_COPY_command_examples.html">Amazon
            Redshift COPY command examples</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.CopyCommand.DataTableColumns">
            <summary>
            Gets and sets the property DataTableColumns. 
            <para>
            A comma-separated list of column names.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.CopyCommand.DataTableName">
            <summary>
            Gets and sets the property DataTableName. 
            <para>
            The name of the target table. The table must already exist in the database.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.CreateDeliveryStreamRequest">
            <summary>
            Container for the parameters to the CreateDeliveryStream operation.
            Creates a Kinesis Data Firehose delivery stream.
            
             
            <para>
            By default, you can create up to 50 delivery streams per AWS Region.
            </para>
             
            <para>
            This is an asynchronous operation that immediately returns. The initial status of
            the delivery stream is <code>CREATING</code>. After the delivery stream is created,
            its status is <code>ACTIVE</code> and it now accepts data. If the delivery stream
            creation fails, the status transitions to <code>CREATING_FAILED</code>. Attempts to
            send data to a delivery stream that is not in the <code>ACTIVE</code> state cause
            an exception. To check the state of a delivery stream, use <a>DescribeDeliveryStream</a>.
            </para>
             
            <para>
            If the status of a delivery stream is <code>CREATING_FAILED</code>, this status doesn't
            change, and you can't invoke <code>CreateDeliveryStream</code> again on it. However,
            you can invoke the <a>DeleteDeliveryStream</a> operation to delete it.
            </para>
             
            <para>
            A Kinesis Data Firehose delivery stream can be configured to receive records directly
            from providers using <a>PutRecord</a> or <a>PutRecordBatch</a>, or it can be configured
            to use an existing Kinesis stream as its source. To specify a Kinesis data stream
            as input, set the <code>DeliveryStreamType</code> parameter to <code>KinesisStreamAsSource</code>,
            and provide the Kinesis stream Amazon Resource Name (ARN) and role ARN in the <code>KinesisStreamSourceConfiguration</code>
            parameter.
            </para>
             
            <para>
            To create a delivery stream with server-side encryption (SSE) enabled, include <a>DeliveryStreamEncryptionConfigurationInput</a>
            in your request. This is optional. You can also invoke <a>StartDeliveryStreamEncryption</a>
            to turn on SSE for an existing delivery stream that doesn't have SSE enabled.
            </para>
             
            <para>
            A delivery stream is configured with a single destination: Amazon S3, Amazon ES, Amazon
            Redshift, or Splunk. You must specify only one of the following destination configuration
            parameters: <code>ExtendedS3DestinationConfiguration</code>, <code>S3DestinationConfiguration</code>,
            <code>ElasticsearchDestinationConfiguration</code>, <code>RedshiftDestinationConfiguration</code>,
            or <code>SplunkDestinationConfiguration</code>.
            </para>
             
            <para>
            When you specify <code>S3DestinationConfiguration</code>, you can also provide the
            following optional values: BufferingHints, <code>EncryptionConfiguration</code>, and
            <code>CompressionFormat</code>. By default, if no <code>BufferingHints</code> value
            is provided, Kinesis Data Firehose buffers data up to 5 MB or for 5 minutes, whichever
            condition is satisfied first. <code>BufferingHints</code> is a hint, so there are
            some cases where the service cannot adhere to these conditions strictly. For example,
            record boundaries might be such that the size is a little over or under the configured
            buffering size. By default, no encryption is performed. We strongly recommend that
            you enable encryption to ensure secure data storage in Amazon S3.
            </para>
             
            <para>
            A few notes about Amazon Redshift as a destination:
            </para>
             <ul> <li> 
            <para>
            An Amazon Redshift destination requires an S3 bucket as intermediate location. Kinesis
            Data Firehose first delivers data to Amazon S3 and then uses <code>COPY</code> syntax
            to load data into an Amazon Redshift table. This is specified in the <code>RedshiftDestinationConfiguration.S3Configuration</code>
            parameter.
            </para>
             </li> <li> 
            <para>
            The compression formats <code>SNAPPY</code> or <code>ZIP</code> cannot be specified
            in <code>RedshiftDestinationConfiguration.S3Configuration</code> because the Amazon
            Redshift <code>COPY</code> operation that reads from the S3 bucket doesn't support
            these compression formats.
            </para>
             </li> <li> 
            <para>
            We strongly recommend that you use the user name and password you provide exclusively
            with Kinesis Data Firehose, and that the permissions for the account are restricted
            for Amazon Redshift <code>INSERT</code> permissions.
            </para>
             </li> </ul> 
            <para>
            Kinesis Data Firehose assumes the IAM role that is configured as part of the destination.
            The role should allow the Kinesis Data Firehose principal to assume the role, and
            the role should have permissions that allow the service to deliver the data. For more
            information, see <a href="https://docs.aws.amazon.com/firehose/latest/dev/controlling-access.html#using-iam-s3">Grant
            Kinesis Data Firehose Access to an Amazon S3 Destination</a> in the <i>Amazon Kinesis
            Data Firehose Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.CreateDeliveryStreamRequest.AmazonopensearchserviceDestinationConfiguration">
            <summary>
            Gets and sets the property AmazonopensearchserviceDestinationConfiguration.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.CreateDeliveryStreamRequest.DeliveryStreamEncryptionConfigurationInput">
            <summary>
            Gets and sets the property DeliveryStreamEncryptionConfigurationInput. 
            <para>
            Used to specify the type and Amazon Resource Name (ARN) of the KMS key needed for
            Server-Side Encryption (SSE).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.CreateDeliveryStreamRequest.DeliveryStreamName">
            <summary>
            Gets and sets the property DeliveryStreamName. 
            <para>
            The name of the delivery stream. This name must be unique per AWS account in the same
            AWS Region. If the delivery streams are in different accounts or different Regions,
            you can have multiple delivery streams with the same name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.CreateDeliveryStreamRequest.DeliveryStreamType">
            <summary>
            Gets and sets the property DeliveryStreamType. 
            <para>
            The delivery stream type. This parameter can be one of the following values:
            </para>
             <ul> <li> 
            <para>
             <code>DirectPut</code>: Provider applications access the delivery stream directly.
            </para>
             </li> <li> 
            <para>
             <code>KinesisStreamAsSource</code>: The delivery stream uses a Kinesis data stream
            as a source.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.CreateDeliveryStreamRequest.ElasticsearchDestinationConfiguration">
            <summary>
            Gets and sets the property ElasticsearchDestinationConfiguration. 
            <para>
            The destination in Amazon ES. You can specify only one destination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.CreateDeliveryStreamRequest.ExtendedS3DestinationConfiguration">
            <summary>
            Gets and sets the property ExtendedS3DestinationConfiguration. 
            <para>
            The destination in Amazon S3. You can specify only one destination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.CreateDeliveryStreamRequest.HttpEndpointDestinationConfiguration">
            <summary>
            Gets and sets the property HttpEndpointDestinationConfiguration. 
            <para>
            Enables configuring Kinesis Firehose to deliver data to any HTTP endpoint destination.
            You can specify only one destination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.CreateDeliveryStreamRequest.KinesisStreamSourceConfiguration">
            <summary>
            Gets and sets the property KinesisStreamSourceConfiguration. 
            <para>
            When a Kinesis data stream is used as the source for the delivery stream, a <a>KinesisStreamSourceConfiguration</a>
            containing the Kinesis data stream Amazon Resource Name (ARN) and the role ARN for
            the source stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.CreateDeliveryStreamRequest.RedshiftDestinationConfiguration">
            <summary>
            Gets and sets the property RedshiftDestinationConfiguration. 
            <para>
            The destination in Amazon Redshift. You can specify only one destination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.CreateDeliveryStreamRequest.S3DestinationConfiguration">
            <summary>
            Gets and sets the property S3DestinationConfiguration. 
            <para>
            [Deprecated] The destination in Amazon S3. You can specify only one destination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.CreateDeliveryStreamRequest.SplunkDestinationConfiguration">
            <summary>
            Gets and sets the property SplunkDestinationConfiguration. 
            <para>
            The destination in Splunk. You can specify only one destination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.CreateDeliveryStreamRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            A set of tags to assign to the delivery stream. A tag is a key-value pair that you
            can define and assign to AWS resources. Tags are metadata. For example, you can add
            friendly names and descriptions or other types of information that can help you distinguish
            the delivery stream. For more information about tags, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html">Using
            Cost Allocation Tags</a> in the AWS Billing and Cost Management User Guide.
            </para>
             
            <para>
            You can specify up to 50 tags when creating a delivery stream.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.CreateDeliveryStreamResponse">
            <summary>
            This is the response object from the CreateDeliveryStream operation.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.CreateDeliveryStreamResponse.DeliveryStreamARN">
            <summary>
            Gets and sets the property DeliveryStreamARN. 
            <para>
            The ARN of the delivery stream.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.DataFormatConversionConfiguration">
            <summary>
            Specifies that you want Kinesis Data Firehose to convert data from the JSON format
            to the Parquet or ORC format before writing it to Amazon S3. Kinesis Data Firehose
            uses the serializer and deserializer that you specify, in addition to the column information
            from the AWS Glue table, to deserialize your input data from JSON and then serialize
            it to the Parquet or ORC format. For more information, see <a href="https://docs.aws.amazon.com/firehose/latest/dev/record-format-conversion.html">Kinesis
            Data Firehose Record Format Conversion</a>.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.DataFormatConversionConfiguration.Enabled">
            <summary>
            Gets and sets the property Enabled. 
            <para>
            Defaults to <code>true</code>. Set it to <code>false</code> if you want to disable
            format conversion while preserving the configuration details.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.DataFormatConversionConfiguration.InputFormatConfiguration">
            <summary>
            Gets and sets the property InputFormatConfiguration. 
            <para>
            Specifies the deserializer that you want Kinesis Data Firehose to use to convert the
            format of your data from JSON. This parameter is required if <code>Enabled</code>
            is set to true.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.DataFormatConversionConfiguration.OutputFormatConfiguration">
            <summary>
            Gets and sets the property OutputFormatConfiguration. 
            <para>
            Specifies the serializer that you want Kinesis Data Firehose to use to convert the
            format of your data to the Parquet or ORC format. This parameter is required if <code>Enabled</code>
            is set to true.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.DataFormatConversionConfiguration.SchemaConfiguration">
            <summary>
            Gets and sets the property SchemaConfiguration. 
            <para>
            Specifies the AWS Glue Data Catalog table that contains the column information. This
            parameter is required if <code>Enabled</code> is set to true.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.DeleteDeliveryStreamRequest">
            <summary>
            Container for the parameters to the DeleteDeliveryStream operation.
            Deletes a delivery stream and its data.
            
             
            <para>
            To check the state of a delivery stream, use <a>DescribeDeliveryStream</a>. You can
            delete a delivery stream only if it is in one of the following states: <code>ACTIVE</code>,
            <code>DELETING</code>, <code>CREATING_FAILED</code>, or <code>DELETING_FAILED</code>.
            You can't delete a delivery stream that is in the <code>CREATING</code> state. While
            the deletion request is in process, the delivery stream is in the <code>DELETING</code>
            state.
            </para>
             
            <para>
            While the delivery stream is in the <code>DELETING</code> state, the service might
            continue to accept records, but it doesn't make any guarantees with respect to delivering
            the data. Therefore, as a best practice, first stop any applications that are sending
            records before you delete a delivery stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.DeleteDeliveryStreamRequest.AllowForceDelete">
            <summary>
            Gets and sets the property AllowForceDelete. 
            <para>
            Set this to true if you want to delete the delivery stream even if Kinesis Data Firehose
            is unable to retire the grant for the CMK. Kinesis Data Firehose might be unable to
            retire the grant due to a customer error, such as when the CMK or the grant are in
            an invalid state. If you force deletion, you can then use the <a href="https://docs.aws.amazon.com/kms/latest/APIReference/API_RevokeGrant.html">RevokeGrant</a>
            operation to revoke the grant you gave to Kinesis Data Firehose. If a failure to retire
            the grant happens due to an AWS KMS issue, Kinesis Data Firehose keeps retrying the
            delete operation.
            </para>
             
            <para>
            The default value is false.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.DeleteDeliveryStreamRequest.DeliveryStreamName">
            <summary>
            Gets and sets the property DeliveryStreamName. 
            <para>
            The name of the delivery stream.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.DeleteDeliveryStreamResponse">
            <summary>
            This is the response object from the DeleteDeliveryStream operation.
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.DeliveryStreamDescription">
            <summary>
            Contains information about a delivery stream.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.DeliveryStreamDescription.CreateTimestamp">
            <summary>
            Gets and sets the property CreateTimestamp. 
            <para>
            The date and time that the delivery stream was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.DeliveryStreamDescription.DeliveryStreamARN">
            <summary>
            Gets and sets the property DeliveryStreamARN. 
            <para>
            The Amazon Resource Name (ARN) of the delivery stream. For more information, see <a
            href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs) and AWS Service Namespaces</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.DeliveryStreamDescription.DeliveryStreamEncryptionConfiguration">
            <summary>
            Gets and sets the property DeliveryStreamEncryptionConfiguration. 
            <para>
            Indicates the server-side encryption (SSE) status for the delivery stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.DeliveryStreamDescription.DeliveryStreamName">
            <summary>
            Gets and sets the property DeliveryStreamName. 
            <para>
            The name of the delivery stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.DeliveryStreamDescription.DeliveryStreamStatus">
            <summary>
            Gets and sets the property DeliveryStreamStatus. 
            <para>
            The status of the delivery stream. If the status of a delivery stream is <code>CREATING_FAILED</code>,
            this status doesn't change, and you can't invoke <code>CreateDeliveryStream</code>
            again on it. However, you can invoke the <a>DeleteDeliveryStream</a> operation to
            delete it.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.DeliveryStreamDescription.DeliveryStreamType">
            <summary>
            Gets and sets the property DeliveryStreamType. 
            <para>
            The delivery stream type. This can be one of the following values:
            </para>
             <ul> <li> 
            <para>
             <code>DirectPut</code>: Provider applications access the delivery stream directly.
            </para>
             </li> <li> 
            <para>
             <code>KinesisStreamAsSource</code>: The delivery stream uses a Kinesis data stream
            as a source.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.DeliveryStreamDescription.Destinations">
            <summary>
            Gets and sets the property Destinations. 
            <para>
            The destinations.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.DeliveryStreamDescription.FailureDescription">
            <summary>
            Gets and sets the property FailureDescription. 
            <para>
            Provides details in case one of the following operations fails due to an error related
            to KMS: <a>CreateDeliveryStream</a>, <a>DeleteDeliveryStream</a>, <a>StartDeliveryStreamEncryption</a>,
            <a>StopDeliveryStreamEncryption</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.DeliveryStreamDescription.HasMoreDestinations">
            <summary>
            Gets and sets the property HasMoreDestinations. 
            <para>
            Indicates whether there are more destinations available to list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.DeliveryStreamDescription.LastUpdateTimestamp">
            <summary>
            Gets and sets the property LastUpdateTimestamp. 
            <para>
            The date and time that the delivery stream was last updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.DeliveryStreamDescription.Source">
            <summary>
            Gets and sets the property Source. 
            <para>
            If the <code>DeliveryStreamType</code> parameter is <code>KinesisStreamAsSource</code>,
            a <a>SourceDescription</a> object describing the source Kinesis data stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.DeliveryStreamDescription.VersionId">
            <summary>
            Gets and sets the property VersionId. 
            <para>
            Each time the destination is updated for a delivery stream, the version ID is changed,
            and the current version ID is required when updating the destination. This is so that
            the service knows it is applying the changes to the correct version of the delivery
            stream.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.DeliveryStreamEncryptionConfiguration">
            <summary>
            Contains information about the server-side encryption (SSE) status for the delivery
            stream, the type customer master key (CMK) in use, if any, and the ARN of the CMK.
            You can get <code>DeliveryStreamEncryptionConfiguration</code> by invoking the <a>DescribeDeliveryStream</a>
            operation.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.DeliveryStreamEncryptionConfiguration.FailureDescription">
            <summary>
            Gets and sets the property FailureDescription. 
            <para>
            Provides details in case one of the following operations fails due to an error related
            to KMS: <a>CreateDeliveryStream</a>, <a>DeleteDeliveryStream</a>, <a>StartDeliveryStreamEncryption</a>,
            <a>StopDeliveryStreamEncryption</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.DeliveryStreamEncryptionConfiguration.KeyARN">
            <summary>
            Gets and sets the property KeyARN. 
            <para>
            If <code>KeyType</code> is <code>CUSTOMER_MANAGED_CMK</code>, this field contains
            the ARN of the customer managed CMK. If <code>KeyType</code> is <code>AWS_OWNED_CMK</code>,
            <code>DeliveryStreamEncryptionConfiguration</code> doesn't contain a value for <code>KeyARN</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.DeliveryStreamEncryptionConfiguration.KeyType">
            <summary>
            Gets and sets the property KeyType. 
            <para>
            Indicates the type of customer master key (CMK) that is used for encryption. The default
            setting is <code>AWS_OWNED_CMK</code>. For more information about CMKs, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#master_keys">Customer
            Master Keys (CMKs)</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.DeliveryStreamEncryptionConfiguration.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            This is the server-side encryption (SSE) status for the delivery stream. For a full
            description of the different values of this status, see <a>StartDeliveryStreamEncryption</a>
            and <a>StopDeliveryStreamEncryption</a>. If this status is <code>ENABLING_FAILED</code>
            or <code>DISABLING_FAILED</code>, it is the status of the most recent attempt to enable
            or disable SSE, respectively.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.DeliveryStreamEncryptionConfigurationInput">
            <summary>
            Specifies the type and Amazon Resource Name (ARN) of the CMK to use for Server-Side
            Encryption (SSE).
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.DeliveryStreamEncryptionConfigurationInput.KeyARN">
            <summary>
            Gets and sets the property KeyARN. 
            <para>
            If you set <code>KeyType</code> to <code>CUSTOMER_MANAGED_CMK</code>, you must specify
            the Amazon Resource Name (ARN) of the CMK. If you set <code>KeyType</code> to <code>AWS_OWNED_CMK</code>,
            Kinesis Data Firehose uses a service-account CMK.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.DeliveryStreamEncryptionConfigurationInput.KeyType">
            <summary>
            Gets and sets the property KeyType. 
            <para>
            Indicates the type of customer master key (CMK) to use for encryption. The default
            setting is <code>AWS_OWNED_CMK</code>. For more information about CMKs, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#master_keys">Customer
            Master Keys (CMKs)</a>. When you invoke <a>CreateDeliveryStream</a> or <a>StartDeliveryStreamEncryption</a>
            with <code>KeyType</code> set to CUSTOMER_MANAGED_CMK, Kinesis Data Firehose invokes
            the Amazon KMS operation <a href="https://docs.aws.amazon.com/kms/latest/APIReference/API_CreateGrant.html">CreateGrant</a>
            to create a grant that allows the Kinesis Data Firehose service to use the customer
            managed CMK to perform encryption and decryption. Kinesis Data Firehose manages that
            grant. 
            </para>
             
            <para>
            When you invoke <a>StartDeliveryStreamEncryption</a> to change the CMK for a delivery
            stream that is encrypted with a customer managed CMK, Kinesis Data Firehose schedules
            the grant it had on the old CMK for retirement.
            </para>
             
            <para>
            You can use a CMK of type CUSTOMER_MANAGED_CMK to encrypt up to 500 delivery streams.
            If a <a>CreateDeliveryStream</a> or <a>StartDeliveryStreamEncryption</a> operation
            exceeds this limit, Kinesis Data Firehose throws a <code>LimitExceededException</code>.
            
            </para>
             <important> 
            <para>
            To encrypt your delivery stream, use symmetric CMKs. Kinesis Data Firehose doesn't
            support asymmetric CMKs. For information about symmetric and asymmetric CMKs, see
            <a href="https://docs.aws.amazon.com/kms/latest/developerguide/symm-asymm-concepts.html">About
            Symmetric and Asymmetric CMKs</a> in the AWS Key Management Service developer guide.
            </para>
             </important>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.DescribeDeliveryStreamRequest">
            <summary>
            Container for the parameters to the DescribeDeliveryStream operation.
            Describes the specified delivery stream and its status. For example, after your delivery
            stream is created, call <code>DescribeDeliveryStream</code> to see whether the delivery
            stream is <code>ACTIVE</code> and therefore ready for data to be sent to it. 
            
             
            <para>
            If the status of a delivery stream is <code>CREATING_FAILED</code>, this status doesn't
            change, and you can't invoke <a>CreateDeliveryStream</a> again on it. However, you
            can invoke the <a>DeleteDeliveryStream</a> operation to delete it. If the status is
            <code>DELETING_FAILED</code>, you can force deletion by invoking <a>DeleteDeliveryStream</a>
            again but with <a>DeleteDeliveryStreamInput$AllowForceDelete</a> set to true.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.DescribeDeliveryStreamRequest.DeliveryStreamName">
            <summary>
            Gets and sets the property DeliveryStreamName. 
            <para>
            The name of the delivery stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.DescribeDeliveryStreamRequest.ExclusiveStartDestinationId">
            <summary>
            Gets and sets the property ExclusiveStartDestinationId. 
            <para>
            The ID of the destination to start returning the destination information. Kinesis
            Data Firehose supports one destination per delivery stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.DescribeDeliveryStreamRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            The limit on the number of destinations to return. You can have one destination per
            delivery stream.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.DescribeDeliveryStreamResponse">
            <summary>
            This is the response object from the DescribeDeliveryStream operation.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.DescribeDeliveryStreamResponse.DeliveryStreamDescription">
            <summary>
            Gets and sets the property DeliveryStreamDescription. 
            <para>
            Information about the delivery stream.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Deserializer">
            <summary>
            The deserializer you want Kinesis Data Firehose to use for converting the input data
            from JSON. Kinesis Data Firehose then serializes the data to its final format using
            the <a>Serializer</a>. Kinesis Data Firehose supports two types of deserializers:
            the <a href="https://cwiki.apache.org/confluence/display/Hive/LanguageManual+DDL#LanguageManualDDL-JSON">Apache
            Hive JSON SerDe</a> and the <a href="https://github.com/rcongiu/Hive-JSON-Serde">OpenX
            JSON SerDe</a>.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Deserializer.HiveJsonSerDe">
            <summary>
            Gets and sets the property HiveJsonSerDe. 
            <para>
            The native Hive / HCatalog JsonSerDe. Used by Kinesis Data Firehose for deserializing
            data, which means converting it from the JSON format in preparation for serializing
            it to the Parquet or ORC format. This is one of two deserializers you can choose,
            depending on which one offers the functionality you need. The other option is the
            OpenX SerDe.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Deserializer.OpenXJsonSerDe">
            <summary>
            Gets and sets the property OpenXJsonSerDe. 
            <para>
            The OpenX SerDe. Used by Kinesis Data Firehose for deserializing data, which means
            converting it from the JSON format in preparation for serializing it to the Parquet
            or ORC format. This is one of two deserializers you can choose, depending on which
            one offers the functionality you need. The other option is the native Hive / HCatalog
            JsonSerDe.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.DestinationDescription">
            <summary>
            Describes the destination for a delivery stream.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.DestinationDescription.AmazonopensearchserviceDestinationDescription">
            <summary>
            Gets and sets the property AmazonopensearchserviceDestinationDescription.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.DestinationDescription.DestinationId">
            <summary>
            Gets and sets the property DestinationId. 
            <para>
            The ID of the destination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.DestinationDescription.ElasticsearchDestinationDescription">
            <summary>
            Gets and sets the property ElasticsearchDestinationDescription. 
            <para>
            The destination in Amazon ES.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.DestinationDescription.ExtendedS3DestinationDescription">
            <summary>
            Gets and sets the property ExtendedS3DestinationDescription. 
            <para>
            The destination in Amazon S3.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.DestinationDescription.HttpEndpointDestinationDescription">
            <summary>
            Gets and sets the property HttpEndpointDestinationDescription. 
            <para>
            Describes the specified HTTP endpoint destination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.DestinationDescription.RedshiftDestinationDescription">
            <summary>
            Gets and sets the property RedshiftDestinationDescription. 
            <para>
            The destination in Amazon Redshift.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.DestinationDescription.S3DestinationDescription">
            <summary>
            Gets and sets the property S3DestinationDescription. 
            <para>
            [Deprecated] The destination in Amazon S3.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.DestinationDescription.SplunkDestinationDescription">
            <summary>
            Gets and sets the property SplunkDestinationDescription. 
            <para>
            The destination in Splunk.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.DynamicPartitioningConfiguration">
            <summary>
            The configuration of the dynamic partitioning mechanism that creates smaller data
            sets from the streaming data by partitioning it based on partition keys. Currently,
            dynamic partitioning is only supported for Amazon S3 destinations. For more information,
            see <a href="https://docs.aws.amazon.com/firehose/latest/dev/dynamic-partitioning.html">https://docs.aws.amazon.com/firehose/latest/dev/dynamic-partitioning.html</a>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.DynamicPartitioningConfiguration.Enabled">
            <summary>
            Gets and sets the property Enabled. 
            <para>
            Specifies that the dynamic partitioning is enabled for this Kinesis Data Firehose
            delivery stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.DynamicPartitioningConfiguration.RetryOptions">
            <summary>
            Gets and sets the property RetryOptions. 
            <para>
            The retry behavior in case Kinesis Data Firehose is unable to deliver data to an Amazon
            S3 prefix.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.ElasticsearchBufferingHints">
            <summary>
            Describes the buffering to perform before delivering data to the Amazon ES destination.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchBufferingHints.IntervalInSeconds">
            <summary>
            Gets and sets the property IntervalInSeconds. 
            <para>
            Buffer incoming data for the specified period of time, in seconds, before delivering
            it to the destination. The default value is 300 (5 minutes).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchBufferingHints.SizeInMBs">
            <summary>
            Gets and sets the property SizeInMBs. 
            <para>
            Buffer incoming data to the specified size, in MBs, before delivering it to the destination.
            The default value is 5.
            </para>
             
            <para>
            We recommend setting this parameter to a value greater than the amount of data you
            typically ingest into the delivery stream in 10 seconds. For example, if you typically
            ingest data at 1 MB/sec, the value should be 10 MB or higher.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.ElasticsearchDestinationConfiguration">
            <summary>
            Describes the configuration of a destination in Amazon ES.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchDestinationConfiguration.BufferingHints">
            <summary>
            Gets and sets the property BufferingHints. 
            <para>
            The buffering options. If no value is specified, the default values for <code>ElasticsearchBufferingHints</code>
            are used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchDestinationConfiguration.CloudWatchLoggingOptions">
            <summary>
            Gets and sets the property CloudWatchLoggingOptions. 
            <para>
            The Amazon CloudWatch logging options for your delivery stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchDestinationConfiguration.ClusterEndpoint">
            <summary>
            Gets and sets the property ClusterEndpoint. 
            <para>
            The endpoint to use when communicating with the cluster. Specify either this <code>ClusterEndpoint</code>
            or the <code>DomainARN</code> field.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchDestinationConfiguration.DomainARN">
            <summary>
            Gets and sets the property DomainARN. 
            <para>
            The ARN of the Amazon ES domain. The IAM role must have permissions for <code>DescribeElasticsearchDomain</code>,
            <code>DescribeElasticsearchDomains</code>, and <code>DescribeElasticsearchDomainConfig</code> after
            assuming the role specified in <b>RoleARN</b>. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs) and AWS Service Namespaces</a>.
            </para>
             
            <para>
            Specify either <code>ClusterEndpoint</code> or <code>DomainARN</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchDestinationConfiguration.IndexName">
            <summary>
            Gets and sets the property IndexName. 
            <para>
            The Elasticsearch index name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchDestinationConfiguration.IndexRotationPeriod">
            <summary>
            Gets and sets the property IndexRotationPeriod. 
            <para>
            The Elasticsearch index rotation period. Index rotation appends a timestamp to the
            <code>IndexName</code> to facilitate the expiration of old data. For more information,
            see <a href="https://docs.aws.amazon.com/firehose/latest/dev/basic-deliver.html#es-index-rotation">Index
            Rotation for the Amazon ES Destination</a>. The default value is <code>OneDay</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchDestinationConfiguration.ProcessingConfiguration">
            <summary>
            Gets and sets the property ProcessingConfiguration. 
            <para>
            The data processing configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchDestinationConfiguration.RetryOptions">
            <summary>
            Gets and sets the property RetryOptions. 
            <para>
            The retry behavior in case Kinesis Data Firehose is unable to deliver documents to
            Amazon ES. The default value is 300 (5 minutes).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchDestinationConfiguration.RoleARN">
            <summary>
            Gets and sets the property RoleARN. 
            <para>
            The Amazon Resource Name (ARN) of the IAM role to be assumed by Kinesis Data Firehose
            for calling the Amazon ES Configuration API and for indexing documents. For more information,
            see <a href="https://docs.aws.amazon.com/firehose/latest/dev/controlling-access.html#using-iam-s3">Grant
            Kinesis Data Firehose Access to an Amazon S3 Destination</a> and <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs) and AWS Service Namespaces</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchDestinationConfiguration.S3BackupMode">
            <summary>
            Gets and sets the property S3BackupMode. 
            <para>
            Defines how documents should be delivered to Amazon S3. When it is set to <code>FailedDocumentsOnly</code>,
            Kinesis Data Firehose writes any documents that could not be indexed to the configured
            Amazon S3 destination, with <code>elasticsearch-failed/</code> appended to the key
            prefix. When set to <code>AllDocuments</code>, Kinesis Data Firehose delivers all
            incoming records to Amazon S3, and also writes failed documents with <code>elasticsearch-failed/</code>
            appended to the prefix. For more information, see <a href="https://docs.aws.amazon.com/firehose/latest/dev/basic-deliver.html#es-s3-backup">Amazon
            S3 Backup for the Amazon ES Destination</a>. Default value is <code>FailedDocumentsOnly</code>.
            </para>
             
            <para>
            You can't change this backup mode after you create the delivery stream. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchDestinationConfiguration.S3Configuration">
            <summary>
            Gets and sets the property S3Configuration. 
            <para>
            The configuration for the backup Amazon S3 location.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchDestinationConfiguration.TypeName">
            <summary>
            Gets and sets the property TypeName. 
            <para>
            The Elasticsearch type name. For Elasticsearch 6.x, there can be only one type per
            index. If you try to specify a new type for an existing index that already has another
            type, Kinesis Data Firehose returns an error during run time.
            </para>
             
            <para>
            For Elasticsearch 7.x, don't specify a <code>TypeName</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchDestinationConfiguration.VpcConfiguration">
            <summary>
            Gets and sets the property VpcConfiguration. 
            <para>
            The details of the VPC of the Amazon ES destination.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.ElasticsearchDestinationDescription">
            <summary>
            The destination description in Amazon ES.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchDestinationDescription.BufferingHints">
            <summary>
            Gets and sets the property BufferingHints. 
            <para>
            The buffering options.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchDestinationDescription.CloudWatchLoggingOptions">
            <summary>
            Gets and sets the property CloudWatchLoggingOptions. 
            <para>
            The Amazon CloudWatch logging options.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchDestinationDescription.ClusterEndpoint">
            <summary>
            Gets and sets the property ClusterEndpoint. 
            <para>
            The endpoint to use when communicating with the cluster. Kinesis Data Firehose uses
            either this <code>ClusterEndpoint</code> or the <code>DomainARN</code> field to send
            data to Amazon ES.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchDestinationDescription.DomainARN">
            <summary>
            Gets and sets the property DomainARN. 
            <para>
            The ARN of the Amazon ES domain. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs) and AWS Service Namespaces</a>.
            </para>
             
            <para>
            Kinesis Data Firehose uses either <code>ClusterEndpoint</code> or <code>DomainARN</code>
            to send data to Amazon ES.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchDestinationDescription.IndexName">
            <summary>
            Gets and sets the property IndexName. 
            <para>
            The Elasticsearch index name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchDestinationDescription.IndexRotationPeriod">
            <summary>
            Gets and sets the property IndexRotationPeriod. 
            <para>
            The Elasticsearch index rotation period
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchDestinationDescription.ProcessingConfiguration">
            <summary>
            Gets and sets the property ProcessingConfiguration. 
            <para>
            The data processing configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchDestinationDescription.RetryOptions">
            <summary>
            Gets and sets the property RetryOptions. 
            <para>
            The Amazon ES retry options.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchDestinationDescription.RoleARN">
            <summary>
            Gets and sets the property RoleARN. 
            <para>
            The Amazon Resource Name (ARN) of the AWS credentials. For more information, see <a
            href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs) and AWS Service Namespaces</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchDestinationDescription.S3BackupMode">
            <summary>
            Gets and sets the property S3BackupMode. 
            <para>
            The Amazon S3 backup mode.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchDestinationDescription.S3DestinationDescription">
            <summary>
            Gets and sets the property S3DestinationDescription. 
            <para>
            The Amazon S3 destination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchDestinationDescription.TypeName">
            <summary>
            Gets and sets the property TypeName. 
            <para>
            The Elasticsearch type name. This applies to Elasticsearch 6.x and lower versions.
            For Elasticsearch 7.x, there's no value for <code>TypeName</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchDestinationDescription.VpcConfigurationDescription">
            <summary>
            Gets and sets the property VpcConfigurationDescription. 
            <para>
            The details of the VPC of the Amazon ES destination.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.ElasticsearchDestinationUpdate">
            <summary>
            Describes an update for a destination in Amazon ES.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchDestinationUpdate.BufferingHints">
            <summary>
            Gets and sets the property BufferingHints. 
            <para>
            The buffering options. If no value is specified, <code>ElasticsearchBufferingHints</code>
            object default values are used. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchDestinationUpdate.CloudWatchLoggingOptions">
            <summary>
            Gets and sets the property CloudWatchLoggingOptions. 
            <para>
            The CloudWatch logging options for your delivery stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchDestinationUpdate.ClusterEndpoint">
            <summary>
            Gets and sets the property ClusterEndpoint. 
            <para>
            The endpoint to use when communicating with the cluster. Specify either this <code>ClusterEndpoint</code>
            or the <code>DomainARN</code> field.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchDestinationUpdate.DomainARN">
            <summary>
            Gets and sets the property DomainARN. 
            <para>
            The ARN of the Amazon ES domain. The IAM role must have permissions for <code>DescribeElasticsearchDomain</code>,
            <code>DescribeElasticsearchDomains</code>, and <code>DescribeElasticsearchDomainConfig</code> after
            assuming the IAM role specified in <code>RoleARN</code>. For more information, see
            <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs) and AWS Service Namespaces</a>.
            </para>
             
            <para>
            Specify either <code>ClusterEndpoint</code> or <code>DomainARN</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchDestinationUpdate.IndexName">
            <summary>
            Gets and sets the property IndexName. 
            <para>
            The Elasticsearch index name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchDestinationUpdate.IndexRotationPeriod">
            <summary>
            Gets and sets the property IndexRotationPeriod. 
            <para>
            The Elasticsearch index rotation period. Index rotation appends a timestamp to <code>IndexName</code>
            to facilitate the expiration of old data. For more information, see <a href="https://docs.aws.amazon.com/firehose/latest/dev/basic-deliver.html#es-index-rotation">Index
            Rotation for the Amazon ES Destination</a>. Default value is <code>OneDay</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchDestinationUpdate.ProcessingConfiguration">
            <summary>
            Gets and sets the property ProcessingConfiguration. 
            <para>
            The data processing configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchDestinationUpdate.RetryOptions">
            <summary>
            Gets and sets the property RetryOptions. 
            <para>
            The retry behavior in case Kinesis Data Firehose is unable to deliver documents to
            Amazon ES. The default value is 300 (5 minutes).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchDestinationUpdate.RoleARN">
            <summary>
            Gets and sets the property RoleARN. 
            <para>
            The Amazon Resource Name (ARN) of the IAM role to be assumed by Kinesis Data Firehose
            for calling the Amazon ES Configuration API and for indexing documents. For more information,
            see <a href="https://docs.aws.amazon.com/firehose/latest/dev/controlling-access.html#using-iam-s3">Grant
            Kinesis Data Firehose Access to an Amazon S3 Destination</a> and <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs) and AWS Service Namespaces</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchDestinationUpdate.S3Update">
            <summary>
            Gets and sets the property S3Update. 
            <para>
            The Amazon S3 destination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchDestinationUpdate.TypeName">
            <summary>
            Gets and sets the property TypeName. 
            <para>
            The Elasticsearch type name. For Elasticsearch 6.x, there can be only one type per
            index. If you try to specify a new type for an existing index that already has another
            type, Kinesis Data Firehose returns an error during runtime.
            </para>
             
            <para>
            If you upgrade Elasticsearch from 6.x to 7.x and don’t update your delivery stream,
            Kinesis Data Firehose still delivers data to Elasticsearch with the old index name
            and type name. If you want to update your delivery stream with a new index name, provide
            an empty string for <code>TypeName</code>. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.ElasticsearchRetryOptions">
            <summary>
            Configures retry behavior in case Kinesis Data Firehose is unable to deliver documents
            to Amazon ES.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchRetryOptions.DurationInSeconds">
            <summary>
            Gets and sets the property DurationInSeconds. 
            <para>
            After an initial failure to deliver to Amazon ES, the total amount of time during
            which Kinesis Data Firehose retries delivery (including the first attempt). After
            this time has elapsed, the failed documents are written to Amazon S3. Default value
            is 300 seconds (5 minutes). A value of 0 (zero) results in no retries.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.EncryptionConfiguration">
            <summary>
            Describes the encryption for a destination in Amazon S3.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.EncryptionConfiguration.KMSEncryptionConfig">
            <summary>
            Gets and sets the property KMSEncryptionConfig. 
            <para>
            The encryption key.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.EncryptionConfiguration.NoEncryptionConfig">
            <summary>
            Gets and sets the property NoEncryptionConfig. 
            <para>
            Specifically override existing encryption information to ensure that no encryption
            is used.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.ExtendedS3DestinationConfiguration">
            <summary>
            Describes the configuration of a destination in Amazon S3.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ExtendedS3DestinationConfiguration.BucketARN">
            <summary>
            Gets and sets the property BucketARN. 
            <para>
            The ARN of the S3 bucket. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs) and AWS Service Namespaces</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ExtendedS3DestinationConfiguration.BufferingHints">
            <summary>
            Gets and sets the property BufferingHints. 
            <para>
            The buffering option.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ExtendedS3DestinationConfiguration.CloudWatchLoggingOptions">
            <summary>
            Gets and sets the property CloudWatchLoggingOptions. 
            <para>
            The Amazon CloudWatch logging options for your delivery stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ExtendedS3DestinationConfiguration.CompressionFormat">
            <summary>
            Gets and sets the property CompressionFormat. 
            <para>
            The compression format. If no value is specified, the default is UNCOMPRESSED.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ExtendedS3DestinationConfiguration.DataFormatConversionConfiguration">
            <summary>
            Gets and sets the property DataFormatConversionConfiguration. 
            <para>
            The serializer, deserializer, and schema for converting data from the JSON format
            to the Parquet or ORC format before writing it to Amazon S3.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ExtendedS3DestinationConfiguration.DynamicPartitioningConfiguration">
            <summary>
            Gets and sets the property DynamicPartitioningConfiguration. 
            <para>
            The configuration of the dynamic partitioning mechanism that creates smaller data
            sets from the streaming data by partitioning it based on partition keys. Currently,
            dynamic partitioning is only supported for Amazon S3 destinations. For more information,
            see <a href="https://docs.aws.amazon.com/firehose/latest/dev/dynamic-partitioning.html">https://docs.aws.amazon.com/firehose/latest/dev/dynamic-partitioning.html</a>
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ExtendedS3DestinationConfiguration.EncryptionConfiguration">
            <summary>
            Gets and sets the property EncryptionConfiguration. 
            <para>
            The encryption configuration. If no value is specified, the default is no encryption.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ExtendedS3DestinationConfiguration.ErrorOutputPrefix">
            <summary>
            Gets and sets the property ErrorOutputPrefix. 
            <para>
            A prefix that Kinesis Data Firehose evaluates and adds to failed records before writing
            them to S3. This prefix appears immediately following the bucket name. For information
            about how to specify this prefix, see <a href="https://docs.aws.amazon.com/firehose/latest/dev/s3-prefixes.html">Custom
            Prefixes for Amazon S3 Objects</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ExtendedS3DestinationConfiguration.Prefix">
            <summary>
            Gets and sets the property Prefix. 
            <para>
            The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered Amazon
            S3 files. You can also specify a custom prefix, as described in <a href="https://docs.aws.amazon.com/firehose/latest/dev/s3-prefixes.html">Custom
            Prefixes for Amazon S3 Objects</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ExtendedS3DestinationConfiguration.ProcessingConfiguration">
            <summary>
            Gets and sets the property ProcessingConfiguration. 
            <para>
            The data processing configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ExtendedS3DestinationConfiguration.RoleARN">
            <summary>
            Gets and sets the property RoleARN. 
            <para>
            The Amazon Resource Name (ARN) of the AWS credentials. For more information, see <a
            href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs) and AWS Service Namespaces</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ExtendedS3DestinationConfiguration.S3BackupConfiguration">
            <summary>
            Gets and sets the property S3BackupConfiguration. 
            <para>
            The configuration for backup in Amazon S3.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ExtendedS3DestinationConfiguration.S3BackupMode">
            <summary>
            Gets and sets the property S3BackupMode. 
            <para>
            The Amazon S3 backup mode. After you create a delivery stream, you can update it to
            enable Amazon S3 backup if it is disabled. If backup is enabled, you can't update
            the delivery stream to disable it. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.ExtendedS3DestinationDescription">
            <summary>
            Describes a destination in Amazon S3.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ExtendedS3DestinationDescription.BucketARN">
            <summary>
            Gets and sets the property BucketARN. 
            <para>
            The ARN of the S3 bucket. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs) and AWS Service Namespaces</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ExtendedS3DestinationDescription.BufferingHints">
            <summary>
            Gets and sets the property BufferingHints. 
            <para>
            The buffering option.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ExtendedS3DestinationDescription.CloudWatchLoggingOptions">
            <summary>
            Gets and sets the property CloudWatchLoggingOptions. 
            <para>
            The Amazon CloudWatch logging options for your delivery stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ExtendedS3DestinationDescription.CompressionFormat">
            <summary>
            Gets and sets the property CompressionFormat. 
            <para>
            The compression format. If no value is specified, the default is <code>UNCOMPRESSED</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ExtendedS3DestinationDescription.DataFormatConversionConfiguration">
            <summary>
            Gets and sets the property DataFormatConversionConfiguration. 
            <para>
            The serializer, deserializer, and schema for converting data from the JSON format
            to the Parquet or ORC format before writing it to Amazon S3.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ExtendedS3DestinationDescription.DynamicPartitioningConfiguration">
            <summary>
            Gets and sets the property DynamicPartitioningConfiguration. 
            <para>
            The configuration of the dynamic partitioning mechanism that creates smaller data
            sets from the streaming data by partitioning it based on partition keys. Currently,
            dynamic partitioning is only supported for Amazon S3 destinations. For more information,
            see <a href="https://docs.aws.amazon.com/firehose/latest/dev/dynamic-partitioning.html">https://docs.aws.amazon.com/firehose/latest/dev/dynamic-partitioning.html</a>
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ExtendedS3DestinationDescription.EncryptionConfiguration">
            <summary>
            Gets and sets the property EncryptionConfiguration. 
            <para>
            The encryption configuration. If no value is specified, the default is no encryption.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ExtendedS3DestinationDescription.ErrorOutputPrefix">
            <summary>
            Gets and sets the property ErrorOutputPrefix. 
            <para>
            A prefix that Kinesis Data Firehose evaluates and adds to failed records before writing
            them to S3. This prefix appears immediately following the bucket name. For information
            about how to specify this prefix, see <a href="https://docs.aws.amazon.com/firehose/latest/dev/s3-prefixes.html">Custom
            Prefixes for Amazon S3 Objects</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ExtendedS3DestinationDescription.Prefix">
            <summary>
            Gets and sets the property Prefix. 
            <para>
            The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered Amazon
            S3 files. You can also specify a custom prefix, as described in <a href="https://docs.aws.amazon.com/firehose/latest/dev/s3-prefixes.html">Custom
            Prefixes for Amazon S3 Objects</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ExtendedS3DestinationDescription.ProcessingConfiguration">
            <summary>
            Gets and sets the property ProcessingConfiguration. 
            <para>
            The data processing configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ExtendedS3DestinationDescription.RoleARN">
            <summary>
            Gets and sets the property RoleARN. 
            <para>
            The Amazon Resource Name (ARN) of the AWS credentials. For more information, see <a
            href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs) and AWS Service Namespaces</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ExtendedS3DestinationDescription.S3BackupDescription">
            <summary>
            Gets and sets the property S3BackupDescription. 
            <para>
            The configuration for backup in Amazon S3.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ExtendedS3DestinationDescription.S3BackupMode">
            <summary>
            Gets and sets the property S3BackupMode. 
            <para>
            The Amazon S3 backup mode.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.ExtendedS3DestinationUpdate">
            <summary>
            Describes an update for a destination in Amazon S3.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ExtendedS3DestinationUpdate.BucketARN">
            <summary>
            Gets and sets the property BucketARN. 
            <para>
            The ARN of the S3 bucket. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs) and AWS Service Namespaces</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ExtendedS3DestinationUpdate.BufferingHints">
            <summary>
            Gets and sets the property BufferingHints. 
            <para>
            The buffering option.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ExtendedS3DestinationUpdate.CloudWatchLoggingOptions">
            <summary>
            Gets and sets the property CloudWatchLoggingOptions. 
            <para>
            The Amazon CloudWatch logging options for your delivery stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ExtendedS3DestinationUpdate.CompressionFormat">
            <summary>
            Gets and sets the property CompressionFormat. 
            <para>
            The compression format. If no value is specified, the default is <code>UNCOMPRESSED</code>.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ExtendedS3DestinationUpdate.DataFormatConversionConfiguration">
            <summary>
            Gets and sets the property DataFormatConversionConfiguration. 
            <para>
            The serializer, deserializer, and schema for converting data from the JSON format
            to the Parquet or ORC format before writing it to Amazon S3.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ExtendedS3DestinationUpdate.DynamicPartitioningConfiguration">
            <summary>
            Gets and sets the property DynamicPartitioningConfiguration. 
            <para>
            The configuration of the dynamic partitioning mechanism that creates smaller data
            sets from the streaming data by partitioning it based on partition keys. Currently,
            dynamic partitioning is only supported for Amazon S3 destinations. For more information,
            see <a href="https://docs.aws.amazon.com/firehose/latest/dev/dynamic-partitioning.html">https://docs.aws.amazon.com/firehose/latest/dev/dynamic-partitioning.html</a>
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ExtendedS3DestinationUpdate.EncryptionConfiguration">
            <summary>
            Gets and sets the property EncryptionConfiguration. 
            <para>
            The encryption configuration. If no value is specified, the default is no encryption.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ExtendedS3DestinationUpdate.ErrorOutputPrefix">
            <summary>
            Gets and sets the property ErrorOutputPrefix. 
            <para>
            A prefix that Kinesis Data Firehose evaluates and adds to failed records before writing
            them to S3. This prefix appears immediately following the bucket name. For information
            about how to specify this prefix, see <a href="https://docs.aws.amazon.com/firehose/latest/dev/s3-prefixes.html">Custom
            Prefixes for Amazon S3 Objects</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ExtendedS3DestinationUpdate.Prefix">
            <summary>
            Gets and sets the property Prefix. 
            <para>
            The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered Amazon
            S3 files. You can also specify a custom prefix, as described in <a href="https://docs.aws.amazon.com/firehose/latest/dev/s3-prefixes.html">Custom
            Prefixes for Amazon S3 Objects</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ExtendedS3DestinationUpdate.ProcessingConfiguration">
            <summary>
            Gets and sets the property ProcessingConfiguration. 
            <para>
            The data processing configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ExtendedS3DestinationUpdate.RoleARN">
            <summary>
            Gets and sets the property RoleARN. 
            <para>
            The Amazon Resource Name (ARN) of the AWS credentials. For more information, see <a
            href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs) and AWS Service Namespaces</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ExtendedS3DestinationUpdate.S3BackupMode">
            <summary>
            Gets and sets the property S3BackupMode. 
            <para>
            You can update a delivery stream to enable Amazon S3 backup if it is disabled. If
            backup is enabled, you can't update the delivery stream to disable it. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ExtendedS3DestinationUpdate.S3BackupUpdate">
            <summary>
            Gets and sets the property S3BackupUpdate. 
            <para>
            The Amazon S3 destination for backup.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.FailureDescription">
            <summary>
            Provides details in case one of the following operations fails due to an error related
            to KMS: <a>CreateDeliveryStream</a>, <a>DeleteDeliveryStream</a>, <a>StartDeliveryStreamEncryption</a>,
            <a>StopDeliveryStreamEncryption</a>.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.FailureDescription.Details">
            <summary>
            Gets and sets the property Details. 
            <para>
            A message providing details about the error that caused the failure.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.FailureDescription.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of error that caused the failure.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.HiveJsonSerDe">
            <summary>
            The native Hive / HCatalog JsonSerDe. Used by Kinesis Data Firehose for deserializing
            data, which means converting it from the JSON format in preparation for serializing
            it to the Parquet or ORC format. This is one of two deserializers you can choose,
            depending on which one offers the functionality you need. The other option is the
            OpenX SerDe.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.HiveJsonSerDe.TimestampFormats">
            <summary>
            Gets and sets the property TimestampFormats. 
            <para>
            Indicates how you want Kinesis Data Firehose to parse the date and timestamps that
            may be present in your input data JSON. To specify these format strings, follow the
            pattern syntax of JodaTime's DateTimeFormat format strings. For more information,
            see <a href="https://www.joda.org/joda-time/apidocs/org/joda/time/format/DateTimeFormat.html">Class
            DateTimeFormat</a>. You can also use the special value <code>millis</code> to parse
            timestamps in epoch milliseconds. If you don't specify a format, Kinesis Data Firehose
            uses <code>java.sql.Timestamp::valueOf</code> by default.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.HttpEndpointBufferingHints">
            <summary>
            Describes the buffering options that can be applied before data is delivered to the
            HTTP endpoint destination. Kinesis Data Firehose treats these options as hints, and
            it might choose to use more optimal values. The <code>SizeInMBs</code> and <code>IntervalInSeconds</code>
            parameters are optional. However, if specify a value for one of them, you must also
            provide a value for the other.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.HttpEndpointBufferingHints.IntervalInSeconds">
            <summary>
            Gets and sets the property IntervalInSeconds. 
            <para>
            Buffer incoming data for the specified period of time, in seconds, before delivering
            it to the destination. The default value is 300 (5 minutes). 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.HttpEndpointBufferingHints.SizeInMBs">
            <summary>
            Gets and sets the property SizeInMBs. 
            <para>
            Buffer incoming data to the specified size, in MBs, before delivering it to the destination.
            The default value is 5. 
            </para>
             
            <para>
            We recommend setting this parameter to a value greater than the amount of data you
            typically ingest into the delivery stream in 10 seconds. For example, if you typically
            ingest data at 1 MB/sec, the value should be 10 MB or higher. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.HttpEndpointCommonAttribute">
            <summary>
            Describes the metadata that's delivered to the specified HTTP endpoint destination.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.HttpEndpointCommonAttribute.AttributeName">
            <summary>
            Gets and sets the property AttributeName. 
            <para>
            The name of the HTTP endpoint common attribute.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.HttpEndpointCommonAttribute.AttributeValue">
            <summary>
            Gets and sets the property AttributeValue. 
            <para>
            The value of the HTTP endpoint common attribute.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.HttpEndpointConfiguration">
            <summary>
            Describes the configuration of the HTTP endpoint to which Kinesis Firehose delivers
            data.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.HttpEndpointConfiguration.AccessKey">
            <summary>
            Gets and sets the property AccessKey. 
            <para>
            The access key required for Kinesis Firehose to authenticate with the HTTP endpoint
            selected as the destination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.HttpEndpointConfiguration.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the HTTP endpoint selected as the destination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.HttpEndpointConfiguration.Url">
            <summary>
            Gets and sets the property Url. 
            <para>
            The URL of the HTTP endpoint selected as the destination.
            </para>
             <important> 
            <para>
            If you choose an HTTP endpoint as your destination, review and follow the instructions
            in the <a href="https://docs.aws.amazon.com/firehose/latest/dev/httpdeliveryrequestresponse.html">Appendix
            - HTTP Endpoint Delivery Request and Response Specifications</a>.
            </para>
             </important>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.HttpEndpointDescription">
            <summary>
            Describes the HTTP endpoint selected as the destination.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.HttpEndpointDescription.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the HTTP endpoint selected as the destination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.HttpEndpointDescription.Url">
            <summary>
            Gets and sets the property Url. 
            <para>
            The URL of the HTTP endpoint selected as the destination.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.HttpEndpointDestinationConfiguration">
            <summary>
            Describes the configuration of the HTTP endpoint destination.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.HttpEndpointDestinationConfiguration.BufferingHints">
            <summary>
            Gets and sets the property BufferingHints. 
            <para>
            The buffering options that can be used before data is delivered to the specified destination.
            Kinesis Data Firehose treats these options as hints, and it might choose to use more
            optimal values. The <code>SizeInMBs</code> and <code>IntervalInSeconds</code> parameters
            are optional. However, if you specify a value for one of them, you must also provide
            a value for the other. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.HttpEndpointDestinationConfiguration.CloudWatchLoggingOptions">
            <summary>
            Gets and sets the property CloudWatchLoggingOptions.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.HttpEndpointDestinationConfiguration.EndpointConfiguration">
            <summary>
            Gets and sets the property EndpointConfiguration. 
            <para>
            The configuration of the HTTP endpoint selected as the destination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.HttpEndpointDestinationConfiguration.ProcessingConfiguration">
            <summary>
            Gets and sets the property ProcessingConfiguration.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.HttpEndpointDestinationConfiguration.RequestConfiguration">
            <summary>
            Gets and sets the property RequestConfiguration. 
            <para>
            The configuration of the requeste sent to the HTTP endpoint specified as the destination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.HttpEndpointDestinationConfiguration.RetryOptions">
            <summary>
            Gets and sets the property RetryOptions. 
            <para>
            Describes the retry behavior in case Kinesis Data Firehose is unable to deliver data
            to the specified HTTP endpoint destination, or if it doesn't receive a valid acknowledgment
            of receipt from the specified HTTP endpoint destination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.HttpEndpointDestinationConfiguration.RoleARN">
            <summary>
            Gets and sets the property RoleARN. 
            <para>
            Kinesis Data Firehose uses this IAM role for all the permissions that the delivery
            stream needs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.HttpEndpointDestinationConfiguration.S3BackupMode">
            <summary>
            Gets and sets the property S3BackupMode. 
            <para>
            Describes the S3 bucket backup options for the data that Kinesis Data Firehose delivers
            to the HTTP endpoint destination. You can back up all documents (<code>AllData</code>)
            or only the documents that Kinesis Data Firehose could not deliver to the specified
            HTTP endpoint destination (<code>FailedDataOnly</code>).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.HttpEndpointDestinationConfiguration.S3Configuration">
            <summary>
            Gets and sets the property S3Configuration.
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.HttpEndpointDestinationDescription">
            <summary>
            Describes the HTTP endpoint destination.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.HttpEndpointDestinationDescription.BufferingHints">
            <summary>
            Gets and sets the property BufferingHints. 
            <para>
            Describes buffering options that can be applied to the data before it is delivered
            to the HTTPS endpoint destination. Kinesis Data Firehose teats these options as hints,
            and it might choose to use more optimal values. The <code>SizeInMBs</code> and <code>IntervalInSeconds</code>
            parameters are optional. However, if specify a value for one of them, you must also
            provide a value for the other. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.HttpEndpointDestinationDescription.CloudWatchLoggingOptions">
            <summary>
            Gets and sets the property CloudWatchLoggingOptions.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.HttpEndpointDestinationDescription.EndpointConfiguration">
            <summary>
            Gets and sets the property EndpointConfiguration. 
            <para>
            The configuration of the specified HTTP endpoint destination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.HttpEndpointDestinationDescription.ProcessingConfiguration">
            <summary>
            Gets and sets the property ProcessingConfiguration.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.HttpEndpointDestinationDescription.RequestConfiguration">
            <summary>
            Gets and sets the property RequestConfiguration. 
            <para>
            The configuration of request sent to the HTTP endpoint specified as the destination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.HttpEndpointDestinationDescription.RetryOptions">
            <summary>
            Gets and sets the property RetryOptions. 
            <para>
            Describes the retry behavior in case Kinesis Data Firehose is unable to deliver data
            to the specified HTTP endpoint destination, or if it doesn't receive a valid acknowledgment
            of receipt from the specified HTTP endpoint destination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.HttpEndpointDestinationDescription.RoleARN">
            <summary>
            Gets and sets the property RoleARN. 
            <para>
            Kinesis Data Firehose uses this IAM role for all the permissions that the delivery
            stream needs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.HttpEndpointDestinationDescription.S3BackupMode">
            <summary>
            Gets and sets the property S3BackupMode. 
            <para>
            Describes the S3 bucket backup options for the data that Kinesis Firehose delivers
            to the HTTP endpoint destination. You can back up all documents (<code>AllData</code>)
            or only the documents that Kinesis Data Firehose could not deliver to the specified
            HTTP endpoint destination (<code>FailedDataOnly</code>).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.HttpEndpointDestinationDescription.S3DestinationDescription">
            <summary>
            Gets and sets the property S3DestinationDescription.
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.HttpEndpointDestinationUpdate">
            <summary>
            Updates the specified HTTP endpoint destination.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.HttpEndpointDestinationUpdate.BufferingHints">
            <summary>
            Gets and sets the property BufferingHints. 
            <para>
            Describes buffering options that can be applied to the data before it is delivered
            to the HTTPS endpoint destination. Kinesis Data Firehose teats these options as hints,
            and it might choose to use more optimal values. The <code>SizeInMBs</code> and <code>IntervalInSeconds</code>
            parameters are optional. However, if specify a value for one of them, you must also
            provide a value for the other. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.HttpEndpointDestinationUpdate.CloudWatchLoggingOptions">
            <summary>
            Gets and sets the property CloudWatchLoggingOptions.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.HttpEndpointDestinationUpdate.EndpointConfiguration">
            <summary>
            Gets and sets the property EndpointConfiguration. 
            <para>
            Describes the configuration of the HTTP endpoint destination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.HttpEndpointDestinationUpdate.ProcessingConfiguration">
            <summary>
            Gets and sets the property ProcessingConfiguration.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.HttpEndpointDestinationUpdate.RequestConfiguration">
            <summary>
            Gets and sets the property RequestConfiguration. 
            <para>
            The configuration of the request sent to the HTTP endpoint specified as the destination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.HttpEndpointDestinationUpdate.RetryOptions">
            <summary>
            Gets and sets the property RetryOptions. 
            <para>
            Describes the retry behavior in case Kinesis Data Firehose is unable to deliver data
            to the specified HTTP endpoint destination, or if it doesn't receive a valid acknowledgment
            of receipt from the specified HTTP endpoint destination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.HttpEndpointDestinationUpdate.RoleARN">
            <summary>
            Gets and sets the property RoleARN. 
            <para>
            Kinesis Data Firehose uses this IAM role for all the permissions that the delivery
            stream needs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.HttpEndpointDestinationUpdate.S3BackupMode">
            <summary>
            Gets and sets the property S3BackupMode. 
            <para>
            Describes the S3 bucket backup options for the data that Kinesis Firehose delivers
            to the HTTP endpoint destination. You can back up all documents (<code>AllData</code>)
            or only the documents that Kinesis Data Firehose could not deliver to the specified
            HTTP endpoint destination (<code>FailedDataOnly</code>).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.HttpEndpointDestinationUpdate.S3Update">
            <summary>
            Gets and sets the property S3Update.
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.HttpEndpointRequestConfiguration">
            <summary>
            The configuration of the HTTP endpoint request.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.HttpEndpointRequestConfiguration.CommonAttributes">
            <summary>
            Gets and sets the property CommonAttributes. 
            <para>
            Describes the metadata sent to the HTTP endpoint destination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.HttpEndpointRequestConfiguration.ContentEncoding">
            <summary>
            Gets and sets the property ContentEncoding. 
            <para>
            Kinesis Data Firehose uses the content encoding to compress the body of a request
            before sending the request to the destination. For more information, see <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Encoding">Content-Encoding</a>
            in MDN Web Docs, the official Mozilla documentation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.HttpEndpointRetryOptions">
            <summary>
            Describes the retry behavior in case Kinesis Data Firehose is unable to deliver data
            to the specified HTTP endpoint destination, or if it doesn't receive a valid acknowledgment
            of receipt from the specified HTTP endpoint destination.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.HttpEndpointRetryOptions.DurationInSeconds">
            <summary>
            Gets and sets the property DurationInSeconds. 
            <para>
            The total amount of time that Kinesis Data Firehose spends on retries. This duration
            starts after the initial attempt to send data to the custom destination via HTTPS
            endpoint fails. It doesn't include the periods during which Kinesis Data Firehose
            waits for acknowledgment from the specified destination after each attempt. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.InputFormatConfiguration">
            <summary>
            Specifies the deserializer you want to use to convert the format of the input data.
            This parameter is required if <code>Enabled</code> is set to true.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.InputFormatConfiguration.Deserializer">
            <summary>
            Gets and sets the property Deserializer. 
            <para>
            Specifies which deserializer to use. You can choose either the Apache Hive JSON SerDe
            or the OpenX JSON SerDe. If both are non-null, the server rejects the request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.AmazonopensearchserviceBufferingHintsMarshaller">
            <summary>
            AmazonopensearchserviceBufferingHints Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.AmazonopensearchserviceBufferingHintsMarshaller.Marshall(Amazon.KinesisFirehose.Model.AmazonopensearchserviceBufferingHints,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.AmazonopensearchserviceBufferingHintsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.AmazonopensearchserviceBufferingHintsUnmarshaller">
            <summary>
            Response Unmarshaller for AmazonopensearchserviceBufferingHints Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.AmazonopensearchserviceBufferingHintsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisFirehose#Model#AmazonopensearchserviceBufferingHints,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.AmazonopensearchserviceBufferingHintsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.AmazonopensearchserviceBufferingHintsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.AmazonopensearchserviceDestinationConfigurationMarshaller">
            <summary>
            AmazonopensearchserviceDestinationConfiguration Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.AmazonopensearchserviceDestinationConfigurationMarshaller.Marshall(Amazon.KinesisFirehose.Model.AmazonopensearchserviceDestinationConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.AmazonopensearchserviceDestinationConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.AmazonopensearchserviceDestinationDescriptionUnmarshaller">
            <summary>
            Response Unmarshaller for AmazonopensearchserviceDestinationDescription Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.AmazonopensearchserviceDestinationDescriptionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisFirehose#Model#AmazonopensearchserviceDestinationDescription,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.AmazonopensearchserviceDestinationDescriptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.AmazonopensearchserviceDestinationDescriptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.AmazonopensearchserviceDestinationUpdateMarshaller">
            <summary>
            AmazonopensearchserviceDestinationUpdate Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.AmazonopensearchserviceDestinationUpdateMarshaller.Marshall(Amazon.KinesisFirehose.Model.AmazonopensearchserviceDestinationUpdate,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.AmazonopensearchserviceDestinationUpdateMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.AmazonopensearchserviceRetryOptionsMarshaller">
            <summary>
            AmazonopensearchserviceRetryOptions Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.AmazonopensearchserviceRetryOptionsMarshaller.Marshall(Amazon.KinesisFirehose.Model.AmazonopensearchserviceRetryOptions,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.AmazonopensearchserviceRetryOptionsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.AmazonopensearchserviceRetryOptionsUnmarshaller">
            <summary>
            Response Unmarshaller for AmazonopensearchserviceRetryOptions Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.AmazonopensearchserviceRetryOptionsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisFirehose#Model#AmazonopensearchserviceRetryOptions,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.AmazonopensearchserviceRetryOptionsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.AmazonopensearchserviceRetryOptionsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.BufferingHintsMarshaller">
            <summary>
            BufferingHints Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.BufferingHintsMarshaller.Marshall(Amazon.KinesisFirehose.Model.BufferingHints,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.BufferingHintsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.BufferingHintsUnmarshaller">
            <summary>
            Response Unmarshaller for BufferingHints Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.BufferingHintsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisFirehose#Model#BufferingHints,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.BufferingHintsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.BufferingHintsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.CloudWatchLoggingOptionsMarshaller">
            <summary>
            CloudWatchLoggingOptions Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.CloudWatchLoggingOptionsMarshaller.Marshall(Amazon.KinesisFirehose.Model.CloudWatchLoggingOptions,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.CloudWatchLoggingOptionsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.CloudWatchLoggingOptionsUnmarshaller">
            <summary>
            Response Unmarshaller for CloudWatchLoggingOptions Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.CloudWatchLoggingOptionsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisFirehose#Model#CloudWatchLoggingOptions,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.CloudWatchLoggingOptionsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.CloudWatchLoggingOptionsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ConcurrentModificationExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ConcurrentModificationException Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ConcurrentModificationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ConcurrentModificationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ConcurrentModificationExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.CopyCommandMarshaller">
            <summary>
            CopyCommand Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.CopyCommandMarshaller.Marshall(Amazon.KinesisFirehose.Model.CopyCommand,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.CopyCommandMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.CopyCommandUnmarshaller">
            <summary>
            Response Unmarshaller for CopyCommand Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.CopyCommandUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisFirehose#Model#CopyCommand,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.CopyCommandUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.CopyCommandUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.CreateDeliveryStreamRequestMarshaller">
            <summary>
            CreateDeliveryStream Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.CreateDeliveryStreamRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.CreateDeliveryStreamRequestMarshaller.Marshall(Amazon.KinesisFirehose.Model.CreateDeliveryStreamRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.CreateDeliveryStreamRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.CreateDeliveryStreamResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateDeliveryStream operation
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.CreateDeliveryStreamResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.CreateDeliveryStreamResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.CreateDeliveryStreamResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DataFormatConversionConfigurationMarshaller">
            <summary>
            DataFormatConversionConfiguration Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DataFormatConversionConfigurationMarshaller.Marshall(Amazon.KinesisFirehose.Model.DataFormatConversionConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DataFormatConversionConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DataFormatConversionConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for DataFormatConversionConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DataFormatConversionConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisFirehose#Model#DataFormatConversionConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DataFormatConversionConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DataFormatConversionConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DeleteDeliveryStreamRequestMarshaller">
            <summary>
            DeleteDeliveryStream Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DeleteDeliveryStreamRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DeleteDeliveryStreamRequestMarshaller.Marshall(Amazon.KinesisFirehose.Model.DeleteDeliveryStreamRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DeleteDeliveryStreamRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DeleteDeliveryStreamResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteDeliveryStream operation
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DeleteDeliveryStreamResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DeleteDeliveryStreamResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DeleteDeliveryStreamResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DeliveryStreamDescriptionUnmarshaller">
            <summary>
            Response Unmarshaller for DeliveryStreamDescription Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DeliveryStreamDescriptionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisFirehose#Model#DeliveryStreamDescription,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DeliveryStreamDescriptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DeliveryStreamDescriptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DeliveryStreamEncryptionConfigurationInputMarshaller">
            <summary>
            DeliveryStreamEncryptionConfigurationInput Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DeliveryStreamEncryptionConfigurationInputMarshaller.Marshall(Amazon.KinesisFirehose.Model.DeliveryStreamEncryptionConfigurationInput,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DeliveryStreamEncryptionConfigurationInputMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DeliveryStreamEncryptionConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for DeliveryStreamEncryptionConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DeliveryStreamEncryptionConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisFirehose#Model#DeliveryStreamEncryptionConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DeliveryStreamEncryptionConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DeliveryStreamEncryptionConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DescribeDeliveryStreamRequestMarshaller">
            <summary>
            DescribeDeliveryStream Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DescribeDeliveryStreamRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DescribeDeliveryStreamRequestMarshaller.Marshall(Amazon.KinesisFirehose.Model.DescribeDeliveryStreamRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DescribeDeliveryStreamRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DescribeDeliveryStreamResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeDeliveryStream operation
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DescribeDeliveryStreamResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DescribeDeliveryStreamResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DescribeDeliveryStreamResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DeserializerMarshaller">
            <summary>
            Deserializer Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DeserializerMarshaller.Marshall(Amazon.KinesisFirehose.Model.Deserializer,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DeserializerMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DeserializerUnmarshaller">
            <summary>
            Response Unmarshaller for Deserializer Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DeserializerUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisFirehose#Model#Deserializer,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DeserializerUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DeserializerUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DestinationDescriptionUnmarshaller">
            <summary>
            Response Unmarshaller for DestinationDescription Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DestinationDescriptionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisFirehose#Model#DestinationDescription,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DestinationDescriptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DestinationDescriptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DynamicPartitioningConfigurationMarshaller">
            <summary>
            DynamicPartitioningConfiguration Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DynamicPartitioningConfigurationMarshaller.Marshall(Amazon.KinesisFirehose.Model.DynamicPartitioningConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DynamicPartitioningConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DynamicPartitioningConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for DynamicPartitioningConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DynamicPartitioningConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisFirehose#Model#DynamicPartitioningConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DynamicPartitioningConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DynamicPartitioningConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ElasticsearchBufferingHintsMarshaller">
            <summary>
            ElasticsearchBufferingHints Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ElasticsearchBufferingHintsMarshaller.Marshall(Amazon.KinesisFirehose.Model.ElasticsearchBufferingHints,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ElasticsearchBufferingHintsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ElasticsearchBufferingHintsUnmarshaller">
            <summary>
            Response Unmarshaller for ElasticsearchBufferingHints Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ElasticsearchBufferingHintsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisFirehose#Model#ElasticsearchBufferingHints,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ElasticsearchBufferingHintsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ElasticsearchBufferingHintsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ElasticsearchDestinationConfigurationMarshaller">
            <summary>
            ElasticsearchDestinationConfiguration Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ElasticsearchDestinationConfigurationMarshaller.Marshall(Amazon.KinesisFirehose.Model.ElasticsearchDestinationConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ElasticsearchDestinationConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ElasticsearchDestinationDescriptionUnmarshaller">
            <summary>
            Response Unmarshaller for ElasticsearchDestinationDescription Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ElasticsearchDestinationDescriptionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisFirehose#Model#ElasticsearchDestinationDescription,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ElasticsearchDestinationDescriptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ElasticsearchDestinationDescriptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ElasticsearchDestinationUpdateMarshaller">
            <summary>
            ElasticsearchDestinationUpdate Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ElasticsearchDestinationUpdateMarshaller.Marshall(Amazon.KinesisFirehose.Model.ElasticsearchDestinationUpdate,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ElasticsearchDestinationUpdateMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ElasticsearchRetryOptionsMarshaller">
            <summary>
            ElasticsearchRetryOptions Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ElasticsearchRetryOptionsMarshaller.Marshall(Amazon.KinesisFirehose.Model.ElasticsearchRetryOptions,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ElasticsearchRetryOptionsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ElasticsearchRetryOptionsUnmarshaller">
            <summary>
            Response Unmarshaller for ElasticsearchRetryOptions Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ElasticsearchRetryOptionsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisFirehose#Model#ElasticsearchRetryOptions,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ElasticsearchRetryOptionsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ElasticsearchRetryOptionsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.EncryptionConfigurationMarshaller">
            <summary>
            EncryptionConfiguration Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.EncryptionConfigurationMarshaller.Marshall(Amazon.KinesisFirehose.Model.EncryptionConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.EncryptionConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.EncryptionConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for EncryptionConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.EncryptionConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisFirehose#Model#EncryptionConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.EncryptionConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.EncryptionConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ExtendedS3DestinationConfigurationMarshaller">
            <summary>
            ExtendedS3DestinationConfiguration Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ExtendedS3DestinationConfigurationMarshaller.Marshall(Amazon.KinesisFirehose.Model.ExtendedS3DestinationConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ExtendedS3DestinationConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ExtendedS3DestinationDescriptionUnmarshaller">
            <summary>
            Response Unmarshaller for ExtendedS3DestinationDescription Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ExtendedS3DestinationDescriptionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisFirehose#Model#ExtendedS3DestinationDescription,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ExtendedS3DestinationDescriptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ExtendedS3DestinationDescriptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ExtendedS3DestinationUpdateMarshaller">
            <summary>
            ExtendedS3DestinationUpdate Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ExtendedS3DestinationUpdateMarshaller.Marshall(Amazon.KinesisFirehose.Model.ExtendedS3DestinationUpdate,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ExtendedS3DestinationUpdateMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.FailureDescriptionUnmarshaller">
            <summary>
            Response Unmarshaller for FailureDescription Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.FailureDescriptionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisFirehose#Model#FailureDescription,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.FailureDescriptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.FailureDescriptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.HiveJsonSerDeMarshaller">
            <summary>
            HiveJsonSerDe Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.HiveJsonSerDeMarshaller.Marshall(Amazon.KinesisFirehose.Model.HiveJsonSerDe,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.HiveJsonSerDeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.HiveJsonSerDeUnmarshaller">
            <summary>
            Response Unmarshaller for HiveJsonSerDe Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.HiveJsonSerDeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisFirehose#Model#HiveJsonSerDe,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.HiveJsonSerDeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.HiveJsonSerDeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.HttpEndpointBufferingHintsMarshaller">
            <summary>
            HttpEndpointBufferingHints Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.HttpEndpointBufferingHintsMarshaller.Marshall(Amazon.KinesisFirehose.Model.HttpEndpointBufferingHints,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.HttpEndpointBufferingHintsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.HttpEndpointBufferingHintsUnmarshaller">
            <summary>
            Response Unmarshaller for HttpEndpointBufferingHints Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.HttpEndpointBufferingHintsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisFirehose#Model#HttpEndpointBufferingHints,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.HttpEndpointBufferingHintsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.HttpEndpointBufferingHintsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.HttpEndpointCommonAttributeMarshaller">
            <summary>
            HttpEndpointCommonAttribute Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.HttpEndpointCommonAttributeMarshaller.Marshall(Amazon.KinesisFirehose.Model.HttpEndpointCommonAttribute,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.HttpEndpointCommonAttributeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.HttpEndpointCommonAttributeUnmarshaller">
            <summary>
            Response Unmarshaller for HttpEndpointCommonAttribute Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.HttpEndpointCommonAttributeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisFirehose#Model#HttpEndpointCommonAttribute,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.HttpEndpointCommonAttributeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.HttpEndpointCommonAttributeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.HttpEndpointConfigurationMarshaller">
            <summary>
            HttpEndpointConfiguration Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.HttpEndpointConfigurationMarshaller.Marshall(Amazon.KinesisFirehose.Model.HttpEndpointConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.HttpEndpointConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.HttpEndpointDescriptionUnmarshaller">
            <summary>
            Response Unmarshaller for HttpEndpointDescription Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.HttpEndpointDescriptionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisFirehose#Model#HttpEndpointDescription,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.HttpEndpointDescriptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.HttpEndpointDescriptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.HttpEndpointDestinationConfigurationMarshaller">
            <summary>
            HttpEndpointDestinationConfiguration Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.HttpEndpointDestinationConfigurationMarshaller.Marshall(Amazon.KinesisFirehose.Model.HttpEndpointDestinationConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.HttpEndpointDestinationConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.HttpEndpointDestinationDescriptionUnmarshaller">
            <summary>
            Response Unmarshaller for HttpEndpointDestinationDescription Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.HttpEndpointDestinationDescriptionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisFirehose#Model#HttpEndpointDestinationDescription,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.HttpEndpointDestinationDescriptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.HttpEndpointDestinationDescriptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.HttpEndpointDestinationUpdateMarshaller">
            <summary>
            HttpEndpointDestinationUpdate Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.HttpEndpointDestinationUpdateMarshaller.Marshall(Amazon.KinesisFirehose.Model.HttpEndpointDestinationUpdate,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.HttpEndpointDestinationUpdateMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.HttpEndpointRequestConfigurationMarshaller">
            <summary>
            HttpEndpointRequestConfiguration Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.HttpEndpointRequestConfigurationMarshaller.Marshall(Amazon.KinesisFirehose.Model.HttpEndpointRequestConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.HttpEndpointRequestConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.HttpEndpointRequestConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for HttpEndpointRequestConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.HttpEndpointRequestConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisFirehose#Model#HttpEndpointRequestConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.HttpEndpointRequestConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.HttpEndpointRequestConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.HttpEndpointRetryOptionsMarshaller">
            <summary>
            HttpEndpointRetryOptions Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.HttpEndpointRetryOptionsMarshaller.Marshall(Amazon.KinesisFirehose.Model.HttpEndpointRetryOptions,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.HttpEndpointRetryOptionsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.HttpEndpointRetryOptionsUnmarshaller">
            <summary>
            Response Unmarshaller for HttpEndpointRetryOptions Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.HttpEndpointRetryOptionsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisFirehose#Model#HttpEndpointRetryOptions,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.HttpEndpointRetryOptionsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.HttpEndpointRetryOptionsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.InputFormatConfigurationMarshaller">
            <summary>
            InputFormatConfiguration Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.InputFormatConfigurationMarshaller.Marshall(Amazon.KinesisFirehose.Model.InputFormatConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.InputFormatConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.InputFormatConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for InputFormatConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.InputFormatConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisFirehose#Model#InputFormatConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.InputFormatConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.InputFormatConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.InvalidArgumentExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidArgumentException Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.InvalidArgumentExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.InvalidArgumentExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.InvalidArgumentExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.InvalidKMSResourceExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidKMSResourceException Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.InvalidKMSResourceExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.InvalidKMSResourceExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.InvalidKMSResourceExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.KinesisStreamSourceConfigurationMarshaller">
            <summary>
            KinesisStreamSourceConfiguration Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.KinesisStreamSourceConfigurationMarshaller.Marshall(Amazon.KinesisFirehose.Model.KinesisStreamSourceConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.KinesisStreamSourceConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.KinesisStreamSourceDescriptionUnmarshaller">
            <summary>
            Response Unmarshaller for KinesisStreamSourceDescription Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.KinesisStreamSourceDescriptionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisFirehose#Model#KinesisStreamSourceDescription,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.KinesisStreamSourceDescriptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.KinesisStreamSourceDescriptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.KMSEncryptionConfigMarshaller">
            <summary>
            KMSEncryptionConfig Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.KMSEncryptionConfigMarshaller.Marshall(Amazon.KinesisFirehose.Model.KMSEncryptionConfig,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.KMSEncryptionConfigMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.KMSEncryptionConfigUnmarshaller">
            <summary>
            Response Unmarshaller for KMSEncryptionConfig Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.KMSEncryptionConfigUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisFirehose#Model#KMSEncryptionConfig,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.KMSEncryptionConfigUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.KMSEncryptionConfigUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for LimitExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ListDeliveryStreamsRequestMarshaller">
            <summary>
            ListDeliveryStreams Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ListDeliveryStreamsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ListDeliveryStreamsRequestMarshaller.Marshall(Amazon.KinesisFirehose.Model.ListDeliveryStreamsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ListDeliveryStreamsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ListDeliveryStreamsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListDeliveryStreams operation
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ListDeliveryStreamsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ListDeliveryStreamsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ListDeliveryStreamsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ListTagsForDeliveryStreamRequestMarshaller">
            <summary>
            ListTagsForDeliveryStream Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ListTagsForDeliveryStreamRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ListTagsForDeliveryStreamRequestMarshaller.Marshall(Amazon.KinesisFirehose.Model.ListTagsForDeliveryStreamRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ListTagsForDeliveryStreamRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ListTagsForDeliveryStreamResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListTagsForDeliveryStream operation
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ListTagsForDeliveryStreamResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ListTagsForDeliveryStreamResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ListTagsForDeliveryStreamResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.OpenXJsonSerDeMarshaller">
            <summary>
            OpenXJsonSerDe Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.OpenXJsonSerDeMarshaller.Marshall(Amazon.KinesisFirehose.Model.OpenXJsonSerDe,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.OpenXJsonSerDeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.OpenXJsonSerDeUnmarshaller">
            <summary>
            Response Unmarshaller for OpenXJsonSerDe Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.OpenXJsonSerDeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisFirehose#Model#OpenXJsonSerDe,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.OpenXJsonSerDeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.OpenXJsonSerDeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.OrcSerDeMarshaller">
            <summary>
            OrcSerDe Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.OrcSerDeMarshaller.Marshall(Amazon.KinesisFirehose.Model.OrcSerDe,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.OrcSerDeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.OrcSerDeUnmarshaller">
            <summary>
            Response Unmarshaller for OrcSerDe Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.OrcSerDeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisFirehose#Model#OrcSerDe,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.OrcSerDeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.OrcSerDeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.OutputFormatConfigurationMarshaller">
            <summary>
            OutputFormatConfiguration Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.OutputFormatConfigurationMarshaller.Marshall(Amazon.KinesisFirehose.Model.OutputFormatConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.OutputFormatConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.OutputFormatConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for OutputFormatConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.OutputFormatConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisFirehose#Model#OutputFormatConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.OutputFormatConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.OutputFormatConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ParquetSerDeMarshaller">
            <summary>
            ParquetSerDe Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ParquetSerDeMarshaller.Marshall(Amazon.KinesisFirehose.Model.ParquetSerDe,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ParquetSerDeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ParquetSerDeUnmarshaller">
            <summary>
            Response Unmarshaller for ParquetSerDe Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ParquetSerDeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisFirehose#Model#ParquetSerDe,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ParquetSerDeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ParquetSerDeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ProcessingConfigurationMarshaller">
            <summary>
            ProcessingConfiguration Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ProcessingConfigurationMarshaller.Marshall(Amazon.KinesisFirehose.Model.ProcessingConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ProcessingConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ProcessingConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for ProcessingConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ProcessingConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisFirehose#Model#ProcessingConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ProcessingConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ProcessingConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ProcessorMarshaller">
            <summary>
            Processor Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ProcessorMarshaller.Marshall(Amazon.KinesisFirehose.Model.Processor,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ProcessorMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ProcessorParameterMarshaller">
            <summary>
            ProcessorParameter Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ProcessorParameterMarshaller.Marshall(Amazon.KinesisFirehose.Model.ProcessorParameter,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ProcessorParameterMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ProcessorParameterUnmarshaller">
            <summary>
            Response Unmarshaller for ProcessorParameter Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ProcessorParameterUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisFirehose#Model#ProcessorParameter,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ProcessorParameterUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ProcessorParameterUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ProcessorUnmarshaller">
            <summary>
            Response Unmarshaller for Processor Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ProcessorUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisFirehose#Model#Processor,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ProcessorUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ProcessorUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.PutRecordBatchRequestMarshaller">
            <summary>
            PutRecordBatch Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.PutRecordBatchRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.PutRecordBatchRequestMarshaller.Marshall(Amazon.KinesisFirehose.Model.PutRecordBatchRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.PutRecordBatchRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.PutRecordBatchResponseEntryUnmarshaller">
            <summary>
            Response Unmarshaller for PutRecordBatchResponseEntry Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.PutRecordBatchResponseEntryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisFirehose#Model#PutRecordBatchResponseEntry,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.PutRecordBatchResponseEntryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.PutRecordBatchResponseEntryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.PutRecordBatchResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutRecordBatch operation
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.PutRecordBatchResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.PutRecordBatchResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.PutRecordBatchResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.PutRecordRequestMarshaller">
            <summary>
            PutRecord Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.PutRecordRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.PutRecordRequestMarshaller.Marshall(Amazon.KinesisFirehose.Model.PutRecordRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.PutRecordRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.PutRecordResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutRecord operation
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.PutRecordResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.PutRecordResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.PutRecordResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.RecordMarshaller">
            <summary>
            Record Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.RecordMarshaller.Marshall(Amazon.KinesisFirehose.Model.Record,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.RecordMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.RedshiftDestinationConfigurationMarshaller">
            <summary>
            RedshiftDestinationConfiguration Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.RedshiftDestinationConfigurationMarshaller.Marshall(Amazon.KinesisFirehose.Model.RedshiftDestinationConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.RedshiftDestinationConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.RedshiftDestinationDescriptionUnmarshaller">
            <summary>
            Response Unmarshaller for RedshiftDestinationDescription Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.RedshiftDestinationDescriptionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisFirehose#Model#RedshiftDestinationDescription,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.RedshiftDestinationDescriptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.RedshiftDestinationDescriptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.RedshiftDestinationUpdateMarshaller">
            <summary>
            RedshiftDestinationUpdate Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.RedshiftDestinationUpdateMarshaller.Marshall(Amazon.KinesisFirehose.Model.RedshiftDestinationUpdate,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.RedshiftDestinationUpdateMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.RedshiftRetryOptionsMarshaller">
            <summary>
            RedshiftRetryOptions Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.RedshiftRetryOptionsMarshaller.Marshall(Amazon.KinesisFirehose.Model.RedshiftRetryOptions,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.RedshiftRetryOptionsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.RedshiftRetryOptionsUnmarshaller">
            <summary>
            Response Unmarshaller for RedshiftRetryOptions Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.RedshiftRetryOptionsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisFirehose#Model#RedshiftRetryOptions,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.RedshiftRetryOptionsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.RedshiftRetryOptionsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ResourceInUseExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceInUseException Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ResourceInUseExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ResourceInUseExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ResourceInUseExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.RetryOptionsMarshaller">
            <summary>
            RetryOptions Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.RetryOptionsMarshaller.Marshall(Amazon.KinesisFirehose.Model.RetryOptions,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.RetryOptionsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.RetryOptionsUnmarshaller">
            <summary>
            Response Unmarshaller for RetryOptions Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.RetryOptionsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisFirehose#Model#RetryOptions,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.RetryOptionsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.RetryOptionsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.S3DestinationConfigurationMarshaller">
            <summary>
            S3DestinationConfiguration Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.S3DestinationConfigurationMarshaller.Marshall(Amazon.KinesisFirehose.Model.S3DestinationConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.S3DestinationConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.S3DestinationDescriptionUnmarshaller">
            <summary>
            Response Unmarshaller for S3DestinationDescription Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.S3DestinationDescriptionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisFirehose#Model#S3DestinationDescription,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.S3DestinationDescriptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.S3DestinationDescriptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.S3DestinationUpdateMarshaller">
            <summary>
            S3DestinationUpdate Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.S3DestinationUpdateMarshaller.Marshall(Amazon.KinesisFirehose.Model.S3DestinationUpdate,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.S3DestinationUpdateMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.SchemaConfigurationMarshaller">
            <summary>
            SchemaConfiguration Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.SchemaConfigurationMarshaller.Marshall(Amazon.KinesisFirehose.Model.SchemaConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.SchemaConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.SchemaConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for SchemaConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.SchemaConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisFirehose#Model#SchemaConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.SchemaConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.SchemaConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.SerializerMarshaller">
            <summary>
            Serializer Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.SerializerMarshaller.Marshall(Amazon.KinesisFirehose.Model.Serializer,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.SerializerMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.SerializerUnmarshaller">
            <summary>
            Response Unmarshaller for Serializer Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.SerializerUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisFirehose#Model#Serializer,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.SerializerUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.SerializerUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ServiceUnavailableExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ServiceUnavailableException Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ServiceUnavailableExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ServiceUnavailableExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ServiceUnavailableExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.SourceDescriptionUnmarshaller">
            <summary>
            Response Unmarshaller for SourceDescription Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.SourceDescriptionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisFirehose#Model#SourceDescription,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.SourceDescriptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.SourceDescriptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.SplunkDestinationConfigurationMarshaller">
            <summary>
            SplunkDestinationConfiguration Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.SplunkDestinationConfigurationMarshaller.Marshall(Amazon.KinesisFirehose.Model.SplunkDestinationConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.SplunkDestinationConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.SplunkDestinationDescriptionUnmarshaller">
            <summary>
            Response Unmarshaller for SplunkDestinationDescription Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.SplunkDestinationDescriptionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisFirehose#Model#SplunkDestinationDescription,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.SplunkDestinationDescriptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.SplunkDestinationDescriptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.SplunkDestinationUpdateMarshaller">
            <summary>
            SplunkDestinationUpdate Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.SplunkDestinationUpdateMarshaller.Marshall(Amazon.KinesisFirehose.Model.SplunkDestinationUpdate,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.SplunkDestinationUpdateMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.SplunkRetryOptionsMarshaller">
            <summary>
            SplunkRetryOptions Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.SplunkRetryOptionsMarshaller.Marshall(Amazon.KinesisFirehose.Model.SplunkRetryOptions,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.SplunkRetryOptionsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.SplunkRetryOptionsUnmarshaller">
            <summary>
            Response Unmarshaller for SplunkRetryOptions Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.SplunkRetryOptionsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisFirehose#Model#SplunkRetryOptions,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.SplunkRetryOptionsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.SplunkRetryOptionsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.StartDeliveryStreamEncryptionRequestMarshaller">
            <summary>
            StartDeliveryStreamEncryption Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.StartDeliveryStreamEncryptionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.StartDeliveryStreamEncryptionRequestMarshaller.Marshall(Amazon.KinesisFirehose.Model.StartDeliveryStreamEncryptionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.StartDeliveryStreamEncryptionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.StartDeliveryStreamEncryptionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StartDeliveryStreamEncryption operation
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.StartDeliveryStreamEncryptionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.StartDeliveryStreamEncryptionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.StartDeliveryStreamEncryptionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.StopDeliveryStreamEncryptionRequestMarshaller">
            <summary>
            StopDeliveryStreamEncryption Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.StopDeliveryStreamEncryptionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.StopDeliveryStreamEncryptionRequestMarshaller.Marshall(Amazon.KinesisFirehose.Model.StopDeliveryStreamEncryptionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.StopDeliveryStreamEncryptionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.StopDeliveryStreamEncryptionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StopDeliveryStreamEncryption operation
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.StopDeliveryStreamEncryptionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.StopDeliveryStreamEncryptionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.StopDeliveryStreamEncryptionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.TagDeliveryStreamRequestMarshaller">
            <summary>
            TagDeliveryStream Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.TagDeliveryStreamRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.TagDeliveryStreamRequestMarshaller.Marshall(Amazon.KinesisFirehose.Model.TagDeliveryStreamRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.TagDeliveryStreamRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.TagDeliveryStreamResponseUnmarshaller">
            <summary>
            Response Unmarshaller for TagDeliveryStream operation
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.TagDeliveryStreamResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.TagDeliveryStreamResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.TagDeliveryStreamResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.TagMarshaller">
            <summary>
            Tag Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.TagMarshaller.Marshall(Amazon.KinesisFirehose.Model.Tag,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.TagMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.TagUnmarshaller">
            <summary>
            Response Unmarshaller for Tag Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.TagUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisFirehose#Model#Tag,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.TagUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.TagUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.UntagDeliveryStreamRequestMarshaller">
            <summary>
            UntagDeliveryStream Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.UntagDeliveryStreamRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.UntagDeliveryStreamRequestMarshaller.Marshall(Amazon.KinesisFirehose.Model.UntagDeliveryStreamRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.UntagDeliveryStreamRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.UntagDeliveryStreamResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UntagDeliveryStream operation
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.UntagDeliveryStreamResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.UntagDeliveryStreamResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.UntagDeliveryStreamResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.UpdateDestinationRequestMarshaller">
            <summary>
            UpdateDestination Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.UpdateDestinationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.UpdateDestinationRequestMarshaller.Marshall(Amazon.KinesisFirehose.Model.UpdateDestinationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.UpdateDestinationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.UpdateDestinationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateDestination operation
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.UpdateDestinationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.UpdateDestinationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.UpdateDestinationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.VpcConfigurationDescriptionUnmarshaller">
            <summary>
            Response Unmarshaller for VpcConfigurationDescription Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.VpcConfigurationDescriptionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisFirehose#Model#VpcConfigurationDescription,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.VpcConfigurationDescriptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.VpcConfigurationDescriptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.VpcConfigurationMarshaller">
            <summary>
            VpcConfiguration Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.VpcConfigurationMarshaller.Marshall(Amazon.KinesisFirehose.Model.VpcConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.VpcConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.InvalidArgumentException">
            <summary>
            The specified input parameter has a value that is not valid.
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.InvalidArgumentException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidArgumentException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.InvalidArgumentException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidArgumentException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.InvalidArgumentException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidArgumentException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.InvalidArgumentException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidArgumentException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.InvalidArgumentException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidArgumentException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.InvalidArgumentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidArgumentException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.InvalidArgumentException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.InvalidKMSResourceException">
            <summary>
            Kinesis Data Firehose throws this exception when an attempt to put records or to start
            or stop delivery stream encryption fails. This happens when the KMS service throws
            one of the following exception types: <code>AccessDeniedException</code>, <code>InvalidStateException</code>,
            <code>DisabledException</code>, or <code>NotFoundException</code>.
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.InvalidKMSResourceException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidKMSResourceException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.InvalidKMSResourceException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidKMSResourceException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.InvalidKMSResourceException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidKMSResourceException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.InvalidKMSResourceException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidKMSResourceException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.InvalidKMSResourceException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidKMSResourceException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.InvalidKMSResourceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidKMSResourceException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.InvalidKMSResourceException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.InvalidKMSResourceException.Code">
            <summary>
            Gets and sets the property Code.
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.KinesisStreamSourceConfiguration">
            <summary>
            The stream and role Amazon Resource Names (ARNs) for a Kinesis data stream used as
            the source for a delivery stream.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.KinesisStreamSourceConfiguration.KinesisStreamARN">
            <summary>
            Gets and sets the property KinesisStreamARN. 
            <para>
            The ARN of the source Kinesis data stream. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-kinesis-streams">Amazon
            Kinesis Data Streams ARN Format</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.KinesisStreamSourceConfiguration.RoleARN">
            <summary>
            Gets and sets the property RoleARN. 
            <para>
            The ARN of the role that provides access to the source Kinesis data stream. For more
            information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-iam">AWS
            Identity and Access Management (IAM) ARN Format</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.KinesisStreamSourceDescription">
            <summary>
            Details about a Kinesis data stream used as the source for a Kinesis Data Firehose
            delivery stream.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.KinesisStreamSourceDescription.DeliveryStartTimestamp">
            <summary>
            Gets and sets the property DeliveryStartTimestamp. 
            <para>
            Kinesis Data Firehose starts retrieving records from the Kinesis data stream starting
            with this timestamp.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.KinesisStreamSourceDescription.KinesisStreamARN">
            <summary>
            Gets and sets the property KinesisStreamARN. 
            <para>
            The Amazon Resource Name (ARN) of the source Kinesis data stream. For more information,
            see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-kinesis-streams">Amazon
            Kinesis Data Streams ARN Format</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.KinesisStreamSourceDescription.RoleARN">
            <summary>
            Gets and sets the property RoleARN. 
            <para>
            The ARN of the role used by the source Kinesis data stream. For more information,
            see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-iam">AWS
            Identity and Access Management (IAM) ARN Format</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.KMSEncryptionConfig">
            <summary>
            Describes an encryption key for a destination in Amazon S3.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.KMSEncryptionConfig.AWSKMSKeyARN">
            <summary>
            Gets and sets the property AWSKMSKeyARN. 
            <para>
            The Amazon Resource Name (ARN) of the encryption key. Must belong to the same AWS
            Region as the destination Amazon S3 bucket. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs) and AWS Service Namespaces</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.LimitExceededException">
            <summary>
            You have already reached the limit for a requested resource.
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.LimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new LimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.LimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.LimitExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.LimitExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.LimitExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.LimitExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the LimitExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.LimitExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.ListDeliveryStreamsRequest">
            <summary>
            Container for the parameters to the ListDeliveryStreams operation.
            Lists your delivery streams in alphabetical order of their names.
            
             
            <para>
            The number of delivery streams might be too large to return using a single call to
            <code>ListDeliveryStreams</code>. You can limit the number of delivery streams returned,
            using the <code>Limit</code> parameter. To determine whether there are more delivery
            streams to list, check the value of <code>HasMoreDeliveryStreams</code> in the output.
            If there are more delivery streams to list, you can request them by calling this operation
            again and setting the <code>ExclusiveStartDeliveryStreamName</code> parameter to the
            name of the last delivery stream returned in the last call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ListDeliveryStreamsRequest.DeliveryStreamType">
            <summary>
            Gets and sets the property DeliveryStreamType. 
            <para>
            The delivery stream type. This can be one of the following values:
            </para>
             <ul> <li> 
            <para>
             <code>DirectPut</code>: Provider applications access the delivery stream directly.
            </para>
             </li> <li> 
            <para>
             <code>KinesisStreamAsSource</code>: The delivery stream uses a Kinesis data stream
            as a source.
            </para>
             </li> </ul> 
            <para>
            This parameter is optional. If this parameter is omitted, delivery streams of all
            types are returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ListDeliveryStreamsRequest.ExclusiveStartDeliveryStreamName">
            <summary>
            Gets and sets the property ExclusiveStartDeliveryStreamName. 
            <para>
            The list of delivery streams returned by this call to <code>ListDeliveryStreams</code>
            will start with the delivery stream whose name comes alphabetically immediately after
            the name you specify in <code>ExclusiveStartDeliveryStreamName</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ListDeliveryStreamsRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            The maximum number of delivery streams to list. The default value is 10.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.ListDeliveryStreamsResponse">
            <summary>
            This is the response object from the ListDeliveryStreams operation.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ListDeliveryStreamsResponse.DeliveryStreamNames">
            <summary>
            Gets and sets the property DeliveryStreamNames. 
            <para>
            The names of the delivery streams.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ListDeliveryStreamsResponse.HasMoreDeliveryStreams">
            <summary>
            Gets and sets the property HasMoreDeliveryStreams. 
            <para>
            Indicates whether there are more delivery streams available to list.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.ListTagsForDeliveryStreamRequest">
            <summary>
            Container for the parameters to the ListTagsForDeliveryStream operation.
            Lists the tags for the specified delivery stream. This operation has a limit of five
            transactions per second per account.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ListTagsForDeliveryStreamRequest.DeliveryStreamName">
            <summary>
            Gets and sets the property DeliveryStreamName. 
            <para>
            The name of the delivery stream whose tags you want to list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ListTagsForDeliveryStreamRequest.ExclusiveStartTagKey">
            <summary>
            Gets and sets the property ExclusiveStartTagKey. 
            <para>
            The key to use as the starting point for the list of tags. If you set this parameter,
            <code>ListTagsForDeliveryStream</code> gets all tags that occur after <code>ExclusiveStartTagKey</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ListTagsForDeliveryStreamRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            The number of tags to return. If this number is less than the total number of tags
            associated with the delivery stream, <code>HasMoreTags</code> is set to <code>true</code>
            in the response. To list additional tags, set <code>ExclusiveStartTagKey</code> to
            the last key in the response. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.ListTagsForDeliveryStreamResponse">
            <summary>
            This is the response object from the ListTagsForDeliveryStream operation.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ListTagsForDeliveryStreamResponse.HasMoreTags">
            <summary>
            Gets and sets the property HasMoreTags. 
            <para>
            If this is <code>true</code> in the response, more tags are available. To list the
            remaining tags, set <code>ExclusiveStartTagKey</code> to the key of the last tag returned
            and call <code>ListTagsForDeliveryStream</code> again.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ListTagsForDeliveryStreamResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            A list of tags associated with <code>DeliveryStreamName</code>, starting with the
            first tag after <code>ExclusiveStartTagKey</code> and up to the specified <code>Limit</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.OpenXJsonSerDe">
            <summary>
            The OpenX SerDe. Used by Kinesis Data Firehose for deserializing data, which means
            converting it from the JSON format in preparation for serializing it to the Parquet
            or ORC format. This is one of two deserializers you can choose, depending on which
            one offers the functionality you need. The other option is the native Hive / HCatalog
            JsonSerDe.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.OpenXJsonSerDe.CaseInsensitive">
            <summary>
            Gets and sets the property CaseInsensitive. 
            <para>
            When set to <code>true</code>, which is the default, Kinesis Data Firehose converts
            JSON keys to lowercase before deserializing them.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.OpenXJsonSerDe.ColumnToJsonKeyMappings">
            <summary>
            Gets and sets the property ColumnToJsonKeyMappings. 
            <para>
            Maps column names to JSON keys that aren't identical to the column names. This is
            useful when the JSON contains keys that are Hive keywords. For example, <code>timestamp</code>
            is a Hive keyword. If you have a JSON key named <code>timestamp</code>, set this parameter
            to <code>{"ts": "timestamp"}</code> to map this key to a column named <code>ts</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.OpenXJsonSerDe.ConvertDotsInJsonKeysToUnderscores">
            <summary>
            Gets and sets the property ConvertDotsInJsonKeysToUnderscores. 
            <para>
            When set to <code>true</code>, specifies that the names of the keys include dots and
            that you want Kinesis Data Firehose to replace them with underscores. This is useful
            because Apache Hive does not allow dots in column names. For example, if the JSON
            contains a key whose name is "a.b", you can define the column name to be "a_b" when
            using this option.
            </para>
             
            <para>
            The default is <code>false</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.OrcSerDe">
            <summary>
            A serializer to use for converting data to the ORC format before storing it in Amazon
            S3. For more information, see <a href="https://orc.apache.org/docs/">Apache ORC</a>.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.OrcSerDe.BlockSizeBytes">
            <summary>
            Gets and sets the property BlockSizeBytes. 
            <para>
            The Hadoop Distributed File System (HDFS) block size. This is useful if you intend
            to copy the data from Amazon S3 to HDFS before querying. The default is 256 MiB and
            the minimum is 64 MiB. Kinesis Data Firehose uses this value for padding calculations.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.OrcSerDe.BloomFilterColumns">
            <summary>
            Gets and sets the property BloomFilterColumns. 
            <para>
            The column names for which you want Kinesis Data Firehose to create bloom filters.
            The default is <code>null</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.OrcSerDe.BloomFilterFalsePositiveProbability">
            <summary>
            Gets and sets the property BloomFilterFalsePositiveProbability. 
            <para>
            The Bloom filter false positive probability (FPP). The lower the FPP, the bigger the
            Bloom filter. The default value is 0.05, the minimum is 0, and the maximum is 1.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.OrcSerDe.Compression">
            <summary>
            Gets and sets the property Compression. 
            <para>
            The compression code to use over data blocks. The default is <code>SNAPPY</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.OrcSerDe.DictionaryKeyThreshold">
            <summary>
            Gets and sets the property DictionaryKeyThreshold. 
            <para>
            Represents the fraction of the total number of non-null rows. To turn off dictionary
            encoding, set this fraction to a number that is less than the number of distinct keys
            in a dictionary. To always use dictionary encoding, set this threshold to 1.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.OrcSerDe.EnablePadding">
            <summary>
            Gets and sets the property EnablePadding. 
            <para>
            Set this to <code>true</code> to indicate that you want stripes to be padded to the
            HDFS block boundaries. This is useful if you intend to copy the data from Amazon S3
            to HDFS before querying. The default is <code>false</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.OrcSerDe.FormatVersion">
            <summary>
            Gets and sets the property FormatVersion. 
            <para>
            The version of the file to write. The possible values are <code>V0_11</code> and <code>V0_12</code>.
            The default is <code>V0_12</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.OrcSerDe.PaddingTolerance">
            <summary>
            Gets and sets the property PaddingTolerance. 
            <para>
            A number between 0 and 1 that defines the tolerance for block padding as a decimal
            fraction of stripe size. The default value is 0.05, which means 5 percent of stripe
            size.
            </para>
             
            <para>
            For the default values of 64 MiB ORC stripes and 256 MiB HDFS blocks, the default
            block padding tolerance of 5 percent reserves a maximum of 3.2 MiB for padding within
            the 256 MiB block. In such a case, if the available size within the block is more
            than 3.2 MiB, a new, smaller stripe is inserted to fit within that space. This ensures
            that no stripe crosses block boundaries and causes remote reads within a node-local
            task.
            </para>
             
            <para>
            Kinesis Data Firehose ignores this parameter when <a>OrcSerDe$EnablePadding</a> is
            <code>false</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.OrcSerDe.RowIndexStride">
            <summary>
            Gets and sets the property RowIndexStride. 
            <para>
            The number of rows between index entries. The default is 10,000 and the minimum is
            1,000.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.OrcSerDe.StripeSizeBytes">
            <summary>
            Gets and sets the property StripeSizeBytes. 
            <para>
            The number of bytes in each stripe. The default is 64 MiB and the minimum is 8 MiB.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.OutputFormatConfiguration">
            <summary>
            Specifies the serializer that you want Kinesis Data Firehose to use to convert the
            format of your data before it writes it to Amazon S3. This parameter is required if
            <code>Enabled</code> is set to true.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.OutputFormatConfiguration.Serializer">
            <summary>
            Gets and sets the property Serializer. 
            <para>
            Specifies which serializer to use. You can choose either the ORC SerDe or the Parquet
            SerDe. If both are non-null, the server rejects the request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.ParquetSerDe">
            <summary>
            A serializer to use for converting data to the Parquet format before storing it in
            Amazon S3. For more information, see <a href="https://parquet.apache.org/documentation/latest/">Apache
            Parquet</a>.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ParquetSerDe.BlockSizeBytes">
            <summary>
            Gets and sets the property BlockSizeBytes. 
            <para>
            The Hadoop Distributed File System (HDFS) block size. This is useful if you intend
            to copy the data from Amazon S3 to HDFS before querying. The default is 256 MiB and
            the minimum is 64 MiB. Kinesis Data Firehose uses this value for padding calculations.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ParquetSerDe.Compression">
            <summary>
            Gets and sets the property Compression. 
            <para>
            The compression code to use over data blocks. The possible values are <code>UNCOMPRESSED</code>,
            <code>SNAPPY</code>, and <code>GZIP</code>, with the default being <code>SNAPPY</code>.
            Use <code>SNAPPY</code> for higher decompression speed. Use <code>GZIP</code> if the
            compression ratio is more important than speed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ParquetSerDe.EnableDictionaryCompression">
            <summary>
            Gets and sets the property EnableDictionaryCompression. 
            <para>
            Indicates whether to enable dictionary compression.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ParquetSerDe.MaxPaddingBytes">
            <summary>
            Gets and sets the property MaxPaddingBytes. 
            <para>
            The maximum amount of padding to apply. This is useful if you intend to copy the data
            from Amazon S3 to HDFS before querying. The default is 0.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ParquetSerDe.PageSizeBytes">
            <summary>
            Gets and sets the property PageSizeBytes. 
            <para>
            The Parquet page size. Column chunks are divided into pages. A page is conceptually
            an indivisible unit (in terms of compression and encoding). The minimum value is 64
            KiB and the default is 1 MiB.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ParquetSerDe.WriterVersion">
            <summary>
            Gets and sets the property WriterVersion. 
            <para>
            Indicates the version of row format to output. The possible values are <code>V1</code>
            and <code>V2</code>. The default is <code>V1</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.ProcessingConfiguration">
            <summary>
            Describes a data processing configuration.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ProcessingConfiguration.Enabled">
            <summary>
            Gets and sets the property Enabled. 
            <para>
            Enables or disables data processing.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ProcessingConfiguration.Processors">
            <summary>
            Gets and sets the property Processors. 
            <para>
            The data processors.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Processor">
            <summary>
            Describes a data processor.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Processor.Parameters">
            <summary>
            Gets and sets the property Parameters. 
            <para>
            The processor parameters.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Processor.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of processor.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.ProcessorParameter">
            <summary>
            Describes the processor parameter.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ProcessorParameter.ParameterName">
            <summary>
            Gets and sets the property ParameterName. 
            <para>
            The name of the parameter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ProcessorParameter.ParameterValue">
            <summary>
            Gets and sets the property ParameterValue. 
            <para>
            The parameter value.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.PutRecordBatchRequest">
            <summary>
            Container for the parameters to the PutRecordBatch operation.
            Writes multiple data records into a delivery stream in a single call, which can achieve
            higher throughput per producer than when writing single records. To write single data
            records into a delivery stream, use <a>PutRecord</a>. Applications using these operations
            are referred to as producers.
            
             
            <para>
            For information about service quota, see <a href="https://docs.aws.amazon.com/firehose/latest/dev/limits.html">Amazon
            Kinesis Data Firehose Quota</a>.
            </para>
             
            <para>
            Each <a>PutRecordBatch</a> request supports up to 500 records. Each record in the
            request can be as large as 1,000 KB (before base64 encoding), up to a limit of 4 MB
            for the entire request. These limits cannot be changed.
            </para>
             
            <para>
            You must specify the name of the delivery stream and the data record when using <a>PutRecord</a>.
            The data record consists of a data blob that can be up to 1,000 KB in size, and any
            kind of data. For example, it could be a segment from a log file, geographic location
            data, website clickstream data, and so on.
            </para>
             
            <para>
            Kinesis Data Firehose buffers records before delivering them to the destination. To
            disambiguate the data blobs at the destination, a common solution is to use delimiters
            in the data, such as a newline (<code>\n</code>) or some other character unique within
            the data. This allows the consumer application to parse individual data items when
            reading the data from the destination.
            </para>
             
            <para>
            The <a>PutRecordBatch</a> response includes a count of failed records, <code>FailedPutCount</code>,
            and an array of responses, <code>RequestResponses</code>. Even if the <a>PutRecordBatch</a>
            call succeeds, the value of <code>FailedPutCount</code> may be greater than 0, indicating
            that there are records for which the operation didn't succeed. Each entry in the <code>RequestResponses</code>
            array provides additional information about the processed record. It directly correlates
            with a record in the request array using the same ordering, from the top to the bottom.
            The response array always includes the same number of records as the request array.
            <code>RequestResponses</code> includes both successfully and unsuccessfully processed
            records. Kinesis Data Firehose tries to process all records in each <a>PutRecordBatch</a>
            request. A single record failure does not stop the processing of subsequent records.
            
            </para>
             
            <para>
            A successfully processed record includes a <code>RecordId</code> value, which is unique
            for the record. An unsuccessfully processed record includes <code>ErrorCode</code>
            and <code>ErrorMessage</code> values. <code>ErrorCode</code> reflects the type of
            error, and is one of the following values: <code>ServiceUnavailableException</code>
            or <code>InternalFailure</code>. <code>ErrorMessage</code> provides more detailed
            information about the error.
            </para>
             
            <para>
            If there is an internal server error or a timeout, the write might have completed
            or it might have failed. If <code>FailedPutCount</code> is greater than 0, retry the
            request, resending only those records that might have failed processing. This minimizes
            the possible duplicate records and also reduces the total bytes sent (and corresponding
            charges). We recommend that you handle any duplicates at the destination.
            </para>
             
            <para>
            If <a>PutRecordBatch</a> throws <code>ServiceUnavailableException</code>, back off
            and retry. If the exception persists, it is possible that the throughput limits have
            been exceeded for the delivery stream.
            </para>
             
            <para>
            Data records sent to Kinesis Data Firehose are stored for 24 hours from the time they
            are added to a delivery stream as it attempts to send the records to the destination.
            If the destination is unreachable for more than 24 hours, the data is no longer available.
            </para>
             <important> 
            <para>
            Don't concatenate two or more base64 strings to form the data fields of your records.
            Instead, concatenate the raw data, then perform base64 encoding.
            </para>
             </important>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.PutRecordBatchRequest.DeliveryStreamName">
            <summary>
            Gets and sets the property DeliveryStreamName. 
            <para>
            The name of the delivery stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.PutRecordBatchRequest.Records">
            <summary>
            Gets and sets the property Records. 
            <para>
            One or more records.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.PutRecordBatchResponse">
            <summary>
            This is the response object from the PutRecordBatch operation.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.PutRecordBatchResponse.Encrypted">
            <summary>
            Gets and sets the property Encrypted. 
            <para>
            Indicates whether server-side encryption (SSE) was enabled during this operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.PutRecordBatchResponse.FailedPutCount">
            <summary>
            Gets and sets the property FailedPutCount. 
            <para>
            The number of records that might have failed processing. This number might be greater
            than 0 even if the <a>PutRecordBatch</a> call succeeds. Check <code>FailedPutCount</code>
            to determine whether there are records that you need to resend.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.PutRecordBatchResponse.RequestResponses">
            <summary>
            Gets and sets the property RequestResponses. 
            <para>
            The results array. For each record, the index of the response element is the same
            as the index used in the request array.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.PutRecordBatchResponseEntry">
            <summary>
            Contains the result for an individual record from a <a>PutRecordBatch</a> request.
            If the record is successfully added to your delivery stream, it receives a record
            ID. If the record fails to be added to your delivery stream, the result includes an
            error code and an error message.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.PutRecordBatchResponseEntry.ErrorCode">
            <summary>
            Gets and sets the property ErrorCode. 
            <para>
            The error code for an individual record result.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.PutRecordBatchResponseEntry.ErrorMessage">
            <summary>
            Gets and sets the property ErrorMessage. 
            <para>
            The error message for an individual record result.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.PutRecordBatchResponseEntry.RecordId">
            <summary>
            Gets and sets the property RecordId. 
            <para>
            The ID of the record.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.PutRecordRequest">
            <summary>
            Container for the parameters to the PutRecord operation.
            Writes a single data record into an Amazon Kinesis Data Firehose delivery stream.
            To write multiple data records into a delivery stream, use <a>PutRecordBatch</a>.
            Applications using these operations are referred to as producers.
            
             
            <para>
            By default, each delivery stream can take in up to 2,000 transactions per second,
            5,000 records per second, or 5 MB per second. If you use <a>PutRecord</a> and <a>PutRecordBatch</a>,
            the limits are an aggregate across these two operations for each delivery stream.
            For more information about limits and how to request an increase, see <a href="https://docs.aws.amazon.com/firehose/latest/dev/limits.html">Amazon
            Kinesis Data Firehose Limits</a>. 
            </para>
             
            <para>
            You must specify the name of the delivery stream and the data record when using <a>PutRecord</a>.
            The data record consists of a data blob that can be up to 1,000 KiB in size, and any
            kind of data. For example, it can be a segment from a log file, geographic location
            data, website clickstream data, and so on.
            </para>
             
            <para>
            Kinesis Data Firehose buffers records before delivering them to the destination. To
            disambiguate the data blobs at the destination, a common solution is to use delimiters
            in the data, such as a newline (<code>\n</code>) or some other character unique within
            the data. This allows the consumer application to parse individual data items when
            reading the data from the destination.
            </para>
             
            <para>
            The <code>PutRecord</code> operation returns a <code>RecordId</code>, which is a unique
            string assigned to each record. Producer applications can use this ID for purposes
            such as auditability and investigation.
            </para>
             
            <para>
            If the <code>PutRecord</code> operation throws a <code>ServiceUnavailableException</code>,
            back off and retry. If the exception persists, it is possible that the throughput
            limits have been exceeded for the delivery stream. 
            </para>
             
            <para>
            Data records sent to Kinesis Data Firehose are stored for 24 hours from the time they
            are added to a delivery stream as it tries to send the records to the destination.
            If the destination is unreachable for more than 24 hours, the data is no longer available.
            </para>
             <important> 
            <para>
            Don't concatenate two or more base64 strings to form the data fields of your records.
            Instead, concatenate the raw data, then perform base64 encoding.
            </para>
             </important>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.PutRecordRequest.DeliveryStreamName">
            <summary>
            Gets and sets the property DeliveryStreamName. 
            <para>
            The name of the delivery stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.PutRecordRequest.Record">
            <summary>
            Gets and sets the property Record. 
            <para>
            The record.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.PutRecordResponse">
            <summary>
            This is the response object from the PutRecord operation.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.PutRecordResponse.Encrypted">
            <summary>
            Gets and sets the property Encrypted. 
            <para>
            Indicates whether server-side encryption (SSE) was enabled during this operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.PutRecordResponse.RecordId">
            <summary>
            Gets and sets the property RecordId. 
            <para>
            The ID of the record.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Record">
            <summary>
            The unit of data in a delivery stream.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Record.Data">
            <summary>
            Gets and sets the property Data. 
            <para>
            The data blob, which is base64-encoded when the blob is serialized. The maximum size
            of the data blob, before base64-encoding, is 1,000 KiB.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.RedshiftDestinationConfiguration">
            <summary>
            Describes the configuration of a destination in Amazon Redshift.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.RedshiftDestinationConfiguration.CloudWatchLoggingOptions">
            <summary>
            Gets and sets the property CloudWatchLoggingOptions. 
            <para>
            The CloudWatch logging options for your delivery stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.RedshiftDestinationConfiguration.ClusterJDBCURL">
            <summary>
            Gets and sets the property ClusterJDBCURL. 
            <para>
            The database connection string.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.RedshiftDestinationConfiguration.CopyCommand">
            <summary>
            Gets and sets the property CopyCommand. 
            <para>
            The <code>COPY</code> command.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.RedshiftDestinationConfiguration.Password">
            <summary>
            Gets and sets the property Password. 
            <para>
            The user password.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.RedshiftDestinationConfiguration.ProcessingConfiguration">
            <summary>
            Gets and sets the property ProcessingConfiguration. 
            <para>
            The data processing configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.RedshiftDestinationConfiguration.RetryOptions">
            <summary>
            Gets and sets the property RetryOptions. 
            <para>
            The retry behavior in case Kinesis Data Firehose is unable to deliver documents to
            Amazon Redshift. Default value is 3600 (60 minutes).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.RedshiftDestinationConfiguration.RoleARN">
            <summary>
            Gets and sets the property RoleARN. 
            <para>
            The Amazon Resource Name (ARN) of the AWS credentials. For more information, see <a
            href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs) and AWS Service Namespaces</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.RedshiftDestinationConfiguration.S3BackupConfiguration">
            <summary>
            Gets and sets the property S3BackupConfiguration. 
            <para>
            The configuration for backup in Amazon S3.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.RedshiftDestinationConfiguration.S3BackupMode">
            <summary>
            Gets and sets the property S3BackupMode. 
            <para>
            The Amazon S3 backup mode. After you create a delivery stream, you can update it to
            enable Amazon S3 backup if it is disabled. If backup is enabled, you can't update
            the delivery stream to disable it. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.RedshiftDestinationConfiguration.S3Configuration">
            <summary>
            Gets and sets the property S3Configuration. 
            <para>
            The configuration for the intermediate Amazon S3 location from which Amazon Redshift
            obtains data. Restrictions are described in the topic for <a>CreateDeliveryStream</a>.
            </para>
             
            <para>
            The compression formats <code>SNAPPY</code> or <code>ZIP</code> cannot be specified
            in <code>RedshiftDestinationConfiguration.S3Configuration</code> because the Amazon
            Redshift <code>COPY</code> operation that reads from the S3 bucket doesn't support
            these compression formats.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.RedshiftDestinationConfiguration.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The name of the user.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.RedshiftDestinationDescription">
            <summary>
            Describes a destination in Amazon Redshift.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.RedshiftDestinationDescription.CloudWatchLoggingOptions">
            <summary>
            Gets and sets the property CloudWatchLoggingOptions. 
            <para>
            The Amazon CloudWatch logging options for your delivery stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.RedshiftDestinationDescription.ClusterJDBCURL">
            <summary>
            Gets and sets the property ClusterJDBCURL. 
            <para>
            The database connection string.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.RedshiftDestinationDescription.CopyCommand">
            <summary>
            Gets and sets the property CopyCommand. 
            <para>
            The <code>COPY</code> command.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.RedshiftDestinationDescription.ProcessingConfiguration">
            <summary>
            Gets and sets the property ProcessingConfiguration. 
            <para>
            The data processing configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.RedshiftDestinationDescription.RetryOptions">
            <summary>
            Gets and sets the property RetryOptions. 
            <para>
            The retry behavior in case Kinesis Data Firehose is unable to deliver documents to
            Amazon Redshift. Default value is 3600 (60 minutes).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.RedshiftDestinationDescription.RoleARN">
            <summary>
            Gets and sets the property RoleARN. 
            <para>
            The Amazon Resource Name (ARN) of the AWS credentials. For more information, see <a
            href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs) and AWS Service Namespaces</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.RedshiftDestinationDescription.S3BackupDescription">
            <summary>
            Gets and sets the property S3BackupDescription. 
            <para>
            The configuration for backup in Amazon S3.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.RedshiftDestinationDescription.S3BackupMode">
            <summary>
            Gets and sets the property S3BackupMode. 
            <para>
            The Amazon S3 backup mode.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.RedshiftDestinationDescription.S3DestinationDescription">
            <summary>
            Gets and sets the property S3DestinationDescription. 
            <para>
            The Amazon S3 destination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.RedshiftDestinationDescription.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The name of the user.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.RedshiftDestinationUpdate">
            <summary>
            Describes an update for a destination in Amazon Redshift.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.RedshiftDestinationUpdate.CloudWatchLoggingOptions">
            <summary>
            Gets and sets the property CloudWatchLoggingOptions. 
            <para>
            The Amazon CloudWatch logging options for your delivery stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.RedshiftDestinationUpdate.ClusterJDBCURL">
            <summary>
            Gets and sets the property ClusterJDBCURL. 
            <para>
            The database connection string.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.RedshiftDestinationUpdate.CopyCommand">
            <summary>
            Gets and sets the property CopyCommand. 
            <para>
            The <code>COPY</code> command.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.RedshiftDestinationUpdate.Password">
            <summary>
            Gets and sets the property Password. 
            <para>
            The user password.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.RedshiftDestinationUpdate.ProcessingConfiguration">
            <summary>
            Gets and sets the property ProcessingConfiguration. 
            <para>
            The data processing configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.RedshiftDestinationUpdate.RetryOptions">
            <summary>
            Gets and sets the property RetryOptions. 
            <para>
            The retry behavior in case Kinesis Data Firehose is unable to deliver documents to
            Amazon Redshift. Default value is 3600 (60 minutes).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.RedshiftDestinationUpdate.RoleARN">
            <summary>
            Gets and sets the property RoleARN. 
            <para>
            The Amazon Resource Name (ARN) of the AWS credentials. For more information, see <a
            href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs) and AWS Service Namespaces</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.RedshiftDestinationUpdate.S3BackupMode">
            <summary>
            Gets and sets the property S3BackupMode. 
            <para>
            You can update a delivery stream to enable Amazon S3 backup if it is disabled. If
            backup is enabled, you can't update the delivery stream to disable it. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.RedshiftDestinationUpdate.S3BackupUpdate">
            <summary>
            Gets and sets the property S3BackupUpdate. 
            <para>
            The Amazon S3 destination for backup.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.RedshiftDestinationUpdate.S3Update">
            <summary>
            Gets and sets the property S3Update. 
            <para>
            The Amazon S3 destination.
            </para>
             
            <para>
            The compression formats <code>SNAPPY</code> or <code>ZIP</code> cannot be specified
            in <code>RedshiftDestinationUpdate.S3Update</code> because the Amazon Redshift <code>COPY</code>
            operation that reads from the S3 bucket doesn't support these compression formats.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.RedshiftDestinationUpdate.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The name of the user.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.RedshiftRetryOptions">
            <summary>
            Configures retry behavior in case Kinesis Data Firehose is unable to deliver documents
            to Amazon Redshift.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.RedshiftRetryOptions.DurationInSeconds">
            <summary>
            Gets and sets the property DurationInSeconds. 
            <para>
            The length of time during which Kinesis Data Firehose retries delivery after a failure,
            starting from the initial request and including the first attempt. The default value
            is 3600 seconds (60 minutes). Kinesis Data Firehose does not retry if the value of
            <code>DurationInSeconds</code> is 0 (zero) or if the first delivery attempt takes
            longer than the current value.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.ResourceInUseException">
            <summary>
            The resource is already in use and not available for this operation.
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.ResourceInUseException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceInUseException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.ResourceInUseException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceInUseException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.ResourceInUseException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceInUseException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.ResourceInUseException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceInUseException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.ResourceInUseException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceInUseException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.ResourceInUseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ResourceInUseException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.ResourceInUseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            <summary>
            The specified resource could not be found.
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.ResourceNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.ResourceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.ResourceNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.ResourceNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.ResourceNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.ResourceNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ResourceNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.ResourceNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.RetryOptions">
            <summary>
            The retry behavior in case Kinesis Data Firehose is unable to deliver data to an
            Amazon S3 prefix.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.RetryOptions.DurationInSeconds">
            <summary>
            Gets and sets the property DurationInSeconds. 
            <para>
            The period of time during which Kinesis Data Firehose retries to deliver data to the
            specified Amazon S3 prefix.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.S3DestinationConfiguration">
            <summary>
            Describes the configuration of a destination in Amazon S3.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.S3DestinationConfiguration.BucketARN">
            <summary>
            Gets and sets the property BucketARN. 
            <para>
            The ARN of the S3 bucket. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs) and AWS Service Namespaces</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.S3DestinationConfiguration.BufferingHints">
            <summary>
            Gets and sets the property BufferingHints. 
            <para>
            The buffering option. If no value is specified, <code>BufferingHints</code> object
            default values are used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.S3DestinationConfiguration.CloudWatchLoggingOptions">
            <summary>
            Gets and sets the property CloudWatchLoggingOptions. 
            <para>
            The CloudWatch logging options for your delivery stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.S3DestinationConfiguration.CompressionFormat">
            <summary>
            Gets and sets the property CompressionFormat. 
            <para>
            The compression format. If no value is specified, the default is <code>UNCOMPRESSED</code>.
            </para>
             
            <para>
            The compression formats <code>SNAPPY</code> or <code>ZIP</code> cannot be specified
            for Amazon Redshift destinations because they are not supported by the Amazon Redshift
            <code>COPY</code> operation that reads from the S3 bucket.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.S3DestinationConfiguration.EncryptionConfiguration">
            <summary>
            Gets and sets the property EncryptionConfiguration. 
            <para>
            The encryption configuration. If no value is specified, the default is no encryption.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.S3DestinationConfiguration.ErrorOutputPrefix">
            <summary>
            Gets and sets the property ErrorOutputPrefix. 
            <para>
            A prefix that Kinesis Data Firehose evaluates and adds to failed records before writing
            them to S3. This prefix appears immediately following the bucket name. For information
            about how to specify this prefix, see <a href="https://docs.aws.amazon.com/firehose/latest/dev/s3-prefixes.html">Custom
            Prefixes for Amazon S3 Objects</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.S3DestinationConfiguration.Prefix">
            <summary>
            Gets and sets the property Prefix. 
            <para>
            The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered Amazon
            S3 files. You can also specify a custom prefix, as described in <a href="https://docs.aws.amazon.com/firehose/latest/dev/s3-prefixes.html">Custom
            Prefixes for Amazon S3 Objects</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.S3DestinationConfiguration.RoleARN">
            <summary>
            Gets and sets the property RoleARN. 
            <para>
            The Amazon Resource Name (ARN) of the AWS credentials. For more information, see <a
            href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs) and AWS Service Namespaces</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.S3DestinationDescription">
            <summary>
            Describes a destination in Amazon S3.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.S3DestinationDescription.BucketARN">
            <summary>
            Gets and sets the property BucketARN. 
            <para>
            The ARN of the S3 bucket. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs) and AWS Service Namespaces</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.S3DestinationDescription.BufferingHints">
            <summary>
            Gets and sets the property BufferingHints. 
            <para>
            The buffering option. If no value is specified, <code>BufferingHints</code> object
            default values are used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.S3DestinationDescription.CloudWatchLoggingOptions">
            <summary>
            Gets and sets the property CloudWatchLoggingOptions. 
            <para>
            The Amazon CloudWatch logging options for your delivery stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.S3DestinationDescription.CompressionFormat">
            <summary>
            Gets and sets the property CompressionFormat. 
            <para>
            The compression format. If no value is specified, the default is <code>UNCOMPRESSED</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.S3DestinationDescription.EncryptionConfiguration">
            <summary>
            Gets and sets the property EncryptionConfiguration. 
            <para>
            The encryption configuration. If no value is specified, the default is no encryption.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.S3DestinationDescription.ErrorOutputPrefix">
            <summary>
            Gets and sets the property ErrorOutputPrefix. 
            <para>
            A prefix that Kinesis Data Firehose evaluates and adds to failed records before writing
            them to S3. This prefix appears immediately following the bucket name. For information
            about how to specify this prefix, see <a href="https://docs.aws.amazon.com/firehose/latest/dev/s3-prefixes.html">Custom
            Prefixes for Amazon S3 Objects</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.S3DestinationDescription.Prefix">
            <summary>
            Gets and sets the property Prefix. 
            <para>
            The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered Amazon
            S3 files. You can also specify a custom prefix, as described in <a href="https://docs.aws.amazon.com/firehose/latest/dev/s3-prefixes.html">Custom
            Prefixes for Amazon S3 Objects</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.S3DestinationDescription.RoleARN">
            <summary>
            Gets and sets the property RoleARN. 
            <para>
            The Amazon Resource Name (ARN) of the AWS credentials. For more information, see <a
            href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs) and AWS Service Namespaces</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.S3DestinationUpdate">
            <summary>
            Describes an update for a destination in Amazon S3.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.S3DestinationUpdate.BucketARN">
            <summary>
            Gets and sets the property BucketARN. 
            <para>
            The ARN of the S3 bucket. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs) and AWS Service Namespaces</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.S3DestinationUpdate.BufferingHints">
            <summary>
            Gets and sets the property BufferingHints. 
            <para>
            The buffering option. If no value is specified, <code>BufferingHints</code> object
            default values are used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.S3DestinationUpdate.CloudWatchLoggingOptions">
            <summary>
            Gets and sets the property CloudWatchLoggingOptions. 
            <para>
            The CloudWatch logging options for your delivery stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.S3DestinationUpdate.CompressionFormat">
            <summary>
            Gets and sets the property CompressionFormat. 
            <para>
            The compression format. If no value is specified, the default is <code>UNCOMPRESSED</code>.
            </para>
             
            <para>
            The compression formats <code>SNAPPY</code> or <code>ZIP</code> cannot be specified
            for Amazon Redshift destinations because they are not supported by the Amazon Redshift
            <code>COPY</code> operation that reads from the S3 bucket.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.S3DestinationUpdate.EncryptionConfiguration">
            <summary>
            Gets and sets the property EncryptionConfiguration. 
            <para>
            The encryption configuration. If no value is specified, the default is no encryption.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.S3DestinationUpdate.ErrorOutputPrefix">
            <summary>
            Gets and sets the property ErrorOutputPrefix. 
            <para>
            A prefix that Kinesis Data Firehose evaluates and adds to failed records before writing
            them to S3. This prefix appears immediately following the bucket name. For information
            about how to specify this prefix, see <a href="https://docs.aws.amazon.com/firehose/latest/dev/s3-prefixes.html">Custom
            Prefixes for Amazon S3 Objects</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.S3DestinationUpdate.Prefix">
            <summary>
            Gets and sets the property Prefix. 
            <para>
            The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered Amazon
            S3 files. You can also specify a custom prefix, as described in <a href="https://docs.aws.amazon.com/firehose/latest/dev/s3-prefixes.html">Custom
            Prefixes for Amazon S3 Objects</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.S3DestinationUpdate.RoleARN">
            <summary>
            Gets and sets the property RoleARN. 
            <para>
            The Amazon Resource Name (ARN) of the AWS credentials. For more information, see <a
            href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs) and AWS Service Namespaces</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.SchemaConfiguration">
            <summary>
            Specifies the schema to which you want Kinesis Data Firehose to configure your data
            before it writes it to Amazon S3. This parameter is required if <code>Enabled</code>
            is set to true.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.SchemaConfiguration.CatalogId">
            <summary>
            Gets and sets the property CatalogId. 
            <para>
            The ID of the AWS Glue Data Catalog. If you don't supply this, the AWS account ID
            is used by default.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.SchemaConfiguration.DatabaseName">
            <summary>
            Gets and sets the property DatabaseName. 
            <para>
            Specifies the name of the AWS Glue database that contains the schema for the output
            data.
            </para>
             <important> 
            <para>
            If the <code>SchemaConfiguration</code> request parameter is used as part of invoking
            the <code>CreateDeliveryStream</code> API, then the <code>DatabaseName</code> property
            is required and its value must be specified.
            </para>
             </important>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.SchemaConfiguration.Region">
            <summary>
            Gets and sets the property Region. 
            <para>
            If you don't specify an AWS Region, the default is the current Region.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.SchemaConfiguration.RoleARN">
            <summary>
            Gets and sets the property RoleARN. 
            <para>
            The role that Kinesis Data Firehose can use to access AWS Glue. This role must be
            in the same account you use for Kinesis Data Firehose. Cross-account roles aren't
            allowed.
            </para>
             <important> 
            <para>
            If the <code>SchemaConfiguration</code> request parameter is used as part of invoking
            the <code>CreateDeliveryStream</code> API, then the <code>RoleARN</code> property
            is required and its value must be specified.
            </para>
             </important>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.SchemaConfiguration.TableName">
            <summary>
            Gets and sets the property TableName. 
            <para>
            Specifies the AWS Glue table that contains the column information that constitutes
            your data schema.
            </para>
             <important> 
            <para>
            If the <code>SchemaConfiguration</code> request parameter is used as part of invoking
            the <code>CreateDeliveryStream</code> API, then the <code>TableName</code> property
            is required and its value must be specified.
            </para>
             </important>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.SchemaConfiguration.VersionId">
            <summary>
            Gets and sets the property VersionId. 
            <para>
            Specifies the table version for the output data schema. If you don't specify this
            version ID, or if you set it to <code>LATEST</code>, Kinesis Data Firehose uses the
            most recent version. This means that any updates to the table are automatically picked
            up.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Serializer">
            <summary>
            The serializer that you want Kinesis Data Firehose to use to convert data to the target
            format before writing it to Amazon S3. Kinesis Data Firehose supports two types of
            serializers: the <a href="https://hive.apache.org/javadocs/r1.2.2/api/org/apache/hadoop/hive/ql/io/orc/OrcSerde.html">ORC
            SerDe</a> and the <a href="https://hive.apache.org/javadocs/r1.2.2/api/org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveSerDe.html">Parquet
            SerDe</a>.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Serializer.OrcSerDe">
            <summary>
            Gets and sets the property OrcSerDe. 
            <para>
            A serializer to use for converting data to the ORC format before storing it in Amazon
            S3. For more information, see <a href="https://orc.apache.org/docs/">Apache ORC</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Serializer.ParquetSerDe">
            <summary>
            Gets and sets the property ParquetSerDe. 
            <para>
            A serializer to use for converting data to the Parquet format before storing it in
            Amazon S3. For more information, see <a href="https://parquet.apache.org/documentation/latest/">Apache
            Parquet</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.ServiceUnavailableException">
            <summary>
            The service is unavailable. Back off and retry the operation. If you continue to see
            the exception, throughput limits for the delivery stream may have been exceeded. For
            more information about limits and how to request an increase, see <a href="https://docs.aws.amazon.com/firehose/latest/dev/limits.html">Amazon
            Kinesis Data Firehose Limits</a>.
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.ServiceUnavailableException.#ctor(System.String)">
            <summary>
            Constructs a new ServiceUnavailableException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.ServiceUnavailableException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ServiceUnavailableException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.ServiceUnavailableException.#ctor(System.Exception)">
            <summary>
            Construct instance of ServiceUnavailableException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.ServiceUnavailableException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceUnavailableException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.ServiceUnavailableException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceUnavailableException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.ServiceUnavailableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ServiceUnavailableException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.ServiceUnavailableException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.SourceDescription">
            <summary>
            Details about a Kinesis data stream used as the source for a Kinesis Data Firehose
            delivery stream.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.SourceDescription.KinesisStreamSourceDescription">
            <summary>
            Gets and sets the property KinesisStreamSourceDescription. 
            <para>
            The <a>KinesisStreamSourceDescription</a> value for the source Kinesis data stream.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.SplunkDestinationConfiguration">
            <summary>
            Describes the configuration of a destination in Splunk.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.SplunkDestinationConfiguration.CloudWatchLoggingOptions">
            <summary>
            Gets and sets the property CloudWatchLoggingOptions. 
            <para>
            The Amazon CloudWatch logging options for your delivery stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.SplunkDestinationConfiguration.HECAcknowledgmentTimeoutInSeconds">
            <summary>
            Gets and sets the property HECAcknowledgmentTimeoutInSeconds. 
            <para>
            The amount of time that Kinesis Data Firehose waits to receive an acknowledgment from
            Splunk after it sends it data. At the end of the timeout period, Kinesis Data Firehose
            either tries to send the data again or considers it an error, based on your retry
            settings.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.SplunkDestinationConfiguration.HECEndpoint">
            <summary>
            Gets and sets the property HECEndpoint. 
            <para>
            The HTTP Event Collector (HEC) endpoint to which Kinesis Data Firehose sends your
            data.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.SplunkDestinationConfiguration.HECEndpointType">
            <summary>
            Gets and sets the property HECEndpointType. 
            <para>
            This type can be either "Raw" or "Event."
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.SplunkDestinationConfiguration.HECToken">
            <summary>
            Gets and sets the property HECToken. 
            <para>
            This is a GUID that you obtain from your Splunk cluster when you create a new HEC
            endpoint.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.SplunkDestinationConfiguration.ProcessingConfiguration">
            <summary>
            Gets and sets the property ProcessingConfiguration. 
            <para>
            The data processing configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.SplunkDestinationConfiguration.RetryOptions">
            <summary>
            Gets and sets the property RetryOptions. 
            <para>
            The retry behavior in case Kinesis Data Firehose is unable to deliver data to Splunk,
            or if it doesn't receive an acknowledgment of receipt from Splunk.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.SplunkDestinationConfiguration.S3BackupMode">
            <summary>
            Gets and sets the property S3BackupMode. 
            <para>
            Defines how documents should be delivered to Amazon S3. When set to <code>FailedEventsOnly</code>,
            Kinesis Data Firehose writes any data that could not be indexed to the configured
            Amazon S3 destination. When set to <code>AllEvents</code>, Kinesis Data Firehose delivers
            all incoming records to Amazon S3, and also writes failed documents to Amazon S3.
            The default value is <code>FailedEventsOnly</code>.
            </para>
             
            <para>
            You can update this backup mode from <code>FailedEventsOnly</code> to <code>AllEvents</code>.
            You can't update it from <code>AllEvents</code> to <code>FailedEventsOnly</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.SplunkDestinationConfiguration.S3Configuration">
            <summary>
            Gets and sets the property S3Configuration. 
            <para>
            The configuration for the backup Amazon S3 location.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.SplunkDestinationDescription">
            <summary>
            Describes a destination in Splunk.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.SplunkDestinationDescription.CloudWatchLoggingOptions">
            <summary>
            Gets and sets the property CloudWatchLoggingOptions. 
            <para>
            The Amazon CloudWatch logging options for your delivery stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.SplunkDestinationDescription.HECAcknowledgmentTimeoutInSeconds">
            <summary>
            Gets and sets the property HECAcknowledgmentTimeoutInSeconds. 
            <para>
            The amount of time that Kinesis Data Firehose waits to receive an acknowledgment from
            Splunk after it sends it data. At the end of the timeout period, Kinesis Data Firehose
            either tries to send the data again or considers it an error, based on your retry
            settings.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.SplunkDestinationDescription.HECEndpoint">
            <summary>
            Gets and sets the property HECEndpoint. 
            <para>
            The HTTP Event Collector (HEC) endpoint to which Kinesis Data Firehose sends your
            data.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.SplunkDestinationDescription.HECEndpointType">
            <summary>
            Gets and sets the property HECEndpointType. 
            <para>
            This type can be either "Raw" or "Event."
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.SplunkDestinationDescription.HECToken">
            <summary>
            Gets and sets the property HECToken. 
            <para>
            A GUID you obtain from your Splunk cluster when you create a new HEC endpoint.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.SplunkDestinationDescription.ProcessingConfiguration">
            <summary>
            Gets and sets the property ProcessingConfiguration. 
            <para>
            The data processing configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.SplunkDestinationDescription.RetryOptions">
            <summary>
            Gets and sets the property RetryOptions. 
            <para>
            The retry behavior in case Kinesis Data Firehose is unable to deliver data to Splunk
            or if it doesn't receive an acknowledgment of receipt from Splunk.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.SplunkDestinationDescription.S3BackupMode">
            <summary>
            Gets and sets the property S3BackupMode. 
            <para>
            Defines how documents should be delivered to Amazon S3. When set to <code>FailedDocumentsOnly</code>,
            Kinesis Data Firehose writes any data that could not be indexed to the configured
            Amazon S3 destination. When set to <code>AllDocuments</code>, Kinesis Data Firehose
            delivers all incoming records to Amazon S3, and also writes failed documents to Amazon
            S3. Default value is <code>FailedDocumentsOnly</code>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.SplunkDestinationDescription.S3DestinationDescription">
            <summary>
            Gets and sets the property S3DestinationDescription. 
            <para>
            The Amazon S3 destination.&gt;
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.SplunkDestinationUpdate">
            <summary>
            Describes an update for a destination in Splunk.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.SplunkDestinationUpdate.CloudWatchLoggingOptions">
            <summary>
            Gets and sets the property CloudWatchLoggingOptions. 
            <para>
            The Amazon CloudWatch logging options for your delivery stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.SplunkDestinationUpdate.HECAcknowledgmentTimeoutInSeconds">
            <summary>
            Gets and sets the property HECAcknowledgmentTimeoutInSeconds. 
            <para>
            The amount of time that Kinesis Data Firehose waits to receive an acknowledgment from
            Splunk after it sends data. At the end of the timeout period, Kinesis Data Firehose
            either tries to send the data again or considers it an error, based on your retry
            settings.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.SplunkDestinationUpdate.HECEndpoint">
            <summary>
            Gets and sets the property HECEndpoint. 
            <para>
            The HTTP Event Collector (HEC) endpoint to which Kinesis Data Firehose sends your
            data.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.SplunkDestinationUpdate.HECEndpointType">
            <summary>
            Gets and sets the property HECEndpointType. 
            <para>
            This type can be either "Raw" or "Event."
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.SplunkDestinationUpdate.HECToken">
            <summary>
            Gets and sets the property HECToken. 
            <para>
            A GUID that you obtain from your Splunk cluster when you create a new HEC endpoint.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.SplunkDestinationUpdate.ProcessingConfiguration">
            <summary>
            Gets and sets the property ProcessingConfiguration. 
            <para>
            The data processing configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.SplunkDestinationUpdate.RetryOptions">
            <summary>
            Gets and sets the property RetryOptions. 
            <para>
            The retry behavior in case Kinesis Data Firehose is unable to deliver data to Splunk
            or if it doesn't receive an acknowledgment of receipt from Splunk.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.SplunkDestinationUpdate.S3BackupMode">
            <summary>
            Gets and sets the property S3BackupMode. 
            <para>
            Specifies how you want Kinesis Data Firehose to back up documents to Amazon S3. When
            set to <code>FailedDocumentsOnly</code>, Kinesis Data Firehose writes any data that
            could not be indexed to the configured Amazon S3 destination. When set to <code>AllEvents</code>,
            Kinesis Data Firehose delivers all incoming records to Amazon S3, and also writes
            failed documents to Amazon S3. The default value is <code>FailedEventsOnly</code>.
            </para>
             
            <para>
            You can update this backup mode from <code>FailedEventsOnly</code> to <code>AllEvents</code>.
            You can't update it from <code>AllEvents</code> to <code>FailedEventsOnly</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.SplunkDestinationUpdate.S3Update">
            <summary>
            Gets and sets the property S3Update. 
            <para>
            Your update to the configuration of the backup Amazon S3 location.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.SplunkRetryOptions">
            <summary>
            Configures retry behavior in case Kinesis Data Firehose is unable to deliver documents
            to Splunk, or if it doesn't receive an acknowledgment from Splunk.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.SplunkRetryOptions.DurationInSeconds">
            <summary>
            Gets and sets the property DurationInSeconds. 
            <para>
            The total amount of time that Kinesis Data Firehose spends on retries. This duration
            starts after the initial attempt to send data to Splunk fails. It doesn't include
            the periods during which Kinesis Data Firehose waits for acknowledgment from Splunk
            after each attempt.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.StartDeliveryStreamEncryptionRequest">
            <summary>
            Container for the parameters to the StartDeliveryStreamEncryption operation.
            Enables server-side encryption (SSE) for the delivery stream. 
            
             
            <para>
            This operation is asynchronous. It returns immediately. When you invoke it, Kinesis
            Data Firehose first sets the encryption status of the stream to <code>ENABLING</code>,
            and then to <code>ENABLED</code>. The encryption status of a delivery stream is the
            <code>Status</code> property in <a>DeliveryStreamEncryptionConfiguration</a>. If the
            operation fails, the encryption status changes to <code>ENABLING_FAILED</code>. You
            can continue to read and write data to your delivery stream while the encryption status
            is <code>ENABLING</code>, but the data is not encrypted. It can take up to 5 seconds
            after the encryption status changes to <code>ENABLED</code> before all records written
            to the delivery stream are encrypted. To find out whether a record or a batch of records
            was encrypted, check the response elements <a>PutRecordOutput$Encrypted</a> and <a>PutRecordBatchOutput$Encrypted</a>,
            respectively.
            </para>
             
            <para>
            To check the encryption status of a delivery stream, use <a>DescribeDeliveryStream</a>.
            </para>
             
            <para>
            Even if encryption is currently enabled for a delivery stream, you can still invoke
            this operation on it to change the ARN of the CMK or both its type and ARN. If you
            invoke this method to change the CMK, and the old CMK is of type <code>CUSTOMER_MANAGED_CMK</code>,
            Kinesis Data Firehose schedules the grant it had on the old CMK for retirement. If
            the new CMK is of type <code>CUSTOMER_MANAGED_CMK</code>, Kinesis Data Firehose creates
            a grant that enables it to use the new CMK to encrypt and decrypt data and to manage
            the grant.
            </para>
             
            <para>
            If a delivery stream already has encryption enabled and then you invoke this operation
            to change the ARN of the CMK or both its type and ARN and you get <code>ENABLING_FAILED</code>,
            this only means that the attempt to change the CMK failed. In this case, encryption
            remains enabled with the old CMK.
            </para>
             
            <para>
            If the encryption status of your delivery stream is <code>ENABLING_FAILED</code>,
            you can invoke this operation again with a valid CMK. The CMK must be enabled and
            the key policy mustn't explicitly deny the permission for Kinesis Data Firehose to
            invoke KMS encrypt and decrypt operations.
            </para>
             
            <para>
            You can enable SSE for a delivery stream only if it's a delivery stream that uses
            <code>DirectPut</code> as its source. 
            </para>
             
            <para>
            The <code>StartDeliveryStreamEncryption</code> and <code>StopDeliveryStreamEncryption</code>
            operations have a combined limit of 25 calls per delivery stream per 24 hours. For
            example, you reach the limit if you call <code>StartDeliveryStreamEncryption</code>
            13 times and <code>StopDeliveryStreamEncryption</code> 12 times for the same delivery
            stream in a 24-hour period.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.StartDeliveryStreamEncryptionRequest.DeliveryStreamEncryptionConfigurationInput">
            <summary>
            Gets and sets the property DeliveryStreamEncryptionConfigurationInput. 
            <para>
            Used to specify the type and Amazon Resource Name (ARN) of the KMS key needed for
            Server-Side Encryption (SSE).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.StartDeliveryStreamEncryptionRequest.DeliveryStreamName">
            <summary>
            Gets and sets the property DeliveryStreamName. 
            <para>
            The name of the delivery stream for which you want to enable server-side encryption
            (SSE).
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.StartDeliveryStreamEncryptionResponse">
            <summary>
            This is the response object from the StartDeliveryStreamEncryption operation.
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.StopDeliveryStreamEncryptionRequest">
            <summary>
            Container for the parameters to the StopDeliveryStreamEncryption operation.
            Disables server-side encryption (SSE) for the delivery stream. 
            
             
            <para>
            This operation is asynchronous. It returns immediately. When you invoke it, Kinesis
            Data Firehose first sets the encryption status of the stream to <code>DISABLING</code>,
            and then to <code>DISABLED</code>. You can continue to read and write data to your
            stream while its status is <code>DISABLING</code>. It can take up to 5 seconds after
            the encryption status changes to <code>DISABLED</code> before all records written
            to the delivery stream are no longer subject to encryption. To find out whether a
            record or a batch of records was encrypted, check the response elements <a>PutRecordOutput$Encrypted</a>
            and <a>PutRecordBatchOutput$Encrypted</a>, respectively.
            </para>
             
            <para>
            To check the encryption state of a delivery stream, use <a>DescribeDeliveryStream</a>.
            
            </para>
             
            <para>
            If SSE is enabled using a customer managed CMK and then you invoke <code>StopDeliveryStreamEncryption</code>,
            Kinesis Data Firehose schedules the related KMS grant for retirement and then retires
            it after it ensures that it is finished delivering records to the destination.
            </para>
             
            <para>
            The <code>StartDeliveryStreamEncryption</code> and <code>StopDeliveryStreamEncryption</code>
            operations have a combined limit of 25 calls per delivery stream per 24 hours. For
            example, you reach the limit if you call <code>StartDeliveryStreamEncryption</code>
            13 times and <code>StopDeliveryStreamEncryption</code> 12 times for the same delivery
            stream in a 24-hour period.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.StopDeliveryStreamEncryptionRequest.DeliveryStreamName">
            <summary>
            Gets and sets the property DeliveryStreamName. 
            <para>
            The name of the delivery stream for which you want to disable server-side encryption
            (SSE).
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.StopDeliveryStreamEncryptionResponse">
            <summary>
            This is the response object from the StopDeliveryStreamEncryption operation.
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Tag">
            <summary>
            Metadata that you can assign to a delivery stream, consisting of a key-value pair.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Tag.Key">
            <summary>
            Gets and sets the property Key. 
            <para>
            A unique identifier for the tag. Maximum length: 128 characters. Valid characters:
            Unicode letters, digits, white space, _ . / = + - % @
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Tag.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            An optional string, which you can use to describe or define the tag. Maximum length:
            256 characters. Valid characters: Unicode letters, digits, white space, _ . / = +
            - % @
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.TagDeliveryStreamRequest">
            <summary>
            Container for the parameters to the TagDeliveryStream operation.
            Adds or updates tags for the specified delivery stream. A tag is a key-value pair
            that you can define and assign to AWS resources. If you specify a tag that already
            exists, the tag value is replaced with the value that you specify in the request.
            Tags are metadata. For example, you can add friendly names and descriptions or other
            types of information that can help you distinguish the delivery stream. For more information
            about tags, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html">Using
            Cost Allocation Tags</a> in the <i>AWS Billing and Cost Management User Guide</i>.
            
            
             
            <para>
            Each delivery stream can have up to 50 tags. 
            </para>
             
            <para>
            This operation has a limit of five transactions per second per account. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.TagDeliveryStreamRequest.DeliveryStreamName">
            <summary>
            Gets and sets the property DeliveryStreamName. 
            <para>
            The name of the delivery stream to which you want to add the tags.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.TagDeliveryStreamRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            A set of key-value pairs to use to create the tags.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.TagDeliveryStreamResponse">
            <summary>
            This is the response object from the TagDeliveryStream operation.
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.UntagDeliveryStreamRequest">
            <summary>
            Container for the parameters to the UntagDeliveryStream operation.
            Removes tags from the specified delivery stream. Removed tags are deleted, and you
            can't recover them after this operation successfully completes.
            
             
            <para>
            If you specify a tag that doesn't exist, the operation ignores it.
            </para>
             
            <para>
            This operation has a limit of five transactions per second per account. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.UntagDeliveryStreamRequest.DeliveryStreamName">
            <summary>
            Gets and sets the property DeliveryStreamName. 
            <para>
            The name of the delivery stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.UntagDeliveryStreamRequest.TagKeys">
            <summary>
            Gets and sets the property TagKeys. 
            <para>
            A list of tag keys. Each corresponding tag is removed from the delivery stream.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.UntagDeliveryStreamResponse">
            <summary>
            This is the response object from the UntagDeliveryStream operation.
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.UpdateDestinationRequest">
            <summary>
            Container for the parameters to the UpdateDestination operation.
            Updates the specified destination of the specified delivery stream.
            
             
            <para>
            Use this operation to change the destination type (for example, to replace the Amazon
            S3 destination with Amazon Redshift) or change the parameters associated with a destination
            (for example, to change the bucket name of the Amazon S3 destination). The update
            might not occur immediately. The target delivery stream remains active while the configurations
            are updated, so data writes to the delivery stream can continue during this process.
            The updated configurations are usually effective within a few minutes.
            </para>
             
            <para>
            Switching between Amazon ES and other services is not supported. For an Amazon ES
            destination, you can only update to another Amazon ES destination.
            </para>
             
            <para>
            If the destination type is the same, Kinesis Data Firehose merges the configuration
            parameters specified with the destination configuration that already exists on the
            delivery stream. If any of the parameters are not specified in the call, the existing
            values are retained. For example, in the Amazon S3 destination, if <a>EncryptionConfiguration</a>
            is not specified, then the existing <code>EncryptionConfiguration</code> is maintained
            on the destination.
            </para>
             
            <para>
            If the destination type is not the same, for example, changing the destination from
            Amazon S3 to Amazon Redshift, Kinesis Data Firehose does not merge any parameters.
            In this case, all parameters must be specified.
            </para>
             
            <para>
            Kinesis Data Firehose uses <code>CurrentDeliveryStreamVersionId</code> to avoid race
            conditions and conflicting merges. This is a required field, and the service updates
            the configuration only if the existing configuration has a version ID that matches.
            After the update is applied successfully, the version ID is updated, and can be retrieved
            using <a>DescribeDeliveryStream</a>. Use the new version ID to set <code>CurrentDeliveryStreamVersionId</code>
            in the next call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.UpdateDestinationRequest.AmazonopensearchserviceDestinationUpdate">
            <summary>
            Gets and sets the property AmazonopensearchserviceDestinationUpdate.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.UpdateDestinationRequest.CurrentDeliveryStreamVersionId">
            <summary>
            Gets and sets the property CurrentDeliveryStreamVersionId. 
            <para>
            Obtain this value from the <code>VersionId</code> result of <a>DeliveryStreamDescription</a>.
            This value is required, and helps the service perform conditional operations. For
            example, if there is an interleaving update and this value is null, then the update
            destination fails. After the update is successful, the <code>VersionId</code> value
            is updated. The service then performs a merge of the old configuration with the new
            configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.UpdateDestinationRequest.DeliveryStreamName">
            <summary>
            Gets and sets the property DeliveryStreamName. 
            <para>
            The name of the delivery stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.UpdateDestinationRequest.DestinationId">
            <summary>
            Gets and sets the property DestinationId. 
            <para>
            The ID of the destination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.UpdateDestinationRequest.ElasticsearchDestinationUpdate">
            <summary>
            Gets and sets the property ElasticsearchDestinationUpdate. 
            <para>
            Describes an update for a destination in Amazon ES.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.UpdateDestinationRequest.ExtendedS3DestinationUpdate">
            <summary>
            Gets and sets the property ExtendedS3DestinationUpdate. 
            <para>
            Describes an update for a destination in Amazon S3.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.UpdateDestinationRequest.HttpEndpointDestinationUpdate">
            <summary>
            Gets and sets the property HttpEndpointDestinationUpdate. 
            <para>
            Describes an update to the specified HTTP endpoint destination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.UpdateDestinationRequest.RedshiftDestinationUpdate">
            <summary>
            Gets and sets the property RedshiftDestinationUpdate. 
            <para>
            Describes an update for a destination in Amazon Redshift.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.UpdateDestinationRequest.S3DestinationUpdate">
            <summary>
            Gets and sets the property S3DestinationUpdate. 
            <para>
            [Deprecated] Describes an update for a destination in Amazon S3.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.UpdateDestinationRequest.SplunkDestinationUpdate">
            <summary>
            Gets and sets the property SplunkDestinationUpdate. 
            <para>
            Describes an update for a destination in Splunk.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.UpdateDestinationResponse">
            <summary>
            This is the response object from the UpdateDestination operation.
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.VpcConfiguration">
            <summary>
            The details of the VPC of the Amazon ES destination.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.VpcConfiguration.RoleARN">
            <summary>
            Gets and sets the property RoleARN. 
            <para>
            The ARN of the IAM role that you want the delivery stream to use to create endpoints
            in the destination VPC. You can use your existing Kinesis Data Firehose delivery role
            or you can specify a new role. In either case, make sure that the role trusts the
            Kinesis Data Firehose service principal and that it grants the following permissions:
            </para>
             <ul> <li> 
            <para>
             <code>ec2:DescribeVpcs</code> 
            </para>
             </li> <li> 
            <para>
             <code>ec2:DescribeVpcAttribute</code> 
            </para>
             </li> <li> 
            <para>
             <code>ec2:DescribeSubnets</code> 
            </para>
             </li> <li> 
            <para>
             <code>ec2:DescribeSecurityGroups</code> 
            </para>
             </li> <li> 
            <para>
             <code>ec2:DescribeNetworkInterfaces</code> 
            </para>
             </li> <li> 
            <para>
             <code>ec2:CreateNetworkInterface</code> 
            </para>
             </li> <li> 
            <para>
             <code>ec2:CreateNetworkInterfacePermission</code> 
            </para>
             </li> <li> 
            <para>
             <code>ec2:DeleteNetworkInterface</code> 
            </para>
             </li> </ul> 
            <para>
            If you revoke these permissions after you create the delivery stream, Kinesis Data
            Firehose can't scale out by creating more ENIs when necessary. You might therefore
            see a degradation in performance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.VpcConfiguration.SecurityGroupIds">
            <summary>
            Gets and sets the property SecurityGroupIds. 
            <para>
            The IDs of the security groups that you want Kinesis Data Firehose to use when it
            creates ENIs in the VPC of the Amazon ES destination. You can use the same security
            group that the Amazon ES domain uses or different ones. If you specify different security
            groups here, ensure that they allow outbound HTTPS traffic to the Amazon ES domain's
            security group. Also ensure that the Amazon ES domain's security group allows HTTPS
            traffic from the security groups specified here. If you use the same security group
            for both your delivery stream and the Amazon ES domain, make sure the security group
            inbound rule allows HTTPS traffic. For more information about security group rules,
            see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html#SecurityGroupRules">Security
            group rules</a> in the Amazon VPC documentation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.VpcConfiguration.SubnetIds">
            <summary>
            Gets and sets the property SubnetIds. 
            <para>
            The IDs of the subnets that you want Kinesis Data Firehose to use to create ENIs in
            the VPC of the Amazon ES destination. Make sure that the routing tables and inbound
            and outbound rules allow traffic to flow from the subnets whose IDs are specified
            here to the subnets that have the destination Amazon ES endpoints. Kinesis Data Firehose
            creates at least one ENI in each of the subnets that are specified here. Do not delete
            or modify these ENIs.
            </para>
             
            <para>
            The number of ENIs that Kinesis Data Firehose creates in the subnets specified here
            scales up and down automatically based on throughput. To enable Kinesis Data Firehose
            to scale up the number of ENIs to match throughput, ensure that you have sufficient
            quota. To help you calculate the quota you need, assume that Kinesis Data Firehose
            can create up to three ENIs for this delivery stream for each of the subnets specified
            here. For more information about ENI quota, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/amazon-vpc-limits.html#vpc-limits-enis">Network
            Interfaces </a> in the Amazon VPC Quotas topic.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.VpcConfigurationDescription">
            <summary>
            The details of the VPC of the Amazon ES destination.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.VpcConfigurationDescription.RoleARN">
            <summary>
            Gets and sets the property RoleARN. 
            <para>
            The ARN of the IAM role that the delivery stream uses to create endpoints in the destination
            VPC. You can use your existing Kinesis Data Firehose delivery role or you can specify
            a new role. In either case, make sure that the role trusts the Kinesis Data Firehose
            service principal and that it grants the following permissions:
            </para>
             <ul> <li> 
            <para>
             <code>ec2:DescribeVpcs</code> 
            </para>
             </li> <li> 
            <para>
             <code>ec2:DescribeVpcAttribute</code> 
            </para>
             </li> <li> 
            <para>
             <code>ec2:DescribeSubnets</code> 
            </para>
             </li> <li> 
            <para>
             <code>ec2:DescribeSecurityGroups</code> 
            </para>
             </li> <li> 
            <para>
             <code>ec2:DescribeNetworkInterfaces</code> 
            </para>
             </li> <li> 
            <para>
             <code>ec2:CreateNetworkInterface</code> 
            </para>
             </li> <li> 
            <para>
             <code>ec2:CreateNetworkInterfacePermission</code> 
            </para>
             </li> <li> 
            <para>
             <code>ec2:DeleteNetworkInterface</code> 
            </para>
             </li> </ul> 
            <para>
            If you revoke these permissions after you create the delivery stream, Kinesis Data
            Firehose can't scale out by creating more ENIs when necessary. You might therefore
            see a degradation in performance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.VpcConfigurationDescription.SecurityGroupIds">
            <summary>
            Gets and sets the property SecurityGroupIds. 
            <para>
            The IDs of the security groups that Kinesis Data Firehose uses when it creates ENIs
            in the VPC of the Amazon ES destination. You can use the same security group that
            the Amazon ES domain uses or different ones. If you specify different security groups,
            ensure that they allow outbound HTTPS traffic to the Amazon ES domain's security group.
            Also ensure that the Amazon ES domain's security group allows HTTPS traffic from the
            security groups specified here. If you use the same security group for both your delivery
            stream and the Amazon ES domain, make sure the security group inbound rule allows
            HTTPS traffic. For more information about security group rules, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html#SecurityGroupRules">Security
            group rules</a> in the Amazon VPC documentation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.VpcConfigurationDescription.SubnetIds">
            <summary>
            Gets and sets the property SubnetIds. 
            <para>
            The IDs of the subnets that Kinesis Data Firehose uses to create ENIs in the VPC of
            the Amazon ES destination. Make sure that the routing tables and inbound and outbound
            rules allow traffic to flow from the subnets whose IDs are specified here to the subnets
            that have the destination Amazon ES endpoints. Kinesis Data Firehose creates at least
            one ENI in each of the subnets that are specified here. Do not delete or modify these
            ENIs.
            </para>
             
            <para>
            The number of ENIs that Kinesis Data Firehose creates in the subnets specified here
            scales up and down automatically based on throughput. To enable Kinesis Data Firehose
            to scale up the number of ENIs to match throughput, ensure that you have sufficient
            quota. To help you calculate the quota you need, assume that Kinesis Data Firehose
            can create up to three ENIs for this delivery stream for each of the subnets specified
            here. For more information about ENI quota, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/amazon-vpc-limits.html#vpc-limits-enis">Network
            Interfaces </a> in the Amazon VPC Quotas topic.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.VpcConfigurationDescription.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The ID of the Amazon ES destination's VPC.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.AmazonopensearchserviceIndexRotationPeriod">
            <summary>
            Constants used for properties of type AmazonopensearchserviceIndexRotationPeriod.
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.AmazonopensearchserviceIndexRotationPeriod.NoRotation">
            <summary>
            Constant NoRotation for AmazonopensearchserviceIndexRotationPeriod
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.AmazonopensearchserviceIndexRotationPeriod.OneDay">
            <summary>
            Constant OneDay for AmazonopensearchserviceIndexRotationPeriod
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.AmazonopensearchserviceIndexRotationPeriod.OneHour">
            <summary>
            Constant OneHour for AmazonopensearchserviceIndexRotationPeriod
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.AmazonopensearchserviceIndexRotationPeriod.OneMonth">
            <summary>
            Constant OneMonth for AmazonopensearchserviceIndexRotationPeriod
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.AmazonopensearchserviceIndexRotationPeriod.OneWeek">
            <summary>
            Constant OneWeek for AmazonopensearchserviceIndexRotationPeriod
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonopensearchserviceIndexRotationPeriod.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonopensearchserviceIndexRotationPeriod.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonopensearchserviceIndexRotationPeriod.op_Implicit(System.String)~Amazon.KinesisFirehose.AmazonopensearchserviceIndexRotationPeriod">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.KinesisFirehose.AmazonopensearchserviceS3BackupMode">
            <summary>
            Constants used for properties of type AmazonopensearchserviceS3BackupMode.
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.AmazonopensearchserviceS3BackupMode.AllDocuments">
            <summary>
            Constant AllDocuments for AmazonopensearchserviceS3BackupMode
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.AmazonopensearchserviceS3BackupMode.FailedDocumentsOnly">
            <summary>
            Constant FailedDocumentsOnly for AmazonopensearchserviceS3BackupMode
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonopensearchserviceS3BackupMode.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonopensearchserviceS3BackupMode.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonopensearchserviceS3BackupMode.op_Implicit(System.String)~Amazon.KinesisFirehose.AmazonopensearchserviceS3BackupMode">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.KinesisFirehose.CompressionFormat">
            <summary>
            Constants used for properties of type CompressionFormat.
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.CompressionFormat.GZIP">
            <summary>
            Constant GZIP for CompressionFormat
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.CompressionFormat.HADOOP_SNAPPY">
            <summary>
            Constant HADOOP_SNAPPY for CompressionFormat
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.CompressionFormat.Snappy">
            <summary>
            Constant Snappy for CompressionFormat
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.CompressionFormat.UNCOMPRESSED">
            <summary>
            Constant UNCOMPRESSED for CompressionFormat
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.CompressionFormat.ZIP">
            <summary>
            Constant ZIP for CompressionFormat
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.CompressionFormat.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.CompressionFormat.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.CompressionFormat.op_Implicit(System.String)~Amazon.KinesisFirehose.CompressionFormat">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.KinesisFirehose.ContentEncoding">
            <summary>
            Constants used for properties of type ContentEncoding.
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.ContentEncoding.GZIP">
            <summary>
            Constant GZIP for ContentEncoding
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.ContentEncoding.NONE">
            <summary>
            Constant NONE for ContentEncoding
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.ContentEncoding.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.ContentEncoding.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.ContentEncoding.op_Implicit(System.String)~Amazon.KinesisFirehose.ContentEncoding">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.KinesisFirehose.DeliveryStreamEncryptionStatus">
            <summary>
            Constants used for properties of type DeliveryStreamEncryptionStatus.
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.DeliveryStreamEncryptionStatus.DISABLED">
            <summary>
            Constant DISABLED for DeliveryStreamEncryptionStatus
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.DeliveryStreamEncryptionStatus.DISABLING">
            <summary>
            Constant DISABLING for DeliveryStreamEncryptionStatus
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.DeliveryStreamEncryptionStatus.DISABLING_FAILED">
            <summary>
            Constant DISABLING_FAILED for DeliveryStreamEncryptionStatus
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.DeliveryStreamEncryptionStatus.ENABLED">
            <summary>
            Constant ENABLED for DeliveryStreamEncryptionStatus
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.DeliveryStreamEncryptionStatus.ENABLING">
            <summary>
            Constant ENABLING for DeliveryStreamEncryptionStatus
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.DeliveryStreamEncryptionStatus.ENABLING_FAILED">
            <summary>
            Constant ENABLING_FAILED for DeliveryStreamEncryptionStatus
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.DeliveryStreamEncryptionStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.DeliveryStreamEncryptionStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.DeliveryStreamEncryptionStatus.op_Implicit(System.String)~Amazon.KinesisFirehose.DeliveryStreamEncryptionStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.KinesisFirehose.DeliveryStreamFailureType">
            <summary>
            Constants used for properties of type DeliveryStreamFailureType.
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.DeliveryStreamFailureType.CREATE_ENI_FAILED">
            <summary>
            Constant CREATE_ENI_FAILED for DeliveryStreamFailureType
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.DeliveryStreamFailureType.CREATE_KMS_GRANT_FAILED">
            <summary>
            Constant CREATE_KMS_GRANT_FAILED for DeliveryStreamFailureType
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.DeliveryStreamFailureType.DELETE_ENI_FAILED">
            <summary>
            Constant DELETE_ENI_FAILED for DeliveryStreamFailureType
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.DeliveryStreamFailureType.DISABLED_KMS_KEY">
            <summary>
            Constant DISABLED_KMS_KEY for DeliveryStreamFailureType
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.DeliveryStreamFailureType.ENI_ACCESS_DENIED">
            <summary>
            Constant ENI_ACCESS_DENIED for DeliveryStreamFailureType
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.DeliveryStreamFailureType.INVALID_KMS_KEY">
            <summary>
            Constant INVALID_KMS_KEY for DeliveryStreamFailureType
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.DeliveryStreamFailureType.KMS_ACCESS_DENIED">
            <summary>
            Constant KMS_ACCESS_DENIED for DeliveryStreamFailureType
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.DeliveryStreamFailureType.KMS_KEY_NOT_FOUND">
            <summary>
            Constant KMS_KEY_NOT_FOUND for DeliveryStreamFailureType
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.DeliveryStreamFailureType.KMS_OPT_IN_REQUIRED">
            <summary>
            Constant KMS_OPT_IN_REQUIRED for DeliveryStreamFailureType
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.DeliveryStreamFailureType.RETIRE_KMS_GRANT_FAILED">
            <summary>
            Constant RETIRE_KMS_GRANT_FAILED for DeliveryStreamFailureType
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.DeliveryStreamFailureType.SECURITY_GROUP_ACCESS_DENIED">
            <summary>
            Constant SECURITY_GROUP_ACCESS_DENIED for DeliveryStreamFailureType
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.DeliveryStreamFailureType.SECURITY_GROUP_NOT_FOUND">
            <summary>
            Constant SECURITY_GROUP_NOT_FOUND for DeliveryStreamFailureType
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.DeliveryStreamFailureType.SUBNET_ACCESS_DENIED">
            <summary>
            Constant SUBNET_ACCESS_DENIED for DeliveryStreamFailureType
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.DeliveryStreamFailureType.SUBNET_NOT_FOUND">
            <summary>
            Constant SUBNET_NOT_FOUND for DeliveryStreamFailureType
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.DeliveryStreamFailureType.UNKNOWN_ERROR">
            <summary>
            Constant UNKNOWN_ERROR for DeliveryStreamFailureType
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.DeliveryStreamFailureType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.DeliveryStreamFailureType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.DeliveryStreamFailureType.op_Implicit(System.String)~Amazon.KinesisFirehose.DeliveryStreamFailureType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.KinesisFirehose.DeliveryStreamStatus">
            <summary>
            Constants used for properties of type DeliveryStreamStatus.
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.DeliveryStreamStatus.ACTIVE">
            <summary>
            Constant ACTIVE for DeliveryStreamStatus
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.DeliveryStreamStatus.CREATING">
            <summary>
            Constant CREATING for DeliveryStreamStatus
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.DeliveryStreamStatus.CREATING_FAILED">
            <summary>
            Constant CREATING_FAILED for DeliveryStreamStatus
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.DeliveryStreamStatus.DELETING">
            <summary>
            Constant DELETING for DeliveryStreamStatus
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.DeliveryStreamStatus.DELETING_FAILED">
            <summary>
            Constant DELETING_FAILED for DeliveryStreamStatus
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.DeliveryStreamStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.DeliveryStreamStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.DeliveryStreamStatus.op_Implicit(System.String)~Amazon.KinesisFirehose.DeliveryStreamStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.KinesisFirehose.DeliveryStreamType">
            <summary>
            Constants used for properties of type DeliveryStreamType.
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.DeliveryStreamType.DirectPut">
            <summary>
            Constant DirectPut for DeliveryStreamType
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.DeliveryStreamType.KinesisStreamAsSource">
            <summary>
            Constant KinesisStreamAsSource for DeliveryStreamType
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.DeliveryStreamType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.DeliveryStreamType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.DeliveryStreamType.op_Implicit(System.String)~Amazon.KinesisFirehose.DeliveryStreamType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.KinesisFirehose.ElasticsearchIndexRotationPeriod">
            <summary>
            Constants used for properties of type ElasticsearchIndexRotationPeriod.
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.ElasticsearchIndexRotationPeriod.NoRotation">
            <summary>
            Constant NoRotation for ElasticsearchIndexRotationPeriod
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.ElasticsearchIndexRotationPeriod.OneDay">
            <summary>
            Constant OneDay for ElasticsearchIndexRotationPeriod
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.ElasticsearchIndexRotationPeriod.OneHour">
            <summary>
            Constant OneHour for ElasticsearchIndexRotationPeriod
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.ElasticsearchIndexRotationPeriod.OneMonth">
            <summary>
            Constant OneMonth for ElasticsearchIndexRotationPeriod
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.ElasticsearchIndexRotationPeriod.OneWeek">
            <summary>
            Constant OneWeek for ElasticsearchIndexRotationPeriod
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.ElasticsearchIndexRotationPeriod.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.ElasticsearchIndexRotationPeriod.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.ElasticsearchIndexRotationPeriod.op_Implicit(System.String)~Amazon.KinesisFirehose.ElasticsearchIndexRotationPeriod">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.KinesisFirehose.ElasticsearchS3BackupMode">
            <summary>
            Constants used for properties of type ElasticsearchS3BackupMode.
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.ElasticsearchS3BackupMode.AllDocuments">
            <summary>
            Constant AllDocuments for ElasticsearchS3BackupMode
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.ElasticsearchS3BackupMode.FailedDocumentsOnly">
            <summary>
            Constant FailedDocumentsOnly for ElasticsearchS3BackupMode
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.ElasticsearchS3BackupMode.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.ElasticsearchS3BackupMode.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.ElasticsearchS3BackupMode.op_Implicit(System.String)~Amazon.KinesisFirehose.ElasticsearchS3BackupMode">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.KinesisFirehose.HECEndpointType">
            <summary>
            Constants used for properties of type HECEndpointType.
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.HECEndpointType.Event">
            <summary>
            Constant Event for HECEndpointType
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.HECEndpointType.Raw">
            <summary>
            Constant Raw for HECEndpointType
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.HECEndpointType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.HECEndpointType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.HECEndpointType.op_Implicit(System.String)~Amazon.KinesisFirehose.HECEndpointType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.KinesisFirehose.HttpEndpointS3BackupMode">
            <summary>
            Constants used for properties of type HttpEndpointS3BackupMode.
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.HttpEndpointS3BackupMode.AllData">
            <summary>
            Constant AllData for HttpEndpointS3BackupMode
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.HttpEndpointS3BackupMode.FailedDataOnly">
            <summary>
            Constant FailedDataOnly for HttpEndpointS3BackupMode
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.HttpEndpointS3BackupMode.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.HttpEndpointS3BackupMode.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.HttpEndpointS3BackupMode.op_Implicit(System.String)~Amazon.KinesisFirehose.HttpEndpointS3BackupMode">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.KinesisFirehose.KeyType">
            <summary>
            Constants used for properties of type KeyType.
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.KeyType.AWS_OWNED_CMK">
            <summary>
            Constant AWS_OWNED_CMK for KeyType
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.KeyType.CUSTOMER_MANAGED_CMK">
            <summary>
            Constant CUSTOMER_MANAGED_CMK for KeyType
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.KeyType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.KeyType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.KeyType.op_Implicit(System.String)~Amazon.KinesisFirehose.KeyType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.KinesisFirehose.NoEncryptionConfig">
            <summary>
            Constants used for properties of type NoEncryptionConfig.
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.NoEncryptionConfig.NoEncryption">
            <summary>
            Constant NoEncryption for NoEncryptionConfig
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.NoEncryptionConfig.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.NoEncryptionConfig.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.NoEncryptionConfig.op_Implicit(System.String)~Amazon.KinesisFirehose.NoEncryptionConfig">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.KinesisFirehose.OrcCompression">
            <summary>
            Constants used for properties of type OrcCompression.
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.OrcCompression.NONE">
            <summary>
            Constant NONE for OrcCompression
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.OrcCompression.SNAPPY">
            <summary>
            Constant SNAPPY for OrcCompression
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.OrcCompression.ZLIB">
            <summary>
            Constant ZLIB for OrcCompression
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.OrcCompression.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.OrcCompression.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.OrcCompression.op_Implicit(System.String)~Amazon.KinesisFirehose.OrcCompression">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.KinesisFirehose.OrcFormatVersion">
            <summary>
            Constants used for properties of type OrcFormatVersion.
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.OrcFormatVersion.V0_11">
            <summary>
            Constant V0_11 for OrcFormatVersion
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.OrcFormatVersion.V0_12">
            <summary>
            Constant V0_12 for OrcFormatVersion
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.OrcFormatVersion.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.OrcFormatVersion.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.OrcFormatVersion.op_Implicit(System.String)~Amazon.KinesisFirehose.OrcFormatVersion">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.KinesisFirehose.ParquetCompression">
            <summary>
            Constants used for properties of type ParquetCompression.
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.ParquetCompression.GZIP">
            <summary>
            Constant GZIP for ParquetCompression
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.ParquetCompression.SNAPPY">
            <summary>
            Constant SNAPPY for ParquetCompression
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.ParquetCompression.UNCOMPRESSED">
            <summary>
            Constant UNCOMPRESSED for ParquetCompression
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.ParquetCompression.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.ParquetCompression.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.ParquetCompression.op_Implicit(System.String)~Amazon.KinesisFirehose.ParquetCompression">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.KinesisFirehose.ParquetWriterVersion">
            <summary>
            Constants used for properties of type ParquetWriterVersion.
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.ParquetWriterVersion.V1">
            <summary>
            Constant V1 for ParquetWriterVersion
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.ParquetWriterVersion.V2">
            <summary>
            Constant V2 for ParquetWriterVersion
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.ParquetWriterVersion.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.ParquetWriterVersion.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.ParquetWriterVersion.op_Implicit(System.String)~Amazon.KinesisFirehose.ParquetWriterVersion">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.KinesisFirehose.ProcessorParameterName">
            <summary>
            Constants used for properties of type ProcessorParameterName.
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.ProcessorParameterName.BufferIntervalInSeconds">
            <summary>
            Constant BufferIntervalInSeconds for ProcessorParameterName
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.ProcessorParameterName.BufferSizeInMBs">
            <summary>
            Constant BufferSizeInMBs for ProcessorParameterName
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.ProcessorParameterName.Delimiter">
            <summary>
            Constant Delimiter for ProcessorParameterName
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.ProcessorParameterName.JsonParsingEngine">
            <summary>
            Constant JsonParsingEngine for ProcessorParameterName
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.ProcessorParameterName.LambdaArn">
            <summary>
            Constant LambdaArn for ProcessorParameterName
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.ProcessorParameterName.MetadataExtractionQuery">
            <summary>
            Constant MetadataExtractionQuery for ProcessorParameterName
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.ProcessorParameterName.NumberOfRetries">
            <summary>
            Constant NumberOfRetries for ProcessorParameterName
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.ProcessorParameterName.RoleArn">
            <summary>
            Constant RoleArn for ProcessorParameterName
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.ProcessorParameterName.SubRecordType">
            <summary>
            Constant SubRecordType for ProcessorParameterName
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.ProcessorParameterName.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.ProcessorParameterName.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.ProcessorParameterName.op_Implicit(System.String)~Amazon.KinesisFirehose.ProcessorParameterName">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.KinesisFirehose.ProcessorType">
            <summary>
            Constants used for properties of type ProcessorType.
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.ProcessorType.AppendDelimiterToRecord">
            <summary>
            Constant AppendDelimiterToRecord for ProcessorType
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.ProcessorType.Lambda">
            <summary>
            Constant Lambda for ProcessorType
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.ProcessorType.MetadataExtraction">
            <summary>
            Constant MetadataExtraction for ProcessorType
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.ProcessorType.RecordDeAggregation">
            <summary>
            Constant RecordDeAggregation for ProcessorType
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.ProcessorType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.ProcessorType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.ProcessorType.op_Implicit(System.String)~Amazon.KinesisFirehose.ProcessorType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.KinesisFirehose.RedshiftS3BackupMode">
            <summary>
            Constants used for properties of type RedshiftS3BackupMode.
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.RedshiftS3BackupMode.Disabled">
            <summary>
            Constant Disabled for RedshiftS3BackupMode
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.RedshiftS3BackupMode.Enabled">
            <summary>
            Constant Enabled for RedshiftS3BackupMode
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.RedshiftS3BackupMode.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.RedshiftS3BackupMode.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.RedshiftS3BackupMode.op_Implicit(System.String)~Amazon.KinesisFirehose.RedshiftS3BackupMode">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.KinesisFirehose.S3BackupMode">
            <summary>
            Constants used for properties of type S3BackupMode.
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.S3BackupMode.Disabled">
            <summary>
            Constant Disabled for S3BackupMode
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.S3BackupMode.Enabled">
            <summary>
            Constant Enabled for S3BackupMode
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.S3BackupMode.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.S3BackupMode.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.S3BackupMode.op_Implicit(System.String)~Amazon.KinesisFirehose.S3BackupMode">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.KinesisFirehose.SplunkS3BackupMode">
            <summary>
            Constants used for properties of type SplunkS3BackupMode.
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.SplunkS3BackupMode.AllEvents">
            <summary>
            Constant AllEvents for SplunkS3BackupMode
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.SplunkS3BackupMode.FailedEventsOnly">
            <summary>
            Constant FailedEventsOnly for SplunkS3BackupMode
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.SplunkS3BackupMode.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.SplunkS3BackupMode.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.SplunkS3BackupMode.op_Implicit(System.String)~Amazon.KinesisFirehose.SplunkS3BackupMode">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient">
             <summary>
             Implementation for accessing KinesisFirehose
            
             Amazon Kinesis Data Firehose API Reference 
             <para>
             Amazon Kinesis Data Firehose is a fully managed service that delivers real-time streaming
             data to destinations such as Amazon Simple Storage Service (Amazon S3), Amazon Elasticsearch
             Service (Amazon ES), Amazon Redshift, and Splunk.
             </para>
             </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.#ctor">
             <summary>
             Constructs AmazonKinesisFirehoseClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonKinesisFirehoseClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.#ctor(Amazon.KinesisFirehose.AmazonKinesisFirehoseConfig)">
             <summary>
             Constructs AmazonKinesisFirehoseClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonKinesisFirehoseClient Configuration Object</param>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonKinesisFirehoseClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonKinesisFirehoseClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.KinesisFirehose.AmazonKinesisFirehoseConfig)">
            <summary>
            Constructs AmazonKinesisFirehoseClient with AWS Credentials and an
            AmazonKinesisFirehoseClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonKinesisFirehoseClient Configuration Object</param>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonKinesisFirehoseClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonKinesisFirehoseClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.#ctor(System.String,System.String,Amazon.KinesisFirehose.AmazonKinesisFirehoseConfig)">
            <summary>
            Constructs AmazonKinesisFirehoseClient with AWS Access Key ID, AWS Secret Key and an
            AmazonKinesisFirehoseClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonKinesisFirehoseClient Configuration Object</param>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonKinesisFirehoseClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonKinesisFirehoseClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.#ctor(System.String,System.String,System.String,Amazon.KinesisFirehose.AmazonKinesisFirehoseConfig)">
            <summary>
            Constructs AmazonKinesisFirehoseClient with AWS Access Key ID, AWS Secret Key and an
            AmazonKinesisFirehoseClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonKinesisFirehoseClient Configuration Object</param>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.ServiceMetadata">
            <summary>
            Capture metadata for the service.
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.CreateDeliveryStream(Amazon.KinesisFirehose.Model.CreateDeliveryStreamRequest)">
            <summary>
            Creates a Kinesis Data Firehose delivery stream.
            
             
            <para>
            By default, you can create up to 50 delivery streams per AWS Region.
            </para>
             
            <para>
            This is an asynchronous operation that immediately returns. The initial status of
            the delivery stream is <code>CREATING</code>. After the delivery stream is created,
            its status is <code>ACTIVE</code> and it now accepts data. If the delivery stream
            creation fails, the status transitions to <code>CREATING_FAILED</code>. Attempts to
            send data to a delivery stream that is not in the <code>ACTIVE</code> state cause
            an exception. To check the state of a delivery stream, use <a>DescribeDeliveryStream</a>.
            </para>
             
            <para>
            If the status of a delivery stream is <code>CREATING_FAILED</code>, this status doesn't
            change, and you can't invoke <code>CreateDeliveryStream</code> again on it. However,
            you can invoke the <a>DeleteDeliveryStream</a> operation to delete it.
            </para>
             
            <para>
            A Kinesis Data Firehose delivery stream can be configured to receive records directly
            from providers using <a>PutRecord</a> or <a>PutRecordBatch</a>, or it can be configured
            to use an existing Kinesis stream as its source. To specify a Kinesis data stream
            as input, set the <code>DeliveryStreamType</code> parameter to <code>KinesisStreamAsSource</code>,
            and provide the Kinesis stream Amazon Resource Name (ARN) and role ARN in the <code>KinesisStreamSourceConfiguration</code>
            parameter.
            </para>
             
            <para>
            To create a delivery stream with server-side encryption (SSE) enabled, include <a>DeliveryStreamEncryptionConfigurationInput</a>
            in your request. This is optional. You can also invoke <a>StartDeliveryStreamEncryption</a>
            to turn on SSE for an existing delivery stream that doesn't have SSE enabled.
            </para>
             
            <para>
            A delivery stream is configured with a single destination: Amazon S3, Amazon ES, Amazon
            Redshift, or Splunk. You must specify only one of the following destination configuration
            parameters: <code>ExtendedS3DestinationConfiguration</code>, <code>S3DestinationConfiguration</code>,
            <code>ElasticsearchDestinationConfiguration</code>, <code>RedshiftDestinationConfiguration</code>,
            or <code>SplunkDestinationConfiguration</code>.
            </para>
             
            <para>
            When you specify <code>S3DestinationConfiguration</code>, you can also provide the
            following optional values: BufferingHints, <code>EncryptionConfiguration</code>, and
            <code>CompressionFormat</code>. By default, if no <code>BufferingHints</code> value
            is provided, Kinesis Data Firehose buffers data up to 5 MB or for 5 minutes, whichever
            condition is satisfied first. <code>BufferingHints</code> is a hint, so there are
            some cases where the service cannot adhere to these conditions strictly. For example,
            record boundaries might be such that the size is a little over or under the configured
            buffering size. By default, no encryption is performed. We strongly recommend that
            you enable encryption to ensure secure data storage in Amazon S3.
            </para>
             
            <para>
            A few notes about Amazon Redshift as a destination:
            </para>
             <ul> <li> 
            <para>
            An Amazon Redshift destination requires an S3 bucket as intermediate location. Kinesis
            Data Firehose first delivers data to Amazon S3 and then uses <code>COPY</code> syntax
            to load data into an Amazon Redshift table. This is specified in the <code>RedshiftDestinationConfiguration.S3Configuration</code>
            parameter.
            </para>
             </li> <li> 
            <para>
            The compression formats <code>SNAPPY</code> or <code>ZIP</code> cannot be specified
            in <code>RedshiftDestinationConfiguration.S3Configuration</code> because the Amazon
            Redshift <code>COPY</code> operation that reads from the S3 bucket doesn't support
            these compression formats.
            </para>
             </li> <li> 
            <para>
            We strongly recommend that you use the user name and password you provide exclusively
            with Kinesis Data Firehose, and that the permissions for the account are restricted
            for Amazon Redshift <code>INSERT</code> permissions.
            </para>
             </li> </ul> 
            <para>
            Kinesis Data Firehose assumes the IAM role that is configured as part of the destination.
            The role should allow the Kinesis Data Firehose principal to assume the role, and
            the role should have permissions that allow the service to deliver the data. For more
            information, see <a href="https://docs.aws.amazon.com/firehose/latest/dev/controlling-access.html#using-iam-s3">Grant
            Kinesis Data Firehose Access to an Amazon S3 Destination</a> in the <i>Amazon Kinesis
            Data Firehose Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDeliveryStream service method.</param>
            
            <returns>The response from the CreateDeliveryStream service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidArgumentException">
            The specified input parameter has a value that is not valid.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidKMSResourceException">
            Kinesis Data Firehose throws this exception when an attempt to put records or to start
            or stop delivery stream encryption fails. This happens when the KMS service throws
            one of the following exception types: <code>AccessDeniedException</code>, <code>InvalidStateException</code>,
            <code>DisabledException</code>, or <code>NotFoundException</code>.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.LimitExceededException">
            You have already reached the limit for a requested resource.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceInUseException">
            The resource is already in use and not available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/CreateDeliveryStream">REST API Reference for CreateDeliveryStream Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.CreateDeliveryStreamAsync(Amazon.KinesisFirehose.Model.CreateDeliveryStreamRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a Kinesis Data Firehose delivery stream.
            
             
            <para>
            By default, you can create up to 50 delivery streams per AWS Region.
            </para>
             
            <para>
            This is an asynchronous operation that immediately returns. The initial status of
            the delivery stream is <code>CREATING</code>. After the delivery stream is created,
            its status is <code>ACTIVE</code> and it now accepts data. If the delivery stream
            creation fails, the status transitions to <code>CREATING_FAILED</code>. Attempts to
            send data to a delivery stream that is not in the <code>ACTIVE</code> state cause
            an exception. To check the state of a delivery stream, use <a>DescribeDeliveryStream</a>.
            </para>
             
            <para>
            If the status of a delivery stream is <code>CREATING_FAILED</code>, this status doesn't
            change, and you can't invoke <code>CreateDeliveryStream</code> again on it. However,
            you can invoke the <a>DeleteDeliveryStream</a> operation to delete it.
            </para>
             
            <para>
            A Kinesis Data Firehose delivery stream can be configured to receive records directly
            from providers using <a>PutRecord</a> or <a>PutRecordBatch</a>, or it can be configured
            to use an existing Kinesis stream as its source. To specify a Kinesis data stream
            as input, set the <code>DeliveryStreamType</code> parameter to <code>KinesisStreamAsSource</code>,
            and provide the Kinesis stream Amazon Resource Name (ARN) and role ARN in the <code>KinesisStreamSourceConfiguration</code>
            parameter.
            </para>
             
            <para>
            To create a delivery stream with server-side encryption (SSE) enabled, include <a>DeliveryStreamEncryptionConfigurationInput</a>
            in your request. This is optional. You can also invoke <a>StartDeliveryStreamEncryption</a>
            to turn on SSE for an existing delivery stream that doesn't have SSE enabled.
            </para>
             
            <para>
            A delivery stream is configured with a single destination: Amazon S3, Amazon ES, Amazon
            Redshift, or Splunk. You must specify only one of the following destination configuration
            parameters: <code>ExtendedS3DestinationConfiguration</code>, <code>S3DestinationConfiguration</code>,
            <code>ElasticsearchDestinationConfiguration</code>, <code>RedshiftDestinationConfiguration</code>,
            or <code>SplunkDestinationConfiguration</code>.
            </para>
             
            <para>
            When you specify <code>S3DestinationConfiguration</code>, you can also provide the
            following optional values: BufferingHints, <code>EncryptionConfiguration</code>, and
            <code>CompressionFormat</code>. By default, if no <code>BufferingHints</code> value
            is provided, Kinesis Data Firehose buffers data up to 5 MB or for 5 minutes, whichever
            condition is satisfied first. <code>BufferingHints</code> is a hint, so there are
            some cases where the service cannot adhere to these conditions strictly. For example,
            record boundaries might be such that the size is a little over or under the configured
            buffering size. By default, no encryption is performed. We strongly recommend that
            you enable encryption to ensure secure data storage in Amazon S3.
            </para>
             
            <para>
            A few notes about Amazon Redshift as a destination:
            </para>
             <ul> <li> 
            <para>
            An Amazon Redshift destination requires an S3 bucket as intermediate location. Kinesis
            Data Firehose first delivers data to Amazon S3 and then uses <code>COPY</code> syntax
            to load data into an Amazon Redshift table. This is specified in the <code>RedshiftDestinationConfiguration.S3Configuration</code>
            parameter.
            </para>
             </li> <li> 
            <para>
            The compression formats <code>SNAPPY</code> or <code>ZIP</code> cannot be specified
            in <code>RedshiftDestinationConfiguration.S3Configuration</code> because the Amazon
            Redshift <code>COPY</code> operation that reads from the S3 bucket doesn't support
            these compression formats.
            </para>
             </li> <li> 
            <para>
            We strongly recommend that you use the user name and password you provide exclusively
            with Kinesis Data Firehose, and that the permissions for the account are restricted
            for Amazon Redshift <code>INSERT</code> permissions.
            </para>
             </li> </ul> 
            <para>
            Kinesis Data Firehose assumes the IAM role that is configured as part of the destination.
            The role should allow the Kinesis Data Firehose principal to assume the role, and
            the role should have permissions that allow the service to deliver the data. For more
            information, see <a href="https://docs.aws.amazon.com/firehose/latest/dev/controlling-access.html#using-iam-s3">Grant
            Kinesis Data Firehose Access to an Amazon S3 Destination</a> in the <i>Amazon Kinesis
            Data Firehose Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDeliveryStream service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateDeliveryStream service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidArgumentException">
            The specified input parameter has a value that is not valid.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidKMSResourceException">
            Kinesis Data Firehose throws this exception when an attempt to put records or to start
            or stop delivery stream encryption fails. This happens when the KMS service throws
            one of the following exception types: <code>AccessDeniedException</code>, <code>InvalidStateException</code>,
            <code>DisabledException</code>, or <code>NotFoundException</code>.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.LimitExceededException">
            You have already reached the limit for a requested resource.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceInUseException">
            The resource is already in use and not available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/CreateDeliveryStream">REST API Reference for CreateDeliveryStream Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.DeleteDeliveryStream(System.String)">
            <summary>
            Deletes a delivery stream and its data.
            
             
            <para>
            To check the state of a delivery stream, use <a>DescribeDeliveryStream</a>. You can
            delete a delivery stream only if it is in one of the following states: <code>ACTIVE</code>,
            <code>DELETING</code>, <code>CREATING_FAILED</code>, or <code>DELETING_FAILED</code>.
            You can't delete a delivery stream that is in the <code>CREATING</code> state. While
            the deletion request is in process, the delivery stream is in the <code>DELETING</code>
            state.
            </para>
             
            <para>
            While the delivery stream is in the <code>DELETING</code> state, the service might
            continue to accept records, but it doesn't make any guarantees with respect to delivering
            the data. Therefore, as a best practice, first stop any applications that are sending
            records before you delete a delivery stream.
            </para>
            </summary>
            <param name="deliveryStreamName">The name of the delivery stream.</param>
            
            <returns>The response from the DeleteDeliveryStream service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceInUseException">
            The resource is already in use and not available for this operation.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/DeleteDeliveryStream">REST API Reference for DeleteDeliveryStream Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.DeleteDeliveryStream(Amazon.KinesisFirehose.Model.DeleteDeliveryStreamRequest)">
            <summary>
            Deletes a delivery stream and its data.
            
             
            <para>
            To check the state of a delivery stream, use <a>DescribeDeliveryStream</a>. You can
            delete a delivery stream only if it is in one of the following states: <code>ACTIVE</code>,
            <code>DELETING</code>, <code>CREATING_FAILED</code>, or <code>DELETING_FAILED</code>.
            You can't delete a delivery stream that is in the <code>CREATING</code> state. While
            the deletion request is in process, the delivery stream is in the <code>DELETING</code>
            state.
            </para>
             
            <para>
            While the delivery stream is in the <code>DELETING</code> state, the service might
            continue to accept records, but it doesn't make any guarantees with respect to delivering
            the data. Therefore, as a best practice, first stop any applications that are sending
            records before you delete a delivery stream.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDeliveryStream service method.</param>
            
            <returns>The response from the DeleteDeliveryStream service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceInUseException">
            The resource is already in use and not available for this operation.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/DeleteDeliveryStream">REST API Reference for DeleteDeliveryStream Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.DeleteDeliveryStreamAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a delivery stream and its data.
            
             
            <para>
            To check the state of a delivery stream, use <a>DescribeDeliveryStream</a>. You can
            delete a delivery stream only if it is in one of the following states: <code>ACTIVE</code>,
            <code>DELETING</code>, <code>CREATING_FAILED</code>, or <code>DELETING_FAILED</code>.
            You can't delete a delivery stream that is in the <code>CREATING</code> state. While
            the deletion request is in process, the delivery stream is in the <code>DELETING</code>
            state.
            </para>
             
            <para>
            While the delivery stream is in the <code>DELETING</code> state, the service might
            continue to accept records, but it doesn't make any guarantees with respect to delivering
            the data. Therefore, as a best practice, first stop any applications that are sending
            records before you delete a delivery stream.
            </para>
            </summary>
            <param name="deliveryStreamName">The name of the delivery stream.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteDeliveryStream service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceInUseException">
            The resource is already in use and not available for this operation.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/DeleteDeliveryStream">REST API Reference for DeleteDeliveryStream Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.DeleteDeliveryStreamAsync(Amazon.KinesisFirehose.Model.DeleteDeliveryStreamRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a delivery stream and its data.
            
             
            <para>
            To check the state of a delivery stream, use <a>DescribeDeliveryStream</a>. You can
            delete a delivery stream only if it is in one of the following states: <code>ACTIVE</code>,
            <code>DELETING</code>, <code>CREATING_FAILED</code>, or <code>DELETING_FAILED</code>.
            You can't delete a delivery stream that is in the <code>CREATING</code> state. While
            the deletion request is in process, the delivery stream is in the <code>DELETING</code>
            state.
            </para>
             
            <para>
            While the delivery stream is in the <code>DELETING</code> state, the service might
            continue to accept records, but it doesn't make any guarantees with respect to delivering
            the data. Therefore, as a best practice, first stop any applications that are sending
            records before you delete a delivery stream.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDeliveryStream service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteDeliveryStream service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceInUseException">
            The resource is already in use and not available for this operation.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/DeleteDeliveryStream">REST API Reference for DeleteDeliveryStream Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.DescribeDeliveryStream(Amazon.KinesisFirehose.Model.DescribeDeliveryStreamRequest)">
            <summary>
            Describes the specified delivery stream and its status. For example, after your delivery
            stream is created, call <code>DescribeDeliveryStream</code> to see whether the delivery
            stream is <code>ACTIVE</code> and therefore ready for data to be sent to it. 
            
             
            <para>
            If the status of a delivery stream is <code>CREATING_FAILED</code>, this status doesn't
            change, and you can't invoke <a>CreateDeliveryStream</a> again on it. However, you
            can invoke the <a>DeleteDeliveryStream</a> operation to delete it. If the status is
            <code>DELETING_FAILED</code>, you can force deletion by invoking <a>DeleteDeliveryStream</a>
            again but with <a>DeleteDeliveryStreamInput$AllowForceDelete</a> set to true.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDeliveryStream service method.</param>
            
            <returns>The response from the DescribeDeliveryStream service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/DescribeDeliveryStream">REST API Reference for DescribeDeliveryStream Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.DescribeDeliveryStreamAsync(Amazon.KinesisFirehose.Model.DescribeDeliveryStreamRequest,System.Threading.CancellationToken)">
            <summary>
            Describes the specified delivery stream and its status. For example, after your delivery
            stream is created, call <code>DescribeDeliveryStream</code> to see whether the delivery
            stream is <code>ACTIVE</code> and therefore ready for data to be sent to it. 
            
             
            <para>
            If the status of a delivery stream is <code>CREATING_FAILED</code>, this status doesn't
            change, and you can't invoke <a>CreateDeliveryStream</a> again on it. However, you
            can invoke the <a>DeleteDeliveryStream</a> operation to delete it. If the status is
            <code>DELETING_FAILED</code>, you can force deletion by invoking <a>DeleteDeliveryStream</a>
            again but with <a>DeleteDeliveryStreamInput$AllowForceDelete</a> set to true.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDeliveryStream service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeDeliveryStream service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/DescribeDeliveryStream">REST API Reference for DescribeDeliveryStream Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.ListDeliveryStreams">
            <summary>
            Lists your delivery streams in alphabetical order of their names.
            
             
            <para>
            The number of delivery streams might be too large to return using a single call to
            <code>ListDeliveryStreams</code>. You can limit the number of delivery streams returned,
            using the <code>Limit</code> parameter. To determine whether there are more delivery
            streams to list, check the value of <code>HasMoreDeliveryStreams</code> in the output.
            If there are more delivery streams to list, you can request them by calling this operation
            again and setting the <code>ExclusiveStartDeliveryStreamName</code> parameter to the
            name of the last delivery stream returned in the last call.
            </para>
            </summary>
            
            <returns>The response from the ListDeliveryStreams service method, as returned by KinesisFirehose.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/ListDeliveryStreams">REST API Reference for ListDeliveryStreams Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.ListDeliveryStreams(Amazon.KinesisFirehose.Model.ListDeliveryStreamsRequest)">
            <summary>
            Lists your delivery streams in alphabetical order of their names.
            
             
            <para>
            The number of delivery streams might be too large to return using a single call to
            <code>ListDeliveryStreams</code>. You can limit the number of delivery streams returned,
            using the <code>Limit</code> parameter. To determine whether there are more delivery
            streams to list, check the value of <code>HasMoreDeliveryStreams</code> in the output.
            If there are more delivery streams to list, you can request them by calling this operation
            again and setting the <code>ExclusiveStartDeliveryStreamName</code> parameter to the
            name of the last delivery stream returned in the last call.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListDeliveryStreams service method.</param>
            
            <returns>The response from the ListDeliveryStreams service method, as returned by KinesisFirehose.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/ListDeliveryStreams">REST API Reference for ListDeliveryStreams Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.ListDeliveryStreamsAsync(System.Threading.CancellationToken)">
            <summary>
            Lists your delivery streams in alphabetical order of their names.
            
             
            <para>
            The number of delivery streams might be too large to return using a single call to
            <code>ListDeliveryStreams</code>. You can limit the number of delivery streams returned,
            using the <code>Limit</code> parameter. To determine whether there are more delivery
            streams to list, check the value of <code>HasMoreDeliveryStreams</code> in the output.
            If there are more delivery streams to list, you can request them by calling this operation
            again and setting the <code>ExclusiveStartDeliveryStreamName</code> parameter to the
            name of the last delivery stream returned in the last call.
            </para>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListDeliveryStreams service method, as returned by KinesisFirehose.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/ListDeliveryStreams">REST API Reference for ListDeliveryStreams Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.ListDeliveryStreamsAsync(Amazon.KinesisFirehose.Model.ListDeliveryStreamsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists your delivery streams in alphabetical order of their names.
            
             
            <para>
            The number of delivery streams might be too large to return using a single call to
            <code>ListDeliveryStreams</code>. You can limit the number of delivery streams returned,
            using the <code>Limit</code> parameter. To determine whether there are more delivery
            streams to list, check the value of <code>HasMoreDeliveryStreams</code> in the output.
            If there are more delivery streams to list, you can request them by calling this operation
            again and setting the <code>ExclusiveStartDeliveryStreamName</code> parameter to the
            name of the last delivery stream returned in the last call.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListDeliveryStreams service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListDeliveryStreams service method, as returned by KinesisFirehose.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/ListDeliveryStreams">REST API Reference for ListDeliveryStreams Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.ListTagsForDeliveryStream(Amazon.KinesisFirehose.Model.ListTagsForDeliveryStreamRequest)">
            <summary>
            Lists the tags for the specified delivery stream. This operation has a limit of five
            transactions per second per account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForDeliveryStream service method.</param>
            
            <returns>The response from the ListTagsForDeliveryStream service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidArgumentException">
            The specified input parameter has a value that is not valid.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.LimitExceededException">
            You have already reached the limit for a requested resource.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/ListTagsForDeliveryStream">REST API Reference for ListTagsForDeliveryStream Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.ListTagsForDeliveryStreamAsync(Amazon.KinesisFirehose.Model.ListTagsForDeliveryStreamRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the tags for the specified delivery stream. This operation has a limit of five
            transactions per second per account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForDeliveryStream service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForDeliveryStream service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidArgumentException">
            The specified input parameter has a value that is not valid.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.LimitExceededException">
            You have already reached the limit for a requested resource.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/ListTagsForDeliveryStream">REST API Reference for ListTagsForDeliveryStream Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.PutRecord(System.String,Amazon.KinesisFirehose.Model.Record)">
            <summary>
            Writes a single data record into an Amazon Kinesis Data Firehose delivery stream.
            To write multiple data records into a delivery stream, use <a>PutRecordBatch</a>.
            Applications using these operations are referred to as producers.
            
             
            <para>
            By default, each delivery stream can take in up to 2,000 transactions per second,
            5,000 records per second, or 5 MB per second. If you use <a>PutRecord</a> and <a>PutRecordBatch</a>,
            the limits are an aggregate across these two operations for each delivery stream.
            For more information about limits and how to request an increase, see <a href="https://docs.aws.amazon.com/firehose/latest/dev/limits.html">Amazon
            Kinesis Data Firehose Limits</a>. 
            </para>
             
            <para>
            You must specify the name of the delivery stream and the data record when using <a>PutRecord</a>.
            The data record consists of a data blob that can be up to 1,000 KiB in size, and any
            kind of data. For example, it can be a segment from a log file, geographic location
            data, website clickstream data, and so on.
            </para>
             
            <para>
            Kinesis Data Firehose buffers records before delivering them to the destination. To
            disambiguate the data blobs at the destination, a common solution is to use delimiters
            in the data, such as a newline (<code>\n</code>) or some other character unique within
            the data. This allows the consumer application to parse individual data items when
            reading the data from the destination.
            </para>
             
            <para>
            The <code>PutRecord</code> operation returns a <code>RecordId</code>, which is a unique
            string assigned to each record. Producer applications can use this ID for purposes
            such as auditability and investigation.
            </para>
             
            <para>
            If the <code>PutRecord</code> operation throws a <code>ServiceUnavailableException</code>,
            back off and retry. If the exception persists, it is possible that the throughput
            limits have been exceeded for the delivery stream. 
            </para>
             
            <para>
            Data records sent to Kinesis Data Firehose are stored for 24 hours from the time they
            are added to a delivery stream as it tries to send the records to the destination.
            If the destination is unreachable for more than 24 hours, the data is no longer available.
            </para>
             <important> 
            <para>
            Don't concatenate two or more base64 strings to form the data fields of your records.
            Instead, concatenate the raw data, then perform base64 encoding.
            </para>
             </important>
            </summary>
            <param name="deliveryStreamName">The name of the delivery stream.</param>
            <param name="record">The record.</param>
            
            <returns>The response from the PutRecord service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidArgumentException">
            The specified input parameter has a value that is not valid.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidKMSResourceException">
            Kinesis Data Firehose throws this exception when an attempt to put records or to start
            or stop delivery stream encryption fails. This happens when the KMS service throws
            one of the following exception types: <code>AccessDeniedException</code>, <code>InvalidStateException</code>,
            <code>DisabledException</code>, or <code>NotFoundException</code>.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ServiceUnavailableException">
            The service is unavailable. Back off and retry the operation. If you continue to see
            the exception, throughput limits for the delivery stream may have been exceeded. For
            more information about limits and how to request an increase, see <a href="https://docs.aws.amazon.com/firehose/latest/dev/limits.html">Amazon
            Kinesis Data Firehose Limits</a>.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/PutRecord">REST API Reference for PutRecord Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.PutRecord(Amazon.KinesisFirehose.Model.PutRecordRequest)">
            <summary>
            Writes a single data record into an Amazon Kinesis Data Firehose delivery stream.
            To write multiple data records into a delivery stream, use <a>PutRecordBatch</a>.
            Applications using these operations are referred to as producers.
            
             
            <para>
            By default, each delivery stream can take in up to 2,000 transactions per second,
            5,000 records per second, or 5 MB per second. If you use <a>PutRecord</a> and <a>PutRecordBatch</a>,
            the limits are an aggregate across these two operations for each delivery stream.
            For more information about limits and how to request an increase, see <a href="https://docs.aws.amazon.com/firehose/latest/dev/limits.html">Amazon
            Kinesis Data Firehose Limits</a>. 
            </para>
             
            <para>
            You must specify the name of the delivery stream and the data record when using <a>PutRecord</a>.
            The data record consists of a data blob that can be up to 1,000 KiB in size, and any
            kind of data. For example, it can be a segment from a log file, geographic location
            data, website clickstream data, and so on.
            </para>
             
            <para>
            Kinesis Data Firehose buffers records before delivering them to the destination. To
            disambiguate the data blobs at the destination, a common solution is to use delimiters
            in the data, such as a newline (<code>\n</code>) or some other character unique within
            the data. This allows the consumer application to parse individual data items when
            reading the data from the destination.
            </para>
             
            <para>
            The <code>PutRecord</code> operation returns a <code>RecordId</code>, which is a unique
            string assigned to each record. Producer applications can use this ID for purposes
            such as auditability and investigation.
            </para>
             
            <para>
            If the <code>PutRecord</code> operation throws a <code>ServiceUnavailableException</code>,
            back off and retry. If the exception persists, it is possible that the throughput
            limits have been exceeded for the delivery stream. 
            </para>
             
            <para>
            Data records sent to Kinesis Data Firehose are stored for 24 hours from the time they
            are added to a delivery stream as it tries to send the records to the destination.
            If the destination is unreachable for more than 24 hours, the data is no longer available.
            </para>
             <important> 
            <para>
            Don't concatenate two or more base64 strings to form the data fields of your records.
            Instead, concatenate the raw data, then perform base64 encoding.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutRecord service method.</param>
            
            <returns>The response from the PutRecord service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidArgumentException">
            The specified input parameter has a value that is not valid.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidKMSResourceException">
            Kinesis Data Firehose throws this exception when an attempt to put records or to start
            or stop delivery stream encryption fails. This happens when the KMS service throws
            one of the following exception types: <code>AccessDeniedException</code>, <code>InvalidStateException</code>,
            <code>DisabledException</code>, or <code>NotFoundException</code>.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ServiceUnavailableException">
            The service is unavailable. Back off and retry the operation. If you continue to see
            the exception, throughput limits for the delivery stream may have been exceeded. For
            more information about limits and how to request an increase, see <a href="https://docs.aws.amazon.com/firehose/latest/dev/limits.html">Amazon
            Kinesis Data Firehose Limits</a>.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/PutRecord">REST API Reference for PutRecord Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.PutRecordAsync(System.String,Amazon.KinesisFirehose.Model.Record,System.Threading.CancellationToken)">
            <summary>
            Writes a single data record into an Amazon Kinesis Data Firehose delivery stream.
            To write multiple data records into a delivery stream, use <a>PutRecordBatch</a>.
            Applications using these operations are referred to as producers.
            
             
            <para>
            By default, each delivery stream can take in up to 2,000 transactions per second,
            5,000 records per second, or 5 MB per second. If you use <a>PutRecord</a> and <a>PutRecordBatch</a>,
            the limits are an aggregate across these two operations for each delivery stream.
            For more information about limits and how to request an increase, see <a href="https://docs.aws.amazon.com/firehose/latest/dev/limits.html">Amazon
            Kinesis Data Firehose Limits</a>. 
            </para>
             
            <para>
            You must specify the name of the delivery stream and the data record when using <a>PutRecord</a>.
            The data record consists of a data blob that can be up to 1,000 KiB in size, and any
            kind of data. For example, it can be a segment from a log file, geographic location
            data, website clickstream data, and so on.
            </para>
             
            <para>
            Kinesis Data Firehose buffers records before delivering them to the destination. To
            disambiguate the data blobs at the destination, a common solution is to use delimiters
            in the data, such as a newline (<code>\n</code>) or some other character unique within
            the data. This allows the consumer application to parse individual data items when
            reading the data from the destination.
            </para>
             
            <para>
            The <code>PutRecord</code> operation returns a <code>RecordId</code>, which is a unique
            string assigned to each record. Producer applications can use this ID for purposes
            such as auditability and investigation.
            </para>
             
            <para>
            If the <code>PutRecord</code> operation throws a <code>ServiceUnavailableException</code>,
            back off and retry. If the exception persists, it is possible that the throughput
            limits have been exceeded for the delivery stream. 
            </para>
             
            <para>
            Data records sent to Kinesis Data Firehose are stored for 24 hours from the time they
            are added to a delivery stream as it tries to send the records to the destination.
            If the destination is unreachable for more than 24 hours, the data is no longer available.
            </para>
             <important> 
            <para>
            Don't concatenate two or more base64 strings to form the data fields of your records.
            Instead, concatenate the raw data, then perform base64 encoding.
            </para>
             </important>
            </summary>
            <param name="deliveryStreamName">The name of the delivery stream.</param>
            <param name="record">The record.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutRecord service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidArgumentException">
            The specified input parameter has a value that is not valid.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidKMSResourceException">
            Kinesis Data Firehose throws this exception when an attempt to put records or to start
            or stop delivery stream encryption fails. This happens when the KMS service throws
            one of the following exception types: <code>AccessDeniedException</code>, <code>InvalidStateException</code>,
            <code>DisabledException</code>, or <code>NotFoundException</code>.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ServiceUnavailableException">
            The service is unavailable. Back off and retry the operation. If you continue to see
            the exception, throughput limits for the delivery stream may have been exceeded. For
            more information about limits and how to request an increase, see <a href="https://docs.aws.amazon.com/firehose/latest/dev/limits.html">Amazon
            Kinesis Data Firehose Limits</a>.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/PutRecord">REST API Reference for PutRecord Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.PutRecordAsync(Amazon.KinesisFirehose.Model.PutRecordRequest,System.Threading.CancellationToken)">
            <summary>
            Writes a single data record into an Amazon Kinesis Data Firehose delivery stream.
            To write multiple data records into a delivery stream, use <a>PutRecordBatch</a>.
            Applications using these operations are referred to as producers.
            
             
            <para>
            By default, each delivery stream can take in up to 2,000 transactions per second,
            5,000 records per second, or 5 MB per second. If you use <a>PutRecord</a> and <a>PutRecordBatch</a>,
            the limits are an aggregate across these two operations for each delivery stream.
            For more information about limits and how to request an increase, see <a href="https://docs.aws.amazon.com/firehose/latest/dev/limits.html">Amazon
            Kinesis Data Firehose Limits</a>. 
            </para>
             
            <para>
            You must specify the name of the delivery stream and the data record when using <a>PutRecord</a>.
            The data record consists of a data blob that can be up to 1,000 KiB in size, and any
            kind of data. For example, it can be a segment from a log file, geographic location
            data, website clickstream data, and so on.
            </para>
             
            <para>
            Kinesis Data Firehose buffers records before delivering them to the destination. To
            disambiguate the data blobs at the destination, a common solution is to use delimiters
            in the data, such as a newline (<code>\n</code>) or some other character unique within
            the data. This allows the consumer application to parse individual data items when
            reading the data from the destination.
            </para>
             
            <para>
            The <code>PutRecord</code> operation returns a <code>RecordId</code>, which is a unique
            string assigned to each record. Producer applications can use this ID for purposes
            such as auditability and investigation.
            </para>
             
            <para>
            If the <code>PutRecord</code> operation throws a <code>ServiceUnavailableException</code>,
            back off and retry. If the exception persists, it is possible that the throughput
            limits have been exceeded for the delivery stream. 
            </para>
             
            <para>
            Data records sent to Kinesis Data Firehose are stored for 24 hours from the time they
            are added to a delivery stream as it tries to send the records to the destination.
            If the destination is unreachable for more than 24 hours, the data is no longer available.
            </para>
             <important> 
            <para>
            Don't concatenate two or more base64 strings to form the data fields of your records.
            Instead, concatenate the raw data, then perform base64 encoding.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutRecord service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutRecord service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidArgumentException">
            The specified input parameter has a value that is not valid.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidKMSResourceException">
            Kinesis Data Firehose throws this exception when an attempt to put records or to start
            or stop delivery stream encryption fails. This happens when the KMS service throws
            one of the following exception types: <code>AccessDeniedException</code>, <code>InvalidStateException</code>,
            <code>DisabledException</code>, or <code>NotFoundException</code>.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ServiceUnavailableException">
            The service is unavailable. Back off and retry the operation. If you continue to see
            the exception, throughput limits for the delivery stream may have been exceeded. For
            more information about limits and how to request an increase, see <a href="https://docs.aws.amazon.com/firehose/latest/dev/limits.html">Amazon
            Kinesis Data Firehose Limits</a>.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/PutRecord">REST API Reference for PutRecord Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.PutRecordBatch(System.String,System.Collections.Generic.List{Amazon.KinesisFirehose.Model.Record})">
            <summary>
            Writes multiple data records into a delivery stream in a single call, which can achieve
            higher throughput per producer than when writing single records. To write single data
            records into a delivery stream, use <a>PutRecord</a>. Applications using these operations
            are referred to as producers.
            
             
            <para>
            For information about service quota, see <a href="https://docs.aws.amazon.com/firehose/latest/dev/limits.html">Amazon
            Kinesis Data Firehose Quota</a>.
            </para>
             
            <para>
            Each <a>PutRecordBatch</a> request supports up to 500 records. Each record in the
            request can be as large as 1,000 KB (before base64 encoding), up to a limit of 4 MB
            for the entire request. These limits cannot be changed.
            </para>
             
            <para>
            You must specify the name of the delivery stream and the data record when using <a>PutRecord</a>.
            The data record consists of a data blob that can be up to 1,000 KB in size, and any
            kind of data. For example, it could be a segment from a log file, geographic location
            data, website clickstream data, and so on.
            </para>
             
            <para>
            Kinesis Data Firehose buffers records before delivering them to the destination. To
            disambiguate the data blobs at the destination, a common solution is to use delimiters
            in the data, such as a newline (<code>\n</code>) or some other character unique within
            the data. This allows the consumer application to parse individual data items when
            reading the data from the destination.
            </para>
             
            <para>
            The <a>PutRecordBatch</a> response includes a count of failed records, <code>FailedPutCount</code>,
            and an array of responses, <code>RequestResponses</code>. Even if the <a>PutRecordBatch</a>
            call succeeds, the value of <code>FailedPutCount</code> may be greater than 0, indicating
            that there are records for which the operation didn't succeed. Each entry in the <code>RequestResponses</code>
            array provides additional information about the processed record. It directly correlates
            with a record in the request array using the same ordering, from the top to the bottom.
            The response array always includes the same number of records as the request array.
            <code>RequestResponses</code> includes both successfully and unsuccessfully processed
            records. Kinesis Data Firehose tries to process all records in each <a>PutRecordBatch</a>
            request. A single record failure does not stop the processing of subsequent records.
            
            </para>
             
            <para>
            A successfully processed record includes a <code>RecordId</code> value, which is unique
            for the record. An unsuccessfully processed record includes <code>ErrorCode</code>
            and <code>ErrorMessage</code> values. <code>ErrorCode</code> reflects the type of
            error, and is one of the following values: <code>ServiceUnavailableException</code>
            or <code>InternalFailure</code>. <code>ErrorMessage</code> provides more detailed
            information about the error.
            </para>
             
            <para>
            If there is an internal server error or a timeout, the write might have completed
            or it might have failed. If <code>FailedPutCount</code> is greater than 0, retry the
            request, resending only those records that might have failed processing. This minimizes
            the possible duplicate records and also reduces the total bytes sent (and corresponding
            charges). We recommend that you handle any duplicates at the destination.
            </para>
             
            <para>
            If <a>PutRecordBatch</a> throws <code>ServiceUnavailableException</code>, back off
            and retry. If the exception persists, it is possible that the throughput limits have
            been exceeded for the delivery stream.
            </para>
             
            <para>
            Data records sent to Kinesis Data Firehose are stored for 24 hours from the time they
            are added to a delivery stream as it attempts to send the records to the destination.
            If the destination is unreachable for more than 24 hours, the data is no longer available.
            </para>
             <important> 
            <para>
            Don't concatenate two or more base64 strings to form the data fields of your records.
            Instead, concatenate the raw data, then perform base64 encoding.
            </para>
             </important>
            </summary>
            <param name="deliveryStreamName">The name of the delivery stream.</param>
            <param name="records">One or more records.</param>
            
            <returns>The response from the PutRecordBatch service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidArgumentException">
            The specified input parameter has a value that is not valid.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidKMSResourceException">
            Kinesis Data Firehose throws this exception when an attempt to put records or to start
            or stop delivery stream encryption fails. This happens when the KMS service throws
            one of the following exception types: <code>AccessDeniedException</code>, <code>InvalidStateException</code>,
            <code>DisabledException</code>, or <code>NotFoundException</code>.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ServiceUnavailableException">
            The service is unavailable. Back off and retry the operation. If you continue to see
            the exception, throughput limits for the delivery stream may have been exceeded. For
            more information about limits and how to request an increase, see <a href="https://docs.aws.amazon.com/firehose/latest/dev/limits.html">Amazon
            Kinesis Data Firehose Limits</a>.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/PutRecordBatch">REST API Reference for PutRecordBatch Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.PutRecordBatch(Amazon.KinesisFirehose.Model.PutRecordBatchRequest)">
            <summary>
            Writes multiple data records into a delivery stream in a single call, which can achieve
            higher throughput per producer than when writing single records. To write single data
            records into a delivery stream, use <a>PutRecord</a>. Applications using these operations
            are referred to as producers.
            
             
            <para>
            For information about service quota, see <a href="https://docs.aws.amazon.com/firehose/latest/dev/limits.html">Amazon
            Kinesis Data Firehose Quota</a>.
            </para>
             
            <para>
            Each <a>PutRecordBatch</a> request supports up to 500 records. Each record in the
            request can be as large as 1,000 KB (before base64 encoding), up to a limit of 4 MB
            for the entire request. These limits cannot be changed.
            </para>
             
            <para>
            You must specify the name of the delivery stream and the data record when using <a>PutRecord</a>.
            The data record consists of a data blob that can be up to 1,000 KB in size, and any
            kind of data. For example, it could be a segment from a log file, geographic location
            data, website clickstream data, and so on.
            </para>
             
            <para>
            Kinesis Data Firehose buffers records before delivering them to the destination. To
            disambiguate the data blobs at the destination, a common solution is to use delimiters
            in the data, such as a newline (<code>\n</code>) or some other character unique within
            the data. This allows the consumer application to parse individual data items when
            reading the data from the destination.
            </para>
             
            <para>
            The <a>PutRecordBatch</a> response includes a count of failed records, <code>FailedPutCount</code>,
            and an array of responses, <code>RequestResponses</code>. Even if the <a>PutRecordBatch</a>
            call succeeds, the value of <code>FailedPutCount</code> may be greater than 0, indicating
            that there are records for which the operation didn't succeed. Each entry in the <code>RequestResponses</code>
            array provides additional information about the processed record. It directly correlates
            with a record in the request array using the same ordering, from the top to the bottom.
            The response array always includes the same number of records as the request array.
            <code>RequestResponses</code> includes both successfully and unsuccessfully processed
            records. Kinesis Data Firehose tries to process all records in each <a>PutRecordBatch</a>
            request. A single record failure does not stop the processing of subsequent records.
            
            </para>
             
            <para>
            A successfully processed record includes a <code>RecordId</code> value, which is unique
            for the record. An unsuccessfully processed record includes <code>ErrorCode</code>
            and <code>ErrorMessage</code> values. <code>ErrorCode</code> reflects the type of
            error, and is one of the following values: <code>ServiceUnavailableException</code>
            or <code>InternalFailure</code>. <code>ErrorMessage</code> provides more detailed
            information about the error.
            </para>
             
            <para>
            If there is an internal server error or a timeout, the write might have completed
            or it might have failed. If <code>FailedPutCount</code> is greater than 0, retry the
            request, resending only those records that might have failed processing. This minimizes
            the possible duplicate records and also reduces the total bytes sent (and corresponding
            charges). We recommend that you handle any duplicates at the destination.
            </para>
             
            <para>
            If <a>PutRecordBatch</a> throws <code>ServiceUnavailableException</code>, back off
            and retry. If the exception persists, it is possible that the throughput limits have
            been exceeded for the delivery stream.
            </para>
             
            <para>
            Data records sent to Kinesis Data Firehose are stored for 24 hours from the time they
            are added to a delivery stream as it attempts to send the records to the destination.
            If the destination is unreachable for more than 24 hours, the data is no longer available.
            </para>
             <important> 
            <para>
            Don't concatenate two or more base64 strings to form the data fields of your records.
            Instead, concatenate the raw data, then perform base64 encoding.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutRecordBatch service method.</param>
            
            <returns>The response from the PutRecordBatch service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidArgumentException">
            The specified input parameter has a value that is not valid.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidKMSResourceException">
            Kinesis Data Firehose throws this exception when an attempt to put records or to start
            or stop delivery stream encryption fails. This happens when the KMS service throws
            one of the following exception types: <code>AccessDeniedException</code>, <code>InvalidStateException</code>,
            <code>DisabledException</code>, or <code>NotFoundException</code>.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ServiceUnavailableException">
            The service is unavailable. Back off and retry the operation. If you continue to see
            the exception, throughput limits for the delivery stream may have been exceeded. For
            more information about limits and how to request an increase, see <a href="https://docs.aws.amazon.com/firehose/latest/dev/limits.html">Amazon
            Kinesis Data Firehose Limits</a>.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/PutRecordBatch">REST API Reference for PutRecordBatch Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.PutRecordBatchAsync(System.String,System.Collections.Generic.List{Amazon.KinesisFirehose.Model.Record},System.Threading.CancellationToken)">
            <summary>
            Writes multiple data records into a delivery stream in a single call, which can achieve
            higher throughput per producer than when writing single records. To write single data
            records into a delivery stream, use <a>PutRecord</a>. Applications using these operations
            are referred to as producers.
            
             
            <para>
            For information about service quota, see <a href="https://docs.aws.amazon.com/firehose/latest/dev/limits.html">Amazon
            Kinesis Data Firehose Quota</a>.
            </para>
             
            <para>
            Each <a>PutRecordBatch</a> request supports up to 500 records. Each record in the
            request can be as large as 1,000 KB (before base64 encoding), up to a limit of 4 MB
            for the entire request. These limits cannot be changed.
            </para>
             
            <para>
            You must specify the name of the delivery stream and the data record when using <a>PutRecord</a>.
            The data record consists of a data blob that can be up to 1,000 KB in size, and any
            kind of data. For example, it could be a segment from a log file, geographic location
            data, website clickstream data, and so on.
            </para>
             
            <para>
            Kinesis Data Firehose buffers records before delivering them to the destination. To
            disambiguate the data blobs at the destination, a common solution is to use delimiters
            in the data, such as a newline (<code>\n</code>) or some other character unique within
            the data. This allows the consumer application to parse individual data items when
            reading the data from the destination.
            </para>
             
            <para>
            The <a>PutRecordBatch</a> response includes a count of failed records, <code>FailedPutCount</code>,
            and an array of responses, <code>RequestResponses</code>. Even if the <a>PutRecordBatch</a>
            call succeeds, the value of <code>FailedPutCount</code> may be greater than 0, indicating
            that there are records for which the operation didn't succeed. Each entry in the <code>RequestResponses</code>
            array provides additional information about the processed record. It directly correlates
            with a record in the request array using the same ordering, from the top to the bottom.
            The response array always includes the same number of records as the request array.
            <code>RequestResponses</code> includes both successfully and unsuccessfully processed
            records. Kinesis Data Firehose tries to process all records in each <a>PutRecordBatch</a>
            request. A single record failure does not stop the processing of subsequent records.
            
            </para>
             
            <para>
            A successfully processed record includes a <code>RecordId</code> value, which is unique
            for the record. An unsuccessfully processed record includes <code>ErrorCode</code>
            and <code>ErrorMessage</code> values. <code>ErrorCode</code> reflects the type of
            error, and is one of the following values: <code>ServiceUnavailableException</code>
            or <code>InternalFailure</code>. <code>ErrorMessage</code> provides more detailed
            information about the error.
            </para>
             
            <para>
            If there is an internal server error or a timeout, the write might have completed
            or it might have failed. If <code>FailedPutCount</code> is greater than 0, retry the
            request, resending only those records that might have failed processing. This minimizes
            the possible duplicate records and also reduces the total bytes sent (and corresponding
            charges). We recommend that you handle any duplicates at the destination.
            </para>
             
            <para>
            If <a>PutRecordBatch</a> throws <code>ServiceUnavailableException</code>, back off
            and retry. If the exception persists, it is possible that the throughput limits have
            been exceeded for the delivery stream.
            </para>
             
            <para>
            Data records sent to Kinesis Data Firehose are stored for 24 hours from the time they
            are added to a delivery stream as it attempts to send the records to the destination.
            If the destination is unreachable for more than 24 hours, the data is no longer available.
            </para>
             <important> 
            <para>
            Don't concatenate two or more base64 strings to form the data fields of your records.
            Instead, concatenate the raw data, then perform base64 encoding.
            </para>
             </important>
            </summary>
            <param name="deliveryStreamName">The name of the delivery stream.</param>
            <param name="records">One or more records.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutRecordBatch service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidArgumentException">
            The specified input parameter has a value that is not valid.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidKMSResourceException">
            Kinesis Data Firehose throws this exception when an attempt to put records or to start
            or stop delivery stream encryption fails. This happens when the KMS service throws
            one of the following exception types: <code>AccessDeniedException</code>, <code>InvalidStateException</code>,
            <code>DisabledException</code>, or <code>NotFoundException</code>.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ServiceUnavailableException">
            The service is unavailable. Back off and retry the operation. If you continue to see
            the exception, throughput limits for the delivery stream may have been exceeded. For
            more information about limits and how to request an increase, see <a href="https://docs.aws.amazon.com/firehose/latest/dev/limits.html">Amazon
            Kinesis Data Firehose Limits</a>.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/PutRecordBatch">REST API Reference for PutRecordBatch Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.PutRecordBatchAsync(Amazon.KinesisFirehose.Model.PutRecordBatchRequest,System.Threading.CancellationToken)">
            <summary>
            Writes multiple data records into a delivery stream in a single call, which can achieve
            higher throughput per producer than when writing single records. To write single data
            records into a delivery stream, use <a>PutRecord</a>. Applications using these operations
            are referred to as producers.
            
             
            <para>
            For information about service quota, see <a href="https://docs.aws.amazon.com/firehose/latest/dev/limits.html">Amazon
            Kinesis Data Firehose Quota</a>.
            </para>
             
            <para>
            Each <a>PutRecordBatch</a> request supports up to 500 records. Each record in the
            request can be as large as 1,000 KB (before base64 encoding), up to a limit of 4 MB
            for the entire request. These limits cannot be changed.
            </para>
             
            <para>
            You must specify the name of the delivery stream and the data record when using <a>PutRecord</a>.
            The data record consists of a data blob that can be up to 1,000 KB in size, and any
            kind of data. For example, it could be a segment from a log file, geographic location
            data, website clickstream data, and so on.
            </para>
             
            <para>
            Kinesis Data Firehose buffers records before delivering them to the destination. To
            disambiguate the data blobs at the destination, a common solution is to use delimiters
            in the data, such as a newline (<code>\n</code>) or some other character unique within
            the data. This allows the consumer application to parse individual data items when
            reading the data from the destination.
            </para>
             
            <para>
            The <a>PutRecordBatch</a> response includes a count of failed records, <code>FailedPutCount</code>,
            and an array of responses, <code>RequestResponses</code>. Even if the <a>PutRecordBatch</a>
            call succeeds, the value of <code>FailedPutCount</code> may be greater than 0, indicating
            that there are records for which the operation didn't succeed. Each entry in the <code>RequestResponses</code>
            array provides additional information about the processed record. It directly correlates
            with a record in the request array using the same ordering, from the top to the bottom.
            The response array always includes the same number of records as the request array.
            <code>RequestResponses</code> includes both successfully and unsuccessfully processed
            records. Kinesis Data Firehose tries to process all records in each <a>PutRecordBatch</a>
            request. A single record failure does not stop the processing of subsequent records.
            
            </para>
             
            <para>
            A successfully processed record includes a <code>RecordId</code> value, which is unique
            for the record. An unsuccessfully processed record includes <code>ErrorCode</code>
            and <code>ErrorMessage</code> values. <code>ErrorCode</code> reflects the type of
            error, and is one of the following values: <code>ServiceUnavailableException</code>
            or <code>InternalFailure</code>. <code>ErrorMessage</code> provides more detailed
            information about the error.
            </para>
             
            <para>
            If there is an internal server error or a timeout, the write might have completed
            or it might have failed. If <code>FailedPutCount</code> is greater than 0, retry the
            request, resending only those records that might have failed processing. This minimizes
            the possible duplicate records and also reduces the total bytes sent (and corresponding
            charges). We recommend that you handle any duplicates at the destination.
            </para>
             
            <para>
            If <a>PutRecordBatch</a> throws <code>ServiceUnavailableException</code>, back off
            and retry. If the exception persists, it is possible that the throughput limits have
            been exceeded for the delivery stream.
            </para>
             
            <para>
            Data records sent to Kinesis Data Firehose are stored for 24 hours from the time they
            are added to a delivery stream as it attempts to send the records to the destination.
            If the destination is unreachable for more than 24 hours, the data is no longer available.
            </para>
             <important> 
            <para>
            Don't concatenate two or more base64 strings to form the data fields of your records.
            Instead, concatenate the raw data, then perform base64 encoding.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutRecordBatch service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutRecordBatch service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidArgumentException">
            The specified input parameter has a value that is not valid.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidKMSResourceException">
            Kinesis Data Firehose throws this exception when an attempt to put records or to start
            or stop delivery stream encryption fails. This happens when the KMS service throws
            one of the following exception types: <code>AccessDeniedException</code>, <code>InvalidStateException</code>,
            <code>DisabledException</code>, or <code>NotFoundException</code>.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ServiceUnavailableException">
            The service is unavailable. Back off and retry the operation. If you continue to see
            the exception, throughput limits for the delivery stream may have been exceeded. For
            more information about limits and how to request an increase, see <a href="https://docs.aws.amazon.com/firehose/latest/dev/limits.html">Amazon
            Kinesis Data Firehose Limits</a>.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/PutRecordBatch">REST API Reference for PutRecordBatch Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.StartDeliveryStreamEncryption(Amazon.KinesisFirehose.Model.StartDeliveryStreamEncryptionRequest)">
            <summary>
            Enables server-side encryption (SSE) for the delivery stream. 
            
             
            <para>
            This operation is asynchronous. It returns immediately. When you invoke it, Kinesis
            Data Firehose first sets the encryption status of the stream to <code>ENABLING</code>,
            and then to <code>ENABLED</code>. The encryption status of a delivery stream is the
            <code>Status</code> property in <a>DeliveryStreamEncryptionConfiguration</a>. If the
            operation fails, the encryption status changes to <code>ENABLING_FAILED</code>. You
            can continue to read and write data to your delivery stream while the encryption status
            is <code>ENABLING</code>, but the data is not encrypted. It can take up to 5 seconds
            after the encryption status changes to <code>ENABLED</code> before all records written
            to the delivery stream are encrypted. To find out whether a record or a batch of records
            was encrypted, check the response elements <a>PutRecordOutput$Encrypted</a> and <a>PutRecordBatchOutput$Encrypted</a>,
            respectively.
            </para>
             
            <para>
            To check the encryption status of a delivery stream, use <a>DescribeDeliveryStream</a>.
            </para>
             
            <para>
            Even if encryption is currently enabled for a delivery stream, you can still invoke
            this operation on it to change the ARN of the CMK or both its type and ARN. If you
            invoke this method to change the CMK, and the old CMK is of type <code>CUSTOMER_MANAGED_CMK</code>,
            Kinesis Data Firehose schedules the grant it had on the old CMK for retirement. If
            the new CMK is of type <code>CUSTOMER_MANAGED_CMK</code>, Kinesis Data Firehose creates
            a grant that enables it to use the new CMK to encrypt and decrypt data and to manage
            the grant.
            </para>
             
            <para>
            If a delivery stream already has encryption enabled and then you invoke this operation
            to change the ARN of the CMK or both its type and ARN and you get <code>ENABLING_FAILED</code>,
            this only means that the attempt to change the CMK failed. In this case, encryption
            remains enabled with the old CMK.
            </para>
             
            <para>
            If the encryption status of your delivery stream is <code>ENABLING_FAILED</code>,
            you can invoke this operation again with a valid CMK. The CMK must be enabled and
            the key policy mustn't explicitly deny the permission for Kinesis Data Firehose to
            invoke KMS encrypt and decrypt operations.
            </para>
             
            <para>
            You can enable SSE for a delivery stream only if it's a delivery stream that uses
            <code>DirectPut</code> as its source. 
            </para>
             
            <para>
            The <code>StartDeliveryStreamEncryption</code> and <code>StopDeliveryStreamEncryption</code>
            operations have a combined limit of 25 calls per delivery stream per 24 hours. For
            example, you reach the limit if you call <code>StartDeliveryStreamEncryption</code>
            13 times and <code>StopDeliveryStreamEncryption</code> 12 times for the same delivery
            stream in a 24-hour period.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartDeliveryStreamEncryption service method.</param>
            
            <returns>The response from the StartDeliveryStreamEncryption service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidArgumentException">
            The specified input parameter has a value that is not valid.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidKMSResourceException">
            Kinesis Data Firehose throws this exception when an attempt to put records or to start
            or stop delivery stream encryption fails. This happens when the KMS service throws
            one of the following exception types: <code>AccessDeniedException</code>, <code>InvalidStateException</code>,
            <code>DisabledException</code>, or <code>NotFoundException</code>.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.LimitExceededException">
            You have already reached the limit for a requested resource.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceInUseException">
            The resource is already in use and not available for this operation.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/StartDeliveryStreamEncryption">REST API Reference for StartDeliveryStreamEncryption Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.StartDeliveryStreamEncryptionAsync(Amazon.KinesisFirehose.Model.StartDeliveryStreamEncryptionRequest,System.Threading.CancellationToken)">
            <summary>
            Enables server-side encryption (SSE) for the delivery stream. 
            
             
            <para>
            This operation is asynchronous. It returns immediately. When you invoke it, Kinesis
            Data Firehose first sets the encryption status of the stream to <code>ENABLING</code>,
            and then to <code>ENABLED</code>. The encryption status of a delivery stream is the
            <code>Status</code> property in <a>DeliveryStreamEncryptionConfiguration</a>. If the
            operation fails, the encryption status changes to <code>ENABLING_FAILED</code>. You
            can continue to read and write data to your delivery stream while the encryption status
            is <code>ENABLING</code>, but the data is not encrypted. It can take up to 5 seconds
            after the encryption status changes to <code>ENABLED</code> before all records written
            to the delivery stream are encrypted. To find out whether a record or a batch of records
            was encrypted, check the response elements <a>PutRecordOutput$Encrypted</a> and <a>PutRecordBatchOutput$Encrypted</a>,
            respectively.
            </para>
             
            <para>
            To check the encryption status of a delivery stream, use <a>DescribeDeliveryStream</a>.
            </para>
             
            <para>
            Even if encryption is currently enabled for a delivery stream, you can still invoke
            this operation on it to change the ARN of the CMK or both its type and ARN. If you
            invoke this method to change the CMK, and the old CMK is of type <code>CUSTOMER_MANAGED_CMK</code>,
            Kinesis Data Firehose schedules the grant it had on the old CMK for retirement. If
            the new CMK is of type <code>CUSTOMER_MANAGED_CMK</code>, Kinesis Data Firehose creates
            a grant that enables it to use the new CMK to encrypt and decrypt data and to manage
            the grant.
            </para>
             
            <para>
            If a delivery stream already has encryption enabled and then you invoke this operation
            to change the ARN of the CMK or both its type and ARN and you get <code>ENABLING_FAILED</code>,
            this only means that the attempt to change the CMK failed. In this case, encryption
            remains enabled with the old CMK.
            </para>
             
            <para>
            If the encryption status of your delivery stream is <code>ENABLING_FAILED</code>,
            you can invoke this operation again with a valid CMK. The CMK must be enabled and
            the key policy mustn't explicitly deny the permission for Kinesis Data Firehose to
            invoke KMS encrypt and decrypt operations.
            </para>
             
            <para>
            You can enable SSE for a delivery stream only if it's a delivery stream that uses
            <code>DirectPut</code> as its source. 
            </para>
             
            <para>
            The <code>StartDeliveryStreamEncryption</code> and <code>StopDeliveryStreamEncryption</code>
            operations have a combined limit of 25 calls per delivery stream per 24 hours. For
            example, you reach the limit if you call <code>StartDeliveryStreamEncryption</code>
            13 times and <code>StopDeliveryStreamEncryption</code> 12 times for the same delivery
            stream in a 24-hour period.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartDeliveryStreamEncryption service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartDeliveryStreamEncryption service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidArgumentException">
            The specified input parameter has a value that is not valid.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidKMSResourceException">
            Kinesis Data Firehose throws this exception when an attempt to put records or to start
            or stop delivery stream encryption fails. This happens when the KMS service throws
            one of the following exception types: <code>AccessDeniedException</code>, <code>InvalidStateException</code>,
            <code>DisabledException</code>, or <code>NotFoundException</code>.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.LimitExceededException">
            You have already reached the limit for a requested resource.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceInUseException">
            The resource is already in use and not available for this operation.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/StartDeliveryStreamEncryption">REST API Reference for StartDeliveryStreamEncryption Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.StopDeliveryStreamEncryption(Amazon.KinesisFirehose.Model.StopDeliveryStreamEncryptionRequest)">
            <summary>
            Disables server-side encryption (SSE) for the delivery stream. 
            
             
            <para>
            This operation is asynchronous. It returns immediately. When you invoke it, Kinesis
            Data Firehose first sets the encryption status of the stream to <code>DISABLING</code>,
            and then to <code>DISABLED</code>. You can continue to read and write data to your
            stream while its status is <code>DISABLING</code>. It can take up to 5 seconds after
            the encryption status changes to <code>DISABLED</code> before all records written
            to the delivery stream are no longer subject to encryption. To find out whether a
            record or a batch of records was encrypted, check the response elements <a>PutRecordOutput$Encrypted</a>
            and <a>PutRecordBatchOutput$Encrypted</a>, respectively.
            </para>
             
            <para>
            To check the encryption state of a delivery stream, use <a>DescribeDeliveryStream</a>.
            
            </para>
             
            <para>
            If SSE is enabled using a customer managed CMK and then you invoke <code>StopDeliveryStreamEncryption</code>,
            Kinesis Data Firehose schedules the related KMS grant for retirement and then retires
            it after it ensures that it is finished delivering records to the destination.
            </para>
             
            <para>
            The <code>StartDeliveryStreamEncryption</code> and <code>StopDeliveryStreamEncryption</code>
            operations have a combined limit of 25 calls per delivery stream per 24 hours. For
            example, you reach the limit if you call <code>StartDeliveryStreamEncryption</code>
            13 times and <code>StopDeliveryStreamEncryption</code> 12 times for the same delivery
            stream in a 24-hour period.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StopDeliveryStreamEncryption service method.</param>
            
            <returns>The response from the StopDeliveryStreamEncryption service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidArgumentException">
            The specified input parameter has a value that is not valid.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.LimitExceededException">
            You have already reached the limit for a requested resource.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceInUseException">
            The resource is already in use and not available for this operation.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/StopDeliveryStreamEncryption">REST API Reference for StopDeliveryStreamEncryption Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.StopDeliveryStreamEncryptionAsync(Amazon.KinesisFirehose.Model.StopDeliveryStreamEncryptionRequest,System.Threading.CancellationToken)">
            <summary>
            Disables server-side encryption (SSE) for the delivery stream. 
            
             
            <para>
            This operation is asynchronous. It returns immediately. When you invoke it, Kinesis
            Data Firehose first sets the encryption status of the stream to <code>DISABLING</code>,
            and then to <code>DISABLED</code>. You can continue to read and write data to your
            stream while its status is <code>DISABLING</code>. It can take up to 5 seconds after
            the encryption status changes to <code>DISABLED</code> before all records written
            to the delivery stream are no longer subject to encryption. To find out whether a
            record or a batch of records was encrypted, check the response elements <a>PutRecordOutput$Encrypted</a>
            and <a>PutRecordBatchOutput$Encrypted</a>, respectively.
            </para>
             
            <para>
            To check the encryption state of a delivery stream, use <a>DescribeDeliveryStream</a>.
            
            </para>
             
            <para>
            If SSE is enabled using a customer managed CMK and then you invoke <code>StopDeliveryStreamEncryption</code>,
            Kinesis Data Firehose schedules the related KMS grant for retirement and then retires
            it after it ensures that it is finished delivering records to the destination.
            </para>
             
            <para>
            The <code>StartDeliveryStreamEncryption</code> and <code>StopDeliveryStreamEncryption</code>
            operations have a combined limit of 25 calls per delivery stream per 24 hours. For
            example, you reach the limit if you call <code>StartDeliveryStreamEncryption</code>
            13 times and <code>StopDeliveryStreamEncryption</code> 12 times for the same delivery
            stream in a 24-hour period.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StopDeliveryStreamEncryption service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StopDeliveryStreamEncryption service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidArgumentException">
            The specified input parameter has a value that is not valid.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.LimitExceededException">
            You have already reached the limit for a requested resource.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceInUseException">
            The resource is already in use and not available for this operation.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/StopDeliveryStreamEncryption">REST API Reference for StopDeliveryStreamEncryption Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.TagDeliveryStream(Amazon.KinesisFirehose.Model.TagDeliveryStreamRequest)">
            <summary>
            Adds or updates tags for the specified delivery stream. A tag is a key-value pair
            that you can define and assign to AWS resources. If you specify a tag that already
            exists, the tag value is replaced with the value that you specify in the request.
            Tags are metadata. For example, you can add friendly names and descriptions or other
            types of information that can help you distinguish the delivery stream. For more information
            about tags, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html">Using
            Cost Allocation Tags</a> in the <i>AWS Billing and Cost Management User Guide</i>.
            
            
             
            <para>
            Each delivery stream can have up to 50 tags. 
            </para>
             
            <para>
            This operation has a limit of five transactions per second per account. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagDeliveryStream service method.</param>
            
            <returns>The response from the TagDeliveryStream service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidArgumentException">
            The specified input parameter has a value that is not valid.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.LimitExceededException">
            You have already reached the limit for a requested resource.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceInUseException">
            The resource is already in use and not available for this operation.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/TagDeliveryStream">REST API Reference for TagDeliveryStream Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.TagDeliveryStreamAsync(Amazon.KinesisFirehose.Model.TagDeliveryStreamRequest,System.Threading.CancellationToken)">
            <summary>
            Adds or updates tags for the specified delivery stream. A tag is a key-value pair
            that you can define and assign to AWS resources. If you specify a tag that already
            exists, the tag value is replaced with the value that you specify in the request.
            Tags are metadata. For example, you can add friendly names and descriptions or other
            types of information that can help you distinguish the delivery stream. For more information
            about tags, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html">Using
            Cost Allocation Tags</a> in the <i>AWS Billing and Cost Management User Guide</i>.
            
            
             
            <para>
            Each delivery stream can have up to 50 tags. 
            </para>
             
            <para>
            This operation has a limit of five transactions per second per account. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagDeliveryStream service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagDeliveryStream service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidArgumentException">
            The specified input parameter has a value that is not valid.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.LimitExceededException">
            You have already reached the limit for a requested resource.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceInUseException">
            The resource is already in use and not available for this operation.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/TagDeliveryStream">REST API Reference for TagDeliveryStream Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.UntagDeliveryStream(Amazon.KinesisFirehose.Model.UntagDeliveryStreamRequest)">
            <summary>
            Removes tags from the specified delivery stream. Removed tags are deleted, and you
            can't recover them after this operation successfully completes.
            
             
            <para>
            If you specify a tag that doesn't exist, the operation ignores it.
            </para>
             
            <para>
            This operation has a limit of five transactions per second per account. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagDeliveryStream service method.</param>
            
            <returns>The response from the UntagDeliveryStream service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidArgumentException">
            The specified input parameter has a value that is not valid.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.LimitExceededException">
            You have already reached the limit for a requested resource.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceInUseException">
            The resource is already in use and not available for this operation.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/UntagDeliveryStream">REST API Reference for UntagDeliveryStream Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.UntagDeliveryStreamAsync(Amazon.KinesisFirehose.Model.UntagDeliveryStreamRequest,System.Threading.CancellationToken)">
            <summary>
            Removes tags from the specified delivery stream. Removed tags are deleted, and you
            can't recover them after this operation successfully completes.
            
             
            <para>
            If you specify a tag that doesn't exist, the operation ignores it.
            </para>
             
            <para>
            This operation has a limit of five transactions per second per account. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagDeliveryStream service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagDeliveryStream service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidArgumentException">
            The specified input parameter has a value that is not valid.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.LimitExceededException">
            You have already reached the limit for a requested resource.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceInUseException">
            The resource is already in use and not available for this operation.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/UntagDeliveryStream">REST API Reference for UntagDeliveryStream Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.UpdateDestination(Amazon.KinesisFirehose.Model.UpdateDestinationRequest)">
            <summary>
            Updates the specified destination of the specified delivery stream.
            
             
            <para>
            Use this operation to change the destination type (for example, to replace the Amazon
            S3 destination with Amazon Redshift) or change the parameters associated with a destination
            (for example, to change the bucket name of the Amazon S3 destination). The update
            might not occur immediately. The target delivery stream remains active while the configurations
            are updated, so data writes to the delivery stream can continue during this process.
            The updated configurations are usually effective within a few minutes.
            </para>
             
            <para>
            Switching between Amazon ES and other services is not supported. For an Amazon ES
            destination, you can only update to another Amazon ES destination.
            </para>
             
            <para>
            If the destination type is the same, Kinesis Data Firehose merges the configuration
            parameters specified with the destination configuration that already exists on the
            delivery stream. If any of the parameters are not specified in the call, the existing
            values are retained. For example, in the Amazon S3 destination, if <a>EncryptionConfiguration</a>
            is not specified, then the existing <code>EncryptionConfiguration</code> is maintained
            on the destination.
            </para>
             
            <para>
            If the destination type is not the same, for example, changing the destination from
            Amazon S3 to Amazon Redshift, Kinesis Data Firehose does not merge any parameters.
            In this case, all parameters must be specified.
            </para>
             
            <para>
            Kinesis Data Firehose uses <code>CurrentDeliveryStreamVersionId</code> to avoid race
            conditions and conflicting merges. This is a required field, and the service updates
            the configuration only if the existing configuration has a version ID that matches.
            After the update is applied successfully, the version ID is updated, and can be retrieved
            using <a>DescribeDeliveryStream</a>. Use the new version ID to set <code>CurrentDeliveryStreamVersionId</code>
            in the next call.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateDestination service method.</param>
            
            <returns>The response from the UpdateDestination service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.ConcurrentModificationException">
            Another modification has already happened. Fetch <code>VersionId</code> again and
            use it to update the destination.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidArgumentException">
            The specified input parameter has a value that is not valid.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceInUseException">
            The resource is already in use and not available for this operation.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/UpdateDestination">REST API Reference for UpdateDestination Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.UpdateDestinationAsync(Amazon.KinesisFirehose.Model.UpdateDestinationRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the specified destination of the specified delivery stream.
            
             
            <para>
            Use this operation to change the destination type (for example, to replace the Amazon
            S3 destination with Amazon Redshift) or change the parameters associated with a destination
            (for example, to change the bucket name of the Amazon S3 destination). The update
            might not occur immediately. The target delivery stream remains active while the configurations
            are updated, so data writes to the delivery stream can continue during this process.
            The updated configurations are usually effective within a few minutes.
            </para>
             
            <para>
            Switching between Amazon ES and other services is not supported. For an Amazon ES
            destination, you can only update to another Amazon ES destination.
            </para>
             
            <para>
            If the destination type is the same, Kinesis Data Firehose merges the configuration
            parameters specified with the destination configuration that already exists on the
            delivery stream. If any of the parameters are not specified in the call, the existing
            values are retained. For example, in the Amazon S3 destination, if <a>EncryptionConfiguration</a>
            is not specified, then the existing <code>EncryptionConfiguration</code> is maintained
            on the destination.
            </para>
             
            <para>
            If the destination type is not the same, for example, changing the destination from
            Amazon S3 to Amazon Redshift, Kinesis Data Firehose does not merge any parameters.
            In this case, all parameters must be specified.
            </para>
             
            <para>
            Kinesis Data Firehose uses <code>CurrentDeliveryStreamVersionId</code> to avoid race
            conditions and conflicting merges. This is a required field, and the service updates
            the configuration only if the existing configuration has a version ID that matches.
            After the update is applied successfully, the version ID is updated, and can be retrieved
            using <a>DescribeDeliveryStream</a>. Use the new version ID to set <code>CurrentDeliveryStreamVersionId</code>
            in the next call.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateDestination service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateDestination service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.ConcurrentModificationException">
            Another modification has already happened. Fetch <code>VersionId</code> again and
            use it to update the destination.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidArgumentException">
            The specified input parameter has a value that is not valid.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceInUseException">
            The resource is already in use and not available for this operation.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/UpdateDestination">REST API Reference for UpdateDestination Operation</seealso>
        </member>
        <member name="T:Amazon.KinesisFirehose.IAmazonKinesisFirehose">
             <summary>
             Interface for accessing KinesisFirehose
            
             Amazon Kinesis Data Firehose API Reference 
             <para>
             Amazon Kinesis Data Firehose is a fully managed service that delivers real-time streaming
             data to destinations such as Amazon Simple Storage Service (Amazon S3), Amazon Elasticsearch
             Service (Amazon ES), Amazon Redshift, and Splunk.
             </para>
             </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.IAmazonKinesisFirehose.CreateDeliveryStream(Amazon.KinesisFirehose.Model.CreateDeliveryStreamRequest)">
            <summary>
            Creates a Kinesis Data Firehose delivery stream.
            
             
            <para>
            By default, you can create up to 50 delivery streams per AWS Region.
            </para>
             
            <para>
            This is an asynchronous operation that immediately returns. The initial status of
            the delivery stream is <code>CREATING</code>. After the delivery stream is created,
            its status is <code>ACTIVE</code> and it now accepts data. If the delivery stream
            creation fails, the status transitions to <code>CREATING_FAILED</code>. Attempts to
            send data to a delivery stream that is not in the <code>ACTIVE</code> state cause
            an exception. To check the state of a delivery stream, use <a>DescribeDeliveryStream</a>.
            </para>
             
            <para>
            If the status of a delivery stream is <code>CREATING_FAILED</code>, this status doesn't
            change, and you can't invoke <code>CreateDeliveryStream</code> again on it. However,
            you can invoke the <a>DeleteDeliveryStream</a> operation to delete it.
            </para>
             
            <para>
            A Kinesis Data Firehose delivery stream can be configured to receive records directly
            from providers using <a>PutRecord</a> or <a>PutRecordBatch</a>, or it can be configured
            to use an existing Kinesis stream as its source. To specify a Kinesis data stream
            as input, set the <code>DeliveryStreamType</code> parameter to <code>KinesisStreamAsSource</code>,
            and provide the Kinesis stream Amazon Resource Name (ARN) and role ARN in the <code>KinesisStreamSourceConfiguration</code>
            parameter.
            </para>
             
            <para>
            To create a delivery stream with server-side encryption (SSE) enabled, include <a>DeliveryStreamEncryptionConfigurationInput</a>
            in your request. This is optional. You can also invoke <a>StartDeliveryStreamEncryption</a>
            to turn on SSE for an existing delivery stream that doesn't have SSE enabled.
            </para>
             
            <para>
            A delivery stream is configured with a single destination: Amazon S3, Amazon ES, Amazon
            Redshift, or Splunk. You must specify only one of the following destination configuration
            parameters: <code>ExtendedS3DestinationConfiguration</code>, <code>S3DestinationConfiguration</code>,
            <code>ElasticsearchDestinationConfiguration</code>, <code>RedshiftDestinationConfiguration</code>,
            or <code>SplunkDestinationConfiguration</code>.
            </para>
             
            <para>
            When you specify <code>S3DestinationConfiguration</code>, you can also provide the
            following optional values: BufferingHints, <code>EncryptionConfiguration</code>, and
            <code>CompressionFormat</code>. By default, if no <code>BufferingHints</code> value
            is provided, Kinesis Data Firehose buffers data up to 5 MB or for 5 minutes, whichever
            condition is satisfied first. <code>BufferingHints</code> is a hint, so there are
            some cases where the service cannot adhere to these conditions strictly. For example,
            record boundaries might be such that the size is a little over or under the configured
            buffering size. By default, no encryption is performed. We strongly recommend that
            you enable encryption to ensure secure data storage in Amazon S3.
            </para>
             
            <para>
            A few notes about Amazon Redshift as a destination:
            </para>
             <ul> <li> 
            <para>
            An Amazon Redshift destination requires an S3 bucket as intermediate location. Kinesis
            Data Firehose first delivers data to Amazon S3 and then uses <code>COPY</code> syntax
            to load data into an Amazon Redshift table. This is specified in the <code>RedshiftDestinationConfiguration.S3Configuration</code>
            parameter.
            </para>
             </li> <li> 
            <para>
            The compression formats <code>SNAPPY</code> or <code>ZIP</code> cannot be specified
            in <code>RedshiftDestinationConfiguration.S3Configuration</code> because the Amazon
            Redshift <code>COPY</code> operation that reads from the S3 bucket doesn't support
            these compression formats.
            </para>
             </li> <li> 
            <para>
            We strongly recommend that you use the user name and password you provide exclusively
            with Kinesis Data Firehose, and that the permissions for the account are restricted
            for Amazon Redshift <code>INSERT</code> permissions.
            </para>
             </li> </ul> 
            <para>
            Kinesis Data Firehose assumes the IAM role that is configured as part of the destination.
            The role should allow the Kinesis Data Firehose principal to assume the role, and
            the role should have permissions that allow the service to deliver the data. For more
            information, see <a href="https://docs.aws.amazon.com/firehose/latest/dev/controlling-access.html#using-iam-s3">Grant
            Kinesis Data Firehose Access to an Amazon S3 Destination</a> in the <i>Amazon Kinesis
            Data Firehose Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDeliveryStream service method.</param>
            
            <returns>The response from the CreateDeliveryStream service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidArgumentException">
            The specified input parameter has a value that is not valid.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidKMSResourceException">
            Kinesis Data Firehose throws this exception when an attempt to put records or to start
            or stop delivery stream encryption fails. This happens when the KMS service throws
            one of the following exception types: <code>AccessDeniedException</code>, <code>InvalidStateException</code>,
            <code>DisabledException</code>, or <code>NotFoundException</code>.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.LimitExceededException">
            You have already reached the limit for a requested resource.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceInUseException">
            The resource is already in use and not available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/CreateDeliveryStream">REST API Reference for CreateDeliveryStream Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.IAmazonKinesisFirehose.CreateDeliveryStreamAsync(Amazon.KinesisFirehose.Model.CreateDeliveryStreamRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a Kinesis Data Firehose delivery stream.
            
             
            <para>
            By default, you can create up to 50 delivery streams per AWS Region.
            </para>
             
            <para>
            This is an asynchronous operation that immediately returns. The initial status of
            the delivery stream is <code>CREATING</code>. After the delivery stream is created,
            its status is <code>ACTIVE</code> and it now accepts data. If the delivery stream
            creation fails, the status transitions to <code>CREATING_FAILED</code>. Attempts to
            send data to a delivery stream that is not in the <code>ACTIVE</code> state cause
            an exception. To check the state of a delivery stream, use <a>DescribeDeliveryStream</a>.
            </para>
             
            <para>
            If the status of a delivery stream is <code>CREATING_FAILED</code>, this status doesn't
            change, and you can't invoke <code>CreateDeliveryStream</code> again on it. However,
            you can invoke the <a>DeleteDeliveryStream</a> operation to delete it.
            </para>
             
            <para>
            A Kinesis Data Firehose delivery stream can be configured to receive records directly
            from providers using <a>PutRecord</a> or <a>PutRecordBatch</a>, or it can be configured
            to use an existing Kinesis stream as its source. To specify a Kinesis data stream
            as input, set the <code>DeliveryStreamType</code> parameter to <code>KinesisStreamAsSource</code>,
            and provide the Kinesis stream Amazon Resource Name (ARN) and role ARN in the <code>KinesisStreamSourceConfiguration</code>
            parameter.
            </para>
             
            <para>
            To create a delivery stream with server-side encryption (SSE) enabled, include <a>DeliveryStreamEncryptionConfigurationInput</a>
            in your request. This is optional. You can also invoke <a>StartDeliveryStreamEncryption</a>
            to turn on SSE for an existing delivery stream that doesn't have SSE enabled.
            </para>
             
            <para>
            A delivery stream is configured with a single destination: Amazon S3, Amazon ES, Amazon
            Redshift, or Splunk. You must specify only one of the following destination configuration
            parameters: <code>ExtendedS3DestinationConfiguration</code>, <code>S3DestinationConfiguration</code>,
            <code>ElasticsearchDestinationConfiguration</code>, <code>RedshiftDestinationConfiguration</code>,
            or <code>SplunkDestinationConfiguration</code>.
            </para>
             
            <para>
            When you specify <code>S3DestinationConfiguration</code>, you can also provide the
            following optional values: BufferingHints, <code>EncryptionConfiguration</code>, and
            <code>CompressionFormat</code>. By default, if no <code>BufferingHints</code> value
            is provided, Kinesis Data Firehose buffers data up to 5 MB or for 5 minutes, whichever
            condition is satisfied first. <code>BufferingHints</code> is a hint, so there are
            some cases where the service cannot adhere to these conditions strictly. For example,
            record boundaries might be such that the size is a little over or under the configured
            buffering size. By default, no encryption is performed. We strongly recommend that
            you enable encryption to ensure secure data storage in Amazon S3.
            </para>
             
            <para>
            A few notes about Amazon Redshift as a destination:
            </para>
             <ul> <li> 
            <para>
            An Amazon Redshift destination requires an S3 bucket as intermediate location. Kinesis
            Data Firehose first delivers data to Amazon S3 and then uses <code>COPY</code> syntax
            to load data into an Amazon Redshift table. This is specified in the <code>RedshiftDestinationConfiguration.S3Configuration</code>
            parameter.
            </para>
             </li> <li> 
            <para>
            The compression formats <code>SNAPPY</code> or <code>ZIP</code> cannot be specified
            in <code>RedshiftDestinationConfiguration.S3Configuration</code> because the Amazon
            Redshift <code>COPY</code> operation that reads from the S3 bucket doesn't support
            these compression formats.
            </para>
             </li> <li> 
            <para>
            We strongly recommend that you use the user name and password you provide exclusively
            with Kinesis Data Firehose, and that the permissions for the account are restricted
            for Amazon Redshift <code>INSERT</code> permissions.
            </para>
             </li> </ul> 
            <para>
            Kinesis Data Firehose assumes the IAM role that is configured as part of the destination.
            The role should allow the Kinesis Data Firehose principal to assume the role, and
            the role should have permissions that allow the service to deliver the data. For more
            information, see <a href="https://docs.aws.amazon.com/firehose/latest/dev/controlling-access.html#using-iam-s3">Grant
            Kinesis Data Firehose Access to an Amazon S3 Destination</a> in the <i>Amazon Kinesis
            Data Firehose Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDeliveryStream service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateDeliveryStream service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidArgumentException">
            The specified input parameter has a value that is not valid.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidKMSResourceException">
            Kinesis Data Firehose throws this exception when an attempt to put records or to start
            or stop delivery stream encryption fails. This happens when the KMS service throws
            one of the following exception types: <code>AccessDeniedException</code>, <code>InvalidStateException</code>,
            <code>DisabledException</code>, or <code>NotFoundException</code>.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.LimitExceededException">
            You have already reached the limit for a requested resource.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceInUseException">
            The resource is already in use and not available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/CreateDeliveryStream">REST API Reference for CreateDeliveryStream Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.IAmazonKinesisFirehose.DeleteDeliveryStream(System.String)">
            <summary>
            Deletes a delivery stream and its data.
            
             
            <para>
            To check the state of a delivery stream, use <a>DescribeDeliveryStream</a>. You can
            delete a delivery stream only if it is in one of the following states: <code>ACTIVE</code>,
            <code>DELETING</code>, <code>CREATING_FAILED</code>, or <code>DELETING_FAILED</code>.
            You can't delete a delivery stream that is in the <code>CREATING</code> state. While
            the deletion request is in process, the delivery stream is in the <code>DELETING</code>
            state.
            </para>
             
            <para>
            While the delivery stream is in the <code>DELETING</code> state, the service might
            continue to accept records, but it doesn't make any guarantees with respect to delivering
            the data. Therefore, as a best practice, first stop any applications that are sending
            records before you delete a delivery stream.
            </para>
            </summary>
            <param name="deliveryStreamName">The name of the delivery stream.</param>
            
            <returns>The response from the DeleteDeliveryStream service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceInUseException">
            The resource is already in use and not available for this operation.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/DeleteDeliveryStream">REST API Reference for DeleteDeliveryStream Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.IAmazonKinesisFirehose.DeleteDeliveryStream(Amazon.KinesisFirehose.Model.DeleteDeliveryStreamRequest)">
            <summary>
            Deletes a delivery stream and its data.
            
             
            <para>
            To check the state of a delivery stream, use <a>DescribeDeliveryStream</a>. You can
            delete a delivery stream only if it is in one of the following states: <code>ACTIVE</code>,
            <code>DELETING</code>, <code>CREATING_FAILED</code>, or <code>DELETING_FAILED</code>.
            You can't delete a delivery stream that is in the <code>CREATING</code> state. While
            the deletion request is in process, the delivery stream is in the <code>DELETING</code>
            state.
            </para>
             
            <para>
            While the delivery stream is in the <code>DELETING</code> state, the service might
            continue to accept records, but it doesn't make any guarantees with respect to delivering
            the data. Therefore, as a best practice, first stop any applications that are sending
            records before you delete a delivery stream.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDeliveryStream service method.</param>
            
            <returns>The response from the DeleteDeliveryStream service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceInUseException">
            The resource is already in use and not available for this operation.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/DeleteDeliveryStream">REST API Reference for DeleteDeliveryStream Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.IAmazonKinesisFirehose.DeleteDeliveryStreamAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a delivery stream and its data.
            
             
            <para>
            To check the state of a delivery stream, use <a>DescribeDeliveryStream</a>. You can
            delete a delivery stream only if it is in one of the following states: <code>ACTIVE</code>,
            <code>DELETING</code>, <code>CREATING_FAILED</code>, or <code>DELETING_FAILED</code>.
            You can't delete a delivery stream that is in the <code>CREATING</code> state. While
            the deletion request is in process, the delivery stream is in the <code>DELETING</code>
            state.
            </para>
             
            <para>
            While the delivery stream is in the <code>DELETING</code> state, the service might
            continue to accept records, but it doesn't make any guarantees with respect to delivering
            the data. Therefore, as a best practice, first stop any applications that are sending
            records before you delete a delivery stream.
            </para>
            </summary>
            <param name="deliveryStreamName">The name of the delivery stream.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteDeliveryStream service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceInUseException">
            The resource is already in use and not available for this operation.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/DeleteDeliveryStream">REST API Reference for DeleteDeliveryStream Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.IAmazonKinesisFirehose.DeleteDeliveryStreamAsync(Amazon.KinesisFirehose.Model.DeleteDeliveryStreamRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a delivery stream and its data.
            
             
            <para>
            To check the state of a delivery stream, use <a>DescribeDeliveryStream</a>. You can
            delete a delivery stream only if it is in one of the following states: <code>ACTIVE</code>,
            <code>DELETING</code>, <code>CREATING_FAILED</code>, or <code>DELETING_FAILED</code>.
            You can't delete a delivery stream that is in the <code>CREATING</code> state. While
            the deletion request is in process, the delivery stream is in the <code>DELETING</code>
            state.
            </para>
             
            <para>
            While the delivery stream is in the <code>DELETING</code> state, the service might
            continue to accept records, but it doesn't make any guarantees with respect to delivering
            the data. Therefore, as a best practice, first stop any applications that are sending
            records before you delete a delivery stream.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDeliveryStream service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteDeliveryStream service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceInUseException">
            The resource is already in use and not available for this operation.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/DeleteDeliveryStream">REST API Reference for DeleteDeliveryStream Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.IAmazonKinesisFirehose.DescribeDeliveryStream(Amazon.KinesisFirehose.Model.DescribeDeliveryStreamRequest)">
            <summary>
            Describes the specified delivery stream and its status. For example, after your delivery
            stream is created, call <code>DescribeDeliveryStream</code> to see whether the delivery
            stream is <code>ACTIVE</code> and therefore ready for data to be sent to it. 
            
             
            <para>
            If the status of a delivery stream is <code>CREATING_FAILED</code>, this status doesn't
            change, and you can't invoke <a>CreateDeliveryStream</a> again on it. However, you
            can invoke the <a>DeleteDeliveryStream</a> operation to delete it. If the status is
            <code>DELETING_FAILED</code>, you can force deletion by invoking <a>DeleteDeliveryStream</a>
            again but with <a>DeleteDeliveryStreamInput$AllowForceDelete</a> set to true.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDeliveryStream service method.</param>
            
            <returns>The response from the DescribeDeliveryStream service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/DescribeDeliveryStream">REST API Reference for DescribeDeliveryStream Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.IAmazonKinesisFirehose.DescribeDeliveryStreamAsync(Amazon.KinesisFirehose.Model.DescribeDeliveryStreamRequest,System.Threading.CancellationToken)">
            <summary>
            Describes the specified delivery stream and its status. For example, after your delivery
            stream is created, call <code>DescribeDeliveryStream</code> to see whether the delivery
            stream is <code>ACTIVE</code> and therefore ready for data to be sent to it. 
            
             
            <para>
            If the status of a delivery stream is <code>CREATING_FAILED</code>, this status doesn't
            change, and you can't invoke <a>CreateDeliveryStream</a> again on it. However, you
            can invoke the <a>DeleteDeliveryStream</a> operation to delete it. If the status is
            <code>DELETING_FAILED</code>, you can force deletion by invoking <a>DeleteDeliveryStream</a>
            again but with <a>DeleteDeliveryStreamInput$AllowForceDelete</a> set to true.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDeliveryStream service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeDeliveryStream service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/DescribeDeliveryStream">REST API Reference for DescribeDeliveryStream Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.IAmazonKinesisFirehose.ListDeliveryStreams">
            <summary>
            Lists your delivery streams in alphabetical order of their names.
            
             
            <para>
            The number of delivery streams might be too large to return using a single call to
            <code>ListDeliveryStreams</code>. You can limit the number of delivery streams returned,
            using the <code>Limit</code> parameter. To determine whether there are more delivery
            streams to list, check the value of <code>HasMoreDeliveryStreams</code> in the output.
            If there are more delivery streams to list, you can request them by calling this operation
            again and setting the <code>ExclusiveStartDeliveryStreamName</code> parameter to the
            name of the last delivery stream returned in the last call.
            </para>
            </summary>
            
            <returns>The response from the ListDeliveryStreams service method, as returned by KinesisFirehose.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/ListDeliveryStreams">REST API Reference for ListDeliveryStreams Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.IAmazonKinesisFirehose.ListDeliveryStreams(Amazon.KinesisFirehose.Model.ListDeliveryStreamsRequest)">
            <summary>
            Lists your delivery streams in alphabetical order of their names.
            
             
            <para>
            The number of delivery streams might be too large to return using a single call to
            <code>ListDeliveryStreams</code>. You can limit the number of delivery streams returned,
            using the <code>Limit</code> parameter. To determine whether there are more delivery
            streams to list, check the value of <code>HasMoreDeliveryStreams</code> in the output.
            If there are more delivery streams to list, you can request them by calling this operation
            again and setting the <code>ExclusiveStartDeliveryStreamName</code> parameter to the
            name of the last delivery stream returned in the last call.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListDeliveryStreams service method.</param>
            
            <returns>The response from the ListDeliveryStreams service method, as returned by KinesisFirehose.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/ListDeliveryStreams">REST API Reference for ListDeliveryStreams Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.IAmazonKinesisFirehose.ListDeliveryStreamsAsync(System.Threading.CancellationToken)">
            <summary>
            Lists your delivery streams in alphabetical order of their names.
            
             
            <para>
            The number of delivery streams might be too large to return using a single call to
            <code>ListDeliveryStreams</code>. You can limit the number of delivery streams returned,
            using the <code>Limit</code> parameter. To determine whether there are more delivery
            streams to list, check the value of <code>HasMoreDeliveryStreams</code> in the output.
            If there are more delivery streams to list, you can request them by calling this operation
            again and setting the <code>ExclusiveStartDeliveryStreamName</code> parameter to the
            name of the last delivery stream returned in the last call.
            </para>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListDeliveryStreams service method, as returned by KinesisFirehose.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/ListDeliveryStreams">REST API Reference for ListDeliveryStreams Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.IAmazonKinesisFirehose.ListDeliveryStreamsAsync(Amazon.KinesisFirehose.Model.ListDeliveryStreamsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists your delivery streams in alphabetical order of their names.
            
             
            <para>
            The number of delivery streams might be too large to return using a single call to
            <code>ListDeliveryStreams</code>. You can limit the number of delivery streams returned,
            using the <code>Limit</code> parameter. To determine whether there are more delivery
            streams to list, check the value of <code>HasMoreDeliveryStreams</code> in the output.
            If there are more delivery streams to list, you can request them by calling this operation
            again and setting the <code>ExclusiveStartDeliveryStreamName</code> parameter to the
            name of the last delivery stream returned in the last call.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListDeliveryStreams service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListDeliveryStreams service method, as returned by KinesisFirehose.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/ListDeliveryStreams">REST API Reference for ListDeliveryStreams Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.IAmazonKinesisFirehose.ListTagsForDeliveryStream(Amazon.KinesisFirehose.Model.ListTagsForDeliveryStreamRequest)">
            <summary>
            Lists the tags for the specified delivery stream. This operation has a limit of five
            transactions per second per account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForDeliveryStream service method.</param>
            
            <returns>The response from the ListTagsForDeliveryStream service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidArgumentException">
            The specified input parameter has a value that is not valid.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.LimitExceededException">
            You have already reached the limit for a requested resource.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/ListTagsForDeliveryStream">REST API Reference for ListTagsForDeliveryStream Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.IAmazonKinesisFirehose.ListTagsForDeliveryStreamAsync(Amazon.KinesisFirehose.Model.ListTagsForDeliveryStreamRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the tags for the specified delivery stream. This operation has a limit of five
            transactions per second per account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForDeliveryStream service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForDeliveryStream service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidArgumentException">
            The specified input parameter has a value that is not valid.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.LimitExceededException">
            You have already reached the limit for a requested resource.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/ListTagsForDeliveryStream">REST API Reference for ListTagsForDeliveryStream Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.IAmazonKinesisFirehose.PutRecord(System.String,Amazon.KinesisFirehose.Model.Record)">
            <summary>
            Writes a single data record into an Amazon Kinesis Data Firehose delivery stream.
            To write multiple data records into a delivery stream, use <a>PutRecordBatch</a>.
            Applications using these operations are referred to as producers.
            
             
            <para>
            By default, each delivery stream can take in up to 2,000 transactions per second,
            5,000 records per second, or 5 MB per second. If you use <a>PutRecord</a> and <a>PutRecordBatch</a>,
            the limits are an aggregate across these two operations for each delivery stream.
            For more information about limits and how to request an increase, see <a href="https://docs.aws.amazon.com/firehose/latest/dev/limits.html">Amazon
            Kinesis Data Firehose Limits</a>. 
            </para>
             
            <para>
            You must specify the name of the delivery stream and the data record when using <a>PutRecord</a>.
            The data record consists of a data blob that can be up to 1,000 KiB in size, and any
            kind of data. For example, it can be a segment from a log file, geographic location
            data, website clickstream data, and so on.
            </para>
             
            <para>
            Kinesis Data Firehose buffers records before delivering them to the destination. To
            disambiguate the data blobs at the destination, a common solution is to use delimiters
            in the data, such as a newline (<code>\n</code>) or some other character unique within
            the data. This allows the consumer application to parse individual data items when
            reading the data from the destination.
            </para>
             
            <para>
            The <code>PutRecord</code> operation returns a <code>RecordId</code>, which is a unique
            string assigned to each record. Producer applications can use this ID for purposes
            such as auditability and investigation.
            </para>
             
            <para>
            If the <code>PutRecord</code> operation throws a <code>ServiceUnavailableException</code>,
            back off and retry. If the exception persists, it is possible that the throughput
            limits have been exceeded for the delivery stream. 
            </para>
             
            <para>
            Data records sent to Kinesis Data Firehose are stored for 24 hours from the time they
            are added to a delivery stream as it tries to send the records to the destination.
            If the destination is unreachable for more than 24 hours, the data is no longer available.
            </para>
             <important> 
            <para>
            Don't concatenate two or more base64 strings to form the data fields of your records.
            Instead, concatenate the raw data, then perform base64 encoding.
            </para>
             </important>
            </summary>
            <param name="deliveryStreamName">The name of the delivery stream.</param>
            <param name="record">The record.</param>
            
            <returns>The response from the PutRecord service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidArgumentException">
            The specified input parameter has a value that is not valid.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidKMSResourceException">
            Kinesis Data Firehose throws this exception when an attempt to put records or to start
            or stop delivery stream encryption fails. This happens when the KMS service throws
            one of the following exception types: <code>AccessDeniedException</code>, <code>InvalidStateException</code>,
            <code>DisabledException</code>, or <code>NotFoundException</code>.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ServiceUnavailableException">
            The service is unavailable. Back off and retry the operation. If you continue to see
            the exception, throughput limits for the delivery stream may have been exceeded. For
            more information about limits and how to request an increase, see <a href="https://docs.aws.amazon.com/firehose/latest/dev/limits.html">Amazon
            Kinesis Data Firehose Limits</a>.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/PutRecord">REST API Reference for PutRecord Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.IAmazonKinesisFirehose.PutRecord(Amazon.KinesisFirehose.Model.PutRecordRequest)">
            <summary>
            Writes a single data record into an Amazon Kinesis Data Firehose delivery stream.
            To write multiple data records into a delivery stream, use <a>PutRecordBatch</a>.
            Applications using these operations are referred to as producers.
            
             
            <para>
            By default, each delivery stream can take in up to 2,000 transactions per second,
            5,000 records per second, or 5 MB per second. If you use <a>PutRecord</a> and <a>PutRecordBatch</a>,
            the limits are an aggregate across these two operations for each delivery stream.
            For more information about limits and how to request an increase, see <a href="https://docs.aws.amazon.com/firehose/latest/dev/limits.html">Amazon
            Kinesis Data Firehose Limits</a>. 
            </para>
             
            <para>
            You must specify the name of the delivery stream and the data record when using <a>PutRecord</a>.
            The data record consists of a data blob that can be up to 1,000 KiB in size, and any
            kind of data. For example, it can be a segment from a log file, geographic location
            data, website clickstream data, and so on.
            </para>
             
            <para>
            Kinesis Data Firehose buffers records before delivering them to the destination. To
            disambiguate the data blobs at the destination, a common solution is to use delimiters
            in the data, such as a newline (<code>\n</code>) or some other character unique within
            the data. This allows the consumer application to parse individual data items when
            reading the data from the destination.
            </para>
             
            <para>
            The <code>PutRecord</code> operation returns a <code>RecordId</code>, which is a unique
            string assigned to each record. Producer applications can use this ID for purposes
            such as auditability and investigation.
            </para>
             
            <para>
            If the <code>PutRecord</code> operation throws a <code>ServiceUnavailableException</code>,
            back off and retry. If the exception persists, it is possible that the throughput
            limits have been exceeded for the delivery stream. 
            </para>
             
            <para>
            Data records sent to Kinesis Data Firehose are stored for 24 hours from the time they
            are added to a delivery stream as it tries to send the records to the destination.
            If the destination is unreachable for more than 24 hours, the data is no longer available.
            </para>
             <important> 
            <para>
            Don't concatenate two or more base64 strings to form the data fields of your records.
            Instead, concatenate the raw data, then perform base64 encoding.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutRecord service method.</param>
            
            <returns>The response from the PutRecord service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidArgumentException">
            The specified input parameter has a value that is not valid.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidKMSResourceException">
            Kinesis Data Firehose throws this exception when an attempt to put records or to start
            or stop delivery stream encryption fails. This happens when the KMS service throws
            one of the following exception types: <code>AccessDeniedException</code>, <code>InvalidStateException</code>,
            <code>DisabledException</code>, or <code>NotFoundException</code>.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ServiceUnavailableException">
            The service is unavailable. Back off and retry the operation. If you continue to see
            the exception, throughput limits for the delivery stream may have been exceeded. For
            more information about limits and how to request an increase, see <a href="https://docs.aws.amazon.com/firehose/latest/dev/limits.html">Amazon
            Kinesis Data Firehose Limits</a>.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/PutRecord">REST API Reference for PutRecord Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.IAmazonKinesisFirehose.PutRecordAsync(System.String,Amazon.KinesisFirehose.Model.Record,System.Threading.CancellationToken)">
            <summary>
            Writes a single data record into an Amazon Kinesis Data Firehose delivery stream.
            To write multiple data records into a delivery stream, use <a>PutRecordBatch</a>.
            Applications using these operations are referred to as producers.
            
             
            <para>
            By default, each delivery stream can take in up to 2,000 transactions per second,
            5,000 records per second, or 5 MB per second. If you use <a>PutRecord</a> and <a>PutRecordBatch</a>,
            the limits are an aggregate across these two operations for each delivery stream.
            For more information about limits and how to request an increase, see <a href="https://docs.aws.amazon.com/firehose/latest/dev/limits.html">Amazon
            Kinesis Data Firehose Limits</a>. 
            </para>
             
            <para>
            You must specify the name of the delivery stream and the data record when using <a>PutRecord</a>.
            The data record consists of a data blob that can be up to 1,000 KiB in size, and any
            kind of data. For example, it can be a segment from a log file, geographic location
            data, website clickstream data, and so on.
            </para>
             
            <para>
            Kinesis Data Firehose buffers records before delivering them to the destination. To
            disambiguate the data blobs at the destination, a common solution is to use delimiters
            in the data, such as a newline (<code>\n</code>) or some other character unique within
            the data. This allows the consumer application to parse individual data items when
            reading the data from the destination.
            </para>
             
            <para>
            The <code>PutRecord</code> operation returns a <code>RecordId</code>, which is a unique
            string assigned to each record. Producer applications can use this ID for purposes
            such as auditability and investigation.
            </para>
             
            <para>
            If the <code>PutRecord</code> operation throws a <code>ServiceUnavailableException</code>,
            back off and retry. If the exception persists, it is possible that the throughput
            limits have been exceeded for the delivery stream. 
            </para>
             
            <para>
            Data records sent to Kinesis Data Firehose are stored for 24 hours from the time they
            are added to a delivery stream as it tries to send the records to the destination.
            If the destination is unreachable for more than 24 hours, the data is no longer available.
            </para>
             <important> 
            <para>
            Don't concatenate two or more base64 strings to form the data fields of your records.
            Instead, concatenate the raw data, then perform base64 encoding.
            </para>
             </important>
            </summary>
            <param name="deliveryStreamName">The name of the delivery stream.</param>
            <param name="record">The record.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutRecord service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidArgumentException">
            The specified input parameter has a value that is not valid.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidKMSResourceException">
            Kinesis Data Firehose throws this exception when an attempt to put records or to start
            or stop delivery stream encryption fails. This happens when the KMS service throws
            one of the following exception types: <code>AccessDeniedException</code>, <code>InvalidStateException</code>,
            <code>DisabledException</code>, or <code>NotFoundException</code>.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ServiceUnavailableException">
            The service is unavailable. Back off and retry the operation. If you continue to see
            the exception, throughput limits for the delivery stream may have been exceeded. For
            more information about limits and how to request an increase, see <a href="https://docs.aws.amazon.com/firehose/latest/dev/limits.html">Amazon
            Kinesis Data Firehose Limits</a>.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/PutRecord">REST API Reference for PutRecord Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.IAmazonKinesisFirehose.PutRecordAsync(Amazon.KinesisFirehose.Model.PutRecordRequest,System.Threading.CancellationToken)">
            <summary>
            Writes a single data record into an Amazon Kinesis Data Firehose delivery stream.
            To write multiple data records into a delivery stream, use <a>PutRecordBatch</a>.
            Applications using these operations are referred to as producers.
            
             
            <para>
            By default, each delivery stream can take in up to 2,000 transactions per second,
            5,000 records per second, or 5 MB per second. If you use <a>PutRecord</a> and <a>PutRecordBatch</a>,
            the limits are an aggregate across these two operations for each delivery stream.
            For more information about limits and how to request an increase, see <a href="https://docs.aws.amazon.com/firehose/latest/dev/limits.html">Amazon
            Kinesis Data Firehose Limits</a>. 
            </para>
             
            <para>
            You must specify the name of the delivery stream and the data record when using <a>PutRecord</a>.
            The data record consists of a data blob that can be up to 1,000 KiB in size, and any
            kind of data. For example, it can be a segment from a log file, geographic location
            data, website clickstream data, and so on.
            </para>
             
            <para>
            Kinesis Data Firehose buffers records before delivering them to the destination. To
            disambiguate the data blobs at the destination, a common solution is to use delimiters
            in the data, such as a newline (<code>\n</code>) or some other character unique within
            the data. This allows the consumer application to parse individual data items when
            reading the data from the destination.
            </para>
             
            <para>
            The <code>PutRecord</code> operation returns a <code>RecordId</code>, which is a unique
            string assigned to each record. Producer applications can use this ID for purposes
            such as auditability and investigation.
            </para>
             
            <para>
            If the <code>PutRecord</code> operation throws a <code>ServiceUnavailableException</code>,
            back off and retry. If the exception persists, it is possible that the throughput
            limits have been exceeded for the delivery stream. 
            </para>
             
            <para>
            Data records sent to Kinesis Data Firehose are stored for 24 hours from the time they
            are added to a delivery stream as it tries to send the records to the destination.
            If the destination is unreachable for more than 24 hours, the data is no longer available.
            </para>
             <important> 
            <para>
            Don't concatenate two or more base64 strings to form the data fields of your records.
            Instead, concatenate the raw data, then perform base64 encoding.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutRecord service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutRecord service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidArgumentException">
            The specified input parameter has a value that is not valid.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidKMSResourceException">
            Kinesis Data Firehose throws this exception when an attempt to put records or to start
            or stop delivery stream encryption fails. This happens when the KMS service throws
            one of the following exception types: <code>AccessDeniedException</code>, <code>InvalidStateException</code>,
            <code>DisabledException</code>, or <code>NotFoundException</code>.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ServiceUnavailableException">
            The service is unavailable. Back off and retry the operation. If you continue to see
            the exception, throughput limits for the delivery stream may have been exceeded. For
            more information about limits and how to request an increase, see <a href="https://docs.aws.amazon.com/firehose/latest/dev/limits.html">Amazon
            Kinesis Data Firehose Limits</a>.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/PutRecord">REST API Reference for PutRecord Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.IAmazonKinesisFirehose.PutRecordBatch(System.String,System.Collections.Generic.List{Amazon.KinesisFirehose.Model.Record})">
            <summary>
            Writes multiple data records into a delivery stream in a single call, which can achieve
            higher throughput per producer than when writing single records. To write single data
            records into a delivery stream, use <a>PutRecord</a>. Applications using these operations
            are referred to as producers.
            
             
            <para>
            For information about service quota, see <a href="https://docs.aws.amazon.com/firehose/latest/dev/limits.html">Amazon
            Kinesis Data Firehose Quota</a>.
            </para>
             
            <para>
            Each <a>PutRecordBatch</a> request supports up to 500 records. Each record in the
            request can be as large as 1,000 KB (before base64 encoding), up to a limit of 4 MB
            for the entire request. These limits cannot be changed.
            </para>
             
            <para>
            You must specify the name of the delivery stream and the data record when using <a>PutRecord</a>.
            The data record consists of a data blob that can be up to 1,000 KB in size, and any
            kind of data. For example, it could be a segment from a log file, geographic location
            data, website clickstream data, and so on.
            </para>
             
            <para>
            Kinesis Data Firehose buffers records before delivering them to the destination. To
            disambiguate the data blobs at the destination, a common solution is to use delimiters
            in the data, such as a newline (<code>\n</code>) or some other character unique within
            the data. This allows the consumer application to parse individual data items when
            reading the data from the destination.
            </para>
             
            <para>
            The <a>PutRecordBatch</a> response includes a count of failed records, <code>FailedPutCount</code>,
            and an array of responses, <code>RequestResponses</code>. Even if the <a>PutRecordBatch</a>
            call succeeds, the value of <code>FailedPutCount</code> may be greater than 0, indicating
            that there are records for which the operation didn't succeed. Each entry in the <code>RequestResponses</code>
            array provides additional information about the processed record. It directly correlates
            with a record in the request array using the same ordering, from the top to the bottom.
            The response array always includes the same number of records as the request array.
            <code>RequestResponses</code> includes both successfully and unsuccessfully processed
            records. Kinesis Data Firehose tries to process all records in each <a>PutRecordBatch</a>
            request. A single record failure does not stop the processing of subsequent records.
            
            </para>
             
            <para>
            A successfully processed record includes a <code>RecordId</code> value, which is unique
            for the record. An unsuccessfully processed record includes <code>ErrorCode</code>
            and <code>ErrorMessage</code> values. <code>ErrorCode</code> reflects the type of
            error, and is one of the following values: <code>ServiceUnavailableException</code>
            or <code>InternalFailure</code>. <code>ErrorMessage</code> provides more detailed
            information about the error.
            </para>
             
            <para>
            If there is an internal server error or a timeout, the write might have completed
            or it might have failed. If <code>FailedPutCount</code> is greater than 0, retry the
            request, resending only those records that might have failed processing. This minimizes
            the possible duplicate records and also reduces the total bytes sent (and corresponding
            charges). We recommend that you handle any duplicates at the destination.
            </para>
             
            <para>
            If <a>PutRecordBatch</a> throws <code>ServiceUnavailableException</code>, back off
            and retry. If the exception persists, it is possible that the throughput limits have
            been exceeded for the delivery stream.
            </para>
             
            <para>
            Data records sent to Kinesis Data Firehose are stored for 24 hours from the time they
            are added to a delivery stream as it attempts to send the records to the destination.
            If the destination is unreachable for more than 24 hours, the data is no longer available.
            </para>
             <important> 
            <para>
            Don't concatenate two or more base64 strings to form the data fields of your records.
            Instead, concatenate the raw data, then perform base64 encoding.
            </para>
             </important>
            </summary>
            <param name="deliveryStreamName">The name of the delivery stream.</param>
            <param name="records">One or more records.</param>
            
            <returns>The response from the PutRecordBatch service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidArgumentException">
            The specified input parameter has a value that is not valid.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidKMSResourceException">
            Kinesis Data Firehose throws this exception when an attempt to put records or to start
            or stop delivery stream encryption fails. This happens when the KMS service throws
            one of the following exception types: <code>AccessDeniedException</code>, <code>InvalidStateException</code>,
            <code>DisabledException</code>, or <code>NotFoundException</code>.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ServiceUnavailableException">
            The service is unavailable. Back off and retry the operation. If you continue to see
            the exception, throughput limits for the delivery stream may have been exceeded. For
            more information about limits and how to request an increase, see <a href="https://docs.aws.amazon.com/firehose/latest/dev/limits.html">Amazon
            Kinesis Data Firehose Limits</a>.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/PutRecordBatch">REST API Reference for PutRecordBatch Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.IAmazonKinesisFirehose.PutRecordBatch(Amazon.KinesisFirehose.Model.PutRecordBatchRequest)">
            <summary>
            Writes multiple data records into a delivery stream in a single call, which can achieve
            higher throughput per producer than when writing single records. To write single data
            records into a delivery stream, use <a>PutRecord</a>. Applications using these operations
            are referred to as producers.
            
             
            <para>
            For information about service quota, see <a href="https://docs.aws.amazon.com/firehose/latest/dev/limits.html">Amazon
            Kinesis Data Firehose Quota</a>.
            </para>
             
            <para>
            Each <a>PutRecordBatch</a> request supports up to 500 records. Each record in the
            request can be as large as 1,000 KB (before base64 encoding), up to a limit of 4 MB
            for the entire request. These limits cannot be changed.
            </para>
             
            <para>
            You must specify the name of the delivery stream and the data record when using <a>PutRecord</a>.
            The data record consists of a data blob that can be up to 1,000 KB in size, and any
            kind of data. For example, it could be a segment from a log file, geographic location
            data, website clickstream data, and so on.
            </para>
             
            <para>
            Kinesis Data Firehose buffers records before delivering them to the destination. To
            disambiguate the data blobs at the destination, a common solution is to use delimiters
            in the data, such as a newline (<code>\n</code>) or some other character unique within
            the data. This allows the consumer application to parse individual data items when
            reading the data from the destination.
            </para>
             
            <para>
            The <a>PutRecordBatch</a> response includes a count of failed records, <code>FailedPutCount</code>,
            and an array of responses, <code>RequestResponses</code>. Even if the <a>PutRecordBatch</a>
            call succeeds, the value of <code>FailedPutCount</code> may be greater than 0, indicating
            that there are records for which the operation didn't succeed. Each entry in the <code>RequestResponses</code>
            array provides additional information about the processed record. It directly correlates
            with a record in the request array using the same ordering, from the top to the bottom.
            The response array always includes the same number of records as the request array.
            <code>RequestResponses</code> includes both successfully and unsuccessfully processed
            records. Kinesis Data Firehose tries to process all records in each <a>PutRecordBatch</a>
            request. A single record failure does not stop the processing of subsequent records.
            
            </para>
             
            <para>
            A successfully processed record includes a <code>RecordId</code> value, which is unique
            for the record. An unsuccessfully processed record includes <code>ErrorCode</code>
            and <code>ErrorMessage</code> values. <code>ErrorCode</code> reflects the type of
            error, and is one of the following values: <code>ServiceUnavailableException</code>
            or <code>InternalFailure</code>. <code>ErrorMessage</code> provides more detailed
            information about the error.
            </para>
             
            <para>
            If there is an internal server error or a timeout, the write might have completed
            or it might have failed. If <code>FailedPutCount</code> is greater than 0, retry the
            request, resending only those records that might have failed processing. This minimizes
            the possible duplicate records and also reduces the total bytes sent (and corresponding
            charges). We recommend that you handle any duplicates at the destination.
            </para>
             
            <para>
            If <a>PutRecordBatch</a> throws <code>ServiceUnavailableException</code>, back off
            and retry. If the exception persists, it is possible that the throughput limits have
            been exceeded for the delivery stream.
            </para>
             
            <para>
            Data records sent to Kinesis Data Firehose are stored for 24 hours from the time they
            are added to a delivery stream as it attempts to send the records to the destination.
            If the destination is unreachable for more than 24 hours, the data is no longer available.
            </para>
             <important> 
            <para>
            Don't concatenate two or more base64 strings to form the data fields of your records.
            Instead, concatenate the raw data, then perform base64 encoding.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutRecordBatch service method.</param>
            
            <returns>The response from the PutRecordBatch service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidArgumentException">
            The specified input parameter has a value that is not valid.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidKMSResourceException">
            Kinesis Data Firehose throws this exception when an attempt to put records or to start
            or stop delivery stream encryption fails. This happens when the KMS service throws
            one of the following exception types: <code>AccessDeniedException</code>, <code>InvalidStateException</code>,
            <code>DisabledException</code>, or <code>NotFoundException</code>.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ServiceUnavailableException">
            The service is unavailable. Back off and retry the operation. If you continue to see
            the exception, throughput limits for the delivery stream may have been exceeded. For
            more information about limits and how to request an increase, see <a href="https://docs.aws.amazon.com/firehose/latest/dev/limits.html">Amazon
            Kinesis Data Firehose Limits</a>.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/PutRecordBatch">REST API Reference for PutRecordBatch Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.IAmazonKinesisFirehose.PutRecordBatchAsync(System.String,System.Collections.Generic.List{Amazon.KinesisFirehose.Model.Record},System.Threading.CancellationToken)">
            <summary>
            Writes multiple data records into a delivery stream in a single call, which can achieve
            higher throughput per producer than when writing single records. To write single data
            records into a delivery stream, use <a>PutRecord</a>. Applications using these operations
            are referred to as producers.
            
             
            <para>
            For information about service quota, see <a href="https://docs.aws.amazon.com/firehose/latest/dev/limits.html">Amazon
            Kinesis Data Firehose Quota</a>.
            </para>
             
            <para>
            Each <a>PutRecordBatch</a> request supports up to 500 records. Each record in the
            request can be as large as 1,000 KB (before base64 encoding), up to a limit of 4 MB
            for the entire request. These limits cannot be changed.
            </para>
             
            <para>
            You must specify the name of the delivery stream and the data record when using <a>PutRecord</a>.
            The data record consists of a data blob that can be up to 1,000 KB in size, and any
            kind of data. For example, it could be a segment from a log file, geographic location
            data, website clickstream data, and so on.
            </para>
             
            <para>
            Kinesis Data Firehose buffers records before delivering them to the destination. To
            disambiguate the data blobs at the destination, a common solution is to use delimiters
            in the data, such as a newline (<code>\n</code>) or some other character unique within
            the data. This allows the consumer application to parse individual data items when
            reading the data from the destination.
            </para>
             
            <para>
            The <a>PutRecordBatch</a> response includes a count of failed records, <code>FailedPutCount</code>,
            and an array of responses, <code>RequestResponses</code>. Even if the <a>PutRecordBatch</a>
            call succeeds, the value of <code>FailedPutCount</code> may be greater than 0, indicating
            that there are records for which the operation didn't succeed. Each entry in the <code>RequestResponses</code>
            array provides additional information about the processed record. It directly correlates
            with a record in the request array using the same ordering, from the top to the bottom.
            The response array always includes the same number of records as the request array.
            <code>RequestResponses</code> includes both successfully and unsuccessfully processed
            records. Kinesis Data Firehose tries to process all records in each <a>PutRecordBatch</a>
            request. A single record failure does not stop the processing of subsequent records.
            
            </para>
             
            <para>
            A successfully processed record includes a <code>RecordId</code> value, which is unique
            for the record. An unsuccessfully processed record includes <code>ErrorCode</code>
            and <code>ErrorMessage</code> values. <code>ErrorCode</code> reflects the type of
            error, and is one of the following values: <code>ServiceUnavailableException</code>
            or <code>InternalFailure</code>. <code>ErrorMessage</code> provides more detailed
            information about the error.
            </para>
             
            <para>
            If there is an internal server error or a timeout, the write might have completed
            or it might have failed. If <code>FailedPutCount</code> is greater than 0, retry the
            request, resending only those records that might have failed processing. This minimizes
            the possible duplicate records and also reduces the total bytes sent (and corresponding
            charges). We recommend that you handle any duplicates at the destination.
            </para>
             
            <para>
            If <a>PutRecordBatch</a> throws <code>ServiceUnavailableException</code>, back off
            and retry. If the exception persists, it is possible that the throughput limits have
            been exceeded for the delivery stream.
            </para>
             
            <para>
            Data records sent to Kinesis Data Firehose are stored for 24 hours from the time they
            are added to a delivery stream as it attempts to send the records to the destination.
            If the destination is unreachable for more than 24 hours, the data is no longer available.
            </para>
             <important> 
            <para>
            Don't concatenate two or more base64 strings to form the data fields of your records.
            Instead, concatenate the raw data, then perform base64 encoding.
            </para>
             </important>
            </summary>
            <param name="deliveryStreamName">The name of the delivery stream.</param>
            <param name="records">One or more records.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutRecordBatch service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidArgumentException">
            The specified input parameter has a value that is not valid.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidKMSResourceException">
            Kinesis Data Firehose throws this exception when an attempt to put records or to start
            or stop delivery stream encryption fails. This happens when the KMS service throws
            one of the following exception types: <code>AccessDeniedException</code>, <code>InvalidStateException</code>,
            <code>DisabledException</code>, or <code>NotFoundException</code>.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ServiceUnavailableException">
            The service is unavailable. Back off and retry the operation. If you continue to see
            the exception, throughput limits for the delivery stream may have been exceeded. For
            more information about limits and how to request an increase, see <a href="https://docs.aws.amazon.com/firehose/latest/dev/limits.html">Amazon
            Kinesis Data Firehose Limits</a>.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/PutRecordBatch">REST API Reference for PutRecordBatch Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.IAmazonKinesisFirehose.PutRecordBatchAsync(Amazon.KinesisFirehose.Model.PutRecordBatchRequest,System.Threading.CancellationToken)">
            <summary>
            Writes multiple data records into a delivery stream in a single call, which can achieve
            higher throughput per producer than when writing single records. To write single data
            records into a delivery stream, use <a>PutRecord</a>. Applications using these operations
            are referred to as producers.
            
             
            <para>
            For information about service quota, see <a href="https://docs.aws.amazon.com/firehose/latest/dev/limits.html">Amazon
            Kinesis Data Firehose Quota</a>.
            </para>
             
            <para>
            Each <a>PutRecordBatch</a> request supports up to 500 records. Each record in the
            request can be as large as 1,000 KB (before base64 encoding), up to a limit of 4 MB
            for the entire request. These limits cannot be changed.
            </para>
             
            <para>
            You must specify the name of the delivery stream and the data record when using <a>PutRecord</a>.
            The data record consists of a data blob that can be up to 1,000 KB in size, and any
            kind of data. For example, it could be a segment from a log file, geographic location
            data, website clickstream data, and so on.
            </para>
             
            <para>
            Kinesis Data Firehose buffers records before delivering them to the destination. To
            disambiguate the data blobs at the destination, a common solution is to use delimiters
            in the data, such as a newline (<code>\n</code>) or some other character unique within
            the data. This allows the consumer application to parse individual data items when
            reading the data from the destination.
            </para>
             
            <para>
            The <a>PutRecordBatch</a> response includes a count of failed records, <code>FailedPutCount</code>,
            and an array of responses, <code>RequestResponses</code>. Even if the <a>PutRecordBatch</a>
            call succeeds, the value of <code>FailedPutCount</code> may be greater than 0, indicating
            that there are records for which the operation didn't succeed. Each entry in the <code>RequestResponses</code>
            array provides additional information about the processed record. It directly correlates
            with a record in the request array using the same ordering, from the top to the bottom.
            The response array always includes the same number of records as the request array.
            <code>RequestResponses</code> includes both successfully and unsuccessfully processed
            records. Kinesis Data Firehose tries to process all records in each <a>PutRecordBatch</a>
            request. A single record failure does not stop the processing of subsequent records.
            
            </para>
             
            <para>
            A successfully processed record includes a <code>RecordId</code> value, which is unique
            for the record. An unsuccessfully processed record includes <code>ErrorCode</code>
            and <code>ErrorMessage</code> values. <code>ErrorCode</code> reflects the type of
            error, and is one of the following values: <code>ServiceUnavailableException</code>
            or <code>InternalFailure</code>. <code>ErrorMessage</code> provides more detailed
            information about the error.
            </para>
             
            <para>
            If there is an internal server error or a timeout, the write might have completed
            or it might have failed. If <code>FailedPutCount</code> is greater than 0, retry the
            request, resending only those records that might have failed processing. This minimizes
            the possible duplicate records and also reduces the total bytes sent (and corresponding
            charges). We recommend that you handle any duplicates at the destination.
            </para>
             
            <para>
            If <a>PutRecordBatch</a> throws <code>ServiceUnavailableException</code>, back off
            and retry. If the exception persists, it is possible that the throughput limits have
            been exceeded for the delivery stream.
            </para>
             
            <para>
            Data records sent to Kinesis Data Firehose are stored for 24 hours from the time they
            are added to a delivery stream as it attempts to send the records to the destination.
            If the destination is unreachable for more than 24 hours, the data is no longer available.
            </para>
             <important> 
            <para>
            Don't concatenate two or more base64 strings to form the data fields of your records.
            Instead, concatenate the raw data, then perform base64 encoding.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutRecordBatch service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutRecordBatch service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidArgumentException">
            The specified input parameter has a value that is not valid.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidKMSResourceException">
            Kinesis Data Firehose throws this exception when an attempt to put records or to start
            or stop delivery stream encryption fails. This happens when the KMS service throws
            one of the following exception types: <code>AccessDeniedException</code>, <code>InvalidStateException</code>,
            <code>DisabledException</code>, or <code>NotFoundException</code>.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ServiceUnavailableException">
            The service is unavailable. Back off and retry the operation. If you continue to see
            the exception, throughput limits for the delivery stream may have been exceeded. For
            more information about limits and how to request an increase, see <a href="https://docs.aws.amazon.com/firehose/latest/dev/limits.html">Amazon
            Kinesis Data Firehose Limits</a>.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/PutRecordBatch">REST API Reference for PutRecordBatch Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.IAmazonKinesisFirehose.StartDeliveryStreamEncryption(Amazon.KinesisFirehose.Model.StartDeliveryStreamEncryptionRequest)">
            <summary>
            Enables server-side encryption (SSE) for the delivery stream. 
            
             
            <para>
            This operation is asynchronous. It returns immediately. When you invoke it, Kinesis
            Data Firehose first sets the encryption status of the stream to <code>ENABLING</code>,
            and then to <code>ENABLED</code>. The encryption status of a delivery stream is the
            <code>Status</code> property in <a>DeliveryStreamEncryptionConfiguration</a>. If the
            operation fails, the encryption status changes to <code>ENABLING_FAILED</code>. You
            can continue to read and write data to your delivery stream while the encryption status
            is <code>ENABLING</code>, but the data is not encrypted. It can take up to 5 seconds
            after the encryption status changes to <code>ENABLED</code> before all records written
            to the delivery stream are encrypted. To find out whether a record or a batch of records
            was encrypted, check the response elements <a>PutRecordOutput$Encrypted</a> and <a>PutRecordBatchOutput$Encrypted</a>,
            respectively.
            </para>
             
            <para>
            To check the encryption status of a delivery stream, use <a>DescribeDeliveryStream</a>.
            </para>
             
            <para>
            Even if encryption is currently enabled for a delivery stream, you can still invoke
            this operation on it to change the ARN of the CMK or both its type and ARN. If you
            invoke this method to change the CMK, and the old CMK is of type <code>CUSTOMER_MANAGED_CMK</code>,
            Kinesis Data Firehose schedules the grant it had on the old CMK for retirement. If
            the new CMK is of type <code>CUSTOMER_MANAGED_CMK</code>, Kinesis Data Firehose creates
            a grant that enables it to use the new CMK to encrypt and decrypt data and to manage
            the grant.
            </para>
             
            <para>
            If a delivery stream already has encryption enabled and then you invoke this operation
            to change the ARN of the CMK or both its type and ARN and you get <code>ENABLING_FAILED</code>,
            this only means that the attempt to change the CMK failed. In this case, encryption
            remains enabled with the old CMK.
            </para>
             
            <para>
            If the encryption status of your delivery stream is <code>ENABLING_FAILED</code>,
            you can invoke this operation again with a valid CMK. The CMK must be enabled and
            the key policy mustn't explicitly deny the permission for Kinesis Data Firehose to
            invoke KMS encrypt and decrypt operations.
            </para>
             
            <para>
            You can enable SSE for a delivery stream only if it's a delivery stream that uses
            <code>DirectPut</code> as its source. 
            </para>
             
            <para>
            The <code>StartDeliveryStreamEncryption</code> and <code>StopDeliveryStreamEncryption</code>
            operations have a combined limit of 25 calls per delivery stream per 24 hours. For
            example, you reach the limit if you call <code>StartDeliveryStreamEncryption</code>
            13 times and <code>StopDeliveryStreamEncryption</code> 12 times for the same delivery
            stream in a 24-hour period.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartDeliveryStreamEncryption service method.</param>
            
            <returns>The response from the StartDeliveryStreamEncryption service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidArgumentException">
            The specified input parameter has a value that is not valid.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidKMSResourceException">
            Kinesis Data Firehose throws this exception when an attempt to put records or to start
            or stop delivery stream encryption fails. This happens when the KMS service throws
            one of the following exception types: <code>AccessDeniedException</code>, <code>InvalidStateException</code>,
            <code>DisabledException</code>, or <code>NotFoundException</code>.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.LimitExceededException">
            You have already reached the limit for a requested resource.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceInUseException">
            The resource is already in use and not available for this operation.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/StartDeliveryStreamEncryption">REST API Reference for StartDeliveryStreamEncryption Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.IAmazonKinesisFirehose.StartDeliveryStreamEncryptionAsync(Amazon.KinesisFirehose.Model.StartDeliveryStreamEncryptionRequest,System.Threading.CancellationToken)">
            <summary>
            Enables server-side encryption (SSE) for the delivery stream. 
            
             
            <para>
            This operation is asynchronous. It returns immediately. When you invoke it, Kinesis
            Data Firehose first sets the encryption status of the stream to <code>ENABLING</code>,
            and then to <code>ENABLED</code>. The encryption status of a delivery stream is the
            <code>Status</code> property in <a>DeliveryStreamEncryptionConfiguration</a>. If the
            operation fails, the encryption status changes to <code>ENABLING_FAILED</code>. You
            can continue to read and write data to your delivery stream while the encryption status
            is <code>ENABLING</code>, but the data is not encrypted. It can take up to 5 seconds
            after the encryption status changes to <code>ENABLED</code> before all records written
            to the delivery stream are encrypted. To find out whether a record or a batch of records
            was encrypted, check the response elements <a>PutRecordOutput$Encrypted</a> and <a>PutRecordBatchOutput$Encrypted</a>,
            respectively.
            </para>
             
            <para>
            To check the encryption status of a delivery stream, use <a>DescribeDeliveryStream</a>.
            </para>
             
            <para>
            Even if encryption is currently enabled for a delivery stream, you can still invoke
            this operation on it to change the ARN of the CMK or both its type and ARN. If you
            invoke this method to change the CMK, and the old CMK is of type <code>CUSTOMER_MANAGED_CMK</code>,
            Kinesis Data Firehose schedules the grant it had on the old CMK for retirement. If
            the new CMK is of type <code>CUSTOMER_MANAGED_CMK</code>, Kinesis Data Firehose creates
            a grant that enables it to use the new CMK to encrypt and decrypt data and to manage
            the grant.
            </para>
             
            <para>
            If a delivery stream already has encryption enabled and then you invoke this operation
            to change the ARN of the CMK or both its type and ARN and you get <code>ENABLING_FAILED</code>,
            this only means that the attempt to change the CMK failed. In this case, encryption
            remains enabled with the old CMK.
            </para>
             
            <para>
            If the encryption status of your delivery stream is <code>ENABLING_FAILED</code>,
            you can invoke this operation again with a valid CMK. The CMK must be enabled and
            the key policy mustn't explicitly deny the permission for Kinesis Data Firehose to
            invoke KMS encrypt and decrypt operations.
            </para>
             
            <para>
            You can enable SSE for a delivery stream only if it's a delivery stream that uses
            <code>DirectPut</code> as its source. 
            </para>
             
            <para>
            The <code>StartDeliveryStreamEncryption</code> and <code>StopDeliveryStreamEncryption</code>
            operations have a combined limit of 25 calls per delivery stream per 24 hours. For
            example, you reach the limit if you call <code>StartDeliveryStreamEncryption</code>
            13 times and <code>StopDeliveryStreamEncryption</code> 12 times for the same delivery
            stream in a 24-hour period.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartDeliveryStreamEncryption service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartDeliveryStreamEncryption service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidArgumentException">
            The specified input parameter has a value that is not valid.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidKMSResourceException">
            Kinesis Data Firehose throws this exception when an attempt to put records or to start
            or stop delivery stream encryption fails. This happens when the KMS service throws
            one of the following exception types: <code>AccessDeniedException</code>, <code>InvalidStateException</code>,
            <code>DisabledException</code>, or <code>NotFoundException</code>.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.LimitExceededException">
            You have already reached the limit for a requested resource.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceInUseException">
            The resource is already in use and not available for this operation.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/StartDeliveryStreamEncryption">REST API Reference for StartDeliveryStreamEncryption Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.IAmazonKinesisFirehose.StopDeliveryStreamEncryption(Amazon.KinesisFirehose.Model.StopDeliveryStreamEncryptionRequest)">
            <summary>
            Disables server-side encryption (SSE) for the delivery stream. 
            
             
            <para>
            This operation is asynchronous. It returns immediately. When you invoke it, Kinesis
            Data Firehose first sets the encryption status of the stream to <code>DISABLING</code>,
            and then to <code>DISABLED</code>. You can continue to read and write data to your
            stream while its status is <code>DISABLING</code>. It can take up to 5 seconds after
            the encryption status changes to <code>DISABLED</code> before all records written
            to the delivery stream are no longer subject to encryption. To find out whether a
            record or a batch of records was encrypted, check the response elements <a>PutRecordOutput$Encrypted</a>
            and <a>PutRecordBatchOutput$Encrypted</a>, respectively.
            </para>
             
            <para>
            To check the encryption state of a delivery stream, use <a>DescribeDeliveryStream</a>.
            
            </para>
             
            <para>
            If SSE is enabled using a customer managed CMK and then you invoke <code>StopDeliveryStreamEncryption</code>,
            Kinesis Data Firehose schedules the related KMS grant for retirement and then retires
            it after it ensures that it is finished delivering records to the destination.
            </para>
             
            <para>
            The <code>StartDeliveryStreamEncryption</code> and <code>StopDeliveryStreamEncryption</code>
            operations have a combined limit of 25 calls per delivery stream per 24 hours. For
            example, you reach the limit if you call <code>StartDeliveryStreamEncryption</code>
            13 times and <code>StopDeliveryStreamEncryption</code> 12 times for the same delivery
            stream in a 24-hour period.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StopDeliveryStreamEncryption service method.</param>
            
            <returns>The response from the StopDeliveryStreamEncryption service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidArgumentException">
            The specified input parameter has a value that is not valid.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.LimitExceededException">
            You have already reached the limit for a requested resource.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceInUseException">
            The resource is already in use and not available for this operation.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/StopDeliveryStreamEncryption">REST API Reference for StopDeliveryStreamEncryption Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.IAmazonKinesisFirehose.StopDeliveryStreamEncryptionAsync(Amazon.KinesisFirehose.Model.StopDeliveryStreamEncryptionRequest,System.Threading.CancellationToken)">
            <summary>
            Disables server-side encryption (SSE) for the delivery stream. 
            
             
            <para>
            This operation is asynchronous. It returns immediately. When you invoke it, Kinesis
            Data Firehose first sets the encryption status of the stream to <code>DISABLING</code>,
            and then to <code>DISABLED</code>. You can continue to read and write data to your
            stream while its status is <code>DISABLING</code>. It can take up to 5 seconds after
            the encryption status changes to <code>DISABLED</code> before all records written
            to the delivery stream are no longer subject to encryption. To find out whether a
            record or a batch of records was encrypted, check the response elements <a>PutRecordOutput$Encrypted</a>
            and <a>PutRecordBatchOutput$Encrypted</a>, respectively.
            </para>
             
            <para>
            To check the encryption state of a delivery stream, use <a>DescribeDeliveryStream</a>.
            
            </para>
             
            <para>
            If SSE is enabled using a customer managed CMK and then you invoke <code>StopDeliveryStreamEncryption</code>,
            Kinesis Data Firehose schedules the related KMS grant for retirement and then retires
            it after it ensures that it is finished delivering records to the destination.
            </para>
             
            <para>
            The <code>StartDeliveryStreamEncryption</code> and <code>StopDeliveryStreamEncryption</code>
            operations have a combined limit of 25 calls per delivery stream per 24 hours. For
            example, you reach the limit if you call <code>StartDeliveryStreamEncryption</code>
            13 times and <code>StopDeliveryStreamEncryption</code> 12 times for the same delivery
            stream in a 24-hour period.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StopDeliveryStreamEncryption service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StopDeliveryStreamEncryption service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidArgumentException">
            The specified input parameter has a value that is not valid.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.LimitExceededException">
            You have already reached the limit for a requested resource.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceInUseException">
            The resource is already in use and not available for this operation.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/StopDeliveryStreamEncryption">REST API Reference for StopDeliveryStreamEncryption Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.IAmazonKinesisFirehose.TagDeliveryStream(Amazon.KinesisFirehose.Model.TagDeliveryStreamRequest)">
            <summary>
            Adds or updates tags for the specified delivery stream. A tag is a key-value pair
            that you can define and assign to AWS resources. If you specify a tag that already
            exists, the tag value is replaced with the value that you specify in the request.
            Tags are metadata. For example, you can add friendly names and descriptions or other
            types of information that can help you distinguish the delivery stream. For more information
            about tags, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html">Using
            Cost Allocation Tags</a> in the <i>AWS Billing and Cost Management User Guide</i>.
            
            
             
            <para>
            Each delivery stream can have up to 50 tags. 
            </para>
             
            <para>
            This operation has a limit of five transactions per second per account. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagDeliveryStream service method.</param>
            
            <returns>The response from the TagDeliveryStream service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidArgumentException">
            The specified input parameter has a value that is not valid.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.LimitExceededException">
            You have already reached the limit for a requested resource.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceInUseException">
            The resource is already in use and not available for this operation.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/TagDeliveryStream">REST API Reference for TagDeliveryStream Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.IAmazonKinesisFirehose.TagDeliveryStreamAsync(Amazon.KinesisFirehose.Model.TagDeliveryStreamRequest,System.Threading.CancellationToken)">
            <summary>
            Adds or updates tags for the specified delivery stream. A tag is a key-value pair
            that you can define and assign to AWS resources. If you specify a tag that already
            exists, the tag value is replaced with the value that you specify in the request.
            Tags are metadata. For example, you can add friendly names and descriptions or other
            types of information that can help you distinguish the delivery stream. For more information
            about tags, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html">Using
            Cost Allocation Tags</a> in the <i>AWS Billing and Cost Management User Guide</i>.
            
            
             
            <para>
            Each delivery stream can have up to 50 tags. 
            </para>
             
            <para>
            This operation has a limit of five transactions per second per account. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagDeliveryStream service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagDeliveryStream service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidArgumentException">
            The specified input parameter has a value that is not valid.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.LimitExceededException">
            You have already reached the limit for a requested resource.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceInUseException">
            The resource is already in use and not available for this operation.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/TagDeliveryStream">REST API Reference for TagDeliveryStream Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.IAmazonKinesisFirehose.UntagDeliveryStream(Amazon.KinesisFirehose.Model.UntagDeliveryStreamRequest)">
            <summary>
            Removes tags from the specified delivery stream. Removed tags are deleted, and you
            can't recover them after this operation successfully completes.
            
             
            <para>
            If you specify a tag that doesn't exist, the operation ignores it.
            </para>
             
            <para>
            This operation has a limit of five transactions per second per account. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagDeliveryStream service method.</param>
            
            <returns>The response from the UntagDeliveryStream service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidArgumentException">
            The specified input parameter has a value that is not valid.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.LimitExceededException">
            You have already reached the limit for a requested resource.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceInUseException">
            The resource is already in use and not available for this operation.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/UntagDeliveryStream">REST API Reference for UntagDeliveryStream Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.IAmazonKinesisFirehose.UntagDeliveryStreamAsync(Amazon.KinesisFirehose.Model.UntagDeliveryStreamRequest,System.Threading.CancellationToken)">
            <summary>
            Removes tags from the specified delivery stream. Removed tags are deleted, and you
            can't recover them after this operation successfully completes.
            
             
            <para>
            If you specify a tag that doesn't exist, the operation ignores it.
            </para>
             
            <para>
            This operation has a limit of five transactions per second per account. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagDeliveryStream service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagDeliveryStream service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidArgumentException">
            The specified input parameter has a value that is not valid.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.LimitExceededException">
            You have already reached the limit for a requested resource.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceInUseException">
            The resource is already in use and not available for this operation.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/UntagDeliveryStream">REST API Reference for UntagDeliveryStream Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.IAmazonKinesisFirehose.UpdateDestination(Amazon.KinesisFirehose.Model.UpdateDestinationRequest)">
            <summary>
            Updates the specified destination of the specified delivery stream.
            
             
            <para>
            Use this operation to change the destination type (for example, to replace the Amazon
            S3 destination with Amazon Redshift) or change the parameters associated with a destination
            (for example, to change the bucket name of the Amazon S3 destination). The update
            might not occur immediately. The target delivery stream remains active while the configurations
            are updated, so data writes to the delivery stream can continue during this process.
            The updated configurations are usually effective within a few minutes.
            </para>
             
            <para>
            Switching between Amazon ES and other services is not supported. For an Amazon ES
            destination, you can only update to another Amazon ES destination.
            </para>
             
            <para>
            If the destination type is the same, Kinesis Data Firehose merges the configuration
            parameters specified with the destination configuration that already exists on the
            delivery stream. If any of the parameters are not specified in the call, the existing
            values are retained. For example, in the Amazon S3 destination, if <a>EncryptionConfiguration</a>
            is not specified, then the existing <code>EncryptionConfiguration</code> is maintained
            on the destination.
            </para>
             
            <para>
            If the destination type is not the same, for example, changing the destination from
            Amazon S3 to Amazon Redshift, Kinesis Data Firehose does not merge any parameters.
            In this case, all parameters must be specified.
            </para>
             
            <para>
            Kinesis Data Firehose uses <code>CurrentDeliveryStreamVersionId</code> to avoid race
            conditions and conflicting merges. This is a required field, and the service updates
            the configuration only if the existing configuration has a version ID that matches.
            After the update is applied successfully, the version ID is updated, and can be retrieved
            using <a>DescribeDeliveryStream</a>. Use the new version ID to set <code>CurrentDeliveryStreamVersionId</code>
            in the next call.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateDestination service method.</param>
            
            <returns>The response from the UpdateDestination service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.ConcurrentModificationException">
            Another modification has already happened. Fetch <code>VersionId</code> again and
            use it to update the destination.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidArgumentException">
            The specified input parameter has a value that is not valid.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceInUseException">
            The resource is already in use and not available for this operation.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/UpdateDestination">REST API Reference for UpdateDestination Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.IAmazonKinesisFirehose.UpdateDestinationAsync(Amazon.KinesisFirehose.Model.UpdateDestinationRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the specified destination of the specified delivery stream.
            
             
            <para>
            Use this operation to change the destination type (for example, to replace the Amazon
            S3 destination with Amazon Redshift) or change the parameters associated with a destination
            (for example, to change the bucket name of the Amazon S3 destination). The update
            might not occur immediately. The target delivery stream remains active while the configurations
            are updated, so data writes to the delivery stream can continue during this process.
            The updated configurations are usually effective within a few minutes.
            </para>
             
            <para>
            Switching between Amazon ES and other services is not supported. For an Amazon ES
            destination, you can only update to another Amazon ES destination.
            </para>
             
            <para>
            If the destination type is the same, Kinesis Data Firehose merges the configuration
            parameters specified with the destination configuration that already exists on the
            delivery stream. If any of the parameters are not specified in the call, the existing
            values are retained. For example, in the Amazon S3 destination, if <a>EncryptionConfiguration</a>
            is not specified, then the existing <code>EncryptionConfiguration</code> is maintained
            on the destination.
            </para>
             
            <para>
            If the destination type is not the same, for example, changing the destination from
            Amazon S3 to Amazon Redshift, Kinesis Data Firehose does not merge any parameters.
            In this case, all parameters must be specified.
            </para>
             
            <para>
            Kinesis Data Firehose uses <code>CurrentDeliveryStreamVersionId</code> to avoid race
            conditions and conflicting merges. This is a required field, and the service updates
            the configuration only if the existing configuration has a version ID that matches.
            After the update is applied successfully, the version ID is updated, and can be retrieved
            using <a>DescribeDeliveryStream</a>. Use the new version ID to set <code>CurrentDeliveryStreamVersionId</code>
            in the next call.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateDestination service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateDestination service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.ConcurrentModificationException">
            Another modification has already happened. Fetch <code>VersionId</code> again and
            use it to update the destination.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidArgumentException">
            The specified input parameter has a value that is not valid.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceInUseException">
            The resource is already in use and not available for this operation.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/UpdateDestination">REST API Reference for UpdateDestination Operation</seealso>
        </member>
    </members>
</doc>
