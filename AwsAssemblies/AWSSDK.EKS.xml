<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.EKS</name>
    </assembly>
    <members>
        <member name="T:Amazon.EKS.AmazonEKSConfig">
            <summary>
            Configuration for accessing Amazon EKS service
            </summary>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.EKS.AmazonEKSConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.EKS.AmazonEKSConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.EKS.AmazonEKSConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.EKS.AmazonEKSException">
            <summary>
             Common exception for the EKS service.
             </summary>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonEKSException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonEKSException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonEKSException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonEKSException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonEKSException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the AmazonEKSException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.EKS.Internal.AmazonEKSMetadata">
            <summary>
            Service metadata for  Amazon EKS service
            </summary>
        </member>
        <member name="P:Amazon.EKS.Internal.AmazonEKSMetadata.ServiceId">
            <summary>
            Gets the value of the Service Id.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Internal.AmazonEKSMetadata.OperationNameMapping">
            <summary>
            Gets the dictionary that gives mapping of renamed operations
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.Addon">
            <summary>
            An Amazon EKS add-on.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Addon.AddonArn">
            <summary>
            Gets and sets the property AddonArn. 
            <para>
            The Amazon Resource Name (ARN) of the add-on.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Addon.AddonName">
            <summary>
            Gets and sets the property AddonName. 
            <para>
            The name of the add-on.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Addon.AddonVersion">
            <summary>
            Gets and sets the property AddonVersion. 
            <para>
            The version of the add-on.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Addon.ClusterName">
            <summary>
            Gets and sets the property ClusterName. 
            <para>
            The name of the cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Addon.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The date and time that the add-on was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Addon.Health">
            <summary>
            Gets and sets the property Health. 
            <para>
            An object that represents the health of the add-on.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Addon.ModifiedAt">
            <summary>
            Gets and sets the property ModifiedAt. 
            <para>
            The date and time that the add-on was last modified.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Addon.ServiceAccountRoleArn">
            <summary>
            Gets and sets the property ServiceAccountRoleArn. 
            <para>
            The Amazon Resource Name (ARN) of the IAM role that is bound to the Kubernetes service
            account used by the add-on.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Addon.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the add-on.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Addon.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The metadata that you apply to the add-on to assist with categorization and organization.
            Each tag consists of a key and an optional value, both of which you define. Add-on
            tags do not propagate to any other resources associated with the cluster. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.AddonHealth">
            <summary>
            The health of the add-on.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.AddonHealth.Issues">
            <summary>
            Gets and sets the property Issues. 
            <para>
            An object that represents the add-on's health issues.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.AddonInfo">
            <summary>
            Information about an add-on.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.AddonInfo.AddonName">
            <summary>
            Gets and sets the property AddonName. 
            <para>
            The name of the add-on.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.AddonInfo.AddonVersions">
            <summary>
            Gets and sets the property AddonVersions. 
            <para>
            An object that represents information about available add-on versions and compatible
            Kubernetes versions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.AddonInfo.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of the add-on.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.AddonIssue">
            <summary>
            An issue related to an add-on.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.AddonIssue.Code">
            <summary>
            Gets and sets the property Code. 
            <para>
            A code that describes the type of issue.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.AddonIssue.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            A message that provides details about the issue and what might cause it.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.AddonIssue.ResourceIds">
            <summary>
            Gets and sets the property ResourceIds. 
            <para>
            The resource IDs of the issue.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.AddonVersionInfo">
            <summary>
            Information about an add-on version.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.AddonVersionInfo.AddonVersion">
            <summary>
            Gets and sets the property AddonVersion. 
            <para>
            The version of the add-on.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.AddonVersionInfo.Architecture">
            <summary>
            Gets and sets the property Architecture. 
            <para>
            The architectures that the version supports.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.AddonVersionInfo.Compatibilities">
            <summary>
            Gets and sets the property Compatibilities. 
            <para>
            An object that represents the compatibilities of a version.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.AssociateEncryptionConfigRequest">
            <summary>
            Container for the parameters to the AssociateEncryptionConfig operation.
            Associate encryption configuration to an existing cluster.
            
             
            <para>
            You can use this API to enable encryption on existing clusters which do not have encryption
            already enabled. This allows you to implement a defense-in-depth security strategy
            without migrating applications to new Amazon EKS clusters.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.AssociateEncryptionConfigRequest.ClientRequestToken">
            <summary>
            Gets and sets the property ClientRequestToken. 
            <para>
            The client request token you are using with the encryption configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.AssociateEncryptionConfigRequest.ClusterName">
            <summary>
            Gets and sets the property ClusterName. 
            <para>
            The name of the cluster that you are associating with encryption configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.AssociateEncryptionConfigRequest.EncryptionConfig">
            <summary>
            Gets and sets the property EncryptionConfig. 
            <para>
            The configuration you are using for encryption.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.AssociateEncryptionConfigResponse">
            <summary>
            This is the response object from the AssociateEncryptionConfig operation.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.AssociateEncryptionConfigResponse.Update">
            <summary>
            Gets and sets the property Update.
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.AssociateIdentityProviderConfigRequest">
            <summary>
            Container for the parameters to the AssociateIdentityProviderConfig operation.
            Associate an identity provider configuration to a cluster.
            
             
            <para>
            If you want to authenticate identities using an identity provider, you can create
            an identity provider configuration and associate it to your cluster. After configuring
            authentication to your cluster you can create Kubernetes <code>roles</code> and <code>clusterroles</code>
            to assign permissions to the roles, and then bind the roles to the identities using
            Kubernetes <code>rolebindings</code> and <code>clusterrolebindings</code>. For more
            information see <a href="https://kubernetes.io/docs/reference/access-authn-authz/rbac/">Using
            RBAC Authorization</a> in the Kubernetes documentation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.AssociateIdentityProviderConfigRequest.ClientRequestToken">
            <summary>
            Gets and sets the property ClientRequestToken. 
            <para>
            Unique, case-sensitive identifier that you provide to ensure the idempotency of the
            request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.AssociateIdentityProviderConfigRequest.ClusterName">
            <summary>
            Gets and sets the property ClusterName. 
            <para>
            The name of the cluster to associate the configuration to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.AssociateIdentityProviderConfigRequest.Oidc">
            <summary>
            Gets and sets the property Oidc. 
            <para>
            An object that represents an OpenID Connect (OIDC) identity provider configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.AssociateIdentityProviderConfigRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The metadata to apply to the configuration to assist with categorization and organization.
            Each tag consists of a key and an optional value, both of which you define.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.AssociateIdentityProviderConfigResponse">
            <summary>
            This is the response object from the AssociateIdentityProviderConfig operation.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.AssociateIdentityProviderConfigResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags for the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.AssociateIdentityProviderConfigResponse.Update">
            <summary>
            Gets and sets the property Update.
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.AutoScalingGroup">
            <summary>
            An Auto Scaling group that is associated with an Amazon EKS managed node group.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.AutoScalingGroup.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the Auto Scaling group associated with an Amazon EKS managed node group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.BadRequestException">
            <summary>
            This exception is thrown if the request contains a semantic error. The precise meaning
            will depend on the API, and will be documented in the error message.
            </summary>
        </member>
        <member name="M:Amazon.EKS.Model.BadRequestException.#ctor(System.String)">
            <summary>
            Constructs a new BadRequestException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.EKS.Model.BadRequestException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of BadRequestException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EKS.Model.BadRequestException.#ctor(System.Exception)">
            <summary>
            Construct instance of BadRequestException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EKS.Model.BadRequestException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of BadRequestException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.EKS.Model.BadRequestException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of BadRequestException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.EKS.Model.BadRequestException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the BadRequestException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.EKS.Model.BadRequestException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.EKS.Model.Certificate">
            <summary>
            An object representing the <code>certificate-authority-data</code> for your cluster.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Certificate.Data">
            <summary>
            Gets and sets the property Data. 
            <para>
            The Base64-encoded certificate data required to communicate with your cluster. Add
            this to the <code>certificate-authority-data</code> section of the <code>kubeconfig</code>
            file for your cluster.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.ClientException">
            <summary>
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </summary>
        </member>
        <member name="M:Amazon.EKS.Model.ClientException.#ctor(System.String)">
            <summary>
            Constructs a new ClientException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.EKS.Model.ClientException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ClientException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EKS.Model.ClientException.#ctor(System.Exception)">
            <summary>
            Construct instance of ClientException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EKS.Model.ClientException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ClientException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.EKS.Model.ClientException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ClientException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.EKS.Model.ClientException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ClientException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.EKS.Model.ClientException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="P:Amazon.EKS.Model.ClientException.AddonName">
            <summary>
            Gets and sets the property AddonName.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ClientException.ClusterName">
            <summary>
            Gets and sets the property ClusterName. 
            <para>
            The Amazon EKS cluster associated with the exception.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ClientException.NodegroupName">
            <summary>
            Gets and sets the property NodegroupName. 
            <para>
            The Amazon EKS managed node group associated with the exception.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.Cluster">
            <summary>
            An object representing an Amazon EKS cluster.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Cluster.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The Amazon Resource Name (ARN) of the cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Cluster.CertificateAuthority">
            <summary>
            Gets and sets the property CertificateAuthority. 
            <para>
            The <code>certificate-authority-data</code> for your cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Cluster.ClientRequestToken">
            <summary>
            Gets and sets the property ClientRequestToken. 
            <para>
            Unique, case-sensitive identifier that you provide to ensure the idempotency of the
            request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Cluster.ConnectorConfig">
            <summary>
            Gets and sets the property ConnectorConfig. 
            <para>
            The configuration used to connect to a cluster for registration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Cluster.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The Unix epoch timestamp in seconds for when the cluster was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Cluster.EncryptionConfig">
            <summary>
            Gets and sets the property EncryptionConfig. 
            <para>
            The encryption configuration for the cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Cluster.Endpoint">
            <summary>
            Gets and sets the property Endpoint. 
            <para>
            The endpoint for your Kubernetes API server.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Cluster.Identity">
            <summary>
            Gets and sets the property Identity. 
            <para>
            The identity provider information for the cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Cluster.KubernetesNetworkConfig">
            <summary>
            Gets and sets the property KubernetesNetworkConfig. 
            <para>
            The Kubernetes network configuration for the cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Cluster.Logging">
            <summary>
            Gets and sets the property Logging. 
            <para>
            The logging configuration for your cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Cluster.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Cluster.PlatformVersion">
            <summary>
            Gets and sets the property PlatformVersion. 
            <para>
            The platform version of your Amazon EKS cluster. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/platform-versions.html">Platform
            Versions</a> in the <i> <i>Amazon EKS User Guide</i> </i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Cluster.ResourcesVpcConfig">
            <summary>
            Gets and sets the property ResourcesVpcConfig. 
            <para>
            The VPC configuration used by the cluster control plane. Amazon EKS VPC resources
            have specific requirements to work properly with Kubernetes. For more information,
            see <a href="https://docs.aws.amazon.com/eks/latest/userguide/network_reqs.html">Cluster
            VPC Considerations</a> and <a href="https://docs.aws.amazon.com/eks/latest/userguide/sec-group-reqs.html">Cluster
            Security Group Considerations</a> in the <i>Amazon EKS User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Cluster.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The Amazon Resource Name (ARN) of the IAM role that provides permissions for the Kubernetes
            control plane to make calls to Amazon Web Services API operations on your behalf.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Cluster.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The current status of the cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Cluster.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The metadata that you apply to the cluster to assist with categorization and organization.
            Each tag consists of a key and an optional value, both of which you define. Cluster
            tags do not propagate to any other resources associated with the cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Cluster.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            The Kubernetes server version for the cluster.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.Compatibility">
            <summary>
            Compatibility information.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Compatibility.ClusterVersion">
            <summary>
            Gets and sets the property ClusterVersion. 
            <para>
            The supported Kubernetes version of the cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Compatibility.DefaultVersion">
            <summary>
            Gets and sets the property DefaultVersion. 
            <para>
            The supported default version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Compatibility.PlatformVersions">
            <summary>
            Gets and sets the property PlatformVersions. 
            <para>
            The supported compute platform.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.ConnectorConfigRequest">
            <summary>
            The configuration sent to a cluster for configuration.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ConnectorConfigRequest.Provider">
            <summary>
            Gets and sets the property Provider. 
            <para>
            The cloud provider for the target cluster to connect.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ConnectorConfigRequest.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The Amazon Resource Name (ARN) of the role that is authorized to request the connector
            configuration.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.ConnectorConfigResponse">
            <summary>
            The full description of your connected cluster.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ConnectorConfigResponse.ActivationCode">
            <summary>
            Gets and sets the property ActivationCode. 
            <para>
            A unique code associated with the cluster for registration purposes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ConnectorConfigResponse.ActivationExpiry">
            <summary>
            Gets and sets the property ActivationExpiry. 
            <para>
            The expiration time of the connected cluster. The cluster's YAML file must be applied
            through the native provider.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ConnectorConfigResponse.ActivationId">
            <summary>
            Gets and sets the property ActivationId. 
            <para>
            A unique ID associated with the cluster for registration purposes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ConnectorConfigResponse.Provider">
            <summary>
            Gets and sets the property Provider. 
            <para>
            The cluster's cloud service provider.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ConnectorConfigResponse.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The Amazon Resource Name (ARN) of the role that is used by the EKS connector to communicate
            with AWS services from the connected Kubernetes cluster.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.CreateAddonRequest">
            <summary>
            Container for the parameters to the CreateAddon operation.
            Creates an Amazon EKS add-on.
            
             
            <para>
            Amazon EKS add-ons help to automate the provisioning and lifecycle management of common
            operational software for Amazon EKS clusters. Amazon EKS add-ons can only be used
            with Amazon EKS clusters running version 1.18 with platform version <code>eks.3</code>
            or later because add-ons rely on the Server-side Apply Kubernetes feature, which is
            only available in Kubernetes 1.18 and later.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.CreateAddonRequest.AddonName">
            <summary>
            Gets and sets the property AddonName. 
            <para>
            The name of the add-on. The name must match one of the names returned by <a href="https://docs.aws.amazon.com/eks/latest/APIReference/API_DescribeAddonVersions.html">
            <code>DescribeAddonVersions</code> </a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.CreateAddonRequest.AddonVersion">
            <summary>
            Gets and sets the property AddonVersion. 
            <para>
            The version of the add-on. The version must match one of the versions returned by
            <a href="https://docs.aws.amazon.com/eks/latest/APIReference/API_DescribeAddonVersions.html">
            <code>DescribeAddonVersions</code> </a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.CreateAddonRequest.ClientRequestToken">
            <summary>
            Gets and sets the property ClientRequestToken. 
            <para>
            A unique, case-sensitive identifier that you provide to ensure the idempotency of
            the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.CreateAddonRequest.ClusterName">
            <summary>
            Gets and sets the property ClusterName. 
            <para>
            The name of the cluster to create the add-on for.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.CreateAddonRequest.ResolveConflicts">
            <summary>
            Gets and sets the property ResolveConflicts. 
            <para>
            How to resolve parameter value conflicts when migrating an existing add-on to an Amazon
            EKS add-on.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.CreateAddonRequest.ServiceAccountRoleArn">
            <summary>
            Gets and sets the property ServiceAccountRoleArn. 
            <para>
            The Amazon Resource Name (ARN) of an existing IAM role to bind to the add-on's service
            account. The role must be assigned the IAM permissions required by the add-on. If
            you don't specify an existing IAM role, then the add-on uses the permissions assigned
            to the node IAM role. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/create-node-role.html">Amazon
            EKS node IAM role</a> in the <i>Amazon EKS User Guide</i>.
            </para>
             <note> 
            <para>
            To specify an existing IAM role, you must have an IAM OpenID Connect (OIDC) provider
            created for your cluster. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/enable-iam-roles-for-service-accounts.html">Enabling
            IAM roles for service accounts on your cluster</a> in the <i>Amazon EKS User Guide</i>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.CreateAddonRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The metadata to apply to the cluster to assist with categorization and organization.
            Each tag consists of a key and an optional value, both of which you define. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.CreateAddonResponse">
            <summary>
            This is the response object from the CreateAddon operation.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.CreateAddonResponse.Addon">
            <summary>
            Gets and sets the property Addon.
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.CreateClusterRequest">
            <summary>
            Container for the parameters to the CreateCluster operation.
            Creates an Amazon EKS control plane. 
            
             
            <para>
            The Amazon EKS control plane consists of control plane instances that run the Kubernetes
            software, such as <code>etcd</code> and the API server. The control plane runs in
            an account managed by Amazon Web Services, and the Kubernetes API is exposed via the
            Amazon EKS API server endpoint. Each Amazon EKS cluster control plane is single-tenant
            and unique and runs on its own set of Amazon EC2 instances.
            </para>
             
            <para>
            The cluster control plane is provisioned across multiple Availability Zones and fronted
            by an Elastic Load Balancing Network Load Balancer. Amazon EKS also provisions elastic
            network interfaces in your VPC subnets to provide connectivity from the control plane
            instances to the nodes (for example, to support <code>kubectl exec</code>, <code>logs</code>,
            and <code>proxy</code> data flows).
            </para>
             
            <para>
            Amazon EKS nodes run in your Amazon Web Services account and connect to your cluster's
            control plane via the Kubernetes API server endpoint and a certificate file that is
            created for your cluster.
            </para>
             
            <para>
            Cluster creation typically takes several minutes. After you create an Amazon EKS cluster,
            you must configure your Kubernetes tooling to communicate with the API server and
            launch nodes into your cluster. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/managing-auth.html">Managing
            Cluster Authentication</a> and <a href="https://docs.aws.amazon.com/eks/latest/userguide/launch-workers.html">Launching
            Amazon EKS nodes</a> in the <i>Amazon EKS User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.CreateClusterRequest.ClientRequestToken">
            <summary>
            Gets and sets the property ClientRequestToken. 
            <para>
            Unique, case-sensitive identifier that you provide to ensure the idempotency of the
            request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.CreateClusterRequest.EncryptionConfig">
            <summary>
            Gets and sets the property EncryptionConfig. 
            <para>
            The encryption configuration for the cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.CreateClusterRequest.KubernetesNetworkConfig">
            <summary>
            Gets and sets the property KubernetesNetworkConfig. 
            <para>
            The Kubernetes network configuration for the cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.CreateClusterRequest.Logging">
            <summary>
            Gets and sets the property Logging. 
            <para>
            Enable or disable exporting the Kubernetes control plane logs for your cluster to
            CloudWatch Logs. By default, cluster control plane logs aren't exported to CloudWatch
            Logs. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html">Amazon
            EKS Cluster control plane logs</a> in the <i> <i>Amazon EKS User Guide</i> </i>.
            </para>
             <note> 
            <para>
            CloudWatch Logs ingestion, archive storage, and data scanning rates apply to exported
            control plane logs. For more information, see <a href="http://aws.amazon.com/cloudwatch/pricing/">CloudWatch
            Pricing</a>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.CreateClusterRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The unique name to give to your cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.CreateClusterRequest.ResourcesVpcConfig">
            <summary>
            Gets and sets the property ResourcesVpcConfig. 
            <para>
            The VPC configuration used by the cluster control plane. Amazon EKS VPC resources
            have specific requirements to work properly with Kubernetes. For more information,
            see <a href="https://docs.aws.amazon.com/eks/latest/userguide/network_reqs.html">Cluster
            VPC Considerations</a> and <a href="https://docs.aws.amazon.com/eks/latest/userguide/sec-group-reqs.html">Cluster
            Security Group Considerations</a> in the <i>Amazon EKS User Guide</i>. You must specify
            at least two subnets. You can specify up to five security groups, but we recommend
            that you use a dedicated security group for your cluster control plane.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.CreateClusterRequest.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The Amazon Resource Name (ARN) of the IAM role that provides permissions for the Kubernetes
            control plane to make calls to Amazon Web Services API operations on your behalf.
            For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/service_IAM_role.html">Amazon
            EKS Service IAM Role</a> in the <i> <i>Amazon EKS User Guide</i> </i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.CreateClusterRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The metadata to apply to the cluster to assist with categorization and organization.
            Each tag consists of a key and an optional value, both of which you define.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.CreateClusterRequest.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            The desired Kubernetes version for your cluster. If you don't specify a value here,
            the latest version available in Amazon EKS is used.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.CreateClusterResponse">
            <summary>
            This is the response object from the CreateCluster operation.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.CreateClusterResponse.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The full description of your new cluster.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.CreateFargateProfileRequest">
            <summary>
            Container for the parameters to the CreateFargateProfile operation.
            Creates an Fargate profile for your Amazon EKS cluster. You must have at least one
            Fargate profile in a cluster to be able to run pods on Fargate.
            
             
            <para>
            The Fargate profile allows an administrator to declare which pods run on Fargate and
            specify which pods run on which Fargate profile. This declaration is done through
            the profile’s selectors. Each profile can have up to five selectors that contain a
            namespace and labels. A namespace is required for every selector. The label field
            consists of multiple optional key-value pairs. Pods that match the selectors are scheduled
            on Fargate. If a to-be-scheduled pod matches any of the selectors in the Fargate profile,
            then that pod is run on Fargate.
            </para>
             
            <para>
            When you create a Fargate profile, you must specify a pod execution role to use with
            the pods that are scheduled with the profile. This role is added to the cluster's
            Kubernetes <a href="https://kubernetes.io/docs/admin/authorization/rbac/">Role Based
            Access Control</a> (RBAC) for authorization so that the <code>kubelet</code> that
            is running on the Fargate infrastructure can register with your Amazon EKS cluster
            so that it can appear in your cluster as a node. The pod execution role also provides
            IAM permissions to the Fargate infrastructure to allow read access to Amazon ECR image
            repositories. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/pod-execution-role.html">Pod
            Execution Role</a> in the <i>Amazon EKS User Guide</i>.
            </para>
             
            <para>
            Fargate profiles are immutable. However, you can create a new updated profile to replace
            an existing profile and then delete the original after the updated profile has finished
            creating.
            </para>
             
            <para>
            If any Fargate profiles in a cluster are in the <code>DELETING</code> status, you
            must wait for that Fargate profile to finish deleting before you can create any other
            profiles in that cluster.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/fargate-profile.html">Fargate
            Profile</a> in the <i>Amazon EKS User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.CreateFargateProfileRequest.ClientRequestToken">
            <summary>
            Gets and sets the property ClientRequestToken. 
            <para>
            Unique, case-sensitive identifier that you provide to ensure the idempotency of the
            request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.CreateFargateProfileRequest.ClusterName">
            <summary>
            Gets and sets the property ClusterName. 
            <para>
            The name of the Amazon EKS cluster to apply the Fargate profile to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.CreateFargateProfileRequest.FargateProfileName">
            <summary>
            Gets and sets the property FargateProfileName. 
            <para>
            The name of the Fargate profile.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.CreateFargateProfileRequest.PodExecutionRoleArn">
            <summary>
            Gets and sets the property PodExecutionRoleArn. 
            <para>
            The Amazon Resource Name (ARN) of the pod execution role to use for pods that match
            the selectors in the Fargate profile. The pod execution role allows Fargate infrastructure
            to register with your cluster as a node, and it provides read access to Amazon ECR
            image repositories. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/pod-execution-role.html">Pod
            Execution Role</a> in the <i>Amazon EKS User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.CreateFargateProfileRequest.Selectors">
            <summary>
            Gets and sets the property Selectors. 
            <para>
            The selectors to match for pods to use this Fargate profile. Each selector must have
            an associated namespace. Optionally, you can also specify labels for a namespace.
            You may specify up to five selectors in a Fargate profile.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.CreateFargateProfileRequest.Subnets">
            <summary>
            Gets and sets the property Subnets. 
            <para>
            The IDs of subnets to launch your pods into. At this time, pods running on Fargate
            are not assigned public IP addresses, so only private subnets (with no direct route
            to an Internet Gateway) are accepted for this parameter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.CreateFargateProfileRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The metadata to apply to the Fargate profile to assist with categorization and organization.
            Each tag consists of a key and an optional value, both of which you define. Fargate
            profile tags do not propagate to any other resources associated with the Fargate profile,
            such as the pods that are scheduled with it.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.CreateFargateProfileResponse">
            <summary>
            This is the response object from the CreateFargateProfile operation.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.CreateFargateProfileResponse.FargateProfile">
            <summary>
            Gets and sets the property FargateProfile. 
            <para>
            The full description of your new Fargate profile.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.CreateNodegroupRequest">
            <summary>
            Container for the parameters to the CreateNodegroup operation.
            Creates a managed node group for an Amazon EKS cluster. You can only create a node
            group for your cluster that is equal to the current Kubernetes version for the cluster.
            All node groups are created with the latest AMI release version for the respective
            minor Kubernetes version of the cluster, unless you deploy a custom AMI using a launch
            template. For more information about using launch templates, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html">Launch
            template support</a>.
            
             
            <para>
            An Amazon EKS managed node group is an Amazon EC2 Auto Scaling group and associated
            Amazon EC2 instances that are managed by Amazon Web Services for an Amazon EKS cluster.
            Each node group uses a version of the Amazon EKS optimized Amazon Linux 2 AMI. For
            more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/managed-node-groups.html">Managed
            Node Groups</a> in the <i>Amazon EKS User Guide</i>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.CreateNodegroupRequest.AmiType">
            <summary>
            Gets and sets the property AmiType. 
            <para>
            The AMI type for your node group. GPU instance types should use the <code>AL2_x86_64_GPU</code>
            AMI type. Non-GPU instances should use the <code>AL2_x86_64</code> AMI type. Arm instances
            should use the <code>AL2_ARM_64</code> AMI type. All types use the Amazon EKS optimized
            Amazon Linux 2 AMI. If you specify <code>launchTemplate</code>, and your launch template
            uses a custom AMI, then don't specify <code>amiType</code>, or the node group deployment
            will fail. For more information about using launch templates with Amazon EKS, see
            <a href="https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html">Launch
            template support</a> in the Amazon EKS User Guide.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.CreateNodegroupRequest.CapacityType">
            <summary>
            Gets and sets the property CapacityType. 
            <para>
            The capacity type for your node group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.CreateNodegroupRequest.ClientRequestToken">
            <summary>
            Gets and sets the property ClientRequestToken. 
            <para>
            Unique, case-sensitive identifier that you provide to ensure the idempotency of the
            request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.CreateNodegroupRequest.ClusterName">
            <summary>
            Gets and sets the property ClusterName. 
            <para>
            The name of the cluster to create the node group in.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.CreateNodegroupRequest.DiskSize">
            <summary>
            Gets and sets the property DiskSize. 
            <para>
            The root device disk size (in GiB) for your node group instances. The default disk
            size is 20 GiB. If you specify <code>launchTemplate</code>, then don't specify <code>diskSize</code>,
            or the node group deployment will fail. For more information about using launch templates
            with Amazon EKS, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html">Launch
            template support</a> in the Amazon EKS User Guide.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.CreateNodegroupRequest.InstanceTypes">
            <summary>
            Gets and sets the property InstanceTypes. 
            <para>
            Specify the instance types for a node group. If you specify a GPU instance type, be
            sure to specify <code>AL2_x86_64_GPU</code> with the <code>amiType</code> parameter.
            If you specify <code>launchTemplate</code>, then you can specify zero or one instance
            type in your launch template <i>or</i> you can specify 0-20 instance types for <code>instanceTypes</code>.
            If however, you specify an instance type in your launch template <i>and</i> specify
            any <code>instanceTypes</code>, the node group deployment will fail. If you don't
            specify an instance type in a launch template or for <code>instanceTypes</code>, then
            <code>t3.medium</code> is used, by default. If you specify <code>Spot</code> for <code>capacityType</code>,
            then we recommend specifying multiple values for <code>instanceTypes</code>. For more
            information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/managed-node-groups.html#managed-node-group-capacity-types">Managed
            node group capacity types</a> and <a href="https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html">Launch
            template support</a> in the <i>Amazon EKS User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.CreateNodegroupRequest.Labels">
            <summary>
            Gets and sets the property Labels. 
            <para>
            The Kubernetes labels to be applied to the nodes in the node group when they are created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.CreateNodegroupRequest.LaunchTemplate">
            <summary>
            Gets and sets the property LaunchTemplate. 
            <para>
            An object representing a node group's launch template specification. If specified,
            then do not specify <code>instanceTypes</code>, <code>diskSize</code>, or <code>remoteAccess</code>
            and make sure that the launch template meets the requirements in <code>launchTemplateSpecification</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.CreateNodegroupRequest.NodegroupName">
            <summary>
            Gets and sets the property NodegroupName. 
            <para>
            The unique name to give your node group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.CreateNodegroupRequest.NodeRole">
            <summary>
            Gets and sets the property NodeRole. 
            <para>
            The Amazon Resource Name (ARN) of the IAM role to associate with your node group.
            The Amazon EKS worker node <code>kubelet</code> daemon makes calls to Amazon Web Services
            APIs on your behalf. Nodes receive permissions for these API calls through an IAM
            instance profile and associated policies. Before you can launch nodes and register
            them into a cluster, you must create an IAM role for those nodes to use when they
            are launched. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/worker_node_IAM_role.html">Amazon
            EKS node IAM role</a> in the <i> <i>Amazon EKS User Guide</i> </i>. If you specify
            <code>launchTemplate</code>, then don't specify <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_IamInstanceProfile.html">
            <code>IamInstanceProfile</code> </a> in your launch template, or the node group deployment
            will fail. For more information about using launch templates with Amazon EKS, see
            <a href="https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html">Launch
            template support</a> in the Amazon EKS User Guide.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.CreateNodegroupRequest.ReleaseVersion">
            <summary>
            Gets and sets the property ReleaseVersion. 
            <para>
            The AMI version of the Amazon EKS optimized AMI to use with your node group. By default,
            the latest available AMI version for the node group's current Kubernetes version is
            used. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/eks-linux-ami-versions.html">Amazon
            EKS optimized Amazon Linux 2 AMI versions</a> in the <i>Amazon EKS User Guide</i>.
            If you specify <code>launchTemplate</code>, and your launch template uses a custom
            AMI, then don't specify <code>releaseVersion</code>, or the node group deployment
            will fail. For more information about using launch templates with Amazon EKS, see
            <a href="https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html">Launch
            template support</a> in the Amazon EKS User Guide.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.CreateNodegroupRequest.RemoteAccess">
            <summary>
            Gets and sets the property RemoteAccess. 
            <para>
            The remote access (SSH) configuration to use with your node group. If you specify
            <code>launchTemplate</code>, then don't specify <code>remoteAccess</code>, or the
            node group deployment will fail. For more information about using launch templates
            with Amazon EKS, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html">Launch
            template support</a> in the Amazon EKS User Guide.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.CreateNodegroupRequest.ScalingConfig">
            <summary>
            Gets and sets the property ScalingConfig. 
            <para>
            The scaling configuration details for the Auto Scaling group that is created for your
            node group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.CreateNodegroupRequest.Subnets">
            <summary>
            Gets and sets the property Subnets. 
            <para>
            The subnets to use for the Auto Scaling group that is created for your node group.
            If you specify <code>launchTemplate</code>, then don't specify <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNetworkInterface.html">
            <code>SubnetId</code> </a> in your launch template, or the node group deployment will
            fail. For more information about using launch templates with Amazon EKS, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html">Launch
            template support</a> in the Amazon EKS User Guide.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.CreateNodegroupRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The metadata to apply to the node group to assist with categorization and organization.
            Each tag consists of a key and an optional value, both of which you define. Node group
            tags do not propagate to any other resources associated with the node group, such
            as the Amazon EC2 instances or subnets.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.CreateNodegroupRequest.Taints">
            <summary>
            Gets and sets the property Taints. 
            <para>
            The Kubernetes taints to be applied to the nodes in the node group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.CreateNodegroupRequest.UpdateConfig">
            <summary>
            Gets and sets the property UpdateConfig. 
            <para>
            The node group update configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.CreateNodegroupRequest.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            The Kubernetes version to use for your managed nodes. By default, the Kubernetes version
            of the cluster is used, and this is the only accepted specified value. If you specify
            <code>launchTemplate</code>, and your launch template uses a custom AMI, then don't
            specify <code>version</code>, or the node group deployment will fail. For more information
            about using launch templates with Amazon EKS, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html">Launch
            template support</a> in the Amazon EKS User Guide.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.CreateNodegroupResponse">
            <summary>
            This is the response object from the CreateNodegroup operation.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.CreateNodegroupResponse.Nodegroup">
            <summary>
            Gets and sets the property Nodegroup. 
            <para>
            The full description of your new node group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.DeleteAddonRequest">
            <summary>
            Container for the parameters to the DeleteAddon operation.
            Delete an Amazon EKS add-on.
            
             
            <para>
            When you remove the add-on, it will also be deleted from the cluster. You can always
            manually start an add-on on the cluster using the Kubernetes API.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.DeleteAddonRequest.AddonName">
            <summary>
            Gets and sets the property AddonName. 
            <para>
            The name of the add-on. The name must match one of the names returned by <a href="https://docs.aws.amazon.com/eks/latest/APIReference/API_ListAddons.html">
            <code>ListAddons</code> </a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.DeleteAddonRequest.ClusterName">
            <summary>
            Gets and sets the property ClusterName. 
            <para>
            The name of the cluster to delete the add-on from.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.DeleteAddonRequest.Preserve">
            <summary>
            Gets and sets the property Preserve. 
            <para>
            Specifying this option preserves the add-on software on your cluster but Amazon EKS
            stops managing any settings for the add-on. If an IAM account is associated with the
            add-on, it is not removed.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.DeleteAddonResponse">
            <summary>
            This is the response object from the DeleteAddon operation.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.DeleteAddonResponse.Addon">
            <summary>
            Gets and sets the property Addon.
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.DeleteClusterRequest">
            <summary>
            Container for the parameters to the DeleteCluster operation.
            Deletes the Amazon EKS cluster control plane.
            
             
            <para>
            If you have active services in your cluster that are associated with a load balancer,
            you must delete those services before deleting the cluster so that the load balancers
            are deleted properly. Otherwise, you can have orphaned resources in your VPC that
            prevent you from being able to delete the VPC. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/delete-cluster.html">Deleting
            a Cluster</a> in the <i>Amazon EKS User Guide</i>.
            </para>
             
            <para>
            If you have managed node groups or Fargate profiles attached to the cluster, you must
            delete them first. For more information, see <a>DeleteNodegroup</a> and <a>DeleteFargateProfile</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.DeleteClusterRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the cluster to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.DeleteClusterResponse">
            <summary>
            This is the response object from the DeleteCluster operation.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.DeleteClusterResponse.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The full description of the cluster to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.DeleteFargateProfileRequest">
            <summary>
            Container for the parameters to the DeleteFargateProfile operation.
            Deletes an Fargate profile.
            
             
            <para>
            When you delete a Fargate profile, any pods running on Fargate that were created with
            the profile are deleted. If those pods match another Fargate profile, then they are
            scheduled on Fargate with that profile. If they no longer match any Fargate profiles,
            then they are not scheduled on Fargate and they may remain in a pending state.
            </para>
             
            <para>
            Only one Fargate profile in a cluster can be in the <code>DELETING</code> status at
            a time. You must wait for a Fargate profile to finish deleting before you can delete
            any other profiles in that cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.DeleteFargateProfileRequest.ClusterName">
            <summary>
            Gets and sets the property ClusterName. 
            <para>
            The name of the Amazon EKS cluster associated with the Fargate profile to delete.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.DeleteFargateProfileRequest.FargateProfileName">
            <summary>
            Gets and sets the property FargateProfileName. 
            <para>
            The name of the Fargate profile to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.DeleteFargateProfileResponse">
            <summary>
            This is the response object from the DeleteFargateProfile operation.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.DeleteFargateProfileResponse.FargateProfile">
            <summary>
            Gets and sets the property FargateProfile. 
            <para>
            The deleted Fargate profile.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.DeleteNodegroupRequest">
            <summary>
            Container for the parameters to the DeleteNodegroup operation.
            Deletes an Amazon EKS node group for a cluster.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.DeleteNodegroupRequest.ClusterName">
            <summary>
            Gets and sets the property ClusterName. 
            <para>
            The name of the Amazon EKS cluster that is associated with your node group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.DeleteNodegroupRequest.NodegroupName">
            <summary>
            Gets and sets the property NodegroupName. 
            <para>
            The name of the node group to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.DeleteNodegroupResponse">
            <summary>
            This is the response object from the DeleteNodegroup operation.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.DeleteNodegroupResponse.Nodegroup">
            <summary>
            Gets and sets the property Nodegroup. 
            <para>
            The full description of your deleted node group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.DeregisterClusterRequest">
            <summary>
            Container for the parameters to the DeregisterCluster operation.
            Deregisters a connected cluster to remove it from the Amazon EKS control plane.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.DeregisterClusterRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the connected cluster to deregister.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.DeregisterClusterResponse">
            <summary>
            This is the response object from the DeregisterCluster operation.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.DeregisterClusterResponse.Cluster">
            <summary>
            Gets and sets the property Cluster.
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.DescribeAddonRequest">
            <summary>
            Container for the parameters to the DescribeAddon operation.
            Describes an Amazon EKS add-on.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.DescribeAddonRequest.AddonName">
            <summary>
            Gets and sets the property AddonName. 
            <para>
            The name of the add-on. The name must match one of the names returned by <a href="https://docs.aws.amazon.com/eks/latest/APIReference/API_ListAddons.html">
            <code>ListAddons</code> </a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.DescribeAddonRequest.ClusterName">
            <summary>
            Gets and sets the property ClusterName. 
            <para>
            The name of the cluster.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.DescribeAddonResponse">
            <summary>
            This is the response object from the DescribeAddon operation.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.DescribeAddonResponse.Addon">
            <summary>
            Gets and sets the property Addon.
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.DescribeAddonVersionsRequest">
            <summary>
            Container for the parameters to the DescribeAddonVersions operation.
            Describes the Kubernetes versions that the add-on can be used with.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.DescribeAddonVersionsRequest.AddonName">
            <summary>
            Gets and sets the property AddonName. 
            <para>
            The name of the add-on. The name must match one of the names returned by <a href="https://docs.aws.amazon.com/eks/latest/APIReference/API_ListAddons.html">
            <code>ListAddons</code> </a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.DescribeAddonVersionsRequest.KubernetesVersion">
            <summary>
            Gets and sets the property KubernetesVersion. 
            <para>
            The Kubernetes versions that the add-on can be used with.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.DescribeAddonVersionsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.DescribeAddonVersionsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>nextToken</code> value returned from a previous paginated <code>DescribeAddonVersionsRequest</code>
            where <code>maxResults</code> was used and the results exceeded the value of that
            parameter. Pagination continues from the end of the previous results that returned
            the <code>nextToken</code> value.
            </para>
             <note> 
            <para>
            This token should be treated as an opaque identifier that is used only to retrieve
            the next items in a list and not for other programmatic purposes.
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.DescribeAddonVersionsResponse">
            <summary>
            This is the response object from the DescribeAddonVersions operation.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.DescribeAddonVersionsResponse.Addons">
            <summary>
            Gets and sets the property Addons. 
            <para>
            The list of available versions with Kubernetes version compatibility.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.DescribeAddonVersionsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>nextToken</code> value returned from a previous paginated <code>DescribeAddonVersionsResponse</code>
            where <code>maxResults</code> was used and the results exceeded the value of that
            parameter. Pagination continues from the end of the previous results that returned
            the <code>nextToken</code> value.
            </para>
             <note> 
            <para>
            This token should be treated as an opaque identifier that is used only to retrieve
            the next items in a list and not for other programmatic purposes.
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.DescribeClusterRequest">
            <summary>
            Container for the parameters to the DescribeCluster operation.
            Returns descriptive information about an Amazon EKS cluster.
            
             
            <para>
            The API server endpoint and certificate authority data returned by this operation
            are required for <code>kubelet</code> and <code>kubectl</code> to communicate with
            your Kubernetes API server. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/create-kubeconfig.html">Create
            a kubeconfig for Amazon EKS</a>.
            </para>
             <note> 
            <para>
            The API server endpoint and certificate authority data aren't available until the
            cluster reaches the <code>ACTIVE</code> state.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.DescribeClusterRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the cluster to describe.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.DescribeClusterResponse">
            <summary>
            This is the response object from the DescribeCluster operation.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.DescribeClusterResponse.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The full description of your specified cluster.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.DescribeFargateProfileRequest">
            <summary>
            Container for the parameters to the DescribeFargateProfile operation.
            Returns descriptive information about an Fargate profile.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.DescribeFargateProfileRequest.ClusterName">
            <summary>
            Gets and sets the property ClusterName. 
            <para>
            The name of the Amazon EKS cluster associated with the Fargate profile.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.DescribeFargateProfileRequest.FargateProfileName">
            <summary>
            Gets and sets the property FargateProfileName. 
            <para>
            The name of the Fargate profile to describe.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.DescribeFargateProfileResponse">
            <summary>
            This is the response object from the DescribeFargateProfile operation.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.DescribeFargateProfileResponse.FargateProfile">
            <summary>
            Gets and sets the property FargateProfile. 
            <para>
            The full description of your Fargate profile.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.DescribeIdentityProviderConfigRequest">
            <summary>
            Container for the parameters to the DescribeIdentityProviderConfig operation.
            Returns descriptive information about an identity provider configuration.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.DescribeIdentityProviderConfigRequest.ClusterName">
            <summary>
            Gets and sets the property ClusterName. 
            <para>
            The cluster name that the identity provider configuration is associated to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.DescribeIdentityProviderConfigRequest.IdentityProviderConfig">
            <summary>
            Gets and sets the property IdentityProviderConfig. 
            <para>
            An object that represents an identity provider configuration.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.DescribeIdentityProviderConfigResponse">
            <summary>
            This is the response object from the DescribeIdentityProviderConfig operation.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.DescribeIdentityProviderConfigResponse.IdentityProviderConfig">
            <summary>
            Gets and sets the property IdentityProviderConfig. 
            <para>
            The object that represents an OpenID Connect (OIDC) identity provider configuration.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.DescribeNodegroupRequest">
            <summary>
            Container for the parameters to the DescribeNodegroup operation.
            Returns descriptive information about an Amazon EKS node group.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.DescribeNodegroupRequest.ClusterName">
            <summary>
            Gets and sets the property ClusterName. 
            <para>
            The name of the Amazon EKS cluster associated with the node group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.DescribeNodegroupRequest.NodegroupName">
            <summary>
            Gets and sets the property NodegroupName. 
            <para>
            The name of the node group to describe.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.DescribeNodegroupResponse">
            <summary>
            This is the response object from the DescribeNodegroup operation.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.DescribeNodegroupResponse.Nodegroup">
            <summary>
            Gets and sets the property Nodegroup. 
            <para>
            The full description of your node group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.DescribeUpdateRequest">
            <summary>
            Container for the parameters to the DescribeUpdate operation.
            Returns descriptive information about an update against your Amazon EKS cluster or
            associated managed node group.
            
             
            <para>
            When the status of the update is <code>Succeeded</code>, the update is complete. If
            an update fails, the status is <code>Failed</code>, and an error detail explains the
            reason for the failure.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.DescribeUpdateRequest.AddonName">
            <summary>
            Gets and sets the property AddonName. 
            <para>
            The name of the add-on. The name must match one of the names returned by <a href="https://docs.aws.amazon.com/eks/latest/APIReference/API_ListAddons.html">
            <code>ListAddons</code> </a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.DescribeUpdateRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the Amazon EKS cluster associated with the update.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.DescribeUpdateRequest.NodegroupName">
            <summary>
            Gets and sets the property NodegroupName. 
            <para>
            The name of the Amazon EKS node group associated with the update.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.DescribeUpdateRequest.UpdateId">
            <summary>
            Gets and sets the property UpdateId. 
            <para>
            The ID of the update to describe.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.DescribeUpdateResponse">
            <summary>
            This is the response object from the DescribeUpdate operation.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.DescribeUpdateResponse.Update">
            <summary>
            Gets and sets the property Update. 
            <para>
            The full description of the specified update.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.DisassociateIdentityProviderConfigRequest">
            <summary>
            Container for the parameters to the DisassociateIdentityProviderConfig operation.
            Disassociates an identity provider configuration from a cluster. If you disassociate
            an identity provider from your cluster, users included in the provider can no longer
            access the cluster. However, you can still access the cluster with Amazon Web Services
            IAM users.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.DisassociateIdentityProviderConfigRequest.ClientRequestToken">
            <summary>
            Gets and sets the property ClientRequestToken. 
            <para>
            A unique, case-sensitive identifier that you provide to ensure the idempotency of
            the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.DisassociateIdentityProviderConfigRequest.ClusterName">
            <summary>
            Gets and sets the property ClusterName. 
            <para>
            The name of the cluster to disassociate an identity provider from.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.DisassociateIdentityProviderConfigRequest.IdentityProviderConfig">
            <summary>
            Gets and sets the property IdentityProviderConfig. 
            <para>
            An object that represents an identity provider configuration.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.DisassociateIdentityProviderConfigResponse">
            <summary>
            This is the response object from the DisassociateIdentityProviderConfig operation.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.DisassociateIdentityProviderConfigResponse.Update">
            <summary>
            Gets and sets the property Update.
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.EncryptionConfig">
            <summary>
            The encryption configuration for the cluster.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.EncryptionConfig.Provider">
            <summary>
            Gets and sets the property Provider. 
            <para>
            Key Management Service (KMS) key. Either the ARN or the alias can be used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.EncryptionConfig.Resources">
            <summary>
            Gets and sets the property Resources. 
            <para>
            Specifies the resources to be encrypted. The only supported value is "secrets".
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.ErrorDetail">
            <summary>
            An object representing an error when an asynchronous operation fails.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ErrorDetail.ErrorCode">
            <summary>
            Gets and sets the property ErrorCode. 
            <para>
            A brief description of the error. 
            </para>
             <ul> <li> 
            <para>
             <b>SubnetNotFound</b>: We couldn't find one of the subnets associated with the cluster.
            </para>
             </li> <li> 
            <para>
             <b>SecurityGroupNotFound</b>: We couldn't find one of the security groups associated
            with the cluster.
            </para>
             </li> <li> 
            <para>
             <b>EniLimitReached</b>: You have reached the elastic network interface limit for
            your account.
            </para>
             </li> <li> 
            <para>
             <b>IpNotAvailable</b>: A subnet associated with the cluster doesn't have any free
            IP addresses.
            </para>
             </li> <li> 
            <para>
             <b>AccessDenied</b>: You don't have permissions to perform the specified operation.
            </para>
             </li> <li> 
            <para>
             <b>OperationNotPermitted</b>: The service role associated with the cluster doesn't
            have the required access permissions for Amazon EKS.
            </para>
             </li> <li> 
            <para>
             <b>VpcIdNotFound</b>: We couldn't find the VPC associated with the cluster.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ErrorDetail.ErrorMessage">
            <summary>
            Gets and sets the property ErrorMessage. 
            <para>
            A more complete description of the error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ErrorDetail.ResourceIds">
            <summary>
            Gets and sets the property ResourceIds. 
            <para>
            An optional field that contains the resource IDs associated with the error.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.FargateProfile">
            <summary>
            An object representing an Fargate profile.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.FargateProfile.ClusterName">
            <summary>
            Gets and sets the property ClusterName. 
            <para>
            The name of the Amazon EKS cluster that the Fargate profile belongs to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.FargateProfile.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The Unix epoch timestamp in seconds for when the Fargate profile was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.FargateProfile.FargateProfileArn">
            <summary>
            Gets and sets the property FargateProfileArn. 
            <para>
            The full Amazon Resource Name (ARN) of the Fargate profile.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.FargateProfile.FargateProfileName">
            <summary>
            Gets and sets the property FargateProfileName. 
            <para>
            The name of the Fargate profile.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.FargateProfile.PodExecutionRoleArn">
            <summary>
            Gets and sets the property PodExecutionRoleArn. 
            <para>
            The Amazon Resource Name (ARN) of the pod execution role to use for pods that match
            the selectors in the Fargate profile. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/pod-execution-role.html">Pod
            Execution Role</a> in the <i>Amazon EKS User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.FargateProfile.Selectors">
            <summary>
            Gets and sets the property Selectors. 
            <para>
            The selectors to match for pods to use this Fargate profile.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.FargateProfile.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The current status of the Fargate profile.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.FargateProfile.Subnets">
            <summary>
            Gets and sets the property Subnets. 
            <para>
            The IDs of subnets to launch pods into.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.FargateProfile.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The metadata applied to the Fargate profile to assist with categorization and organization.
            Each tag consists of a key and an optional value, both of which you define. Fargate
            profile tags do not propagate to any other resources associated with the Fargate profile,
            such as the pods that are scheduled with it.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.FargateProfileSelector">
            <summary>
            An object representing an Fargate profile selector.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.FargateProfileSelector.Labels">
            <summary>
            Gets and sets the property Labels. 
            <para>
            The Kubernetes labels that the selector should match. A pod must contain all of the
            labels that are specified in the selector for it to be considered a match.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.FargateProfileSelector.Namespace">
            <summary>
            Gets and sets the property Namespace. 
            <para>
            The Kubernetes namespace that the selector should match.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.Identity">
            <summary>
            An object representing an identity provider.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Identity.Oidc">
            <summary>
            Gets and sets the property Oidc. 
            <para>
            An object representing the <a href="https://openid.net/connect/">OpenID Connect</a>
            identity provider information.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.IdentityProviderConfig">
            <summary>
            An object representing an identity provider configuration.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.IdentityProviderConfig.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the identity provider configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.IdentityProviderConfig.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of the identity provider configuration.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.IdentityProviderConfigResponse">
            <summary>
            The full description of your identity configuration.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.IdentityProviderConfigResponse.Oidc">
            <summary>
            Gets and sets the property Oidc. 
            <para>
            An object that represents an OpenID Connect (OIDC) identity provider configuration.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.AddonHealthUnmarshaller">
            <summary>
            Response Unmarshaller for AddonHealth Object
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.AddonHealthUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EKS#Model#AddonHealth,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.AddonHealthUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.AddonHealthUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.AddonInfoUnmarshaller">
            <summary>
            Response Unmarshaller for AddonInfo Object
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.AddonInfoUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EKS#Model#AddonInfo,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.AddonInfoUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.AddonInfoUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.AddonIssueUnmarshaller">
            <summary>
            Response Unmarshaller for AddonIssue Object
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.AddonIssueUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EKS#Model#AddonIssue,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.AddonIssueUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.AddonIssueUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.AddonUnmarshaller">
            <summary>
            Response Unmarshaller for Addon Object
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.AddonUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EKS#Model#Addon,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.AddonUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.AddonUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.AddonVersionInfoUnmarshaller">
            <summary>
            Response Unmarshaller for AddonVersionInfo Object
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.AddonVersionInfoUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EKS#Model#AddonVersionInfo,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.AddonVersionInfoUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.AddonVersionInfoUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.AssociateEncryptionConfigRequestMarshaller">
            <summary>
            AssociateEncryptionConfig Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.AssociateEncryptionConfigRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.AssociateEncryptionConfigRequestMarshaller.Marshall(Amazon.EKS.Model.AssociateEncryptionConfigRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.AssociateEncryptionConfigRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.AssociateEncryptionConfigResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AssociateEncryptionConfig operation
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.AssociateEncryptionConfigResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.AssociateEncryptionConfigResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.AssociateEncryptionConfigResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.AssociateIdentityProviderConfigRequestMarshaller">
            <summary>
            AssociateIdentityProviderConfig Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.AssociateIdentityProviderConfigRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.AssociateIdentityProviderConfigRequestMarshaller.Marshall(Amazon.EKS.Model.AssociateIdentityProviderConfigRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.AssociateIdentityProviderConfigRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.AssociateIdentityProviderConfigResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AssociateIdentityProviderConfig operation
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.AssociateIdentityProviderConfigResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.AssociateIdentityProviderConfigResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.AssociateIdentityProviderConfigResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.AutoScalingGroupUnmarshaller">
            <summary>
            Response Unmarshaller for AutoScalingGroup Object
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.AutoScalingGroupUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EKS#Model#AutoScalingGroup,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.AutoScalingGroupUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.AutoScalingGroupUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.BadRequestExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for BadRequestException Object
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.BadRequestExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.BadRequestExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.BadRequestExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.CertificateUnmarshaller">
            <summary>
            Response Unmarshaller for Certificate Object
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.CertificateUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EKS#Model#Certificate,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.CertificateUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.CertificateUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.ClientExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ClientException Object
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.ClientExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.ClientExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.ClientExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.ClusterUnmarshaller">
            <summary>
            Response Unmarshaller for Cluster Object
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.ClusterUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EKS#Model#Cluster,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.ClusterUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.ClusterUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.CompatibilityUnmarshaller">
            <summary>
            Response Unmarshaller for Compatibility Object
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.CompatibilityUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EKS#Model#Compatibility,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.CompatibilityUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.CompatibilityUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.ConnectorConfigRequestMarshaller">
            <summary>
            ConnectorConfigRequest Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.ConnectorConfigRequestMarshaller.Marshall(Amazon.EKS.Model.ConnectorConfigRequest,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EKS.Model.Internal.MarshallTransformations.ConnectorConfigRequestMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.ConnectorConfigResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ConnectorConfigResponse Object
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.ConnectorConfigResponseUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EKS#Model#ConnectorConfigResponse,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.ConnectorConfigResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.ConnectorConfigResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.CreateAddonRequestMarshaller">
            <summary>
            CreateAddon Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.CreateAddonRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.CreateAddonRequestMarshaller.Marshall(Amazon.EKS.Model.CreateAddonRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.CreateAddonRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.CreateAddonResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateAddon operation
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.CreateAddonResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.CreateAddonResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.CreateAddonResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.CreateClusterRequestMarshaller">
            <summary>
            CreateCluster Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.CreateClusterRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.CreateClusterRequestMarshaller.Marshall(Amazon.EKS.Model.CreateClusterRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.CreateClusterRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.CreateClusterResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateCluster operation
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.CreateClusterResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.CreateClusterResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.CreateClusterResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.CreateFargateProfileRequestMarshaller">
            <summary>
            CreateFargateProfile Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.CreateFargateProfileRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.CreateFargateProfileRequestMarshaller.Marshall(Amazon.EKS.Model.CreateFargateProfileRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.CreateFargateProfileRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.CreateFargateProfileResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateFargateProfile operation
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.CreateFargateProfileResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.CreateFargateProfileResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.CreateFargateProfileResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.CreateNodegroupRequestMarshaller">
            <summary>
            CreateNodegroup Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.CreateNodegroupRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.CreateNodegroupRequestMarshaller.Marshall(Amazon.EKS.Model.CreateNodegroupRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.CreateNodegroupRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.CreateNodegroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateNodegroup operation
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.CreateNodegroupResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.CreateNodegroupResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.CreateNodegroupResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.DeleteAddonRequestMarshaller">
            <summary>
            DeleteAddon Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.DeleteAddonRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.DeleteAddonRequestMarshaller.Marshall(Amazon.EKS.Model.DeleteAddonRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.DeleteAddonRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.DeleteAddonResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteAddon operation
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.DeleteAddonResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.DeleteAddonResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.DeleteAddonResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.DeleteClusterRequestMarshaller">
            <summary>
            DeleteCluster Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.DeleteClusterRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.DeleteClusterRequestMarshaller.Marshall(Amazon.EKS.Model.DeleteClusterRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.DeleteClusterRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.DeleteClusterResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteCluster operation
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.DeleteClusterResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.DeleteClusterResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.DeleteClusterResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.DeleteFargateProfileRequestMarshaller">
            <summary>
            DeleteFargateProfile Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.DeleteFargateProfileRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.DeleteFargateProfileRequestMarshaller.Marshall(Amazon.EKS.Model.DeleteFargateProfileRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.DeleteFargateProfileRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.DeleteFargateProfileResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteFargateProfile operation
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.DeleteFargateProfileResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.DeleteFargateProfileResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.DeleteFargateProfileResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.DeleteNodegroupRequestMarshaller">
            <summary>
            DeleteNodegroup Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.DeleteNodegroupRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.DeleteNodegroupRequestMarshaller.Marshall(Amazon.EKS.Model.DeleteNodegroupRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.DeleteNodegroupRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.DeleteNodegroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteNodegroup operation
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.DeleteNodegroupResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.DeleteNodegroupResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.DeleteNodegroupResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.DeregisterClusterRequestMarshaller">
            <summary>
            DeregisterCluster Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.DeregisterClusterRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.DeregisterClusterRequestMarshaller.Marshall(Amazon.EKS.Model.DeregisterClusterRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.DeregisterClusterRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.DeregisterClusterResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeregisterCluster operation
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.DeregisterClusterResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.DeregisterClusterResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.DeregisterClusterResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.DescribeAddonRequestMarshaller">
            <summary>
            DescribeAddon Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.DescribeAddonRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.DescribeAddonRequestMarshaller.Marshall(Amazon.EKS.Model.DescribeAddonRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.DescribeAddonRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.DescribeAddonResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeAddon operation
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.DescribeAddonResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.DescribeAddonResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.DescribeAddonResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.DescribeAddonVersionsRequestMarshaller">
            <summary>
            DescribeAddonVersions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.DescribeAddonVersionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.DescribeAddonVersionsRequestMarshaller.Marshall(Amazon.EKS.Model.DescribeAddonVersionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.DescribeAddonVersionsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.DescribeAddonVersionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeAddonVersions operation
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.DescribeAddonVersionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.DescribeAddonVersionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.DescribeAddonVersionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.DescribeClusterRequestMarshaller">
            <summary>
            DescribeCluster Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.DescribeClusterRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.DescribeClusterRequestMarshaller.Marshall(Amazon.EKS.Model.DescribeClusterRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.DescribeClusterRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.DescribeClusterResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeCluster operation
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.DescribeClusterResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.DescribeClusterResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.DescribeClusterResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.DescribeFargateProfileRequestMarshaller">
            <summary>
            DescribeFargateProfile Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.DescribeFargateProfileRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.DescribeFargateProfileRequestMarshaller.Marshall(Amazon.EKS.Model.DescribeFargateProfileRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.DescribeFargateProfileRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.DescribeFargateProfileResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeFargateProfile operation
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.DescribeFargateProfileResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.DescribeFargateProfileResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.DescribeFargateProfileResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.DescribeIdentityProviderConfigRequestMarshaller">
            <summary>
            DescribeIdentityProviderConfig Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.DescribeIdentityProviderConfigRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.DescribeIdentityProviderConfigRequestMarshaller.Marshall(Amazon.EKS.Model.DescribeIdentityProviderConfigRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.DescribeIdentityProviderConfigRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.DescribeIdentityProviderConfigResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeIdentityProviderConfig operation
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.DescribeIdentityProviderConfigResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.DescribeIdentityProviderConfigResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.DescribeIdentityProviderConfigResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.DescribeNodegroupRequestMarshaller">
            <summary>
            DescribeNodegroup Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.DescribeNodegroupRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.DescribeNodegroupRequestMarshaller.Marshall(Amazon.EKS.Model.DescribeNodegroupRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.DescribeNodegroupRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.DescribeNodegroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeNodegroup operation
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.DescribeNodegroupResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.DescribeNodegroupResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.DescribeNodegroupResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.DescribeUpdateRequestMarshaller">
            <summary>
            DescribeUpdate Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.DescribeUpdateRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.DescribeUpdateRequestMarshaller.Marshall(Amazon.EKS.Model.DescribeUpdateRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.DescribeUpdateRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.DescribeUpdateResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeUpdate operation
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.DescribeUpdateResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.DescribeUpdateResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.DescribeUpdateResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.DisassociateIdentityProviderConfigRequestMarshaller">
            <summary>
            DisassociateIdentityProviderConfig Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.DisassociateIdentityProviderConfigRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.DisassociateIdentityProviderConfigRequestMarshaller.Marshall(Amazon.EKS.Model.DisassociateIdentityProviderConfigRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.DisassociateIdentityProviderConfigRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.DisassociateIdentityProviderConfigResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DisassociateIdentityProviderConfig operation
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.DisassociateIdentityProviderConfigResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.DisassociateIdentityProviderConfigResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.DisassociateIdentityProviderConfigResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.EncryptionConfigMarshaller">
            <summary>
            EncryptionConfig Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.EncryptionConfigMarshaller.Marshall(Amazon.EKS.Model.EncryptionConfig,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EKS.Model.Internal.MarshallTransformations.EncryptionConfigMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.EncryptionConfigUnmarshaller">
            <summary>
            Response Unmarshaller for EncryptionConfig Object
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.EncryptionConfigUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EKS#Model#EncryptionConfig,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.EncryptionConfigUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.EncryptionConfigUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.ErrorDetailUnmarshaller">
            <summary>
            Response Unmarshaller for ErrorDetail Object
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.ErrorDetailUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EKS#Model#ErrorDetail,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.ErrorDetailUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.ErrorDetailUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.FargateProfileSelectorMarshaller">
            <summary>
            FargateProfileSelector Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.FargateProfileSelectorMarshaller.Marshall(Amazon.EKS.Model.FargateProfileSelector,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EKS.Model.Internal.MarshallTransformations.FargateProfileSelectorMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.FargateProfileSelectorUnmarshaller">
            <summary>
            Response Unmarshaller for FargateProfileSelector Object
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.FargateProfileSelectorUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EKS#Model#FargateProfileSelector,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.FargateProfileSelectorUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.FargateProfileSelectorUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.FargateProfileUnmarshaller">
            <summary>
            Response Unmarshaller for FargateProfile Object
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.FargateProfileUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EKS#Model#FargateProfile,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.FargateProfileUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.FargateProfileUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.IdentityProviderConfigMarshaller">
            <summary>
            IdentityProviderConfig Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.IdentityProviderConfigMarshaller.Marshall(Amazon.EKS.Model.IdentityProviderConfig,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EKS.Model.Internal.MarshallTransformations.IdentityProviderConfigMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.IdentityProviderConfigResponseUnmarshaller">
            <summary>
            Response Unmarshaller for IdentityProviderConfigResponse Object
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.IdentityProviderConfigResponseUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EKS#Model#IdentityProviderConfigResponse,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.IdentityProviderConfigResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.IdentityProviderConfigResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.IdentityProviderConfigUnmarshaller">
            <summary>
            Response Unmarshaller for IdentityProviderConfig Object
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.IdentityProviderConfigUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EKS#Model#IdentityProviderConfig,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.IdentityProviderConfigUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.IdentityProviderConfigUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.IdentityUnmarshaller">
            <summary>
            Response Unmarshaller for Identity Object
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.IdentityUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EKS#Model#Identity,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.IdentityUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.IdentityUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.InvalidParameterExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidParameterException Object
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.InvalidParameterExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.InvalidParameterExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.InvalidParameterExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.InvalidRequestExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidRequestException Object
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.InvalidRequestExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.InvalidRequestExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.InvalidRequestExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.IssueUnmarshaller">
            <summary>
            Response Unmarshaller for Issue Object
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.IssueUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EKS#Model#Issue,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.IssueUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.IssueUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.KubernetesNetworkConfigRequestMarshaller">
            <summary>
            KubernetesNetworkConfigRequest Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.KubernetesNetworkConfigRequestMarshaller.Marshall(Amazon.EKS.Model.KubernetesNetworkConfigRequest,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EKS.Model.Internal.MarshallTransformations.KubernetesNetworkConfigRequestMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.KubernetesNetworkConfigResponseUnmarshaller">
            <summary>
            Response Unmarshaller for KubernetesNetworkConfigResponse Object
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.KubernetesNetworkConfigResponseUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EKS#Model#KubernetesNetworkConfigResponse,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.KubernetesNetworkConfigResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.KubernetesNetworkConfigResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.LaunchTemplateSpecificationMarshaller">
            <summary>
            LaunchTemplateSpecification Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.LaunchTemplateSpecificationMarshaller.Marshall(Amazon.EKS.Model.LaunchTemplateSpecification,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EKS.Model.Internal.MarshallTransformations.LaunchTemplateSpecificationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.LaunchTemplateSpecificationUnmarshaller">
            <summary>
            Response Unmarshaller for LaunchTemplateSpecification Object
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.LaunchTemplateSpecificationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EKS#Model#LaunchTemplateSpecification,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.LaunchTemplateSpecificationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.LaunchTemplateSpecificationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.ListAddonsRequestMarshaller">
            <summary>
            ListAddons Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.ListAddonsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.ListAddonsRequestMarshaller.Marshall(Amazon.EKS.Model.ListAddonsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.ListAddonsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.ListAddonsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListAddons operation
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.ListAddonsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.ListAddonsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.ListAddonsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.ListClustersRequestMarshaller">
            <summary>
            ListClusters Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.ListClustersRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.ListClustersRequestMarshaller.Marshall(Amazon.EKS.Model.ListClustersRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.ListClustersRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.ListClustersResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListClusters operation
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.ListClustersResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.ListClustersResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.ListClustersResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.ListFargateProfilesRequestMarshaller">
            <summary>
            ListFargateProfiles Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.ListFargateProfilesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.ListFargateProfilesRequestMarshaller.Marshall(Amazon.EKS.Model.ListFargateProfilesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.ListFargateProfilesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.ListFargateProfilesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListFargateProfiles operation
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.ListFargateProfilesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.ListFargateProfilesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.ListFargateProfilesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.ListIdentityProviderConfigsRequestMarshaller">
            <summary>
            ListIdentityProviderConfigs Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.ListIdentityProviderConfigsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.ListIdentityProviderConfigsRequestMarshaller.Marshall(Amazon.EKS.Model.ListIdentityProviderConfigsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.ListIdentityProviderConfigsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.ListIdentityProviderConfigsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListIdentityProviderConfigs operation
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.ListIdentityProviderConfigsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.ListIdentityProviderConfigsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.ListIdentityProviderConfigsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.ListNodegroupsRequestMarshaller">
            <summary>
            ListNodegroups Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.ListNodegroupsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.ListNodegroupsRequestMarshaller.Marshall(Amazon.EKS.Model.ListNodegroupsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.ListNodegroupsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.ListNodegroupsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListNodegroups operation
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.ListNodegroupsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.ListNodegroupsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.ListNodegroupsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller">
            <summary>
            ListTagsForResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.EKS.Model.ListTagsForResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListTagsForResource operation
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.ListUpdatesRequestMarshaller">
            <summary>
            ListUpdates Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.ListUpdatesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.ListUpdatesRequestMarshaller.Marshall(Amazon.EKS.Model.ListUpdatesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.ListUpdatesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.ListUpdatesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListUpdates operation
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.ListUpdatesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.ListUpdatesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.ListUpdatesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.LoggingMarshaller">
            <summary>
            Logging Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.LoggingMarshaller.Marshall(Amazon.EKS.Model.Logging,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EKS.Model.Internal.MarshallTransformations.LoggingMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.LoggingUnmarshaller">
            <summary>
            Response Unmarshaller for Logging Object
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.LoggingUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EKS#Model#Logging,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.LoggingUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.LoggingUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.LogSetupMarshaller">
            <summary>
            LogSetup Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.LogSetupMarshaller.Marshall(Amazon.EKS.Model.LogSetup,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EKS.Model.Internal.MarshallTransformations.LogSetupMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.LogSetupUnmarshaller">
            <summary>
            Response Unmarshaller for LogSetup Object
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.LogSetupUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EKS#Model#LogSetup,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.LogSetupUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.LogSetupUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.NodegroupHealthUnmarshaller">
            <summary>
            Response Unmarshaller for NodegroupHealth Object
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.NodegroupHealthUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EKS#Model#NodegroupHealth,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.NodegroupHealthUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.NodegroupHealthUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.NodegroupResourcesUnmarshaller">
            <summary>
            Response Unmarshaller for NodegroupResources Object
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.NodegroupResourcesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EKS#Model#NodegroupResources,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.NodegroupResourcesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.NodegroupResourcesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.NodegroupScalingConfigMarshaller">
            <summary>
            NodegroupScalingConfig Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.NodegroupScalingConfigMarshaller.Marshall(Amazon.EKS.Model.NodegroupScalingConfig,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EKS.Model.Internal.MarshallTransformations.NodegroupScalingConfigMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.NodegroupScalingConfigUnmarshaller">
            <summary>
            Response Unmarshaller for NodegroupScalingConfig Object
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.NodegroupScalingConfigUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EKS#Model#NodegroupScalingConfig,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.NodegroupScalingConfigUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.NodegroupScalingConfigUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.NodegroupUnmarshaller">
            <summary>
            Response Unmarshaller for Nodegroup Object
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.NodegroupUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EKS#Model#Nodegroup,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.NodegroupUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.NodegroupUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.NodegroupUpdateConfigMarshaller">
            <summary>
            NodegroupUpdateConfig Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.NodegroupUpdateConfigMarshaller.Marshall(Amazon.EKS.Model.NodegroupUpdateConfig,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EKS.Model.Internal.MarshallTransformations.NodegroupUpdateConfigMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.NodegroupUpdateConfigUnmarshaller">
            <summary>
            Response Unmarshaller for NodegroupUpdateConfig Object
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.NodegroupUpdateConfigUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EKS#Model#NodegroupUpdateConfig,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.NodegroupUpdateConfigUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.NodegroupUpdateConfigUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.NotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for NotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.NotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.NotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.NotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.OidcIdentityProviderConfigRequestMarshaller">
            <summary>
            OidcIdentityProviderConfigRequest Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.OidcIdentityProviderConfigRequestMarshaller.Marshall(Amazon.EKS.Model.OidcIdentityProviderConfigRequest,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EKS.Model.Internal.MarshallTransformations.OidcIdentityProviderConfigRequestMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.OidcIdentityProviderConfigUnmarshaller">
            <summary>
            Response Unmarshaller for OidcIdentityProviderConfig Object
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.OidcIdentityProviderConfigUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EKS#Model#OidcIdentityProviderConfig,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.OidcIdentityProviderConfigUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.OidcIdentityProviderConfigUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.OIDCUnmarshaller">
            <summary>
            Response Unmarshaller for OIDC Object
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.OIDCUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EKS#Model#OIDC,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.OIDCUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.OIDCUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.ProviderMarshaller">
            <summary>
            Provider Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.ProviderMarshaller.Marshall(Amazon.EKS.Model.Provider,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EKS.Model.Internal.MarshallTransformations.ProviderMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.ProviderUnmarshaller">
            <summary>
            Response Unmarshaller for Provider Object
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.ProviderUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EKS#Model#Provider,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.ProviderUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.ProviderUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.RegisterClusterRequestMarshaller">
            <summary>
            RegisterCluster Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.RegisterClusterRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.RegisterClusterRequestMarshaller.Marshall(Amazon.EKS.Model.RegisterClusterRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.RegisterClusterRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.RegisterClusterResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RegisterCluster operation
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.RegisterClusterResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.RegisterClusterResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.RegisterClusterResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.RemoteAccessConfigMarshaller">
            <summary>
            RemoteAccessConfig Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.RemoteAccessConfigMarshaller.Marshall(Amazon.EKS.Model.RemoteAccessConfig,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EKS.Model.Internal.MarshallTransformations.RemoteAccessConfigMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.RemoteAccessConfigUnmarshaller">
            <summary>
            Response Unmarshaller for RemoteAccessConfig Object
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.RemoteAccessConfigUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EKS#Model#RemoteAccessConfig,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.RemoteAccessConfigUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.RemoteAccessConfigUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.ResourceInUseExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceInUseException Object
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.ResourceInUseExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.ResourceInUseExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.ResourceInUseExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.ResourceLimitExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceLimitExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.ResourceLimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.ResourceLimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.ResourceLimitExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.ServerExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ServerException Object
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.ServerExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.ServerExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.ServerExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.ServiceUnavailableExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ServiceUnavailableException Object
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.ServiceUnavailableExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.ServiceUnavailableExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.ServiceUnavailableExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller">
            <summary>
            TagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.EKS.Model.TagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for TagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.TaintMarshaller">
            <summary>
            Taint Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.TaintMarshaller.Marshall(Amazon.EKS.Model.Taint,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EKS.Model.Internal.MarshallTransformations.TaintMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.TaintUnmarshaller">
            <summary>
            Response Unmarshaller for Taint Object
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.TaintUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EKS#Model#Taint,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.TaintUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.TaintUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.UnsupportedAvailabilityZoneExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for UnsupportedAvailabilityZoneException Object
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.UnsupportedAvailabilityZoneExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.UnsupportedAvailabilityZoneExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.UnsupportedAvailabilityZoneExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller">
            <summary>
            UntagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.EKS.Model.UntagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UntagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateAddonRequestMarshaller">
            <summary>
            UpdateAddon Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateAddonRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateAddonRequestMarshaller.Marshall(Amazon.EKS.Model.UpdateAddonRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateAddonRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateAddonResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateAddon operation
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateAddonResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateAddonResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateAddonResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateClusterConfigRequestMarshaller">
            <summary>
            UpdateClusterConfig Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateClusterConfigRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateClusterConfigRequestMarshaller.Marshall(Amazon.EKS.Model.UpdateClusterConfigRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateClusterConfigRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateClusterConfigResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateClusterConfig operation
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateClusterConfigResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateClusterConfigResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateClusterConfigResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateClusterVersionRequestMarshaller">
            <summary>
            UpdateClusterVersion Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateClusterVersionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateClusterVersionRequestMarshaller.Marshall(Amazon.EKS.Model.UpdateClusterVersionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateClusterVersionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateClusterVersionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateClusterVersion operation
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateClusterVersionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateClusterVersionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateClusterVersionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateLabelsPayloadMarshaller">
            <summary>
            UpdateLabelsPayload Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateLabelsPayloadMarshaller.Marshall(Amazon.EKS.Model.UpdateLabelsPayload,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateLabelsPayloadMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateNodegroupConfigRequestMarshaller">
            <summary>
            UpdateNodegroupConfig Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateNodegroupConfigRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateNodegroupConfigRequestMarshaller.Marshall(Amazon.EKS.Model.UpdateNodegroupConfigRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateNodegroupConfigRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateNodegroupConfigResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateNodegroupConfig operation
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateNodegroupConfigResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateNodegroupConfigResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateNodegroupConfigResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateNodegroupVersionRequestMarshaller">
            <summary>
            UpdateNodegroupVersion Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateNodegroupVersionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateNodegroupVersionRequestMarshaller.Marshall(Amazon.EKS.Model.UpdateNodegroupVersionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateNodegroupVersionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateNodegroupVersionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateNodegroupVersion operation
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateNodegroupVersionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateNodegroupVersionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateNodegroupVersionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateParamUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateParam Object
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateParamUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EKS#Model#UpdateParam,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateParamUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateParamUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateTaintsPayloadMarshaller">
            <summary>
            UpdateTaintsPayload Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateTaintsPayloadMarshaller.Marshall(Amazon.EKS.Model.UpdateTaintsPayload,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateTaintsPayloadMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateUnmarshaller">
            <summary>
            Response Unmarshaller for Update Object
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EKS#Model#Update,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.VpcConfigRequestMarshaller">
            <summary>
            VpcConfigRequest Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.VpcConfigRequestMarshaller.Marshall(Amazon.EKS.Model.VpcConfigRequest,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EKS.Model.Internal.MarshallTransformations.VpcConfigRequestMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.VpcConfigResponseUnmarshaller">
            <summary>
            Response Unmarshaller for VpcConfigResponse Object
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.VpcConfigResponseUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EKS#Model#VpcConfigResponse,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.VpcConfigResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.VpcConfigResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.InvalidParameterException">
            <summary>
            The specified parameter is invalid. Review the available parameters for the API request.
            </summary>
        </member>
        <member name="M:Amazon.EKS.Model.InvalidParameterException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidParameterException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.EKS.Model.InvalidParameterException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EKS.Model.InvalidParameterException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EKS.Model.InvalidParameterException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.EKS.Model.InvalidParameterException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.EKS.Model.InvalidParameterException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidParameterException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.EKS.Model.InvalidParameterException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="P:Amazon.EKS.Model.InvalidParameterException.AddonName">
            <summary>
            Gets and sets the property AddonName.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.InvalidParameterException.ClusterName">
            <summary>
            Gets and sets the property ClusterName. 
            <para>
            The Amazon EKS cluster associated with the exception.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.InvalidParameterException.FargateProfileName">
            <summary>
            Gets and sets the property FargateProfileName. 
            <para>
            The Fargate profile associated with the exception.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.InvalidParameterException.NodegroupName">
            <summary>
            Gets and sets the property NodegroupName. 
            <para>
            The Amazon EKS managed node group associated with the exception.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.InvalidRequestException">
            <summary>
            The request is invalid given the state of the cluster. Check the state of the cluster
            and the associated operations.
            </summary>
        </member>
        <member name="M:Amazon.EKS.Model.InvalidRequestException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidRequestException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.EKS.Model.InvalidRequestException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidRequestException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EKS.Model.InvalidRequestException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidRequestException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EKS.Model.InvalidRequestException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidRequestException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.EKS.Model.InvalidRequestException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidRequestException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.EKS.Model.InvalidRequestException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidRequestException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.EKS.Model.InvalidRequestException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="P:Amazon.EKS.Model.InvalidRequestException.AddonName">
            <summary>
            Gets and sets the property AddonName.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.InvalidRequestException.ClusterName">
            <summary>
            Gets and sets the property ClusterName. 
            <para>
            The Amazon EKS cluster associated with the exception.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.InvalidRequestException.NodegroupName">
            <summary>
            Gets and sets the property NodegroupName. 
            <para>
            The Amazon EKS managed node group associated with the exception.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.Issue">
            <summary>
            An object representing an issue with an Amazon EKS resource.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Issue.Code">
            <summary>
            Gets and sets the property Code. 
            <para>
            A brief description of the error.
            </para>
             <ul> <li> 
            <para>
             <b>AccessDenied</b>: Amazon EKS or one or more of your managed nodes is failing to
            authenticate or authorize with your Kubernetes cluster API server.
            </para>
             </li> <li> 
            <para>
             <b>AsgInstanceLaunchFailures</b>: Your Auto Scaling group is experiencing failures
            while attempting to launch instances.
            </para>
             </li> <li> 
            <para>
             <b>AutoScalingGroupNotFound</b>: We couldn't find the Auto Scaling group associated
            with the managed node group. You may be able to recreate an Auto Scaling group with
            the same settings to recover.
            </para>
             </li> <li> 
            <para>
             <b>ClusterUnreachable</b>: Amazon EKS or one or more of your managed nodes is unable
            to to communicate with your Kubernetes cluster API server. This can happen if there
            are network disruptions or if API servers are timing out processing requests. 
            </para>
             </li> <li> 
            <para>
             <b>Ec2LaunchTemplateNotFound</b>: We couldn't find the Amazon EC2 launch template
            for your managed node group. You may be able to recreate a launch template with the
            same settings to recover.
            </para>
             </li> <li> 
            <para>
             <b>Ec2LaunchTemplateVersionMismatch</b>: The Amazon EC2 launch template version for
            your managed node group does not match the version that Amazon EKS created. You may
            be able to revert to the version that Amazon EKS created to recover.
            </para>
             </li> <li> 
            <para>
             <b>Ec2SecurityGroupDeletionFailure</b>: We could not delete the remote access security
            group for your managed node group. Remove any dependencies from the security group.
            </para>
             </li> <li> 
            <para>
             <b>Ec2SecurityGroupNotFound</b>: We couldn't find the cluster security group for
            the cluster. You must recreate your cluster.
            </para>
             </li> <li> 
            <para>
             <b>Ec2SubnetInvalidConfiguration</b>: One or more Amazon EC2 subnets specified for
            a node group do not automatically assign public IP addresses to instances launched
            into it. If you want your instances to be assigned a public IP address, then you need
            to enable the <code>auto-assign public IP address</code> setting for the subnet. See
            <a href="https://docs.aws.amazon.com/vpc/latest/userguide/vpc-ip-addressing.html#subnet-public-ip">Modifying
            the public IPv4 addressing attribute for your subnet</a> in the Amazon VPC User Guide.
            </para>
             </li> <li> 
            <para>
             <b>IamInstanceProfileNotFound</b>: We couldn't find the IAM instance profile for
            your managed node group. You may be able to recreate an instance profile with the
            same settings to recover.
            </para>
             </li> <li> 
            <para>
             <b>IamNodeRoleNotFound</b>: We couldn't find the IAM role for your managed node group.
            You may be able to recreate an IAM role with the same settings to recover.
            </para>
             </li> <li> 
            <para>
             <b>InstanceLimitExceeded</b>: Your Amazon Web Services account is unable to launch
            any more instances of the specified instance type. You may be able to request an Amazon
            EC2 instance limit increase to recover.
            </para>
             </li> <li> 
            <para>
             <b>InsufficientFreeAddresses</b>: One or more of the subnets associated with your
            managed node group does not have enough available IP addresses for new nodes.
            </para>
             </li> <li> 
            <para>
             <b>InternalFailure</b>: These errors are usually caused by an Amazon EKS server-side
            issue.
            </para>
             </li> <li> 
            <para>
             <b>NodeCreationFailure</b>: Your launched instances are unable to register with your
            Amazon EKS cluster. Common causes of this failure are insufficient <a href="https://docs.aws.amazon.com/eks/latest/userguide/worker_node_IAM_role.html">node
            IAM role</a> permissions or lack of outbound internet access for the nodes. 
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Issue.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            The error message associated with the issue.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Issue.ResourceIds">
            <summary>
            Gets and sets the property ResourceIds. 
            <para>
            The Amazon Web Services resources that are afflicted by this issue.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.KubernetesNetworkConfigRequest">
            <summary>
            The Kubernetes network configuration for the cluster.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.KubernetesNetworkConfigRequest.ServiceIpv4Cidr">
            <summary>
            Gets and sets the property ServiceIpv4Cidr. 
            <para>
            The CIDR block to assign Kubernetes service IP addresses from. If you don't specify
            a block, Kubernetes assigns addresses from either the 10.100.0.0/16 or 172.20.0.0/16
            CIDR blocks. We recommend that you specify a block that does not overlap with resources
            in other networks that are peered or connected to your VPC. The block must meet the
            following requirements:
            </para>
             <ul> <li> 
            <para>
            Within one of the following private IP address blocks: 10.0.0.0/8, 172.16.0.0.0/12,
            or 192.168.0.0/16.
            </para>
             </li> <li> 
            <para>
            Doesn't overlap with any CIDR block assigned to the VPC that you selected for VPC.
            </para>
             </li> <li> 
            <para>
            Between /24 and /12.
            </para>
             </li> </ul> <important> 
            <para>
            You can only specify a custom CIDR block when you create a cluster and can't change
            this value once the cluster is created.
            </para>
             </important>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.KubernetesNetworkConfigResponse">
            <summary>
            The Kubernetes network configuration for the cluster.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.KubernetesNetworkConfigResponse.ServiceIpv4Cidr">
            <summary>
            Gets and sets the property ServiceIpv4Cidr. 
            <para>
            The CIDR block that Kubernetes service IP addresses are assigned from. If you didn't
            specify a CIDR block when you created the cluster, then Kubernetes assigns addresses
            from either the 10.100.0.0/16 or 172.20.0.0/16 CIDR blocks. If this was specified,
            then it was specified when the cluster was created and it cannot be changed.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.LaunchTemplateSpecification">
            <summary>
            An object representing a node group launch template specification. The launch template
            cannot include <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNetworkInterface.html">
            <code>SubnetId</code> </a>, <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_IamInstanceProfile.html">
            <code>IamInstanceProfile</code> </a>, <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RequestSpotInstances.html">
            <code>RequestSpotInstances</code> </a>, <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_HibernationOptionsRequest.html">
            <code>HibernationOptions</code> </a>, or <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_TerminateInstances.html">
            <code>TerminateInstances</code> </a>, or the node group deployment or update will
            fail. For more information about launch templates, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateLaunchTemplate.html">
            <code>CreateLaunchTemplate</code> </a> in the Amazon EC2 API Reference. For more information
            about using launch templates with Amazon EKS, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html">Launch
            template support</a> in the Amazon EKS User Guide.
            
             
            <para>
            Specify either <code>name</code> or <code>id</code>, but not both.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.LaunchTemplateSpecification.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            The ID of the launch template.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.LaunchTemplateSpecification.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the launch template.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.LaunchTemplateSpecification.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            The version of the launch template to use. If no version is specified, then the template's
            default version is used.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.ListAddonsRequest">
            <summary>
            Container for the parameters to the ListAddons operation.
            Lists the available add-ons.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ListAddonsRequest.ClusterName">
            <summary>
            Gets and sets the property ClusterName. 
            <para>
            The name of the cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ListAddonsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of add-on results returned by <code>ListAddonsRequest</code> in
            paginated output. When you use this parameter, <code>ListAddonsRequest</code> returns
            only <code>maxResults</code> results in a single page along with a <code>nextToken</code>
            response element. You can see the remaining results of the initial request by sending
            another <code>ListAddonsRequest</code> request with the returned <code>nextToken</code>
            value. This value can be between 1 and 100. If you don't use this parameter, <code>ListAddonsRequest</code>
            returns up to 100 results and a <code>nextToken</code> value, if applicable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ListAddonsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>nextToken</code> value returned from a previous paginated <code>ListAddonsRequest</code>
            where <code>maxResults</code> was used and the results exceeded the value of that
            parameter. Pagination continues from the end of the previous results that returned
            the <code>nextToken</code> value.
            </para>
             <note> 
            <para>
            This token should be treated as an opaque identifier that is used only to retrieve
            the next items in a list and not for other programmatic purposes.
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.ListAddonsResponse">
            <summary>
            This is the response object from the ListAddons operation.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ListAddonsResponse.Addons">
            <summary>
            Gets and sets the property Addons. 
            <para>
            A list of available add-ons.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ListAddonsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>nextToken</code> value returned from a previous paginated <code>ListAddonsResponse</code>
            where <code>maxResults</code> was used and the results exceeded the value of that
            parameter. Pagination continues from the end of the previous results that returned
            the <code>nextToken</code> value.
            </para>
             <note> 
            <para>
            This token should be treated as an opaque identifier that is used only to retrieve
            the next items in a list and not for other programmatic purposes.
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.ListClustersRequest">
            <summary>
            Container for the parameters to the ListClusters operation.
            Lists the Amazon EKS clusters in your Amazon Web Services account in the specified
            Region.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ListClustersRequest.Include">
            <summary>
            Gets and sets the property Include. 
            <para>
            Indicates whether connected clusters are included in the returned list. Default value
            is 'ALL'.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ListClustersRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of cluster results returned by <code>ListClusters</code> in paginated
            output. When you use this parameter, <code>ListClusters</code> returns only <code>maxResults</code>
            results in a single page along with a <code>nextToken</code> response element. You
            can see the remaining results of the initial request by sending another <code>ListClusters</code>
            request with the returned <code>nextToken</code> value. This value can be between
            1 and 100. If you don't use this parameter, <code>ListClusters</code> returns up to
            100 results and a <code>nextToken</code> value if applicable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ListClustersRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>nextToken</code> value returned from a previous paginated <code>ListClusters</code>
            request where <code>maxResults</code> was used and the results exceeded the value
            of that parameter. Pagination continues from the end of the previous results that
            returned the <code>nextToken</code> value.
            </para>
             <note> 
            <para>
            This token should be treated as an opaque identifier that is used only to retrieve
            the next items in a list and not for other programmatic purposes.
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.ListClustersResponse">
            <summary>
            This is the response object from the ListClusters operation.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ListClustersResponse.Clusters">
            <summary>
            Gets and sets the property Clusters. 
            <para>
            A list of all of the clusters for your account in the specified Region.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ListClustersResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>nextToken</code> value to include in a future <code>ListClusters</code>
            request. When the results of a <code>ListClusters</code> request exceed <code>maxResults</code>,
            you can use this value to retrieve the next page of results. This value is <code>null</code>
            when there are no more results to return.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.ListFargateProfilesRequest">
            <summary>
            Container for the parameters to the ListFargateProfiles operation.
            Lists the Fargate profiles associated with the specified cluster in your Amazon Web
            Services account in the specified Region.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ListFargateProfilesRequest.ClusterName">
            <summary>
            Gets and sets the property ClusterName. 
            <para>
            The name of the Amazon EKS cluster that you would like to list Fargate profiles in.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ListFargateProfilesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of Fargate profile results returned by <code>ListFargateProfiles</code>
            in paginated output. When you use this parameter, <code>ListFargateProfiles</code>
            returns only <code>maxResults</code> results in a single page along with a <code>nextToken</code>
            response element. You can see the remaining results of the initial request by sending
            another <code>ListFargateProfiles</code> request with the returned <code>nextToken</code>
            value. This value can be between 1 and 100. If you don't use this parameter, <code>ListFargateProfiles</code>
            returns up to 100 results and a <code>nextToken</code> value if applicable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ListFargateProfilesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>nextToken</code> value returned from a previous paginated <code>ListFargateProfiles</code>
            request where <code>maxResults</code> was used and the results exceeded the value
            of that parameter. Pagination continues from the end of the previous results that
            returned the <code>nextToken</code> value.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.ListFargateProfilesResponse">
            <summary>
            This is the response object from the ListFargateProfiles operation.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ListFargateProfilesResponse.FargateProfileNames">
            <summary>
            Gets and sets the property FargateProfileNames. 
            <para>
            A list of all of the Fargate profiles associated with the specified cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ListFargateProfilesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>nextToken</code> value to include in a future <code>ListFargateProfiles</code>
            request. When the results of a <code>ListFargateProfiles</code> request exceed <code>maxResults</code>,
            you can use this value to retrieve the next page of results. This value is <code>null</code>
            when there are no more results to return.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.ListIdentityProviderConfigsRequest">
            <summary>
            Container for the parameters to the ListIdentityProviderConfigs operation.
            A list of identity provider configurations.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ListIdentityProviderConfigsRequest.ClusterName">
            <summary>
            Gets and sets the property ClusterName. 
            <para>
            The cluster name that you want to list identity provider configurations for.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ListIdentityProviderConfigsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of identity provider configurations returned by <code>ListIdentityProviderConfigs</code>
            in paginated output. When you use this parameter, <code>ListIdentityProviderConfigs</code>
            returns only <code>maxResults</code> results in a single page along with a <code>nextToken</code>
            response element. You can see the remaining results of the initial request by sending
            another <code>ListIdentityProviderConfigs</code> request with the returned <code>nextToken</code>
            value. This value can be between 1 and 100. If you don't use this parameter, <code>ListIdentityProviderConfigs</code>
            returns up to 100 results and a <code>nextToken</code> value, if applicable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ListIdentityProviderConfigsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>nextToken</code> value returned from a previous paginated <code>IdentityProviderConfigsRequest</code>
            where <code>maxResults</code> was used and the results exceeded the value of that
            parameter. Pagination continues from the end of the previous results that returned
            the <code>nextToken</code> value.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.ListIdentityProviderConfigsResponse">
            <summary>
            This is the response object from the ListIdentityProviderConfigs operation.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ListIdentityProviderConfigsResponse.IdentityProviderConfigs">
            <summary>
            Gets and sets the property IdentityProviderConfigs. 
            <para>
            The identity provider configurations for the cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ListIdentityProviderConfigsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>nextToken</code> value returned from a previous paginated <code>ListIdentityProviderConfigsResponse</code>
            where <code>maxResults</code> was used and the results exceeded the value of that
            parameter. Pagination continues from the end of the previous results that returned
            the <code>nextToken</code> value.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.ListNodegroupsRequest">
            <summary>
            Container for the parameters to the ListNodegroups operation.
            Lists the Amazon EKS managed node groups associated with the specified cluster in
            your Amazon Web Services account in the specified Region. Self-managed node groups
            are not listed.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ListNodegroupsRequest.ClusterName">
            <summary>
            Gets and sets the property ClusterName. 
            <para>
            The name of the Amazon EKS cluster that you would like to list node groups in.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ListNodegroupsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of node group results returned by <code>ListNodegroups</code> in
            paginated output. When you use this parameter, <code>ListNodegroups</code> returns
            only <code>maxResults</code> results in a single page along with a <code>nextToken</code>
            response element. You can see the remaining results of the initial request by sending
            another <code>ListNodegroups</code> request with the returned <code>nextToken</code>
            value. This value can be between 1 and 100. If you don't use this parameter, <code>ListNodegroups</code>
            returns up to 100 results and a <code>nextToken</code> value if applicable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ListNodegroupsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>nextToken</code> value returned from a previous paginated <code>ListNodegroups</code>
            request where <code>maxResults</code> was used and the results exceeded the value
            of that parameter. Pagination continues from the end of the previous results that
            returned the <code>nextToken</code> value.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.ListNodegroupsResponse">
            <summary>
            This is the response object from the ListNodegroups operation.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ListNodegroupsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>nextToken</code> value to include in a future <code>ListNodegroups</code>
            request. When the results of a <code>ListNodegroups</code> request exceed <code>maxResults</code>,
            you can use this value to retrieve the next page of results. This value is <code>null</code>
            when there are no more results to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ListNodegroupsResponse.Nodegroups">
            <summary>
            Gets and sets the property Nodegroups. 
            <para>
            A list of all of the node groups associated with the specified cluster.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.ListTagsForResourceRequest">
            <summary>
            Container for the parameters to the ListTagsForResource operation.
            List the tags for an Amazon EKS resource.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ListTagsForResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The Amazon Resource Name (ARN) that identifies the resource for which to list the
            tags. Currently, the supported resources are Amazon EKS clusters and managed node
            groups.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.ListTagsForResourceResponse">
            <summary>
            This is the response object from the ListTagsForResource operation.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ListTagsForResourceResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags for the resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.ListUpdatesRequest">
            <summary>
            Container for the parameters to the ListUpdates operation.
            Lists the updates associated with an Amazon EKS cluster or managed node group in your
            Amazon Web Services account, in the specified Region.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ListUpdatesRequest.AddonName">
            <summary>
            Gets and sets the property AddonName. 
            <para>
            The names of the installed add-ons that have available updates.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ListUpdatesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of update results returned by <code>ListUpdates</code> in paginated
            output. When you use this parameter, <code>ListUpdates</code> returns only <code>maxResults</code>
            results in a single page along with a <code>nextToken</code> response element. You
            can see the remaining results of the initial request by sending another <code>ListUpdates</code>
            request with the returned <code>nextToken</code> value. This value can be between
            1 and 100. If you don't use this parameter, <code>ListUpdates</code> returns up to
            100 results and a <code>nextToken</code> value if applicable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ListUpdatesRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the Amazon EKS cluster to list updates for.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ListUpdatesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>nextToken</code> value returned from a previous paginated <code>ListUpdates</code>
            request where <code>maxResults</code> was used and the results exceeded the value
            of that parameter. Pagination continues from the end of the previous results that
            returned the <code>nextToken</code> value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ListUpdatesRequest.NodegroupName">
            <summary>
            Gets and sets the property NodegroupName. 
            <para>
            The name of the Amazon EKS managed node group to list updates for.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.ListUpdatesResponse">
            <summary>
            This is the response object from the ListUpdates operation.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ListUpdatesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>nextToken</code> value to include in a future <code>ListUpdates</code> request.
            When the results of a <code>ListUpdates</code> request exceed <code>maxResults</code>,
            you can use this value to retrieve the next page of results. This value is <code>null</code>
            when there are no more results to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ListUpdatesResponse.UpdateIds">
            <summary>
            Gets and sets the property UpdateIds. 
            <para>
            A list of all the updates for the specified cluster and Region.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.Logging">
            <summary>
            An object representing the logging configuration for resources in your cluster.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Logging.ClusterLogging">
            <summary>
            Gets and sets the property ClusterLogging. 
            <para>
            The cluster control plane logging configuration for your cluster.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.LogSetup">
            <summary>
            An object representing the enabled or disabled Kubernetes control plane logs for your
            cluster.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.LogSetup.Enabled">
            <summary>
            Gets and sets the property Enabled. 
            <para>
            If a log type is enabled, that log type exports its control plane logs to CloudWatch
            Logs. If a log type isn't enabled, that log type doesn't export its control plane
            logs. Each individual log type can be enabled or disabled independently.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.LogSetup.Types">
            <summary>
            Gets and sets the property Types. 
            <para>
            The available cluster control plane log types.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.Nodegroup">
            <summary>
            An object representing an Amazon EKS managed node group.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Nodegroup.AmiType">
            <summary>
            Gets and sets the property AmiType. 
            <para>
            If the node group was deployed using a launch template with a custom AMI, then this
            is <code>CUSTOM</code>. For node groups that weren't deployed using a launch template,
            this is the AMI type that was specified in the node group configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Nodegroup.CapacityType">
            <summary>
            Gets and sets the property CapacityType. 
            <para>
            The capacity type of your managed node group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Nodegroup.ClusterName">
            <summary>
            Gets and sets the property ClusterName. 
            <para>
            The name of the cluster that the managed node group resides in.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Nodegroup.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The Unix epoch timestamp in seconds for when the managed node group was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Nodegroup.DiskSize">
            <summary>
            Gets and sets the property DiskSize. 
            <para>
            If the node group wasn't deployed with a launch template, then this is the disk size
            in the node group configuration. If the node group was deployed with a launch template,
            then this is <code>null</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Nodegroup.Health">
            <summary>
            Gets and sets the property Health. 
            <para>
            The health status of the node group. If there are issues with your node group's health,
            they are listed here.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Nodegroup.InstanceTypes">
            <summary>
            Gets and sets the property InstanceTypes. 
            <para>
            If the node group wasn't deployed with a launch template, then this is the instance
            type that is associated with the node group. If the node group was deployed with a
            launch template, then this is <code>null</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Nodegroup.Labels">
            <summary>
            Gets and sets the property Labels. 
            <para>
            The Kubernetes labels applied to the nodes in the node group.
            </para>
             <note> 
            <para>
            Only labels that are applied with the Amazon EKS API are shown here. There may be
            other Kubernetes labels applied to the nodes in this group.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Nodegroup.LaunchTemplate">
            <summary>
            Gets and sets the property LaunchTemplate. 
            <para>
            If a launch template was used to create the node group, then this is the launch template
            that was used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Nodegroup.ModifiedAt">
            <summary>
            Gets and sets the property ModifiedAt. 
            <para>
            The Unix epoch timestamp in seconds for when the managed node group was last modified.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Nodegroup.NodegroupArn">
            <summary>
            Gets and sets the property NodegroupArn. 
            <para>
            The Amazon Resource Name (ARN) associated with the managed node group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Nodegroup.NodegroupName">
            <summary>
            Gets and sets the property NodegroupName. 
            <para>
            The name associated with an Amazon EKS managed node group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Nodegroup.NodeRole">
            <summary>
            Gets and sets the property NodeRole. 
            <para>
            The IAM role associated with your node group. The Amazon EKS node <code>kubelet</code>
            daemon makes calls to Amazon Web Services APIs on your behalf. Nodes receive permissions
            for these API calls through an IAM instance profile and associated policies.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Nodegroup.ReleaseVersion">
            <summary>
            Gets and sets the property ReleaseVersion. 
            <para>
            If the node group was deployed using a launch template with a custom AMI, then this
            is the AMI ID that was specified in the launch template. For node groups that weren't
            deployed using a launch template, this is the version of the Amazon EKS optimized
            AMI that the node group was deployed with.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Nodegroup.RemoteAccess">
            <summary>
            Gets and sets the property RemoteAccess. 
            <para>
            If the node group wasn't deployed with a launch template, then this is the remote
            access configuration that is associated with the node group. If the node group was
            deployed with a launch template, then this is <code>null</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Nodegroup.Resources">
            <summary>
            Gets and sets the property Resources. 
            <para>
            The resources associated with the node group, such as Auto Scaling groups and security
            groups for remote access.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Nodegroup.ScalingConfig">
            <summary>
            Gets and sets the property ScalingConfig. 
            <para>
            The scaling configuration details for the Auto Scaling group that is associated with
            your node group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Nodegroup.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The current status of the managed node group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Nodegroup.Subnets">
            <summary>
            Gets and sets the property Subnets. 
            <para>
            The subnets that were specified for the Auto Scaling group that is associated with
            your node group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Nodegroup.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The metadata applied to the node group to assist with categorization and organization.
            Each tag consists of a key and an optional value, both of which you define. Node group
            tags do not propagate to any other resources associated with the node group, such
            as the Amazon EC2 instances or subnets. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Nodegroup.Taints">
            <summary>
            Gets and sets the property Taints. 
            <para>
            The Kubernetes taints to be applied to the nodes in the node group when they are created.
            Effect is one of <code>No_Schedule</code>, <code>Prefer_No_Schedule</code>, or <code>No_Execute</code>.
            Kubernetes taints can be used together with tolerations to control how workloads are
            scheduled to your nodes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Nodegroup.UpdateConfig">
            <summary>
            Gets and sets the property UpdateConfig. 
            <para>
            The node group update configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Nodegroup.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            The Kubernetes version of the managed node group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.NodegroupHealth">
            <summary>
            An object representing the health status of the node group.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.NodegroupHealth.Issues">
            <summary>
            Gets and sets the property Issues. 
            <para>
            Any issues that are associated with the node group. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.NodegroupResources">
            <summary>
            An object representing the resources associated with the node group, such as Auto
            Scaling groups and security groups for remote access.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.NodegroupResources.AutoScalingGroups">
            <summary>
            Gets and sets the property AutoScalingGroups. 
            <para>
            The Auto Scaling groups associated with the node group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.NodegroupResources.RemoteAccessSecurityGroup">
            <summary>
            Gets and sets the property RemoteAccessSecurityGroup. 
            <para>
            The remote access security group associated with the node group. This security group
            controls SSH access to the nodes.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.NodegroupScalingConfig">
            <summary>
            An object representing the scaling configuration details for the Auto Scaling group
            that is associated with your node group. When creating a node group, you must specify
            all or none of the properties. When updating a node group, you can specify any or
            none of the properties.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.NodegroupScalingConfig.DesiredSize">
            <summary>
            Gets and sets the property DesiredSize. 
            <para>
            The current number of nodes that the managed node group should maintain.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.NodegroupScalingConfig.MaxSize">
            <summary>
            Gets and sets the property MaxSize. 
            <para>
            The maximum number of nodes that the managed node group can scale out to. For information
            about the maximum number that you can specify, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/service-quotas.html">Amazon
            EKS service quotas</a> in the <i>Amazon EKS User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.NodegroupScalingConfig.MinSize">
            <summary>
            Gets and sets the property MinSize. 
            <para>
            The minimum number of nodes that the managed node group can scale in to.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.NodegroupUpdateConfig">
            <summary>
            The node group update configuration.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.NodegroupUpdateConfig.MaxUnavailable">
            <summary>
            Gets and sets the property MaxUnavailable. 
            <para>
            The maximum number of nodes unavailable at once during a version update. Nodes will
            be updated in parallel. This value or <code>maxUnavailablePercentage</code> is required
            to have a value.The maximum number is 100.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.NodegroupUpdateConfig.MaxUnavailablePercentage">
            <summary>
            Gets and sets the property MaxUnavailablePercentage. 
            <para>
            The maximum percentage of nodes unavailable during a version update. This percentage
            of nodes will be updated in parallel, up to 100 nodes at once. This value or <code>maxUnavailable</code>
            is required to have a value.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.NotFoundException">
            <summary>
            A service resource associated with the request could not be found. Clients should
            not retry such requests.
            </summary>
        </member>
        <member name="M:Amazon.EKS.Model.NotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new NotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.EKS.Model.NotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of NotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EKS.Model.NotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of NotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EKS.Model.NotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of NotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.EKS.Model.NotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of NotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.EKS.Model.NotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the NotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.EKS.Model.NotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.EKS.Model.OIDC">
            <summary>
            An object representing the <a href="https://openid.net/connect/">OpenID Connect</a>
            (OIDC) identity provider information for the cluster.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.OIDC.Issuer">
            <summary>
            Gets and sets the property Issuer. 
            <para>
            The issuer URL for the OIDC identity provider.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.OidcIdentityProviderConfig">
            <summary>
            An object that represents the configuration for an OpenID Connect (OIDC) identity
            provider.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.OidcIdentityProviderConfig.ClientId">
            <summary>
            Gets and sets the property ClientId. 
            <para>
            This is also known as <i>audience</i>. The ID of the client application that makes
            authentication requests to the OIDC identity provider.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.OidcIdentityProviderConfig.ClusterName">
            <summary>
            Gets and sets the property ClusterName. 
            <para>
            The cluster that the configuration is associated to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.OidcIdentityProviderConfig.GroupsClaim">
            <summary>
            Gets and sets the property GroupsClaim. 
            <para>
            The JSON web token (JWT) claim that the provider uses to return your groups.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.OidcIdentityProviderConfig.GroupsPrefix">
            <summary>
            Gets and sets the property GroupsPrefix. 
            <para>
            The prefix that is prepended to group claims to prevent clashes with existing names
            (such as <code>system:</code> groups). For example, the value<code> oidc:</code> creates
            group names like <code>oidc:engineering</code> and <code>oidc:infra</code>. The prefix
            can't contain <code>system:</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.OidcIdentityProviderConfig.IdentityProviderConfigArn">
            <summary>
            Gets and sets the property IdentityProviderConfigArn. 
            <para>
            The ARN of the configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.OidcIdentityProviderConfig.IdentityProviderConfigName">
            <summary>
            Gets and sets the property IdentityProviderConfigName. 
            <para>
            The name of the configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.OidcIdentityProviderConfig.IssuerUrl">
            <summary>
            Gets and sets the property IssuerUrl. 
            <para>
            The URL of the OIDC identity provider that allows the API server to discover public
            signing keys for verifying tokens.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.OidcIdentityProviderConfig.RequiredClaims">
            <summary>
            Gets and sets the property RequiredClaims. 
            <para>
            The key-value pairs that describe required claims in the identity token. If set, each
            claim is verified to be present in the token with a matching value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.OidcIdentityProviderConfig.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the OIDC identity provider.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.OidcIdentityProviderConfig.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The metadata to apply to the provider configuration to assist with categorization
            and organization. Each tag consists of a key and an optional value, both of which
            you defined.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.OidcIdentityProviderConfig.UsernameClaim">
            <summary>
            Gets and sets the property UsernameClaim. 
            <para>
            The JSON Web token (JWT) claim that is used as the username.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.OidcIdentityProviderConfig.UsernamePrefix">
            <summary>
            Gets and sets the property UsernamePrefix. 
            <para>
            The prefix that is prepended to username claims to prevent clashes with existing names.
            The prefix can't contain <code>system:</code> 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.OidcIdentityProviderConfigRequest">
            <summary>
            An object representing an OpenID Connect (OIDC) configuration. Before associating
            an OIDC identity provider to your cluster, review the considerations in <a href="https://docs.aws.amazon.com/eks/latest/userguide/authenticate-oidc-identity-provider.html">Authenticating
            users for your cluster from an OpenID Connect identity provider</a> in the <i>Amazon
            EKS User Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.OidcIdentityProviderConfigRequest.ClientId">
            <summary>
            Gets and sets the property ClientId. 
            <para>
            This is also known as <i>audience</i>. The ID for the client application that makes
            authentication requests to the OpenID identity provider.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.OidcIdentityProviderConfigRequest.GroupsClaim">
            <summary>
            Gets and sets the property GroupsClaim. 
            <para>
            The JWT claim that the provider uses to return your groups.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.OidcIdentityProviderConfigRequest.GroupsPrefix">
            <summary>
            Gets and sets the property GroupsPrefix. 
            <para>
            The prefix that is prepended to group claims to prevent clashes with existing names
            (such as <code>system:</code> groups). For example, the value<code> oidc:</code> will
            create group names like <code>oidc:engineering</code> and <code>oidc:infra</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.OidcIdentityProviderConfigRequest.IdentityProviderConfigName">
            <summary>
            Gets and sets the property IdentityProviderConfigName. 
            <para>
            The name of the OIDC provider configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.OidcIdentityProviderConfigRequest.IssuerUrl">
            <summary>
            Gets and sets the property IssuerUrl. 
            <para>
            The URL of the OpenID identity provider that allows the API server to discover public
            signing keys for verifying tokens. The URL must begin with <code>https://</code> and
            should correspond to the <code>iss</code> claim in the provider's OIDC ID tokens.
            Per the OIDC standard, path components are allowed but query parameters are not. Typically
            the URL consists of only a hostname, like <code>https://server.example.org</code>
            or <code>https://example.com</code>. This URL should point to the level below <code>.well-known/openid-configuration</code>
            and must be publicly accessible over the internet.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.OidcIdentityProviderConfigRequest.RequiredClaims">
            <summary>
            Gets and sets the property RequiredClaims. 
            <para>
            The key value pairs that describe required claims in the identity token. If set, each
            claim is verified to be present in the token with a matching value. For the maximum
            number of claims that you can require, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/service-quotas.html">Amazon
            EKS service quotas</a> in the <i>Amazon EKS User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.OidcIdentityProviderConfigRequest.UsernameClaim">
            <summary>
            Gets and sets the property UsernameClaim. 
            <para>
            The JSON Web Token (JWT) claim to use as the username. The default is <code>sub</code>,
            which is expected to be a unique identifier of the end user. You can choose other
            claims, such as <code>email</code> or <code>name</code>, depending on the OpenID identity
            provider. Claims other than <code>email</code> are prefixed with the issuer URL to
            prevent naming clashes with other plug-ins.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.OidcIdentityProviderConfigRequest.UsernamePrefix">
            <summary>
            Gets and sets the property UsernamePrefix. 
            <para>
            The prefix that is prepended to username claims to prevent clashes with existing names.
            If you do not provide this field, and <code>username</code> is a value other than
            <code>email</code>, the prefix defaults to <code>issuerurl#</code>. You can use the
            value <code>-</code> to disable all prefixing.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.Provider">
            <summary>
            Identifies the Key Management Service (KMS) key used to encrypt the secrets.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Provider.KeyArn">
            <summary>
            Gets and sets the property KeyArn. 
            <para>
            Amazon Resource Name (ARN) or alias of the KMS key. The KMS key must be symmetric,
            created in the same region as the cluster, and if the KMS key was created in a different
            account, the user must have access to the KMS key. For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-modifying-external-accounts.html">Allowing
            Users in Other Accounts to Use a KMS key</a> in the <i>Key Management Service Developer
            Guide</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.RegisterClusterRequest">
            <summary>
            Container for the parameters to the RegisterCluster operation.
            Connects a Kubernetes cluster to the Amazon EKS control plane. 
            
             
            <para>
            Any Kubernetes cluster can be connected to the Amazon EKS control plane to view current
            information about the cluster and its nodes. 
            </para>
             
            <para>
            Cluster connection requires two steps. First, send a <code> <a>RegisterClusterRequest</a>
            </code> to add it to the Amazon EKS control plane.
            </para>
             
            <para>
            Second, a <a href="https://amazon-eks.s3.us-west-2.amazonaws.com/eks-connector/manifests/eks-connector/latest/eks-connector.yaml">Manifest</a>
            containing the <code>activationID</code> and <code>activationCode</code> must be applied
            to the Kubernetes cluster through it's native provider to provide visibility.
            </para>
             
            <para>
            After the Manifest is updated and applied, then the connected cluster is visible to
            the Amazon EKS control plane. If the Manifest is not applied within a set amount of
            time, then the connected cluster will no longer be visible and must be deregistered.
            See <a>DeregisterCluster</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.RegisterClusterRequest.ClientRequestToken">
            <summary>
            Gets and sets the property ClientRequestToken. 
            <para>
            Unique, case-sensitive identifier that you provide to ensure the idempotency of the
            request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.RegisterClusterRequest.ConnectorConfig">
            <summary>
            Gets and sets the property ConnectorConfig. 
            <para>
            The configuration settings required to connect the Kubernetes cluster to the Amazon
            EKS control plane.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.RegisterClusterRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            Define a unique name for this cluster within your AWS account.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.RegisterClusterResponse">
            <summary>
            This is the response object from the RegisterCluster operation.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.RegisterClusterResponse.Cluster">
            <summary>
            Gets and sets the property Cluster.
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.RemoteAccessConfig">
            <summary>
            An object representing the remote access configuration for the managed node group.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.RemoteAccessConfig.Ec2SshKey">
            <summary>
            Gets and sets the property Ec2SshKey. 
            <para>
            The Amazon EC2 SSH key that provides access for SSH communication with the nodes in
            the managed node group. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html">Amazon
            EC2 key pairs and Linux instances</a> in the <i>Amazon Elastic Compute Cloud User
            Guide for Linux Instances</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.RemoteAccessConfig.SourceSecurityGroups">
            <summary>
            Gets and sets the property SourceSecurityGroups. 
            <para>
            The security groups that are allowed SSH access (port 22) to the nodes. If you specify
            an Amazon EC2 SSH key but do not specify a source security group when you create a
            managed node group, then port 22 on the nodes is opened to the internet (0.0.0.0/0).
            For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html">Security
            Groups for Your VPC</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.ResourceInUseException">
            <summary>
            The specified resource is in use.
            </summary>
        </member>
        <member name="M:Amazon.EKS.Model.ResourceInUseException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceInUseException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.EKS.Model.ResourceInUseException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceInUseException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EKS.Model.ResourceInUseException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceInUseException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EKS.Model.ResourceInUseException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceInUseException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.EKS.Model.ResourceInUseException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceInUseException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.EKS.Model.ResourceInUseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ResourceInUseException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.EKS.Model.ResourceInUseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="P:Amazon.EKS.Model.ResourceInUseException.AddonName">
            <summary>
            Gets and sets the property AddonName.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ResourceInUseException.ClusterName">
            <summary>
            Gets and sets the property ClusterName. 
            <para>
            The Amazon EKS cluster associated with the exception.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ResourceInUseException.NodegroupName">
            <summary>
            Gets and sets the property NodegroupName. 
            <para>
            The Amazon EKS managed node group associated with the exception.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.ResourceLimitExceededException">
            <summary>
            You have encountered a service limit on the specified resource.
            </summary>
        </member>
        <member name="M:Amazon.EKS.Model.ResourceLimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceLimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.EKS.Model.ResourceLimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EKS.Model.ResourceLimitExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceLimitExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EKS.Model.ResourceLimitExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.EKS.Model.ResourceLimitExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.EKS.Model.ResourceLimitExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ResourceLimitExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.EKS.Model.ResourceLimitExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="P:Amazon.EKS.Model.ResourceLimitExceededException.ClusterName">
            <summary>
            Gets and sets the property ClusterName. 
            <para>
            The Amazon EKS cluster associated with the exception.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ResourceLimitExceededException.NodegroupName">
            <summary>
            Gets and sets the property NodegroupName. 
            <para>
            The Amazon EKS managed node group associated with the exception.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.ResourceNotFoundException">
            <summary>
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </summary>
        </member>
        <member name="M:Amazon.EKS.Model.ResourceNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.EKS.Model.ResourceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EKS.Model.ResourceNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EKS.Model.ResourceNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.EKS.Model.ResourceNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.EKS.Model.ResourceNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ResourceNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.EKS.Model.ResourceNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="P:Amazon.EKS.Model.ResourceNotFoundException.AddonName">
            <summary>
            Gets and sets the property AddonName.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ResourceNotFoundException.ClusterName">
            <summary>
            Gets and sets the property ClusterName. 
            <para>
            The Amazon EKS cluster associated with the exception.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ResourceNotFoundException.FargateProfileName">
            <summary>
            Gets and sets the property FargateProfileName. 
            <para>
            The Fargate profile associated with the exception.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ResourceNotFoundException.NodegroupName">
            <summary>
            Gets and sets the property NodegroupName. 
            <para>
            The Amazon EKS managed node group associated with the exception.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.ServerException">
            <summary>
            These errors are usually caused by a server-side issue.
            </summary>
        </member>
        <member name="M:Amazon.EKS.Model.ServerException.#ctor(System.String)">
            <summary>
            Constructs a new ServerException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.EKS.Model.ServerException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ServerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EKS.Model.ServerException.#ctor(System.Exception)">
            <summary>
            Construct instance of ServerException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EKS.Model.ServerException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.EKS.Model.ServerException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServerException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.EKS.Model.ServerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ServerException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.EKS.Model.ServerException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="P:Amazon.EKS.Model.ServerException.AddonName">
            <summary>
            Gets and sets the property AddonName.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ServerException.ClusterName">
            <summary>
            Gets and sets the property ClusterName. 
            <para>
            The Amazon EKS cluster associated with the exception.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ServerException.NodegroupName">
            <summary>
            Gets and sets the property NodegroupName. 
            <para>
            The Amazon EKS managed node group associated with the exception.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.ServiceUnavailableException">
            <summary>
            The service is unavailable. Back off and retry the operation.
            </summary>
        </member>
        <member name="M:Amazon.EKS.Model.ServiceUnavailableException.#ctor(System.String)">
            <summary>
            Constructs a new ServiceUnavailableException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.EKS.Model.ServiceUnavailableException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ServiceUnavailableException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EKS.Model.ServiceUnavailableException.#ctor(System.Exception)">
            <summary>
            Construct instance of ServiceUnavailableException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EKS.Model.ServiceUnavailableException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceUnavailableException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.EKS.Model.ServiceUnavailableException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceUnavailableException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.EKS.Model.ServiceUnavailableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ServiceUnavailableException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.EKS.Model.ServiceUnavailableException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.EKS.Model.TagResourceRequest">
            <summary>
            Container for the parameters to the TagResource operation.
            Associates the specified tags to a resource with the specified <code>resourceArn</code>.
            If existing tags on a resource are not specified in the request parameters, they are
            not changed. When a resource is deleted, the tags associated with that resource are
            deleted as well. Tags that you create for Amazon EKS resources do not propagate to
            any other resources associated with the cluster. For example, if you tag a cluster
            with this operation, that tag does not automatically propagate to the subnets and
            nodes associated with the cluster.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.TagResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The Amazon Resource Name (ARN) of the resource to which to add tags. Currently, the
            supported resources are Amazon EKS clusters and managed node groups.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.TagResourceRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags to add to the resource. A tag is an array of key-value pairs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.TagResourceResponse">
            <summary>
            This is the response object from the TagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.Taint">
            <summary>
            A property that allows a node to repel a set of pods.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Taint.Effect">
            <summary>
            Gets and sets the property Effect. 
            <para>
            The effect of the taint.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Taint.Key">
            <summary>
            Gets and sets the property Key. 
            <para>
            The key of the taint.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Taint.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The value of the taint.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.UnsupportedAvailabilityZoneException">
            <summary>
            At least one of your specified cluster subnets is in an Availability Zone that does
            not support Amazon EKS. The exception output specifies the supported Availability
            Zones for your account, from which you can choose subnets for your cluster.
            </summary>
        </member>
        <member name="M:Amazon.EKS.Model.UnsupportedAvailabilityZoneException.#ctor(System.String)">
            <summary>
            Constructs a new UnsupportedAvailabilityZoneException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.EKS.Model.UnsupportedAvailabilityZoneException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of UnsupportedAvailabilityZoneException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EKS.Model.UnsupportedAvailabilityZoneException.#ctor(System.Exception)">
            <summary>
            Construct instance of UnsupportedAvailabilityZoneException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EKS.Model.UnsupportedAvailabilityZoneException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UnsupportedAvailabilityZoneException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.EKS.Model.UnsupportedAvailabilityZoneException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UnsupportedAvailabilityZoneException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.EKS.Model.UnsupportedAvailabilityZoneException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the UnsupportedAvailabilityZoneException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.EKS.Model.UnsupportedAvailabilityZoneException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="P:Amazon.EKS.Model.UnsupportedAvailabilityZoneException.ClusterName">
            <summary>
            Gets and sets the property ClusterName. 
            <para>
            The Amazon EKS cluster associated with the exception.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.UnsupportedAvailabilityZoneException.NodegroupName">
            <summary>
            Gets and sets the property NodegroupName. 
            <para>
            The Amazon EKS managed node group associated with the exception.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.UnsupportedAvailabilityZoneException.ValidZones">
            <summary>
            Gets and sets the property ValidZones. 
            <para>
            The supported Availability Zones for your account. Choose subnets in these Availability
            Zones for your cluster.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.UntagResourceRequest">
            <summary>
            Container for the parameters to the UntagResource operation.
            Deletes specified tags from a resource.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.UntagResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The Amazon Resource Name (ARN) of the resource from which to delete tags. Currently,
            the supported resources are Amazon EKS clusters and managed node groups.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.UntagResourceRequest.TagKeys">
            <summary>
            Gets and sets the property TagKeys. 
            <para>
            The keys of the tags to be removed.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.UntagResourceResponse">
            <summary>
            This is the response object from the UntagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.Update">
            <summary>
            An object representing an asynchronous update.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Update.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The Unix epoch timestamp in seconds for when the update was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Update.Errors">
            <summary>
            Gets and sets the property Errors. 
            <para>
            Any errors associated with a <code>Failed</code> update.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Update.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            A UUID that is used to track the update.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Update.Params">
            <summary>
            Gets and sets the property Params. 
            <para>
            A key-value map that contains the parameters associated with the update.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Update.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The current status of the update.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Update.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of the update.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.UpdateAddonRequest">
            <summary>
            Container for the parameters to the UpdateAddon operation.
            Updates an Amazon EKS add-on.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.UpdateAddonRequest.AddonName">
            <summary>
            Gets and sets the property AddonName. 
            <para>
            The name of the add-on. The name must match one of the names returned by <a href="https://docs.aws.amazon.com/eks/latest/APIReference/API_ListAddons.html">
            <code>ListAddons</code> </a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.UpdateAddonRequest.AddonVersion">
            <summary>
            Gets and sets the property AddonVersion. 
            <para>
            The version of the add-on. The version must match one of the versions returned by
            <a href="https://docs.aws.amazon.com/eks/latest/APIReference/API_DescribeAddonVersions.html">
            <code>DescribeAddonVersions</code> </a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.UpdateAddonRequest.ClientRequestToken">
            <summary>
            Gets and sets the property ClientRequestToken. 
            <para>
            Unique, case-sensitive identifier that you provide to ensure the idempotency of the
            request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.UpdateAddonRequest.ClusterName">
            <summary>
            Gets and sets the property ClusterName. 
            <para>
            The name of the cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.UpdateAddonRequest.ResolveConflicts">
            <summary>
            Gets and sets the property ResolveConflicts. 
            <para>
            How to resolve parameter value conflicts when applying the new version of the add-on
            to the cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.UpdateAddonRequest.ServiceAccountRoleArn">
            <summary>
            Gets and sets the property ServiceAccountRoleArn. 
            <para>
            The Amazon Resource Name (ARN) of an existing IAM role to bind to the add-on's service
            account. The role must be assigned the IAM permissions required by the add-on. If
            you don't specify an existing IAM role, then the add-on uses the permissions assigned
            to the node IAM role. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/create-node-role.html">Amazon
            EKS node IAM role</a> in the <i>Amazon EKS User Guide</i>.
            </para>
             <note> 
            <para>
            To specify an existing IAM role, you must have an IAM OpenID Connect (OIDC) provider
            created for your cluster. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/enable-iam-roles-for-service-accounts.html">Enabling
            IAM roles for service accounts on your cluster</a> in the <i>Amazon EKS User Guide</i>.
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.UpdateAddonResponse">
            <summary>
            This is the response object from the UpdateAddon operation.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.UpdateAddonResponse.Update">
            <summary>
            Gets and sets the property Update.
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.UpdateClusterConfigRequest">
            <summary>
            Container for the parameters to the UpdateClusterConfig operation.
            Updates an Amazon EKS cluster configuration. Your cluster continues to function during
            the update. The response output includes an update ID that you can use to track the
            status of your cluster update with the <a>DescribeUpdate</a> API operation.
            
             
            <para>
            You can use this API operation to enable or disable exporting the Kubernetes control
            plane logs for your cluster to CloudWatch Logs. By default, cluster control plane
            logs aren't exported to CloudWatch Logs. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html">Amazon
            EKS Cluster Control Plane Logs</a> in the <i> <i>Amazon EKS User Guide</i> </i>.
            </para>
             <note> 
            <para>
            CloudWatch Logs ingestion, archive storage, and data scanning rates apply to exported
            control plane logs. For more information, see <a href="http://aws.amazon.com/cloudwatch/pricing/">CloudWatch
            Pricing</a>.
            </para>
             </note> 
            <para>
            You can also use this API operation to enable or disable public and private access
            to your cluster's Kubernetes API server endpoint. By default, public access is enabled,
            and private access is disabled. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html">Amazon
            EKS cluster endpoint access control</a> in the <i> <i>Amazon EKS User Guide</i> </i>.
            
            </para>
             <important> 
            <para>
            You can't update the subnets or security group IDs for an existing cluster.
            </para>
             </important> 
            <para>
            Cluster updates are asynchronous, and they should finish within a few minutes. During
            an update, the cluster status moves to <code>UPDATING</code> (this status transition
            is eventually consistent). When the update is complete (either <code>Failed</code>
            or <code>Successful</code>), the cluster status moves to <code>Active</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.UpdateClusterConfigRequest.ClientRequestToken">
            <summary>
            Gets and sets the property ClientRequestToken. 
            <para>
            Unique, case-sensitive identifier that you provide to ensure the idempotency of the
            request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.UpdateClusterConfigRequest.Logging">
            <summary>
            Gets and sets the property Logging. 
            <para>
            Enable or disable exporting the Kubernetes control plane logs for your cluster to
            CloudWatch Logs. By default, cluster control plane logs aren't exported to CloudWatch
            Logs. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html">Amazon
            EKS cluster control plane logs</a> in the <i> <i>Amazon EKS User Guide</i> </i>.
            </para>
             <note> 
            <para>
            CloudWatch Logs ingestion, archive storage, and data scanning rates apply to exported
            control plane logs. For more information, see <a href="http://aws.amazon.com/cloudwatch/pricing/">CloudWatch
            Pricing</a>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.UpdateClusterConfigRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the Amazon EKS cluster to update.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.UpdateClusterConfigRequest.ResourcesVpcConfig">
            <summary>
            Gets and sets the property ResourcesVpcConfig.
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.UpdateClusterConfigResponse">
            <summary>
            This is the response object from the UpdateClusterConfig operation.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.UpdateClusterConfigResponse.Update">
            <summary>
            Gets and sets the property Update.
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.UpdateClusterVersionRequest">
            <summary>
            Container for the parameters to the UpdateClusterVersion operation.
            Updates an Amazon EKS cluster to the specified Kubernetes version. Your cluster continues
            to function during the update. The response output includes an update ID that you
            can use to track the status of your cluster update with the <a>DescribeUpdate</a>
            API operation.
            
             
            <para>
            Cluster updates are asynchronous, and they should finish within a few minutes. During
            an update, the cluster status moves to <code>UPDATING</code> (this status transition
            is eventually consistent). When the update is complete (either <code>Failed</code>
            or <code>Successful</code>), the cluster status moves to <code>Active</code>.
            </para>
             
            <para>
            If your cluster has managed node groups attached to it, all of your node groups’ Kubernetes
            versions must match the cluster’s Kubernetes version in order to update the cluster
            to a new Kubernetes version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.UpdateClusterVersionRequest.ClientRequestToken">
            <summary>
            Gets and sets the property ClientRequestToken. 
            <para>
            Unique, case-sensitive identifier that you provide to ensure the idempotency of the
            request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.UpdateClusterVersionRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the Amazon EKS cluster to update.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.UpdateClusterVersionRequest.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            The desired Kubernetes version following a successful update.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.UpdateClusterVersionResponse">
            <summary>
            This is the response object from the UpdateClusterVersion operation.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.UpdateClusterVersionResponse.Update">
            <summary>
            Gets and sets the property Update. 
            <para>
            The full description of the specified update
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.UpdateLabelsPayload">
            <summary>
            An object representing a Kubernetes label change for a managed node group.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.UpdateLabelsPayload.AddOrUpdateLabels">
            <summary>
            Gets and sets the property AddOrUpdateLabels. 
            <para>
            Kubernetes labels to be added or updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.UpdateLabelsPayload.RemoveLabels">
            <summary>
            Gets and sets the property RemoveLabels. 
            <para>
            Kubernetes labels to be removed.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.UpdateNodegroupConfigRequest">
            <summary>
            Container for the parameters to the UpdateNodegroupConfig operation.
            Updates an Amazon EKS managed node group configuration. Your node group continues
            to function during the update. The response output includes an update ID that you
            can use to track the status of your node group update with the <a>DescribeUpdate</a>
            API operation. Currently you can update the Kubernetes labels for a node group or
            the scaling configuration.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.UpdateNodegroupConfigRequest.ClientRequestToken">
            <summary>
            Gets and sets the property ClientRequestToken. 
            <para>
            Unique, case-sensitive identifier that you provide to ensure the idempotency of the
            request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.UpdateNodegroupConfigRequest.ClusterName">
            <summary>
            Gets and sets the property ClusterName. 
            <para>
            The name of the Amazon EKS cluster that the managed node group resides in.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.UpdateNodegroupConfigRequest.Labels">
            <summary>
            Gets and sets the property Labels. 
            <para>
            The Kubernetes labels to be applied to the nodes in the node group after the update.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.UpdateNodegroupConfigRequest.NodegroupName">
            <summary>
            Gets and sets the property NodegroupName. 
            <para>
            The name of the managed node group to update.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.UpdateNodegroupConfigRequest.ScalingConfig">
            <summary>
            Gets and sets the property ScalingConfig. 
            <para>
            The scaling configuration details for the Auto Scaling group after the update.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.UpdateNodegroupConfigRequest.Taints">
            <summary>
            Gets and sets the property Taints. 
            <para>
            The Kubernetes taints to be applied to the nodes in the node group after the update.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.UpdateNodegroupConfigRequest.UpdateConfig">
            <summary>
            Gets and sets the property UpdateConfig. 
            <para>
            The node group update configuration.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.UpdateNodegroupConfigResponse">
            <summary>
            This is the response object from the UpdateNodegroupConfig operation.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.UpdateNodegroupConfigResponse.Update">
            <summary>
            Gets and sets the property Update.
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.UpdateNodegroupVersionRequest">
            <summary>
            Container for the parameters to the UpdateNodegroupVersion operation.
            Updates the Kubernetes version or AMI version of an Amazon EKS managed node group.
            
             
            <para>
            You can update a node group using a launch template only if the node group was originally
            deployed with a launch template. If you need to update a custom AMI in a node group
            that was deployed with a launch template, then update your custom AMI, specify the
            new ID in a new version of the launch template, and then update the node group to
            the new version of the launch template.
            </para>
             
            <para>
            If you update without a launch template, then you can update to the latest available
            AMI version of a node group's current Kubernetes version by not specifying a Kubernetes
            version in the request. You can update to the latest AMI version of your cluster's
            current Kubernetes version by specifying your cluster's Kubernetes version in the
            request. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/eks-linux-ami-versions.html">Amazon
            EKS optimized Amazon Linux 2 AMI versions</a> in the <i>Amazon EKS User Guide</i>.
            </para>
             
            <para>
            You cannot roll back a node group to an earlier Kubernetes version or AMI version.
            </para>
             
            <para>
            When a node in a managed node group is terminated due to a scaling action or update,
            the pods in that node are drained first. Amazon EKS attempts to drain the nodes gracefully
            and will fail if it is unable to do so. You can <code>force</code> the update if Amazon
            EKS is unable to drain the nodes as a result of a pod disruption budget issue.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.UpdateNodegroupVersionRequest.ClientRequestToken">
            <summary>
            Gets and sets the property ClientRequestToken. 
            <para>
            Unique, case-sensitive identifier that you provide to ensure the idempotency of the
            request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.UpdateNodegroupVersionRequest.ClusterName">
            <summary>
            Gets and sets the property ClusterName. 
            <para>
            The name of the Amazon EKS cluster that is associated with the managed node group
            to update.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.UpdateNodegroupVersionRequest.Force">
            <summary>
            Gets and sets the property Force. 
            <para>
            Force the update if the existing node group's pods are unable to be drained due to
            a pod disruption budget issue. If an update fails because pods could not be drained,
            you can force the update after it fails to terminate the old node whether or not any
            pods are running on the node.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.UpdateNodegroupVersionRequest.LaunchTemplate">
            <summary>
            Gets and sets the property LaunchTemplate. 
            <para>
            An object representing a node group's launch template specification. You can only
            update a node group using a launch template if the node group was originally deployed
            with a launch template.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.UpdateNodegroupVersionRequest.NodegroupName">
            <summary>
            Gets and sets the property NodegroupName. 
            <para>
            The name of the managed node group to update.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.UpdateNodegroupVersionRequest.ReleaseVersion">
            <summary>
            Gets and sets the property ReleaseVersion. 
            <para>
            The AMI version of the Amazon EKS optimized AMI to use for the update. By default,
            the latest available AMI version for the node group's Kubernetes version is used.
            For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/eks-linux-ami-versions.html">Amazon
            EKS optimized Amazon Linux 2 AMI versions </a> in the <i>Amazon EKS User Guide</i>.
            If you specify <code>launchTemplate</code>, and your launch template uses a custom
            AMI, then don't specify <code>releaseVersion</code>, or the node group update will
            fail. For more information about using launch templates with Amazon EKS, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html">Launch
            template support</a> in the Amazon EKS User Guide.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.UpdateNodegroupVersionRequest.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            The Kubernetes version to update to. If no version is specified, then the Kubernetes
            version of the node group does not change. You can specify the Kubernetes version
            of the cluster to update the node group to the latest AMI version of the cluster's
            Kubernetes version. If you specify <code>launchTemplate</code>, and your launch template
            uses a custom AMI, then don't specify <code>version</code>, or the node group update
            will fail. For more information about using launch templates with Amazon EKS, see
            <a href="https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html">Launch
            template support</a> in the Amazon EKS User Guide.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.UpdateNodegroupVersionResponse">
            <summary>
            This is the response object from the UpdateNodegroupVersion operation.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.UpdateNodegroupVersionResponse.Update">
            <summary>
            Gets and sets the property Update.
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.UpdateParam">
            <summary>
            An object representing the details of an update request.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.UpdateParam.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The keys associated with an update request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.UpdateParam.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The value of the keys submitted as part of an update request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.UpdateTaintsPayload">
            <summary>
            An object representing the details of an update to a taints payload.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.UpdateTaintsPayload.AddOrUpdateTaints">
            <summary>
            Gets and sets the property AddOrUpdateTaints. 
            <para>
            Kubernetes taints to be added or updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.UpdateTaintsPayload.RemoveTaints">
            <summary>
            Gets and sets the property RemoveTaints. 
            <para>
            Kubernetes taints to be removed.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.VpcConfigRequest">
            <summary>
            An object representing the VPC configuration to use for an Amazon EKS cluster.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.VpcConfigRequest.EndpointPrivateAccess">
            <summary>
            Gets and sets the property EndpointPrivateAccess. 
            <para>
            Set this value to <code>true</code> to enable private access for your cluster's Kubernetes
            API server endpoint. If you enable private access, Kubernetes API requests from within
            your cluster's VPC use the private VPC endpoint. The default value for this parameter
            is <code>false</code>, which disables private access for your Kubernetes API server.
            If you disable private access and you have nodes or Fargate pods in the cluster, then
            ensure that <code>publicAccessCidrs</code> includes the necessary CIDR blocks for
            communication with the nodes or Fargate pods. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html">Amazon
            EKS cluster endpoint access control</a> in the <i> <i>Amazon EKS User Guide</i> </i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.VpcConfigRequest.EndpointPublicAccess">
            <summary>
            Gets and sets the property EndpointPublicAccess. 
            <para>
            Set this value to <code>false</code> to disable public access to your cluster's Kubernetes
            API server endpoint. If you disable public access, your cluster's Kubernetes API server
            can only receive requests from within the cluster VPC. The default value for this
            parameter is <code>true</code>, which enables public access for your Kubernetes API
            server. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html">Amazon
            EKS cluster endpoint access control</a> in the <i> <i>Amazon EKS User Guide</i> </i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.VpcConfigRequest.PublicAccessCidrs">
            <summary>
            Gets and sets the property PublicAccessCidrs. 
            <para>
            The CIDR blocks that are allowed access to your cluster's public Kubernetes API server
            endpoint. Communication to the endpoint from addresses outside of the CIDR blocks
            that you specify is denied. The default value is <code>0.0.0.0/0</code>. If you've
            disabled private endpoint access and you have nodes or Fargate pods in the cluster,
            then ensure that you specify the necessary CIDR blocks. For more information, see
            <a href="https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html">Amazon
            EKS cluster endpoint access control</a> in the <i> <i>Amazon EKS User Guide</i> </i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.VpcConfigRequest.SecurityGroupIds">
            <summary>
            Gets and sets the property SecurityGroupIds. 
            <para>
            Specify one or more security groups for the cross-account elastic network interfaces
            that Amazon EKS creates to use that allow communication between your nodes and the
            Kubernetes control plane. If you don't specify any security groups, then familiarize
            yourself with the difference between Amazon EKS defaults for clusters deployed with
            Kubernetes:
            </para>
             <ul> <li> 
            <para>
            1.14 Amazon EKS platform version <code>eks.2</code> and earlier
            </para>
             </li> <li> 
            <para>
            1.14 Amazon EKS platform version <code>eks.3</code> and later 
            </para>
             </li> </ul> 
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/sec-group-reqs.html">Amazon
            EKS security group considerations</a> in the <i> <i>Amazon EKS User Guide</i> </i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.VpcConfigRequest.SubnetIds">
            <summary>
            Gets and sets the property SubnetIds. 
            <para>
            Specify subnets for your Amazon EKS nodes. Amazon EKS creates cross-account elastic
            network interfaces in these subnets to allow communication between your nodes and
            the Kubernetes control plane.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.VpcConfigResponse">
            <summary>
            An object representing an Amazon EKS cluster VPC configuration response.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.VpcConfigResponse.ClusterSecurityGroupId">
            <summary>
            Gets and sets the property ClusterSecurityGroupId. 
            <para>
            The cluster security group that was created by Amazon EKS for the cluster. Managed
            node groups use this security group for control-plane-to-data-plane communication.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.VpcConfigResponse.EndpointPrivateAccess">
            <summary>
            Gets and sets the property EndpointPrivateAccess. 
            <para>
            This parameter indicates whether the Amazon EKS private API server endpoint is enabled.
            If the Amazon EKS private API server endpoint is enabled, Kubernetes API requests
            that originate from within your cluster's VPC use the private VPC endpoint instead
            of traversing the internet. If this value is disabled and you have nodes or Fargate
            pods in the cluster, then ensure that <code>publicAccessCidrs</code> includes the
            necessary CIDR blocks for communication with the nodes or Fargate pods. For more information,
            see <a href="https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html">Amazon
            EKS cluster endpoint access control</a> in the <i> <i>Amazon EKS User Guide</i> </i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.VpcConfigResponse.EndpointPublicAccess">
            <summary>
            Gets and sets the property EndpointPublicAccess. 
            <para>
            This parameter indicates whether the Amazon EKS public API server endpoint is enabled.
            If the Amazon EKS public API server endpoint is disabled, your cluster's Kubernetes
            API server can only receive requests that originate from within the cluster VPC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.VpcConfigResponse.PublicAccessCidrs">
            <summary>
            Gets and sets the property PublicAccessCidrs. 
            <para>
            The CIDR blocks that are allowed access to your cluster's public Kubernetes API server
            endpoint. Communication to the endpoint from addresses outside of the listed CIDR
            blocks is denied. The default value is <code>0.0.0.0/0</code>. If you've disabled
            private endpoint access and you have nodes or Fargate pods in the cluster, then ensure
            that the necessary CIDR blocks are listed. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html">Amazon
            EKS cluster endpoint access control</a> in the <i> <i>Amazon EKS User Guide</i> </i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.VpcConfigResponse.SecurityGroupIds">
            <summary>
            Gets and sets the property SecurityGroupIds. 
            <para>
            The security groups associated with the cross-account elastic network interfaces that
            are used to allow communication between your nodes and the Kubernetes control plane.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.VpcConfigResponse.SubnetIds">
            <summary>
            Gets and sets the property SubnetIds. 
            <para>
            The subnets associated with your cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.VpcConfigResponse.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The VPC associated with your cluster.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.DescribeAddonVersionsPaginator">
            <summary>
            Base class for DescribeAddonVersions paginators.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.DescribeAddonVersionsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.DescribeAddonVersionsPaginator.Addons">
            <summary>
            Enumerable containing all of the Addons
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.EKSPaginatorFactory">
             <summary>
             Paginators for the EKS service
            </summary>
        </member>
        <member name="M:Amazon.EKS.Model.EKSPaginatorFactory.DescribeAddonVersions(Amazon.EKS.Model.DescribeAddonVersionsRequest)">
             <summary>
             Paginator for DescribeAddonVersions operation
            </summary>
        </member>
        <member name="M:Amazon.EKS.Model.EKSPaginatorFactory.ListAddons(Amazon.EKS.Model.ListAddonsRequest)">
             <summary>
             Paginator for ListAddons operation
            </summary>
        </member>
        <member name="M:Amazon.EKS.Model.EKSPaginatorFactory.ListClusters(Amazon.EKS.Model.ListClustersRequest)">
             <summary>
             Paginator for ListClusters operation
            </summary>
        </member>
        <member name="M:Amazon.EKS.Model.EKSPaginatorFactory.ListFargateProfiles(Amazon.EKS.Model.ListFargateProfilesRequest)">
             <summary>
             Paginator for ListFargateProfiles operation
            </summary>
        </member>
        <member name="M:Amazon.EKS.Model.EKSPaginatorFactory.ListIdentityProviderConfigs(Amazon.EKS.Model.ListIdentityProviderConfigsRequest)">
             <summary>
             Paginator for ListIdentityProviderConfigs operation
            </summary>
        </member>
        <member name="M:Amazon.EKS.Model.EKSPaginatorFactory.ListNodegroups(Amazon.EKS.Model.ListNodegroupsRequest)">
             <summary>
             Paginator for ListNodegroups operation
            </summary>
        </member>
        <member name="M:Amazon.EKS.Model.EKSPaginatorFactory.ListUpdates(Amazon.EKS.Model.ListUpdatesRequest)">
             <summary>
             Paginator for ListUpdates operation
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.IDescribeAddonVersionsPaginator">
             <summary>
             Paginator for the DescribeAddonVersions operation
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.IDescribeAddonVersionsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.IDescribeAddonVersionsPaginator.Addons">
            <summary>
            Enumerable containing all of the Addons
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.IEKSPaginatorFactory">
             <summary>
             Paginators for the EKS service
            </summary>
        </member>
        <member name="M:Amazon.EKS.Model.IEKSPaginatorFactory.DescribeAddonVersions(Amazon.EKS.Model.DescribeAddonVersionsRequest)">
             <summary>
             Paginator for DescribeAddonVersions operation
            </summary>
        </member>
        <member name="M:Amazon.EKS.Model.IEKSPaginatorFactory.ListAddons(Amazon.EKS.Model.ListAddonsRequest)">
             <summary>
             Paginator for ListAddons operation
            </summary>
        </member>
        <member name="M:Amazon.EKS.Model.IEKSPaginatorFactory.ListClusters(Amazon.EKS.Model.ListClustersRequest)">
             <summary>
             Paginator for ListClusters operation
            </summary>
        </member>
        <member name="M:Amazon.EKS.Model.IEKSPaginatorFactory.ListFargateProfiles(Amazon.EKS.Model.ListFargateProfilesRequest)">
             <summary>
             Paginator for ListFargateProfiles operation
            </summary>
        </member>
        <member name="M:Amazon.EKS.Model.IEKSPaginatorFactory.ListIdentityProviderConfigs(Amazon.EKS.Model.ListIdentityProviderConfigsRequest)">
             <summary>
             Paginator for ListIdentityProviderConfigs operation
            </summary>
        </member>
        <member name="M:Amazon.EKS.Model.IEKSPaginatorFactory.ListNodegroups(Amazon.EKS.Model.ListNodegroupsRequest)">
             <summary>
             Paginator for ListNodegroups operation
            </summary>
        </member>
        <member name="M:Amazon.EKS.Model.IEKSPaginatorFactory.ListUpdates(Amazon.EKS.Model.ListUpdatesRequest)">
             <summary>
             Paginator for ListUpdates operation
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.IListAddonsPaginator">
             <summary>
             Paginator for the ListAddons operation
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.IListAddonsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.IListAddonsPaginator.Addons">
            <summary>
            Enumerable containing all of the Addons
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.IListClustersPaginator">
             <summary>
             Paginator for the ListClusters operation
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.IListClustersPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.IListClustersPaginator.Clusters">
            <summary>
            Enumerable containing all of the Clusters
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.IListFargateProfilesPaginator">
             <summary>
             Paginator for the ListFargateProfiles operation
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.IListFargateProfilesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.IListFargateProfilesPaginator.FargateProfileNames">
            <summary>
            Enumerable containing all of the FargateProfileNames
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.IListIdentityProviderConfigsPaginator">
             <summary>
             Paginator for the ListIdentityProviderConfigs operation
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.IListIdentityProviderConfigsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.IListIdentityProviderConfigsPaginator.IdentityProviderConfigs">
            <summary>
            Enumerable containing all of the IdentityProviderConfigs
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.IListNodegroupsPaginator">
             <summary>
             Paginator for the ListNodegroups operation
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.IListNodegroupsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.IListNodegroupsPaginator.Nodegroups">
            <summary>
            Enumerable containing all of the Nodegroups
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.IListUpdatesPaginator">
             <summary>
             Paginator for the ListUpdates operation
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.IListUpdatesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.IListUpdatesPaginator.UpdateIds">
            <summary>
            Enumerable containing all of the UpdateIds
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.ListAddonsPaginator">
            <summary>
            Base class for ListAddons paginators.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ListAddonsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ListAddonsPaginator.Addons">
            <summary>
            Enumerable containing all of the Addons
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.ListClustersPaginator">
            <summary>
            Base class for ListClusters paginators.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ListClustersPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ListClustersPaginator.Clusters">
            <summary>
            Enumerable containing all of the Clusters
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.ListFargateProfilesPaginator">
            <summary>
            Base class for ListFargateProfiles paginators.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ListFargateProfilesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ListFargateProfilesPaginator.FargateProfileNames">
            <summary>
            Enumerable containing all of the FargateProfileNames
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.ListIdentityProviderConfigsPaginator">
            <summary>
            Base class for ListIdentityProviderConfigs paginators.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ListIdentityProviderConfigsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ListIdentityProviderConfigsPaginator.IdentityProviderConfigs">
            <summary>
            Enumerable containing all of the IdentityProviderConfigs
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.ListNodegroupsPaginator">
            <summary>
            Base class for ListNodegroups paginators.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ListNodegroupsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ListNodegroupsPaginator.Nodegroups">
            <summary>
            Enumerable containing all of the Nodegroups
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.ListUpdatesPaginator">
            <summary>
            Base class for ListUpdates paginators.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ListUpdatesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ListUpdatesPaginator.UpdateIds">
            <summary>
            Enumerable containing all of the UpdateIds
            </summary>
        </member>
        <member name="T:Amazon.EKS.AmazonEKSRequest">
            <summary>
            Base class for EKS operation requests.
            </summary>
        </member>
        <member name="T:Amazon.EKS.AddonIssueCode">
            <summary>
            Constants used for properties of type AddonIssueCode.
            </summary>
        </member>
        <member name="F:Amazon.EKS.AddonIssueCode.AccessDenied">
            <summary>
            Constant AccessDenied for AddonIssueCode
            </summary>
        </member>
        <member name="F:Amazon.EKS.AddonIssueCode.AdmissionRequestDenied">
            <summary>
            Constant AdmissionRequestDenied for AddonIssueCode
            </summary>
        </member>
        <member name="F:Amazon.EKS.AddonIssueCode.ClusterUnreachable">
            <summary>
            Constant ClusterUnreachable for AddonIssueCode
            </summary>
        </member>
        <member name="F:Amazon.EKS.AddonIssueCode.ConfigurationConflict">
            <summary>
            Constant ConfigurationConflict for AddonIssueCode
            </summary>
        </member>
        <member name="F:Amazon.EKS.AddonIssueCode.InsufficientNumberOfReplicas">
            <summary>
            Constant InsufficientNumberOfReplicas for AddonIssueCode
            </summary>
        </member>
        <member name="F:Amazon.EKS.AddonIssueCode.InternalFailure">
            <summary>
            Constant InternalFailure for AddonIssueCode
            </summary>
        </member>
        <member name="F:Amazon.EKS.AddonIssueCode.K8sResourceNotFound">
            <summary>
            Constant K8sResourceNotFound for AddonIssueCode
            </summary>
        </member>
        <member name="F:Amazon.EKS.AddonIssueCode.UnsupportedAddonModification">
            <summary>
            Constant UnsupportedAddonModification for AddonIssueCode
            </summary>
        </member>
        <member name="M:Amazon.EKS.AddonIssueCode.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EKS.AddonIssueCode.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EKS.AddonIssueCode.op_Implicit(System.String)~Amazon.EKS.AddonIssueCode">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EKS.AddonStatus">
            <summary>
            Constants used for properties of type AddonStatus.
            </summary>
        </member>
        <member name="F:Amazon.EKS.AddonStatus.ACTIVE">
            <summary>
            Constant ACTIVE for AddonStatus
            </summary>
        </member>
        <member name="F:Amazon.EKS.AddonStatus.CREATE_FAILED">
            <summary>
            Constant CREATE_FAILED for AddonStatus
            </summary>
        </member>
        <member name="F:Amazon.EKS.AddonStatus.CREATING">
            <summary>
            Constant CREATING for AddonStatus
            </summary>
        </member>
        <member name="F:Amazon.EKS.AddonStatus.DEGRADED">
            <summary>
            Constant DEGRADED for AddonStatus
            </summary>
        </member>
        <member name="F:Amazon.EKS.AddonStatus.DELETE_FAILED">
            <summary>
            Constant DELETE_FAILED for AddonStatus
            </summary>
        </member>
        <member name="F:Amazon.EKS.AddonStatus.DELETING">
            <summary>
            Constant DELETING for AddonStatus
            </summary>
        </member>
        <member name="F:Amazon.EKS.AddonStatus.UPDATING">
            <summary>
            Constant UPDATING for AddonStatus
            </summary>
        </member>
        <member name="M:Amazon.EKS.AddonStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EKS.AddonStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EKS.AddonStatus.op_Implicit(System.String)~Amazon.EKS.AddonStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EKS.AMITypes">
            <summary>
            Constants used for properties of type AMITypes.
            </summary>
        </member>
        <member name="F:Amazon.EKS.AMITypes.AL2_ARM_64">
            <summary>
            Constant AL2_ARM_64 for AMITypes
            </summary>
        </member>
        <member name="F:Amazon.EKS.AMITypes.AL2_x86_64">
            <summary>
            Constant AL2_x86_64 for AMITypes
            </summary>
        </member>
        <member name="F:Amazon.EKS.AMITypes.AL2_x86_64_GPU">
            <summary>
            Constant AL2_x86_64_GPU for AMITypes
            </summary>
        </member>
        <member name="F:Amazon.EKS.AMITypes.CUSTOM">
            <summary>
            Constant CUSTOM for AMITypes
            </summary>
        </member>
        <member name="M:Amazon.EKS.AMITypes.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EKS.AMITypes.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EKS.AMITypes.op_Implicit(System.String)~Amazon.EKS.AMITypes">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EKS.CapacityTypes">
            <summary>
            Constants used for properties of type CapacityTypes.
            </summary>
        </member>
        <member name="F:Amazon.EKS.CapacityTypes.ON_DEMAND">
            <summary>
            Constant ON_DEMAND for CapacityTypes
            </summary>
        </member>
        <member name="F:Amazon.EKS.CapacityTypes.SPOT">
            <summary>
            Constant SPOT for CapacityTypes
            </summary>
        </member>
        <member name="M:Amazon.EKS.CapacityTypes.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EKS.CapacityTypes.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EKS.CapacityTypes.op_Implicit(System.String)~Amazon.EKS.CapacityTypes">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EKS.ClusterStatus">
            <summary>
            Constants used for properties of type ClusterStatus.
            </summary>
        </member>
        <member name="F:Amazon.EKS.ClusterStatus.ACTIVE">
            <summary>
            Constant ACTIVE for ClusterStatus
            </summary>
        </member>
        <member name="F:Amazon.EKS.ClusterStatus.CREATING">
            <summary>
            Constant CREATING for ClusterStatus
            </summary>
        </member>
        <member name="F:Amazon.EKS.ClusterStatus.DELETING">
            <summary>
            Constant DELETING for ClusterStatus
            </summary>
        </member>
        <member name="F:Amazon.EKS.ClusterStatus.FAILED">
            <summary>
            Constant FAILED for ClusterStatus
            </summary>
        </member>
        <member name="F:Amazon.EKS.ClusterStatus.PENDING">
            <summary>
            Constant PENDING for ClusterStatus
            </summary>
        </member>
        <member name="F:Amazon.EKS.ClusterStatus.UPDATING">
            <summary>
            Constant UPDATING for ClusterStatus
            </summary>
        </member>
        <member name="M:Amazon.EKS.ClusterStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EKS.ClusterStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EKS.ClusterStatus.op_Implicit(System.String)~Amazon.EKS.ClusterStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EKS.ConfigStatus">
            <summary>
            Constants used for properties of type ConfigStatus.
            </summary>
        </member>
        <member name="F:Amazon.EKS.ConfigStatus.ACTIVE">
            <summary>
            Constant ACTIVE for ConfigStatus
            </summary>
        </member>
        <member name="F:Amazon.EKS.ConfigStatus.CREATING">
            <summary>
            Constant CREATING for ConfigStatus
            </summary>
        </member>
        <member name="F:Amazon.EKS.ConfigStatus.DELETING">
            <summary>
            Constant DELETING for ConfigStatus
            </summary>
        </member>
        <member name="M:Amazon.EKS.ConfigStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EKS.ConfigStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EKS.ConfigStatus.op_Implicit(System.String)~Amazon.EKS.ConfigStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EKS.ConnectorConfigProvider">
            <summary>
            Constants used for properties of type ConnectorConfigProvider.
            </summary>
        </member>
        <member name="F:Amazon.EKS.ConnectorConfigProvider.AKS">
            <summary>
            Constant AKS for ConnectorConfigProvider
            </summary>
        </member>
        <member name="F:Amazon.EKS.ConnectorConfigProvider.ANTHOS">
            <summary>
            Constant ANTHOS for ConnectorConfigProvider
            </summary>
        </member>
        <member name="F:Amazon.EKS.ConnectorConfigProvider.EC2">
            <summary>
            Constant EC2 for ConnectorConfigProvider
            </summary>
        </member>
        <member name="F:Amazon.EKS.ConnectorConfigProvider.EKS_ANYWHERE">
            <summary>
            Constant EKS_ANYWHERE for ConnectorConfigProvider
            </summary>
        </member>
        <member name="F:Amazon.EKS.ConnectorConfigProvider.GKE">
            <summary>
            Constant GKE for ConnectorConfigProvider
            </summary>
        </member>
        <member name="F:Amazon.EKS.ConnectorConfigProvider.OPENSHIFT">
            <summary>
            Constant OPENSHIFT for ConnectorConfigProvider
            </summary>
        </member>
        <member name="F:Amazon.EKS.ConnectorConfigProvider.OTHER">
            <summary>
            Constant OTHER for ConnectorConfigProvider
            </summary>
        </member>
        <member name="F:Amazon.EKS.ConnectorConfigProvider.RANCHER">
            <summary>
            Constant RANCHER for ConnectorConfigProvider
            </summary>
        </member>
        <member name="F:Amazon.EKS.ConnectorConfigProvider.TANZU">
            <summary>
            Constant TANZU for ConnectorConfigProvider
            </summary>
        </member>
        <member name="M:Amazon.EKS.ConnectorConfigProvider.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EKS.ConnectorConfigProvider.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EKS.ConnectorConfigProvider.op_Implicit(System.String)~Amazon.EKS.ConnectorConfigProvider">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EKS.ErrorCode">
            <summary>
            Constants used for properties of type ErrorCode.
            </summary>
        </member>
        <member name="F:Amazon.EKS.ErrorCode.AccessDenied">
            <summary>
            Constant AccessDenied for ErrorCode
            </summary>
        </member>
        <member name="F:Amazon.EKS.ErrorCode.AdmissionRequestDenied">
            <summary>
            Constant AdmissionRequestDenied for ErrorCode
            </summary>
        </member>
        <member name="F:Amazon.EKS.ErrorCode.ClusterUnreachable">
            <summary>
            Constant ClusterUnreachable for ErrorCode
            </summary>
        </member>
        <member name="F:Amazon.EKS.ErrorCode.ConfigurationConflict">
            <summary>
            Constant ConfigurationConflict for ErrorCode
            </summary>
        </member>
        <member name="F:Amazon.EKS.ErrorCode.EniLimitReached">
            <summary>
            Constant EniLimitReached for ErrorCode
            </summary>
        </member>
        <member name="F:Amazon.EKS.ErrorCode.InsufficientFreeAddresses">
            <summary>
            Constant InsufficientFreeAddresses for ErrorCode
            </summary>
        </member>
        <member name="F:Amazon.EKS.ErrorCode.InsufficientNumberOfReplicas">
            <summary>
            Constant InsufficientNumberOfReplicas for ErrorCode
            </summary>
        </member>
        <member name="F:Amazon.EKS.ErrorCode.IpNotAvailable">
            <summary>
            Constant IpNotAvailable for ErrorCode
            </summary>
        </member>
        <member name="F:Amazon.EKS.ErrorCode.K8sResourceNotFound">
            <summary>
            Constant K8sResourceNotFound for ErrorCode
            </summary>
        </member>
        <member name="F:Amazon.EKS.ErrorCode.NodeCreationFailure">
            <summary>
            Constant NodeCreationFailure for ErrorCode
            </summary>
        </member>
        <member name="F:Amazon.EKS.ErrorCode.OperationNotPermitted">
            <summary>
            Constant OperationNotPermitted for ErrorCode
            </summary>
        </member>
        <member name="F:Amazon.EKS.ErrorCode.PodEvictionFailure">
            <summary>
            Constant PodEvictionFailure for ErrorCode
            </summary>
        </member>
        <member name="F:Amazon.EKS.ErrorCode.SecurityGroupNotFound">
            <summary>
            Constant SecurityGroupNotFound for ErrorCode
            </summary>
        </member>
        <member name="F:Amazon.EKS.ErrorCode.SubnetNotFound">
            <summary>
            Constant SubnetNotFound for ErrorCode
            </summary>
        </member>
        <member name="F:Amazon.EKS.ErrorCode.Unknown">
            <summary>
            Constant Unknown for ErrorCode
            </summary>
        </member>
        <member name="F:Amazon.EKS.ErrorCode.UnsupportedAddonModification">
            <summary>
            Constant UnsupportedAddonModification for ErrorCode
            </summary>
        </member>
        <member name="F:Amazon.EKS.ErrorCode.VpcIdNotFound">
            <summary>
            Constant VpcIdNotFound for ErrorCode
            </summary>
        </member>
        <member name="M:Amazon.EKS.ErrorCode.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EKS.ErrorCode.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EKS.ErrorCode.op_Implicit(System.String)~Amazon.EKS.ErrorCode">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EKS.FargateProfileStatus">
            <summary>
            Constants used for properties of type FargateProfileStatus.
            </summary>
        </member>
        <member name="F:Amazon.EKS.FargateProfileStatus.ACTIVE">
            <summary>
            Constant ACTIVE for FargateProfileStatus
            </summary>
        </member>
        <member name="F:Amazon.EKS.FargateProfileStatus.CREATE_FAILED">
            <summary>
            Constant CREATE_FAILED for FargateProfileStatus
            </summary>
        </member>
        <member name="F:Amazon.EKS.FargateProfileStatus.CREATING">
            <summary>
            Constant CREATING for FargateProfileStatus
            </summary>
        </member>
        <member name="F:Amazon.EKS.FargateProfileStatus.DELETE_FAILED">
            <summary>
            Constant DELETE_FAILED for FargateProfileStatus
            </summary>
        </member>
        <member name="F:Amazon.EKS.FargateProfileStatus.DELETING">
            <summary>
            Constant DELETING for FargateProfileStatus
            </summary>
        </member>
        <member name="M:Amazon.EKS.FargateProfileStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EKS.FargateProfileStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EKS.FargateProfileStatus.op_Implicit(System.String)~Amazon.EKS.FargateProfileStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EKS.LogType">
            <summary>
            Constants used for properties of type LogType.
            </summary>
        </member>
        <member name="F:Amazon.EKS.LogType.Api">
            <summary>
            Constant Api for LogType
            </summary>
        </member>
        <member name="F:Amazon.EKS.LogType.Audit">
            <summary>
            Constant Audit for LogType
            </summary>
        </member>
        <member name="F:Amazon.EKS.LogType.Authenticator">
            <summary>
            Constant Authenticator for LogType
            </summary>
        </member>
        <member name="F:Amazon.EKS.LogType.ControllerManager">
            <summary>
            Constant ControllerManager for LogType
            </summary>
        </member>
        <member name="F:Amazon.EKS.LogType.Scheduler">
            <summary>
            Constant Scheduler for LogType
            </summary>
        </member>
        <member name="M:Amazon.EKS.LogType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EKS.LogType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EKS.LogType.op_Implicit(System.String)~Amazon.EKS.LogType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EKS.NodegroupIssueCode">
            <summary>
            Constants used for properties of type NodegroupIssueCode.
            </summary>
        </member>
        <member name="F:Amazon.EKS.NodegroupIssueCode.AccessDenied">
            <summary>
            Constant AccessDenied for NodegroupIssueCode
            </summary>
        </member>
        <member name="F:Amazon.EKS.NodegroupIssueCode.AsgInstanceLaunchFailures">
            <summary>
            Constant AsgInstanceLaunchFailures for NodegroupIssueCode
            </summary>
        </member>
        <member name="F:Amazon.EKS.NodegroupIssueCode.AutoScalingGroupInvalidConfiguration">
            <summary>
            Constant AutoScalingGroupInvalidConfiguration for NodegroupIssueCode
            </summary>
        </member>
        <member name="F:Amazon.EKS.NodegroupIssueCode.AutoScalingGroupNotFound">
            <summary>
            Constant AutoScalingGroupNotFound for NodegroupIssueCode
            </summary>
        </member>
        <member name="F:Amazon.EKS.NodegroupIssueCode.ClusterUnreachable">
            <summary>
            Constant ClusterUnreachable for NodegroupIssueCode
            </summary>
        </member>
        <member name="F:Amazon.EKS.NodegroupIssueCode.Ec2LaunchTemplateNotFound">
            <summary>
            Constant Ec2LaunchTemplateNotFound for NodegroupIssueCode
            </summary>
        </member>
        <member name="F:Amazon.EKS.NodegroupIssueCode.Ec2LaunchTemplateVersionMismatch">
            <summary>
            Constant Ec2LaunchTemplateVersionMismatch for NodegroupIssueCode
            </summary>
        </member>
        <member name="F:Amazon.EKS.NodegroupIssueCode.Ec2SecurityGroupDeletionFailure">
            <summary>
            Constant Ec2SecurityGroupDeletionFailure for NodegroupIssueCode
            </summary>
        </member>
        <member name="F:Amazon.EKS.NodegroupIssueCode.Ec2SecurityGroupNotFound">
            <summary>
            Constant Ec2SecurityGroupNotFound for NodegroupIssueCode
            </summary>
        </member>
        <member name="F:Amazon.EKS.NodegroupIssueCode.Ec2SubnetInvalidConfiguration">
            <summary>
            Constant Ec2SubnetInvalidConfiguration for NodegroupIssueCode
            </summary>
        </member>
        <member name="F:Amazon.EKS.NodegroupIssueCode.Ec2SubnetNotFound">
            <summary>
            Constant Ec2SubnetNotFound for NodegroupIssueCode
            </summary>
        </member>
        <member name="F:Amazon.EKS.NodegroupIssueCode.IamInstanceProfileNotFound">
            <summary>
            Constant IamInstanceProfileNotFound for NodegroupIssueCode
            </summary>
        </member>
        <member name="F:Amazon.EKS.NodegroupIssueCode.IamLimitExceeded">
            <summary>
            Constant IamLimitExceeded for NodegroupIssueCode
            </summary>
        </member>
        <member name="F:Amazon.EKS.NodegroupIssueCode.IamNodeRoleNotFound">
            <summary>
            Constant IamNodeRoleNotFound for NodegroupIssueCode
            </summary>
        </member>
        <member name="F:Amazon.EKS.NodegroupIssueCode.InstanceLimitExceeded">
            <summary>
            Constant InstanceLimitExceeded for NodegroupIssueCode
            </summary>
        </member>
        <member name="F:Amazon.EKS.NodegroupIssueCode.InsufficientFreeAddresses">
            <summary>
            Constant InsufficientFreeAddresses for NodegroupIssueCode
            </summary>
        </member>
        <member name="F:Amazon.EKS.NodegroupIssueCode.InternalFailure">
            <summary>
            Constant InternalFailure for NodegroupIssueCode
            </summary>
        </member>
        <member name="F:Amazon.EKS.NodegroupIssueCode.NodeCreationFailure">
            <summary>
            Constant NodeCreationFailure for NodegroupIssueCode
            </summary>
        </member>
        <member name="M:Amazon.EKS.NodegroupIssueCode.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EKS.NodegroupIssueCode.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EKS.NodegroupIssueCode.op_Implicit(System.String)~Amazon.EKS.NodegroupIssueCode">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EKS.NodegroupStatus">
            <summary>
            Constants used for properties of type NodegroupStatus.
            </summary>
        </member>
        <member name="F:Amazon.EKS.NodegroupStatus.ACTIVE">
            <summary>
            Constant ACTIVE for NodegroupStatus
            </summary>
        </member>
        <member name="F:Amazon.EKS.NodegroupStatus.CREATE_FAILED">
            <summary>
            Constant CREATE_FAILED for NodegroupStatus
            </summary>
        </member>
        <member name="F:Amazon.EKS.NodegroupStatus.CREATING">
            <summary>
            Constant CREATING for NodegroupStatus
            </summary>
        </member>
        <member name="F:Amazon.EKS.NodegroupStatus.DEGRADED">
            <summary>
            Constant DEGRADED for NodegroupStatus
            </summary>
        </member>
        <member name="F:Amazon.EKS.NodegroupStatus.DELETE_FAILED">
            <summary>
            Constant DELETE_FAILED for NodegroupStatus
            </summary>
        </member>
        <member name="F:Amazon.EKS.NodegroupStatus.DELETING">
            <summary>
            Constant DELETING for NodegroupStatus
            </summary>
        </member>
        <member name="F:Amazon.EKS.NodegroupStatus.UPDATING">
            <summary>
            Constant UPDATING for NodegroupStatus
            </summary>
        </member>
        <member name="M:Amazon.EKS.NodegroupStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EKS.NodegroupStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EKS.NodegroupStatus.op_Implicit(System.String)~Amazon.EKS.NodegroupStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EKS.ResolveConflicts">
            <summary>
            Constants used for properties of type ResolveConflicts.
            </summary>
        </member>
        <member name="F:Amazon.EKS.ResolveConflicts.NONE">
            <summary>
            Constant NONE for ResolveConflicts
            </summary>
        </member>
        <member name="F:Amazon.EKS.ResolveConflicts.OVERWRITE">
            <summary>
            Constant OVERWRITE for ResolveConflicts
            </summary>
        </member>
        <member name="M:Amazon.EKS.ResolveConflicts.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EKS.ResolveConflicts.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EKS.ResolveConflicts.op_Implicit(System.String)~Amazon.EKS.ResolveConflicts">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EKS.TaintEffect">
            <summary>
            Constants used for properties of type TaintEffect.
            </summary>
        </member>
        <member name="F:Amazon.EKS.TaintEffect.NO_EXECUTE">
            <summary>
            Constant NO_EXECUTE for TaintEffect
            </summary>
        </member>
        <member name="F:Amazon.EKS.TaintEffect.NO_SCHEDULE">
            <summary>
            Constant NO_SCHEDULE for TaintEffect
            </summary>
        </member>
        <member name="F:Amazon.EKS.TaintEffect.PREFER_NO_SCHEDULE">
            <summary>
            Constant PREFER_NO_SCHEDULE for TaintEffect
            </summary>
        </member>
        <member name="M:Amazon.EKS.TaintEffect.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EKS.TaintEffect.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EKS.TaintEffect.op_Implicit(System.String)~Amazon.EKS.TaintEffect">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EKS.UpdateParamType">
            <summary>
            Constants used for properties of type UpdateParamType.
            </summary>
        </member>
        <member name="F:Amazon.EKS.UpdateParamType.AddonVersion">
            <summary>
            Constant AddonVersion for UpdateParamType
            </summary>
        </member>
        <member name="F:Amazon.EKS.UpdateParamType.ClusterLogging">
            <summary>
            Constant ClusterLogging for UpdateParamType
            </summary>
        </member>
        <member name="F:Amazon.EKS.UpdateParamType.DesiredSize">
            <summary>
            Constant DesiredSize for UpdateParamType
            </summary>
        </member>
        <member name="F:Amazon.EKS.UpdateParamType.EncryptionConfig">
            <summary>
            Constant EncryptionConfig for UpdateParamType
            </summary>
        </member>
        <member name="F:Amazon.EKS.UpdateParamType.EndpointPrivateAccess">
            <summary>
            Constant EndpointPrivateAccess for UpdateParamType
            </summary>
        </member>
        <member name="F:Amazon.EKS.UpdateParamType.EndpointPublicAccess">
            <summary>
            Constant EndpointPublicAccess for UpdateParamType
            </summary>
        </member>
        <member name="F:Amazon.EKS.UpdateParamType.IdentityProviderConfig">
            <summary>
            Constant IdentityProviderConfig for UpdateParamType
            </summary>
        </member>
        <member name="F:Amazon.EKS.UpdateParamType.LabelsToAdd">
            <summary>
            Constant LabelsToAdd for UpdateParamType
            </summary>
        </member>
        <member name="F:Amazon.EKS.UpdateParamType.LabelsToRemove">
            <summary>
            Constant LabelsToRemove for UpdateParamType
            </summary>
        </member>
        <member name="F:Amazon.EKS.UpdateParamType.LaunchTemplateName">
            <summary>
            Constant LaunchTemplateName for UpdateParamType
            </summary>
        </member>
        <member name="F:Amazon.EKS.UpdateParamType.LaunchTemplateVersion">
            <summary>
            Constant LaunchTemplateVersion for UpdateParamType
            </summary>
        </member>
        <member name="F:Amazon.EKS.UpdateParamType.MaxSize">
            <summary>
            Constant MaxSize for UpdateParamType
            </summary>
        </member>
        <member name="F:Amazon.EKS.UpdateParamType.MaxUnavailable">
            <summary>
            Constant MaxUnavailable for UpdateParamType
            </summary>
        </member>
        <member name="F:Amazon.EKS.UpdateParamType.MaxUnavailablePercentage">
            <summary>
            Constant MaxUnavailablePercentage for UpdateParamType
            </summary>
        </member>
        <member name="F:Amazon.EKS.UpdateParamType.MinSize">
            <summary>
            Constant MinSize for UpdateParamType
            </summary>
        </member>
        <member name="F:Amazon.EKS.UpdateParamType.PlatformVersion">
            <summary>
            Constant PlatformVersion for UpdateParamType
            </summary>
        </member>
        <member name="F:Amazon.EKS.UpdateParamType.PublicAccessCidrs">
            <summary>
            Constant PublicAccessCidrs for UpdateParamType
            </summary>
        </member>
        <member name="F:Amazon.EKS.UpdateParamType.ReleaseVersion">
            <summary>
            Constant ReleaseVersion for UpdateParamType
            </summary>
        </member>
        <member name="F:Amazon.EKS.UpdateParamType.ResolveConflicts">
            <summary>
            Constant ResolveConflicts for UpdateParamType
            </summary>
        </member>
        <member name="F:Amazon.EKS.UpdateParamType.ServiceAccountRoleArn">
            <summary>
            Constant ServiceAccountRoleArn for UpdateParamType
            </summary>
        </member>
        <member name="F:Amazon.EKS.UpdateParamType.TaintsToAdd">
            <summary>
            Constant TaintsToAdd for UpdateParamType
            </summary>
        </member>
        <member name="F:Amazon.EKS.UpdateParamType.TaintsToRemove">
            <summary>
            Constant TaintsToRemove for UpdateParamType
            </summary>
        </member>
        <member name="F:Amazon.EKS.UpdateParamType.Version">
            <summary>
            Constant Version for UpdateParamType
            </summary>
        </member>
        <member name="M:Amazon.EKS.UpdateParamType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EKS.UpdateParamType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EKS.UpdateParamType.op_Implicit(System.String)~Amazon.EKS.UpdateParamType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EKS.UpdateStatus">
            <summary>
            Constants used for properties of type UpdateStatus.
            </summary>
        </member>
        <member name="F:Amazon.EKS.UpdateStatus.Cancelled">
            <summary>
            Constant Cancelled for UpdateStatus
            </summary>
        </member>
        <member name="F:Amazon.EKS.UpdateStatus.Failed">
            <summary>
            Constant Failed for UpdateStatus
            </summary>
        </member>
        <member name="F:Amazon.EKS.UpdateStatus.InProgress">
            <summary>
            Constant InProgress for UpdateStatus
            </summary>
        </member>
        <member name="F:Amazon.EKS.UpdateStatus.Successful">
            <summary>
            Constant Successful for UpdateStatus
            </summary>
        </member>
        <member name="M:Amazon.EKS.UpdateStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EKS.UpdateStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EKS.UpdateStatus.op_Implicit(System.String)~Amazon.EKS.UpdateStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EKS.UpdateType">
            <summary>
            Constants used for properties of type UpdateType.
            </summary>
        </member>
        <member name="F:Amazon.EKS.UpdateType.AddonUpdate">
            <summary>
            Constant AddonUpdate for UpdateType
            </summary>
        </member>
        <member name="F:Amazon.EKS.UpdateType.AssociateEncryptionConfig">
            <summary>
            Constant AssociateEncryptionConfig for UpdateType
            </summary>
        </member>
        <member name="F:Amazon.EKS.UpdateType.AssociateIdentityProviderConfig">
            <summary>
            Constant AssociateIdentityProviderConfig for UpdateType
            </summary>
        </member>
        <member name="F:Amazon.EKS.UpdateType.ConfigUpdate">
            <summary>
            Constant ConfigUpdate for UpdateType
            </summary>
        </member>
        <member name="F:Amazon.EKS.UpdateType.DisassociateIdentityProviderConfig">
            <summary>
            Constant DisassociateIdentityProviderConfig for UpdateType
            </summary>
        </member>
        <member name="F:Amazon.EKS.UpdateType.EndpointAccessUpdate">
            <summary>
            Constant EndpointAccessUpdate for UpdateType
            </summary>
        </member>
        <member name="F:Amazon.EKS.UpdateType.LoggingUpdate">
            <summary>
            Constant LoggingUpdate for UpdateType
            </summary>
        </member>
        <member name="F:Amazon.EKS.UpdateType.VersionUpdate">
            <summary>
            Constant VersionUpdate for UpdateType
            </summary>
        </member>
        <member name="M:Amazon.EKS.UpdateType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EKS.UpdateType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EKS.UpdateType.op_Implicit(System.String)~Amazon.EKS.UpdateType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EKS.AmazonEKSClient">
             <summary>
             Implementation for accessing EKS
            
             Amazon Elastic Kubernetes Service (Amazon EKS) is a managed service that makes it
             easy for you to run Kubernetes on Amazon Web Services without needing to stand up
             or maintain your own Kubernetes control plane. Kubernetes is an open-source system
             for automating the deployment, scaling, and management of containerized applications.
             
             
              
             <para>
             Amazon EKS runs up-to-date versions of the open-source Kubernetes software, so you
             can use all the existing plugins and tooling from the Kubernetes community. Applications
             running on Amazon EKS are fully compatible with applications running on any standard
             Kubernetes environment, whether running in on-premises data centers or public clouds.
             This means that you can easily migrate any standard Kubernetes application to Amazon
             EKS without any code modification required.
             </para>
             </summary>
        </member>
        <member name="P:Amazon.EKS.AmazonEKSClient.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.#ctor">
             <summary>
             Constructs AmazonEKSClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonEKSClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.#ctor(Amazon.EKS.AmazonEKSConfig)">
             <summary>
             Constructs AmazonEKSClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonEKSClient Configuration Object</param>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonEKSClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonEKSClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.EKS.AmazonEKSConfig)">
            <summary>
            Constructs AmazonEKSClient with AWS Credentials and an
            AmazonEKSClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonEKSClient Configuration Object</param>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonEKSClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonEKSClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.#ctor(System.String,System.String,Amazon.EKS.AmazonEKSConfig)">
            <summary>
            Constructs AmazonEKSClient with AWS Access Key ID, AWS Secret Key and an
            AmazonEKSClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonEKSClient Configuration Object</param>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonEKSClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonEKSClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.#ctor(System.String,System.String,System.String,Amazon.EKS.AmazonEKSConfig)">
            <summary>
            Constructs AmazonEKSClient with AWS Access Key ID, AWS Secret Key and an
            AmazonEKSClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonEKSClient Configuration Object</param>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="P:Amazon.EKS.AmazonEKSClient.ServiceMetadata">
            <summary>
            Capture metadata for the service.
            </summary>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.AssociateEncryptionConfig(Amazon.EKS.Model.AssociateEncryptionConfigRequest)">
            <summary>
            Associate encryption configuration to an existing cluster.
            
             
            <para>
            You can use this API to enable encryption on existing clusters which do not have encryption
            already enabled. This allows you to implement a defense-in-depth security strategy
            without migrating applications to new Amazon EKS clusters.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AssociateEncryptionConfig service method.</param>
            
            <returns>The response from the AssociateEncryptionConfig service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidRequestException">
            The request is invalid given the state of the cluster. Check the state of the cluster
            and the associated operations.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceInUseException">
            The specified resource is in use.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/AssociateEncryptionConfig">REST API Reference for AssociateEncryptionConfig Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.AssociateEncryptionConfigAsync(Amazon.EKS.Model.AssociateEncryptionConfigRequest,System.Threading.CancellationToken)">
            <summary>
            Associate encryption configuration to an existing cluster.
            
             
            <para>
            You can use this API to enable encryption on existing clusters which do not have encryption
            already enabled. This allows you to implement a defense-in-depth security strategy
            without migrating applications to new Amazon EKS clusters.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AssociateEncryptionConfig service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AssociateEncryptionConfig service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidRequestException">
            The request is invalid given the state of the cluster. Check the state of the cluster
            and the associated operations.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceInUseException">
            The specified resource is in use.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/AssociateEncryptionConfig">REST API Reference for AssociateEncryptionConfig Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.AssociateIdentityProviderConfig(Amazon.EKS.Model.AssociateIdentityProviderConfigRequest)">
            <summary>
            Associate an identity provider configuration to a cluster.
            
             
            <para>
            If you want to authenticate identities using an identity provider, you can create
            an identity provider configuration and associate it to your cluster. After configuring
            authentication to your cluster you can create Kubernetes <code>roles</code> and <code>clusterroles</code>
            to assign permissions to the roles, and then bind the roles to the identities using
            Kubernetes <code>rolebindings</code> and <code>clusterrolebindings</code>. For more
            information see <a href="https://kubernetes.io/docs/reference/access-authn-authz/rbac/">Using
            RBAC Authorization</a> in the Kubernetes documentation.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AssociateIdentityProviderConfig service method.</param>
            
            <returns>The response from the AssociateIdentityProviderConfig service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidRequestException">
            The request is invalid given the state of the cluster. Check the state of the cluster
            and the associated operations.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceInUseException">
            The specified resource is in use.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/AssociateIdentityProviderConfig">REST API Reference for AssociateIdentityProviderConfig Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.AssociateIdentityProviderConfigAsync(Amazon.EKS.Model.AssociateIdentityProviderConfigRequest,System.Threading.CancellationToken)">
            <summary>
            Associate an identity provider configuration to a cluster.
            
             
            <para>
            If you want to authenticate identities using an identity provider, you can create
            an identity provider configuration and associate it to your cluster. After configuring
            authentication to your cluster you can create Kubernetes <code>roles</code> and <code>clusterroles</code>
            to assign permissions to the roles, and then bind the roles to the identities using
            Kubernetes <code>rolebindings</code> and <code>clusterrolebindings</code>. For more
            information see <a href="https://kubernetes.io/docs/reference/access-authn-authz/rbac/">Using
            RBAC Authorization</a> in the Kubernetes documentation.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AssociateIdentityProviderConfig service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AssociateIdentityProviderConfig service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidRequestException">
            The request is invalid given the state of the cluster. Check the state of the cluster
            and the associated operations.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceInUseException">
            The specified resource is in use.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/AssociateIdentityProviderConfig">REST API Reference for AssociateIdentityProviderConfig Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.CreateAddon(Amazon.EKS.Model.CreateAddonRequest)">
            <summary>
            Creates an Amazon EKS add-on.
            
             
            <para>
            Amazon EKS add-ons help to automate the provisioning and lifecycle management of common
            operational software for Amazon EKS clusters. Amazon EKS add-ons can only be used
            with Amazon EKS clusters running version 1.18 with platform version <code>eks.3</code>
            or later because add-ons rely on the Server-side Apply Kubernetes feature, which is
            only available in Kubernetes 1.18 and later.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateAddon service method.</param>
            
            <returns>The response from the CreateAddon service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidRequestException">
            The request is invalid given the state of the cluster. Check the state of the cluster
            and the associated operations.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceInUseException">
            The specified resource is in use.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/CreateAddon">REST API Reference for CreateAddon Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.CreateAddonAsync(Amazon.EKS.Model.CreateAddonRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an Amazon EKS add-on.
            
             
            <para>
            Amazon EKS add-ons help to automate the provisioning and lifecycle management of common
            operational software for Amazon EKS clusters. Amazon EKS add-ons can only be used
            with Amazon EKS clusters running version 1.18 with platform version <code>eks.3</code>
            or later because add-ons rely on the Server-side Apply Kubernetes feature, which is
            only available in Kubernetes 1.18 and later.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateAddon service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateAddon service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidRequestException">
            The request is invalid given the state of the cluster. Check the state of the cluster
            and the associated operations.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceInUseException">
            The specified resource is in use.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/CreateAddon">REST API Reference for CreateAddon Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.CreateCluster(Amazon.EKS.Model.CreateClusterRequest)">
            <summary>
            Creates an Amazon EKS control plane. 
            
             
            <para>
            The Amazon EKS control plane consists of control plane instances that run the Kubernetes
            software, such as <code>etcd</code> and the API server. The control plane runs in
            an account managed by Amazon Web Services, and the Kubernetes API is exposed via the
            Amazon EKS API server endpoint. Each Amazon EKS cluster control plane is single-tenant
            and unique and runs on its own set of Amazon EC2 instances.
            </para>
             
            <para>
            The cluster control plane is provisioned across multiple Availability Zones and fronted
            by an Elastic Load Balancing Network Load Balancer. Amazon EKS also provisions elastic
            network interfaces in your VPC subnets to provide connectivity from the control plane
            instances to the nodes (for example, to support <code>kubectl exec</code>, <code>logs</code>,
            and <code>proxy</code> data flows).
            </para>
             
            <para>
            Amazon EKS nodes run in your Amazon Web Services account and connect to your cluster's
            control plane via the Kubernetes API server endpoint and a certificate file that is
            created for your cluster.
            </para>
             
            <para>
            Cluster creation typically takes several minutes. After you create an Amazon EKS cluster,
            you must configure your Kubernetes tooling to communicate with the API server and
            launch nodes into your cluster. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/managing-auth.html">Managing
            Cluster Authentication</a> and <a href="https://docs.aws.amazon.com/eks/latest/userguide/launch-workers.html">Launching
            Amazon EKS nodes</a> in the <i>Amazon EKS User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateCluster service method.</param>
            
            <returns>The response from the CreateCluster service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceInUseException">
            The specified resource is in use.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceLimitExceededException">
            You have encountered a service limit on the specified resource.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServiceUnavailableException">
            The service is unavailable. Back off and retry the operation.
            </exception>
            <exception cref="T:Amazon.EKS.Model.UnsupportedAvailabilityZoneException">
            At least one of your specified cluster subnets is in an Availability Zone that does
            not support Amazon EKS. The exception output specifies the supported Availability
            Zones for your account, from which you can choose subnets for your cluster.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/CreateCluster">REST API Reference for CreateCluster Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.CreateClusterAsync(Amazon.EKS.Model.CreateClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an Amazon EKS control plane. 
            
             
            <para>
            The Amazon EKS control plane consists of control plane instances that run the Kubernetes
            software, such as <code>etcd</code> and the API server. The control plane runs in
            an account managed by Amazon Web Services, and the Kubernetes API is exposed via the
            Amazon EKS API server endpoint. Each Amazon EKS cluster control plane is single-tenant
            and unique and runs on its own set of Amazon EC2 instances.
            </para>
             
            <para>
            The cluster control plane is provisioned across multiple Availability Zones and fronted
            by an Elastic Load Balancing Network Load Balancer. Amazon EKS also provisions elastic
            network interfaces in your VPC subnets to provide connectivity from the control plane
            instances to the nodes (for example, to support <code>kubectl exec</code>, <code>logs</code>,
            and <code>proxy</code> data flows).
            </para>
             
            <para>
            Amazon EKS nodes run in your Amazon Web Services account and connect to your cluster's
            control plane via the Kubernetes API server endpoint and a certificate file that is
            created for your cluster.
            </para>
             
            <para>
            Cluster creation typically takes several minutes. After you create an Amazon EKS cluster,
            you must configure your Kubernetes tooling to communicate with the API server and
            launch nodes into your cluster. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/managing-auth.html">Managing
            Cluster Authentication</a> and <a href="https://docs.aws.amazon.com/eks/latest/userguide/launch-workers.html">Launching
            Amazon EKS nodes</a> in the <i>Amazon EKS User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateCluster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateCluster service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceInUseException">
            The specified resource is in use.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceLimitExceededException">
            You have encountered a service limit on the specified resource.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServiceUnavailableException">
            The service is unavailable. Back off and retry the operation.
            </exception>
            <exception cref="T:Amazon.EKS.Model.UnsupportedAvailabilityZoneException">
            At least one of your specified cluster subnets is in an Availability Zone that does
            not support Amazon EKS. The exception output specifies the supported Availability
            Zones for your account, from which you can choose subnets for your cluster.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/CreateCluster">REST API Reference for CreateCluster Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.CreateFargateProfile(Amazon.EKS.Model.CreateFargateProfileRequest)">
            <summary>
            Creates an Fargate profile for your Amazon EKS cluster. You must have at least one
            Fargate profile in a cluster to be able to run pods on Fargate.
            
             
            <para>
            The Fargate profile allows an administrator to declare which pods run on Fargate and
            specify which pods run on which Fargate profile. This declaration is done through
            the profile’s selectors. Each profile can have up to five selectors that contain a
            namespace and labels. A namespace is required for every selector. The label field
            consists of multiple optional key-value pairs. Pods that match the selectors are scheduled
            on Fargate. If a to-be-scheduled pod matches any of the selectors in the Fargate profile,
            then that pod is run on Fargate.
            </para>
             
            <para>
            When you create a Fargate profile, you must specify a pod execution role to use with
            the pods that are scheduled with the profile. This role is added to the cluster's
            Kubernetes <a href="https://kubernetes.io/docs/admin/authorization/rbac/">Role Based
            Access Control</a> (RBAC) for authorization so that the <code>kubelet</code> that
            is running on the Fargate infrastructure can register with your Amazon EKS cluster
            so that it can appear in your cluster as a node. The pod execution role also provides
            IAM permissions to the Fargate infrastructure to allow read access to Amazon ECR image
            repositories. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/pod-execution-role.html">Pod
            Execution Role</a> in the <i>Amazon EKS User Guide</i>.
            </para>
             
            <para>
            Fargate profiles are immutable. However, you can create a new updated profile to replace
            an existing profile and then delete the original after the updated profile has finished
            creating.
            </para>
             
            <para>
            If any Fargate profiles in a cluster are in the <code>DELETING</code> status, you
            must wait for that Fargate profile to finish deleting before you can create any other
            profiles in that cluster.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/fargate-profile.html">Fargate
            Profile</a> in the <i>Amazon EKS User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateFargateProfile service method.</param>
            
            <returns>The response from the CreateFargateProfile service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidRequestException">
            The request is invalid given the state of the cluster. Check the state of the cluster
            and the associated operations.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceLimitExceededException">
            You have encountered a service limit on the specified resource.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.EKS.Model.UnsupportedAvailabilityZoneException">
            At least one of your specified cluster subnets is in an Availability Zone that does
            not support Amazon EKS. The exception output specifies the supported Availability
            Zones for your account, from which you can choose subnets for your cluster.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/CreateFargateProfile">REST API Reference for CreateFargateProfile Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.CreateFargateProfileAsync(Amazon.EKS.Model.CreateFargateProfileRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an Fargate profile for your Amazon EKS cluster. You must have at least one
            Fargate profile in a cluster to be able to run pods on Fargate.
            
             
            <para>
            The Fargate profile allows an administrator to declare which pods run on Fargate and
            specify which pods run on which Fargate profile. This declaration is done through
            the profile’s selectors. Each profile can have up to five selectors that contain a
            namespace and labels. A namespace is required for every selector. The label field
            consists of multiple optional key-value pairs. Pods that match the selectors are scheduled
            on Fargate. If a to-be-scheduled pod matches any of the selectors in the Fargate profile,
            then that pod is run on Fargate.
            </para>
             
            <para>
            When you create a Fargate profile, you must specify a pod execution role to use with
            the pods that are scheduled with the profile. This role is added to the cluster's
            Kubernetes <a href="https://kubernetes.io/docs/admin/authorization/rbac/">Role Based
            Access Control</a> (RBAC) for authorization so that the <code>kubelet</code> that
            is running on the Fargate infrastructure can register with your Amazon EKS cluster
            so that it can appear in your cluster as a node. The pod execution role also provides
            IAM permissions to the Fargate infrastructure to allow read access to Amazon ECR image
            repositories. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/pod-execution-role.html">Pod
            Execution Role</a> in the <i>Amazon EKS User Guide</i>.
            </para>
             
            <para>
            Fargate profiles are immutable. However, you can create a new updated profile to replace
            an existing profile and then delete the original after the updated profile has finished
            creating.
            </para>
             
            <para>
            If any Fargate profiles in a cluster are in the <code>DELETING</code> status, you
            must wait for that Fargate profile to finish deleting before you can create any other
            profiles in that cluster.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/fargate-profile.html">Fargate
            Profile</a> in the <i>Amazon EKS User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateFargateProfile service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateFargateProfile service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidRequestException">
            The request is invalid given the state of the cluster. Check the state of the cluster
            and the associated operations.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceLimitExceededException">
            You have encountered a service limit on the specified resource.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.EKS.Model.UnsupportedAvailabilityZoneException">
            At least one of your specified cluster subnets is in an Availability Zone that does
            not support Amazon EKS. The exception output specifies the supported Availability
            Zones for your account, from which you can choose subnets for your cluster.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/CreateFargateProfile">REST API Reference for CreateFargateProfile Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.CreateNodegroup(Amazon.EKS.Model.CreateNodegroupRequest)">
            <summary>
            Creates a managed node group for an Amazon EKS cluster. You can only create a node
            group for your cluster that is equal to the current Kubernetes version for the cluster.
            All node groups are created with the latest AMI release version for the respective
            minor Kubernetes version of the cluster, unless you deploy a custom AMI using a launch
            template. For more information about using launch templates, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html">Launch
            template support</a>.
            
             
            <para>
            An Amazon EKS managed node group is an Amazon EC2 Auto Scaling group and associated
            Amazon EC2 instances that are managed by Amazon Web Services for an Amazon EKS cluster.
            Each node group uses a version of the Amazon EKS optimized Amazon Linux 2 AMI. For
            more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/managed-node-groups.html">Managed
            Node Groups</a> in the <i>Amazon EKS User Guide</i>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateNodegroup service method.</param>
            
            <returns>The response from the CreateNodegroup service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidRequestException">
            The request is invalid given the state of the cluster. Check the state of the cluster
            and the associated operations.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceInUseException">
            The specified resource is in use.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceLimitExceededException">
            You have encountered a service limit on the specified resource.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServiceUnavailableException">
            The service is unavailable. Back off and retry the operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/CreateNodegroup">REST API Reference for CreateNodegroup Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.CreateNodegroupAsync(Amazon.EKS.Model.CreateNodegroupRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a managed node group for an Amazon EKS cluster. You can only create a node
            group for your cluster that is equal to the current Kubernetes version for the cluster.
            All node groups are created with the latest AMI release version for the respective
            minor Kubernetes version of the cluster, unless you deploy a custom AMI using a launch
            template. For more information about using launch templates, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html">Launch
            template support</a>.
            
             
            <para>
            An Amazon EKS managed node group is an Amazon EC2 Auto Scaling group and associated
            Amazon EC2 instances that are managed by Amazon Web Services for an Amazon EKS cluster.
            Each node group uses a version of the Amazon EKS optimized Amazon Linux 2 AMI. For
            more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/managed-node-groups.html">Managed
            Node Groups</a> in the <i>Amazon EKS User Guide</i>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateNodegroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateNodegroup service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidRequestException">
            The request is invalid given the state of the cluster. Check the state of the cluster
            and the associated operations.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceInUseException">
            The specified resource is in use.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceLimitExceededException">
            You have encountered a service limit on the specified resource.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServiceUnavailableException">
            The service is unavailable. Back off and retry the operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/CreateNodegroup">REST API Reference for CreateNodegroup Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.DeleteAddon(Amazon.EKS.Model.DeleteAddonRequest)">
            <summary>
            Delete an Amazon EKS add-on.
            
             
            <para>
            When you remove the add-on, it will also be deleted from the cluster. You can always
            manually start an add-on on the cluster using the Kubernetes API.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteAddon service method.</param>
            
            <returns>The response from the DeleteAddon service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidRequestException">
            The request is invalid given the state of the cluster. Check the state of the cluster
            and the associated operations.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DeleteAddon">REST API Reference for DeleteAddon Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.DeleteAddonAsync(Amazon.EKS.Model.DeleteAddonRequest,System.Threading.CancellationToken)">
            <summary>
            Delete an Amazon EKS add-on.
            
             
            <para>
            When you remove the add-on, it will also be deleted from the cluster. You can always
            manually start an add-on on the cluster using the Kubernetes API.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteAddon service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteAddon service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidRequestException">
            The request is invalid given the state of the cluster. Check the state of the cluster
            and the associated operations.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DeleteAddon">REST API Reference for DeleteAddon Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.DeleteCluster(Amazon.EKS.Model.DeleteClusterRequest)">
            <summary>
            Deletes the Amazon EKS cluster control plane.
            
             
            <para>
            If you have active services in your cluster that are associated with a load balancer,
            you must delete those services before deleting the cluster so that the load balancers
            are deleted properly. Otherwise, you can have orphaned resources in your VPC that
            prevent you from being able to delete the VPC. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/delete-cluster.html">Deleting
            a Cluster</a> in the <i>Amazon EKS User Guide</i>.
            </para>
             
            <para>
            If you have managed node groups or Fargate profiles attached to the cluster, you must
            delete them first. For more information, see <a>DeleteNodegroup</a> and <a>DeleteFargateProfile</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteCluster service method.</param>
            
            <returns>The response from the DeleteCluster service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceInUseException">
            The specified resource is in use.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServiceUnavailableException">
            The service is unavailable. Back off and retry the operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DeleteCluster">REST API Reference for DeleteCluster Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.DeleteClusterAsync(Amazon.EKS.Model.DeleteClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the Amazon EKS cluster control plane.
            
             
            <para>
            If you have active services in your cluster that are associated with a load balancer,
            you must delete those services before deleting the cluster so that the load balancers
            are deleted properly. Otherwise, you can have orphaned resources in your VPC that
            prevent you from being able to delete the VPC. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/delete-cluster.html">Deleting
            a Cluster</a> in the <i>Amazon EKS User Guide</i>.
            </para>
             
            <para>
            If you have managed node groups or Fargate profiles attached to the cluster, you must
            delete them first. For more information, see <a>DeleteNodegroup</a> and <a>DeleteFargateProfile</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteCluster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteCluster service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceInUseException">
            The specified resource is in use.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServiceUnavailableException">
            The service is unavailable. Back off and retry the operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DeleteCluster">REST API Reference for DeleteCluster Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.DeleteFargateProfile(Amazon.EKS.Model.DeleteFargateProfileRequest)">
            <summary>
            Deletes an Fargate profile.
            
             
            <para>
            When you delete a Fargate profile, any pods running on Fargate that were created with
            the profile are deleted. If those pods match another Fargate profile, then they are
            scheduled on Fargate with that profile. If they no longer match any Fargate profiles,
            then they are not scheduled on Fargate and they may remain in a pending state.
            </para>
             
            <para>
            Only one Fargate profile in a cluster can be in the <code>DELETING</code> status at
            a time. You must wait for a Fargate profile to finish deleting before you can delete
            any other profiles in that cluster.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteFargateProfile service method.</param>
            
            <returns>The response from the DeleteFargateProfile service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DeleteFargateProfile">REST API Reference for DeleteFargateProfile Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.DeleteFargateProfileAsync(Amazon.EKS.Model.DeleteFargateProfileRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes an Fargate profile.
            
             
            <para>
            When you delete a Fargate profile, any pods running on Fargate that were created with
            the profile are deleted. If those pods match another Fargate profile, then they are
            scheduled on Fargate with that profile. If they no longer match any Fargate profiles,
            then they are not scheduled on Fargate and they may remain in a pending state.
            </para>
             
            <para>
            Only one Fargate profile in a cluster can be in the <code>DELETING</code> status at
            a time. You must wait for a Fargate profile to finish deleting before you can delete
            any other profiles in that cluster.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteFargateProfile service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteFargateProfile service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DeleteFargateProfile">REST API Reference for DeleteFargateProfile Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.DeleteNodegroup(Amazon.EKS.Model.DeleteNodegroupRequest)">
            <summary>
            Deletes an Amazon EKS node group for a cluster.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteNodegroup service method.</param>
            
            <returns>The response from the DeleteNodegroup service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceInUseException">
            The specified resource is in use.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServiceUnavailableException">
            The service is unavailable. Back off and retry the operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DeleteNodegroup">REST API Reference for DeleteNodegroup Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.DeleteNodegroupAsync(Amazon.EKS.Model.DeleteNodegroupRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes an Amazon EKS node group for a cluster.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteNodegroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteNodegroup service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceInUseException">
            The specified resource is in use.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServiceUnavailableException">
            The service is unavailable. Back off and retry the operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DeleteNodegroup">REST API Reference for DeleteNodegroup Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.DeregisterCluster(Amazon.EKS.Model.DeregisterClusterRequest)">
            <summary>
            Deregisters a connected cluster to remove it from the Amazon EKS control plane.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeregisterCluster service method.</param>
            
            <returns>The response from the DeregisterCluster service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceInUseException">
            The specified resource is in use.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServiceUnavailableException">
            The service is unavailable. Back off and retry the operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DeregisterCluster">REST API Reference for DeregisterCluster Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.DeregisterClusterAsync(Amazon.EKS.Model.DeregisterClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Deregisters a connected cluster to remove it from the Amazon EKS control plane.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeregisterCluster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeregisterCluster service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceInUseException">
            The specified resource is in use.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServiceUnavailableException">
            The service is unavailable. Back off and retry the operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DeregisterCluster">REST API Reference for DeregisterCluster Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.DescribeAddon(Amazon.EKS.Model.DescribeAddonRequest)">
            <summary>
            Describes an Amazon EKS add-on.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeAddon service method.</param>
            
            <returns>The response from the DescribeAddon service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidRequestException">
            The request is invalid given the state of the cluster. Check the state of the cluster
            and the associated operations.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DescribeAddon">REST API Reference for DescribeAddon Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.DescribeAddonAsync(Amazon.EKS.Model.DescribeAddonRequest,System.Threading.CancellationToken)">
            <summary>
            Describes an Amazon EKS add-on.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeAddon service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeAddon service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidRequestException">
            The request is invalid given the state of the cluster. Check the state of the cluster
            and the associated operations.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DescribeAddon">REST API Reference for DescribeAddon Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.DescribeAddonVersions(Amazon.EKS.Model.DescribeAddonVersionsRequest)">
            <summary>
            Describes the Kubernetes versions that the add-on can be used with.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeAddonVersions service method.</param>
            
            <returns>The response from the DescribeAddonVersions service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DescribeAddonVersions">REST API Reference for DescribeAddonVersions Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.DescribeAddonVersionsAsync(Amazon.EKS.Model.DescribeAddonVersionsRequest,System.Threading.CancellationToken)">
            <summary>
            Describes the Kubernetes versions that the add-on can be used with.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeAddonVersions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeAddonVersions service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DescribeAddonVersions">REST API Reference for DescribeAddonVersions Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.DescribeCluster(Amazon.EKS.Model.DescribeClusterRequest)">
            <summary>
            Returns descriptive information about an Amazon EKS cluster.
            
             
            <para>
            The API server endpoint and certificate authority data returned by this operation
            are required for <code>kubelet</code> and <code>kubectl</code> to communicate with
            your Kubernetes API server. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/create-kubeconfig.html">Create
            a kubeconfig for Amazon EKS</a>.
            </para>
             <note> 
            <para>
            The API server endpoint and certificate authority data aren't available until the
            cluster reaches the <code>ACTIVE</code> state.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeCluster service method.</param>
            
            <returns>The response from the DescribeCluster service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServiceUnavailableException">
            The service is unavailable. Back off and retry the operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DescribeCluster">REST API Reference for DescribeCluster Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.DescribeClusterAsync(Amazon.EKS.Model.DescribeClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Returns descriptive information about an Amazon EKS cluster.
            
             
            <para>
            The API server endpoint and certificate authority data returned by this operation
            are required for <code>kubelet</code> and <code>kubectl</code> to communicate with
            your Kubernetes API server. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/create-kubeconfig.html">Create
            a kubeconfig for Amazon EKS</a>.
            </para>
             <note> 
            <para>
            The API server endpoint and certificate authority data aren't available until the
            cluster reaches the <code>ACTIVE</code> state.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeCluster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeCluster service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServiceUnavailableException">
            The service is unavailable. Back off and retry the operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DescribeCluster">REST API Reference for DescribeCluster Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.DescribeFargateProfile(Amazon.EKS.Model.DescribeFargateProfileRequest)">
            <summary>
            Returns descriptive information about an Fargate profile.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeFargateProfile service method.</param>
            
            <returns>The response from the DescribeFargateProfile service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DescribeFargateProfile">REST API Reference for DescribeFargateProfile Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.DescribeFargateProfileAsync(Amazon.EKS.Model.DescribeFargateProfileRequest,System.Threading.CancellationToken)">
            <summary>
            Returns descriptive information about an Fargate profile.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeFargateProfile service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeFargateProfile service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DescribeFargateProfile">REST API Reference for DescribeFargateProfile Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.DescribeIdentityProviderConfig(Amazon.EKS.Model.DescribeIdentityProviderConfigRequest)">
            <summary>
            Returns descriptive information about an identity provider configuration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeIdentityProviderConfig service method.</param>
            
            <returns>The response from the DescribeIdentityProviderConfig service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServiceUnavailableException">
            The service is unavailable. Back off and retry the operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DescribeIdentityProviderConfig">REST API Reference for DescribeIdentityProviderConfig Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.DescribeIdentityProviderConfigAsync(Amazon.EKS.Model.DescribeIdentityProviderConfigRequest,System.Threading.CancellationToken)">
            <summary>
            Returns descriptive information about an identity provider configuration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeIdentityProviderConfig service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeIdentityProviderConfig service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServiceUnavailableException">
            The service is unavailable. Back off and retry the operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DescribeIdentityProviderConfig">REST API Reference for DescribeIdentityProviderConfig Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.DescribeNodegroup(Amazon.EKS.Model.DescribeNodegroupRequest)">
            <summary>
            Returns descriptive information about an Amazon EKS node group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeNodegroup service method.</param>
            
            <returns>The response from the DescribeNodegroup service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServiceUnavailableException">
            The service is unavailable. Back off and retry the operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DescribeNodegroup">REST API Reference for DescribeNodegroup Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.DescribeNodegroupAsync(Amazon.EKS.Model.DescribeNodegroupRequest,System.Threading.CancellationToken)">
            <summary>
            Returns descriptive information about an Amazon EKS node group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeNodegroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeNodegroup service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServiceUnavailableException">
            The service is unavailable. Back off and retry the operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DescribeNodegroup">REST API Reference for DescribeNodegroup Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.DescribeUpdate(Amazon.EKS.Model.DescribeUpdateRequest)">
            <summary>
            Returns descriptive information about an update against your Amazon EKS cluster or
            associated managed node group.
            
             
            <para>
            When the status of the update is <code>Succeeded</code>, the update is complete. If
            an update fails, the status is <code>Failed</code>, and an error detail explains the
            reason for the failure.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeUpdate service method.</param>
            
            <returns>The response from the DescribeUpdate service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DescribeUpdate">REST API Reference for DescribeUpdate Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.DescribeUpdateAsync(Amazon.EKS.Model.DescribeUpdateRequest,System.Threading.CancellationToken)">
            <summary>
            Returns descriptive information about an update against your Amazon EKS cluster or
            associated managed node group.
            
             
            <para>
            When the status of the update is <code>Succeeded</code>, the update is complete. If
            an update fails, the status is <code>Failed</code>, and an error detail explains the
            reason for the failure.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeUpdate service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeUpdate service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DescribeUpdate">REST API Reference for DescribeUpdate Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.DisassociateIdentityProviderConfig(Amazon.EKS.Model.DisassociateIdentityProviderConfigRequest)">
            <summary>
            Disassociates an identity provider configuration from a cluster. If you disassociate
            an identity provider from your cluster, users included in the provider can no longer
            access the cluster. However, you can still access the cluster with Amazon Web Services
            IAM users.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DisassociateIdentityProviderConfig service method.</param>
            
            <returns>The response from the DisassociateIdentityProviderConfig service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidRequestException">
            The request is invalid given the state of the cluster. Check the state of the cluster
            and the associated operations.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceInUseException">
            The specified resource is in use.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DisassociateIdentityProviderConfig">REST API Reference for DisassociateIdentityProviderConfig Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.DisassociateIdentityProviderConfigAsync(Amazon.EKS.Model.DisassociateIdentityProviderConfigRequest,System.Threading.CancellationToken)">
            <summary>
            Disassociates an identity provider configuration from a cluster. If you disassociate
            an identity provider from your cluster, users included in the provider can no longer
            access the cluster. However, you can still access the cluster with Amazon Web Services
            IAM users.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DisassociateIdentityProviderConfig service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DisassociateIdentityProviderConfig service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidRequestException">
            The request is invalid given the state of the cluster. Check the state of the cluster
            and the associated operations.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceInUseException">
            The specified resource is in use.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DisassociateIdentityProviderConfig">REST API Reference for DisassociateIdentityProviderConfig Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.ListAddons(Amazon.EKS.Model.ListAddonsRequest)">
            <summary>
            Lists the available add-ons.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListAddons service method.</param>
            
            <returns>The response from the ListAddons service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidRequestException">
            The request is invalid given the state of the cluster. Check the state of the cluster
            and the associated operations.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/ListAddons">REST API Reference for ListAddons Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.ListAddonsAsync(Amazon.EKS.Model.ListAddonsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the available add-ons.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListAddons service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListAddons service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidRequestException">
            The request is invalid given the state of the cluster. Check the state of the cluster
            and the associated operations.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/ListAddons">REST API Reference for ListAddons Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.ListClusters(Amazon.EKS.Model.ListClustersRequest)">
            <summary>
            Lists the Amazon EKS clusters in your Amazon Web Services account in the specified
            Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListClusters service method.</param>
            
            <returns>The response from the ListClusters service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServiceUnavailableException">
            The service is unavailable. Back off and retry the operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/ListClusters">REST API Reference for ListClusters Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.ListClustersAsync(Amazon.EKS.Model.ListClustersRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the Amazon EKS clusters in your Amazon Web Services account in the specified
            Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListClusters service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListClusters service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServiceUnavailableException">
            The service is unavailable. Back off and retry the operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/ListClusters">REST API Reference for ListClusters Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.ListFargateProfiles(Amazon.EKS.Model.ListFargateProfilesRequest)">
            <summary>
            Lists the Fargate profiles associated with the specified cluster in your Amazon Web
            Services account in the specified Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListFargateProfiles service method.</param>
            
            <returns>The response from the ListFargateProfiles service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/ListFargateProfiles">REST API Reference for ListFargateProfiles Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.ListFargateProfilesAsync(Amazon.EKS.Model.ListFargateProfilesRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the Fargate profiles associated with the specified cluster in your Amazon Web
            Services account in the specified Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListFargateProfiles service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListFargateProfiles service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/ListFargateProfiles">REST API Reference for ListFargateProfiles Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.ListIdentityProviderConfigs(Amazon.EKS.Model.ListIdentityProviderConfigsRequest)">
            <summary>
            A list of identity provider configurations.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListIdentityProviderConfigs service method.</param>
            
            <returns>The response from the ListIdentityProviderConfigs service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServiceUnavailableException">
            The service is unavailable. Back off and retry the operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/ListIdentityProviderConfigs">REST API Reference for ListIdentityProviderConfigs Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.ListIdentityProviderConfigsAsync(Amazon.EKS.Model.ListIdentityProviderConfigsRequest,System.Threading.CancellationToken)">
            <summary>
            A list of identity provider configurations.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListIdentityProviderConfigs service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListIdentityProviderConfigs service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServiceUnavailableException">
            The service is unavailable. Back off and retry the operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/ListIdentityProviderConfigs">REST API Reference for ListIdentityProviderConfigs Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.ListNodegroups(Amazon.EKS.Model.ListNodegroupsRequest)">
            <summary>
            Lists the Amazon EKS managed node groups associated with the specified cluster in
            your Amazon Web Services account in the specified Region. Self-managed node groups
            are not listed.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListNodegroups service method.</param>
            
            <returns>The response from the ListNodegroups service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServiceUnavailableException">
            The service is unavailable. Back off and retry the operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/ListNodegroups">REST API Reference for ListNodegroups Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.ListNodegroupsAsync(Amazon.EKS.Model.ListNodegroupsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the Amazon EKS managed node groups associated with the specified cluster in
            your Amazon Web Services account in the specified Region. Self-managed node groups
            are not listed.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListNodegroups service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListNodegroups service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServiceUnavailableException">
            The service is unavailable. Back off and retry the operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/ListNodegroups">REST API Reference for ListNodegroups Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.ListTagsForResource(Amazon.EKS.Model.ListTagsForResourceRequest)">
            <summary>
            List the tags for an Amazon EKS resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            
            <returns>The response from the ListTagsForResource service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.BadRequestException">
            This exception is thrown if the request contains a semantic error. The precise meaning
            will depend on the API, and will be documented in the error message.
            </exception>
            <exception cref="T:Amazon.EKS.Model.NotFoundException">
            A service resource associated with the request could not be found. Clients should
            not retry such requests.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.ListTagsForResourceAsync(Amazon.EKS.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            List the tags for an Amazon EKS resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.BadRequestException">
            This exception is thrown if the request contains a semantic error. The precise meaning
            will depend on the API, and will be documented in the error message.
            </exception>
            <exception cref="T:Amazon.EKS.Model.NotFoundException">
            A service resource associated with the request could not be found. Clients should
            not retry such requests.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.ListUpdates(Amazon.EKS.Model.ListUpdatesRequest)">
            <summary>
            Lists the updates associated with an Amazon EKS cluster or managed node group in your
            Amazon Web Services account, in the specified Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListUpdates service method.</param>
            
            <returns>The response from the ListUpdates service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/ListUpdates">REST API Reference for ListUpdates Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.ListUpdatesAsync(Amazon.EKS.Model.ListUpdatesRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the updates associated with an Amazon EKS cluster or managed node group in your
            Amazon Web Services account, in the specified Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListUpdates service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListUpdates service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/ListUpdates">REST API Reference for ListUpdates Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.RegisterCluster(Amazon.EKS.Model.RegisterClusterRequest)">
            <summary>
            Connects a Kubernetes cluster to the Amazon EKS control plane. 
            
             
            <para>
            Any Kubernetes cluster can be connected to the Amazon EKS control plane to view current
            information about the cluster and its nodes. 
            </para>
             
            <para>
            Cluster connection requires two steps. First, send a <code> <a>RegisterClusterRequest</a>
            </code> to add it to the Amazon EKS control plane.
            </para>
             
            <para>
            Second, a <a href="https://amazon-eks.s3.us-west-2.amazonaws.com/eks-connector/manifests/eks-connector/latest/eks-connector.yaml">Manifest</a>
            containing the <code>activationID</code> and <code>activationCode</code> must be applied
            to the Kubernetes cluster through it's native provider to provide visibility.
            </para>
             
            <para>
            After the Manifest is updated and applied, then the connected cluster is visible to
            the Amazon EKS control plane. If the Manifest is not applied within a set amount of
            time, then the connected cluster will no longer be visible and must be deregistered.
            See <a>DeregisterCluster</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RegisterCluster service method.</param>
            
            <returns>The response from the RegisterCluster service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceLimitExceededException">
            You have encountered a service limit on the specified resource.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServiceUnavailableException">
            The service is unavailable. Back off and retry the operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/RegisterCluster">REST API Reference for RegisterCluster Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.RegisterClusterAsync(Amazon.EKS.Model.RegisterClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Connects a Kubernetes cluster to the Amazon EKS control plane. 
            
             
            <para>
            Any Kubernetes cluster can be connected to the Amazon EKS control plane to view current
            information about the cluster and its nodes. 
            </para>
             
            <para>
            Cluster connection requires two steps. First, send a <code> <a>RegisterClusterRequest</a>
            </code> to add it to the Amazon EKS control plane.
            </para>
             
            <para>
            Second, a <a href="https://amazon-eks.s3.us-west-2.amazonaws.com/eks-connector/manifests/eks-connector/latest/eks-connector.yaml">Manifest</a>
            containing the <code>activationID</code> and <code>activationCode</code> must be applied
            to the Kubernetes cluster through it's native provider to provide visibility.
            </para>
             
            <para>
            After the Manifest is updated and applied, then the connected cluster is visible to
            the Amazon EKS control plane. If the Manifest is not applied within a set amount of
            time, then the connected cluster will no longer be visible and must be deregistered.
            See <a>DeregisterCluster</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RegisterCluster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RegisterCluster service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceLimitExceededException">
            You have encountered a service limit on the specified resource.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServiceUnavailableException">
            The service is unavailable. Back off and retry the operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/RegisterCluster">REST API Reference for RegisterCluster Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.TagResource(Amazon.EKS.Model.TagResourceRequest)">
            <summary>
            Associates the specified tags to a resource with the specified <code>resourceArn</code>.
            If existing tags on a resource are not specified in the request parameters, they are
            not changed. When a resource is deleted, the tags associated with that resource are
            deleted as well. Tags that you create for Amazon EKS resources do not propagate to
            any other resources associated with the cluster. For example, if you tag a cluster
            with this operation, that tag does not automatically propagate to the subnets and
            nodes associated with the cluster.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            
            <returns>The response from the TagResource service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.BadRequestException">
            This exception is thrown if the request contains a semantic error. The precise meaning
            will depend on the API, and will be documented in the error message.
            </exception>
            <exception cref="T:Amazon.EKS.Model.NotFoundException">
            A service resource associated with the request could not be found. Clients should
            not retry such requests.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.TagResourceAsync(Amazon.EKS.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Associates the specified tags to a resource with the specified <code>resourceArn</code>.
            If existing tags on a resource are not specified in the request parameters, they are
            not changed. When a resource is deleted, the tags associated with that resource are
            deleted as well. Tags that you create for Amazon EKS resources do not propagate to
            any other resources associated with the cluster. For example, if you tag a cluster
            with this operation, that tag does not automatically propagate to the subnets and
            nodes associated with the cluster.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.BadRequestException">
            This exception is thrown if the request contains a semantic error. The precise meaning
            will depend on the API, and will be documented in the error message.
            </exception>
            <exception cref="T:Amazon.EKS.Model.NotFoundException">
            A service resource associated with the request could not be found. Clients should
            not retry such requests.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.UntagResource(Amazon.EKS.Model.UntagResourceRequest)">
            <summary>
            Deletes specified tags from a resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            
            <returns>The response from the UntagResource service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.BadRequestException">
            This exception is thrown if the request contains a semantic error. The precise meaning
            will depend on the API, and will be documented in the error message.
            </exception>
            <exception cref="T:Amazon.EKS.Model.NotFoundException">
            A service resource associated with the request could not be found. Clients should
            not retry such requests.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.UntagResourceAsync(Amazon.EKS.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes specified tags from a resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.BadRequestException">
            This exception is thrown if the request contains a semantic error. The precise meaning
            will depend on the API, and will be documented in the error message.
            </exception>
            <exception cref="T:Amazon.EKS.Model.NotFoundException">
            A service resource associated with the request could not be found. Clients should
            not retry such requests.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.UpdateAddon(Amazon.EKS.Model.UpdateAddonRequest)">
            <summary>
            Updates an Amazon EKS add-on.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateAddon service method.</param>
            
            <returns>The response from the UpdateAddon service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidRequestException">
            The request is invalid given the state of the cluster. Check the state of the cluster
            and the associated operations.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceInUseException">
            The specified resource is in use.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/UpdateAddon">REST API Reference for UpdateAddon Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.UpdateAddonAsync(Amazon.EKS.Model.UpdateAddonRequest,System.Threading.CancellationToken)">
            <summary>
            Updates an Amazon EKS add-on.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateAddon service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateAddon service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidRequestException">
            The request is invalid given the state of the cluster. Check the state of the cluster
            and the associated operations.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceInUseException">
            The specified resource is in use.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/UpdateAddon">REST API Reference for UpdateAddon Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.UpdateClusterConfig(Amazon.EKS.Model.UpdateClusterConfigRequest)">
            <summary>
            Updates an Amazon EKS cluster configuration. Your cluster continues to function during
            the update. The response output includes an update ID that you can use to track the
            status of your cluster update with the <a>DescribeUpdate</a> API operation.
            
             
            <para>
            You can use this API operation to enable or disable exporting the Kubernetes control
            plane logs for your cluster to CloudWatch Logs. By default, cluster control plane
            logs aren't exported to CloudWatch Logs. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html">Amazon
            EKS Cluster Control Plane Logs</a> in the <i> <i>Amazon EKS User Guide</i> </i>.
            </para>
             <note> 
            <para>
            CloudWatch Logs ingestion, archive storage, and data scanning rates apply to exported
            control plane logs. For more information, see <a href="http://aws.amazon.com/cloudwatch/pricing/">CloudWatch
            Pricing</a>.
            </para>
             </note> 
            <para>
            You can also use this API operation to enable or disable public and private access
            to your cluster's Kubernetes API server endpoint. By default, public access is enabled,
            and private access is disabled. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html">Amazon
            EKS cluster endpoint access control</a> in the <i> <i>Amazon EKS User Guide</i> </i>.
            
            </para>
             <important> 
            <para>
            You can't update the subnets or security group IDs for an existing cluster.
            </para>
             </important> 
            <para>
            Cluster updates are asynchronous, and they should finish within a few minutes. During
            an update, the cluster status moves to <code>UPDATING</code> (this status transition
            is eventually consistent). When the update is complete (either <code>Failed</code>
            or <code>Successful</code>), the cluster status moves to <code>Active</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateClusterConfig service method.</param>
            
            <returns>The response from the UpdateClusterConfig service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidRequestException">
            The request is invalid given the state of the cluster. Check the state of the cluster
            and the associated operations.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceInUseException">
            The specified resource is in use.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/UpdateClusterConfig">REST API Reference for UpdateClusterConfig Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.UpdateClusterConfigAsync(Amazon.EKS.Model.UpdateClusterConfigRequest,System.Threading.CancellationToken)">
            <summary>
            Updates an Amazon EKS cluster configuration. Your cluster continues to function during
            the update. The response output includes an update ID that you can use to track the
            status of your cluster update with the <a>DescribeUpdate</a> API operation.
            
             
            <para>
            You can use this API operation to enable or disable exporting the Kubernetes control
            plane logs for your cluster to CloudWatch Logs. By default, cluster control plane
            logs aren't exported to CloudWatch Logs. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html">Amazon
            EKS Cluster Control Plane Logs</a> in the <i> <i>Amazon EKS User Guide</i> </i>.
            </para>
             <note> 
            <para>
            CloudWatch Logs ingestion, archive storage, and data scanning rates apply to exported
            control plane logs. For more information, see <a href="http://aws.amazon.com/cloudwatch/pricing/">CloudWatch
            Pricing</a>.
            </para>
             </note> 
            <para>
            You can also use this API operation to enable or disable public and private access
            to your cluster's Kubernetes API server endpoint. By default, public access is enabled,
            and private access is disabled. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html">Amazon
            EKS cluster endpoint access control</a> in the <i> <i>Amazon EKS User Guide</i> </i>.
            
            </para>
             <important> 
            <para>
            You can't update the subnets or security group IDs for an existing cluster.
            </para>
             </important> 
            <para>
            Cluster updates are asynchronous, and they should finish within a few minutes. During
            an update, the cluster status moves to <code>UPDATING</code> (this status transition
            is eventually consistent). When the update is complete (either <code>Failed</code>
            or <code>Successful</code>), the cluster status moves to <code>Active</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateClusterConfig service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateClusterConfig service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidRequestException">
            The request is invalid given the state of the cluster. Check the state of the cluster
            and the associated operations.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceInUseException">
            The specified resource is in use.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/UpdateClusterConfig">REST API Reference for UpdateClusterConfig Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.UpdateClusterVersion(Amazon.EKS.Model.UpdateClusterVersionRequest)">
            <summary>
            Updates an Amazon EKS cluster to the specified Kubernetes version. Your cluster continues
            to function during the update. The response output includes an update ID that you
            can use to track the status of your cluster update with the <a>DescribeUpdate</a>
            API operation.
            
             
            <para>
            Cluster updates are asynchronous, and they should finish within a few minutes. During
            an update, the cluster status moves to <code>UPDATING</code> (this status transition
            is eventually consistent). When the update is complete (either <code>Failed</code>
            or <code>Successful</code>), the cluster status moves to <code>Active</code>.
            </para>
             
            <para>
            If your cluster has managed node groups attached to it, all of your node groups’ Kubernetes
            versions must match the cluster’s Kubernetes version in order to update the cluster
            to a new Kubernetes version.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateClusterVersion service method.</param>
            
            <returns>The response from the UpdateClusterVersion service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidRequestException">
            The request is invalid given the state of the cluster. Check the state of the cluster
            and the associated operations.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceInUseException">
            The specified resource is in use.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/UpdateClusterVersion">REST API Reference for UpdateClusterVersion Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.UpdateClusterVersionAsync(Amazon.EKS.Model.UpdateClusterVersionRequest,System.Threading.CancellationToken)">
            <summary>
            Updates an Amazon EKS cluster to the specified Kubernetes version. Your cluster continues
            to function during the update. The response output includes an update ID that you
            can use to track the status of your cluster update with the <a>DescribeUpdate</a>
            API operation.
            
             
            <para>
            Cluster updates are asynchronous, and they should finish within a few minutes. During
            an update, the cluster status moves to <code>UPDATING</code> (this status transition
            is eventually consistent). When the update is complete (either <code>Failed</code>
            or <code>Successful</code>), the cluster status moves to <code>Active</code>.
            </para>
             
            <para>
            If your cluster has managed node groups attached to it, all of your node groups’ Kubernetes
            versions must match the cluster’s Kubernetes version in order to update the cluster
            to a new Kubernetes version.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateClusterVersion service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateClusterVersion service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidRequestException">
            The request is invalid given the state of the cluster. Check the state of the cluster
            and the associated operations.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceInUseException">
            The specified resource is in use.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/UpdateClusterVersion">REST API Reference for UpdateClusterVersion Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.UpdateNodegroupConfig(Amazon.EKS.Model.UpdateNodegroupConfigRequest)">
            <summary>
            Updates an Amazon EKS managed node group configuration. Your node group continues
            to function during the update. The response output includes an update ID that you
            can use to track the status of your node group update with the <a>DescribeUpdate</a>
            API operation. Currently you can update the Kubernetes labels for a node group or
            the scaling configuration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateNodegroupConfig service method.</param>
            
            <returns>The response from the UpdateNodegroupConfig service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidRequestException">
            The request is invalid given the state of the cluster. Check the state of the cluster
            and the associated operations.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceInUseException">
            The specified resource is in use.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/UpdateNodegroupConfig">REST API Reference for UpdateNodegroupConfig Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.UpdateNodegroupConfigAsync(Amazon.EKS.Model.UpdateNodegroupConfigRequest,System.Threading.CancellationToken)">
            <summary>
            Updates an Amazon EKS managed node group configuration. Your node group continues
            to function during the update. The response output includes an update ID that you
            can use to track the status of your node group update with the <a>DescribeUpdate</a>
            API operation. Currently you can update the Kubernetes labels for a node group or
            the scaling configuration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateNodegroupConfig service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateNodegroupConfig service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidRequestException">
            The request is invalid given the state of the cluster. Check the state of the cluster
            and the associated operations.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceInUseException">
            The specified resource is in use.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/UpdateNodegroupConfig">REST API Reference for UpdateNodegroupConfig Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.UpdateNodegroupVersion(Amazon.EKS.Model.UpdateNodegroupVersionRequest)">
            <summary>
            Updates the Kubernetes version or AMI version of an Amazon EKS managed node group.
            
             
            <para>
            You can update a node group using a launch template only if the node group was originally
            deployed with a launch template. If you need to update a custom AMI in a node group
            that was deployed with a launch template, then update your custom AMI, specify the
            new ID in a new version of the launch template, and then update the node group to
            the new version of the launch template.
            </para>
             
            <para>
            If you update without a launch template, then you can update to the latest available
            AMI version of a node group's current Kubernetes version by not specifying a Kubernetes
            version in the request. You can update to the latest AMI version of your cluster's
            current Kubernetes version by specifying your cluster's Kubernetes version in the
            request. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/eks-linux-ami-versions.html">Amazon
            EKS optimized Amazon Linux 2 AMI versions</a> in the <i>Amazon EKS User Guide</i>.
            </para>
             
            <para>
            You cannot roll back a node group to an earlier Kubernetes version or AMI version.
            </para>
             
            <para>
            When a node in a managed node group is terminated due to a scaling action or update,
            the pods in that node are drained first. Amazon EKS attempts to drain the nodes gracefully
            and will fail if it is unable to do so. You can <code>force</code> the update if Amazon
            EKS is unable to drain the nodes as a result of a pod disruption budget issue.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateNodegroupVersion service method.</param>
            
            <returns>The response from the UpdateNodegroupVersion service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidRequestException">
            The request is invalid given the state of the cluster. Check the state of the cluster
            and the associated operations.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceInUseException">
            The specified resource is in use.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/UpdateNodegroupVersion">REST API Reference for UpdateNodegroupVersion Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.UpdateNodegroupVersionAsync(Amazon.EKS.Model.UpdateNodegroupVersionRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the Kubernetes version or AMI version of an Amazon EKS managed node group.
            
             
            <para>
            You can update a node group using a launch template only if the node group was originally
            deployed with a launch template. If you need to update a custom AMI in a node group
            that was deployed with a launch template, then update your custom AMI, specify the
            new ID in a new version of the launch template, and then update the node group to
            the new version of the launch template.
            </para>
             
            <para>
            If you update without a launch template, then you can update to the latest available
            AMI version of a node group's current Kubernetes version by not specifying a Kubernetes
            version in the request. You can update to the latest AMI version of your cluster's
            current Kubernetes version by specifying your cluster's Kubernetes version in the
            request. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/eks-linux-ami-versions.html">Amazon
            EKS optimized Amazon Linux 2 AMI versions</a> in the <i>Amazon EKS User Guide</i>.
            </para>
             
            <para>
            You cannot roll back a node group to an earlier Kubernetes version or AMI version.
            </para>
             
            <para>
            When a node in a managed node group is terminated due to a scaling action or update,
            the pods in that node are drained first. Amazon EKS attempts to drain the nodes gracefully
            and will fail if it is unable to do so. You can <code>force</code> the update if Amazon
            EKS is unable to drain the nodes as a result of a pod disruption budget issue.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateNodegroupVersion service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateNodegroupVersion service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidRequestException">
            The request is invalid given the state of the cluster. Check the state of the cluster
            and the associated operations.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceInUseException">
            The specified resource is in use.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/UpdateNodegroupVersion">REST API Reference for UpdateNodegroupVersion Operation</seealso>
        </member>
        <member name="T:Amazon.EKS.IAmazonEKS">
             <summary>
             Interface for accessing EKS
            
             Amazon Elastic Kubernetes Service (Amazon EKS) is a managed service that makes it
             easy for you to run Kubernetes on Amazon Web Services without needing to stand up
             or maintain your own Kubernetes control plane. Kubernetes is an open-source system
             for automating the deployment, scaling, and management of containerized applications.
             
             
              
             <para>
             Amazon EKS runs up-to-date versions of the open-source Kubernetes software, so you
             can use all the existing plugins and tooling from the Kubernetes community. Applications
             running on Amazon EKS are fully compatible with applications running on any standard
             Kubernetes environment, whether running in on-premises data centers or public clouds.
             This means that you can easily migrate any standard Kubernetes application to Amazon
             EKS without any code modification required.
             </para>
             </summary>
        </member>
        <member name="P:Amazon.EKS.IAmazonEKS.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.AssociateEncryptionConfig(Amazon.EKS.Model.AssociateEncryptionConfigRequest)">
            <summary>
            Associate encryption configuration to an existing cluster.
            
             
            <para>
            You can use this API to enable encryption on existing clusters which do not have encryption
            already enabled. This allows you to implement a defense-in-depth security strategy
            without migrating applications to new Amazon EKS clusters.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AssociateEncryptionConfig service method.</param>
            
            <returns>The response from the AssociateEncryptionConfig service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidRequestException">
            The request is invalid given the state of the cluster. Check the state of the cluster
            and the associated operations.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceInUseException">
            The specified resource is in use.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/AssociateEncryptionConfig">REST API Reference for AssociateEncryptionConfig Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.AssociateEncryptionConfigAsync(Amazon.EKS.Model.AssociateEncryptionConfigRequest,System.Threading.CancellationToken)">
            <summary>
            Associate encryption configuration to an existing cluster.
            
             
            <para>
            You can use this API to enable encryption on existing clusters which do not have encryption
            already enabled. This allows you to implement a defense-in-depth security strategy
            without migrating applications to new Amazon EKS clusters.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AssociateEncryptionConfig service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AssociateEncryptionConfig service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidRequestException">
            The request is invalid given the state of the cluster. Check the state of the cluster
            and the associated operations.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceInUseException">
            The specified resource is in use.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/AssociateEncryptionConfig">REST API Reference for AssociateEncryptionConfig Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.AssociateIdentityProviderConfig(Amazon.EKS.Model.AssociateIdentityProviderConfigRequest)">
            <summary>
            Associate an identity provider configuration to a cluster.
            
             
            <para>
            If you want to authenticate identities using an identity provider, you can create
            an identity provider configuration and associate it to your cluster. After configuring
            authentication to your cluster you can create Kubernetes <code>roles</code> and <code>clusterroles</code>
            to assign permissions to the roles, and then bind the roles to the identities using
            Kubernetes <code>rolebindings</code> and <code>clusterrolebindings</code>. For more
            information see <a href="https://kubernetes.io/docs/reference/access-authn-authz/rbac/">Using
            RBAC Authorization</a> in the Kubernetes documentation.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AssociateIdentityProviderConfig service method.</param>
            
            <returns>The response from the AssociateIdentityProviderConfig service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidRequestException">
            The request is invalid given the state of the cluster. Check the state of the cluster
            and the associated operations.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceInUseException">
            The specified resource is in use.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/AssociateIdentityProviderConfig">REST API Reference for AssociateIdentityProviderConfig Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.AssociateIdentityProviderConfigAsync(Amazon.EKS.Model.AssociateIdentityProviderConfigRequest,System.Threading.CancellationToken)">
            <summary>
            Associate an identity provider configuration to a cluster.
            
             
            <para>
            If you want to authenticate identities using an identity provider, you can create
            an identity provider configuration and associate it to your cluster. After configuring
            authentication to your cluster you can create Kubernetes <code>roles</code> and <code>clusterroles</code>
            to assign permissions to the roles, and then bind the roles to the identities using
            Kubernetes <code>rolebindings</code> and <code>clusterrolebindings</code>. For more
            information see <a href="https://kubernetes.io/docs/reference/access-authn-authz/rbac/">Using
            RBAC Authorization</a> in the Kubernetes documentation.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AssociateIdentityProviderConfig service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AssociateIdentityProviderConfig service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidRequestException">
            The request is invalid given the state of the cluster. Check the state of the cluster
            and the associated operations.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceInUseException">
            The specified resource is in use.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/AssociateIdentityProviderConfig">REST API Reference for AssociateIdentityProviderConfig Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.CreateAddon(Amazon.EKS.Model.CreateAddonRequest)">
            <summary>
            Creates an Amazon EKS add-on.
            
             
            <para>
            Amazon EKS add-ons help to automate the provisioning and lifecycle management of common
            operational software for Amazon EKS clusters. Amazon EKS add-ons can only be used
            with Amazon EKS clusters running version 1.18 with platform version <code>eks.3</code>
            or later because add-ons rely on the Server-side Apply Kubernetes feature, which is
            only available in Kubernetes 1.18 and later.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateAddon service method.</param>
            
            <returns>The response from the CreateAddon service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidRequestException">
            The request is invalid given the state of the cluster. Check the state of the cluster
            and the associated operations.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceInUseException">
            The specified resource is in use.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/CreateAddon">REST API Reference for CreateAddon Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.CreateAddonAsync(Amazon.EKS.Model.CreateAddonRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an Amazon EKS add-on.
            
             
            <para>
            Amazon EKS add-ons help to automate the provisioning and lifecycle management of common
            operational software for Amazon EKS clusters. Amazon EKS add-ons can only be used
            with Amazon EKS clusters running version 1.18 with platform version <code>eks.3</code>
            or later because add-ons rely on the Server-side Apply Kubernetes feature, which is
            only available in Kubernetes 1.18 and later.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateAddon service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateAddon service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidRequestException">
            The request is invalid given the state of the cluster. Check the state of the cluster
            and the associated operations.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceInUseException">
            The specified resource is in use.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/CreateAddon">REST API Reference for CreateAddon Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.CreateCluster(Amazon.EKS.Model.CreateClusterRequest)">
            <summary>
            Creates an Amazon EKS control plane. 
            
             
            <para>
            The Amazon EKS control plane consists of control plane instances that run the Kubernetes
            software, such as <code>etcd</code> and the API server. The control plane runs in
            an account managed by Amazon Web Services, and the Kubernetes API is exposed via the
            Amazon EKS API server endpoint. Each Amazon EKS cluster control plane is single-tenant
            and unique and runs on its own set of Amazon EC2 instances.
            </para>
             
            <para>
            The cluster control plane is provisioned across multiple Availability Zones and fronted
            by an Elastic Load Balancing Network Load Balancer. Amazon EKS also provisions elastic
            network interfaces in your VPC subnets to provide connectivity from the control plane
            instances to the nodes (for example, to support <code>kubectl exec</code>, <code>logs</code>,
            and <code>proxy</code> data flows).
            </para>
             
            <para>
            Amazon EKS nodes run in your Amazon Web Services account and connect to your cluster's
            control plane via the Kubernetes API server endpoint and a certificate file that is
            created for your cluster.
            </para>
             
            <para>
            Cluster creation typically takes several minutes. After you create an Amazon EKS cluster,
            you must configure your Kubernetes tooling to communicate with the API server and
            launch nodes into your cluster. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/managing-auth.html">Managing
            Cluster Authentication</a> and <a href="https://docs.aws.amazon.com/eks/latest/userguide/launch-workers.html">Launching
            Amazon EKS nodes</a> in the <i>Amazon EKS User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateCluster service method.</param>
            
            <returns>The response from the CreateCluster service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceInUseException">
            The specified resource is in use.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceLimitExceededException">
            You have encountered a service limit on the specified resource.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServiceUnavailableException">
            The service is unavailable. Back off and retry the operation.
            </exception>
            <exception cref="T:Amazon.EKS.Model.UnsupportedAvailabilityZoneException">
            At least one of your specified cluster subnets is in an Availability Zone that does
            not support Amazon EKS. The exception output specifies the supported Availability
            Zones for your account, from which you can choose subnets for your cluster.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/CreateCluster">REST API Reference for CreateCluster Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.CreateClusterAsync(Amazon.EKS.Model.CreateClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an Amazon EKS control plane. 
            
             
            <para>
            The Amazon EKS control plane consists of control plane instances that run the Kubernetes
            software, such as <code>etcd</code> and the API server. The control plane runs in
            an account managed by Amazon Web Services, and the Kubernetes API is exposed via the
            Amazon EKS API server endpoint. Each Amazon EKS cluster control plane is single-tenant
            and unique and runs on its own set of Amazon EC2 instances.
            </para>
             
            <para>
            The cluster control plane is provisioned across multiple Availability Zones and fronted
            by an Elastic Load Balancing Network Load Balancer. Amazon EKS also provisions elastic
            network interfaces in your VPC subnets to provide connectivity from the control plane
            instances to the nodes (for example, to support <code>kubectl exec</code>, <code>logs</code>,
            and <code>proxy</code> data flows).
            </para>
             
            <para>
            Amazon EKS nodes run in your Amazon Web Services account and connect to your cluster's
            control plane via the Kubernetes API server endpoint and a certificate file that is
            created for your cluster.
            </para>
             
            <para>
            Cluster creation typically takes several minutes. After you create an Amazon EKS cluster,
            you must configure your Kubernetes tooling to communicate with the API server and
            launch nodes into your cluster. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/managing-auth.html">Managing
            Cluster Authentication</a> and <a href="https://docs.aws.amazon.com/eks/latest/userguide/launch-workers.html">Launching
            Amazon EKS nodes</a> in the <i>Amazon EKS User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateCluster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateCluster service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceInUseException">
            The specified resource is in use.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceLimitExceededException">
            You have encountered a service limit on the specified resource.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServiceUnavailableException">
            The service is unavailable. Back off and retry the operation.
            </exception>
            <exception cref="T:Amazon.EKS.Model.UnsupportedAvailabilityZoneException">
            At least one of your specified cluster subnets is in an Availability Zone that does
            not support Amazon EKS. The exception output specifies the supported Availability
            Zones for your account, from which you can choose subnets for your cluster.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/CreateCluster">REST API Reference for CreateCluster Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.CreateFargateProfile(Amazon.EKS.Model.CreateFargateProfileRequest)">
            <summary>
            Creates an Fargate profile for your Amazon EKS cluster. You must have at least one
            Fargate profile in a cluster to be able to run pods on Fargate.
            
             
            <para>
            The Fargate profile allows an administrator to declare which pods run on Fargate and
            specify which pods run on which Fargate profile. This declaration is done through
            the profile’s selectors. Each profile can have up to five selectors that contain a
            namespace and labels. A namespace is required for every selector. The label field
            consists of multiple optional key-value pairs. Pods that match the selectors are scheduled
            on Fargate. If a to-be-scheduled pod matches any of the selectors in the Fargate profile,
            then that pod is run on Fargate.
            </para>
             
            <para>
            When you create a Fargate profile, you must specify a pod execution role to use with
            the pods that are scheduled with the profile. This role is added to the cluster's
            Kubernetes <a href="https://kubernetes.io/docs/admin/authorization/rbac/">Role Based
            Access Control</a> (RBAC) for authorization so that the <code>kubelet</code> that
            is running on the Fargate infrastructure can register with your Amazon EKS cluster
            so that it can appear in your cluster as a node. The pod execution role also provides
            IAM permissions to the Fargate infrastructure to allow read access to Amazon ECR image
            repositories. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/pod-execution-role.html">Pod
            Execution Role</a> in the <i>Amazon EKS User Guide</i>.
            </para>
             
            <para>
            Fargate profiles are immutable. However, you can create a new updated profile to replace
            an existing profile and then delete the original after the updated profile has finished
            creating.
            </para>
             
            <para>
            If any Fargate profiles in a cluster are in the <code>DELETING</code> status, you
            must wait for that Fargate profile to finish deleting before you can create any other
            profiles in that cluster.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/fargate-profile.html">Fargate
            Profile</a> in the <i>Amazon EKS User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateFargateProfile service method.</param>
            
            <returns>The response from the CreateFargateProfile service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidRequestException">
            The request is invalid given the state of the cluster. Check the state of the cluster
            and the associated operations.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceLimitExceededException">
            You have encountered a service limit on the specified resource.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.EKS.Model.UnsupportedAvailabilityZoneException">
            At least one of your specified cluster subnets is in an Availability Zone that does
            not support Amazon EKS. The exception output specifies the supported Availability
            Zones for your account, from which you can choose subnets for your cluster.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/CreateFargateProfile">REST API Reference for CreateFargateProfile Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.CreateFargateProfileAsync(Amazon.EKS.Model.CreateFargateProfileRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an Fargate profile for your Amazon EKS cluster. You must have at least one
            Fargate profile in a cluster to be able to run pods on Fargate.
            
             
            <para>
            The Fargate profile allows an administrator to declare which pods run on Fargate and
            specify which pods run on which Fargate profile. This declaration is done through
            the profile’s selectors. Each profile can have up to five selectors that contain a
            namespace and labels. A namespace is required for every selector. The label field
            consists of multiple optional key-value pairs. Pods that match the selectors are scheduled
            on Fargate. If a to-be-scheduled pod matches any of the selectors in the Fargate profile,
            then that pod is run on Fargate.
            </para>
             
            <para>
            When you create a Fargate profile, you must specify a pod execution role to use with
            the pods that are scheduled with the profile. This role is added to the cluster's
            Kubernetes <a href="https://kubernetes.io/docs/admin/authorization/rbac/">Role Based
            Access Control</a> (RBAC) for authorization so that the <code>kubelet</code> that
            is running on the Fargate infrastructure can register with your Amazon EKS cluster
            so that it can appear in your cluster as a node. The pod execution role also provides
            IAM permissions to the Fargate infrastructure to allow read access to Amazon ECR image
            repositories. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/pod-execution-role.html">Pod
            Execution Role</a> in the <i>Amazon EKS User Guide</i>.
            </para>
             
            <para>
            Fargate profiles are immutable. However, you can create a new updated profile to replace
            an existing profile and then delete the original after the updated profile has finished
            creating.
            </para>
             
            <para>
            If any Fargate profiles in a cluster are in the <code>DELETING</code> status, you
            must wait for that Fargate profile to finish deleting before you can create any other
            profiles in that cluster.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/fargate-profile.html">Fargate
            Profile</a> in the <i>Amazon EKS User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateFargateProfile service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateFargateProfile service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidRequestException">
            The request is invalid given the state of the cluster. Check the state of the cluster
            and the associated operations.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceLimitExceededException">
            You have encountered a service limit on the specified resource.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.EKS.Model.UnsupportedAvailabilityZoneException">
            At least one of your specified cluster subnets is in an Availability Zone that does
            not support Amazon EKS. The exception output specifies the supported Availability
            Zones for your account, from which you can choose subnets for your cluster.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/CreateFargateProfile">REST API Reference for CreateFargateProfile Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.CreateNodegroup(Amazon.EKS.Model.CreateNodegroupRequest)">
            <summary>
            Creates a managed node group for an Amazon EKS cluster. You can only create a node
            group for your cluster that is equal to the current Kubernetes version for the cluster.
            All node groups are created with the latest AMI release version for the respective
            minor Kubernetes version of the cluster, unless you deploy a custom AMI using a launch
            template. For more information about using launch templates, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html">Launch
            template support</a>.
            
             
            <para>
            An Amazon EKS managed node group is an Amazon EC2 Auto Scaling group and associated
            Amazon EC2 instances that are managed by Amazon Web Services for an Amazon EKS cluster.
            Each node group uses a version of the Amazon EKS optimized Amazon Linux 2 AMI. For
            more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/managed-node-groups.html">Managed
            Node Groups</a> in the <i>Amazon EKS User Guide</i>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateNodegroup service method.</param>
            
            <returns>The response from the CreateNodegroup service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidRequestException">
            The request is invalid given the state of the cluster. Check the state of the cluster
            and the associated operations.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceInUseException">
            The specified resource is in use.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceLimitExceededException">
            You have encountered a service limit on the specified resource.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServiceUnavailableException">
            The service is unavailable. Back off and retry the operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/CreateNodegroup">REST API Reference for CreateNodegroup Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.CreateNodegroupAsync(Amazon.EKS.Model.CreateNodegroupRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a managed node group for an Amazon EKS cluster. You can only create a node
            group for your cluster that is equal to the current Kubernetes version for the cluster.
            All node groups are created with the latest AMI release version for the respective
            minor Kubernetes version of the cluster, unless you deploy a custom AMI using a launch
            template. For more information about using launch templates, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html">Launch
            template support</a>.
            
             
            <para>
            An Amazon EKS managed node group is an Amazon EC2 Auto Scaling group and associated
            Amazon EC2 instances that are managed by Amazon Web Services for an Amazon EKS cluster.
            Each node group uses a version of the Amazon EKS optimized Amazon Linux 2 AMI. For
            more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/managed-node-groups.html">Managed
            Node Groups</a> in the <i>Amazon EKS User Guide</i>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateNodegroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateNodegroup service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidRequestException">
            The request is invalid given the state of the cluster. Check the state of the cluster
            and the associated operations.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceInUseException">
            The specified resource is in use.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceLimitExceededException">
            You have encountered a service limit on the specified resource.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServiceUnavailableException">
            The service is unavailable. Back off and retry the operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/CreateNodegroup">REST API Reference for CreateNodegroup Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.DeleteAddon(Amazon.EKS.Model.DeleteAddonRequest)">
            <summary>
            Delete an Amazon EKS add-on.
            
             
            <para>
            When you remove the add-on, it will also be deleted from the cluster. You can always
            manually start an add-on on the cluster using the Kubernetes API.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteAddon service method.</param>
            
            <returns>The response from the DeleteAddon service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidRequestException">
            The request is invalid given the state of the cluster. Check the state of the cluster
            and the associated operations.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DeleteAddon">REST API Reference for DeleteAddon Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.DeleteAddonAsync(Amazon.EKS.Model.DeleteAddonRequest,System.Threading.CancellationToken)">
            <summary>
            Delete an Amazon EKS add-on.
            
             
            <para>
            When you remove the add-on, it will also be deleted from the cluster. You can always
            manually start an add-on on the cluster using the Kubernetes API.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteAddon service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteAddon service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidRequestException">
            The request is invalid given the state of the cluster. Check the state of the cluster
            and the associated operations.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DeleteAddon">REST API Reference for DeleteAddon Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.DeleteCluster(Amazon.EKS.Model.DeleteClusterRequest)">
            <summary>
            Deletes the Amazon EKS cluster control plane.
            
             
            <para>
            If you have active services in your cluster that are associated with a load balancer,
            you must delete those services before deleting the cluster so that the load balancers
            are deleted properly. Otherwise, you can have orphaned resources in your VPC that
            prevent you from being able to delete the VPC. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/delete-cluster.html">Deleting
            a Cluster</a> in the <i>Amazon EKS User Guide</i>.
            </para>
             
            <para>
            If you have managed node groups or Fargate profiles attached to the cluster, you must
            delete them first. For more information, see <a>DeleteNodegroup</a> and <a>DeleteFargateProfile</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteCluster service method.</param>
            
            <returns>The response from the DeleteCluster service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceInUseException">
            The specified resource is in use.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServiceUnavailableException">
            The service is unavailable. Back off and retry the operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DeleteCluster">REST API Reference for DeleteCluster Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.DeleteClusterAsync(Amazon.EKS.Model.DeleteClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the Amazon EKS cluster control plane.
            
             
            <para>
            If you have active services in your cluster that are associated with a load balancer,
            you must delete those services before deleting the cluster so that the load balancers
            are deleted properly. Otherwise, you can have orphaned resources in your VPC that
            prevent you from being able to delete the VPC. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/delete-cluster.html">Deleting
            a Cluster</a> in the <i>Amazon EKS User Guide</i>.
            </para>
             
            <para>
            If you have managed node groups or Fargate profiles attached to the cluster, you must
            delete them first. For more information, see <a>DeleteNodegroup</a> and <a>DeleteFargateProfile</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteCluster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteCluster service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceInUseException">
            The specified resource is in use.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServiceUnavailableException">
            The service is unavailable. Back off and retry the operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DeleteCluster">REST API Reference for DeleteCluster Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.DeleteFargateProfile(Amazon.EKS.Model.DeleteFargateProfileRequest)">
            <summary>
            Deletes an Fargate profile.
            
             
            <para>
            When you delete a Fargate profile, any pods running on Fargate that were created with
            the profile are deleted. If those pods match another Fargate profile, then they are
            scheduled on Fargate with that profile. If they no longer match any Fargate profiles,
            then they are not scheduled on Fargate and they may remain in a pending state.
            </para>
             
            <para>
            Only one Fargate profile in a cluster can be in the <code>DELETING</code> status at
            a time. You must wait for a Fargate profile to finish deleting before you can delete
            any other profiles in that cluster.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteFargateProfile service method.</param>
            
            <returns>The response from the DeleteFargateProfile service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DeleteFargateProfile">REST API Reference for DeleteFargateProfile Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.DeleteFargateProfileAsync(Amazon.EKS.Model.DeleteFargateProfileRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes an Fargate profile.
            
             
            <para>
            When you delete a Fargate profile, any pods running on Fargate that were created with
            the profile are deleted. If those pods match another Fargate profile, then they are
            scheduled on Fargate with that profile. If they no longer match any Fargate profiles,
            then they are not scheduled on Fargate and they may remain in a pending state.
            </para>
             
            <para>
            Only one Fargate profile in a cluster can be in the <code>DELETING</code> status at
            a time. You must wait for a Fargate profile to finish deleting before you can delete
            any other profiles in that cluster.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteFargateProfile service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteFargateProfile service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DeleteFargateProfile">REST API Reference for DeleteFargateProfile Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.DeleteNodegroup(Amazon.EKS.Model.DeleteNodegroupRequest)">
            <summary>
            Deletes an Amazon EKS node group for a cluster.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteNodegroup service method.</param>
            
            <returns>The response from the DeleteNodegroup service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceInUseException">
            The specified resource is in use.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServiceUnavailableException">
            The service is unavailable. Back off and retry the operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DeleteNodegroup">REST API Reference for DeleteNodegroup Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.DeleteNodegroupAsync(Amazon.EKS.Model.DeleteNodegroupRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes an Amazon EKS node group for a cluster.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteNodegroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteNodegroup service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceInUseException">
            The specified resource is in use.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServiceUnavailableException">
            The service is unavailable. Back off and retry the operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DeleteNodegroup">REST API Reference for DeleteNodegroup Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.DeregisterCluster(Amazon.EKS.Model.DeregisterClusterRequest)">
            <summary>
            Deregisters a connected cluster to remove it from the Amazon EKS control plane.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeregisterCluster service method.</param>
            
            <returns>The response from the DeregisterCluster service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceInUseException">
            The specified resource is in use.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServiceUnavailableException">
            The service is unavailable. Back off and retry the operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DeregisterCluster">REST API Reference for DeregisterCluster Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.DeregisterClusterAsync(Amazon.EKS.Model.DeregisterClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Deregisters a connected cluster to remove it from the Amazon EKS control plane.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeregisterCluster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeregisterCluster service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceInUseException">
            The specified resource is in use.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServiceUnavailableException">
            The service is unavailable. Back off and retry the operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DeregisterCluster">REST API Reference for DeregisterCluster Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.DescribeAddon(Amazon.EKS.Model.DescribeAddonRequest)">
            <summary>
            Describes an Amazon EKS add-on.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeAddon service method.</param>
            
            <returns>The response from the DescribeAddon service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidRequestException">
            The request is invalid given the state of the cluster. Check the state of the cluster
            and the associated operations.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DescribeAddon">REST API Reference for DescribeAddon Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.DescribeAddonAsync(Amazon.EKS.Model.DescribeAddonRequest,System.Threading.CancellationToken)">
            <summary>
            Describes an Amazon EKS add-on.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeAddon service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeAddon service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidRequestException">
            The request is invalid given the state of the cluster. Check the state of the cluster
            and the associated operations.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DescribeAddon">REST API Reference for DescribeAddon Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.DescribeAddonVersions(Amazon.EKS.Model.DescribeAddonVersionsRequest)">
            <summary>
            Describes the Kubernetes versions that the add-on can be used with.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeAddonVersions service method.</param>
            
            <returns>The response from the DescribeAddonVersions service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DescribeAddonVersions">REST API Reference for DescribeAddonVersions Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.DescribeAddonVersionsAsync(Amazon.EKS.Model.DescribeAddonVersionsRequest,System.Threading.CancellationToken)">
            <summary>
            Describes the Kubernetes versions that the add-on can be used with.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeAddonVersions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeAddonVersions service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DescribeAddonVersions">REST API Reference for DescribeAddonVersions Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.DescribeCluster(Amazon.EKS.Model.DescribeClusterRequest)">
            <summary>
            Returns descriptive information about an Amazon EKS cluster.
            
             
            <para>
            The API server endpoint and certificate authority data returned by this operation
            are required for <code>kubelet</code> and <code>kubectl</code> to communicate with
            your Kubernetes API server. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/create-kubeconfig.html">Create
            a kubeconfig for Amazon EKS</a>.
            </para>
             <note> 
            <para>
            The API server endpoint and certificate authority data aren't available until the
            cluster reaches the <code>ACTIVE</code> state.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeCluster service method.</param>
            
            <returns>The response from the DescribeCluster service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServiceUnavailableException">
            The service is unavailable. Back off and retry the operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DescribeCluster">REST API Reference for DescribeCluster Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.DescribeClusterAsync(Amazon.EKS.Model.DescribeClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Returns descriptive information about an Amazon EKS cluster.
            
             
            <para>
            The API server endpoint and certificate authority data returned by this operation
            are required for <code>kubelet</code> and <code>kubectl</code> to communicate with
            your Kubernetes API server. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/create-kubeconfig.html">Create
            a kubeconfig for Amazon EKS</a>.
            </para>
             <note> 
            <para>
            The API server endpoint and certificate authority data aren't available until the
            cluster reaches the <code>ACTIVE</code> state.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeCluster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeCluster service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServiceUnavailableException">
            The service is unavailable. Back off and retry the operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DescribeCluster">REST API Reference for DescribeCluster Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.DescribeFargateProfile(Amazon.EKS.Model.DescribeFargateProfileRequest)">
            <summary>
            Returns descriptive information about an Fargate profile.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeFargateProfile service method.</param>
            
            <returns>The response from the DescribeFargateProfile service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DescribeFargateProfile">REST API Reference for DescribeFargateProfile Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.DescribeFargateProfileAsync(Amazon.EKS.Model.DescribeFargateProfileRequest,System.Threading.CancellationToken)">
            <summary>
            Returns descriptive information about an Fargate profile.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeFargateProfile service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeFargateProfile service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DescribeFargateProfile">REST API Reference for DescribeFargateProfile Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.DescribeIdentityProviderConfig(Amazon.EKS.Model.DescribeIdentityProviderConfigRequest)">
            <summary>
            Returns descriptive information about an identity provider configuration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeIdentityProviderConfig service method.</param>
            
            <returns>The response from the DescribeIdentityProviderConfig service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServiceUnavailableException">
            The service is unavailable. Back off and retry the operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DescribeIdentityProviderConfig">REST API Reference for DescribeIdentityProviderConfig Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.DescribeIdentityProviderConfigAsync(Amazon.EKS.Model.DescribeIdentityProviderConfigRequest,System.Threading.CancellationToken)">
            <summary>
            Returns descriptive information about an identity provider configuration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeIdentityProviderConfig service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeIdentityProviderConfig service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServiceUnavailableException">
            The service is unavailable. Back off and retry the operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DescribeIdentityProviderConfig">REST API Reference for DescribeIdentityProviderConfig Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.DescribeNodegroup(Amazon.EKS.Model.DescribeNodegroupRequest)">
            <summary>
            Returns descriptive information about an Amazon EKS node group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeNodegroup service method.</param>
            
            <returns>The response from the DescribeNodegroup service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServiceUnavailableException">
            The service is unavailable. Back off and retry the operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DescribeNodegroup">REST API Reference for DescribeNodegroup Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.DescribeNodegroupAsync(Amazon.EKS.Model.DescribeNodegroupRequest,System.Threading.CancellationToken)">
            <summary>
            Returns descriptive information about an Amazon EKS node group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeNodegroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeNodegroup service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServiceUnavailableException">
            The service is unavailable. Back off and retry the operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DescribeNodegroup">REST API Reference for DescribeNodegroup Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.DescribeUpdate(Amazon.EKS.Model.DescribeUpdateRequest)">
            <summary>
            Returns descriptive information about an update against your Amazon EKS cluster or
            associated managed node group.
            
             
            <para>
            When the status of the update is <code>Succeeded</code>, the update is complete. If
            an update fails, the status is <code>Failed</code>, and an error detail explains the
            reason for the failure.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeUpdate service method.</param>
            
            <returns>The response from the DescribeUpdate service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DescribeUpdate">REST API Reference for DescribeUpdate Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.DescribeUpdateAsync(Amazon.EKS.Model.DescribeUpdateRequest,System.Threading.CancellationToken)">
            <summary>
            Returns descriptive information about an update against your Amazon EKS cluster or
            associated managed node group.
            
             
            <para>
            When the status of the update is <code>Succeeded</code>, the update is complete. If
            an update fails, the status is <code>Failed</code>, and an error detail explains the
            reason for the failure.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeUpdate service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeUpdate service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DescribeUpdate">REST API Reference for DescribeUpdate Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.DisassociateIdentityProviderConfig(Amazon.EKS.Model.DisassociateIdentityProviderConfigRequest)">
            <summary>
            Disassociates an identity provider configuration from a cluster. If you disassociate
            an identity provider from your cluster, users included in the provider can no longer
            access the cluster. However, you can still access the cluster with Amazon Web Services
            IAM users.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DisassociateIdentityProviderConfig service method.</param>
            
            <returns>The response from the DisassociateIdentityProviderConfig service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidRequestException">
            The request is invalid given the state of the cluster. Check the state of the cluster
            and the associated operations.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceInUseException">
            The specified resource is in use.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DisassociateIdentityProviderConfig">REST API Reference for DisassociateIdentityProviderConfig Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.DisassociateIdentityProviderConfigAsync(Amazon.EKS.Model.DisassociateIdentityProviderConfigRequest,System.Threading.CancellationToken)">
            <summary>
            Disassociates an identity provider configuration from a cluster. If you disassociate
            an identity provider from your cluster, users included in the provider can no longer
            access the cluster. However, you can still access the cluster with Amazon Web Services
            IAM users.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DisassociateIdentityProviderConfig service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DisassociateIdentityProviderConfig service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidRequestException">
            The request is invalid given the state of the cluster. Check the state of the cluster
            and the associated operations.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceInUseException">
            The specified resource is in use.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DisassociateIdentityProviderConfig">REST API Reference for DisassociateIdentityProviderConfig Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.ListAddons(Amazon.EKS.Model.ListAddonsRequest)">
            <summary>
            Lists the available add-ons.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListAddons service method.</param>
            
            <returns>The response from the ListAddons service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidRequestException">
            The request is invalid given the state of the cluster. Check the state of the cluster
            and the associated operations.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/ListAddons">REST API Reference for ListAddons Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.ListAddonsAsync(Amazon.EKS.Model.ListAddonsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the available add-ons.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListAddons service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListAddons service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidRequestException">
            The request is invalid given the state of the cluster. Check the state of the cluster
            and the associated operations.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/ListAddons">REST API Reference for ListAddons Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.ListClusters(Amazon.EKS.Model.ListClustersRequest)">
            <summary>
            Lists the Amazon EKS clusters in your Amazon Web Services account in the specified
            Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListClusters service method.</param>
            
            <returns>The response from the ListClusters service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServiceUnavailableException">
            The service is unavailable. Back off and retry the operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/ListClusters">REST API Reference for ListClusters Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.ListClustersAsync(Amazon.EKS.Model.ListClustersRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the Amazon EKS clusters in your Amazon Web Services account in the specified
            Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListClusters service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListClusters service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServiceUnavailableException">
            The service is unavailable. Back off and retry the operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/ListClusters">REST API Reference for ListClusters Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.ListFargateProfiles(Amazon.EKS.Model.ListFargateProfilesRequest)">
            <summary>
            Lists the Fargate profiles associated with the specified cluster in your Amazon Web
            Services account in the specified Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListFargateProfiles service method.</param>
            
            <returns>The response from the ListFargateProfiles service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/ListFargateProfiles">REST API Reference for ListFargateProfiles Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.ListFargateProfilesAsync(Amazon.EKS.Model.ListFargateProfilesRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the Fargate profiles associated with the specified cluster in your Amazon Web
            Services account in the specified Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListFargateProfiles service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListFargateProfiles service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/ListFargateProfiles">REST API Reference for ListFargateProfiles Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.ListIdentityProviderConfigs(Amazon.EKS.Model.ListIdentityProviderConfigsRequest)">
            <summary>
            A list of identity provider configurations.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListIdentityProviderConfigs service method.</param>
            
            <returns>The response from the ListIdentityProviderConfigs service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServiceUnavailableException">
            The service is unavailable. Back off and retry the operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/ListIdentityProviderConfigs">REST API Reference for ListIdentityProviderConfigs Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.ListIdentityProviderConfigsAsync(Amazon.EKS.Model.ListIdentityProviderConfigsRequest,System.Threading.CancellationToken)">
            <summary>
            A list of identity provider configurations.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListIdentityProviderConfigs service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListIdentityProviderConfigs service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServiceUnavailableException">
            The service is unavailable. Back off and retry the operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/ListIdentityProviderConfigs">REST API Reference for ListIdentityProviderConfigs Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.ListNodegroups(Amazon.EKS.Model.ListNodegroupsRequest)">
            <summary>
            Lists the Amazon EKS managed node groups associated with the specified cluster in
            your Amazon Web Services account in the specified Region. Self-managed node groups
            are not listed.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListNodegroups service method.</param>
            
            <returns>The response from the ListNodegroups service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServiceUnavailableException">
            The service is unavailable. Back off and retry the operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/ListNodegroups">REST API Reference for ListNodegroups Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.ListNodegroupsAsync(Amazon.EKS.Model.ListNodegroupsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the Amazon EKS managed node groups associated with the specified cluster in
            your Amazon Web Services account in the specified Region. Self-managed node groups
            are not listed.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListNodegroups service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListNodegroups service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServiceUnavailableException">
            The service is unavailable. Back off and retry the operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/ListNodegroups">REST API Reference for ListNodegroups Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.ListTagsForResource(Amazon.EKS.Model.ListTagsForResourceRequest)">
            <summary>
            List the tags for an Amazon EKS resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            
            <returns>The response from the ListTagsForResource service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.BadRequestException">
            This exception is thrown if the request contains a semantic error. The precise meaning
            will depend on the API, and will be documented in the error message.
            </exception>
            <exception cref="T:Amazon.EKS.Model.NotFoundException">
            A service resource associated with the request could not be found. Clients should
            not retry such requests.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.ListTagsForResourceAsync(Amazon.EKS.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            List the tags for an Amazon EKS resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.BadRequestException">
            This exception is thrown if the request contains a semantic error. The precise meaning
            will depend on the API, and will be documented in the error message.
            </exception>
            <exception cref="T:Amazon.EKS.Model.NotFoundException">
            A service resource associated with the request could not be found. Clients should
            not retry such requests.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.ListUpdates(Amazon.EKS.Model.ListUpdatesRequest)">
            <summary>
            Lists the updates associated with an Amazon EKS cluster or managed node group in your
            Amazon Web Services account, in the specified Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListUpdates service method.</param>
            
            <returns>The response from the ListUpdates service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/ListUpdates">REST API Reference for ListUpdates Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.ListUpdatesAsync(Amazon.EKS.Model.ListUpdatesRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the updates associated with an Amazon EKS cluster or managed node group in your
            Amazon Web Services account, in the specified Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListUpdates service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListUpdates service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/ListUpdates">REST API Reference for ListUpdates Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.RegisterCluster(Amazon.EKS.Model.RegisterClusterRequest)">
            <summary>
            Connects a Kubernetes cluster to the Amazon EKS control plane. 
            
             
            <para>
            Any Kubernetes cluster can be connected to the Amazon EKS control plane to view current
            information about the cluster and its nodes. 
            </para>
             
            <para>
            Cluster connection requires two steps. First, send a <code> <a>RegisterClusterRequest</a>
            </code> to add it to the Amazon EKS control plane.
            </para>
             
            <para>
            Second, a <a href="https://amazon-eks.s3.us-west-2.amazonaws.com/eks-connector/manifests/eks-connector/latest/eks-connector.yaml">Manifest</a>
            containing the <code>activationID</code> and <code>activationCode</code> must be applied
            to the Kubernetes cluster through it's native provider to provide visibility.
            </para>
             
            <para>
            After the Manifest is updated and applied, then the connected cluster is visible to
            the Amazon EKS control plane. If the Manifest is not applied within a set amount of
            time, then the connected cluster will no longer be visible and must be deregistered.
            See <a>DeregisterCluster</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RegisterCluster service method.</param>
            
            <returns>The response from the RegisterCluster service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceLimitExceededException">
            You have encountered a service limit on the specified resource.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServiceUnavailableException">
            The service is unavailable. Back off and retry the operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/RegisterCluster">REST API Reference for RegisterCluster Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.RegisterClusterAsync(Amazon.EKS.Model.RegisterClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Connects a Kubernetes cluster to the Amazon EKS control plane. 
            
             
            <para>
            Any Kubernetes cluster can be connected to the Amazon EKS control plane to view current
            information about the cluster and its nodes. 
            </para>
             
            <para>
            Cluster connection requires two steps. First, send a <code> <a>RegisterClusterRequest</a>
            </code> to add it to the Amazon EKS control plane.
            </para>
             
            <para>
            Second, a <a href="https://amazon-eks.s3.us-west-2.amazonaws.com/eks-connector/manifests/eks-connector/latest/eks-connector.yaml">Manifest</a>
            containing the <code>activationID</code> and <code>activationCode</code> must be applied
            to the Kubernetes cluster through it's native provider to provide visibility.
            </para>
             
            <para>
            After the Manifest is updated and applied, then the connected cluster is visible to
            the Amazon EKS control plane. If the Manifest is not applied within a set amount of
            time, then the connected cluster will no longer be visible and must be deregistered.
            See <a>DeregisterCluster</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RegisterCluster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RegisterCluster service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceLimitExceededException">
            You have encountered a service limit on the specified resource.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServiceUnavailableException">
            The service is unavailable. Back off and retry the operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/RegisterCluster">REST API Reference for RegisterCluster Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.TagResource(Amazon.EKS.Model.TagResourceRequest)">
            <summary>
            Associates the specified tags to a resource with the specified <code>resourceArn</code>.
            If existing tags on a resource are not specified in the request parameters, they are
            not changed. When a resource is deleted, the tags associated with that resource are
            deleted as well. Tags that you create for Amazon EKS resources do not propagate to
            any other resources associated with the cluster. For example, if you tag a cluster
            with this operation, that tag does not automatically propagate to the subnets and
            nodes associated with the cluster.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            
            <returns>The response from the TagResource service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.BadRequestException">
            This exception is thrown if the request contains a semantic error. The precise meaning
            will depend on the API, and will be documented in the error message.
            </exception>
            <exception cref="T:Amazon.EKS.Model.NotFoundException">
            A service resource associated with the request could not be found. Clients should
            not retry such requests.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.TagResourceAsync(Amazon.EKS.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Associates the specified tags to a resource with the specified <code>resourceArn</code>.
            If existing tags on a resource are not specified in the request parameters, they are
            not changed. When a resource is deleted, the tags associated with that resource are
            deleted as well. Tags that you create for Amazon EKS resources do not propagate to
            any other resources associated with the cluster. For example, if you tag a cluster
            with this operation, that tag does not automatically propagate to the subnets and
            nodes associated with the cluster.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.BadRequestException">
            This exception is thrown if the request contains a semantic error. The precise meaning
            will depend on the API, and will be documented in the error message.
            </exception>
            <exception cref="T:Amazon.EKS.Model.NotFoundException">
            A service resource associated with the request could not be found. Clients should
            not retry such requests.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.UntagResource(Amazon.EKS.Model.UntagResourceRequest)">
            <summary>
            Deletes specified tags from a resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            
            <returns>The response from the UntagResource service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.BadRequestException">
            This exception is thrown if the request contains a semantic error. The precise meaning
            will depend on the API, and will be documented in the error message.
            </exception>
            <exception cref="T:Amazon.EKS.Model.NotFoundException">
            A service resource associated with the request could not be found. Clients should
            not retry such requests.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.UntagResourceAsync(Amazon.EKS.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes specified tags from a resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.BadRequestException">
            This exception is thrown if the request contains a semantic error. The precise meaning
            will depend on the API, and will be documented in the error message.
            </exception>
            <exception cref="T:Amazon.EKS.Model.NotFoundException">
            A service resource associated with the request could not be found. Clients should
            not retry such requests.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.UpdateAddon(Amazon.EKS.Model.UpdateAddonRequest)">
            <summary>
            Updates an Amazon EKS add-on.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateAddon service method.</param>
            
            <returns>The response from the UpdateAddon service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidRequestException">
            The request is invalid given the state of the cluster. Check the state of the cluster
            and the associated operations.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceInUseException">
            The specified resource is in use.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/UpdateAddon">REST API Reference for UpdateAddon Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.UpdateAddonAsync(Amazon.EKS.Model.UpdateAddonRequest,System.Threading.CancellationToken)">
            <summary>
            Updates an Amazon EKS add-on.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateAddon service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateAddon service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidRequestException">
            The request is invalid given the state of the cluster. Check the state of the cluster
            and the associated operations.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceInUseException">
            The specified resource is in use.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/UpdateAddon">REST API Reference for UpdateAddon Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.UpdateClusterConfig(Amazon.EKS.Model.UpdateClusterConfigRequest)">
            <summary>
            Updates an Amazon EKS cluster configuration. Your cluster continues to function during
            the update. The response output includes an update ID that you can use to track the
            status of your cluster update with the <a>DescribeUpdate</a> API operation.
            
             
            <para>
            You can use this API operation to enable or disable exporting the Kubernetes control
            plane logs for your cluster to CloudWatch Logs. By default, cluster control plane
            logs aren't exported to CloudWatch Logs. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html">Amazon
            EKS Cluster Control Plane Logs</a> in the <i> <i>Amazon EKS User Guide</i> </i>.
            </para>
             <note> 
            <para>
            CloudWatch Logs ingestion, archive storage, and data scanning rates apply to exported
            control plane logs. For more information, see <a href="http://aws.amazon.com/cloudwatch/pricing/">CloudWatch
            Pricing</a>.
            </para>
             </note> 
            <para>
            You can also use this API operation to enable or disable public and private access
            to your cluster's Kubernetes API server endpoint. By default, public access is enabled,
            and private access is disabled. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html">Amazon
            EKS cluster endpoint access control</a> in the <i> <i>Amazon EKS User Guide</i> </i>.
            
            </para>
             <important> 
            <para>
            You can't update the subnets or security group IDs for an existing cluster.
            </para>
             </important> 
            <para>
            Cluster updates are asynchronous, and they should finish within a few minutes. During
            an update, the cluster status moves to <code>UPDATING</code> (this status transition
            is eventually consistent). When the update is complete (either <code>Failed</code>
            or <code>Successful</code>), the cluster status moves to <code>Active</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateClusterConfig service method.</param>
            
            <returns>The response from the UpdateClusterConfig service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidRequestException">
            The request is invalid given the state of the cluster. Check the state of the cluster
            and the associated operations.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceInUseException">
            The specified resource is in use.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/UpdateClusterConfig">REST API Reference for UpdateClusterConfig Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.UpdateClusterConfigAsync(Amazon.EKS.Model.UpdateClusterConfigRequest,System.Threading.CancellationToken)">
            <summary>
            Updates an Amazon EKS cluster configuration. Your cluster continues to function during
            the update. The response output includes an update ID that you can use to track the
            status of your cluster update with the <a>DescribeUpdate</a> API operation.
            
             
            <para>
            You can use this API operation to enable or disable exporting the Kubernetes control
            plane logs for your cluster to CloudWatch Logs. By default, cluster control plane
            logs aren't exported to CloudWatch Logs. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html">Amazon
            EKS Cluster Control Plane Logs</a> in the <i> <i>Amazon EKS User Guide</i> </i>.
            </para>
             <note> 
            <para>
            CloudWatch Logs ingestion, archive storage, and data scanning rates apply to exported
            control plane logs. For more information, see <a href="http://aws.amazon.com/cloudwatch/pricing/">CloudWatch
            Pricing</a>.
            </para>
             </note> 
            <para>
            You can also use this API operation to enable or disable public and private access
            to your cluster's Kubernetes API server endpoint. By default, public access is enabled,
            and private access is disabled. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html">Amazon
            EKS cluster endpoint access control</a> in the <i> <i>Amazon EKS User Guide</i> </i>.
            
            </para>
             <important> 
            <para>
            You can't update the subnets or security group IDs for an existing cluster.
            </para>
             </important> 
            <para>
            Cluster updates are asynchronous, and they should finish within a few minutes. During
            an update, the cluster status moves to <code>UPDATING</code> (this status transition
            is eventually consistent). When the update is complete (either <code>Failed</code>
            or <code>Successful</code>), the cluster status moves to <code>Active</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateClusterConfig service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateClusterConfig service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidRequestException">
            The request is invalid given the state of the cluster. Check the state of the cluster
            and the associated operations.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceInUseException">
            The specified resource is in use.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/UpdateClusterConfig">REST API Reference for UpdateClusterConfig Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.UpdateClusterVersion(Amazon.EKS.Model.UpdateClusterVersionRequest)">
            <summary>
            Updates an Amazon EKS cluster to the specified Kubernetes version. Your cluster continues
            to function during the update. The response output includes an update ID that you
            can use to track the status of your cluster update with the <a>DescribeUpdate</a>
            API operation.
            
             
            <para>
            Cluster updates are asynchronous, and they should finish within a few minutes. During
            an update, the cluster status moves to <code>UPDATING</code> (this status transition
            is eventually consistent). When the update is complete (either <code>Failed</code>
            or <code>Successful</code>), the cluster status moves to <code>Active</code>.
            </para>
             
            <para>
            If your cluster has managed node groups attached to it, all of your node groups’ Kubernetes
            versions must match the cluster’s Kubernetes version in order to update the cluster
            to a new Kubernetes version.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateClusterVersion service method.</param>
            
            <returns>The response from the UpdateClusterVersion service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidRequestException">
            The request is invalid given the state of the cluster. Check the state of the cluster
            and the associated operations.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceInUseException">
            The specified resource is in use.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/UpdateClusterVersion">REST API Reference for UpdateClusterVersion Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.UpdateClusterVersionAsync(Amazon.EKS.Model.UpdateClusterVersionRequest,System.Threading.CancellationToken)">
            <summary>
            Updates an Amazon EKS cluster to the specified Kubernetes version. Your cluster continues
            to function during the update. The response output includes an update ID that you
            can use to track the status of your cluster update with the <a>DescribeUpdate</a>
            API operation.
            
             
            <para>
            Cluster updates are asynchronous, and they should finish within a few minutes. During
            an update, the cluster status moves to <code>UPDATING</code> (this status transition
            is eventually consistent). When the update is complete (either <code>Failed</code>
            or <code>Successful</code>), the cluster status moves to <code>Active</code>.
            </para>
             
            <para>
            If your cluster has managed node groups attached to it, all of your node groups’ Kubernetes
            versions must match the cluster’s Kubernetes version in order to update the cluster
            to a new Kubernetes version.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateClusterVersion service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateClusterVersion service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidRequestException">
            The request is invalid given the state of the cluster. Check the state of the cluster
            and the associated operations.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceInUseException">
            The specified resource is in use.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/UpdateClusterVersion">REST API Reference for UpdateClusterVersion Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.UpdateNodegroupConfig(Amazon.EKS.Model.UpdateNodegroupConfigRequest)">
            <summary>
            Updates an Amazon EKS managed node group configuration. Your node group continues
            to function during the update. The response output includes an update ID that you
            can use to track the status of your node group update with the <a>DescribeUpdate</a>
            API operation. Currently you can update the Kubernetes labels for a node group or
            the scaling configuration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateNodegroupConfig service method.</param>
            
            <returns>The response from the UpdateNodegroupConfig service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidRequestException">
            The request is invalid given the state of the cluster. Check the state of the cluster
            and the associated operations.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceInUseException">
            The specified resource is in use.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/UpdateNodegroupConfig">REST API Reference for UpdateNodegroupConfig Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.UpdateNodegroupConfigAsync(Amazon.EKS.Model.UpdateNodegroupConfigRequest,System.Threading.CancellationToken)">
            <summary>
            Updates an Amazon EKS managed node group configuration. Your node group continues
            to function during the update. The response output includes an update ID that you
            can use to track the status of your node group update with the <a>DescribeUpdate</a>
            API operation. Currently you can update the Kubernetes labels for a node group or
            the scaling configuration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateNodegroupConfig service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateNodegroupConfig service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidRequestException">
            The request is invalid given the state of the cluster. Check the state of the cluster
            and the associated operations.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceInUseException">
            The specified resource is in use.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/UpdateNodegroupConfig">REST API Reference for UpdateNodegroupConfig Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.UpdateNodegroupVersion(Amazon.EKS.Model.UpdateNodegroupVersionRequest)">
            <summary>
            Updates the Kubernetes version or AMI version of an Amazon EKS managed node group.
            
             
            <para>
            You can update a node group using a launch template only if the node group was originally
            deployed with a launch template. If you need to update a custom AMI in a node group
            that was deployed with a launch template, then update your custom AMI, specify the
            new ID in a new version of the launch template, and then update the node group to
            the new version of the launch template.
            </para>
             
            <para>
            If you update without a launch template, then you can update to the latest available
            AMI version of a node group's current Kubernetes version by not specifying a Kubernetes
            version in the request. You can update to the latest AMI version of your cluster's
            current Kubernetes version by specifying your cluster's Kubernetes version in the
            request. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/eks-linux-ami-versions.html">Amazon
            EKS optimized Amazon Linux 2 AMI versions</a> in the <i>Amazon EKS User Guide</i>.
            </para>
             
            <para>
            You cannot roll back a node group to an earlier Kubernetes version or AMI version.
            </para>
             
            <para>
            When a node in a managed node group is terminated due to a scaling action or update,
            the pods in that node are drained first. Amazon EKS attempts to drain the nodes gracefully
            and will fail if it is unable to do so. You can <code>force</code> the update if Amazon
            EKS is unable to drain the nodes as a result of a pod disruption budget issue.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateNodegroupVersion service method.</param>
            
            <returns>The response from the UpdateNodegroupVersion service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidRequestException">
            The request is invalid given the state of the cluster. Check the state of the cluster
            and the associated operations.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceInUseException">
            The specified resource is in use.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/UpdateNodegroupVersion">REST API Reference for UpdateNodegroupVersion Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.UpdateNodegroupVersionAsync(Amazon.EKS.Model.UpdateNodegroupVersionRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the Kubernetes version or AMI version of an Amazon EKS managed node group.
            
             
            <para>
            You can update a node group using a launch template only if the node group was originally
            deployed with a launch template. If you need to update a custom AMI in a node group
            that was deployed with a launch template, then update your custom AMI, specify the
            new ID in a new version of the launch template, and then update the node group to
            the new version of the launch template.
            </para>
             
            <para>
            If you update without a launch template, then you can update to the latest available
            AMI version of a node group's current Kubernetes version by not specifying a Kubernetes
            version in the request. You can update to the latest AMI version of your cluster's
            current Kubernetes version by specifying your cluster's Kubernetes version in the
            request. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/eks-linux-ami-versions.html">Amazon
            EKS optimized Amazon Linux 2 AMI versions</a> in the <i>Amazon EKS User Guide</i>.
            </para>
             
            <para>
            You cannot roll back a node group to an earlier Kubernetes version or AMI version.
            </para>
             
            <para>
            When a node in a managed node group is terminated due to a scaling action or update,
            the pods in that node are drained first. Amazon EKS attempts to drain the nodes gracefully
            and will fail if it is unable to do so. You can <code>force</code> the update if Amazon
            EKS is unable to drain the nodes as a result of a pod disruption budget issue.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateNodegroupVersion service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateNodegroupVersion service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidRequestException">
            The request is invalid given the state of the cluster. Check the state of the cluster
            and the associated operations.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceInUseException">
            The specified resource is in use.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. You can view your available managed node groups with <a>ListNodegroups</a>.
            Amazon EKS clusters and node groups are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/UpdateNodegroupVersion">REST API Reference for UpdateNodegroupVersion Operation</seealso>
        </member>
    </members>
</doc>
