<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.LicenseManager</name>
    </assembly>
    <members>
        <member name="T:Amazon.LicenseManager.AmazonLicenseManagerConfig">
            <summary>
            Configuration for accessing Amazon LicenseManager service
            </summary>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.AmazonLicenseManagerConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.AmazonLicenseManagerConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.AmazonLicenseManagerConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.AmazonLicenseManagerException">
            <summary>
             Common exception for the LicenseManager service.
             </summary>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonLicenseManagerException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonLicenseManagerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonLicenseManagerException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonLicenseManagerException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonLicenseManagerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the AmazonLicenseManagerException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.LicenseManager.Internal.AmazonLicenseManagerMetadata">
            <summary>
            Service metadata for  Amazon LicenseManager service
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Internal.AmazonLicenseManagerMetadata.ServiceId">
            <summary>
            Gets the value of the Service Id.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Internal.AmazonLicenseManagerMetadata.OperationNameMapping">
            <summary>
            Gets the dictionary that gives mapping of renamed operations
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.AcceptGrantRequest">
            <summary>
            Container for the parameters to the AcceptGrant operation.
            Accepts the specified grant.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.AcceptGrantRequest.GrantArn">
            <summary>
            Gets and sets the property GrantArn. 
            <para>
            Amazon Resource Name (ARN) of the grant.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.AcceptGrantResponse">
            <summary>
            This is the response object from the AcceptGrant operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.AcceptGrantResponse.GrantArn">
            <summary>
            Gets and sets the property GrantArn. 
            <para>
            Grant ARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.AcceptGrantResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Grant status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.AcceptGrantResponse.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            Grant version.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.AccessDeniedException">
            <summary>
            Access to resource denied.
            </summary>
        </member>
        <member name="M:Amazon.LicenseManager.Model.AccessDeniedException.#ctor(System.String)">
            <summary>
            Constructs a new AccessDeniedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.AccessDeniedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.AccessDeniedException.#ctor(System.Exception)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.AccessDeniedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.AccessDeniedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.AccessDeniedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the AccessDeniedException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.LicenseManager.Model.AccessDeniedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.LicenseManager.Model.AuthorizationException">
            <summary>
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </summary>
        </member>
        <member name="M:Amazon.LicenseManager.Model.AuthorizationException.#ctor(System.String)">
            <summary>
            Constructs a new AuthorizationException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.AuthorizationException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AuthorizationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.AuthorizationException.#ctor(System.Exception)">
            <summary>
            Construct instance of AuthorizationException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.AuthorizationException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AuthorizationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.AuthorizationException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AuthorizationException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.AuthorizationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the AuthorizationException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.LicenseManager.Model.AuthorizationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.LicenseManager.Model.AutomatedDiscoveryInformation">
            <summary>
            Describes automated discovery.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.AutomatedDiscoveryInformation.LastRunTime">
            <summary>
            Gets and sets the property LastRunTime. 
            <para>
            Time that automated discovery last ran.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.BorrowConfiguration">
            <summary>
            Details about a borrow configuration.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.BorrowConfiguration.AllowEarlyCheckIn">
            <summary>
            Gets and sets the property AllowEarlyCheckIn. 
            <para>
            Indicates whether early check-ins are allowed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.BorrowConfiguration.MaxTimeToLiveInMinutes">
            <summary>
            Gets and sets the property MaxTimeToLiveInMinutes. 
            <para>
            Maximum time for the borrow configuration, in minutes.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.CheckInLicenseRequest">
            <summary>
            Container for the parameters to the CheckInLicense operation.
            Checks in the specified license. Check in a license when it is no longer in use.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CheckInLicenseRequest.Beneficiary">
            <summary>
            Gets and sets the property Beneficiary. 
            <para>
            License beneficiary.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CheckInLicenseRequest.LicenseConsumptionToken">
            <summary>
            Gets and sets the property LicenseConsumptionToken. 
            <para>
            License consumption token.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.CheckInLicenseResponse">
            <summary>
            This is the response object from the CheckInLicense operation.
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.CheckoutBorrowLicenseRequest">
            <summary>
            Container for the parameters to the CheckoutBorrowLicense operation.
            Checks out the specified license for offline use.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CheckoutBorrowLicenseRequest.CheckoutMetadata">
            <summary>
            Gets and sets the property CheckoutMetadata. 
            <para>
            Information about constraints.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CheckoutBorrowLicenseRequest.ClientToken">
            <summary>
            Gets and sets the property ClientToken. 
            <para>
            Unique, case-sensitive identifier that you provide to ensure the idempotency of the
            request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CheckoutBorrowLicenseRequest.DigitalSignatureMethod">
            <summary>
            Gets and sets the property DigitalSignatureMethod. 
            <para>
            Digital signature method. The possible value is JSON Web Signature (JWS) algorithm
            PS384. For more information, see <a href="https://tools.ietf.org/html/rfc7518#section-3.5">RFC
            7518 Digital Signature with RSASSA-PSS</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CheckoutBorrowLicenseRequest.Entitlements">
            <summary>
            Gets and sets the property Entitlements. 
            <para>
            License entitlements. Partial checkouts are not supported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CheckoutBorrowLicenseRequest.LicenseArn">
            <summary>
            Gets and sets the property LicenseArn. 
            <para>
            Amazon Resource Name (ARN) of the license. The license must use the borrow consumption
            configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CheckoutBorrowLicenseRequest.NodeId">
            <summary>
            Gets and sets the property NodeId. 
            <para>
            Node ID.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.CheckoutBorrowLicenseResponse">
            <summary>
            This is the response object from the CheckoutBorrowLicense operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CheckoutBorrowLicenseResponse.CheckoutMetadata">
            <summary>
            Gets and sets the property CheckoutMetadata. 
            <para>
            Information about constraints.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CheckoutBorrowLicenseResponse.EntitlementsAllowed">
            <summary>
            Gets and sets the property EntitlementsAllowed. 
            <para>
            Allowed license entitlements.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CheckoutBorrowLicenseResponse.Expiration">
            <summary>
            Gets and sets the property Expiration. 
            <para>
            Date and time at which the license checkout expires.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CheckoutBorrowLicenseResponse.IssuedAt">
            <summary>
            Gets and sets the property IssuedAt. 
            <para>
            Date and time at which the license checkout is issued.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CheckoutBorrowLicenseResponse.LicenseArn">
            <summary>
            Gets and sets the property LicenseArn. 
            <para>
            Amazon Resource Name (ARN) of the license.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CheckoutBorrowLicenseResponse.LicenseConsumptionToken">
            <summary>
            Gets and sets the property LicenseConsumptionToken. 
            <para>
            License consumption token.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CheckoutBorrowLicenseResponse.NodeId">
            <summary>
            Gets and sets the property NodeId. 
            <para>
            Node ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CheckoutBorrowLicenseResponse.SignedToken">
            <summary>
            Gets and sets the property SignedToken. 
            <para>
            Signed token.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.CheckoutLicenseRequest">
            <summary>
            Container for the parameters to the CheckoutLicense operation.
            Checks out the specified license.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CheckoutLicenseRequest.Beneficiary">
            <summary>
            Gets and sets the property Beneficiary. 
            <para>
            License beneficiary.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CheckoutLicenseRequest.CheckoutType">
            <summary>
            Gets and sets the property CheckoutType. 
            <para>
            Checkout type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CheckoutLicenseRequest.ClientToken">
            <summary>
            Gets and sets the property ClientToken. 
            <para>
            Unique, case-sensitive identifier that you provide to ensure the idempotency of the
            request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CheckoutLicenseRequest.Entitlements">
            <summary>
            Gets and sets the property Entitlements. 
            <para>
            License entitlements.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CheckoutLicenseRequest.KeyFingerprint">
            <summary>
            Gets and sets the property KeyFingerprint. 
            <para>
            Key fingerprint identifying the license.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CheckoutLicenseRequest.NodeId">
            <summary>
            Gets and sets the property NodeId. 
            <para>
            Node ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CheckoutLicenseRequest.ProductSKU">
            <summary>
            Gets and sets the property ProductSKU. 
            <para>
            Product SKU.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.CheckoutLicenseResponse">
            <summary>
            This is the response object from the CheckoutLicense operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CheckoutLicenseResponse.CheckoutType">
            <summary>
            Gets and sets the property CheckoutType. 
            <para>
            Checkout type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CheckoutLicenseResponse.EntitlementsAllowed">
            <summary>
            Gets and sets the property EntitlementsAllowed. 
            <para>
            Allowed license entitlements.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CheckoutLicenseResponse.Expiration">
            <summary>
            Gets and sets the property Expiration. 
            <para>
            Date and time at which the license checkout expires.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CheckoutLicenseResponse.IssuedAt">
            <summary>
            Gets and sets the property IssuedAt. 
            <para>
            Date and time at which the license checkout is issued.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CheckoutLicenseResponse.LicenseArn">
            <summary>
            Gets and sets the property LicenseArn. 
            <para>
            Amazon Resource Name (ARN) of the checkout license.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CheckoutLicenseResponse.LicenseConsumptionToken">
            <summary>
            Gets and sets the property LicenseConsumptionToken. 
            <para>
            License consumption token.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CheckoutLicenseResponse.NodeId">
            <summary>
            Gets and sets the property NodeId. 
            <para>
            Node ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CheckoutLicenseResponse.SignedToken">
            <summary>
            Gets and sets the property SignedToken. 
            <para>
            Signed token.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.ConflictException">
            <summary>
            There was a conflict processing the request. Try your request again.
            </summary>
        </member>
        <member name="M:Amazon.LicenseManager.Model.ConflictException.#ctor(System.String)">
            <summary>
            Constructs a new ConflictException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.ConflictException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.ConflictException.#ctor(System.Exception)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.ConflictException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.ConflictException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.ConflictException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ConflictException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.LicenseManager.Model.ConflictException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.LicenseManager.Model.ConsumedLicenseSummary">
            <summary>
            Details about license consumption.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ConsumedLicenseSummary.ConsumedLicenses">
            <summary>
            Gets and sets the property ConsumedLicenses. 
            <para>
            Number of licenses consumed by the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ConsumedLicenseSummary.ResourceType">
            <summary>
            Gets and sets the property ResourceType. 
            <para>
            Resource type of the resource consuming a license.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.ConsumptionConfiguration">
            <summary>
            Details about a consumption configuration.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ConsumptionConfiguration.BorrowConfiguration">
            <summary>
            Gets and sets the property BorrowConfiguration. 
            <para>
            Details about a borrow configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ConsumptionConfiguration.ProvisionalConfiguration">
            <summary>
            Gets and sets the property ProvisionalConfiguration. 
            <para>
            Details about a provisional configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ConsumptionConfiguration.RenewType">
            <summary>
            Gets and sets the property RenewType. 
            <para>
            Renewal frequency.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.CreateGrantRequest">
            <summary>
            Container for the parameters to the CreateGrant operation.
            Creates a grant for the specified license. A grant shares the use of license entitlements
            with specific Amazon Web Services accounts.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateGrantRequest.AllowedOperations">
            <summary>
            Gets and sets the property AllowedOperations. 
            <para>
            Allowed operations for the grant.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateGrantRequest.ClientToken">
            <summary>
            Gets and sets the property ClientToken. 
            <para>
            Unique, case-sensitive identifier that you provide to ensure the idempotency of the
            request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateGrantRequest.GrantName">
            <summary>
            Gets and sets the property GrantName. 
            <para>
            Grant name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateGrantRequest.HomeRegion">
            <summary>
            Gets and sets the property HomeRegion. 
            <para>
            Home Region of the grant.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateGrantRequest.LicenseArn">
            <summary>
            Gets and sets the property LicenseArn. 
            <para>
            Amazon Resource Name (ARN) of the license.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateGrantRequest.Principals">
            <summary>
            Gets and sets the property Principals. 
            <para>
            The grant principals.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.CreateGrantResponse">
            <summary>
            This is the response object from the CreateGrant operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateGrantResponse.GrantArn">
            <summary>
            Gets and sets the property GrantArn. 
            <para>
            Grant ARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateGrantResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Grant status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateGrantResponse.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            Grant version.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.CreateGrantVersionRequest">
            <summary>
            Container for the parameters to the CreateGrantVersion operation.
            Creates a new version of the specified grant.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateGrantVersionRequest.AllowedOperations">
            <summary>
            Gets and sets the property AllowedOperations. 
            <para>
            Allowed operations for the grant.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateGrantVersionRequest.ClientToken">
            <summary>
            Gets and sets the property ClientToken. 
            <para>
            Unique, case-sensitive identifier that you provide to ensure the idempotency of the
            request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateGrantVersionRequest.GrantArn">
            <summary>
            Gets and sets the property GrantArn. 
            <para>
            Amazon Resource Name (ARN) of the grant.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateGrantVersionRequest.GrantName">
            <summary>
            Gets and sets the property GrantName. 
            <para>
            Grant name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateGrantVersionRequest.SourceVersion">
            <summary>
            Gets and sets the property SourceVersion. 
            <para>
            Current version of the grant.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateGrantVersionRequest.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Grant status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateGrantVersionRequest.StatusReason">
            <summary>
            Gets and sets the property StatusReason. 
            <para>
            Grant status reason.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.CreateGrantVersionResponse">
            <summary>
            This is the response object from the CreateGrantVersion operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateGrantVersionResponse.GrantArn">
            <summary>
            Gets and sets the property GrantArn. 
            <para>
            Grant ARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateGrantVersionResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Grant status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateGrantVersionResponse.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            New version of the grant.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.CreateLicenseConfigurationRequest">
            <summary>
            Container for the parameters to the CreateLicenseConfiguration operation.
            Creates a license configuration.
            
             
            <para>
            A license configuration is an abstraction of a customer license agreement that can
            be consumed and enforced by License Manager. Components include specifications for
            the license type (licensing by instance, socket, CPU, or vCPU), allowed tenancy (shared
            tenancy, Dedicated Instance, Dedicated Host, or all of these), license affinity to
            host (how long a license must be associated with a host), and the number of licenses
            purchased and used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateLicenseConfigurationRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            Description of the license configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateLicenseConfigurationRequest.DisassociateWhenNotFound">
            <summary>
            Gets and sets the property DisassociateWhenNotFound. 
            <para>
            When true, disassociates a resource when software is uninstalled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateLicenseConfigurationRequest.LicenseCount">
            <summary>
            Gets and sets the property LicenseCount. 
            <para>
            Number of licenses managed by the license configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateLicenseConfigurationRequest.LicenseCountHardLimit">
            <summary>
            Gets and sets the property LicenseCountHardLimit. 
            <para>
            Indicates whether hard or soft license enforcement is used. Exceeding a hard limit
            blocks the launch of new instances.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateLicenseConfigurationRequest.LicenseCountingType">
            <summary>
            Gets and sets the property LicenseCountingType. 
            <para>
            Dimension used to track the license inventory.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateLicenseConfigurationRequest.LicenseRules">
            <summary>
            Gets and sets the property LicenseRules. 
            <para>
            License rules. The syntax is #name=value (for example, #allowedTenancy=EC2-DedicatedHost).
            The available rules vary by dimension, as follows.
            </para>
             <ul> <li> 
            <para>
             <code>Cores</code> dimension: <code>allowedTenancy</code> | <code>licenseAffinityToHost</code>
            | <code>maximumCores</code> | <code>minimumCores</code> 
            </para>
             </li> <li> 
            <para>
             <code>Instances</code> dimension: <code>allowedTenancy</code> | <code>maximumCores</code>
            | <code>minimumCores</code> | <code>maximumSockets</code> | <code>minimumSockets</code>
            | <code>maximumVcpus</code> | <code>minimumVcpus</code> 
            </para>
             </li> <li> 
            <para>
             <code>Sockets</code> dimension: <code>allowedTenancy</code> | <code>licenseAffinityToHost</code>
            | <code>maximumSockets</code> | <code>minimumSockets</code> 
            </para>
             </li> <li> 
            <para>
             <code>vCPUs</code> dimension: <code>allowedTenancy</code> | <code>honorVcpuOptimization</code>
            | <code>maximumVcpus</code> | <code>minimumVcpus</code> 
            </para>
             </li> </ul> 
            <para>
            The unit for <code>licenseAffinityToHost</code> is days and the range is 1 to 180.
            The possible values for <code>allowedTenancy</code> are <code>EC2-Default</code>,
            <code>EC2-DedicatedHost</code>, and <code>EC2-DedicatedInstance</code>. The possible
            values for <code>honorVcpuOptimization</code> are <code>True</code> and <code>False</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateLicenseConfigurationRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            Name of the license configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateLicenseConfigurationRequest.ProductInformationList">
            <summary>
            Gets and sets the property ProductInformationList. 
            <para>
            Product information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateLicenseConfigurationRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Tags to add to the license configuration.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.CreateLicenseConfigurationResponse">
            <summary>
            This is the response object from the CreateLicenseConfiguration operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateLicenseConfigurationResponse.LicenseConfigurationArn">
            <summary>
            Gets and sets the property LicenseConfigurationArn. 
            <para>
            Amazon Resource Name (ARN) of the license configuration.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.CreateLicenseConversionTaskForResourceRequest">
            <summary>
            Container for the parameters to the CreateLicenseConversionTaskForResource operation.
            Creates a new license conversion task.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateLicenseConversionTaskForResourceRequest.DestinationLicenseContext">
            <summary>
            Gets and sets the property DestinationLicenseContext. 
            <para>
            Information that identifies the license type you are converting to. For the structure
            of the destination license, see <a href="https://docs.aws.amazon.com/license-manager/latest/userguide/conversion-procedures.html#conversion-cli">Convert
            a license type using the AWS CLI</a> in the <i>License Manager User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateLicenseConversionTaskForResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            Amazon Resource Name (ARN) of the resource you are converting the license type for.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateLicenseConversionTaskForResourceRequest.SourceLicenseContext">
            <summary>
            Gets and sets the property SourceLicenseContext. 
            <para>
            Information that identifies the license type you are converting from. For the structure
            of the source license, see <a href="https://docs.aws.amazon.com/license-manager/latest/userguide/conversion-procedures.html#conversion-cli">Convert
            a license type using the AWS CLI</a> in the <i>License Manager User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.CreateLicenseConversionTaskForResourceResponse">
            <summary>
            This is the response object from the CreateLicenseConversionTaskForResource operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateLicenseConversionTaskForResourceResponse.LicenseConversionTaskId">
            <summary>
            Gets and sets the property LicenseConversionTaskId. 
            <para>
            The ID of the created license type conversion task.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.CreateLicenseManagerReportGeneratorRequest">
            <summary>
            Container for the parameters to the CreateLicenseManagerReportGenerator operation.
            Creates a report generator.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateLicenseManagerReportGeneratorRequest.ClientToken">
            <summary>
            Gets and sets the property ClientToken. 
            <para>
            Unique, case-sensitive identifier that you provide to ensure the idempotency of the
            request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateLicenseManagerReportGeneratorRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            Description of the report generator.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateLicenseManagerReportGeneratorRequest.ReportContext">
            <summary>
            Gets and sets the property ReportContext. 
            <para>
            Defines the type of license configuration the report generator tracks.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateLicenseManagerReportGeneratorRequest.ReportFrequency">
            <summary>
            Gets and sets the property ReportFrequency. 
            <para>
            Frequency by which reports are generated. Reports can be generated daily, monthly,
            or weekly.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateLicenseManagerReportGeneratorRequest.ReportGeneratorName">
            <summary>
            Gets and sets the property ReportGeneratorName. 
            <para>
            Name of the report generator.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateLicenseManagerReportGeneratorRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Tags to add to the report generator.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateLicenseManagerReportGeneratorRequest.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            Type of reports to generate. The following report types an be generated:
            </para>
             <ul> <li> 
            <para>
            License configuration report - Reports the number and details of consumed licenses
            for a license configuration.
            </para>
             </li> <li> 
            <para>
            Resource report - Reports the tracked licenses and resource consumption for a license
            configuration.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.CreateLicenseManagerReportGeneratorResponse">
            <summary>
            This is the response object from the CreateLicenseManagerReportGenerator operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateLicenseManagerReportGeneratorResponse.LicenseManagerReportGeneratorArn">
            <summary>
            Gets and sets the property LicenseManagerReportGeneratorArn. 
            <para>
            The Amazon Resource Name (ARN) of the new report generator.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.CreateLicenseRequest">
            <summary>
            Container for the parameters to the CreateLicense operation.
            Creates a license.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateLicenseRequest.Beneficiary">
            <summary>
            Gets and sets the property Beneficiary. 
            <para>
            License beneficiary.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateLicenseRequest.ClientToken">
            <summary>
            Gets and sets the property ClientToken. 
            <para>
            Unique, case-sensitive identifier that you provide to ensure the idempotency of the
            request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateLicenseRequest.ConsumptionConfiguration">
            <summary>
            Gets and sets the property ConsumptionConfiguration. 
            <para>
            Configuration for consumption of the license. Choose a provisional configuration for
            workloads running with continuous connectivity. Choose a borrow configuration for
            workloads with offline usage.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateLicenseRequest.Entitlements">
            <summary>
            Gets and sets the property Entitlements. 
            <para>
            License entitlements.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateLicenseRequest.HomeRegion">
            <summary>
            Gets and sets the property HomeRegion. 
            <para>
            Home Region for the license.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateLicenseRequest.Issuer">
            <summary>
            Gets and sets the property Issuer. 
            <para>
            License issuer.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateLicenseRequest.LicenseMetadata">
            <summary>
            Gets and sets the property LicenseMetadata. 
            <para>
            Information about the license.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateLicenseRequest.LicenseName">
            <summary>
            Gets and sets the property LicenseName. 
            <para>
            License name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateLicenseRequest.ProductName">
            <summary>
            Gets and sets the property ProductName. 
            <para>
            Product name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateLicenseRequest.ProductSKU">
            <summary>
            Gets and sets the property ProductSKU. 
            <para>
            Product SKU.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateLicenseRequest.Validity">
            <summary>
            Gets and sets the property Validity. 
            <para>
            Date and time range during which the license is valid, in ISO8601-UTC format.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.CreateLicenseResponse">
            <summary>
            This is the response object from the CreateLicense operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateLicenseResponse.LicenseArn">
            <summary>
            Gets and sets the property LicenseArn. 
            <para>
            Amazon Resource Name (ARN) of the license.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateLicenseResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            License status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateLicenseResponse.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            License version.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.CreateLicenseVersionRequest">
            <summary>
            Container for the parameters to the CreateLicenseVersion operation.
            Creates a new version of the specified license.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateLicenseVersionRequest.ClientToken">
            <summary>
            Gets and sets the property ClientToken. 
            <para>
            Unique, case-sensitive identifier that you provide to ensure the idempotency of the
            request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateLicenseVersionRequest.ConsumptionConfiguration">
            <summary>
            Gets and sets the property ConsumptionConfiguration. 
            <para>
            Configuration for consumption of the license. Choose a provisional configuration for
            workloads running with continuous connectivity. Choose a borrow configuration for
            workloads with offline usage.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateLicenseVersionRequest.Entitlements">
            <summary>
            Gets and sets the property Entitlements. 
            <para>
            License entitlements.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateLicenseVersionRequest.HomeRegion">
            <summary>
            Gets and sets the property HomeRegion. 
            <para>
            Home Region of the license.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateLicenseVersionRequest.Issuer">
            <summary>
            Gets and sets the property Issuer. 
            <para>
            License issuer.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateLicenseVersionRequest.LicenseArn">
            <summary>
            Gets and sets the property LicenseArn. 
            <para>
            Amazon Resource Name (ARN) of the license.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateLicenseVersionRequest.LicenseMetadata">
            <summary>
            Gets and sets the property LicenseMetadata. 
            <para>
            Information about the license.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateLicenseVersionRequest.LicenseName">
            <summary>
            Gets and sets the property LicenseName. 
            <para>
            License name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateLicenseVersionRequest.ProductName">
            <summary>
            Gets and sets the property ProductName. 
            <para>
            Product name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateLicenseVersionRequest.SourceVersion">
            <summary>
            Gets and sets the property SourceVersion. 
            <para>
            Current version of the license.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateLicenseVersionRequest.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            License status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateLicenseVersionRequest.Validity">
            <summary>
            Gets and sets the property Validity. 
            <para>
            Date and time range during which the license is valid, in ISO8601-UTC format.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.CreateLicenseVersionResponse">
            <summary>
            This is the response object from the CreateLicenseVersion operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateLicenseVersionResponse.LicenseArn">
            <summary>
            Gets and sets the property LicenseArn. 
            <para>
            License ARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateLicenseVersionResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            License status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateLicenseVersionResponse.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            New version of the license.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.CreateTokenRequest">
            <summary>
            Container for the parameters to the CreateToken operation.
            Creates a long-lived token.
            
             
            <para>
            A refresh token is a JWT token used to get an access token. With an access token,
            you can call AssumeRoleWithWebIdentity to get role credentials that you can use to
            call License Manager to manage the specified license.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateTokenRequest.ClientToken">
            <summary>
            Gets and sets the property ClientToken. 
            <para>
            Idempotency token, valid for 10 minutes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateTokenRequest.ExpirationInDays">
            <summary>
            Gets and sets the property ExpirationInDays. 
            <para>
            Token expiration, in days, counted from token creation. The default is 365 days.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateTokenRequest.LicenseArn">
            <summary>
            Gets and sets the property LicenseArn. 
            <para>
            Amazon Resource Name (ARN) of the license. The ARN is mapped to the aud claim of the
            JWT token.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateTokenRequest.RoleArns">
            <summary>
            Gets and sets the property RoleArns. 
            <para>
            Amazon Resource Name (ARN) of the IAM roles to embed in the token. License Manager
            does not check whether the roles are in use.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateTokenRequest.TokenProperties">
            <summary>
            Gets and sets the property TokenProperties. 
            <para>
            Data specified by the caller to be included in the JWT token. The data is mapped to
            the amr claim of the JWT token.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.CreateTokenResponse">
            <summary>
            This is the response object from the CreateToken operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateTokenResponse.Token">
            <summary>
            Gets and sets the property Token. 
            <para>
            Refresh token, encoded as a JWT token.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateTokenResponse.TokenId">
            <summary>
            Gets and sets the property TokenId. 
            <para>
            Token ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateTokenResponse.TokenType">
            <summary>
            Gets and sets the property TokenType. 
            <para>
            Token type.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.DatetimeRange">
            <summary>
            Describes a time range, in ISO8601-UTC format.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.DatetimeRange.Begin">
            <summary>
            Gets and sets the property Begin. 
            <para>
            Start of the time range.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.DatetimeRange.End">
            <summary>
            Gets and sets the property End. 
            <para>
            End of the time range.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.DeleteGrantRequest">
            <summary>
            Container for the parameters to the DeleteGrant operation.
            Deletes the specified grant.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.DeleteGrantRequest.GrantArn">
            <summary>
            Gets and sets the property GrantArn. 
            <para>
            Amazon Resource Name (ARN) of the grant.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.DeleteGrantRequest.StatusReason">
            <summary>
            Gets and sets the property StatusReason. 
            <para>
            The Status reason for the delete request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.DeleteGrantRequest.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            Current version of the grant.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.DeleteGrantResponse">
            <summary>
            This is the response object from the DeleteGrant operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.DeleteGrantResponse.GrantArn">
            <summary>
            Gets and sets the property GrantArn. 
            <para>
            Grant ARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.DeleteGrantResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Grant status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.DeleteGrantResponse.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            Grant version.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.DeleteLicenseConfigurationRequest">
            <summary>
            Container for the parameters to the DeleteLicenseConfiguration operation.
            Deletes the specified license configuration.
            
             
            <para>
            You cannot delete a license configuration that is in use.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.DeleteLicenseConfigurationRequest.LicenseConfigurationArn">
            <summary>
            Gets and sets the property LicenseConfigurationArn. 
            <para>
            ID of the license configuration.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.DeleteLicenseConfigurationResponse">
            <summary>
            This is the response object from the DeleteLicenseConfiguration operation.
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.DeleteLicenseManagerReportGeneratorRequest">
            <summary>
            Container for the parameters to the DeleteLicenseManagerReportGenerator operation.
            Deletes the specified report generator.
            
             
            <para>
            This action deletes the report generator, which stops it from generating future reports.
            The action cannot be reversed. It has no effect on the previous reports from this
            generator.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.DeleteLicenseManagerReportGeneratorRequest.LicenseManagerReportGeneratorArn">
            <summary>
            Gets and sets the property LicenseManagerReportGeneratorArn. 
            <para>
            Amazon Resource Name (ARN) of the report generator to be deleted.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.DeleteLicenseManagerReportGeneratorResponse">
            <summary>
            This is the response object from the DeleteLicenseManagerReportGenerator operation.
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.DeleteLicenseRequest">
            <summary>
            Container for the parameters to the DeleteLicense operation.
            Deletes the specified license.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.DeleteLicenseRequest.LicenseArn">
            <summary>
            Gets and sets the property LicenseArn. 
            <para>
            Amazon Resource Name (ARN) of the license.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.DeleteLicenseRequest.SourceVersion">
            <summary>
            Gets and sets the property SourceVersion. 
            <para>
            Current version of the license.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.DeleteLicenseResponse">
            <summary>
            This is the response object from the DeleteLicense operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.DeleteLicenseResponse.DeletionDate">
            <summary>
            Gets and sets the property DeletionDate. 
            <para>
            Date when the license is deleted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.DeleteLicenseResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            License status.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.DeleteTokenRequest">
            <summary>
            Container for the parameters to the DeleteToken operation.
            Deletes the specified token. Must be called in the license home Region.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.DeleteTokenRequest.TokenId">
            <summary>
            Gets and sets the property TokenId. 
            <para>
            Token ID.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.DeleteTokenResponse">
            <summary>
            This is the response object from the DeleteToken operation.
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.Entitlement">
            <summary>
            Describes a resource entitled for use with a license.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Entitlement.AllowCheckIn">
            <summary>
            Gets and sets the property AllowCheckIn. 
            <para>
            Indicates whether check-ins are allowed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Entitlement.MaxCount">
            <summary>
            Gets and sets the property MaxCount. 
            <para>
            Maximum entitlement count. Use if the unit is not None.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Entitlement.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            Entitlement name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Entitlement.Overage">
            <summary>
            Gets and sets the property Overage. 
            <para>
            Indicates whether overages are allowed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Entitlement.Unit">
            <summary>
            Gets and sets the property Unit. 
            <para>
            Entitlement unit.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Entitlement.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            Entitlement resource. Use only if the unit is None.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.EntitlementData">
            <summary>
            Data associated with an entitlement resource.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.EntitlementData.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            Entitlement data name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.EntitlementData.Unit">
            <summary>
            Gets and sets the property Unit. 
            <para>
            Entitlement data unit.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.EntitlementData.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            Entitlement data value.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.EntitlementNotAllowedException">
            <summary>
            The entitlement is not allowed.
            </summary>
        </member>
        <member name="M:Amazon.LicenseManager.Model.EntitlementNotAllowedException.#ctor(System.String)">
            <summary>
            Constructs a new EntitlementNotAllowedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.EntitlementNotAllowedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of EntitlementNotAllowedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.EntitlementNotAllowedException.#ctor(System.Exception)">
            <summary>
            Construct instance of EntitlementNotAllowedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.EntitlementNotAllowedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of EntitlementNotAllowedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.EntitlementNotAllowedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of EntitlementNotAllowedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.EntitlementNotAllowedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the EntitlementNotAllowedException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.LicenseManager.Model.EntitlementNotAllowedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.LicenseManager.Model.EntitlementUsage">
            <summary>
            Usage associated with an entitlement resource.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.EntitlementUsage.ConsumedValue">
            <summary>
            Gets and sets the property ConsumedValue. 
            <para>
            Resource usage consumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.EntitlementUsage.MaxCount">
            <summary>
            Gets and sets the property MaxCount. 
            <para>
            Maximum entitlement usage count.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.EntitlementUsage.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            Entitlement usage name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.EntitlementUsage.Unit">
            <summary>
            Gets and sets the property Unit. 
            <para>
            Entitlement usage unit.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.ExtendLicenseConsumptionRequest">
            <summary>
            Container for the parameters to the ExtendLicenseConsumption operation.
            Extends the expiration date for license consumption.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ExtendLicenseConsumptionRequest.DryRun">
            <summary>
            Gets and sets the property DryRun. 
            <para>
            Checks whether you have the required permissions for the action, without actually
            making the request. Provides an error response if you do not have the required permissions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ExtendLicenseConsumptionRequest.LicenseConsumptionToken">
            <summary>
            Gets and sets the property LicenseConsumptionToken. 
            <para>
            License consumption token.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.ExtendLicenseConsumptionResponse">
            <summary>
            This is the response object from the ExtendLicenseConsumption operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ExtendLicenseConsumptionResponse.Expiration">
            <summary>
            Gets and sets the property Expiration. 
            <para>
            Date and time at which the license consumption expires.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ExtendLicenseConsumptionResponse.LicenseConsumptionToken">
            <summary>
            Gets and sets the property LicenseConsumptionToken. 
            <para>
            License consumption token.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.FailedDependencyException">
            <summary>
            A dependency required to run the API is missing.
            </summary>
        </member>
        <member name="M:Amazon.LicenseManager.Model.FailedDependencyException.#ctor(System.String)">
            <summary>
            Constructs a new FailedDependencyException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.FailedDependencyException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of FailedDependencyException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.FailedDependencyException.#ctor(System.Exception)">
            <summary>
            Construct instance of FailedDependencyException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.FailedDependencyException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of FailedDependencyException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.FailedDependencyException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of FailedDependencyException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.FailedDependencyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the FailedDependencyException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.LicenseManager.Model.FailedDependencyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="P:Amazon.LicenseManager.Model.FailedDependencyException.ErrorCode">
            <summary>
            Gets and sets the property ErrorCode.
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.Filter">
            <summary>
            A filter name and value pair that is used to return more specific results from a describe
            operation. Filters can be used to match a set of resources by specific criteria, such
            as tags, attributes, or IDs.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Filter.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            Name of the filter. Filter names are case-sensitive.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Filter.Values">
            <summary>
            Gets and sets the property Values. 
            <para>
            Filter values. Filter values are case-sensitive.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.FilterLimitExceededException">
            <summary>
            The request uses too many filters or too many filter values.
            </summary>
        </member>
        <member name="M:Amazon.LicenseManager.Model.FilterLimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new FilterLimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.FilterLimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of FilterLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.FilterLimitExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of FilterLimitExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.FilterLimitExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of FilterLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.FilterLimitExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of FilterLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.FilterLimitExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the FilterLimitExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.LicenseManager.Model.FilterLimitExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.LicenseManager.Model.GetAccessTokenRequest">
            <summary>
            Container for the parameters to the GetAccessToken operation.
            Gets a temporary access token to use with AssumeRoleWithWebIdentity. Access tokens
            are valid for one hour.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GetAccessTokenRequest.Token">
            <summary>
            Gets and sets the property Token. 
            <para>
            Refresh token, encoded as a JWT token.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GetAccessTokenRequest.TokenProperties">
            <summary>
            Gets and sets the property TokenProperties. 
            <para>
            Token properties to validate against those present in the JWT token.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.GetAccessTokenResponse">
            <summary>
            This is the response object from the GetAccessToken operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GetAccessTokenResponse.AccessToken">
            <summary>
            Gets and sets the property AccessToken. 
            <para>
            Temporary access token.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.GetGrantRequest">
            <summary>
            Container for the parameters to the GetGrant operation.
            Gets detailed information about the specified grant.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GetGrantRequest.GrantArn">
            <summary>
            Gets and sets the property GrantArn. 
            <para>
            Amazon Resource Name (ARN) of the grant.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GetGrantRequest.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            Grant version.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.GetGrantResponse">
            <summary>
            This is the response object from the GetGrant operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GetGrantResponse.Grant">
            <summary>
            Gets and sets the property Grant. 
            <para>
            Grant details.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.GetLicenseConfigurationRequest">
            <summary>
            Container for the parameters to the GetLicenseConfiguration operation.
            Gets detailed information about the specified license configuration.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GetLicenseConfigurationRequest.LicenseConfigurationArn">
            <summary>
            Gets and sets the property LicenseConfigurationArn. 
            <para>
            Amazon Resource Name (ARN) of the license configuration.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.GetLicenseConfigurationResponse">
            <summary>
            This is the response object from the GetLicenseConfiguration operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GetLicenseConfigurationResponse.AutomatedDiscoveryInformation">
            <summary>
            Gets and sets the property AutomatedDiscoveryInformation. 
            <para>
            Automated discovery information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GetLicenseConfigurationResponse.ConsumedLicenses">
            <summary>
            Gets and sets the property ConsumedLicenses. 
            <para>
            Number of licenses assigned to resources.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GetLicenseConfigurationResponse.ConsumedLicenseSummaryList">
            <summary>
            Gets and sets the property ConsumedLicenseSummaryList. 
            <para>
            Summaries of the licenses consumed by resources.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GetLicenseConfigurationResponse.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            Description of the license configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GetLicenseConfigurationResponse.DisassociateWhenNotFound">
            <summary>
            Gets and sets the property DisassociateWhenNotFound. 
            <para>
            When true, disassociates a resource when software is uninstalled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GetLicenseConfigurationResponse.LicenseConfigurationArn">
            <summary>
            Gets and sets the property LicenseConfigurationArn. 
            <para>
            Amazon Resource Name (ARN) of the license configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GetLicenseConfigurationResponse.LicenseConfigurationId">
            <summary>
            Gets and sets the property LicenseConfigurationId. 
            <para>
            Unique ID for the license configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GetLicenseConfigurationResponse.LicenseCount">
            <summary>
            Gets and sets the property LicenseCount. 
            <para>
            Number of available licenses.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GetLicenseConfigurationResponse.LicenseCountHardLimit">
            <summary>
            Gets and sets the property LicenseCountHardLimit. 
            <para>
            Sets the number of available licenses as a hard limit.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GetLicenseConfigurationResponse.LicenseCountingType">
            <summary>
            Gets and sets the property LicenseCountingType. 
            <para>
            Dimension for which the licenses are counted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GetLicenseConfigurationResponse.LicenseRules">
            <summary>
            Gets and sets the property LicenseRules. 
            <para>
            License rules.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GetLicenseConfigurationResponse.ManagedResourceSummaryList">
            <summary>
            Gets and sets the property ManagedResourceSummaryList. 
            <para>
            Summaries of the managed resources.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GetLicenseConfigurationResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            Name of the license configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GetLicenseConfigurationResponse.OwnerAccountId">
            <summary>
            Gets and sets the property OwnerAccountId. 
            <para>
            Account ID of the owner of the license configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GetLicenseConfigurationResponse.ProductInformationList">
            <summary>
            Gets and sets the property ProductInformationList. 
            <para>
            Product information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GetLicenseConfigurationResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            License configuration status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GetLicenseConfigurationResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Tags for the license configuration.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.GetLicenseConversionTaskRequest">
            <summary>
            Container for the parameters to the GetLicenseConversionTask operation.
            Gets information about the specified license type conversion task.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GetLicenseConversionTaskRequest.LicenseConversionTaskId">
            <summary>
            Gets and sets the property LicenseConversionTaskId. 
            <para>
            ID of the license type conversion task to retrieve information on.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.GetLicenseConversionTaskResponse">
            <summary>
            This is the response object from the GetLicenseConversionTask operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GetLicenseConversionTaskResponse.DestinationLicenseContext">
            <summary>
            Gets and sets the property DestinationLicenseContext. 
            <para>
            Information about the license type converted to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GetLicenseConversionTaskResponse.EndTime">
            <summary>
            Gets and sets the property EndTime. 
            <para>
            Time at which the license type conversion task was completed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GetLicenseConversionTaskResponse.LicenseConversionTaskId">
            <summary>
            Gets and sets the property LicenseConversionTaskId. 
            <para>
            ID of the license type conversion task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GetLicenseConversionTaskResponse.LicenseConversionTime">
            <summary>
            Gets and sets the property LicenseConversionTime. 
            <para>
            Amount of time to complete the license type conversion.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GetLicenseConversionTaskResponse.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            Amazon Resource Names (ARN) of the resources the license conversion task is associated
            with.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GetLicenseConversionTaskResponse.SourceLicenseContext">
            <summary>
            Gets and sets the property SourceLicenseContext. 
            <para>
            Information about the license type converted from.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GetLicenseConversionTaskResponse.StartTime">
            <summary>
            Gets and sets the property StartTime. 
            <para>
            Time at which the license type conversion task was started .
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GetLicenseConversionTaskResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Status of the license type conversion task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GetLicenseConversionTaskResponse.StatusMessage">
            <summary>
            Gets and sets the property StatusMessage. 
            <para>
            The status message for the conversion task.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.GetLicenseManagerReportGeneratorRequest">
            <summary>
            Container for the parameters to the GetLicenseManagerReportGenerator operation.
            Gets information about the specified report generator.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GetLicenseManagerReportGeneratorRequest.LicenseManagerReportGeneratorArn">
            <summary>
            Gets and sets the property LicenseManagerReportGeneratorArn. 
            <para>
            Amazon Resource Name (ARN) of the report generator.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.GetLicenseManagerReportGeneratorResponse">
            <summary>
            This is the response object from the GetLicenseManagerReportGenerator operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GetLicenseManagerReportGeneratorResponse.ReportGenerator">
            <summary>
            Gets and sets the property ReportGenerator. 
            <para>
            A report generator that creates periodic reports about your license configurations.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.GetLicenseRequest">
            <summary>
            Container for the parameters to the GetLicense operation.
            Gets detailed information about the specified license.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GetLicenseRequest.LicenseArn">
            <summary>
            Gets and sets the property LicenseArn. 
            <para>
            Amazon Resource Name (ARN) of the license.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GetLicenseRequest.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            License version.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.GetLicenseResponse">
            <summary>
            This is the response object from the GetLicense operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GetLicenseResponse.License">
            <summary>
            Gets and sets the property License. 
            <para>
            License details.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.GetLicenseUsageRequest">
            <summary>
            Container for the parameters to the GetLicenseUsage operation.
            Gets detailed information about the usage of the specified license.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GetLicenseUsageRequest.LicenseArn">
            <summary>
            Gets and sets the property LicenseArn. 
            <para>
            Amazon Resource Name (ARN) of the license.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.GetLicenseUsageResponse">
            <summary>
            This is the response object from the GetLicenseUsage operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GetLicenseUsageResponse.LicenseUsage">
            <summary>
            Gets and sets the property LicenseUsage. 
            <para>
            License usage details.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.GetServiceSettingsRequest">
            <summary>
            Container for the parameters to the GetServiceSettings operation.
            Gets the License Manager settings for the current Region.
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.GetServiceSettingsResponse">
            <summary>
            This is the response object from the GetServiceSettings operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GetServiceSettingsResponse.EnableCrossAccountsDiscovery">
            <summary>
            Gets and sets the property EnableCrossAccountsDiscovery. 
            <para>
            Indicates whether cross-account discovery is enabled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GetServiceSettingsResponse.LicenseManagerResourceShareArn">
            <summary>
            Gets and sets the property LicenseManagerResourceShareArn. 
            <para>
            Amazon Resource Name (ARN) of the resource share. The License Manager management account
            provides member accounts with access to this share.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GetServiceSettingsResponse.OrganizationConfiguration">
            <summary>
            Gets and sets the property OrganizationConfiguration. 
            <para>
            Indicates whether Organizations is integrated with License Manager for cross-account
            discovery.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GetServiceSettingsResponse.S3BucketArn">
            <summary>
            Gets and sets the property S3BucketArn. 
            <para>
            Regional S3 bucket path for storing reports, license trail event data, discovery data,
            and so on.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GetServiceSettingsResponse.SnsTopicArn">
            <summary>
            Gets and sets the property SnsTopicArn. 
            <para>
            SNS topic configured to receive notifications from License Manager.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.Grant">
            <summary>
            Describes a grant.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Grant.GrantArn">
            <summary>
            Gets and sets the property GrantArn. 
            <para>
            Amazon Resource Name (ARN) of the grant.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Grant.GrantedOperations">
            <summary>
            Gets and sets the property GrantedOperations. 
            <para>
            Granted operations.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Grant.GranteePrincipalArn">
            <summary>
            Gets and sets the property GranteePrincipalArn. 
            <para>
            The grantee principal ARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Grant.GrantName">
            <summary>
            Gets and sets the property GrantName. 
            <para>
            Grant name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Grant.GrantStatus">
            <summary>
            Gets and sets the property GrantStatus. 
            <para>
            Grant status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Grant.HomeRegion">
            <summary>
            Gets and sets the property HomeRegion. 
            <para>
            Home Region of the grant.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Grant.LicenseArn">
            <summary>
            Gets and sets the property LicenseArn. 
            <para>
            License ARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Grant.ParentArn">
            <summary>
            Gets and sets the property ParentArn. 
            <para>
            Parent ARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Grant.StatusReason">
            <summary>
            Gets and sets the property StatusReason. 
            <para>
            Grant status reason.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Grant.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            Grant version.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.GrantedLicense">
            <summary>
            Describes a license that is granted to a grantee.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GrantedLicense.Beneficiary">
            <summary>
            Gets and sets the property Beneficiary. 
            <para>
            Granted license beneficiary.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GrantedLicense.ConsumptionConfiguration">
            <summary>
            Gets and sets the property ConsumptionConfiguration. 
            <para>
            Configuration for consumption of the license.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GrantedLicense.CreateTime">
            <summary>
            Gets and sets the property CreateTime. 
            <para>
            Creation time of the granted license.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GrantedLicense.Entitlements">
            <summary>
            Gets and sets the property Entitlements. 
            <para>
            License entitlements.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GrantedLicense.HomeRegion">
            <summary>
            Gets and sets the property HomeRegion. 
            <para>
            Home Region of the granted license.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GrantedLicense.Issuer">
            <summary>
            Gets and sets the property Issuer. 
            <para>
            Granted license issuer.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GrantedLicense.LicenseArn">
            <summary>
            Gets and sets the property LicenseArn. 
            <para>
            Amazon Resource Name (ARN) of the license.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GrantedLicense.LicenseMetadata">
            <summary>
            Gets and sets the property LicenseMetadata. 
            <para>
            Granted license metadata.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GrantedLicense.LicenseName">
            <summary>
            Gets and sets the property LicenseName. 
            <para>
            License name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GrantedLicense.ProductName">
            <summary>
            Gets and sets the property ProductName. 
            <para>
            Product name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GrantedLicense.ProductSKU">
            <summary>
            Gets and sets the property ProductSKU. 
            <para>
            Product SKU.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GrantedLicense.ReceivedMetadata">
            <summary>
            Gets and sets the property ReceivedMetadata. 
            <para>
            Granted license received metadata.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GrantedLicense.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Granted license status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GrantedLicense.Validity">
            <summary>
            Gets and sets the property Validity. 
            <para>
            Date and time range during which the granted license is valid, in ISO8601-UTC format.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GrantedLicense.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            Version of the granted license.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.AcceptGrantRequestMarshaller">
            <summary>
            AcceptGrant Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.AcceptGrantRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.AcceptGrantRequestMarshaller.Marshall(Amazon.LicenseManager.Model.AcceptGrantRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.AcceptGrantRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.AcceptGrantResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AcceptGrant operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.AcceptGrantResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.AcceptGrantResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.AcceptGrantResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for AccessDeniedException Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.AuthorizationExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for AuthorizationException Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.AuthorizationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.AuthorizationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.AuthorizationExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.AutomatedDiscoveryInformationUnmarshaller">
            <summary>
            Response Unmarshaller for AutomatedDiscoveryInformation Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.AutomatedDiscoveryInformationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LicenseManager#Model#AutomatedDiscoveryInformation,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.AutomatedDiscoveryInformationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.AutomatedDiscoveryInformationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.BorrowConfigurationMarshaller">
            <summary>
            BorrowConfiguration Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.BorrowConfigurationMarshaller.Marshall(Amazon.LicenseManager.Model.BorrowConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LicenseManager.Model.Internal.MarshallTransformations.BorrowConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.BorrowConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for BorrowConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.BorrowConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LicenseManager#Model#BorrowConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.BorrowConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.BorrowConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CheckInLicenseRequestMarshaller">
            <summary>
            CheckInLicense Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CheckInLicenseRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CheckInLicenseRequestMarshaller.Marshall(Amazon.LicenseManager.Model.CheckInLicenseRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CheckInLicenseRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CheckInLicenseResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CheckInLicense operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CheckInLicenseResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CheckInLicenseResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CheckInLicenseResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CheckoutBorrowLicenseRequestMarshaller">
            <summary>
            CheckoutBorrowLicense Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CheckoutBorrowLicenseRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CheckoutBorrowLicenseRequestMarshaller.Marshall(Amazon.LicenseManager.Model.CheckoutBorrowLicenseRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CheckoutBorrowLicenseRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CheckoutBorrowLicenseResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CheckoutBorrowLicense operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CheckoutBorrowLicenseResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CheckoutBorrowLicenseResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CheckoutBorrowLicenseResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CheckoutLicenseRequestMarshaller">
            <summary>
            CheckoutLicense Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CheckoutLicenseRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CheckoutLicenseRequestMarshaller.Marshall(Amazon.LicenseManager.Model.CheckoutLicenseRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CheckoutLicenseRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CheckoutLicenseResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CheckoutLicense operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CheckoutLicenseResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CheckoutLicenseResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CheckoutLicenseResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ConflictException Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ConsumedLicenseSummaryUnmarshaller">
            <summary>
            Response Unmarshaller for ConsumedLicenseSummary Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ConsumedLicenseSummaryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LicenseManager#Model#ConsumedLicenseSummary,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ConsumedLicenseSummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ConsumedLicenseSummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ConsumptionConfigurationMarshaller">
            <summary>
            ConsumptionConfiguration Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ConsumptionConfigurationMarshaller.Marshall(Amazon.LicenseManager.Model.ConsumptionConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ConsumptionConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ConsumptionConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for ConsumptionConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ConsumptionConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LicenseManager#Model#ConsumptionConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ConsumptionConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ConsumptionConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CreateGrantRequestMarshaller">
            <summary>
            CreateGrant Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CreateGrantRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CreateGrantRequestMarshaller.Marshall(Amazon.LicenseManager.Model.CreateGrantRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CreateGrantRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CreateGrantResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateGrant operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CreateGrantResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CreateGrantResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CreateGrantResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CreateGrantVersionRequestMarshaller">
            <summary>
            CreateGrantVersion Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CreateGrantVersionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CreateGrantVersionRequestMarshaller.Marshall(Amazon.LicenseManager.Model.CreateGrantVersionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CreateGrantVersionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CreateGrantVersionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateGrantVersion operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CreateGrantVersionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CreateGrantVersionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CreateGrantVersionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CreateLicenseConfigurationRequestMarshaller">
            <summary>
            CreateLicenseConfiguration Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CreateLicenseConfigurationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CreateLicenseConfigurationRequestMarshaller.Marshall(Amazon.LicenseManager.Model.CreateLicenseConfigurationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CreateLicenseConfigurationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CreateLicenseConfigurationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateLicenseConfiguration operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CreateLicenseConfigurationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CreateLicenseConfigurationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CreateLicenseConfigurationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CreateLicenseConversionTaskForResourceRequestMarshaller">
            <summary>
            CreateLicenseConversionTaskForResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CreateLicenseConversionTaskForResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CreateLicenseConversionTaskForResourceRequestMarshaller.Marshall(Amazon.LicenseManager.Model.CreateLicenseConversionTaskForResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CreateLicenseConversionTaskForResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CreateLicenseConversionTaskForResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateLicenseConversionTaskForResource operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CreateLicenseConversionTaskForResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CreateLicenseConversionTaskForResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CreateLicenseConversionTaskForResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CreateLicenseManagerReportGeneratorRequestMarshaller">
            <summary>
            CreateLicenseManagerReportGenerator Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CreateLicenseManagerReportGeneratorRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CreateLicenseManagerReportGeneratorRequestMarshaller.Marshall(Amazon.LicenseManager.Model.CreateLicenseManagerReportGeneratorRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CreateLicenseManagerReportGeneratorRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CreateLicenseManagerReportGeneratorResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateLicenseManagerReportGenerator operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CreateLicenseManagerReportGeneratorResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CreateLicenseManagerReportGeneratorResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CreateLicenseManagerReportGeneratorResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CreateLicenseRequestMarshaller">
            <summary>
            CreateLicense Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CreateLicenseRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CreateLicenseRequestMarshaller.Marshall(Amazon.LicenseManager.Model.CreateLicenseRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CreateLicenseRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CreateLicenseResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateLicense operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CreateLicenseResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CreateLicenseResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CreateLicenseResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CreateLicenseVersionRequestMarshaller">
            <summary>
            CreateLicenseVersion Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CreateLicenseVersionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CreateLicenseVersionRequestMarshaller.Marshall(Amazon.LicenseManager.Model.CreateLicenseVersionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CreateLicenseVersionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CreateLicenseVersionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateLicenseVersion operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CreateLicenseVersionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CreateLicenseVersionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CreateLicenseVersionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CreateTokenRequestMarshaller">
            <summary>
            CreateToken Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CreateTokenRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CreateTokenRequestMarshaller.Marshall(Amazon.LicenseManager.Model.CreateTokenRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CreateTokenRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CreateTokenResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateToken operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CreateTokenResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CreateTokenResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CreateTokenResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.DatetimeRangeMarshaller">
            <summary>
            DatetimeRange Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.DatetimeRangeMarshaller.Marshall(Amazon.LicenseManager.Model.DatetimeRange,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LicenseManager.Model.Internal.MarshallTransformations.DatetimeRangeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.DatetimeRangeUnmarshaller">
            <summary>
            Response Unmarshaller for DatetimeRange Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.DatetimeRangeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LicenseManager#Model#DatetimeRange,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.DatetimeRangeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.DatetimeRangeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.DeleteGrantRequestMarshaller">
            <summary>
            DeleteGrant Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.DeleteGrantRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.DeleteGrantRequestMarshaller.Marshall(Amazon.LicenseManager.Model.DeleteGrantRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.DeleteGrantRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.DeleteGrantResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteGrant operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.DeleteGrantResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.DeleteGrantResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.DeleteGrantResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.DeleteLicenseConfigurationRequestMarshaller">
            <summary>
            DeleteLicenseConfiguration Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.DeleteLicenseConfigurationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.DeleteLicenseConfigurationRequestMarshaller.Marshall(Amazon.LicenseManager.Model.DeleteLicenseConfigurationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.DeleteLicenseConfigurationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.DeleteLicenseConfigurationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteLicenseConfiguration operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.DeleteLicenseConfigurationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.DeleteLicenseConfigurationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.DeleteLicenseConfigurationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.DeleteLicenseManagerReportGeneratorRequestMarshaller">
            <summary>
            DeleteLicenseManagerReportGenerator Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.DeleteLicenseManagerReportGeneratorRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.DeleteLicenseManagerReportGeneratorRequestMarshaller.Marshall(Amazon.LicenseManager.Model.DeleteLicenseManagerReportGeneratorRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.DeleteLicenseManagerReportGeneratorRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.DeleteLicenseManagerReportGeneratorResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteLicenseManagerReportGenerator operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.DeleteLicenseManagerReportGeneratorResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.DeleteLicenseManagerReportGeneratorResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.DeleteLicenseManagerReportGeneratorResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.DeleteLicenseRequestMarshaller">
            <summary>
            DeleteLicense Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.DeleteLicenseRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.DeleteLicenseRequestMarshaller.Marshall(Amazon.LicenseManager.Model.DeleteLicenseRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.DeleteLicenseRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.DeleteLicenseResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteLicense operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.DeleteLicenseResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.DeleteLicenseResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.DeleteLicenseResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.DeleteTokenRequestMarshaller">
            <summary>
            DeleteToken Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.DeleteTokenRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.DeleteTokenRequestMarshaller.Marshall(Amazon.LicenseManager.Model.DeleteTokenRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.DeleteTokenRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.DeleteTokenResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteToken operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.DeleteTokenResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.DeleteTokenResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.DeleteTokenResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.EntitlementDataMarshaller">
            <summary>
            EntitlementData Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.EntitlementDataMarshaller.Marshall(Amazon.LicenseManager.Model.EntitlementData,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LicenseManager.Model.Internal.MarshallTransformations.EntitlementDataMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.EntitlementDataUnmarshaller">
            <summary>
            Response Unmarshaller for EntitlementData Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.EntitlementDataUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LicenseManager#Model#EntitlementData,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.EntitlementDataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.EntitlementDataUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.EntitlementMarshaller">
            <summary>
            Entitlement Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.EntitlementMarshaller.Marshall(Amazon.LicenseManager.Model.Entitlement,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LicenseManager.Model.Internal.MarshallTransformations.EntitlementMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.EntitlementNotAllowedExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for EntitlementNotAllowedException Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.EntitlementNotAllowedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.EntitlementNotAllowedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.EntitlementNotAllowedExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.EntitlementUnmarshaller">
            <summary>
            Response Unmarshaller for Entitlement Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.EntitlementUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LicenseManager#Model#Entitlement,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.EntitlementUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.EntitlementUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.EntitlementUsageUnmarshaller">
            <summary>
            Response Unmarshaller for EntitlementUsage Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.EntitlementUsageUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LicenseManager#Model#EntitlementUsage,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.EntitlementUsageUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.EntitlementUsageUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ExtendLicenseConsumptionRequestMarshaller">
            <summary>
            ExtendLicenseConsumption Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ExtendLicenseConsumptionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ExtendLicenseConsumptionRequestMarshaller.Marshall(Amazon.LicenseManager.Model.ExtendLicenseConsumptionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ExtendLicenseConsumptionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ExtendLicenseConsumptionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ExtendLicenseConsumption operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ExtendLicenseConsumptionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ExtendLicenseConsumptionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ExtendLicenseConsumptionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.FailedDependencyExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for FailedDependencyException Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.FailedDependencyExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.FailedDependencyExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.FailedDependencyExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.FilterLimitExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for FilterLimitExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.FilterLimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.FilterLimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.FilterLimitExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.FilterMarshaller">
            <summary>
            Filter Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.FilterMarshaller.Marshall(Amazon.LicenseManager.Model.Filter,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LicenseManager.Model.Internal.MarshallTransformations.FilterMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetAccessTokenRequestMarshaller">
            <summary>
            GetAccessToken Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetAccessTokenRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetAccessTokenRequestMarshaller.Marshall(Amazon.LicenseManager.Model.GetAccessTokenRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetAccessTokenRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetAccessTokenResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetAccessToken operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetAccessTokenResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetAccessTokenResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetAccessTokenResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetGrantRequestMarshaller">
            <summary>
            GetGrant Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetGrantRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetGrantRequestMarshaller.Marshall(Amazon.LicenseManager.Model.GetGrantRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetGrantRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetGrantResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetGrant operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetGrantResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetGrantResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetGrantResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetLicenseConfigurationRequestMarshaller">
            <summary>
            GetLicenseConfiguration Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetLicenseConfigurationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetLicenseConfigurationRequestMarshaller.Marshall(Amazon.LicenseManager.Model.GetLicenseConfigurationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetLicenseConfigurationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetLicenseConfigurationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetLicenseConfiguration operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetLicenseConfigurationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetLicenseConfigurationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetLicenseConfigurationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetLicenseConversionTaskRequestMarshaller">
            <summary>
            GetLicenseConversionTask Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetLicenseConversionTaskRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetLicenseConversionTaskRequestMarshaller.Marshall(Amazon.LicenseManager.Model.GetLicenseConversionTaskRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetLicenseConversionTaskRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetLicenseConversionTaskResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetLicenseConversionTask operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetLicenseConversionTaskResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetLicenseConversionTaskResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetLicenseConversionTaskResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetLicenseManagerReportGeneratorRequestMarshaller">
            <summary>
            GetLicenseManagerReportGenerator Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetLicenseManagerReportGeneratorRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetLicenseManagerReportGeneratorRequestMarshaller.Marshall(Amazon.LicenseManager.Model.GetLicenseManagerReportGeneratorRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetLicenseManagerReportGeneratorRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetLicenseManagerReportGeneratorResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetLicenseManagerReportGenerator operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetLicenseManagerReportGeneratorResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetLicenseManagerReportGeneratorResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetLicenseManagerReportGeneratorResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetLicenseRequestMarshaller">
            <summary>
            GetLicense Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetLicenseRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetLicenseRequestMarshaller.Marshall(Amazon.LicenseManager.Model.GetLicenseRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetLicenseRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetLicenseResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetLicense operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetLicenseResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetLicenseResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetLicenseResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetLicenseUsageRequestMarshaller">
            <summary>
            GetLicenseUsage Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetLicenseUsageRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetLicenseUsageRequestMarshaller.Marshall(Amazon.LicenseManager.Model.GetLicenseUsageRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetLicenseUsageRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetLicenseUsageResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetLicenseUsage operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetLicenseUsageResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetLicenseUsageResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetLicenseUsageResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetServiceSettingsRequestMarshaller">
            <summary>
            GetServiceSettings Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetServiceSettingsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetServiceSettingsRequestMarshaller.Marshall(Amazon.LicenseManager.Model.GetServiceSettingsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetServiceSettingsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetServiceSettingsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetServiceSettings operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetServiceSettingsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetServiceSettingsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetServiceSettingsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GrantedLicenseUnmarshaller">
            <summary>
            Response Unmarshaller for GrantedLicense Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GrantedLicenseUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LicenseManager#Model#GrantedLicense,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GrantedLicenseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GrantedLicenseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GrantUnmarshaller">
            <summary>
            Response Unmarshaller for Grant Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GrantUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LicenseManager#Model#Grant,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GrantUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GrantUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.InvalidParameterValueExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidParameterValueException Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.InvalidParameterValueExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.InvalidParameterValueExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.InvalidParameterValueExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.InvalidResourceStateExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidResourceStateException Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.InvalidResourceStateExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.InvalidResourceStateExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.InvalidResourceStateExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.InventoryFilterMarshaller">
            <summary>
            InventoryFilter Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.InventoryFilterMarshaller.Marshall(Amazon.LicenseManager.Model.InventoryFilter,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LicenseManager.Model.Internal.MarshallTransformations.InventoryFilterMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.IssuerDetailsUnmarshaller">
            <summary>
            Response Unmarshaller for IssuerDetails Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.IssuerDetailsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LicenseManager#Model#IssuerDetails,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.IssuerDetailsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.IssuerDetailsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.IssuerMarshaller">
            <summary>
            Issuer Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.IssuerMarshaller.Marshall(Amazon.LicenseManager.Model.Issuer,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LicenseManager.Model.Internal.MarshallTransformations.IssuerMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.LicenseConfigurationAssociationUnmarshaller">
            <summary>
            Response Unmarshaller for LicenseConfigurationAssociation Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.LicenseConfigurationAssociationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LicenseManager#Model#LicenseConfigurationAssociation,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.LicenseConfigurationAssociationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.LicenseConfigurationAssociationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.LicenseConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for LicenseConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.LicenseConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LicenseManager#Model#LicenseConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.LicenseConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.LicenseConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.LicenseConfigurationUsageUnmarshaller">
            <summary>
            Response Unmarshaller for LicenseConfigurationUsage Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.LicenseConfigurationUsageUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LicenseManager#Model#LicenseConfigurationUsage,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.LicenseConfigurationUsageUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.LicenseConfigurationUsageUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.LicenseConversionContextMarshaller">
            <summary>
            LicenseConversionContext Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.LicenseConversionContextMarshaller.Marshall(Amazon.LicenseManager.Model.LicenseConversionContext,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LicenseManager.Model.Internal.MarshallTransformations.LicenseConversionContextMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.LicenseConversionContextUnmarshaller">
            <summary>
            Response Unmarshaller for LicenseConversionContext Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.LicenseConversionContextUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LicenseManager#Model#LicenseConversionContext,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.LicenseConversionContextUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.LicenseConversionContextUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.LicenseConversionTaskUnmarshaller">
            <summary>
            Response Unmarshaller for LicenseConversionTask Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.LicenseConversionTaskUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LicenseManager#Model#LicenseConversionTask,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.LicenseConversionTaskUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.LicenseConversionTaskUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.LicenseOperationFailureUnmarshaller">
            <summary>
            Response Unmarshaller for LicenseOperationFailure Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.LicenseOperationFailureUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LicenseManager#Model#LicenseOperationFailure,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.LicenseOperationFailureUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.LicenseOperationFailureUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.LicenseSpecificationMarshaller">
            <summary>
            LicenseSpecification Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.LicenseSpecificationMarshaller.Marshall(Amazon.LicenseManager.Model.LicenseSpecification,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LicenseManager.Model.Internal.MarshallTransformations.LicenseSpecificationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.LicenseSpecificationUnmarshaller">
            <summary>
            Response Unmarshaller for LicenseSpecification Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.LicenseSpecificationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LicenseManager#Model#LicenseSpecification,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.LicenseSpecificationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.LicenseSpecificationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.LicenseUnmarshaller">
            <summary>
            Response Unmarshaller for License Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.LicenseUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LicenseManager#Model#License,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.LicenseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.LicenseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.LicenseUsageExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for LicenseUsageException Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.LicenseUsageExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.LicenseUsageExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.LicenseUsageExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.LicenseUsageUnmarshaller">
            <summary>
            Response Unmarshaller for LicenseUsage Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.LicenseUsageUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LicenseManager#Model#LicenseUsage,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.LicenseUsageUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.LicenseUsageUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListAssociationsForLicenseConfigurationRequestMarshaller">
            <summary>
            ListAssociationsForLicenseConfiguration Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListAssociationsForLicenseConfigurationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListAssociationsForLicenseConfigurationRequestMarshaller.Marshall(Amazon.LicenseManager.Model.ListAssociationsForLicenseConfigurationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListAssociationsForLicenseConfigurationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListAssociationsForLicenseConfigurationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListAssociationsForLicenseConfiguration operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListAssociationsForLicenseConfigurationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListAssociationsForLicenseConfigurationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListAssociationsForLicenseConfigurationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListDistributedGrantsRequestMarshaller">
            <summary>
            ListDistributedGrants Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListDistributedGrantsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListDistributedGrantsRequestMarshaller.Marshall(Amazon.LicenseManager.Model.ListDistributedGrantsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListDistributedGrantsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListDistributedGrantsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListDistributedGrants operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListDistributedGrantsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListDistributedGrantsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListDistributedGrantsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListFailuresForLicenseConfigurationOperationsRequestMarshaller">
            <summary>
            ListFailuresForLicenseConfigurationOperations Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListFailuresForLicenseConfigurationOperationsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListFailuresForLicenseConfigurationOperationsRequestMarshaller.Marshall(Amazon.LicenseManager.Model.ListFailuresForLicenseConfigurationOperationsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListFailuresForLicenseConfigurationOperationsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListFailuresForLicenseConfigurationOperationsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListFailuresForLicenseConfigurationOperations operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListFailuresForLicenseConfigurationOperationsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListFailuresForLicenseConfigurationOperationsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListFailuresForLicenseConfigurationOperationsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListLicenseConfigurationsRequestMarshaller">
            <summary>
            ListLicenseConfigurations Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListLicenseConfigurationsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListLicenseConfigurationsRequestMarshaller.Marshall(Amazon.LicenseManager.Model.ListLicenseConfigurationsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListLicenseConfigurationsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListLicenseConfigurationsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListLicenseConfigurations operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListLicenseConfigurationsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListLicenseConfigurationsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListLicenseConfigurationsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListLicenseConversionTasksRequestMarshaller">
            <summary>
            ListLicenseConversionTasks Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListLicenseConversionTasksRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListLicenseConversionTasksRequestMarshaller.Marshall(Amazon.LicenseManager.Model.ListLicenseConversionTasksRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListLicenseConversionTasksRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListLicenseConversionTasksResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListLicenseConversionTasks operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListLicenseConversionTasksResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListLicenseConversionTasksResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListLicenseConversionTasksResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListLicenseManagerReportGeneratorsRequestMarshaller">
            <summary>
            ListLicenseManagerReportGenerators Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListLicenseManagerReportGeneratorsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListLicenseManagerReportGeneratorsRequestMarshaller.Marshall(Amazon.LicenseManager.Model.ListLicenseManagerReportGeneratorsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListLicenseManagerReportGeneratorsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListLicenseManagerReportGeneratorsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListLicenseManagerReportGenerators operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListLicenseManagerReportGeneratorsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListLicenseManagerReportGeneratorsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListLicenseManagerReportGeneratorsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListLicenseSpecificationsForResourceRequestMarshaller">
            <summary>
            ListLicenseSpecificationsForResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListLicenseSpecificationsForResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListLicenseSpecificationsForResourceRequestMarshaller.Marshall(Amazon.LicenseManager.Model.ListLicenseSpecificationsForResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListLicenseSpecificationsForResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListLicenseSpecificationsForResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListLicenseSpecificationsForResource operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListLicenseSpecificationsForResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListLicenseSpecificationsForResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListLicenseSpecificationsForResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListLicensesRequestMarshaller">
            <summary>
            ListLicenses Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListLicensesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListLicensesRequestMarshaller.Marshall(Amazon.LicenseManager.Model.ListLicensesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListLicensesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListLicensesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListLicenses operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListLicensesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListLicensesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListLicensesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListLicenseVersionsRequestMarshaller">
            <summary>
            ListLicenseVersions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListLicenseVersionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListLicenseVersionsRequestMarshaller.Marshall(Amazon.LicenseManager.Model.ListLicenseVersionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListLicenseVersionsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListLicenseVersionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListLicenseVersions operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListLicenseVersionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListLicenseVersionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListLicenseVersionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListReceivedGrantsRequestMarshaller">
            <summary>
            ListReceivedGrants Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListReceivedGrantsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListReceivedGrantsRequestMarshaller.Marshall(Amazon.LicenseManager.Model.ListReceivedGrantsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListReceivedGrantsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListReceivedGrantsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListReceivedGrants operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListReceivedGrantsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListReceivedGrantsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListReceivedGrantsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListReceivedLicensesRequestMarshaller">
            <summary>
            ListReceivedLicenses Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListReceivedLicensesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListReceivedLicensesRequestMarshaller.Marshall(Amazon.LicenseManager.Model.ListReceivedLicensesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListReceivedLicensesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListReceivedLicensesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListReceivedLicenses operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListReceivedLicensesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListReceivedLicensesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListReceivedLicensesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListResourceInventoryRequestMarshaller">
            <summary>
            ListResourceInventory Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListResourceInventoryRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListResourceInventoryRequestMarshaller.Marshall(Amazon.LicenseManager.Model.ListResourceInventoryRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListResourceInventoryRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListResourceInventoryResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListResourceInventory operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListResourceInventoryResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListResourceInventoryResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListResourceInventoryResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller">
            <summary>
            ListTagsForResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.LicenseManager.Model.ListTagsForResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListTagsForResource operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListTokensRequestMarshaller">
            <summary>
            ListTokens Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListTokensRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListTokensRequestMarshaller.Marshall(Amazon.LicenseManager.Model.ListTokensRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListTokensRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListTokensResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListTokens operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListTokensResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListTokensResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListTokensResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListUsageForLicenseConfigurationRequestMarshaller">
            <summary>
            ListUsageForLicenseConfiguration Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListUsageForLicenseConfigurationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListUsageForLicenseConfigurationRequestMarshaller.Marshall(Amazon.LicenseManager.Model.ListUsageForLicenseConfigurationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListUsageForLicenseConfigurationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListUsageForLicenseConfigurationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListUsageForLicenseConfiguration operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListUsageForLicenseConfigurationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListUsageForLicenseConfigurationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListUsageForLicenseConfigurationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ManagedResourceSummaryUnmarshaller">
            <summary>
            Response Unmarshaller for ManagedResourceSummary Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ManagedResourceSummaryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LicenseManager#Model#ManagedResourceSummary,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ManagedResourceSummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ManagedResourceSummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.MetadataMarshaller">
            <summary>
            Metadata Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.MetadataMarshaller.Marshall(Amazon.LicenseManager.Model.Metadata,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LicenseManager.Model.Internal.MarshallTransformations.MetadataMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.MetadataUnmarshaller">
            <summary>
            Response Unmarshaller for Metadata Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.MetadataUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LicenseManager#Model#Metadata,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.MetadataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.MetadataUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.NoEntitlementsAllowedExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for NoEntitlementsAllowedException Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.NoEntitlementsAllowedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.NoEntitlementsAllowedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.NoEntitlementsAllowedExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.OrganizationConfigurationMarshaller">
            <summary>
            OrganizationConfiguration Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.OrganizationConfigurationMarshaller.Marshall(Amazon.LicenseManager.Model.OrganizationConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LicenseManager.Model.Internal.MarshallTransformations.OrganizationConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.OrganizationConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for OrganizationConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.OrganizationConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LicenseManager#Model#OrganizationConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.OrganizationConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.OrganizationConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ProductInformationFilterMarshaller">
            <summary>
            ProductInformationFilter Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ProductInformationFilterMarshaller.Marshall(Amazon.LicenseManager.Model.ProductInformationFilter,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ProductInformationFilterMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ProductInformationFilterUnmarshaller">
            <summary>
            Response Unmarshaller for ProductInformationFilter Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ProductInformationFilterUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LicenseManager#Model#ProductInformationFilter,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ProductInformationFilterUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ProductInformationFilterUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ProductInformationMarshaller">
            <summary>
            ProductInformation Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ProductInformationMarshaller.Marshall(Amazon.LicenseManager.Model.ProductInformation,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ProductInformationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ProductInformationUnmarshaller">
            <summary>
            Response Unmarshaller for ProductInformation Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ProductInformationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LicenseManager#Model#ProductInformation,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ProductInformationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ProductInformationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ProvisionalConfigurationMarshaller">
            <summary>
            ProvisionalConfiguration Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ProvisionalConfigurationMarshaller.Marshall(Amazon.LicenseManager.Model.ProvisionalConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ProvisionalConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ProvisionalConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for ProvisionalConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ProvisionalConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LicenseManager#Model#ProvisionalConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ProvisionalConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ProvisionalConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.RateLimitExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for RateLimitExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.RateLimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.RateLimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.RateLimitExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ReceivedMetadataUnmarshaller">
            <summary>
            Response Unmarshaller for ReceivedMetadata Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ReceivedMetadataUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LicenseManager#Model#ReceivedMetadata,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ReceivedMetadataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ReceivedMetadataUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.RedirectExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for RedirectException Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.RedirectExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.RedirectExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.RedirectExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.RejectGrantRequestMarshaller">
            <summary>
            RejectGrant Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.RejectGrantRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.RejectGrantRequestMarshaller.Marshall(Amazon.LicenseManager.Model.RejectGrantRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.RejectGrantRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.RejectGrantResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RejectGrant operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.RejectGrantResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.RejectGrantResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.RejectGrantResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ReportContextMarshaller">
            <summary>
            ReportContext Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ReportContextMarshaller.Marshall(Amazon.LicenseManager.Model.ReportContext,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ReportContextMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ReportContextUnmarshaller">
            <summary>
            Response Unmarshaller for ReportContext Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ReportContextUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LicenseManager#Model#ReportContext,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ReportContextUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ReportContextUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ReportFrequencyMarshaller">
            <summary>
            ReportFrequency Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ReportFrequencyMarshaller.Marshall(Amazon.LicenseManager.Model.ReportFrequency,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ReportFrequencyMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ReportFrequencyUnmarshaller">
            <summary>
            Response Unmarshaller for ReportFrequency Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ReportFrequencyUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LicenseManager#Model#ReportFrequency,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ReportFrequencyUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ReportFrequencyUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ReportGeneratorUnmarshaller">
            <summary>
            Response Unmarshaller for ReportGenerator Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ReportGeneratorUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LicenseManager#Model#ReportGenerator,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ReportGeneratorUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ReportGeneratorUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ResourceInventoryUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceInventory Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ResourceInventoryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LicenseManager#Model#ResourceInventory,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ResourceInventoryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ResourceInventoryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ResourceLimitExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceLimitExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ResourceLimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ResourceLimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ResourceLimitExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.S3LocationUnmarshaller">
            <summary>
            Response Unmarshaller for S3Location Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.S3LocationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LicenseManager#Model#S3Location,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.S3LocationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.S3LocationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ServerInternalExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ServerInternalException Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ServerInternalExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ServerInternalExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ServerInternalExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.TagMarshaller">
            <summary>
            Tag Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.TagMarshaller.Marshall(Amazon.LicenseManager.Model.Tag,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LicenseManager.Model.Internal.MarshallTransformations.TagMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller">
            <summary>
            TagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.LicenseManager.Model.TagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for TagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.TagUnmarshaller">
            <summary>
            Response Unmarshaller for Tag Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.TagUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LicenseManager#Model#Tag,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.TagUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.TagUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.TokenDataUnmarshaller">
            <summary>
            Response Unmarshaller for TokenData Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.TokenDataUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LicenseManager#Model#TokenData,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.TokenDataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.TokenDataUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UnsupportedDigitalSignatureMethodExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for UnsupportedDigitalSignatureMethodException Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UnsupportedDigitalSignatureMethodExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UnsupportedDigitalSignatureMethodExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UnsupportedDigitalSignatureMethodExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller">
            <summary>
            UntagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.LicenseManager.Model.UntagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UntagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UpdateLicenseConfigurationRequestMarshaller">
            <summary>
            UpdateLicenseConfiguration Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UpdateLicenseConfigurationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UpdateLicenseConfigurationRequestMarshaller.Marshall(Amazon.LicenseManager.Model.UpdateLicenseConfigurationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UpdateLicenseConfigurationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UpdateLicenseConfigurationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateLicenseConfiguration operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UpdateLicenseConfigurationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UpdateLicenseConfigurationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UpdateLicenseConfigurationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UpdateLicenseManagerReportGeneratorRequestMarshaller">
            <summary>
            UpdateLicenseManagerReportGenerator Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UpdateLicenseManagerReportGeneratorRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UpdateLicenseManagerReportGeneratorRequestMarshaller.Marshall(Amazon.LicenseManager.Model.UpdateLicenseManagerReportGeneratorRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UpdateLicenseManagerReportGeneratorRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UpdateLicenseManagerReportGeneratorResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateLicenseManagerReportGenerator operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UpdateLicenseManagerReportGeneratorResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UpdateLicenseManagerReportGeneratorResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UpdateLicenseManagerReportGeneratorResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UpdateLicenseSpecificationsForResourceRequestMarshaller">
            <summary>
            UpdateLicenseSpecificationsForResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UpdateLicenseSpecificationsForResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UpdateLicenseSpecificationsForResourceRequestMarshaller.Marshall(Amazon.LicenseManager.Model.UpdateLicenseSpecificationsForResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UpdateLicenseSpecificationsForResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UpdateLicenseSpecificationsForResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateLicenseSpecificationsForResource operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UpdateLicenseSpecificationsForResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UpdateLicenseSpecificationsForResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UpdateLicenseSpecificationsForResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UpdateServiceSettingsRequestMarshaller">
            <summary>
            UpdateServiceSettings Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UpdateServiceSettingsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UpdateServiceSettingsRequestMarshaller.Marshall(Amazon.LicenseManager.Model.UpdateServiceSettingsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UpdateServiceSettingsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UpdateServiceSettingsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateServiceSettings operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UpdateServiceSettingsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UpdateServiceSettingsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UpdateServiceSettingsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ValidationException Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            <summary>
            One or more parameter values are not valid.
            </summary>
        </member>
        <member name="M:Amazon.LicenseManager.Model.InvalidParameterValueException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidParameterValueException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.InvalidParameterValueException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidParameterValueException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.InvalidParameterValueException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidParameterValueException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.InvalidParameterValueException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidParameterValueException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.InvalidParameterValueException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidParameterValueException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.InvalidParameterValueException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidParameterValueException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.LicenseManager.Model.InvalidParameterValueException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.LicenseManager.Model.InvalidResourceStateException">
            <summary>
            License Manager cannot allocate a license to a resource because of its state. 
            
             
            <para>
            For example, you cannot allocate a license to an instance in the process of shutting
            down.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.LicenseManager.Model.InvalidResourceStateException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidResourceStateException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.InvalidResourceStateException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidResourceStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.InvalidResourceStateException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidResourceStateException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.InvalidResourceStateException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidResourceStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.InvalidResourceStateException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidResourceStateException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.InvalidResourceStateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidResourceStateException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.LicenseManager.Model.InvalidResourceStateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.LicenseManager.Model.InventoryFilter">
            <summary>
            An inventory filter.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.InventoryFilter.Condition">
            <summary>
            Gets and sets the property Condition. 
            <para>
            Condition of the filter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.InventoryFilter.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            Name of the filter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.InventoryFilter.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            Value of the filter.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.Issuer">
            <summary>
            Details about the issuer of a license.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Issuer.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            Issuer name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Issuer.SignKey">
            <summary>
            Gets and sets the property SignKey. 
            <para>
            Asymmetric KMS key from Key Management Service. The KMS key must have a key usage
            of sign and verify, and support the RSASSA-PSS SHA-256 signing algorithm.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.IssuerDetails">
            <summary>
            Details associated with the issuer of a license.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.IssuerDetails.KeyFingerprint">
            <summary>
            Gets and sets the property KeyFingerprint. 
            <para>
            Issuer key fingerprint.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.IssuerDetails.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            Issuer name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.IssuerDetails.SignKey">
            <summary>
            Gets and sets the property SignKey. 
            <para>
            Asymmetric KMS key from Key Management Service. The KMS key must have a key usage
            of sign and verify, and support the RSASSA-PSS SHA-256 signing algorithm.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.License">
            <summary>
            Software license that is managed in License Manager.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.License.Beneficiary">
            <summary>
            Gets and sets the property Beneficiary. 
            <para>
            License beneficiary.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.License.ConsumptionConfiguration">
            <summary>
            Gets and sets the property ConsumptionConfiguration. 
            <para>
            Configuration for consumption of the license.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.License.CreateTime">
            <summary>
            Gets and sets the property CreateTime. 
            <para>
            License creation time.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.License.Entitlements">
            <summary>
            Gets and sets the property Entitlements. 
            <para>
            License entitlements.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.License.HomeRegion">
            <summary>
            Gets and sets the property HomeRegion. 
            <para>
            Home Region of the license.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.License.Issuer">
            <summary>
            Gets and sets the property Issuer. 
            <para>
            License issuer.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.License.LicenseArn">
            <summary>
            Gets and sets the property LicenseArn. 
            <para>
            Amazon Resource Name (ARN) of the license.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.License.LicenseMetadata">
            <summary>
            Gets and sets the property LicenseMetadata. 
            <para>
            License metadata.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.License.LicenseName">
            <summary>
            Gets and sets the property LicenseName. 
            <para>
            License name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.License.ProductName">
            <summary>
            Gets and sets the property ProductName. 
            <para>
            Product name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.License.ProductSKU">
            <summary>
            Gets and sets the property ProductSKU. 
            <para>
            Product SKU.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.License.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            License status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.License.Validity">
            <summary>
            Gets and sets the property Validity. 
            <para>
            Date and time range during which the license is valid, in ISO8601-UTC format.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.License.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            License version.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.LicenseConfiguration">
            <summary>
            A license configuration is an abstraction of a customer license agreement that can
            be consumed and enforced by License Manager. Components include specifications for
            the license type (licensing by instance, socket, CPU, or vCPU), allowed tenancy (shared
            tenancy, Dedicated Instance, Dedicated Host, or all of these), host affinity (how
            long a VM must be associated with a host), and the number of licenses purchased and
            used.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseConfiguration.AutomatedDiscoveryInformation">
            <summary>
            Gets and sets the property AutomatedDiscoveryInformation. 
            <para>
            Automated discovery information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseConfiguration.ConsumedLicenses">
            <summary>
            Gets and sets the property ConsumedLicenses. 
            <para>
            Number of licenses consumed. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseConfiguration.ConsumedLicenseSummaryList">
            <summary>
            Gets and sets the property ConsumedLicenseSummaryList. 
            <para>
            Summaries for licenses consumed by various resources.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseConfiguration.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            Description of the license configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseConfiguration.DisassociateWhenNotFound">
            <summary>
            Gets and sets the property DisassociateWhenNotFound. 
            <para>
            When true, disassociates a resource when software is uninstalled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseConfiguration.LicenseConfigurationArn">
            <summary>
            Gets and sets the property LicenseConfigurationArn. 
            <para>
            Amazon Resource Name (ARN) of the license configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseConfiguration.LicenseConfigurationId">
            <summary>
            Gets and sets the property LicenseConfigurationId. 
            <para>
            Unique ID of the license configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseConfiguration.LicenseCount">
            <summary>
            Gets and sets the property LicenseCount. 
            <para>
            Number of licenses managed by the license configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseConfiguration.LicenseCountHardLimit">
            <summary>
            Gets and sets the property LicenseCountHardLimit. 
            <para>
            Number of available licenses as a hard limit.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseConfiguration.LicenseCountingType">
            <summary>
            Gets and sets the property LicenseCountingType. 
            <para>
            Dimension to use to track the license inventory.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseConfiguration.LicenseRules">
            <summary>
            Gets and sets the property LicenseRules. 
            <para>
            License rules.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseConfiguration.ManagedResourceSummaryList">
            <summary>
            Gets and sets the property ManagedResourceSummaryList. 
            <para>
            Summaries for managed resources.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseConfiguration.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            Name of the license configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseConfiguration.OwnerAccountId">
            <summary>
            Gets and sets the property OwnerAccountId. 
            <para>
            Account ID of the license configuration's owner.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseConfiguration.ProductInformationList">
            <summary>
            Gets and sets the property ProductInformationList. 
            <para>
            Product information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseConfiguration.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Status of the license configuration.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.LicenseConfigurationAssociation">
            <summary>
            Describes an association with a license configuration.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseConfigurationAssociation.AmiAssociationScope">
            <summary>
            Gets and sets the property AmiAssociationScope. 
            <para>
            Scope of AMI associations. The possible value is <code>cross-account</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseConfigurationAssociation.AssociationTime">
            <summary>
            Gets and sets the property AssociationTime. 
            <para>
            Time when the license configuration was associated with the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseConfigurationAssociation.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            Amazon Resource Name (ARN) of the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseConfigurationAssociation.ResourceOwnerId">
            <summary>
            Gets and sets the property ResourceOwnerId. 
            <para>
            ID of the Amazon Web Services account that owns the resource consuming licenses.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseConfigurationAssociation.ResourceType">
            <summary>
            Gets and sets the property ResourceType. 
            <para>
            Type of server resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.LicenseConfigurationUsage">
            <summary>
            Details about the usage of a resource associated with a license configuration.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseConfigurationUsage.AssociationTime">
            <summary>
            Gets and sets the property AssociationTime. 
            <para>
            Time when the license configuration was initially associated with the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseConfigurationUsage.ConsumedLicenses">
            <summary>
            Gets and sets the property ConsumedLicenses. 
            <para>
            Number of licenses consumed by the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseConfigurationUsage.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            Amazon Resource Name (ARN) of the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseConfigurationUsage.ResourceOwnerId">
            <summary>
            Gets and sets the property ResourceOwnerId. 
            <para>
            ID of the account that owns the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseConfigurationUsage.ResourceStatus">
            <summary>
            Gets and sets the property ResourceStatus. 
            <para>
            Status of the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseConfigurationUsage.ResourceType">
            <summary>
            Gets and sets the property ResourceType. 
            <para>
            Type of resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.LicenseConversionContext">
            <summary>
            Information about a license type conversion task.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseConversionContext.UsageOperation">
            <summary>
            Gets and sets the property UsageOperation. 
            <para>
            The Usage operation value that corresponds to the license type you are converting
            your resource from. For more information about which platforms correspond to which
            usage operation values see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/billing-info-fields.html#billing-info">Sample
            data: usage operation by platform </a> 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.LicenseConversionTask">
            <summary>
            Information about a license type conversion task.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseConversionTask.DestinationLicenseContext">
            <summary>
            Gets and sets the property DestinationLicenseContext. 
            <para>
            Information about the license type this conversion task converted to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseConversionTask.EndTime">
            <summary>
            Gets and sets the property EndTime. 
            <para>
            The time the conversion task was completed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseConversionTask.LicenseConversionTaskId">
            <summary>
            Gets and sets the property LicenseConversionTaskId. 
            <para>
            The ID of the license type conversion task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseConversionTask.LicenseConversionTime">
            <summary>
            Gets and sets the property LicenseConversionTime. 
            <para>
            The time the usage operation value of the resource was changed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseConversionTask.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The Amazon Resource Name (ARN) of the resource associated with the license type conversion
            task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseConversionTask.SourceLicenseContext">
            <summary>
            Gets and sets the property SourceLicenseContext. 
            <para>
            Information about the license type this conversion task converted from.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseConversionTask.StartTime">
            <summary>
            Gets and sets the property StartTime. 
            <para>
            The time the conversion task was started at.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseConversionTask.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the conversion task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseConversionTask.StatusMessage">
            <summary>
            Gets and sets the property StatusMessage. 
            <para>
            The status message for the conversion task.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.LicenseOperationFailure">
            <summary>
            Describes the failure of a license operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseOperationFailure.ErrorMessage">
            <summary>
            Gets and sets the property ErrorMessage. 
            <para>
            Error message.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseOperationFailure.FailureTime">
            <summary>
            Gets and sets the property FailureTime. 
            <para>
            Failure time.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseOperationFailure.MetadataList">
            <summary>
            Gets and sets the property MetadataList. 
            <para>
            Reserved.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseOperationFailure.OperationName">
            <summary>
            Gets and sets the property OperationName. 
            <para>
            Name of the operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseOperationFailure.OperationRequestedBy">
            <summary>
            Gets and sets the property OperationRequestedBy. 
            <para>
            The requester is "License Manager Automated Discovery".
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseOperationFailure.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            Amazon Resource Name (ARN) of the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseOperationFailure.ResourceOwnerId">
            <summary>
            Gets and sets the property ResourceOwnerId. 
            <para>
            ID of the Amazon Web Services account that owns the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseOperationFailure.ResourceType">
            <summary>
            Gets and sets the property ResourceType. 
            <para>
            Resource type.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.LicenseSpecification">
            <summary>
            Details for associating a license configuration with a resource.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseSpecification.AmiAssociationScope">
            <summary>
            Gets and sets the property AmiAssociationScope. 
            <para>
            Scope of AMI associations. The possible value is <code>cross-account</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseSpecification.LicenseConfigurationArn">
            <summary>
            Gets and sets the property LicenseConfigurationArn. 
            <para>
            Amazon Resource Name (ARN) of the license configuration.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.LicenseUsage">
            <summary>
            Describes the entitlement usage associated with a license.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseUsage.EntitlementUsages">
            <summary>
            Gets and sets the property EntitlementUsages. 
            <para>
            License entitlement usages.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.LicenseUsageException">
            <summary>
            You do not have enough licenses available to support a new resource launch.
            </summary>
        </member>
        <member name="M:Amazon.LicenseManager.Model.LicenseUsageException.#ctor(System.String)">
            <summary>
            Constructs a new LicenseUsageException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.LicenseUsageException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of LicenseUsageException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.LicenseUsageException.#ctor(System.Exception)">
            <summary>
            Construct instance of LicenseUsageException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.LicenseUsageException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LicenseUsageException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.LicenseUsageException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LicenseUsageException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.LicenseUsageException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the LicenseUsageException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.LicenseManager.Model.LicenseUsageException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.LicenseManager.Model.ListAssociationsForLicenseConfigurationRequest">
            <summary>
            Container for the parameters to the ListAssociationsForLicenseConfiguration operation.
            Lists the resource associations for the specified license configuration.
            
             
            <para>
            Resource associations need not consume licenses from a license configuration. For
            example, an AMI or a stopped instance might not consume a license (depending on the
            license rules).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListAssociationsForLicenseConfigurationRequest.LicenseConfigurationArn">
            <summary>
            Gets and sets the property LicenseConfigurationArn. 
            <para>
            Amazon Resource Name (ARN) of a license configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListAssociationsForLicenseConfigurationRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Maximum number of results to return in a single call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListAssociationsForLicenseConfigurationRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Token for the next set of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.ListAssociationsForLicenseConfigurationResponse">
            <summary>
            This is the response object from the ListAssociationsForLicenseConfiguration operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListAssociationsForLicenseConfigurationResponse.LicenseConfigurationAssociations">
            <summary>
            Gets and sets the property LicenseConfigurationAssociations. 
            <para>
            Information about the associations for the license configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListAssociationsForLicenseConfigurationResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Token for the next set of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.ListDistributedGrantsRequest">
            <summary>
            Container for the parameters to the ListDistributedGrants operation.
            Lists the grants distributed for the specified license.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListDistributedGrantsRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            Filters to scope the results. The following filters are supported:
            </para>
             <ul> <li> 
            <para>
             <code>LicenseArn</code> 
            </para>
             </li> <li> 
            <para>
             <code>GrantStatus</code> 
            </para>
             </li> <li> 
            <para>
             <code>GranteePrincipalARN</code> 
            </para>
             </li> <li> 
            <para>
             <code>ProductSKU</code> 
            </para>
             </li> <li> 
            <para>
             <code>LicenseIssuerName</code> 
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListDistributedGrantsRequest.GrantArns">
            <summary>
            Gets and sets the property GrantArns. 
            <para>
            Amazon Resource Names (ARNs) of the grants.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListDistributedGrantsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Maximum number of results to return in a single call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListDistributedGrantsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Token for the next set of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.ListDistributedGrantsResponse">
            <summary>
            This is the response object from the ListDistributedGrants operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListDistributedGrantsResponse.Grants">
            <summary>
            Gets and sets the property Grants. 
            <para>
            Distributed grant details.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListDistributedGrantsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Token for the next set of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.ListFailuresForLicenseConfigurationOperationsRequest">
            <summary>
            Container for the parameters to the ListFailuresForLicenseConfigurationOperations operation.
            Lists the license configuration operations that failed.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListFailuresForLicenseConfigurationOperationsRequest.LicenseConfigurationArn">
            <summary>
            Gets and sets the property LicenseConfigurationArn. 
            <para>
            Amazon Resource Name of the license configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListFailuresForLicenseConfigurationOperationsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Maximum number of results to return in a single call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListFailuresForLicenseConfigurationOperationsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Token for the next set of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.ListFailuresForLicenseConfigurationOperationsResponse">
            <summary>
            This is the response object from the ListFailuresForLicenseConfigurationOperations operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListFailuresForLicenseConfigurationOperationsResponse.LicenseOperationFailureList">
            <summary>
            Gets and sets the property LicenseOperationFailureList. 
            <para>
            License configuration operations that failed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListFailuresForLicenseConfigurationOperationsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Token for the next set of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.ListLicenseConfigurationsRequest">
            <summary>
            Container for the parameters to the ListLicenseConfigurations operation.
            Lists the license configurations for your account.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListLicenseConfigurationsRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            Filters to scope the results. The following filters and logical operators are supported:
            </para>
             <ul> <li> 
            <para>
             <code>licenseCountingType</code> - The dimension for which licenses are counted.
            Possible values are <code>vCPU</code> | <code>Instance</code> | <code>Core</code>
            | <code>Socket</code>. Logical operators are <code>EQUALS</code> | <code>NOT_EQUALS</code>.
            </para>
             </li> <li> 
            <para>
             <code>enforceLicenseCount</code> - A Boolean value that indicates whether hard license
            enforcement is used. Logical operators are <code>EQUALS</code> | <code>NOT_EQUALS</code>.
            </para>
             </li> <li> 
            <para>
             <code>usagelimitExceeded</code> - A Boolean value that indicates whether the available
            licenses have been exceeded. Logical operators are <code>EQUALS</code> | <code>NOT_EQUALS</code>.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListLicenseConfigurationsRequest.LicenseConfigurationArns">
            <summary>
            Gets and sets the property LicenseConfigurationArns. 
            <para>
            Amazon Resource Names (ARN) of the license configurations.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListLicenseConfigurationsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Maximum number of results to return in a single call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListLicenseConfigurationsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Token for the next set of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.ListLicenseConfigurationsResponse">
            <summary>
            This is the response object from the ListLicenseConfigurations operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListLicenseConfigurationsResponse.LicenseConfigurations">
            <summary>
            Gets and sets the property LicenseConfigurations. 
            <para>
            Information about the license configurations.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListLicenseConfigurationsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Token for the next set of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.ListLicenseConversionTasksRequest">
            <summary>
            Container for the parameters to the ListLicenseConversionTasks operation.
            Lists the license type conversion tasks for your account.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListLicenseConversionTasksRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
             Filters to scope the results. Valid filters are <code>ResourceArns</code> and <code>Status</code>.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListLicenseConversionTasksRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Maximum number of results to return in a single call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListLicenseConversionTasksRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Token for the next set of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.ListLicenseConversionTasksResponse">
            <summary>
            This is the response object from the ListLicenseConversionTasks operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListLicenseConversionTasksResponse.LicenseConversionTasks">
            <summary>
            Gets and sets the property LicenseConversionTasks. 
            <para>
            Information about the license configuration tasks for your account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListLicenseConversionTasksResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Token for the next set of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.ListLicenseManagerReportGeneratorsRequest">
            <summary>
            Container for the parameters to the ListLicenseManagerReportGenerators operation.
            Lists the report generators for your account.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListLicenseManagerReportGeneratorsRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            Filters to scope the results. The following filters are supported: 
            </para>
             <ul> <li> 
            <para>
             <code>LicenseConfigurationArn</code> 
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListLicenseManagerReportGeneratorsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Maximum number of results to return in a single call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListLicenseManagerReportGeneratorsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Token for the next set of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.ListLicenseManagerReportGeneratorsResponse">
            <summary>
            This is the response object from the ListLicenseManagerReportGenerators operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListLicenseManagerReportGeneratorsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Token for the next set of results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListLicenseManagerReportGeneratorsResponse.ReportGenerators">
            <summary>
            Gets and sets the property ReportGenerators. 
            <para>
            A report generator that creates periodic reports about your license configurations.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.ListLicenseSpecificationsForResourceRequest">
            <summary>
            Container for the parameters to the ListLicenseSpecificationsForResource operation.
            Describes the license configurations for the specified resource.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListLicenseSpecificationsForResourceRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Maximum number of results to return in a single call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListLicenseSpecificationsForResourceRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Token for the next set of results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListLicenseSpecificationsForResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            Amazon Resource Name (ARN) of a resource that has an associated license configuration.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.ListLicenseSpecificationsForResourceResponse">
            <summary>
            This is the response object from the ListLicenseSpecificationsForResource operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListLicenseSpecificationsForResourceResponse.LicenseSpecifications">
            <summary>
            Gets and sets the property LicenseSpecifications. 
            <para>
            License configurations associated with a resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListLicenseSpecificationsForResourceResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Token for the next set of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.ListLicensesRequest">
            <summary>
            Container for the parameters to the ListLicenses operation.
            Lists the licenses for your account.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListLicensesRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            Filters to scope the results. The following filters are supported:
            </para>
             <ul> <li> 
            <para>
             <code>Beneficiary</code> 
            </para>
             </li> <li> 
            <para>
             <code>ProductSKU</code> 
            </para>
             </li> <li> 
            <para>
             <code>Fingerprint</code> 
            </para>
             </li> <li> 
            <para>
             <code>Status</code> 
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListLicensesRequest.LicenseArns">
            <summary>
            Gets and sets the property LicenseArns. 
            <para>
            Amazon Resource Names (ARNs) of the licenses.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListLicensesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Maximum number of results to return in a single call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListLicensesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Token for the next set of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.ListLicensesResponse">
            <summary>
            This is the response object from the ListLicenses operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListLicensesResponse.Licenses">
            <summary>
            Gets and sets the property Licenses. 
            <para>
            License details.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListLicensesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Token for the next set of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.ListLicenseVersionsRequest">
            <summary>
            Container for the parameters to the ListLicenseVersions operation.
            Lists all versions of the specified license.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListLicenseVersionsRequest.LicenseArn">
            <summary>
            Gets and sets the property LicenseArn. 
            <para>
            Amazon Resource Name (ARN) of the license.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListLicenseVersionsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Maximum number of results to return in a single call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListLicenseVersionsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Token for the next set of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.ListLicenseVersionsResponse">
            <summary>
            This is the response object from the ListLicenseVersions operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListLicenseVersionsResponse.Licenses">
            <summary>
            Gets and sets the property Licenses. 
            <para>
            License details.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListLicenseVersionsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Token for the next set of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.ListReceivedGrantsRequest">
            <summary>
            Container for the parameters to the ListReceivedGrants operation.
            Lists grants that are received but not accepted.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListReceivedGrantsRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            Filters to scope the results. The following filters are supported:
            </para>
             <ul> <li> 
            <para>
             <code>ProductSKU</code> 
            </para>
             </li> <li> 
            <para>
             <code>LicenseIssuerName</code> 
            </para>
             </li> <li> 
            <para>
             <code>LicenseArn</code> 
            </para>
             </li> <li> 
            <para>
             <code>GrantStatus</code> 
            </para>
             </li> <li> 
            <para>
             <code>GranterAccountId</code> 
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListReceivedGrantsRequest.GrantArns">
            <summary>
            Gets and sets the property GrantArns. 
            <para>
            Amazon Resource Names (ARNs) of the grants.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListReceivedGrantsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Maximum number of results to return in a single call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListReceivedGrantsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Token for the next set of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.ListReceivedGrantsResponse">
            <summary>
            This is the response object from the ListReceivedGrants operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListReceivedGrantsResponse.Grants">
            <summary>
            Gets and sets the property Grants. 
            <para>
            Received grant details.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListReceivedGrantsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Token for the next set of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.ListReceivedLicensesRequest">
            <summary>
            Container for the parameters to the ListReceivedLicenses operation.
            Lists received licenses.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListReceivedLicensesRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            Filters to scope the results. The following filters are supported:
            </para>
             <ul> <li> 
            <para>
             <code>ProductSKU</code> 
            </para>
             </li> <li> 
            <para>
             <code>Status</code> 
            </para>
             </li> <li> 
            <para>
             <code>Fingerprint</code> 
            </para>
             </li> <li> 
            <para>
             <code>IssuerName</code> 
            </para>
             </li> <li> 
            <para>
             <code>Beneficiary</code> 
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListReceivedLicensesRequest.LicenseArns">
            <summary>
            Gets and sets the property LicenseArns. 
            <para>
            Amazon Resource Names (ARNs) of the licenses.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListReceivedLicensesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Maximum number of results to return in a single call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListReceivedLicensesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Token for the next set of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.ListReceivedLicensesResponse">
            <summary>
            This is the response object from the ListReceivedLicenses operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListReceivedLicensesResponse.Licenses">
            <summary>
            Gets and sets the property Licenses. 
            <para>
            Received license details.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListReceivedLicensesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Token for the next set of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.ListResourceInventoryRequest">
            <summary>
            Container for the parameters to the ListResourceInventory operation.
            Lists resources managed using Systems Manager inventory.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListResourceInventoryRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            Filters to scope the results. The following filters and logical operators are supported:
            </para>
             <ul> <li> 
            <para>
             <code>account_id</code> - The ID of the Amazon Web Services account that owns the
            resource. Logical operators are <code>EQUALS</code> | <code>NOT_EQUALS</code>.
            </para>
             </li> <li> 
            <para>
             <code>application_name</code> - The name of the application. Logical operators are
            <code>EQUALS</code> | <code>BEGINS_WITH</code>.
            </para>
             </li> <li> 
            <para>
             <code>license_included</code> - The type of license included. Logical operators are
            <code>EQUALS</code> | <code>NOT_EQUALS</code>. Possible values are <code>sql-server-enterprise</code>
            | <code>sql-server-standard</code> | <code>sql-server-web</code> | <code>windows-server-datacenter</code>.
            </para>
             </li> <li> 
            <para>
             <code>platform</code> - The platform of the resource. Logical operators are <code>EQUALS</code>
            | <code>BEGINS_WITH</code>.
            </para>
             </li> <li> 
            <para>
             <code>resource_id</code> - The ID of the resource. Logical operators are <code>EQUALS</code>
            | <code>NOT_EQUALS</code>.
            </para>
             </li> <li> 
            <para>
             <code>tag:&lt;key&gt;</code> - The key/value combination of a tag assigned to the
            resource. Logical operators are <code>EQUALS</code> (single account) or <code>EQUALS</code>
            | <code>NOT_EQUALS</code> (cross account).
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListResourceInventoryRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Maximum number of results to return in a single call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListResourceInventoryRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Token for the next set of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.ListResourceInventoryResponse">
            <summary>
            This is the response object from the ListResourceInventory operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListResourceInventoryResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Token for the next set of results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListResourceInventoryResponse.ResourceInventoryList">
            <summary>
            Gets and sets the property ResourceInventoryList. 
            <para>
            Information about the resources.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.ListTagsForResourceRequest">
            <summary>
            Container for the parameters to the ListTagsForResource operation.
            Lists the tags for the specified license configuration.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListTagsForResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            Amazon Resource Name (ARN) of the license configuration.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.ListTagsForResourceResponse">
            <summary>
            This is the response object from the ListTagsForResource operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListTagsForResourceResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Information about the tags.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.ListTokensRequest">
            <summary>
            Container for the parameters to the ListTokens operation.
            Lists your tokens.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListTokensRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            Filters to scope the results. The following filter is supported:
            </para>
             <ul> <li> 
            <para>
             <code>LicenseArns</code> 
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListTokensRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Maximum number of results to return in a single call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListTokensRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Token for the next set of results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListTokensRequest.TokenIds">
            <summary>
            Gets and sets the property TokenIds. 
            <para>
            Token IDs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.ListTokensResponse">
            <summary>
            This is the response object from the ListTokens operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListTokensResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Token for the next set of results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListTokensResponse.Tokens">
            <summary>
            Gets and sets the property Tokens. 
            <para>
            Received token details.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.ListUsageForLicenseConfigurationRequest">
            <summary>
            Container for the parameters to the ListUsageForLicenseConfiguration operation.
            Lists all license usage records for a license configuration, displaying license consumption
            details by resource at a selected point in time. Use this action to audit the current
            license consumption for any license inventory and configuration.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListUsageForLicenseConfigurationRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            Filters to scope the results. The following filters and logical operators are supported:
            </para>
             <ul> <li> 
            <para>
             <code>resourceArn</code> - The ARN of the license configuration resource. Logical
            operators are <code>EQUALS</code> | <code>NOT_EQUALS</code>.
            </para>
             </li> <li> 
            <para>
             <code>resourceType</code> - The resource type (<code>EC2_INSTANCE</code> | <code>EC2_HOST</code>
            | <code>EC2_AMI</code> | <code>SYSTEMS_MANAGER_MANAGED_INSTANCE</code>). Logical operators
            are <code>EQUALS</code> | <code>NOT_EQUALS</code>.
            </para>
             </li> <li> 
            <para>
             <code>resourceAccount</code> - The ID of the account that owns the resource. Logical
            operators are <code>EQUALS</code> | <code>NOT_EQUALS</code>.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListUsageForLicenseConfigurationRequest.LicenseConfigurationArn">
            <summary>
            Gets and sets the property LicenseConfigurationArn. 
            <para>
            Amazon Resource Name (ARN) of the license configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListUsageForLicenseConfigurationRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Maximum number of results to return in a single call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListUsageForLicenseConfigurationRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Token for the next set of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.ListUsageForLicenseConfigurationResponse">
            <summary>
            This is the response object from the ListUsageForLicenseConfiguration operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListUsageForLicenseConfigurationResponse.LicenseConfigurationUsageList">
            <summary>
            Gets and sets the property LicenseConfigurationUsageList. 
            <para>
            Information about the license configurations.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListUsageForLicenseConfigurationResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Token for the next set of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.ManagedResourceSummary">
            <summary>
            Summary information about a managed resource.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ManagedResourceSummary.AssociationCount">
            <summary>
            Gets and sets the property AssociationCount. 
            <para>
            Number of resources associated with licenses.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ManagedResourceSummary.ResourceType">
            <summary>
            Gets and sets the property ResourceType. 
            <para>
            Type of resource associated with a license.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.Metadata">
            <summary>
            Describes key/value pairs.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Metadata.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The key name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Metadata.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The value.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.NoEntitlementsAllowedException">
            <summary>
            There are no entitlements found for this license, or the entitlement maximum count
            is reached.
            </summary>
        </member>
        <member name="M:Amazon.LicenseManager.Model.NoEntitlementsAllowedException.#ctor(System.String)">
            <summary>
            Constructs a new NoEntitlementsAllowedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.NoEntitlementsAllowedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of NoEntitlementsAllowedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.NoEntitlementsAllowedException.#ctor(System.Exception)">
            <summary>
            Construct instance of NoEntitlementsAllowedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.NoEntitlementsAllowedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of NoEntitlementsAllowedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.NoEntitlementsAllowedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of NoEntitlementsAllowedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.NoEntitlementsAllowedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the NoEntitlementsAllowedException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.LicenseManager.Model.NoEntitlementsAllowedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.LicenseManager.Model.OrganizationConfiguration">
            <summary>
            Configuration information for Organizations.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.OrganizationConfiguration.EnableIntegration">
            <summary>
            Gets and sets the property EnableIntegration. 
            <para>
            Enables Organizations integration.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.ProductInformation">
            <summary>
            Describes product information for a license configuration.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ProductInformation.ProductInformationFilterList">
            <summary>
            Gets and sets the property ProductInformationFilterList. 
            <para>
            A Product information filter consists of a <code>ProductInformationFilterComparator</code>
            which is a logical operator, a <code>ProductInformationFilterName</code> which specifies
            the type of filter being declared, and a <code>ProductInformationFilterValue</code>
            that specifies the value to filter on. 
            </para>
             
            <para>
            Accepted values for <code>ProductInformationFilterName</code> are listed here along
            with descriptions and valid options for <code>ProductInformationFilterComparator</code>.
            
            </para>
             
            <para>
            The following filters and are supported when the resource type is <code>SSM_MANAGED</code>:
            </para>
             <ul> <li> 
            <para>
             <code>Application Name</code> - The name of the application. Logical operator is
            <code>EQUALS</code>.
            </para>
             </li> <li> 
            <para>
             <code>Application Publisher</code> - The publisher of the application. Logical operator
            is <code>EQUALS</code>.
            </para>
             </li> <li> 
            <para>
             <code>Application Version</code> - The version of the application. Logical operator
            is <code>EQUALS</code>.
            </para>
             </li> <li> 
            <para>
             <code>Platform Name</code> - The name of the platform. Logical operator is <code>EQUALS</code>.
            </para>
             </li> <li> 
            <para>
             <code>Platform Type</code> - The platform type. Logical operator is <code>EQUALS</code>.
            </para>
             </li> <li> 
            <para>
             <code>Tag:key</code> - The key of a tag attached to an Amazon Web Services resource
            you wish to exclude from automated discovery. Logical operator is <code>NOT_EQUALS</code>.
            The key for your tag must be appended to <code>Tag:</code> following the example:
            <code>Tag:name-of-your-key</code>. <code>ProductInformationFilterValue</code> is optional
            if you are not using values for the key. 
            </para>
             </li> <li> 
            <para>
             <code>AccountId</code> - The 12-digit ID of an Amazon Web Services account you wish
            to exclude from automated discovery. Logical operator is <code>NOT_EQUALS</code>.
            </para>
             </li> <li> 
            <para>
             <code>License Included</code> - The type of license included. Logical operators are
            <code>EQUALS</code> and <code>NOT_EQUALS</code>. Possible values are: <code>sql-server-enterprise</code>
            | <code>sql-server-standard</code> | <code>sql-server-web</code> | <code>windows-server-datacenter</code>.
            </para>
             </li> </ul> 
            <para>
            The following filters and logical operators are supported when the resource type is
            <code>RDS</code>:
            </para>
             <ul> <li> 
            <para>
             <code>Engine Edition</code> - The edition of the database engine. Logical operator
            is <code>EQUALS</code>. Possible values are: <code>oracle-ee</code> | <code>oracle-se</code>
            | <code>oracle-se1</code> | <code>oracle-se2</code>.
            </para>
             </li> <li> 
            <para>
             <code>License Pack</code> - The license pack. Logical operator is <code>EQUALS</code>.
            Possible values are: <code>data guard</code> | <code>diagnostic pack sqlt</code> |
            <code>tuning pack sqlt</code> | <code>ols</code> | <code>olap</code>.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ProductInformation.ResourceType">
            <summary>
            Gets and sets the property ResourceType. 
            <para>
            Resource type. The possible values are <code>SSM_MANAGED</code> | <code>RDS</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.ProductInformationFilter">
            <summary>
            Describes product information filters.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ProductInformationFilter.ProductInformationFilterComparator">
            <summary>
            Gets and sets the property ProductInformationFilterComparator. 
            <para>
            Logical operator.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ProductInformationFilter.ProductInformationFilterName">
            <summary>
            Gets and sets the property ProductInformationFilterName. 
            <para>
            Filter name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ProductInformationFilter.ProductInformationFilterValue">
            <summary>
            Gets and sets the property ProductInformationFilterValue. 
            <para>
            Filter value.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.ProvisionalConfiguration">
            <summary>
            Details about a provisional configuration.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ProvisionalConfiguration.MaxTimeToLiveInMinutes">
            <summary>
            Gets and sets the property MaxTimeToLiveInMinutes. 
            <para>
            Maximum time for the provisional configuration, in minutes.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            <summary>
            Too many requests have been submitted. Try again after a brief wait.
            </summary>
        </member>
        <member name="M:Amazon.LicenseManager.Model.RateLimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new RateLimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.RateLimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of RateLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.RateLimitExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of RateLimitExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.RateLimitExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of RateLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.RateLimitExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of RateLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.RateLimitExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the RateLimitExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.LicenseManager.Model.RateLimitExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.LicenseManager.Model.ReceivedMetadata">
            <summary>
            Metadata associated with received licenses and grants.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ReceivedMetadata.AllowedOperations">
            <summary>
            Gets and sets the property AllowedOperations. 
            <para>
            Allowed operations.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ReceivedMetadata.ReceivedStatus">
            <summary>
            Gets and sets the property ReceivedStatus. 
            <para>
            Received status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ReceivedMetadata.ReceivedStatusReason">
            <summary>
            Gets and sets the property ReceivedStatusReason. 
            <para>
            Received status reason.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.RedirectException">
            <summary>
            This is not the correct Region for the resource. Try again.
            </summary>
        </member>
        <member name="M:Amazon.LicenseManager.Model.RedirectException.#ctor(System.String)">
            <summary>
            Constructs a new RedirectException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.RedirectException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of RedirectException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.RedirectException.#ctor(System.Exception)">
            <summary>
            Construct instance of RedirectException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.RedirectException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of RedirectException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.RedirectException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of RedirectException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.RedirectException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the RedirectException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.LicenseManager.Model.RedirectException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="P:Amazon.LicenseManager.Model.RedirectException.Location">
            <summary>
            Gets and sets the property Location.
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.RejectGrantRequest">
            <summary>
            Container for the parameters to the RejectGrant operation.
            Rejects the specified grant.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.RejectGrantRequest.GrantArn">
            <summary>
            Gets and sets the property GrantArn. 
            <para>
            Amazon Resource Name (ARN) of the grant.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.RejectGrantResponse">
            <summary>
            This is the response object from the RejectGrant operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.RejectGrantResponse.GrantArn">
            <summary>
            Gets and sets the property GrantArn. 
            <para>
            Grant ARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.RejectGrantResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Grant status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.RejectGrantResponse.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            Grant version.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.ReportContext">
            <summary>
            Details of the license configuration that this generator reports on.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ReportContext.LicenseConfigurationArns">
            <summary>
            Gets and sets the property LicenseConfigurationArns. 
            <para>
            Amazon Resource Name (ARN) of the license configuration that this generator reports
            on.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.ReportFrequency">
            <summary>
            Details about how frequently reports are generated.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ReportFrequency.Period">
            <summary>
            Gets and sets the property Period. 
            <para>
            Time period between each report. The period can be daily, weekly, or monthly.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ReportFrequency.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            Number of times within the frequency period that a report is generated. The only supported
            value is <code>1</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.ReportGenerator">
            <summary>
            Describe the details of a report generator.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ReportGenerator.CreateTime">
            <summary>
            Gets and sets the property CreateTime. 
            <para>
            Time the report was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ReportGenerator.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            Description of the report generator.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ReportGenerator.LastReportGenerationTime">
            <summary>
            Gets and sets the property LastReportGenerationTime. 
            <para>
            Time the last report was generated at.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ReportGenerator.LastRunFailureReason">
            <summary>
            Gets and sets the property LastRunFailureReason. 
            <para>
            Failure message for the last report generation attempt.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ReportGenerator.LastRunStatus">
            <summary>
            Gets and sets the property LastRunStatus. 
            <para>
            Status of the last report generation attempt.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ReportGenerator.LicenseManagerReportGeneratorArn">
            <summary>
            Gets and sets the property LicenseManagerReportGeneratorArn. 
            <para>
            Amazon Resource Name (ARN) of the report generator.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ReportGenerator.ReportContext">
            <summary>
            Gets and sets the property ReportContext. 
            <para>
            License configuration type for this generator.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ReportGenerator.ReportCreatorAccount">
            <summary>
            Gets and sets the property ReportCreatorAccount. 
            <para>
            The Amazon Web Services account ID used to create the report generator.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ReportGenerator.ReportFrequency">
            <summary>
            Gets and sets the property ReportFrequency. 
            <para>
            Details about how frequently reports are generated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ReportGenerator.ReportGeneratorName">
            <summary>
            Gets and sets the property ReportGeneratorName. 
            <para>
            Name of the report generator.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ReportGenerator.ReportType">
            <summary>
            Gets and sets the property ReportType. 
            <para>
            Type of reports that are generated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ReportGenerator.S3Location">
            <summary>
            Gets and sets the property S3Location. 
            <para>
            Details of the S3 bucket that report generator reports are published to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ReportGenerator.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Tags associated with the report generator.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.ResourceInventory">
            <summary>
            Details about a resource.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ResourceInventory.Platform">
            <summary>
            Gets and sets the property Platform. 
            <para>
            Platform of the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ResourceInventory.PlatformVersion">
            <summary>
            Gets and sets the property PlatformVersion. 
            <para>
            Platform version of the resource in the inventory.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ResourceInventory.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            Amazon Resource Name (ARN) of the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ResourceInventory.ResourceId">
            <summary>
            Gets and sets the property ResourceId. 
            <para>
            ID of the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ResourceInventory.ResourceOwningAccountId">
            <summary>
            Gets and sets the property ResourceOwningAccountId. 
            <para>
            ID of the account that owns the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ResourceInventory.ResourceType">
            <summary>
            Gets and sets the property ResourceType. 
            <para>
            Type of resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.ResourceLimitExceededException">
            <summary>
            Your resource limits have been exceeded.
            </summary>
        </member>
        <member name="M:Amazon.LicenseManager.Model.ResourceLimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceLimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.ResourceLimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.ResourceLimitExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceLimitExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.ResourceLimitExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.ResourceLimitExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.ResourceLimitExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ResourceLimitExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.LicenseManager.Model.ResourceLimitExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.LicenseManager.Model.ResourceNotFoundException">
            <summary>
            The resource cannot be found.
            </summary>
        </member>
        <member name="M:Amazon.LicenseManager.Model.ResourceNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.ResourceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.ResourceNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.ResourceNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.ResourceNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.ResourceNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ResourceNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.LicenseManager.Model.ResourceNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.LicenseManager.Model.S3Location">
            <summary>
            Details of the S3 bucket that report generator reports are published to.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.S3Location.Bucket">
            <summary>
            Gets and sets the property Bucket. 
            <para>
            Name of the S3 bucket reports are published to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.S3Location.KeyPrefix">
            <summary>
            Gets and sets the property KeyPrefix. 
            <para>
            Prefix of the S3 bucket reports are published to.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.ServerInternalException">
            <summary>
            The server experienced an internal error. Try again.
            </summary>
        </member>
        <member name="M:Amazon.LicenseManager.Model.ServerInternalException.#ctor(System.String)">
            <summary>
            Constructs a new ServerInternalException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.ServerInternalException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ServerInternalException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.ServerInternalException.#ctor(System.Exception)">
            <summary>
            Construct instance of ServerInternalException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.ServerInternalException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServerInternalException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.ServerInternalException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServerInternalException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.ServerInternalException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ServerInternalException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.LicenseManager.Model.ServerInternalException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.LicenseManager.Model.Tag">
            <summary>
            Details about a tag for a license configuration.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Tag.Key">
            <summary>
            Gets and sets the property Key. 
            <para>
            Tag key.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Tag.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            Tag value.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.TagResourceRequest">
            <summary>
            Container for the parameters to the TagResource operation.
            Adds the specified tags to the specified license configuration.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.TagResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            Amazon Resource Name (ARN) of the license configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.TagResourceRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            One or more tags.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.TagResourceResponse">
            <summary>
            This is the response object from the TagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.TokenData">
            <summary>
            Describes a token.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.TokenData.ExpirationTime">
            <summary>
            Gets and sets the property ExpirationTime. 
            <para>
            Token expiration time, in ISO8601-UTC format.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.TokenData.LicenseArn">
            <summary>
            Gets and sets the property LicenseArn. 
            <para>
            Amazon Resource Name (ARN) of the license.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.TokenData.RoleArns">
            <summary>
            Gets and sets the property RoleArns. 
            <para>
            Amazon Resource Names (ARN) of the roles included in the token.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.TokenData.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Token status. The possible values are <code>AVAILABLE</code> and <code>DELETED</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.TokenData.TokenId">
            <summary>
            Gets and sets the property TokenId. 
            <para>
            Token ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.TokenData.TokenProperties">
            <summary>
            Gets and sets the property TokenProperties. 
            <para>
            Data specified by the caller.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.TokenData.TokenType">
            <summary>
            Gets and sets the property TokenType. 
            <para>
            Type of token generated. The supported value is <code>REFRESH_TOKEN</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.UnsupportedDigitalSignatureMethodException">
            <summary>
            The digital signature method is unsupported. Try your request again.
            </summary>
        </member>
        <member name="M:Amazon.LicenseManager.Model.UnsupportedDigitalSignatureMethodException.#ctor(System.String)">
            <summary>
            Constructs a new UnsupportedDigitalSignatureMethodException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.UnsupportedDigitalSignatureMethodException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of UnsupportedDigitalSignatureMethodException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.UnsupportedDigitalSignatureMethodException.#ctor(System.Exception)">
            <summary>
            Construct instance of UnsupportedDigitalSignatureMethodException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.UnsupportedDigitalSignatureMethodException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UnsupportedDigitalSignatureMethodException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.UnsupportedDigitalSignatureMethodException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UnsupportedDigitalSignatureMethodException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.UnsupportedDigitalSignatureMethodException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the UnsupportedDigitalSignatureMethodException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.LicenseManager.Model.UnsupportedDigitalSignatureMethodException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.LicenseManager.Model.UntagResourceRequest">
            <summary>
            Container for the parameters to the UntagResource operation.
            Removes the specified tags from the specified license configuration.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.UntagResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            Amazon Resource Name (ARN) of the license configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.UntagResourceRequest.TagKeys">
            <summary>
            Gets and sets the property TagKeys. 
            <para>
            Keys identifying the tags to remove.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.UntagResourceResponse">
            <summary>
            This is the response object from the UntagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.UpdateLicenseConfigurationRequest">
            <summary>
            Container for the parameters to the UpdateLicenseConfiguration operation.
            Modifies the attributes of an existing license configuration.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.UpdateLicenseConfigurationRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            New description of the license configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.UpdateLicenseConfigurationRequest.DisassociateWhenNotFound">
            <summary>
            Gets and sets the property DisassociateWhenNotFound. 
            <para>
            When true, disassociates a resource when software is uninstalled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.UpdateLicenseConfigurationRequest.LicenseConfigurationArn">
            <summary>
            Gets and sets the property LicenseConfigurationArn. 
            <para>
            Amazon Resource Name (ARN) of the license configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.UpdateLicenseConfigurationRequest.LicenseConfigurationStatus">
            <summary>
            Gets and sets the property LicenseConfigurationStatus. 
            <para>
            New status of the license configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.UpdateLicenseConfigurationRequest.LicenseCount">
            <summary>
            Gets and sets the property LicenseCount. 
            <para>
            New number of licenses managed by the license configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.UpdateLicenseConfigurationRequest.LicenseCountHardLimit">
            <summary>
            Gets and sets the property LicenseCountHardLimit. 
            <para>
            New hard limit of the number of available licenses.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.UpdateLicenseConfigurationRequest.LicenseRules">
            <summary>
            Gets and sets the property LicenseRules. 
            <para>
            New license rule. The only rule that you can add after you create a license configuration
            is licenseAffinityToHost.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.UpdateLicenseConfigurationRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            New name of the license configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.UpdateLicenseConfigurationRequest.ProductInformationList">
            <summary>
            Gets and sets the property ProductInformationList. 
            <para>
            New product information.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.UpdateLicenseConfigurationResponse">
            <summary>
            This is the response object from the UpdateLicenseConfiguration operation.
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.UpdateLicenseManagerReportGeneratorRequest">
            <summary>
            Container for the parameters to the UpdateLicenseManagerReportGenerator operation.
            Updates a report generator.
            
             
            <para>
            After you make changes to a report generator, it starts generating new reports within
            60 minutes of being updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.UpdateLicenseManagerReportGeneratorRequest.ClientToken">
            <summary>
            Gets and sets the property ClientToken. 
            <para>
            Unique, case-sensitive identifier that you provide to ensure the idempotency of the
            request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.UpdateLicenseManagerReportGeneratorRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            Description of the report generator.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.UpdateLicenseManagerReportGeneratorRequest.LicenseManagerReportGeneratorArn">
            <summary>
            Gets and sets the property LicenseManagerReportGeneratorArn. 
            <para>
            Amazon Resource Name (ARN) of the report generator to update.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.UpdateLicenseManagerReportGeneratorRequest.ReportContext">
            <summary>
            Gets and sets the property ReportContext. 
            <para>
            The report context.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.UpdateLicenseManagerReportGeneratorRequest.ReportFrequency">
            <summary>
            Gets and sets the property ReportFrequency. 
            <para>
            Frequency by which reports are generated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.UpdateLicenseManagerReportGeneratorRequest.ReportGeneratorName">
            <summary>
            Gets and sets the property ReportGeneratorName. 
            <para>
            Name of the report generator.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.UpdateLicenseManagerReportGeneratorRequest.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            Type of reports to generate. The following report types are supported:
            </para>
             <ul> <li> 
            <para>
            License configuration report - Reports the number and details of consumed licenses
            for a license configuration.
            </para>
             </li> <li> 
            <para>
            Resource report - Reports the tracked licenses and resource consumption for a license
            configuration.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.UpdateLicenseManagerReportGeneratorResponse">
            <summary>
            This is the response object from the UpdateLicenseManagerReportGenerator operation.
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.UpdateLicenseSpecificationsForResourceRequest">
            <summary>
            Container for the parameters to the UpdateLicenseSpecificationsForResource operation.
            Adds or removes the specified license configurations for the specified Amazon Web
            Services resource.
            
             
            <para>
            You can update the license specifications of AMIs, instances, and hosts. You cannot
            update the license specifications for launch templates and CloudFormation templates,
            as they send license configurations to the operation that creates the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.UpdateLicenseSpecificationsForResourceRequest.AddLicenseSpecifications">
            <summary>
            Gets and sets the property AddLicenseSpecifications. 
            <para>
            ARNs of the license configurations to add.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.UpdateLicenseSpecificationsForResourceRequest.RemoveLicenseSpecifications">
            <summary>
            Gets and sets the property RemoveLicenseSpecifications. 
            <para>
            ARNs of the license configurations to remove.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.UpdateLicenseSpecificationsForResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            Amazon Resource Name (ARN) of the Amazon Web Services resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.UpdateLicenseSpecificationsForResourceResponse">
            <summary>
            This is the response object from the UpdateLicenseSpecificationsForResource operation.
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.UpdateServiceSettingsRequest">
            <summary>
            Container for the parameters to the UpdateServiceSettings operation.
            Updates License Manager settings for the current Region.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.UpdateServiceSettingsRequest.EnableCrossAccountsDiscovery">
            <summary>
            Gets and sets the property EnableCrossAccountsDiscovery. 
            <para>
            Activates cross-account discovery.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.UpdateServiceSettingsRequest.OrganizationConfiguration">
            <summary>
            Gets and sets the property OrganizationConfiguration. 
            <para>
            Enables integration with Organizations for cross-account discovery.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.UpdateServiceSettingsRequest.S3BucketArn">
            <summary>
            Gets and sets the property S3BucketArn. 
            <para>
            Amazon Resource Name (ARN) of the Amazon S3 bucket where the License Manager information
            is stored.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.UpdateServiceSettingsRequest.SnsTopicArn">
            <summary>
            Gets and sets the property SnsTopicArn. 
            <para>
            Amazon Resource Name (ARN) of the Amazon SNS topic used for License Manager alerts.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.UpdateServiceSettingsResponse">
            <summary>
            This is the response object from the UpdateServiceSettings operation.
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.ValidationException">
            <summary>
            The provided input is not valid. Try your request again.
            </summary>
        </member>
        <member name="M:Amazon.LicenseManager.Model.ValidationException.#ctor(System.String)">
            <summary>
            Constructs a new ValidationException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.ValidationException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.ValidationException.#ctor(System.Exception)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.ValidationException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.ValidationException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.ValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ValidationException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.LicenseManager.Model.ValidationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.LicenseManager.AmazonLicenseManagerRequest">
            <summary>
            Base class for LicenseManager operation requests.
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.AllowedOperation">
            <summary>
            Constants used for properties of type AllowedOperation.
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.AllowedOperation.CheckInLicense">
            <summary>
            Constant CheckInLicense for AllowedOperation
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.AllowedOperation.CheckoutBorrowLicense">
            <summary>
            Constant CheckoutBorrowLicense for AllowedOperation
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.AllowedOperation.CheckoutLicense">
            <summary>
            Constant CheckoutLicense for AllowedOperation
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.AllowedOperation.CreateGrant">
            <summary>
            Constant CreateGrant for AllowedOperation
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.AllowedOperation.CreateToken">
            <summary>
            Constant CreateToken for AllowedOperation
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.AllowedOperation.ExtendConsumptionLicense">
            <summary>
            Constant ExtendConsumptionLicense for AllowedOperation
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.AllowedOperation.ListPurchasedLicenses">
            <summary>
            Constant ListPurchasedLicenses for AllowedOperation
            </summary>
        </member>
        <member name="M:Amazon.LicenseManager.AllowedOperation.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LicenseManager.AllowedOperation.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LicenseManager.AllowedOperation.op_Implicit(System.String)~Amazon.LicenseManager.AllowedOperation">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LicenseManager.CheckoutType">
            <summary>
            Constants used for properties of type CheckoutType.
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.CheckoutType.PERPETUAL">
            <summary>
            Constant PERPETUAL for CheckoutType
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.CheckoutType.PROVISIONAL">
            <summary>
            Constant PROVISIONAL for CheckoutType
            </summary>
        </member>
        <member name="M:Amazon.LicenseManager.CheckoutType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LicenseManager.CheckoutType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LicenseManager.CheckoutType.op_Implicit(System.String)~Amazon.LicenseManager.CheckoutType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LicenseManager.DigitalSignatureMethod">
            <summary>
            Constants used for properties of type DigitalSignatureMethod.
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.DigitalSignatureMethod.JWT_PS384">
            <summary>
            Constant JWT_PS384 for DigitalSignatureMethod
            </summary>
        </member>
        <member name="M:Amazon.LicenseManager.DigitalSignatureMethod.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LicenseManager.DigitalSignatureMethod.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LicenseManager.DigitalSignatureMethod.op_Implicit(System.String)~Amazon.LicenseManager.DigitalSignatureMethod">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LicenseManager.EntitlementDataUnit">
            <summary>
            Constants used for properties of type EntitlementDataUnit.
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.EntitlementDataUnit.Bits">
            <summary>
            Constant Bits for EntitlementDataUnit
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.EntitlementDataUnit.BitsSecond">
            <summary>
            Constant BitsSecond for EntitlementDataUnit
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.EntitlementDataUnit.Bytes">
            <summary>
            Constant Bytes for EntitlementDataUnit
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.EntitlementDataUnit.BytesSecond">
            <summary>
            Constant BytesSecond for EntitlementDataUnit
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.EntitlementDataUnit.Count">
            <summary>
            Constant Count for EntitlementDataUnit
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.EntitlementDataUnit.CountSecond">
            <summary>
            Constant CountSecond for EntitlementDataUnit
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.EntitlementDataUnit.Gigabits">
            <summary>
            Constant Gigabits for EntitlementDataUnit
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.EntitlementDataUnit.GigabitsSecond">
            <summary>
            Constant GigabitsSecond for EntitlementDataUnit
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.EntitlementDataUnit.Gigabytes">
            <summary>
            Constant Gigabytes for EntitlementDataUnit
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.EntitlementDataUnit.GigabytesSecond">
            <summary>
            Constant GigabytesSecond for EntitlementDataUnit
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.EntitlementDataUnit.Kilobits">
            <summary>
            Constant Kilobits for EntitlementDataUnit
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.EntitlementDataUnit.KilobitsSecond">
            <summary>
            Constant KilobitsSecond for EntitlementDataUnit
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.EntitlementDataUnit.Kilobytes">
            <summary>
            Constant Kilobytes for EntitlementDataUnit
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.EntitlementDataUnit.KilobytesSecond">
            <summary>
            Constant KilobytesSecond for EntitlementDataUnit
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.EntitlementDataUnit.Megabits">
            <summary>
            Constant Megabits for EntitlementDataUnit
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.EntitlementDataUnit.MegabitsSecond">
            <summary>
            Constant MegabitsSecond for EntitlementDataUnit
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.EntitlementDataUnit.Megabytes">
            <summary>
            Constant Megabytes for EntitlementDataUnit
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.EntitlementDataUnit.MegabytesSecond">
            <summary>
            Constant MegabytesSecond for EntitlementDataUnit
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.EntitlementDataUnit.Microseconds">
            <summary>
            Constant Microseconds for EntitlementDataUnit
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.EntitlementDataUnit.Milliseconds">
            <summary>
            Constant Milliseconds for EntitlementDataUnit
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.EntitlementDataUnit.None">
            <summary>
            Constant None for EntitlementDataUnit
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.EntitlementDataUnit.Percent">
            <summary>
            Constant Percent for EntitlementDataUnit
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.EntitlementDataUnit.Seconds">
            <summary>
            Constant Seconds for EntitlementDataUnit
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.EntitlementDataUnit.Terabits">
            <summary>
            Constant Terabits for EntitlementDataUnit
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.EntitlementDataUnit.TerabitsSecond">
            <summary>
            Constant TerabitsSecond for EntitlementDataUnit
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.EntitlementDataUnit.Terabytes">
            <summary>
            Constant Terabytes for EntitlementDataUnit
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.EntitlementDataUnit.TerabytesSecond">
            <summary>
            Constant TerabytesSecond for EntitlementDataUnit
            </summary>
        </member>
        <member name="M:Amazon.LicenseManager.EntitlementDataUnit.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LicenseManager.EntitlementDataUnit.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LicenseManager.EntitlementDataUnit.op_Implicit(System.String)~Amazon.LicenseManager.EntitlementDataUnit">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LicenseManager.EntitlementUnit">
            <summary>
            Constants used for properties of type EntitlementUnit.
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.EntitlementUnit.Bits">
            <summary>
            Constant Bits for EntitlementUnit
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.EntitlementUnit.BitsSecond">
            <summary>
            Constant BitsSecond for EntitlementUnit
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.EntitlementUnit.Bytes">
            <summary>
            Constant Bytes for EntitlementUnit
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.EntitlementUnit.BytesSecond">
            <summary>
            Constant BytesSecond for EntitlementUnit
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.EntitlementUnit.Count">
            <summary>
            Constant Count for EntitlementUnit
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.EntitlementUnit.CountSecond">
            <summary>
            Constant CountSecond for EntitlementUnit
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.EntitlementUnit.Gigabits">
            <summary>
            Constant Gigabits for EntitlementUnit
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.EntitlementUnit.GigabitsSecond">
            <summary>
            Constant GigabitsSecond for EntitlementUnit
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.EntitlementUnit.Gigabytes">
            <summary>
            Constant Gigabytes for EntitlementUnit
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.EntitlementUnit.GigabytesSecond">
            <summary>
            Constant GigabytesSecond for EntitlementUnit
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.EntitlementUnit.Kilobits">
            <summary>
            Constant Kilobits for EntitlementUnit
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.EntitlementUnit.KilobitsSecond">
            <summary>
            Constant KilobitsSecond for EntitlementUnit
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.EntitlementUnit.Kilobytes">
            <summary>
            Constant Kilobytes for EntitlementUnit
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.EntitlementUnit.KilobytesSecond">
            <summary>
            Constant KilobytesSecond for EntitlementUnit
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.EntitlementUnit.Megabits">
            <summary>
            Constant Megabits for EntitlementUnit
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.EntitlementUnit.MegabitsSecond">
            <summary>
            Constant MegabitsSecond for EntitlementUnit
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.EntitlementUnit.Megabytes">
            <summary>
            Constant Megabytes for EntitlementUnit
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.EntitlementUnit.MegabytesSecond">
            <summary>
            Constant MegabytesSecond for EntitlementUnit
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.EntitlementUnit.Microseconds">
            <summary>
            Constant Microseconds for EntitlementUnit
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.EntitlementUnit.Milliseconds">
            <summary>
            Constant Milliseconds for EntitlementUnit
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.EntitlementUnit.None">
            <summary>
            Constant None for EntitlementUnit
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.EntitlementUnit.Percent">
            <summary>
            Constant Percent for EntitlementUnit
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.EntitlementUnit.Seconds">
            <summary>
            Constant Seconds for EntitlementUnit
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.EntitlementUnit.Terabits">
            <summary>
            Constant Terabits for EntitlementUnit
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.EntitlementUnit.TerabitsSecond">
            <summary>
            Constant TerabitsSecond for EntitlementUnit
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.EntitlementUnit.Terabytes">
            <summary>
            Constant Terabytes for EntitlementUnit
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.EntitlementUnit.TerabytesSecond">
            <summary>
            Constant TerabytesSecond for EntitlementUnit
            </summary>
        </member>
        <member name="M:Amazon.LicenseManager.EntitlementUnit.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LicenseManager.EntitlementUnit.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LicenseManager.EntitlementUnit.op_Implicit(System.String)~Amazon.LicenseManager.EntitlementUnit">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LicenseManager.GrantStatus">
            <summary>
            Constants used for properties of type GrantStatus.
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.GrantStatus.ACTIVE">
            <summary>
            Constant ACTIVE for GrantStatus
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.GrantStatus.DELETED">
            <summary>
            Constant DELETED for GrantStatus
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.GrantStatus.DISABLED">
            <summary>
            Constant DISABLED for GrantStatus
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.GrantStatus.FAILED_WORKFLOW">
            <summary>
            Constant FAILED_WORKFLOW for GrantStatus
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.GrantStatus.PENDING_ACCEPT">
            <summary>
            Constant PENDING_ACCEPT for GrantStatus
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.GrantStatus.PENDING_DELETE">
            <summary>
            Constant PENDING_DELETE for GrantStatus
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.GrantStatus.PENDING_WORKFLOW">
            <summary>
            Constant PENDING_WORKFLOW for GrantStatus
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.GrantStatus.REJECTED">
            <summary>
            Constant REJECTED for GrantStatus
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.GrantStatus.WORKFLOW_COMPLETED">
            <summary>
            Constant WORKFLOW_COMPLETED for GrantStatus
            </summary>
        </member>
        <member name="M:Amazon.LicenseManager.GrantStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LicenseManager.GrantStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LicenseManager.GrantStatus.op_Implicit(System.String)~Amazon.LicenseManager.GrantStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LicenseManager.InventoryFilterCondition">
            <summary>
            Constants used for properties of type InventoryFilterCondition.
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.InventoryFilterCondition.BEGINS_WITH">
            <summary>
            Constant BEGINS_WITH for InventoryFilterCondition
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.InventoryFilterCondition.CONTAINS">
            <summary>
            Constant CONTAINS for InventoryFilterCondition
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.InventoryFilterCondition.EQUALS">
            <summary>
            Constant EQUALS for InventoryFilterCondition
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.InventoryFilterCondition.NOT_EQUALS">
            <summary>
            Constant NOT_EQUALS for InventoryFilterCondition
            </summary>
        </member>
        <member name="M:Amazon.LicenseManager.InventoryFilterCondition.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LicenseManager.InventoryFilterCondition.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LicenseManager.InventoryFilterCondition.op_Implicit(System.String)~Amazon.LicenseManager.InventoryFilterCondition">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LicenseManager.LicenseConfigurationStatus">
            <summary>
            Constants used for properties of type LicenseConfigurationStatus.
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.LicenseConfigurationStatus.AVAILABLE">
            <summary>
            Constant AVAILABLE for LicenseConfigurationStatus
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.LicenseConfigurationStatus.DISABLED">
            <summary>
            Constant DISABLED for LicenseConfigurationStatus
            </summary>
        </member>
        <member name="M:Amazon.LicenseManager.LicenseConfigurationStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LicenseManager.LicenseConfigurationStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LicenseManager.LicenseConfigurationStatus.op_Implicit(System.String)~Amazon.LicenseManager.LicenseConfigurationStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LicenseManager.LicenseConversionTaskStatus">
            <summary>
            Constants used for properties of type LicenseConversionTaskStatus.
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.LicenseConversionTaskStatus.FAILED">
            <summary>
            Constant FAILED for LicenseConversionTaskStatus
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.LicenseConversionTaskStatus.IN_PROGRESS">
            <summary>
            Constant IN_PROGRESS for LicenseConversionTaskStatus
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.LicenseConversionTaskStatus.SUCCEEDED">
            <summary>
            Constant SUCCEEDED for LicenseConversionTaskStatus
            </summary>
        </member>
        <member name="M:Amazon.LicenseManager.LicenseConversionTaskStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LicenseManager.LicenseConversionTaskStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LicenseManager.LicenseConversionTaskStatus.op_Implicit(System.String)~Amazon.LicenseManager.LicenseConversionTaskStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LicenseManager.LicenseCountingType">
            <summary>
            Constants used for properties of type LicenseCountingType.
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.LicenseCountingType.Core">
            <summary>
            Constant Core for LicenseCountingType
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.LicenseCountingType.Instance">
            <summary>
            Constant Instance for LicenseCountingType
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.LicenseCountingType.Socket">
            <summary>
            Constant Socket for LicenseCountingType
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.LicenseCountingType.VCPU">
            <summary>
            Constant VCPU for LicenseCountingType
            </summary>
        </member>
        <member name="M:Amazon.LicenseManager.LicenseCountingType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LicenseManager.LicenseCountingType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LicenseManager.LicenseCountingType.op_Implicit(System.String)~Amazon.LicenseManager.LicenseCountingType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LicenseManager.LicenseDeletionStatus">
            <summary>
            Constants used for properties of type LicenseDeletionStatus.
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.LicenseDeletionStatus.DELETED">
            <summary>
            Constant DELETED for LicenseDeletionStatus
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.LicenseDeletionStatus.PENDING_DELETE">
            <summary>
            Constant PENDING_DELETE for LicenseDeletionStatus
            </summary>
        </member>
        <member name="M:Amazon.LicenseManager.LicenseDeletionStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LicenseManager.LicenseDeletionStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LicenseManager.LicenseDeletionStatus.op_Implicit(System.String)~Amazon.LicenseManager.LicenseDeletionStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LicenseManager.LicenseStatus">
            <summary>
            Constants used for properties of type LicenseStatus.
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.LicenseStatus.AVAILABLE">
            <summary>
            Constant AVAILABLE for LicenseStatus
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.LicenseStatus.DEACTIVATED">
            <summary>
            Constant DEACTIVATED for LicenseStatus
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.LicenseStatus.DELETED">
            <summary>
            Constant DELETED for LicenseStatus
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.LicenseStatus.EXPIRED">
            <summary>
            Constant EXPIRED for LicenseStatus
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.LicenseStatus.PENDING_AVAILABLE">
            <summary>
            Constant PENDING_AVAILABLE for LicenseStatus
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.LicenseStatus.PENDING_DELETE">
            <summary>
            Constant PENDING_DELETE for LicenseStatus
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.LicenseStatus.SUSPENDED">
            <summary>
            Constant SUSPENDED for LicenseStatus
            </summary>
        </member>
        <member name="M:Amazon.LicenseManager.LicenseStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LicenseManager.LicenseStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LicenseManager.LicenseStatus.op_Implicit(System.String)~Amazon.LicenseManager.LicenseStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LicenseManager.ReceivedStatus">
            <summary>
            Constants used for properties of type ReceivedStatus.
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.ReceivedStatus.ACTIVE">
            <summary>
            Constant ACTIVE for ReceivedStatus
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.ReceivedStatus.DELETED">
            <summary>
            Constant DELETED for ReceivedStatus
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.ReceivedStatus.DISABLED">
            <summary>
            Constant DISABLED for ReceivedStatus
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.ReceivedStatus.FAILED_WORKFLOW">
            <summary>
            Constant FAILED_WORKFLOW for ReceivedStatus
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.ReceivedStatus.PENDING_ACCEPT">
            <summary>
            Constant PENDING_ACCEPT for ReceivedStatus
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.ReceivedStatus.PENDING_WORKFLOW">
            <summary>
            Constant PENDING_WORKFLOW for ReceivedStatus
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.ReceivedStatus.REJECTED">
            <summary>
            Constant REJECTED for ReceivedStatus
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.ReceivedStatus.WORKFLOW_COMPLETED">
            <summary>
            Constant WORKFLOW_COMPLETED for ReceivedStatus
            </summary>
        </member>
        <member name="M:Amazon.LicenseManager.ReceivedStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LicenseManager.ReceivedStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LicenseManager.ReceivedStatus.op_Implicit(System.String)~Amazon.LicenseManager.ReceivedStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LicenseManager.RenewType">
            <summary>
            Constants used for properties of type RenewType.
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.RenewType.Monthly">
            <summary>
            Constant Monthly for RenewType
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.RenewType.None">
            <summary>
            Constant None for RenewType
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.RenewType.Weekly">
            <summary>
            Constant Weekly for RenewType
            </summary>
        </member>
        <member name="M:Amazon.LicenseManager.RenewType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LicenseManager.RenewType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LicenseManager.RenewType.op_Implicit(System.String)~Amazon.LicenseManager.RenewType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LicenseManager.ReportFrequencyType">
            <summary>
            Constants used for properties of type ReportFrequencyType.
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.ReportFrequencyType.DAY">
            <summary>
            Constant DAY for ReportFrequencyType
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.ReportFrequencyType.MONTH">
            <summary>
            Constant MONTH for ReportFrequencyType
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.ReportFrequencyType.WEEK">
            <summary>
            Constant WEEK for ReportFrequencyType
            </summary>
        </member>
        <member name="M:Amazon.LicenseManager.ReportFrequencyType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LicenseManager.ReportFrequencyType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LicenseManager.ReportFrequencyType.op_Implicit(System.String)~Amazon.LicenseManager.ReportFrequencyType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LicenseManager.ReportType">
            <summary>
            Constants used for properties of type ReportType.
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.ReportType.LicenseConfigurationSummaryReport">
            <summary>
            Constant LicenseConfigurationSummaryReport for ReportType
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.ReportType.LicenseConfigurationUsageReport">
            <summary>
            Constant LicenseConfigurationUsageReport for ReportType
            </summary>
        </member>
        <member name="M:Amazon.LicenseManager.ReportType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LicenseManager.ReportType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LicenseManager.ReportType.op_Implicit(System.String)~Amazon.LicenseManager.ReportType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LicenseManager.ResourceType">
            <summary>
            Constants used for properties of type ResourceType.
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.ResourceType.EC2_AMI">
            <summary>
            Constant EC2_AMI for ResourceType
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.ResourceType.EC2_HOST">
            <summary>
            Constant EC2_HOST for ResourceType
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.ResourceType.EC2_INSTANCE">
            <summary>
            Constant EC2_INSTANCE for ResourceType
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.ResourceType.RDS">
            <summary>
            Constant RDS for ResourceType
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.ResourceType.SYSTEMS_MANAGER_MANAGED_INSTANCE">
            <summary>
            Constant SYSTEMS_MANAGER_MANAGED_INSTANCE for ResourceType
            </summary>
        </member>
        <member name="M:Amazon.LicenseManager.ResourceType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LicenseManager.ResourceType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LicenseManager.ResourceType.op_Implicit(System.String)~Amazon.LicenseManager.ResourceType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LicenseManager.TokenType">
            <summary>
            Constants used for properties of type TokenType.
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.TokenType.REFRESH_TOKEN">
            <summary>
            Constant REFRESH_TOKEN for TokenType
            </summary>
        </member>
        <member name="M:Amazon.LicenseManager.TokenType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LicenseManager.TokenType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LicenseManager.TokenType.op_Implicit(System.String)~Amazon.LicenseManager.TokenType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LicenseManager.AmazonLicenseManagerClient">
             <summary>
             Implementation for accessing LicenseManager
            
             License Manager makes it easier to manage licenses from software vendors across multiple
             Amazon Web Services accounts and on-premises servers.
             </summary>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.#ctor">
             <summary>
             Constructs AmazonLicenseManagerClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonLicenseManagerClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.#ctor(Amazon.LicenseManager.AmazonLicenseManagerConfig)">
             <summary>
             Constructs AmazonLicenseManagerClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonLicenseManagerClient Configuration Object</param>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonLicenseManagerClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonLicenseManagerClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.LicenseManager.AmazonLicenseManagerConfig)">
            <summary>
            Constructs AmazonLicenseManagerClient with AWS Credentials and an
            AmazonLicenseManagerClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonLicenseManagerClient Configuration Object</param>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonLicenseManagerClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonLicenseManagerClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.#ctor(System.String,System.String,Amazon.LicenseManager.AmazonLicenseManagerConfig)">
            <summary>
            Constructs AmazonLicenseManagerClient with AWS Access Key ID, AWS Secret Key and an
            AmazonLicenseManagerClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonLicenseManagerClient Configuration Object</param>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonLicenseManagerClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonLicenseManagerClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.#ctor(System.String,System.String,System.String,Amazon.LicenseManager.AmazonLicenseManagerConfig)">
            <summary>
            Constructs AmazonLicenseManagerClient with AWS Access Key ID, AWS Secret Key and an
            AmazonLicenseManagerClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonLicenseManagerClient Configuration Object</param>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.AmazonLicenseManagerClient.ServiceMetadata">
            <summary>
            Capture metadata for the service.
            </summary>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.AcceptGrant(Amazon.LicenseManager.Model.AcceptGrantRequest)">
            <summary>
            Accepts the specified grant.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AcceptGrant service method.</param>
            
            <returns>The response from the AcceptGrant service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceLimitExceededException">
            Your resource limits have been exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/AcceptGrant">REST API Reference for AcceptGrant Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.AcceptGrantAsync(Amazon.LicenseManager.Model.AcceptGrantRequest,System.Threading.CancellationToken)">
            <summary>
            Accepts the specified grant.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AcceptGrant service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AcceptGrant service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceLimitExceededException">
            Your resource limits have been exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/AcceptGrant">REST API Reference for AcceptGrant Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.CheckInLicense(Amazon.LicenseManager.Model.CheckInLicenseRequest)">
            <summary>
            Checks in the specified license. Check in a license when it is no longer in use.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CheckInLicense service method.</param>
            
            <returns>The response from the CheckInLicense service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceNotFoundException">
            The resource cannot be found.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/CheckInLicense">REST API Reference for CheckInLicense Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.CheckInLicenseAsync(Amazon.LicenseManager.Model.CheckInLicenseRequest,System.Threading.CancellationToken)">
            <summary>
            Checks in the specified license. Check in a license when it is no longer in use.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CheckInLicense service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CheckInLicense service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceNotFoundException">
            The resource cannot be found.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/CheckInLicense">REST API Reference for CheckInLicense Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.CheckoutBorrowLicense(Amazon.LicenseManager.Model.CheckoutBorrowLicenseRequest)">
            <summary>
            Checks out the specified license for offline use.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CheckoutBorrowLicense service method.</param>
            
            <returns>The response from the CheckoutBorrowLicense service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.EntitlementNotAllowedException">
            The entitlement is not allowed.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.NoEntitlementsAllowedException">
            There are no entitlements found for this license, or the entitlement maximum count
            is reached.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RedirectException">
            This is not the correct Region for the resource. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceNotFoundException">
            The resource cannot be found.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.UnsupportedDigitalSignatureMethodException">
            The digital signature method is unsupported. Try your request again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/CheckoutBorrowLicense">REST API Reference for CheckoutBorrowLicense Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.CheckoutBorrowLicenseAsync(Amazon.LicenseManager.Model.CheckoutBorrowLicenseRequest,System.Threading.CancellationToken)">
            <summary>
            Checks out the specified license for offline use.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CheckoutBorrowLicense service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CheckoutBorrowLicense service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.EntitlementNotAllowedException">
            The entitlement is not allowed.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.NoEntitlementsAllowedException">
            There are no entitlements found for this license, or the entitlement maximum count
            is reached.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RedirectException">
            This is not the correct Region for the resource. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceNotFoundException">
            The resource cannot be found.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.UnsupportedDigitalSignatureMethodException">
            The digital signature method is unsupported. Try your request again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/CheckoutBorrowLicense">REST API Reference for CheckoutBorrowLicense Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.CheckoutLicense(Amazon.LicenseManager.Model.CheckoutLicenseRequest)">
            <summary>
            Checks out the specified license.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CheckoutLicense service method.</param>
            
            <returns>The response from the CheckoutLicense service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.NoEntitlementsAllowedException">
            There are no entitlements found for this license, or the entitlement maximum count
            is reached.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RedirectException">
            This is not the correct Region for the resource. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceNotFoundException">
            The resource cannot be found.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.UnsupportedDigitalSignatureMethodException">
            The digital signature method is unsupported. Try your request again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/CheckoutLicense">REST API Reference for CheckoutLicense Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.CheckoutLicenseAsync(Amazon.LicenseManager.Model.CheckoutLicenseRequest,System.Threading.CancellationToken)">
            <summary>
            Checks out the specified license.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CheckoutLicense service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CheckoutLicense service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.NoEntitlementsAllowedException">
            There are no entitlements found for this license, or the entitlement maximum count
            is reached.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RedirectException">
            This is not the correct Region for the resource. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceNotFoundException">
            The resource cannot be found.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.UnsupportedDigitalSignatureMethodException">
            The digital signature method is unsupported. Try your request again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/CheckoutLicense">REST API Reference for CheckoutLicense Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.CreateGrant(Amazon.LicenseManager.Model.CreateGrantRequest)">
            <summary>
            Creates a grant for the specified license. A grant shares the use of license entitlements
            with specific Amazon Web Services accounts.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateGrant service method.</param>
            
            <returns>The response from the CreateGrant service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceLimitExceededException">
            Your resource limits have been exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/CreateGrant">REST API Reference for CreateGrant Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.CreateGrantAsync(Amazon.LicenseManager.Model.CreateGrantRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a grant for the specified license. A grant shares the use of license entitlements
            with specific Amazon Web Services accounts.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateGrant service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateGrant service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceLimitExceededException">
            Your resource limits have been exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/CreateGrant">REST API Reference for CreateGrant Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.CreateGrantVersion(Amazon.LicenseManager.Model.CreateGrantVersionRequest)">
            <summary>
            Creates a new version of the specified grant.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateGrantVersion service method.</param>
            
            <returns>The response from the CreateGrantVersion service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceLimitExceededException">
            Your resource limits have been exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/CreateGrantVersion">REST API Reference for CreateGrantVersion Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.CreateGrantVersionAsync(Amazon.LicenseManager.Model.CreateGrantVersionRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new version of the specified grant.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateGrantVersion service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateGrantVersion service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceLimitExceededException">
            Your resource limits have been exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/CreateGrantVersion">REST API Reference for CreateGrantVersion Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.CreateLicense(Amazon.LicenseManager.Model.CreateLicenseRequest)">
            <summary>
            Creates a license.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateLicense service method.</param>
            
            <returns>The response from the CreateLicense service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RedirectException">
            This is not the correct Region for the resource. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/CreateLicense">REST API Reference for CreateLicense Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.CreateLicenseAsync(Amazon.LicenseManager.Model.CreateLicenseRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a license.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateLicense service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateLicense service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RedirectException">
            This is not the correct Region for the resource. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/CreateLicense">REST API Reference for CreateLicense Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.CreateLicenseConfiguration(Amazon.LicenseManager.Model.CreateLicenseConfigurationRequest)">
            <summary>
            Creates a license configuration.
            
             
            <para>
            A license configuration is an abstraction of a customer license agreement that can
            be consumed and enforced by License Manager. Components include specifications for
            the license type (licensing by instance, socket, CPU, or vCPU), allowed tenancy (shared
            tenancy, Dedicated Instance, Dedicated Host, or all of these), license affinity to
            host (how long a license must be associated with a host), and the number of licenses
            purchased and used.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateLicenseConfiguration service method.</param>
            
            <returns>The response from the CreateLicenseConfiguration service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceLimitExceededException">
            Your resource limits have been exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/CreateLicenseConfiguration">REST API Reference for CreateLicenseConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.CreateLicenseConfigurationAsync(Amazon.LicenseManager.Model.CreateLicenseConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a license configuration.
            
             
            <para>
            A license configuration is an abstraction of a customer license agreement that can
            be consumed and enforced by License Manager. Components include specifications for
            the license type (licensing by instance, socket, CPU, or vCPU), allowed tenancy (shared
            tenancy, Dedicated Instance, Dedicated Host, or all of these), license affinity to
            host (how long a license must be associated with a host), and the number of licenses
            purchased and used.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateLicenseConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateLicenseConfiguration service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceLimitExceededException">
            Your resource limits have been exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/CreateLicenseConfiguration">REST API Reference for CreateLicenseConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.CreateLicenseConversionTaskForResource(Amazon.LicenseManager.Model.CreateLicenseConversionTaskForResourceRequest)">
            <summary>
            Creates a new license conversion task.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateLicenseConversionTaskForResource service method.</param>
            
            <returns>The response from the CreateLicenseConversionTaskForResource service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/CreateLicenseConversionTaskForResource">REST API Reference for CreateLicenseConversionTaskForResource Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.CreateLicenseConversionTaskForResourceAsync(Amazon.LicenseManager.Model.CreateLicenseConversionTaskForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new license conversion task.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateLicenseConversionTaskForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateLicenseConversionTaskForResource service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/CreateLicenseConversionTaskForResource">REST API Reference for CreateLicenseConversionTaskForResource Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.CreateLicenseManagerReportGenerator(Amazon.LicenseManager.Model.CreateLicenseManagerReportGeneratorRequest)">
            <summary>
            Creates a report generator.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateLicenseManagerReportGenerator service method.</param>
            
            <returns>The response from the CreateLicenseManagerReportGenerator service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceLimitExceededException">
            Your resource limits have been exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceNotFoundException">
            The resource cannot be found.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/CreateLicenseManagerReportGenerator">REST API Reference for CreateLicenseManagerReportGenerator Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.CreateLicenseManagerReportGeneratorAsync(Amazon.LicenseManager.Model.CreateLicenseManagerReportGeneratorRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a report generator.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateLicenseManagerReportGenerator service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateLicenseManagerReportGenerator service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceLimitExceededException">
            Your resource limits have been exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceNotFoundException">
            The resource cannot be found.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/CreateLicenseManagerReportGenerator">REST API Reference for CreateLicenseManagerReportGenerator Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.CreateLicenseVersion(Amazon.LicenseManager.Model.CreateLicenseVersionRequest)">
            <summary>
            Creates a new version of the specified license.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateLicenseVersion service method.</param>
            
            <returns>The response from the CreateLicenseVersion service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RedirectException">
            This is not the correct Region for the resource. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceNotFoundException">
            The resource cannot be found.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/CreateLicenseVersion">REST API Reference for CreateLicenseVersion Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.CreateLicenseVersionAsync(Amazon.LicenseManager.Model.CreateLicenseVersionRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new version of the specified license.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateLicenseVersion service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateLicenseVersion service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RedirectException">
            This is not the correct Region for the resource. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceNotFoundException">
            The resource cannot be found.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/CreateLicenseVersion">REST API Reference for CreateLicenseVersion Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.CreateToken(Amazon.LicenseManager.Model.CreateTokenRequest)">
            <summary>
            Creates a long-lived token.
            
             
            <para>
            A refresh token is a JWT token used to get an access token. With an access token,
            you can call AssumeRoleWithWebIdentity to get role credentials that you can use to
            call License Manager to manage the specified license.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateToken service method.</param>
            
            <returns>The response from the CreateToken service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RedirectException">
            This is not the correct Region for the resource. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceLimitExceededException">
            Your resource limits have been exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceNotFoundException">
            The resource cannot be found.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/CreateToken">REST API Reference for CreateToken Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.CreateTokenAsync(Amazon.LicenseManager.Model.CreateTokenRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a long-lived token.
            
             
            <para>
            A refresh token is a JWT token used to get an access token. With an access token,
            you can call AssumeRoleWithWebIdentity to get role credentials that you can use to
            call License Manager to manage the specified license.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateToken service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateToken service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RedirectException">
            This is not the correct Region for the resource. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceLimitExceededException">
            Your resource limits have been exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceNotFoundException">
            The resource cannot be found.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/CreateToken">REST API Reference for CreateToken Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.DeleteGrant(Amazon.LicenseManager.Model.DeleteGrantRequest)">
            <summary>
            Deletes the specified grant.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteGrant service method.</param>
            
            <returns>The response from the DeleteGrant service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceLimitExceededException">
            Your resource limits have been exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/DeleteGrant">REST API Reference for DeleteGrant Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.DeleteGrantAsync(Amazon.LicenseManager.Model.DeleteGrantRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified grant.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteGrant service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteGrant service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceLimitExceededException">
            Your resource limits have been exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/DeleteGrant">REST API Reference for DeleteGrant Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.DeleteLicense(Amazon.LicenseManager.Model.DeleteLicenseRequest)">
            <summary>
            Deletes the specified license.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteLicense service method.</param>
            
            <returns>The response from the DeleteLicense service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RedirectException">
            This is not the correct Region for the resource. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/DeleteLicense">REST API Reference for DeleteLicense Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.DeleteLicenseAsync(Amazon.LicenseManager.Model.DeleteLicenseRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified license.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteLicense service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteLicense service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RedirectException">
            This is not the correct Region for the resource. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/DeleteLicense">REST API Reference for DeleteLicense Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.DeleteLicenseConfiguration(Amazon.LicenseManager.Model.DeleteLicenseConfigurationRequest)">
            <summary>
            Deletes the specified license configuration.
            
             
            <para>
            You cannot delete a license configuration that is in use.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteLicenseConfiguration service method.</param>
            
            <returns>The response from the DeleteLicenseConfiguration service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/DeleteLicenseConfiguration">REST API Reference for DeleteLicenseConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.DeleteLicenseConfigurationAsync(Amazon.LicenseManager.Model.DeleteLicenseConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified license configuration.
            
             
            <para>
            You cannot delete a license configuration that is in use.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteLicenseConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteLicenseConfiguration service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/DeleteLicenseConfiguration">REST API Reference for DeleteLicenseConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.DeleteLicenseManagerReportGenerator(Amazon.LicenseManager.Model.DeleteLicenseManagerReportGeneratorRequest)">
            <summary>
            Deletes the specified report generator.
            
             
            <para>
            This action deletes the report generator, which stops it from generating future reports.
            The action cannot be reversed. It has no effect on the previous reports from this
            generator.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteLicenseManagerReportGenerator service method.</param>
            
            <returns>The response from the DeleteLicenseManagerReportGenerator service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceLimitExceededException">
            Your resource limits have been exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceNotFoundException">
            The resource cannot be found.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/DeleteLicenseManagerReportGenerator">REST API Reference for DeleteLicenseManagerReportGenerator Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.DeleteLicenseManagerReportGeneratorAsync(Amazon.LicenseManager.Model.DeleteLicenseManagerReportGeneratorRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified report generator.
            
             
            <para>
            This action deletes the report generator, which stops it from generating future reports.
            The action cannot be reversed. It has no effect on the previous reports from this
            generator.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteLicenseManagerReportGenerator service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteLicenseManagerReportGenerator service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceLimitExceededException">
            Your resource limits have been exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceNotFoundException">
            The resource cannot be found.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/DeleteLicenseManagerReportGenerator">REST API Reference for DeleteLicenseManagerReportGenerator Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.DeleteToken(Amazon.LicenseManager.Model.DeleteTokenRequest)">
            <summary>
            Deletes the specified token. Must be called in the license home Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteToken service method.</param>
            
            <returns>The response from the DeleteToken service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RedirectException">
            This is not the correct Region for the resource. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceNotFoundException">
            The resource cannot be found.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/DeleteToken">REST API Reference for DeleteToken Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.DeleteTokenAsync(Amazon.LicenseManager.Model.DeleteTokenRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified token. Must be called in the license home Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteToken service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteToken service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RedirectException">
            This is not the correct Region for the resource. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceNotFoundException">
            The resource cannot be found.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/DeleteToken">REST API Reference for DeleteToken Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.ExtendLicenseConsumption(Amazon.LicenseManager.Model.ExtendLicenseConsumptionRequest)">
            <summary>
            Extends the expiration date for license consumption.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ExtendLicenseConsumption service method.</param>
            
            <returns>The response from the ExtendLicenseConsumption service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceNotFoundException">
            The resource cannot be found.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ExtendLicenseConsumption">REST API Reference for ExtendLicenseConsumption Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.ExtendLicenseConsumptionAsync(Amazon.LicenseManager.Model.ExtendLicenseConsumptionRequest,System.Threading.CancellationToken)">
            <summary>
            Extends the expiration date for license consumption.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ExtendLicenseConsumption service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ExtendLicenseConsumption service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceNotFoundException">
            The resource cannot be found.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ExtendLicenseConsumption">REST API Reference for ExtendLicenseConsumption Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.GetAccessToken(Amazon.LicenseManager.Model.GetAccessTokenRequest)">
            <summary>
            Gets a temporary access token to use with AssumeRoleWithWebIdentity. Access tokens
            are valid for one hour.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetAccessToken service method.</param>
            
            <returns>The response from the GetAccessToken service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/GetAccessToken">REST API Reference for GetAccessToken Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.GetAccessTokenAsync(Amazon.LicenseManager.Model.GetAccessTokenRequest,System.Threading.CancellationToken)">
            <summary>
            Gets a temporary access token to use with AssumeRoleWithWebIdentity. Access tokens
            are valid for one hour.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetAccessToken service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetAccessToken service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/GetAccessToken">REST API Reference for GetAccessToken Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.GetGrant(Amazon.LicenseManager.Model.GetGrantRequest)">
            <summary>
            Gets detailed information about the specified grant.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetGrant service method.</param>
            
            <returns>The response from the GetGrant service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceLimitExceededException">
            Your resource limits have been exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/GetGrant">REST API Reference for GetGrant Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.GetGrantAsync(Amazon.LicenseManager.Model.GetGrantRequest,System.Threading.CancellationToken)">
            <summary>
            Gets detailed information about the specified grant.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetGrant service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetGrant service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceLimitExceededException">
            Your resource limits have been exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/GetGrant">REST API Reference for GetGrant Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.GetLicense(Amazon.LicenseManager.Model.GetLicenseRequest)">
            <summary>
            Gets detailed information about the specified license.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetLicense service method.</param>
            
            <returns>The response from the GetLicense service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/GetLicense">REST API Reference for GetLicense Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.GetLicenseAsync(Amazon.LicenseManager.Model.GetLicenseRequest,System.Threading.CancellationToken)">
            <summary>
            Gets detailed information about the specified license.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetLicense service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetLicense service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/GetLicense">REST API Reference for GetLicense Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.GetLicenseConfiguration(Amazon.LicenseManager.Model.GetLicenseConfigurationRequest)">
            <summary>
            Gets detailed information about the specified license configuration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetLicenseConfiguration service method.</param>
            
            <returns>The response from the GetLicenseConfiguration service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/GetLicenseConfiguration">REST API Reference for GetLicenseConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.GetLicenseConfigurationAsync(Amazon.LicenseManager.Model.GetLicenseConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Gets detailed information about the specified license configuration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetLicenseConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetLicenseConfiguration service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/GetLicenseConfiguration">REST API Reference for GetLicenseConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.GetLicenseConversionTask(Amazon.LicenseManager.Model.GetLicenseConversionTaskRequest)">
            <summary>
            Gets information about the specified license type conversion task.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetLicenseConversionTask service method.</param>
            
            <returns>The response from the GetLicenseConversionTask service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/GetLicenseConversionTask">REST API Reference for GetLicenseConversionTask Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.GetLicenseConversionTaskAsync(Amazon.LicenseManager.Model.GetLicenseConversionTaskRequest,System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified license type conversion task.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetLicenseConversionTask service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetLicenseConversionTask service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/GetLicenseConversionTask">REST API Reference for GetLicenseConversionTask Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.GetLicenseManagerReportGenerator(Amazon.LicenseManager.Model.GetLicenseManagerReportGeneratorRequest)">
            <summary>
            Gets information about the specified report generator.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetLicenseManagerReportGenerator service method.</param>
            
            <returns>The response from the GetLicenseManagerReportGenerator service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceLimitExceededException">
            Your resource limits have been exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceNotFoundException">
            The resource cannot be found.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/GetLicenseManagerReportGenerator">REST API Reference for GetLicenseManagerReportGenerator Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.GetLicenseManagerReportGeneratorAsync(Amazon.LicenseManager.Model.GetLicenseManagerReportGeneratorRequest,System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified report generator.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetLicenseManagerReportGenerator service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetLicenseManagerReportGenerator service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceLimitExceededException">
            Your resource limits have been exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceNotFoundException">
            The resource cannot be found.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/GetLicenseManagerReportGenerator">REST API Reference for GetLicenseManagerReportGenerator Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.GetLicenseUsage(Amazon.LicenseManager.Model.GetLicenseUsageRequest)">
            <summary>
            Gets detailed information about the usage of the specified license.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetLicenseUsage service method.</param>
            
            <returns>The response from the GetLicenseUsage service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/GetLicenseUsage">REST API Reference for GetLicenseUsage Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.GetLicenseUsageAsync(Amazon.LicenseManager.Model.GetLicenseUsageRequest,System.Threading.CancellationToken)">
            <summary>
            Gets detailed information about the usage of the specified license.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetLicenseUsage service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetLicenseUsage service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/GetLicenseUsage">REST API Reference for GetLicenseUsage Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.GetServiceSettings(Amazon.LicenseManager.Model.GetServiceSettingsRequest)">
            <summary>
            Gets the License Manager settings for the current Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetServiceSettings service method.</param>
            
            <returns>The response from the GetServiceSettings service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/GetServiceSettings">REST API Reference for GetServiceSettings Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.GetServiceSettingsAsync(Amazon.LicenseManager.Model.GetServiceSettingsRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the License Manager settings for the current Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetServiceSettings service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetServiceSettings service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/GetServiceSettings">REST API Reference for GetServiceSettings Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.ListAssociationsForLicenseConfiguration(Amazon.LicenseManager.Model.ListAssociationsForLicenseConfigurationRequest)">
            <summary>
            Lists the resource associations for the specified license configuration.
            
             
            <para>
            Resource associations need not consume licenses from a license configuration. For
            example, an AMI or a stopped instance might not consume a license (depending on the
            license rules).
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListAssociationsForLicenseConfiguration service method.</param>
            
            <returns>The response from the ListAssociationsForLicenseConfiguration service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.FilterLimitExceededException">
            The request uses too many filters or too many filter values.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListAssociationsForLicenseConfiguration">REST API Reference for ListAssociationsForLicenseConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.ListAssociationsForLicenseConfigurationAsync(Amazon.LicenseManager.Model.ListAssociationsForLicenseConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the resource associations for the specified license configuration.
            
             
            <para>
            Resource associations need not consume licenses from a license configuration. For
            example, an AMI or a stopped instance might not consume a license (depending on the
            license rules).
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListAssociationsForLicenseConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListAssociationsForLicenseConfiguration service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.FilterLimitExceededException">
            The request uses too many filters or too many filter values.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListAssociationsForLicenseConfiguration">REST API Reference for ListAssociationsForLicenseConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.ListDistributedGrants(Amazon.LicenseManager.Model.ListDistributedGrantsRequest)">
            <summary>
            Lists the grants distributed for the specified license.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListDistributedGrants service method.</param>
            
            <returns>The response from the ListDistributedGrants service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceLimitExceededException">
            Your resource limits have been exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListDistributedGrants">REST API Reference for ListDistributedGrants Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.ListDistributedGrantsAsync(Amazon.LicenseManager.Model.ListDistributedGrantsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the grants distributed for the specified license.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListDistributedGrants service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListDistributedGrants service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceLimitExceededException">
            Your resource limits have been exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListDistributedGrants">REST API Reference for ListDistributedGrants Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.ListFailuresForLicenseConfigurationOperations(Amazon.LicenseManager.Model.ListFailuresForLicenseConfigurationOperationsRequest)">
            <summary>
            Lists the license configuration operations that failed.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListFailuresForLicenseConfigurationOperations service method.</param>
            
            <returns>The response from the ListFailuresForLicenseConfigurationOperations service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListFailuresForLicenseConfigurationOperations">REST API Reference for ListFailuresForLicenseConfigurationOperations Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.ListFailuresForLicenseConfigurationOperationsAsync(Amazon.LicenseManager.Model.ListFailuresForLicenseConfigurationOperationsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the license configuration operations that failed.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListFailuresForLicenseConfigurationOperations service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListFailuresForLicenseConfigurationOperations service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListFailuresForLicenseConfigurationOperations">REST API Reference for ListFailuresForLicenseConfigurationOperations Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.ListLicenseConfigurations(Amazon.LicenseManager.Model.ListLicenseConfigurationsRequest)">
            <summary>
            Lists the license configurations for your account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListLicenseConfigurations service method.</param>
            
            <returns>The response from the ListLicenseConfigurations service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.FilterLimitExceededException">
            The request uses too many filters or too many filter values.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListLicenseConfigurations">REST API Reference for ListLicenseConfigurations Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.ListLicenseConfigurationsAsync(Amazon.LicenseManager.Model.ListLicenseConfigurationsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the license configurations for your account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListLicenseConfigurations service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListLicenseConfigurations service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.FilterLimitExceededException">
            The request uses too many filters or too many filter values.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListLicenseConfigurations">REST API Reference for ListLicenseConfigurations Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.ListLicenseConversionTasks(Amazon.LicenseManager.Model.ListLicenseConversionTasksRequest)">
            <summary>
            Lists the license type conversion tasks for your account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListLicenseConversionTasks service method.</param>
            
            <returns>The response from the ListLicenseConversionTasks service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListLicenseConversionTasks">REST API Reference for ListLicenseConversionTasks Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.ListLicenseConversionTasksAsync(Amazon.LicenseManager.Model.ListLicenseConversionTasksRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the license type conversion tasks for your account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListLicenseConversionTasks service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListLicenseConversionTasks service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListLicenseConversionTasks">REST API Reference for ListLicenseConversionTasks Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.ListLicenseManagerReportGenerators(Amazon.LicenseManager.Model.ListLicenseManagerReportGeneratorsRequest)">
            <summary>
            Lists the report generators for your account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListLicenseManagerReportGenerators service method.</param>
            
            <returns>The response from the ListLicenseManagerReportGenerators service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceLimitExceededException">
            Your resource limits have been exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceNotFoundException">
            The resource cannot be found.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListLicenseManagerReportGenerators">REST API Reference for ListLicenseManagerReportGenerators Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.ListLicenseManagerReportGeneratorsAsync(Amazon.LicenseManager.Model.ListLicenseManagerReportGeneratorsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the report generators for your account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListLicenseManagerReportGenerators service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListLicenseManagerReportGenerators service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceLimitExceededException">
            Your resource limits have been exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceNotFoundException">
            The resource cannot be found.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListLicenseManagerReportGenerators">REST API Reference for ListLicenseManagerReportGenerators Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.ListLicenses(Amazon.LicenseManager.Model.ListLicensesRequest)">
            <summary>
            Lists the licenses for your account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListLicenses service method.</param>
            
            <returns>The response from the ListLicenses service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListLicenses">REST API Reference for ListLicenses Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.ListLicensesAsync(Amazon.LicenseManager.Model.ListLicensesRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the licenses for your account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListLicenses service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListLicenses service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListLicenses">REST API Reference for ListLicenses Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.ListLicenseSpecificationsForResource(Amazon.LicenseManager.Model.ListLicenseSpecificationsForResourceRequest)">
            <summary>
            Describes the license configurations for the specified resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListLicenseSpecificationsForResource service method.</param>
            
            <returns>The response from the ListLicenseSpecificationsForResource service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListLicenseSpecificationsForResource">REST API Reference for ListLicenseSpecificationsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.ListLicenseSpecificationsForResourceAsync(Amazon.LicenseManager.Model.ListLicenseSpecificationsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Describes the license configurations for the specified resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListLicenseSpecificationsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListLicenseSpecificationsForResource service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListLicenseSpecificationsForResource">REST API Reference for ListLicenseSpecificationsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.ListLicenseVersions(Amazon.LicenseManager.Model.ListLicenseVersionsRequest)">
            <summary>
            Lists all versions of the specified license.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListLicenseVersions service method.</param>
            
            <returns>The response from the ListLicenseVersions service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListLicenseVersions">REST API Reference for ListLicenseVersions Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.ListLicenseVersionsAsync(Amazon.LicenseManager.Model.ListLicenseVersionsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all versions of the specified license.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListLicenseVersions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListLicenseVersions service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListLicenseVersions">REST API Reference for ListLicenseVersions Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.ListReceivedGrants(Amazon.LicenseManager.Model.ListReceivedGrantsRequest)">
            <summary>
            Lists grants that are received but not accepted.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListReceivedGrants service method.</param>
            
            <returns>The response from the ListReceivedGrants service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceLimitExceededException">
            Your resource limits have been exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListReceivedGrants">REST API Reference for ListReceivedGrants Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.ListReceivedGrantsAsync(Amazon.LicenseManager.Model.ListReceivedGrantsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists grants that are received but not accepted.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListReceivedGrants service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListReceivedGrants service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceLimitExceededException">
            Your resource limits have been exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListReceivedGrants">REST API Reference for ListReceivedGrants Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.ListReceivedLicenses(Amazon.LicenseManager.Model.ListReceivedLicensesRequest)">
            <summary>
            Lists received licenses.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListReceivedLicenses service method.</param>
            
            <returns>The response from the ListReceivedLicenses service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceLimitExceededException">
            Your resource limits have been exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListReceivedLicenses">REST API Reference for ListReceivedLicenses Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.ListReceivedLicensesAsync(Amazon.LicenseManager.Model.ListReceivedLicensesRequest,System.Threading.CancellationToken)">
            <summary>
            Lists received licenses.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListReceivedLicenses service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListReceivedLicenses service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceLimitExceededException">
            Your resource limits have been exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListReceivedLicenses">REST API Reference for ListReceivedLicenses Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.ListResourceInventory(Amazon.LicenseManager.Model.ListResourceInventoryRequest)">
            <summary>
            Lists resources managed using Systems Manager inventory.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListResourceInventory service method.</param>
            
            <returns>The response from the ListResourceInventory service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.FailedDependencyException">
            A dependency required to run the API is missing.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.FilterLimitExceededException">
            The request uses too many filters or too many filter values.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListResourceInventory">REST API Reference for ListResourceInventory Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.ListResourceInventoryAsync(Amazon.LicenseManager.Model.ListResourceInventoryRequest,System.Threading.CancellationToken)">
            <summary>
            Lists resources managed using Systems Manager inventory.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListResourceInventory service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListResourceInventory service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.FailedDependencyException">
            A dependency required to run the API is missing.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.FilterLimitExceededException">
            The request uses too many filters or too many filter values.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListResourceInventory">REST API Reference for ListResourceInventory Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.ListTagsForResource(Amazon.LicenseManager.Model.ListTagsForResourceRequest)">
            <summary>
            Lists the tags for the specified license configuration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            
            <returns>The response from the ListTagsForResource service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.ListTagsForResourceAsync(Amazon.LicenseManager.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the tags for the specified license configuration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.ListTokens(Amazon.LicenseManager.Model.ListTokensRequest)">
            <summary>
            Lists your tokens.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTokens service method.</param>
            
            <returns>The response from the ListTokens service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListTokens">REST API Reference for ListTokens Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.ListTokensAsync(Amazon.LicenseManager.Model.ListTokensRequest,System.Threading.CancellationToken)">
            <summary>
            Lists your tokens.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTokens service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTokens service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListTokens">REST API Reference for ListTokens Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.ListUsageForLicenseConfiguration(Amazon.LicenseManager.Model.ListUsageForLicenseConfigurationRequest)">
            <summary>
            Lists all license usage records for a license configuration, displaying license consumption
            details by resource at a selected point in time. Use this action to audit the current
            license consumption for any license inventory and configuration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListUsageForLicenseConfiguration service method.</param>
            
            <returns>The response from the ListUsageForLicenseConfiguration service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.FilterLimitExceededException">
            The request uses too many filters or too many filter values.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListUsageForLicenseConfiguration">REST API Reference for ListUsageForLicenseConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.ListUsageForLicenseConfigurationAsync(Amazon.LicenseManager.Model.ListUsageForLicenseConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all license usage records for a license configuration, displaying license consumption
            details by resource at a selected point in time. Use this action to audit the current
            license consumption for any license inventory and configuration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListUsageForLicenseConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListUsageForLicenseConfiguration service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.FilterLimitExceededException">
            The request uses too many filters or too many filter values.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListUsageForLicenseConfiguration">REST API Reference for ListUsageForLicenseConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.RejectGrant(Amazon.LicenseManager.Model.RejectGrantRequest)">
            <summary>
            Rejects the specified grant.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RejectGrant service method.</param>
            
            <returns>The response from the RejectGrant service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceLimitExceededException">
            Your resource limits have been exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/RejectGrant">REST API Reference for RejectGrant Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.RejectGrantAsync(Amazon.LicenseManager.Model.RejectGrantRequest,System.Threading.CancellationToken)">
            <summary>
            Rejects the specified grant.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RejectGrant service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RejectGrant service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceLimitExceededException">
            Your resource limits have been exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/RejectGrant">REST API Reference for RejectGrant Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.TagResource(Amazon.LicenseManager.Model.TagResourceRequest)">
            <summary>
            Adds the specified tags to the specified license configuration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            
            <returns>The response from the TagResource service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.TagResourceAsync(Amazon.LicenseManager.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Adds the specified tags to the specified license configuration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.UntagResource(Amazon.LicenseManager.Model.UntagResourceRequest)">
            <summary>
            Removes the specified tags from the specified license configuration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            
            <returns>The response from the UntagResource service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.UntagResourceAsync(Amazon.LicenseManager.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Removes the specified tags from the specified license configuration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.UpdateLicenseConfiguration(Amazon.LicenseManager.Model.UpdateLicenseConfigurationRequest)">
            <summary>
            Modifies the attributes of an existing license configuration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateLicenseConfiguration service method.</param>
            
            <returns>The response from the UpdateLicenseConfiguration service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceLimitExceededException">
            Your resource limits have been exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/UpdateLicenseConfiguration">REST API Reference for UpdateLicenseConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.UpdateLicenseConfigurationAsync(Amazon.LicenseManager.Model.UpdateLicenseConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies the attributes of an existing license configuration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateLicenseConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateLicenseConfiguration service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceLimitExceededException">
            Your resource limits have been exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/UpdateLicenseConfiguration">REST API Reference for UpdateLicenseConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.UpdateLicenseManagerReportGenerator(Amazon.LicenseManager.Model.UpdateLicenseManagerReportGeneratorRequest)">
            <summary>
            Updates a report generator.
            
             
            <para>
            After you make changes to a report generator, it starts generating new reports within
            60 minutes of being updated.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateLicenseManagerReportGenerator service method.</param>
            
            <returns>The response from the UpdateLicenseManagerReportGenerator service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceLimitExceededException">
            Your resource limits have been exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceNotFoundException">
            The resource cannot be found.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/UpdateLicenseManagerReportGenerator">REST API Reference for UpdateLicenseManagerReportGenerator Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.UpdateLicenseManagerReportGeneratorAsync(Amazon.LicenseManager.Model.UpdateLicenseManagerReportGeneratorRequest,System.Threading.CancellationToken)">
            <summary>
            Updates a report generator.
            
             
            <para>
            After you make changes to a report generator, it starts generating new reports within
            60 minutes of being updated.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateLicenseManagerReportGenerator service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateLicenseManagerReportGenerator service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceLimitExceededException">
            Your resource limits have been exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceNotFoundException">
            The resource cannot be found.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/UpdateLicenseManagerReportGenerator">REST API Reference for UpdateLicenseManagerReportGenerator Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.UpdateLicenseSpecificationsForResource(Amazon.LicenseManager.Model.UpdateLicenseSpecificationsForResourceRequest)">
            <summary>
            Adds or removes the specified license configurations for the specified Amazon Web
            Services resource.
            
             
            <para>
            You can update the license specifications of AMIs, instances, and hosts. You cannot
            update the license specifications for launch templates and CloudFormation templates,
            as they send license configurations to the operation that creates the resource.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateLicenseSpecificationsForResource service method.</param>
            
            <returns>The response from the UpdateLicenseSpecificationsForResource service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidResourceStateException">
            License Manager cannot allocate a license to a resource because of its state. 
            
             
            <para>
            For example, you cannot allocate a license to an instance in the process of shutting
            down.
            </para>
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.LicenseUsageException">
            You do not have enough licenses available to support a new resource launch.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/UpdateLicenseSpecificationsForResource">REST API Reference for UpdateLicenseSpecificationsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.UpdateLicenseSpecificationsForResourceAsync(Amazon.LicenseManager.Model.UpdateLicenseSpecificationsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Adds or removes the specified license configurations for the specified Amazon Web
            Services resource.
            
             
            <para>
            You can update the license specifications of AMIs, instances, and hosts. You cannot
            update the license specifications for launch templates and CloudFormation templates,
            as they send license configurations to the operation that creates the resource.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateLicenseSpecificationsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateLicenseSpecificationsForResource service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidResourceStateException">
            License Manager cannot allocate a license to a resource because of its state. 
            
             
            <para>
            For example, you cannot allocate a license to an instance in the process of shutting
            down.
            </para>
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.LicenseUsageException">
            You do not have enough licenses available to support a new resource launch.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/UpdateLicenseSpecificationsForResource">REST API Reference for UpdateLicenseSpecificationsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.UpdateServiceSettings(Amazon.LicenseManager.Model.UpdateServiceSettingsRequest)">
            <summary>
            Updates License Manager settings for the current Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateServiceSettings service method.</param>
            
            <returns>The response from the UpdateServiceSettings service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/UpdateServiceSettings">REST API Reference for UpdateServiceSettings Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.UpdateServiceSettingsAsync(Amazon.LicenseManager.Model.UpdateServiceSettingsRequest,System.Threading.CancellationToken)">
            <summary>
            Updates License Manager settings for the current Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateServiceSettings service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateServiceSettings service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/UpdateServiceSettings">REST API Reference for UpdateServiceSettings Operation</seealso>
        </member>
        <member name="T:Amazon.LicenseManager.IAmazonLicenseManager">
             <summary>
             Interface for accessing LicenseManager
            
             License Manager makes it easier to manage licenses from software vendors across multiple
             Amazon Web Services accounts and on-premises servers.
             </summary>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.AcceptGrant(Amazon.LicenseManager.Model.AcceptGrantRequest)">
            <summary>
            Accepts the specified grant.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AcceptGrant service method.</param>
            
            <returns>The response from the AcceptGrant service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceLimitExceededException">
            Your resource limits have been exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/AcceptGrant">REST API Reference for AcceptGrant Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.AcceptGrantAsync(Amazon.LicenseManager.Model.AcceptGrantRequest,System.Threading.CancellationToken)">
            <summary>
            Accepts the specified grant.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AcceptGrant service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AcceptGrant service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceLimitExceededException">
            Your resource limits have been exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/AcceptGrant">REST API Reference for AcceptGrant Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.CheckInLicense(Amazon.LicenseManager.Model.CheckInLicenseRequest)">
            <summary>
            Checks in the specified license. Check in a license when it is no longer in use.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CheckInLicense service method.</param>
            
            <returns>The response from the CheckInLicense service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceNotFoundException">
            The resource cannot be found.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/CheckInLicense">REST API Reference for CheckInLicense Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.CheckInLicenseAsync(Amazon.LicenseManager.Model.CheckInLicenseRequest,System.Threading.CancellationToken)">
            <summary>
            Checks in the specified license. Check in a license when it is no longer in use.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CheckInLicense service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CheckInLicense service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceNotFoundException">
            The resource cannot be found.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/CheckInLicense">REST API Reference for CheckInLicense Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.CheckoutBorrowLicense(Amazon.LicenseManager.Model.CheckoutBorrowLicenseRequest)">
            <summary>
            Checks out the specified license for offline use.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CheckoutBorrowLicense service method.</param>
            
            <returns>The response from the CheckoutBorrowLicense service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.EntitlementNotAllowedException">
            The entitlement is not allowed.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.NoEntitlementsAllowedException">
            There are no entitlements found for this license, or the entitlement maximum count
            is reached.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RedirectException">
            This is not the correct Region for the resource. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceNotFoundException">
            The resource cannot be found.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.UnsupportedDigitalSignatureMethodException">
            The digital signature method is unsupported. Try your request again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/CheckoutBorrowLicense">REST API Reference for CheckoutBorrowLicense Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.CheckoutBorrowLicenseAsync(Amazon.LicenseManager.Model.CheckoutBorrowLicenseRequest,System.Threading.CancellationToken)">
            <summary>
            Checks out the specified license for offline use.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CheckoutBorrowLicense service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CheckoutBorrowLicense service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.EntitlementNotAllowedException">
            The entitlement is not allowed.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.NoEntitlementsAllowedException">
            There are no entitlements found for this license, or the entitlement maximum count
            is reached.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RedirectException">
            This is not the correct Region for the resource. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceNotFoundException">
            The resource cannot be found.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.UnsupportedDigitalSignatureMethodException">
            The digital signature method is unsupported. Try your request again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/CheckoutBorrowLicense">REST API Reference for CheckoutBorrowLicense Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.CheckoutLicense(Amazon.LicenseManager.Model.CheckoutLicenseRequest)">
            <summary>
            Checks out the specified license.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CheckoutLicense service method.</param>
            
            <returns>The response from the CheckoutLicense service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.NoEntitlementsAllowedException">
            There are no entitlements found for this license, or the entitlement maximum count
            is reached.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RedirectException">
            This is not the correct Region for the resource. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceNotFoundException">
            The resource cannot be found.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.UnsupportedDigitalSignatureMethodException">
            The digital signature method is unsupported. Try your request again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/CheckoutLicense">REST API Reference for CheckoutLicense Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.CheckoutLicenseAsync(Amazon.LicenseManager.Model.CheckoutLicenseRequest,System.Threading.CancellationToken)">
            <summary>
            Checks out the specified license.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CheckoutLicense service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CheckoutLicense service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.NoEntitlementsAllowedException">
            There are no entitlements found for this license, or the entitlement maximum count
            is reached.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RedirectException">
            This is not the correct Region for the resource. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceNotFoundException">
            The resource cannot be found.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.UnsupportedDigitalSignatureMethodException">
            The digital signature method is unsupported. Try your request again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/CheckoutLicense">REST API Reference for CheckoutLicense Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.CreateGrant(Amazon.LicenseManager.Model.CreateGrantRequest)">
            <summary>
            Creates a grant for the specified license. A grant shares the use of license entitlements
            with specific Amazon Web Services accounts.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateGrant service method.</param>
            
            <returns>The response from the CreateGrant service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceLimitExceededException">
            Your resource limits have been exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/CreateGrant">REST API Reference for CreateGrant Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.CreateGrantAsync(Amazon.LicenseManager.Model.CreateGrantRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a grant for the specified license. A grant shares the use of license entitlements
            with specific Amazon Web Services accounts.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateGrant service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateGrant service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceLimitExceededException">
            Your resource limits have been exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/CreateGrant">REST API Reference for CreateGrant Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.CreateGrantVersion(Amazon.LicenseManager.Model.CreateGrantVersionRequest)">
            <summary>
            Creates a new version of the specified grant.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateGrantVersion service method.</param>
            
            <returns>The response from the CreateGrantVersion service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceLimitExceededException">
            Your resource limits have been exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/CreateGrantVersion">REST API Reference for CreateGrantVersion Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.CreateGrantVersionAsync(Amazon.LicenseManager.Model.CreateGrantVersionRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new version of the specified grant.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateGrantVersion service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateGrantVersion service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceLimitExceededException">
            Your resource limits have been exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/CreateGrantVersion">REST API Reference for CreateGrantVersion Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.CreateLicense(Amazon.LicenseManager.Model.CreateLicenseRequest)">
            <summary>
            Creates a license.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateLicense service method.</param>
            
            <returns>The response from the CreateLicense service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RedirectException">
            This is not the correct Region for the resource. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/CreateLicense">REST API Reference for CreateLicense Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.CreateLicenseAsync(Amazon.LicenseManager.Model.CreateLicenseRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a license.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateLicense service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateLicense service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RedirectException">
            This is not the correct Region for the resource. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/CreateLicense">REST API Reference for CreateLicense Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.CreateLicenseConfiguration(Amazon.LicenseManager.Model.CreateLicenseConfigurationRequest)">
            <summary>
            Creates a license configuration.
            
             
            <para>
            A license configuration is an abstraction of a customer license agreement that can
            be consumed and enforced by License Manager. Components include specifications for
            the license type (licensing by instance, socket, CPU, or vCPU), allowed tenancy (shared
            tenancy, Dedicated Instance, Dedicated Host, or all of these), license affinity to
            host (how long a license must be associated with a host), and the number of licenses
            purchased and used.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateLicenseConfiguration service method.</param>
            
            <returns>The response from the CreateLicenseConfiguration service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceLimitExceededException">
            Your resource limits have been exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/CreateLicenseConfiguration">REST API Reference for CreateLicenseConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.CreateLicenseConfigurationAsync(Amazon.LicenseManager.Model.CreateLicenseConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a license configuration.
            
             
            <para>
            A license configuration is an abstraction of a customer license agreement that can
            be consumed and enforced by License Manager. Components include specifications for
            the license type (licensing by instance, socket, CPU, or vCPU), allowed tenancy (shared
            tenancy, Dedicated Instance, Dedicated Host, or all of these), license affinity to
            host (how long a license must be associated with a host), and the number of licenses
            purchased and used.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateLicenseConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateLicenseConfiguration service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceLimitExceededException">
            Your resource limits have been exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/CreateLicenseConfiguration">REST API Reference for CreateLicenseConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.CreateLicenseConversionTaskForResource(Amazon.LicenseManager.Model.CreateLicenseConversionTaskForResourceRequest)">
            <summary>
            Creates a new license conversion task.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateLicenseConversionTaskForResource service method.</param>
            
            <returns>The response from the CreateLicenseConversionTaskForResource service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/CreateLicenseConversionTaskForResource">REST API Reference for CreateLicenseConversionTaskForResource Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.CreateLicenseConversionTaskForResourceAsync(Amazon.LicenseManager.Model.CreateLicenseConversionTaskForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new license conversion task.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateLicenseConversionTaskForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateLicenseConversionTaskForResource service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/CreateLicenseConversionTaskForResource">REST API Reference for CreateLicenseConversionTaskForResource Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.CreateLicenseManagerReportGenerator(Amazon.LicenseManager.Model.CreateLicenseManagerReportGeneratorRequest)">
            <summary>
            Creates a report generator.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateLicenseManagerReportGenerator service method.</param>
            
            <returns>The response from the CreateLicenseManagerReportGenerator service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceLimitExceededException">
            Your resource limits have been exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceNotFoundException">
            The resource cannot be found.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/CreateLicenseManagerReportGenerator">REST API Reference for CreateLicenseManagerReportGenerator Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.CreateLicenseManagerReportGeneratorAsync(Amazon.LicenseManager.Model.CreateLicenseManagerReportGeneratorRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a report generator.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateLicenseManagerReportGenerator service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateLicenseManagerReportGenerator service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceLimitExceededException">
            Your resource limits have been exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceNotFoundException">
            The resource cannot be found.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/CreateLicenseManagerReportGenerator">REST API Reference for CreateLicenseManagerReportGenerator Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.CreateLicenseVersion(Amazon.LicenseManager.Model.CreateLicenseVersionRequest)">
            <summary>
            Creates a new version of the specified license.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateLicenseVersion service method.</param>
            
            <returns>The response from the CreateLicenseVersion service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RedirectException">
            This is not the correct Region for the resource. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceNotFoundException">
            The resource cannot be found.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/CreateLicenseVersion">REST API Reference for CreateLicenseVersion Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.CreateLicenseVersionAsync(Amazon.LicenseManager.Model.CreateLicenseVersionRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new version of the specified license.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateLicenseVersion service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateLicenseVersion service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RedirectException">
            This is not the correct Region for the resource. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceNotFoundException">
            The resource cannot be found.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/CreateLicenseVersion">REST API Reference for CreateLicenseVersion Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.CreateToken(Amazon.LicenseManager.Model.CreateTokenRequest)">
            <summary>
            Creates a long-lived token.
            
             
            <para>
            A refresh token is a JWT token used to get an access token. With an access token,
            you can call AssumeRoleWithWebIdentity to get role credentials that you can use to
            call License Manager to manage the specified license.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateToken service method.</param>
            
            <returns>The response from the CreateToken service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RedirectException">
            This is not the correct Region for the resource. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceLimitExceededException">
            Your resource limits have been exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceNotFoundException">
            The resource cannot be found.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/CreateToken">REST API Reference for CreateToken Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.CreateTokenAsync(Amazon.LicenseManager.Model.CreateTokenRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a long-lived token.
            
             
            <para>
            A refresh token is a JWT token used to get an access token. With an access token,
            you can call AssumeRoleWithWebIdentity to get role credentials that you can use to
            call License Manager to manage the specified license.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateToken service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateToken service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RedirectException">
            This is not the correct Region for the resource. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceLimitExceededException">
            Your resource limits have been exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceNotFoundException">
            The resource cannot be found.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/CreateToken">REST API Reference for CreateToken Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.DeleteGrant(Amazon.LicenseManager.Model.DeleteGrantRequest)">
            <summary>
            Deletes the specified grant.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteGrant service method.</param>
            
            <returns>The response from the DeleteGrant service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceLimitExceededException">
            Your resource limits have been exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/DeleteGrant">REST API Reference for DeleteGrant Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.DeleteGrantAsync(Amazon.LicenseManager.Model.DeleteGrantRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified grant.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteGrant service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteGrant service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceLimitExceededException">
            Your resource limits have been exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/DeleteGrant">REST API Reference for DeleteGrant Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.DeleteLicense(Amazon.LicenseManager.Model.DeleteLicenseRequest)">
            <summary>
            Deletes the specified license.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteLicense service method.</param>
            
            <returns>The response from the DeleteLicense service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RedirectException">
            This is not the correct Region for the resource. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/DeleteLicense">REST API Reference for DeleteLicense Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.DeleteLicenseAsync(Amazon.LicenseManager.Model.DeleteLicenseRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified license.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteLicense service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteLicense service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RedirectException">
            This is not the correct Region for the resource. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/DeleteLicense">REST API Reference for DeleteLicense Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.DeleteLicenseConfiguration(Amazon.LicenseManager.Model.DeleteLicenseConfigurationRequest)">
            <summary>
            Deletes the specified license configuration.
            
             
            <para>
            You cannot delete a license configuration that is in use.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteLicenseConfiguration service method.</param>
            
            <returns>The response from the DeleteLicenseConfiguration service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/DeleteLicenseConfiguration">REST API Reference for DeleteLicenseConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.DeleteLicenseConfigurationAsync(Amazon.LicenseManager.Model.DeleteLicenseConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified license configuration.
            
             
            <para>
            You cannot delete a license configuration that is in use.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteLicenseConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteLicenseConfiguration service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/DeleteLicenseConfiguration">REST API Reference for DeleteLicenseConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.DeleteLicenseManagerReportGenerator(Amazon.LicenseManager.Model.DeleteLicenseManagerReportGeneratorRequest)">
            <summary>
            Deletes the specified report generator.
            
             
            <para>
            This action deletes the report generator, which stops it from generating future reports.
            The action cannot be reversed. It has no effect on the previous reports from this
            generator.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteLicenseManagerReportGenerator service method.</param>
            
            <returns>The response from the DeleteLicenseManagerReportGenerator service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceLimitExceededException">
            Your resource limits have been exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceNotFoundException">
            The resource cannot be found.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/DeleteLicenseManagerReportGenerator">REST API Reference for DeleteLicenseManagerReportGenerator Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.DeleteLicenseManagerReportGeneratorAsync(Amazon.LicenseManager.Model.DeleteLicenseManagerReportGeneratorRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified report generator.
            
             
            <para>
            This action deletes the report generator, which stops it from generating future reports.
            The action cannot be reversed. It has no effect on the previous reports from this
            generator.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteLicenseManagerReportGenerator service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteLicenseManagerReportGenerator service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceLimitExceededException">
            Your resource limits have been exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceNotFoundException">
            The resource cannot be found.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/DeleteLicenseManagerReportGenerator">REST API Reference for DeleteLicenseManagerReportGenerator Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.DeleteToken(Amazon.LicenseManager.Model.DeleteTokenRequest)">
            <summary>
            Deletes the specified token. Must be called in the license home Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteToken service method.</param>
            
            <returns>The response from the DeleteToken service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RedirectException">
            This is not the correct Region for the resource. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceNotFoundException">
            The resource cannot be found.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/DeleteToken">REST API Reference for DeleteToken Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.DeleteTokenAsync(Amazon.LicenseManager.Model.DeleteTokenRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified token. Must be called in the license home Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteToken service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteToken service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RedirectException">
            This is not the correct Region for the resource. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceNotFoundException">
            The resource cannot be found.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/DeleteToken">REST API Reference for DeleteToken Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.ExtendLicenseConsumption(Amazon.LicenseManager.Model.ExtendLicenseConsumptionRequest)">
            <summary>
            Extends the expiration date for license consumption.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ExtendLicenseConsumption service method.</param>
            
            <returns>The response from the ExtendLicenseConsumption service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceNotFoundException">
            The resource cannot be found.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ExtendLicenseConsumption">REST API Reference for ExtendLicenseConsumption Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.ExtendLicenseConsumptionAsync(Amazon.LicenseManager.Model.ExtendLicenseConsumptionRequest,System.Threading.CancellationToken)">
            <summary>
            Extends the expiration date for license consumption.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ExtendLicenseConsumption service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ExtendLicenseConsumption service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceNotFoundException">
            The resource cannot be found.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ExtendLicenseConsumption">REST API Reference for ExtendLicenseConsumption Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.GetAccessToken(Amazon.LicenseManager.Model.GetAccessTokenRequest)">
            <summary>
            Gets a temporary access token to use with AssumeRoleWithWebIdentity. Access tokens
            are valid for one hour.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetAccessToken service method.</param>
            
            <returns>The response from the GetAccessToken service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/GetAccessToken">REST API Reference for GetAccessToken Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.GetAccessTokenAsync(Amazon.LicenseManager.Model.GetAccessTokenRequest,System.Threading.CancellationToken)">
            <summary>
            Gets a temporary access token to use with AssumeRoleWithWebIdentity. Access tokens
            are valid for one hour.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetAccessToken service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetAccessToken service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/GetAccessToken">REST API Reference for GetAccessToken Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.GetGrant(Amazon.LicenseManager.Model.GetGrantRequest)">
            <summary>
            Gets detailed information about the specified grant.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetGrant service method.</param>
            
            <returns>The response from the GetGrant service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceLimitExceededException">
            Your resource limits have been exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/GetGrant">REST API Reference for GetGrant Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.GetGrantAsync(Amazon.LicenseManager.Model.GetGrantRequest,System.Threading.CancellationToken)">
            <summary>
            Gets detailed information about the specified grant.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetGrant service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetGrant service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceLimitExceededException">
            Your resource limits have been exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/GetGrant">REST API Reference for GetGrant Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.GetLicense(Amazon.LicenseManager.Model.GetLicenseRequest)">
            <summary>
            Gets detailed information about the specified license.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetLicense service method.</param>
            
            <returns>The response from the GetLicense service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/GetLicense">REST API Reference for GetLicense Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.GetLicenseAsync(Amazon.LicenseManager.Model.GetLicenseRequest,System.Threading.CancellationToken)">
            <summary>
            Gets detailed information about the specified license.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetLicense service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetLicense service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/GetLicense">REST API Reference for GetLicense Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.GetLicenseConfiguration(Amazon.LicenseManager.Model.GetLicenseConfigurationRequest)">
            <summary>
            Gets detailed information about the specified license configuration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetLicenseConfiguration service method.</param>
            
            <returns>The response from the GetLicenseConfiguration service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/GetLicenseConfiguration">REST API Reference for GetLicenseConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.GetLicenseConfigurationAsync(Amazon.LicenseManager.Model.GetLicenseConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Gets detailed information about the specified license configuration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetLicenseConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetLicenseConfiguration service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/GetLicenseConfiguration">REST API Reference for GetLicenseConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.GetLicenseConversionTask(Amazon.LicenseManager.Model.GetLicenseConversionTaskRequest)">
            <summary>
            Gets information about the specified license type conversion task.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetLicenseConversionTask service method.</param>
            
            <returns>The response from the GetLicenseConversionTask service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/GetLicenseConversionTask">REST API Reference for GetLicenseConversionTask Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.GetLicenseConversionTaskAsync(Amazon.LicenseManager.Model.GetLicenseConversionTaskRequest,System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified license type conversion task.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetLicenseConversionTask service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetLicenseConversionTask service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/GetLicenseConversionTask">REST API Reference for GetLicenseConversionTask Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.GetLicenseManagerReportGenerator(Amazon.LicenseManager.Model.GetLicenseManagerReportGeneratorRequest)">
            <summary>
            Gets information about the specified report generator.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetLicenseManagerReportGenerator service method.</param>
            
            <returns>The response from the GetLicenseManagerReportGenerator service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceLimitExceededException">
            Your resource limits have been exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceNotFoundException">
            The resource cannot be found.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/GetLicenseManagerReportGenerator">REST API Reference for GetLicenseManagerReportGenerator Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.GetLicenseManagerReportGeneratorAsync(Amazon.LicenseManager.Model.GetLicenseManagerReportGeneratorRequest,System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified report generator.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetLicenseManagerReportGenerator service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetLicenseManagerReportGenerator service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceLimitExceededException">
            Your resource limits have been exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceNotFoundException">
            The resource cannot be found.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/GetLicenseManagerReportGenerator">REST API Reference for GetLicenseManagerReportGenerator Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.GetLicenseUsage(Amazon.LicenseManager.Model.GetLicenseUsageRequest)">
            <summary>
            Gets detailed information about the usage of the specified license.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetLicenseUsage service method.</param>
            
            <returns>The response from the GetLicenseUsage service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/GetLicenseUsage">REST API Reference for GetLicenseUsage Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.GetLicenseUsageAsync(Amazon.LicenseManager.Model.GetLicenseUsageRequest,System.Threading.CancellationToken)">
            <summary>
            Gets detailed information about the usage of the specified license.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetLicenseUsage service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetLicenseUsage service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/GetLicenseUsage">REST API Reference for GetLicenseUsage Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.GetServiceSettings(Amazon.LicenseManager.Model.GetServiceSettingsRequest)">
            <summary>
            Gets the License Manager settings for the current Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetServiceSettings service method.</param>
            
            <returns>The response from the GetServiceSettings service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/GetServiceSettings">REST API Reference for GetServiceSettings Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.GetServiceSettingsAsync(Amazon.LicenseManager.Model.GetServiceSettingsRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the License Manager settings for the current Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetServiceSettings service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetServiceSettings service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/GetServiceSettings">REST API Reference for GetServiceSettings Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.ListAssociationsForLicenseConfiguration(Amazon.LicenseManager.Model.ListAssociationsForLicenseConfigurationRequest)">
            <summary>
            Lists the resource associations for the specified license configuration.
            
             
            <para>
            Resource associations need not consume licenses from a license configuration. For
            example, an AMI or a stopped instance might not consume a license (depending on the
            license rules).
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListAssociationsForLicenseConfiguration service method.</param>
            
            <returns>The response from the ListAssociationsForLicenseConfiguration service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.FilterLimitExceededException">
            The request uses too many filters or too many filter values.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListAssociationsForLicenseConfiguration">REST API Reference for ListAssociationsForLicenseConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.ListAssociationsForLicenseConfigurationAsync(Amazon.LicenseManager.Model.ListAssociationsForLicenseConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the resource associations for the specified license configuration.
            
             
            <para>
            Resource associations need not consume licenses from a license configuration. For
            example, an AMI or a stopped instance might not consume a license (depending on the
            license rules).
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListAssociationsForLicenseConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListAssociationsForLicenseConfiguration service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.FilterLimitExceededException">
            The request uses too many filters or too many filter values.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListAssociationsForLicenseConfiguration">REST API Reference for ListAssociationsForLicenseConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.ListDistributedGrants(Amazon.LicenseManager.Model.ListDistributedGrantsRequest)">
            <summary>
            Lists the grants distributed for the specified license.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListDistributedGrants service method.</param>
            
            <returns>The response from the ListDistributedGrants service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceLimitExceededException">
            Your resource limits have been exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListDistributedGrants">REST API Reference for ListDistributedGrants Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.ListDistributedGrantsAsync(Amazon.LicenseManager.Model.ListDistributedGrantsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the grants distributed for the specified license.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListDistributedGrants service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListDistributedGrants service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceLimitExceededException">
            Your resource limits have been exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListDistributedGrants">REST API Reference for ListDistributedGrants Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.ListFailuresForLicenseConfigurationOperations(Amazon.LicenseManager.Model.ListFailuresForLicenseConfigurationOperationsRequest)">
            <summary>
            Lists the license configuration operations that failed.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListFailuresForLicenseConfigurationOperations service method.</param>
            
            <returns>The response from the ListFailuresForLicenseConfigurationOperations service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListFailuresForLicenseConfigurationOperations">REST API Reference for ListFailuresForLicenseConfigurationOperations Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.ListFailuresForLicenseConfigurationOperationsAsync(Amazon.LicenseManager.Model.ListFailuresForLicenseConfigurationOperationsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the license configuration operations that failed.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListFailuresForLicenseConfigurationOperations service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListFailuresForLicenseConfigurationOperations service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListFailuresForLicenseConfigurationOperations">REST API Reference for ListFailuresForLicenseConfigurationOperations Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.ListLicenseConfigurations(Amazon.LicenseManager.Model.ListLicenseConfigurationsRequest)">
            <summary>
            Lists the license configurations for your account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListLicenseConfigurations service method.</param>
            
            <returns>The response from the ListLicenseConfigurations service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.FilterLimitExceededException">
            The request uses too many filters or too many filter values.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListLicenseConfigurations">REST API Reference for ListLicenseConfigurations Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.ListLicenseConfigurationsAsync(Amazon.LicenseManager.Model.ListLicenseConfigurationsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the license configurations for your account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListLicenseConfigurations service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListLicenseConfigurations service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.FilterLimitExceededException">
            The request uses too many filters or too many filter values.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListLicenseConfigurations">REST API Reference for ListLicenseConfigurations Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.ListLicenseConversionTasks(Amazon.LicenseManager.Model.ListLicenseConversionTasksRequest)">
            <summary>
            Lists the license type conversion tasks for your account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListLicenseConversionTasks service method.</param>
            
            <returns>The response from the ListLicenseConversionTasks service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListLicenseConversionTasks">REST API Reference for ListLicenseConversionTasks Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.ListLicenseConversionTasksAsync(Amazon.LicenseManager.Model.ListLicenseConversionTasksRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the license type conversion tasks for your account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListLicenseConversionTasks service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListLicenseConversionTasks service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListLicenseConversionTasks">REST API Reference for ListLicenseConversionTasks Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.ListLicenseManagerReportGenerators(Amazon.LicenseManager.Model.ListLicenseManagerReportGeneratorsRequest)">
            <summary>
            Lists the report generators for your account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListLicenseManagerReportGenerators service method.</param>
            
            <returns>The response from the ListLicenseManagerReportGenerators service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceLimitExceededException">
            Your resource limits have been exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceNotFoundException">
            The resource cannot be found.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListLicenseManagerReportGenerators">REST API Reference for ListLicenseManagerReportGenerators Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.ListLicenseManagerReportGeneratorsAsync(Amazon.LicenseManager.Model.ListLicenseManagerReportGeneratorsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the report generators for your account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListLicenseManagerReportGenerators service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListLicenseManagerReportGenerators service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceLimitExceededException">
            Your resource limits have been exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceNotFoundException">
            The resource cannot be found.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListLicenseManagerReportGenerators">REST API Reference for ListLicenseManagerReportGenerators Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.ListLicenses(Amazon.LicenseManager.Model.ListLicensesRequest)">
            <summary>
            Lists the licenses for your account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListLicenses service method.</param>
            
            <returns>The response from the ListLicenses service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListLicenses">REST API Reference for ListLicenses Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.ListLicensesAsync(Amazon.LicenseManager.Model.ListLicensesRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the licenses for your account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListLicenses service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListLicenses service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListLicenses">REST API Reference for ListLicenses Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.ListLicenseSpecificationsForResource(Amazon.LicenseManager.Model.ListLicenseSpecificationsForResourceRequest)">
            <summary>
            Describes the license configurations for the specified resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListLicenseSpecificationsForResource service method.</param>
            
            <returns>The response from the ListLicenseSpecificationsForResource service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListLicenseSpecificationsForResource">REST API Reference for ListLicenseSpecificationsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.ListLicenseSpecificationsForResourceAsync(Amazon.LicenseManager.Model.ListLicenseSpecificationsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Describes the license configurations for the specified resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListLicenseSpecificationsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListLicenseSpecificationsForResource service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListLicenseSpecificationsForResource">REST API Reference for ListLicenseSpecificationsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.ListLicenseVersions(Amazon.LicenseManager.Model.ListLicenseVersionsRequest)">
            <summary>
            Lists all versions of the specified license.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListLicenseVersions service method.</param>
            
            <returns>The response from the ListLicenseVersions service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListLicenseVersions">REST API Reference for ListLicenseVersions Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.ListLicenseVersionsAsync(Amazon.LicenseManager.Model.ListLicenseVersionsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all versions of the specified license.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListLicenseVersions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListLicenseVersions service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListLicenseVersions">REST API Reference for ListLicenseVersions Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.ListReceivedGrants(Amazon.LicenseManager.Model.ListReceivedGrantsRequest)">
            <summary>
            Lists grants that are received but not accepted.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListReceivedGrants service method.</param>
            
            <returns>The response from the ListReceivedGrants service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceLimitExceededException">
            Your resource limits have been exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListReceivedGrants">REST API Reference for ListReceivedGrants Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.ListReceivedGrantsAsync(Amazon.LicenseManager.Model.ListReceivedGrantsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists grants that are received but not accepted.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListReceivedGrants service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListReceivedGrants service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceLimitExceededException">
            Your resource limits have been exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListReceivedGrants">REST API Reference for ListReceivedGrants Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.ListReceivedLicenses(Amazon.LicenseManager.Model.ListReceivedLicensesRequest)">
            <summary>
            Lists received licenses.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListReceivedLicenses service method.</param>
            
            <returns>The response from the ListReceivedLicenses service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceLimitExceededException">
            Your resource limits have been exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListReceivedLicenses">REST API Reference for ListReceivedLicenses Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.ListReceivedLicensesAsync(Amazon.LicenseManager.Model.ListReceivedLicensesRequest,System.Threading.CancellationToken)">
            <summary>
            Lists received licenses.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListReceivedLicenses service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListReceivedLicenses service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceLimitExceededException">
            Your resource limits have been exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListReceivedLicenses">REST API Reference for ListReceivedLicenses Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.ListResourceInventory(Amazon.LicenseManager.Model.ListResourceInventoryRequest)">
            <summary>
            Lists resources managed using Systems Manager inventory.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListResourceInventory service method.</param>
            
            <returns>The response from the ListResourceInventory service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.FailedDependencyException">
            A dependency required to run the API is missing.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.FilterLimitExceededException">
            The request uses too many filters or too many filter values.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListResourceInventory">REST API Reference for ListResourceInventory Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.ListResourceInventoryAsync(Amazon.LicenseManager.Model.ListResourceInventoryRequest,System.Threading.CancellationToken)">
            <summary>
            Lists resources managed using Systems Manager inventory.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListResourceInventory service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListResourceInventory service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.FailedDependencyException">
            A dependency required to run the API is missing.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.FilterLimitExceededException">
            The request uses too many filters or too many filter values.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListResourceInventory">REST API Reference for ListResourceInventory Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.ListTagsForResource(Amazon.LicenseManager.Model.ListTagsForResourceRequest)">
            <summary>
            Lists the tags for the specified license configuration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            
            <returns>The response from the ListTagsForResource service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.ListTagsForResourceAsync(Amazon.LicenseManager.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the tags for the specified license configuration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.ListTokens(Amazon.LicenseManager.Model.ListTokensRequest)">
            <summary>
            Lists your tokens.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTokens service method.</param>
            
            <returns>The response from the ListTokens service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListTokens">REST API Reference for ListTokens Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.ListTokensAsync(Amazon.LicenseManager.Model.ListTokensRequest,System.Threading.CancellationToken)">
            <summary>
            Lists your tokens.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTokens service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTokens service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListTokens">REST API Reference for ListTokens Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.ListUsageForLicenseConfiguration(Amazon.LicenseManager.Model.ListUsageForLicenseConfigurationRequest)">
            <summary>
            Lists all license usage records for a license configuration, displaying license consumption
            details by resource at a selected point in time. Use this action to audit the current
            license consumption for any license inventory and configuration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListUsageForLicenseConfiguration service method.</param>
            
            <returns>The response from the ListUsageForLicenseConfiguration service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.FilterLimitExceededException">
            The request uses too many filters or too many filter values.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListUsageForLicenseConfiguration">REST API Reference for ListUsageForLicenseConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.ListUsageForLicenseConfigurationAsync(Amazon.LicenseManager.Model.ListUsageForLicenseConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all license usage records for a license configuration, displaying license consumption
            details by resource at a selected point in time. Use this action to audit the current
            license consumption for any license inventory and configuration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListUsageForLicenseConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListUsageForLicenseConfiguration service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.FilterLimitExceededException">
            The request uses too many filters or too many filter values.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListUsageForLicenseConfiguration">REST API Reference for ListUsageForLicenseConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.RejectGrant(Amazon.LicenseManager.Model.RejectGrantRequest)">
            <summary>
            Rejects the specified grant.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RejectGrant service method.</param>
            
            <returns>The response from the RejectGrant service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceLimitExceededException">
            Your resource limits have been exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/RejectGrant">REST API Reference for RejectGrant Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.RejectGrantAsync(Amazon.LicenseManager.Model.RejectGrantRequest,System.Threading.CancellationToken)">
            <summary>
            Rejects the specified grant.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RejectGrant service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RejectGrant service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceLimitExceededException">
            Your resource limits have been exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/RejectGrant">REST API Reference for RejectGrant Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.TagResource(Amazon.LicenseManager.Model.TagResourceRequest)">
            <summary>
            Adds the specified tags to the specified license configuration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            
            <returns>The response from the TagResource service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.TagResourceAsync(Amazon.LicenseManager.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Adds the specified tags to the specified license configuration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.UntagResource(Amazon.LicenseManager.Model.UntagResourceRequest)">
            <summary>
            Removes the specified tags from the specified license configuration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            
            <returns>The response from the UntagResource service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.UntagResourceAsync(Amazon.LicenseManager.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Removes the specified tags from the specified license configuration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.UpdateLicenseConfiguration(Amazon.LicenseManager.Model.UpdateLicenseConfigurationRequest)">
            <summary>
            Modifies the attributes of an existing license configuration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateLicenseConfiguration service method.</param>
            
            <returns>The response from the UpdateLicenseConfiguration service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceLimitExceededException">
            Your resource limits have been exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/UpdateLicenseConfiguration">REST API Reference for UpdateLicenseConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.UpdateLicenseConfigurationAsync(Amazon.LicenseManager.Model.UpdateLicenseConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies the attributes of an existing license configuration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateLicenseConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateLicenseConfiguration service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceLimitExceededException">
            Your resource limits have been exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/UpdateLicenseConfiguration">REST API Reference for UpdateLicenseConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.UpdateLicenseManagerReportGenerator(Amazon.LicenseManager.Model.UpdateLicenseManagerReportGeneratorRequest)">
            <summary>
            Updates a report generator.
            
             
            <para>
            After you make changes to a report generator, it starts generating new reports within
            60 minutes of being updated.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateLicenseManagerReportGenerator service method.</param>
            
            <returns>The response from the UpdateLicenseManagerReportGenerator service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceLimitExceededException">
            Your resource limits have been exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceNotFoundException">
            The resource cannot be found.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/UpdateLicenseManagerReportGenerator">REST API Reference for UpdateLicenseManagerReportGenerator Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.UpdateLicenseManagerReportGeneratorAsync(Amazon.LicenseManager.Model.UpdateLicenseManagerReportGeneratorRequest,System.Threading.CancellationToken)">
            <summary>
            Updates a report generator.
            
             
            <para>
            After you make changes to a report generator, it starts generating new reports within
            60 minutes of being updated.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateLicenseManagerReportGenerator service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateLicenseManagerReportGenerator service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceLimitExceededException">
            Your resource limits have been exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceNotFoundException">
            The resource cannot be found.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ValidationException">
            The provided input is not valid. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/UpdateLicenseManagerReportGenerator">REST API Reference for UpdateLicenseManagerReportGenerator Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.UpdateLicenseSpecificationsForResource(Amazon.LicenseManager.Model.UpdateLicenseSpecificationsForResourceRequest)">
            <summary>
            Adds or removes the specified license configurations for the specified Amazon Web
            Services resource.
            
             
            <para>
            You can update the license specifications of AMIs, instances, and hosts. You cannot
            update the license specifications for launch templates and CloudFormation templates,
            as they send license configurations to the operation that creates the resource.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateLicenseSpecificationsForResource service method.</param>
            
            <returns>The response from the UpdateLicenseSpecificationsForResource service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidResourceStateException">
            License Manager cannot allocate a license to a resource because of its state. 
            
             
            <para>
            For example, you cannot allocate a license to an instance in the process of shutting
            down.
            </para>
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.LicenseUsageException">
            You do not have enough licenses available to support a new resource launch.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/UpdateLicenseSpecificationsForResource">REST API Reference for UpdateLicenseSpecificationsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.UpdateLicenseSpecificationsForResourceAsync(Amazon.LicenseManager.Model.UpdateLicenseSpecificationsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Adds or removes the specified license configurations for the specified Amazon Web
            Services resource.
            
             
            <para>
            You can update the license specifications of AMIs, instances, and hosts. You cannot
            update the license specifications for launch templates and CloudFormation templates,
            as they send license configurations to the operation that creates the resource.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateLicenseSpecificationsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateLicenseSpecificationsForResource service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidResourceStateException">
            License Manager cannot allocate a license to a resource because of its state. 
            
             
            <para>
            For example, you cannot allocate a license to an instance in the process of shutting
            down.
            </para>
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.LicenseUsageException">
            You do not have enough licenses available to support a new resource launch.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/UpdateLicenseSpecificationsForResource">REST API Reference for UpdateLicenseSpecificationsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.UpdateServiceSettings(Amazon.LicenseManager.Model.UpdateServiceSettingsRequest)">
            <summary>
            Updates License Manager settings for the current Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateServiceSettings service method.</param>
            
            <returns>The response from the UpdateServiceSettings service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/UpdateServiceSettings">REST API Reference for UpdateServiceSettings Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.UpdateServiceSettingsAsync(Amazon.LicenseManager.Model.UpdateServiceSettingsRequest,System.Threading.CancellationToken)">
            <summary>
            Updates License Manager settings for the current Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateServiceSettings service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateServiceSettings service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The Amazon Web Services user account does not have permission to perform the action.
            Check the IAM policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/UpdateServiceSettings">REST API Reference for UpdateServiceSettings Operation</seealso>
        </member>
    </members>
</doc>
