<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.Signer</name>
    </assembly>
    <members>
        <member name="T:Amazon.Signer.AmazonSignerConfig">
            <summary>
            Configuration for accessing Amazon Signer service
            </summary>
        </member>
        <member name="M:Amazon.Signer.AmazonSignerConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.Signer.AmazonSignerConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.Signer.AmazonSignerConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.Signer.AmazonSignerConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.Signer.AmazonSignerException">
            <summary>
             Common exception for the Signer service.
             </summary>
        </member>
        <member name="M:Amazon.Signer.AmazonSignerException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonSignerException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.Signer.AmazonSignerException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonSignerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Signer.AmazonSignerException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonSignerException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Signer.AmazonSignerException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonSignerException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Signer.AmazonSignerException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonSignerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Signer.AmazonSignerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the AmazonSignerException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.Signer.Internal.AmazonSignerMetadata">
            <summary>
            Service metadata for  Amazon Signer service
            </summary>
        </member>
        <member name="P:Amazon.Signer.Internal.AmazonSignerMetadata.ServiceId">
            <summary>
            Gets the value of the Service Id.
            </summary>
        </member>
        <member name="P:Amazon.Signer.Internal.AmazonSignerMetadata.OperationNameMapping">
            <summary>
            Gets the dictionary that gives mapping of renamed operations
            </summary>
        </member>
        <member name="T:Amazon.Signer.Model.AccessDeniedException">
            <summary>
            You do not have sufficient access to perform this action.
            </summary>
        </member>
        <member name="M:Amazon.Signer.Model.AccessDeniedException.#ctor(System.String)">
            <summary>
            Constructs a new AccessDeniedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Signer.Model.AccessDeniedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Signer.Model.AccessDeniedException.#ctor(System.Exception)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Signer.Model.AccessDeniedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Signer.Model.AccessDeniedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Signer.Model.AccessDeniedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the AccessDeniedException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Signer.Model.AccessDeniedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="P:Amazon.Signer.Model.AccessDeniedException.Code">
            <summary>
            Gets and sets the property Code.
            </summary>
        </member>
        <member name="T:Amazon.Signer.Model.AddProfilePermissionRequest">
            <summary>
            Container for the parameters to the AddProfilePermission operation.
            Adds cross-account permissions to a signing profile.
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.AddProfilePermissionRequest.Action">
            <summary>
            Gets and sets the property Action. 
            <para>
            The AWS Signer action permitted as part of cross-account permissions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.AddProfilePermissionRequest.Principal">
            <summary>
            Gets and sets the property Principal. 
            <para>
            The AWS principal receiving cross-account permissions. This may be an IAM role or
            another AWS account ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.AddProfilePermissionRequest.ProfileName">
            <summary>
            Gets and sets the property ProfileName. 
            <para>
            The human-readable name of the signing profile.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.AddProfilePermissionRequest.ProfileVersion">
            <summary>
            Gets and sets the property ProfileVersion. 
            <para>
            The version of the signing profile.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.AddProfilePermissionRequest.RevisionId">
            <summary>
            Gets and sets the property RevisionId. 
            <para>
            A unique identifier for the current profile revision.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.AddProfilePermissionRequest.StatementId">
            <summary>
            Gets and sets the property StatementId. 
            <para>
            A unique identifier for the cross-account permission statement.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Signer.Model.AddProfilePermissionResponse">
            <summary>
            This is the response object from the AddProfilePermission operation.
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.AddProfilePermissionResponse.RevisionId">
            <summary>
            Gets and sets the property RevisionId. 
            <para>
            A unique identifier for the current profile revision.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Signer.Model.BadRequestException">
            <summary>
            The request contains invalid parameters for the ARN or tags. This exception also occurs
            when you call a tagging API on a cancelled signing profile.
            </summary>
        </member>
        <member name="M:Amazon.Signer.Model.BadRequestException.#ctor(System.String)">
            <summary>
            Constructs a new BadRequestException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Signer.Model.BadRequestException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of BadRequestException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Signer.Model.BadRequestException.#ctor(System.Exception)">
            <summary>
            Construct instance of BadRequestException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Signer.Model.BadRequestException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of BadRequestException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Signer.Model.BadRequestException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of BadRequestException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Signer.Model.BadRequestException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the BadRequestException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Signer.Model.BadRequestException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="P:Amazon.Signer.Model.BadRequestException.Code">
            <summary>
            Gets and sets the property Code.
            </summary>
        </member>
        <member name="T:Amazon.Signer.Model.CancelSigningProfileRequest">
            <summary>
            Container for the parameters to the CancelSigningProfile operation.
            Changes the state of an <code>ACTIVE</code> signing profile to <code>CANCELED</code>.
            A canceled profile is still viewable with the <code>ListSigningProfiles</code> operation,
            but it cannot perform new signing jobs, and is deleted two years after cancelation.
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.CancelSigningProfileRequest.ProfileName">
            <summary>
            Gets and sets the property ProfileName. 
            <para>
            The name of the signing profile to be canceled.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Signer.Model.CancelSigningProfileResponse">
            <summary>
            This is the response object from the CancelSigningProfile operation.
            </summary>
        </member>
        <member name="T:Amazon.Signer.Model.ConflictException">
            <summary>
            The resource encountered a conflicting state.
            </summary>
        </member>
        <member name="M:Amazon.Signer.Model.ConflictException.#ctor(System.String)">
            <summary>
            Constructs a new ConflictException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Signer.Model.ConflictException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Signer.Model.ConflictException.#ctor(System.Exception)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Signer.Model.ConflictException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Signer.Model.ConflictException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Signer.Model.ConflictException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ConflictException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Signer.Model.ConflictException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="P:Amazon.Signer.Model.ConflictException.Code">
            <summary>
            Gets and sets the property Code.
            </summary>
        </member>
        <member name="T:Amazon.Signer.Model.DescribeSigningJobRequest">
            <summary>
            Container for the parameters to the DescribeSigningJob operation.
            Returns information about a specific code signing job. You specify the job by using
            the <code>jobId</code> value that is returned by the <a>StartSigningJob</a> operation.
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.DescribeSigningJobRequest.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            The ID of the signing job on input.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Signer.Model.DescribeSigningJobResponse">
            <summary>
            This is the response object from the DescribeSigningJob operation.
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.DescribeSigningJobResponse.CompletedAt">
            <summary>
            Gets and sets the property CompletedAt. 
            <para>
            Date and time that the signing job was completed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.DescribeSigningJobResponse.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            Date and time that the signing job was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.DescribeSigningJobResponse.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            The ID of the signing job on output.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.DescribeSigningJobResponse.JobInvoker">
            <summary>
            Gets and sets the property JobInvoker. 
            <para>
            The IAM entity that initiated the signing job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.DescribeSigningJobResponse.JobOwner">
            <summary>
            Gets and sets the property JobOwner. 
            <para>
            The AWS account ID of the job owner.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.DescribeSigningJobResponse.Overrides">
            <summary>
            Gets and sets the property Overrides. 
            <para>
            A list of any overrides that were applied to the signing operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.DescribeSigningJobResponse.PlatformDisplayName">
            <summary>
            Gets and sets the property PlatformDisplayName. 
            <para>
            A human-readable name for the signing platform associated with the signing job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.DescribeSigningJobResponse.PlatformId">
            <summary>
            Gets and sets the property PlatformId. 
            <para>
            The microcontroller platform to which your signed code image will be distributed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.DescribeSigningJobResponse.ProfileName">
            <summary>
            Gets and sets the property ProfileName. 
            <para>
            The name of the profile that initiated the signing operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.DescribeSigningJobResponse.ProfileVersion">
            <summary>
            Gets and sets the property ProfileVersion. 
            <para>
            The version of the signing profile used to initiate the signing job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.DescribeSigningJobResponse.RequestedBy">
            <summary>
            Gets and sets the property RequestedBy. 
            <para>
            The IAM principal that requested the signing job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.DescribeSigningJobResponse.RevocationRecord">
            <summary>
            Gets and sets the property RevocationRecord. 
            <para>
            A revocation record if the signature generated by the signing job has been revoked.
            Contains a timestamp and the ID of the IAM entity that revoked the signature.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.DescribeSigningJobResponse.SignatureExpiresAt">
            <summary>
            Gets and sets the property SignatureExpiresAt. 
            <para>
            Thr expiration timestamp for the signature generated by the signing job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.DescribeSigningJobResponse.SignedObject">
            <summary>
            Gets and sets the property SignedObject. 
            <para>
            Name of the S3 bucket where the signed code image is saved by code signing.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.DescribeSigningJobResponse.SigningMaterial">
            <summary>
            Gets and sets the property SigningMaterial. 
            <para>
            The Amazon Resource Name (ARN) of your code signing certificate.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.DescribeSigningJobResponse.SigningParameters">
            <summary>
            Gets and sets the property SigningParameters. 
            <para>
            Map of user-assigned key-value pairs used during signing. These values contain any
            information that you specified for use in your signing job. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.DescribeSigningJobResponse.Source">
            <summary>
            Gets and sets the property Source. 
            <para>
            The object that contains the name of your S3 bucket or your raw code.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.DescribeSigningJobResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Status of the signing job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.DescribeSigningJobResponse.StatusReason">
            <summary>
            Gets and sets the property StatusReason. 
            <para>
            String value that contains the status reason.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Signer.Model.Destination">
            <summary>
            Points to an <code>S3Destination</code> object that contains information about your
            S3 bucket.
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.Destination.S3">
            <summary>
            Gets and sets the property S3. 
            <para>
            The <code>S3Destination</code> object.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Signer.Model.EncryptionAlgorithmOptions">
            <summary>
            The encryption algorithm options that are available to a code signing job.
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.EncryptionAlgorithmOptions.AllowedValues">
            <summary>
            Gets and sets the property AllowedValues. 
            <para>
            The set of accepted encryption algorithms that are allowed in a code signing job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.EncryptionAlgorithmOptions.DefaultValue">
            <summary>
            Gets and sets the property DefaultValue. 
            <para>
            The default encryption algorithm that is used by a code signing job.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Signer.Model.GetSigningPlatformRequest">
            <summary>
            Container for the parameters to the GetSigningPlatform operation.
            Returns information on a specific signing platform.
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.GetSigningPlatformRequest.PlatformId">
            <summary>
            Gets and sets the property PlatformId. 
            <para>
            The ID of the target signing platform.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Signer.Model.GetSigningPlatformResponse">
            <summary>
            This is the response object from the GetSigningPlatform operation.
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.GetSigningPlatformResponse.Category">
            <summary>
            Gets and sets the property Category. 
            <para>
            The category type of the target signing platform.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.GetSigningPlatformResponse.DisplayName">
            <summary>
            Gets and sets the property DisplayName. 
            <para>
            The display name of the target signing platform.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.GetSigningPlatformResponse.MaxSizeInMB">
            <summary>
            Gets and sets the property MaxSizeInMB. 
            <para>
            The maximum size (in MB) of the payload that can be signed by the target platform.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.GetSigningPlatformResponse.Partner">
            <summary>
            Gets and sets the property Partner. 
            <para>
            A list of partner entities that use the target signing platform.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.GetSigningPlatformResponse.PlatformId">
            <summary>
            Gets and sets the property PlatformId. 
            <para>
            The ID of the target signing platform.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.GetSigningPlatformResponse.RevocationSupported">
            <summary>
            Gets and sets the property RevocationSupported. 
            <para>
            A flag indicating whether signatures generated for the signing platform can be revoked.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.GetSigningPlatformResponse.SigningConfiguration">
            <summary>
            Gets and sets the property SigningConfiguration. 
            <para>
            A list of configurations applied to the target platform at signing.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.GetSigningPlatformResponse.SigningImageFormat">
            <summary>
            Gets and sets the property SigningImageFormat. 
            <para>
            The format of the target platform's signing image.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.GetSigningPlatformResponse.Target">
            <summary>
            Gets and sets the property Target. 
            <para>
            The validation template that is used by the target signing platform.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Signer.Model.GetSigningProfileRequest">
            <summary>
            Container for the parameters to the GetSigningProfile operation.
            Returns information on a specific signing profile.
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.GetSigningProfileRequest.ProfileName">
            <summary>
            Gets and sets the property ProfileName. 
            <para>
            The name of the target signing profile.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.GetSigningProfileRequest.ProfileOwner">
            <summary>
            Gets and sets the property ProfileOwner. 
            <para>
            The AWS account ID of the profile owner.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Signer.Model.GetSigningProfileResponse">
            <summary>
            This is the response object from the GetSigningProfile operation.
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.GetSigningProfileResponse.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The Amazon Resource Name (ARN) for the signing profile.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.GetSigningProfileResponse.Overrides">
            <summary>
            Gets and sets the property Overrides. 
            <para>
            A list of overrides applied by the target signing profile for signing operations.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.GetSigningProfileResponse.PlatformDisplayName">
            <summary>
            Gets and sets the property PlatformDisplayName. 
            <para>
            A human-readable name for the signing platform associated with the signing profile.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.GetSigningProfileResponse.PlatformId">
            <summary>
            Gets and sets the property PlatformId. 
            <para>
            The ID of the platform that is used by the target signing profile.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.GetSigningProfileResponse.ProfileName">
            <summary>
            Gets and sets the property ProfileName. 
            <para>
            The name of the target signing profile.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.GetSigningProfileResponse.ProfileVersion">
            <summary>
            Gets and sets the property ProfileVersion. 
            <para>
            The current version of the signing profile.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.GetSigningProfileResponse.ProfileVersionArn">
            <summary>
            Gets and sets the property ProfileVersionArn. 
            <para>
            The signing profile ARN, including the profile version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.GetSigningProfileResponse.RevocationRecord">
            <summary>
            Gets and sets the property RevocationRecord.
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.GetSigningProfileResponse.SignatureValidityPeriod">
            <summary>
            Gets and sets the property SignatureValidityPeriod.
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.GetSigningProfileResponse.SigningMaterial">
            <summary>
            Gets and sets the property SigningMaterial. 
            <para>
            The ARN of the certificate that the target profile uses for signing operations.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.GetSigningProfileResponse.SigningParameters">
            <summary>
            Gets and sets the property SigningParameters. 
            <para>
            A map of key-value pairs for signing operations that is attached to the target signing
            profile.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.GetSigningProfileResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the target signing profile.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.GetSigningProfileResponse.StatusReason">
            <summary>
            Gets and sets the property StatusReason. 
            <para>
            Reason for the status of the target signing profile.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.GetSigningProfileResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            A list of tags associated with the signing profile.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Signer.Model.HashAlgorithmOptions">
            <summary>
            The hash algorithms that are available to a code signing job.
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.HashAlgorithmOptions.AllowedValues">
            <summary>
            Gets and sets the property AllowedValues. 
            <para>
            The set of accepted hash algorithms allowed in a code signing job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.HashAlgorithmOptions.DefaultValue">
            <summary>
            Gets and sets the property DefaultValue. 
            <para>
            The default hash algorithm that is used in a code signing job.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Signer.Model.InternalServiceErrorException">
            <summary>
            An internal error occurred.
            </summary>
        </member>
        <member name="M:Amazon.Signer.Model.InternalServiceErrorException.#ctor(System.String)">
            <summary>
            Constructs a new InternalServiceErrorException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Signer.Model.InternalServiceErrorException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InternalServiceErrorException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Signer.Model.InternalServiceErrorException.#ctor(System.Exception)">
            <summary>
            Construct instance of InternalServiceErrorException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Signer.Model.InternalServiceErrorException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServiceErrorException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Signer.Model.InternalServiceErrorException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServiceErrorException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Signer.Model.InternalServiceErrorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InternalServiceErrorException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Signer.Model.InternalServiceErrorException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="P:Amazon.Signer.Model.InternalServiceErrorException.Code">
            <summary>
            Gets and sets the property Code.
            </summary>
        </member>
        <member name="T:Amazon.Signer.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for AccessDeniedException Object
            </summary>  
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Signer.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Signer.Model.Internal.MarshallTransformations.AddProfilePermissionRequestMarshaller">
            <summary>
            AddProfilePermission Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.AddProfilePermissionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.AddProfilePermissionRequestMarshaller.Marshall(Amazon.Signer.Model.AddProfilePermissionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Signer.Model.Internal.MarshallTransformations.AddProfilePermissionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Signer.Model.Internal.MarshallTransformations.AddProfilePermissionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AddProfilePermission operation
            </summary>  
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.AddProfilePermissionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.AddProfilePermissionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Signer.Model.Internal.MarshallTransformations.AddProfilePermissionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Signer.Model.Internal.MarshallTransformations.BadRequestExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for BadRequestException Object
            </summary>  
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.BadRequestExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.BadRequestExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Signer.Model.Internal.MarshallTransformations.BadRequestExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Signer.Model.Internal.MarshallTransformations.CancelSigningProfileRequestMarshaller">
            <summary>
            CancelSigningProfile Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.CancelSigningProfileRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.CancelSigningProfileRequestMarshaller.Marshall(Amazon.Signer.Model.CancelSigningProfileRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Signer.Model.Internal.MarshallTransformations.CancelSigningProfileRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Signer.Model.Internal.MarshallTransformations.CancelSigningProfileResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CancelSigningProfile operation
            </summary>  
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.CancelSigningProfileResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.CancelSigningProfileResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Signer.Model.Internal.MarshallTransformations.CancelSigningProfileResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Signer.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ConflictException Object
            </summary>  
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Signer.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Signer.Model.Internal.MarshallTransformations.DescribeSigningJobRequestMarshaller">
            <summary>
            DescribeSigningJob Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.DescribeSigningJobRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.DescribeSigningJobRequestMarshaller.Marshall(Amazon.Signer.Model.DescribeSigningJobRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Signer.Model.Internal.MarshallTransformations.DescribeSigningJobRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Signer.Model.Internal.MarshallTransformations.DescribeSigningJobResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeSigningJob operation
            </summary>  
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.DescribeSigningJobResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.DescribeSigningJobResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Signer.Model.Internal.MarshallTransformations.DescribeSigningJobResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Signer.Model.Internal.MarshallTransformations.DestinationMarshaller">
            <summary>
            Destination Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.DestinationMarshaller.Marshall(Amazon.Signer.Model.Destination,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Signer.Model.Internal.MarshallTransformations.DestinationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.Signer.Model.Internal.MarshallTransformations.EncryptionAlgorithmOptionsUnmarshaller">
            <summary>
            Response Unmarshaller for EncryptionAlgorithmOptions Object
            </summary>  
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.EncryptionAlgorithmOptionsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Signer#Model#EncryptionAlgorithmOptions,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.EncryptionAlgorithmOptionsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Signer.Model.Internal.MarshallTransformations.EncryptionAlgorithmOptionsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Signer.Model.Internal.MarshallTransformations.GetSigningPlatformRequestMarshaller">
            <summary>
            GetSigningPlatform Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.GetSigningPlatformRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.GetSigningPlatformRequestMarshaller.Marshall(Amazon.Signer.Model.GetSigningPlatformRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Signer.Model.Internal.MarshallTransformations.GetSigningPlatformRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Signer.Model.Internal.MarshallTransformations.GetSigningPlatformResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetSigningPlatform operation
            </summary>  
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.GetSigningPlatformResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.GetSigningPlatformResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Signer.Model.Internal.MarshallTransformations.GetSigningPlatformResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Signer.Model.Internal.MarshallTransformations.GetSigningProfileRequestMarshaller">
            <summary>
            GetSigningProfile Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.GetSigningProfileRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.GetSigningProfileRequestMarshaller.Marshall(Amazon.Signer.Model.GetSigningProfileRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Signer.Model.Internal.MarshallTransformations.GetSigningProfileRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Signer.Model.Internal.MarshallTransformations.GetSigningProfileResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetSigningProfile operation
            </summary>  
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.GetSigningProfileResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.GetSigningProfileResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Signer.Model.Internal.MarshallTransformations.GetSigningProfileResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Signer.Model.Internal.MarshallTransformations.HashAlgorithmOptionsUnmarshaller">
            <summary>
            Response Unmarshaller for HashAlgorithmOptions Object
            </summary>  
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.HashAlgorithmOptionsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Signer#Model#HashAlgorithmOptions,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.HashAlgorithmOptionsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Signer.Model.Internal.MarshallTransformations.HashAlgorithmOptionsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Signer.Model.Internal.MarshallTransformations.InternalServiceErrorExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InternalServiceErrorException Object
            </summary>  
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.InternalServiceErrorExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.InternalServiceErrorExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Signer.Model.Internal.MarshallTransformations.InternalServiceErrorExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Signer.Model.Internal.MarshallTransformations.ListProfilePermissionsRequestMarshaller">
            <summary>
            ListProfilePermissions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.ListProfilePermissionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.ListProfilePermissionsRequestMarshaller.Marshall(Amazon.Signer.Model.ListProfilePermissionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Signer.Model.Internal.MarshallTransformations.ListProfilePermissionsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Signer.Model.Internal.MarshallTransformations.ListProfilePermissionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListProfilePermissions operation
            </summary>  
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.ListProfilePermissionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.ListProfilePermissionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Signer.Model.Internal.MarshallTransformations.ListProfilePermissionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Signer.Model.Internal.MarshallTransformations.ListSigningJobsRequestMarshaller">
            <summary>
            ListSigningJobs Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.ListSigningJobsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.ListSigningJobsRequestMarshaller.Marshall(Amazon.Signer.Model.ListSigningJobsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Signer.Model.Internal.MarshallTransformations.ListSigningJobsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Signer.Model.Internal.MarshallTransformations.ListSigningJobsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListSigningJobs operation
            </summary>  
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.ListSigningJobsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.ListSigningJobsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Signer.Model.Internal.MarshallTransformations.ListSigningJobsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Signer.Model.Internal.MarshallTransformations.ListSigningPlatformsRequestMarshaller">
            <summary>
            ListSigningPlatforms Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.ListSigningPlatformsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.ListSigningPlatformsRequestMarshaller.Marshall(Amazon.Signer.Model.ListSigningPlatformsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Signer.Model.Internal.MarshallTransformations.ListSigningPlatformsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Signer.Model.Internal.MarshallTransformations.ListSigningPlatformsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListSigningPlatforms operation
            </summary>  
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.ListSigningPlatformsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.ListSigningPlatformsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Signer.Model.Internal.MarshallTransformations.ListSigningPlatformsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Signer.Model.Internal.MarshallTransformations.ListSigningProfilesRequestMarshaller">
            <summary>
            ListSigningProfiles Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.ListSigningProfilesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.ListSigningProfilesRequestMarshaller.Marshall(Amazon.Signer.Model.ListSigningProfilesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Signer.Model.Internal.MarshallTransformations.ListSigningProfilesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Signer.Model.Internal.MarshallTransformations.ListSigningProfilesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListSigningProfiles operation
            </summary>  
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.ListSigningProfilesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.ListSigningProfilesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Signer.Model.Internal.MarshallTransformations.ListSigningProfilesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Signer.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller">
            <summary>
            ListTagsForResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.Signer.Model.ListTagsForResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Signer.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Signer.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListTagsForResource operation
            </summary>  
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Signer.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Signer.Model.Internal.MarshallTransformations.NotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for NotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.NotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.NotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Signer.Model.Internal.MarshallTransformations.NotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Signer.Model.Internal.MarshallTransformations.PermissionUnmarshaller">
            <summary>
            Response Unmarshaller for Permission Object
            </summary>  
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.PermissionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Signer#Model#Permission,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.PermissionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Signer.Model.Internal.MarshallTransformations.PermissionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Signer.Model.Internal.MarshallTransformations.PutSigningProfileRequestMarshaller">
            <summary>
            PutSigningProfile Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.PutSigningProfileRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.PutSigningProfileRequestMarshaller.Marshall(Amazon.Signer.Model.PutSigningProfileRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Signer.Model.Internal.MarshallTransformations.PutSigningProfileRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Signer.Model.Internal.MarshallTransformations.PutSigningProfileResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutSigningProfile operation
            </summary>  
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.PutSigningProfileResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.PutSigningProfileResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Signer.Model.Internal.MarshallTransformations.PutSigningProfileResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Signer.Model.Internal.MarshallTransformations.RemoveProfilePermissionRequestMarshaller">
            <summary>
            RemoveProfilePermission Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.RemoveProfilePermissionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.RemoveProfilePermissionRequestMarshaller.Marshall(Amazon.Signer.Model.RemoveProfilePermissionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Signer.Model.Internal.MarshallTransformations.RemoveProfilePermissionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Signer.Model.Internal.MarshallTransformations.RemoveProfilePermissionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RemoveProfilePermission operation
            </summary>  
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.RemoveProfilePermissionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.RemoveProfilePermissionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Signer.Model.Internal.MarshallTransformations.RemoveProfilePermissionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Signer.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Signer.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Signer.Model.Internal.MarshallTransformations.RevokeSignatureRequestMarshaller">
            <summary>
            RevokeSignature Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.RevokeSignatureRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.RevokeSignatureRequestMarshaller.Marshall(Amazon.Signer.Model.RevokeSignatureRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Signer.Model.Internal.MarshallTransformations.RevokeSignatureRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Signer.Model.Internal.MarshallTransformations.RevokeSignatureResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RevokeSignature operation
            </summary>  
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.RevokeSignatureResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.RevokeSignatureResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Signer.Model.Internal.MarshallTransformations.RevokeSignatureResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Signer.Model.Internal.MarshallTransformations.RevokeSigningProfileRequestMarshaller">
            <summary>
            RevokeSigningProfile Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.RevokeSigningProfileRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.RevokeSigningProfileRequestMarshaller.Marshall(Amazon.Signer.Model.RevokeSigningProfileRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Signer.Model.Internal.MarshallTransformations.RevokeSigningProfileRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Signer.Model.Internal.MarshallTransformations.RevokeSigningProfileResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RevokeSigningProfile operation
            </summary>  
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.RevokeSigningProfileResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.RevokeSigningProfileResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Signer.Model.Internal.MarshallTransformations.RevokeSigningProfileResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Signer.Model.Internal.MarshallTransformations.S3DestinationMarshaller">
            <summary>
            S3Destination Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.S3DestinationMarshaller.Marshall(Amazon.Signer.Model.S3Destination,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Signer.Model.Internal.MarshallTransformations.S3DestinationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.Signer.Model.Internal.MarshallTransformations.S3SignedObjectUnmarshaller">
            <summary>
            Response Unmarshaller for S3SignedObject Object
            </summary>  
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.S3SignedObjectUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Signer#Model#S3SignedObject,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.S3SignedObjectUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Signer.Model.Internal.MarshallTransformations.S3SignedObjectUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Signer.Model.Internal.MarshallTransformations.S3SourceMarshaller">
            <summary>
            S3Source Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.S3SourceMarshaller.Marshall(Amazon.Signer.Model.S3Source,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Signer.Model.Internal.MarshallTransformations.S3SourceMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.Signer.Model.Internal.MarshallTransformations.S3SourceUnmarshaller">
            <summary>
            Response Unmarshaller for S3Source Object
            </summary>  
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.S3SourceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Signer#Model#S3Source,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.S3SourceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Signer.Model.Internal.MarshallTransformations.S3SourceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Signer.Model.Internal.MarshallTransformations.ServiceLimitExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ServiceLimitExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.ServiceLimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.ServiceLimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Signer.Model.Internal.MarshallTransformations.ServiceLimitExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Signer.Model.Internal.MarshallTransformations.SignatureValidityPeriodMarshaller">
            <summary>
            SignatureValidityPeriod Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.SignatureValidityPeriodMarshaller.Marshall(Amazon.Signer.Model.SignatureValidityPeriod,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Signer.Model.Internal.MarshallTransformations.SignatureValidityPeriodMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.Signer.Model.Internal.MarshallTransformations.SignatureValidityPeriodUnmarshaller">
            <summary>
            Response Unmarshaller for SignatureValidityPeriod Object
            </summary>  
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.SignatureValidityPeriodUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Signer#Model#SignatureValidityPeriod,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.SignatureValidityPeriodUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Signer.Model.Internal.MarshallTransformations.SignatureValidityPeriodUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Signer.Model.Internal.MarshallTransformations.SignedObjectUnmarshaller">
            <summary>
            Response Unmarshaller for SignedObject Object
            </summary>  
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.SignedObjectUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Signer#Model#SignedObject,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.SignedObjectUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Signer.Model.Internal.MarshallTransformations.SignedObjectUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Signer.Model.Internal.MarshallTransformations.SigningConfigurationOverridesMarshaller">
            <summary>
            SigningConfigurationOverrides Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.SigningConfigurationOverridesMarshaller.Marshall(Amazon.Signer.Model.SigningConfigurationOverrides,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Signer.Model.Internal.MarshallTransformations.SigningConfigurationOverridesMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.Signer.Model.Internal.MarshallTransformations.SigningConfigurationOverridesUnmarshaller">
            <summary>
            Response Unmarshaller for SigningConfigurationOverrides Object
            </summary>  
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.SigningConfigurationOverridesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Signer#Model#SigningConfigurationOverrides,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.SigningConfigurationOverridesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Signer.Model.Internal.MarshallTransformations.SigningConfigurationOverridesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Signer.Model.Internal.MarshallTransformations.SigningConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for SigningConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.SigningConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Signer#Model#SigningConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.SigningConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Signer.Model.Internal.MarshallTransformations.SigningConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Signer.Model.Internal.MarshallTransformations.SigningImageFormatUnmarshaller">
            <summary>
            Response Unmarshaller for SigningImageFormat Object
            </summary>  
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.SigningImageFormatUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Signer#Model#SigningImageFormat,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.SigningImageFormatUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Signer.Model.Internal.MarshallTransformations.SigningImageFormatUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Signer.Model.Internal.MarshallTransformations.SigningJobRevocationRecordUnmarshaller">
            <summary>
            Response Unmarshaller for SigningJobRevocationRecord Object
            </summary>  
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.SigningJobRevocationRecordUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Signer#Model#SigningJobRevocationRecord,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.SigningJobRevocationRecordUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Signer.Model.Internal.MarshallTransformations.SigningJobRevocationRecordUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Signer.Model.Internal.MarshallTransformations.SigningJobUnmarshaller">
            <summary>
            Response Unmarshaller for SigningJob Object
            </summary>  
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.SigningJobUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Signer#Model#SigningJob,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.SigningJobUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Signer.Model.Internal.MarshallTransformations.SigningJobUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Signer.Model.Internal.MarshallTransformations.SigningMaterialMarshaller">
            <summary>
            SigningMaterial Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.SigningMaterialMarshaller.Marshall(Amazon.Signer.Model.SigningMaterial,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Signer.Model.Internal.MarshallTransformations.SigningMaterialMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.Signer.Model.Internal.MarshallTransformations.SigningMaterialUnmarshaller">
            <summary>
            Response Unmarshaller for SigningMaterial Object
            </summary>  
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.SigningMaterialUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Signer#Model#SigningMaterial,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.SigningMaterialUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Signer.Model.Internal.MarshallTransformations.SigningMaterialUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Signer.Model.Internal.MarshallTransformations.SigningPlatformOverridesMarshaller">
            <summary>
            SigningPlatformOverrides Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.SigningPlatformOverridesMarshaller.Marshall(Amazon.Signer.Model.SigningPlatformOverrides,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Signer.Model.Internal.MarshallTransformations.SigningPlatformOverridesMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.Signer.Model.Internal.MarshallTransformations.SigningPlatformOverridesUnmarshaller">
            <summary>
            Response Unmarshaller for SigningPlatformOverrides Object
            </summary>  
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.SigningPlatformOverridesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Signer#Model#SigningPlatformOverrides,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.SigningPlatformOverridesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Signer.Model.Internal.MarshallTransformations.SigningPlatformOverridesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Signer.Model.Internal.MarshallTransformations.SigningPlatformUnmarshaller">
            <summary>
            Response Unmarshaller for SigningPlatform Object
            </summary>  
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.SigningPlatformUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Signer#Model#SigningPlatform,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.SigningPlatformUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Signer.Model.Internal.MarshallTransformations.SigningPlatformUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Signer.Model.Internal.MarshallTransformations.SigningProfileRevocationRecordUnmarshaller">
            <summary>
            Response Unmarshaller for SigningProfileRevocationRecord Object
            </summary>  
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.SigningProfileRevocationRecordUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Signer#Model#SigningProfileRevocationRecord,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.SigningProfileRevocationRecordUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Signer.Model.Internal.MarshallTransformations.SigningProfileRevocationRecordUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Signer.Model.Internal.MarshallTransformations.SigningProfileUnmarshaller">
            <summary>
            Response Unmarshaller for SigningProfile Object
            </summary>  
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.SigningProfileUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Signer#Model#SigningProfile,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.SigningProfileUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Signer.Model.Internal.MarshallTransformations.SigningProfileUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Signer.Model.Internal.MarshallTransformations.SourceMarshaller">
            <summary>
            Source Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.SourceMarshaller.Marshall(Amazon.Signer.Model.Source,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Signer.Model.Internal.MarshallTransformations.SourceMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.Signer.Model.Internal.MarshallTransformations.SourceUnmarshaller">
            <summary>
            Response Unmarshaller for Source Object
            </summary>  
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.SourceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Signer#Model#Source,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.SourceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Signer.Model.Internal.MarshallTransformations.SourceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Signer.Model.Internal.MarshallTransformations.StartSigningJobRequestMarshaller">
            <summary>
            StartSigningJob Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.StartSigningJobRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.StartSigningJobRequestMarshaller.Marshall(Amazon.Signer.Model.StartSigningJobRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Signer.Model.Internal.MarshallTransformations.StartSigningJobRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Signer.Model.Internal.MarshallTransformations.StartSigningJobResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StartSigningJob operation
            </summary>  
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.StartSigningJobResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.StartSigningJobResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Signer.Model.Internal.MarshallTransformations.StartSigningJobResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Signer.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller">
            <summary>
            TagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.Signer.Model.TagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Signer.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Signer.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for TagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Signer.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Signer.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ThrottlingException Object
            </summary>  
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Signer.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Signer.Model.Internal.MarshallTransformations.TooManyRequestsExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for TooManyRequestsException Object
            </summary>  
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.TooManyRequestsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.TooManyRequestsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Signer.Model.Internal.MarshallTransformations.TooManyRequestsExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Signer.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller">
            <summary>
            UntagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.Signer.Model.UntagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Signer.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Signer.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UntagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Signer.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Signer.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ValidationException Object
            </summary>  
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Signer.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Signer.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Signer.Model.ListProfilePermissionsRequest">
            <summary>
            Container for the parameters to the ListProfilePermissions operation.
            Lists the cross-account permissions associated with a signing profile.
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.ListProfilePermissionsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            String for specifying the next set of paginated results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.ListProfilePermissionsRequest.ProfileName">
            <summary>
            Gets and sets the property ProfileName. 
            <para>
            Name of the signing profile containing the cross-account permissions.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Signer.Model.ListProfilePermissionsResponse">
            <summary>
            This is the response object from the ListProfilePermissions operation.
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.ListProfilePermissionsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            String for specifying the next set of paginated results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.ListProfilePermissionsResponse.Permissions">
            <summary>
            Gets and sets the property Permissions. 
            <para>
            List of permissions associated with the Signing Profile.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.ListProfilePermissionsResponse.PolicySizeBytes">
            <summary>
            Gets and sets the property PolicySizeBytes. 
            <para>
            Total size of the policy associated with the Signing Profile in bytes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.ListProfilePermissionsResponse.RevisionId">
            <summary>
            Gets and sets the property RevisionId. 
            <para>
            The identifier for the current revision of profile permissions.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Signer.Model.ListSigningJobsRequest">
            <summary>
            Container for the parameters to the ListSigningJobs operation.
            Lists all your signing jobs. You can use the <code>maxResults</code> parameter to
            limit the number of signing jobs that are returned in the response. If additional
            jobs remain to be listed, code signing returns a <code>nextToken</code> value. Use
            this value in subsequent calls to <code>ListSigningJobs</code> to fetch the remaining
            values. You can continue calling <code>ListSigningJobs</code> with your <code>maxResults</code>
            parameter and with new values that code signing returns in the <code>nextToken</code>
            parameter until all of your signing jobs have been returned.
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.ListSigningJobsRequest.IsRevoked">
            <summary>
            Gets and sets the property IsRevoked. 
            <para>
            Filters results to return only signing jobs with revoked signatures.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.ListSigningJobsRequest.JobInvoker">
            <summary>
            Gets and sets the property JobInvoker. 
            <para>
            Filters results to return only signing jobs initiated by a specified IAM entity.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.ListSigningJobsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Specifies the maximum number of items to return in the response. Use this parameter
            when paginating results. If additional items exist beyond the number you specify,
            the <code>nextToken</code> element is set in the response. Use the <code>nextToken</code>
            value in a subsequent request to retrieve additional items. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.ListSigningJobsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            String for specifying the next set of paginated results to return. After you receive
            a response with truncated results, use this parameter in a subsequent request. Set
            it to the value of <code>nextToken</code> from the response that you just received.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.ListSigningJobsRequest.PlatformId">
            <summary>
            Gets and sets the property PlatformId. 
            <para>
            The ID of microcontroller platform that you specified for the distribution of your
            code image.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.ListSigningJobsRequest.RequestedBy">
            <summary>
            Gets and sets the property RequestedBy. 
            <para>
            The IAM principal that requested the signing job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.ListSigningJobsRequest.SignatureExpiresAfter">
            <summary>
            Gets and sets the property SignatureExpiresAfter. 
            <para>
            Filters results to return only signing jobs with signatures expiring after a specified
            timestamp.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.ListSigningJobsRequest.SignatureExpiresBefore">
            <summary>
            Gets and sets the property SignatureExpiresBefore. 
            <para>
            Filters results to return only signing jobs with signatures expiring before a specified
            timestamp.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.ListSigningJobsRequest.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            A status value with which to filter your results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Signer.Model.ListSigningJobsResponse">
            <summary>
            This is the response object from the ListSigningJobs operation.
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.ListSigningJobsResponse.Jobs">
            <summary>
            Gets and sets the property Jobs. 
            <para>
            A list of your signing jobs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.ListSigningJobsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            String for specifying the next set of paginated results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Signer.Model.ListSigningPlatformsRequest">
            <summary>
            Container for the parameters to the ListSigningPlatforms operation.
            Lists all signing platforms available in code signing that match the request parameters.
            If additional jobs remain to be listed, code signing returns a <code>nextToken</code>
            value. Use this value in subsequent calls to <code>ListSigningJobs</code> to fetch
            the remaining values. You can continue calling <code>ListSigningJobs</code> with your
            <code>maxResults</code> parameter and with new values that code signing returns in
            the <code>nextToken</code> parameter until all of your signing jobs have been returned.
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.ListSigningPlatformsRequest.Category">
            <summary>
            Gets and sets the property Category. 
            <para>
            The category type of a signing platform.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.ListSigningPlatformsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to be returned by this operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.ListSigningPlatformsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Value for specifying the next set of paginated results to return. After you receive
            a response with truncated results, use this parameter in a subsequent request. Set
            it to the value of <code>nextToken</code> from the response that you just received.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.ListSigningPlatformsRequest.Partner">
            <summary>
            Gets and sets the property Partner. 
            <para>
            Any partner entities connected to a signing platform.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.ListSigningPlatformsRequest.Target">
            <summary>
            Gets and sets the property Target. 
            <para>
            The validation template that is used by the target signing platform.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Signer.Model.ListSigningPlatformsResponse">
            <summary>
            This is the response object from the ListSigningPlatforms operation.
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.ListSigningPlatformsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Value for specifying the next set of paginated results to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.ListSigningPlatformsResponse.Platforms">
            <summary>
            Gets and sets the property Platforms. 
            <para>
            A list of all platforms that match the request parameters.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Signer.Model.ListSigningProfilesRequest">
            <summary>
            Container for the parameters to the ListSigningProfiles operation.
            Lists all available signing profiles in your AWS account. Returns only profiles with
            an <code>ACTIVE</code> status unless the <code>includeCanceled</code> request field
            is set to <code>true</code>. If additional jobs remain to be listed, code signing
            returns a <code>nextToken</code> value. Use this value in subsequent calls to <code>ListSigningJobs</code>
            to fetch the remaining values. You can continue calling <code>ListSigningJobs</code>
            with your <code>maxResults</code> parameter and with new values that code signing
            returns in the <code>nextToken</code> parameter until all of your signing jobs have
            been returned.
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.ListSigningProfilesRequest.IncludeCanceled">
            <summary>
            Gets and sets the property IncludeCanceled. 
            <para>
            Designates whether to include profiles with the status of <code>CANCELED</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.ListSigningProfilesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of profiles to be returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.ListSigningProfilesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Value for specifying the next set of paginated results to return. After you receive
            a response with truncated results, use this parameter in a subsequent request. Set
            it to the value of <code>nextToken</code> from the response that you just received.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.ListSigningProfilesRequest.PlatformId">
            <summary>
            Gets and sets the property PlatformId. 
            <para>
            Filters results to return only signing jobs initiated for a specified signing platform.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.ListSigningProfilesRequest.Statuses">
            <summary>
            Gets and sets the property Statuses. 
            <para>
            Filters results to return only signing jobs with statuses in the specified list.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Signer.Model.ListSigningProfilesResponse">
            <summary>
            This is the response object from the ListSigningProfiles operation.
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.ListSigningProfilesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Value for specifying the next set of paginated results to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.ListSigningProfilesResponse.Profiles">
            <summary>
            Gets and sets the property Profiles. 
            <para>
            A list of profiles that are available in the AWS account. This includes profiles with
            the status of <code>CANCELED</code> if the <code>includeCanceled</code> parameter
            is set to <code>true</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Signer.Model.ListTagsForResourceRequest">
            <summary>
            Container for the parameters to the ListTagsForResource operation.
            Returns a list of the tags associated with a signing profile resource.
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.ListTagsForResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The Amazon Resource Name (ARN) for the signing profile.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Signer.Model.ListTagsForResourceResponse">
            <summary>
            This is the response object from the ListTagsForResource operation.
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.ListTagsForResourceResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            A list of tags associated with the signing profile.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Signer.Model.NotFoundException">
            <summary>
            The signing profile was not found.
            </summary>
        </member>
        <member name="M:Amazon.Signer.Model.NotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new NotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Signer.Model.NotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of NotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Signer.Model.NotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of NotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Signer.Model.NotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of NotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Signer.Model.NotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of NotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Signer.Model.NotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the NotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Signer.Model.NotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="P:Amazon.Signer.Model.NotFoundException.Code">
            <summary>
            Gets and sets the property Code.
            </summary>
        </member>
        <member name="T:Amazon.Signer.Model.Permission">
            <summary>
            A cross-account permission for a signing profile.
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.Permission.Action">
            <summary>
            Gets and sets the property Action. 
            <para>
            An AWS Signer action permitted as part of cross-account permissions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.Permission.Principal">
            <summary>
            Gets and sets the property Principal. 
            <para>
            The AWS principal that has been granted a cross-account permission.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.Permission.ProfileVersion">
            <summary>
            Gets and sets the property ProfileVersion. 
            <para>
            The signing profile version that a permission applies to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.Permission.StatementId">
            <summary>
            Gets and sets the property StatementId. 
            <para>
            A unique identifier for a cross-account permission statement.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Signer.Model.PutSigningProfileRequest">
            <summary>
            Container for the parameters to the PutSigningProfile operation.
            Creates a signing profile. A signing profile is a code signing template that can be
            used to carry out a pre-defined signing job. For more information, see <a href="http://docs.aws.amazon.com/signer/latest/developerguide/gs-profile.html">http://docs.aws.amazon.com/signer/latest/developerguide/gs-profile.html</a>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.PutSigningProfileRequest.Overrides">
            <summary>
            Gets and sets the property Overrides. 
            <para>
            A subfield of <code>platform</code>. This specifies any different configuration options
            that you want to apply to the chosen platform (such as a different <code>hash-algorithm</code>
            or <code>signing-algorithm</code>).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.PutSigningProfileRequest.PlatformId">
            <summary>
            Gets and sets the property PlatformId. 
            <para>
            The ID of the signing platform to be created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.PutSigningProfileRequest.ProfileName">
            <summary>
            Gets and sets the property ProfileName. 
            <para>
            The name of the signing profile to be created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.PutSigningProfileRequest.SignatureValidityPeriod">
            <summary>
            Gets and sets the property SignatureValidityPeriod. 
            <para>
            The default validity period override for any signature generated using this signing
            profile. If unspecified, the default is 135 months.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.PutSigningProfileRequest.SigningMaterial">
            <summary>
            Gets and sets the property SigningMaterial. 
            <para>
            The AWS Certificate Manager certificate that will be used to sign code with the new
            signing profile.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.PutSigningProfileRequest.SigningParameters">
            <summary>
            Gets and sets the property SigningParameters. 
            <para>
            Map of key-value pairs for signing. These can include any information that you want
            to use during signing.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.PutSigningProfileRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Tags to be associated with the signing profile that is being created.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Signer.Model.PutSigningProfileResponse">
            <summary>
            This is the response object from the PutSigningProfile operation.
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.PutSigningProfileResponse.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The Amazon Resource Name (ARN) of the signing profile created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.PutSigningProfileResponse.ProfileVersion">
            <summary>
            Gets and sets the property ProfileVersion. 
            <para>
            The version of the signing profile being created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.PutSigningProfileResponse.ProfileVersionArn">
            <summary>
            Gets and sets the property ProfileVersionArn. 
            <para>
            The signing profile ARN, including the profile version.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Signer.Model.RemoveProfilePermissionRequest">
            <summary>
            Container for the parameters to the RemoveProfilePermission operation.
            Removes cross-account permissions from a signing profile.
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.RemoveProfilePermissionRequest.ProfileName">
            <summary>
            Gets and sets the property ProfileName. 
            <para>
            A human-readable name for the signing profile with permissions to be removed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.RemoveProfilePermissionRequest.RevisionId">
            <summary>
            Gets and sets the property RevisionId. 
            <para>
            An identifier for the current revision of the signing profile permissions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.RemoveProfilePermissionRequest.StatementId">
            <summary>
            Gets and sets the property StatementId. 
            <para>
            A unique identifier for the cross-account permissions statement.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Signer.Model.RemoveProfilePermissionResponse">
            <summary>
            This is the response object from the RemoveProfilePermission operation.
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.RemoveProfilePermissionResponse.RevisionId">
            <summary>
            Gets and sets the property RevisionId. 
            <para>
            An identifier for the current revision of the profile permissions.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Signer.Model.ResourceNotFoundException">
            <summary>
            A specified resource could not be found.
            </summary>
        </member>
        <member name="M:Amazon.Signer.Model.ResourceNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Signer.Model.ResourceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Signer.Model.ResourceNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Signer.Model.ResourceNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Signer.Model.ResourceNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Signer.Model.ResourceNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ResourceNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Signer.Model.ResourceNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="P:Amazon.Signer.Model.ResourceNotFoundException.Code">
            <summary>
            Gets and sets the property Code.
            </summary>
        </member>
        <member name="T:Amazon.Signer.Model.RevokeSignatureRequest">
            <summary>
            Container for the parameters to the RevokeSignature operation.
            Changes the state of a signing job to REVOKED. This indicates that the signature is
            no longer valid.
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.RevokeSignatureRequest.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            ID of the signing job to be revoked.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.RevokeSignatureRequest.JobOwner">
            <summary>
            Gets and sets the property JobOwner. 
            <para>
            AWS account ID of the job owner.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.RevokeSignatureRequest.Reason">
            <summary>
            Gets and sets the property Reason. 
            <para>
            The reason for revoking the signing job.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Signer.Model.RevokeSignatureResponse">
            <summary>
            This is the response object from the RevokeSignature operation.
            </summary>
        </member>
        <member name="T:Amazon.Signer.Model.RevokeSigningProfileRequest">
            <summary>
            Container for the parameters to the RevokeSigningProfile operation.
            Changes the state of a signing profile to REVOKED. This indicates that signatures
            generated using the signing profile after an effective start date are no longer valid.
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.RevokeSigningProfileRequest.EffectiveTime">
            <summary>
            Gets and sets the property EffectiveTime. 
            <para>
            A timestamp for when revocation of a Signing Profile should become effective. Signatures
            generated using the signing profile after this timestamp are not trusted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.RevokeSigningProfileRequest.ProfileName">
            <summary>
            Gets and sets the property ProfileName. 
            <para>
            The name of the signing profile to be revoked.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.RevokeSigningProfileRequest.ProfileVersion">
            <summary>
            Gets and sets the property ProfileVersion. 
            <para>
            The version of the signing profile to be revoked.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.RevokeSigningProfileRequest.Reason">
            <summary>
            Gets and sets the property Reason. 
            <para>
            The reason for revoking a signing profile.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Signer.Model.RevokeSigningProfileResponse">
            <summary>
            This is the response object from the RevokeSigningProfile operation.
            </summary>
        </member>
        <member name="T:Amazon.Signer.Model.S3Destination">
            <summary>
            The name and prefix of the S3 bucket where code signing saves your signed objects.
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.S3Destination.BucketName">
            <summary>
            Gets and sets the property BucketName. 
            <para>
            Name of the S3 bucket.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.S3Destination.Prefix">
            <summary>
            Gets and sets the property Prefix. 
            <para>
            An Amazon S3 prefix that you can use to limit responses to those that begin with the
            specified prefix.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Signer.Model.S3SignedObject">
            <summary>
            The S3 bucket name and key where code signing saved your signed code image.
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.S3SignedObject.BucketName">
            <summary>
            Gets and sets the property BucketName. 
            <para>
            Name of the S3 bucket.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.S3SignedObject.Key">
            <summary>
            Gets and sets the property Key. 
            <para>
            Key name that uniquely identifies a signed code image in your bucket.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Signer.Model.S3Source">
            <summary>
            Information about the S3 bucket where you saved your unsigned code.
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.S3Source.BucketName">
            <summary>
            Gets and sets the property BucketName. 
            <para>
            Name of the S3 bucket.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.S3Source.Key">
            <summary>
            Gets and sets the property Key. 
            <para>
            Key name of the bucket object that contains your unsigned code.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.S3Source.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            Version of your source image in your version enabled S3 bucket.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Signer.Model.ServiceLimitExceededException">
            <summary>
            The client is making a request that exceeds service limits.
            </summary>
        </member>
        <member name="M:Amazon.Signer.Model.ServiceLimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new ServiceLimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Signer.Model.ServiceLimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ServiceLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Signer.Model.ServiceLimitExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of ServiceLimitExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Signer.Model.ServiceLimitExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Signer.Model.ServiceLimitExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Signer.Model.ServiceLimitExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ServiceLimitExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Signer.Model.ServiceLimitExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="P:Amazon.Signer.Model.ServiceLimitExceededException.Code">
            <summary>
            Gets and sets the property Code.
            </summary>
        </member>
        <member name="T:Amazon.Signer.Model.SignatureValidityPeriod">
            <summary>
            The validity period for a signing job.
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.SignatureValidityPeriod.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The time unit for signature validity.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.SignatureValidityPeriod.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The numerical value of the time unit for signature validity.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Signer.Model.SignedObject">
            <summary>
            Points to an <code>S3SignedObject</code> object that contains information about your
            signed code image.
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.SignedObject.S3">
            <summary>
            Gets and sets the property S3. 
            <para>
            The <code>S3SignedObject</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Signer.Model.SigningConfiguration">
            <summary>
            The configuration of a code signing operation.
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.SigningConfiguration.EncryptionAlgorithmOptions">
            <summary>
            Gets and sets the property EncryptionAlgorithmOptions. 
            <para>
            The encryption algorithm options that are available for a code signing job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.SigningConfiguration.HashAlgorithmOptions">
            <summary>
            Gets and sets the property HashAlgorithmOptions. 
            <para>
            The hash algorithm options that are available for a code signing job.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Signer.Model.SigningConfigurationOverrides">
            <summary>
            A signing configuration that overrides the default encryption or hash algorithm of
            a signing job.
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.SigningConfigurationOverrides.EncryptionAlgorithm">
            <summary>
            Gets and sets the property EncryptionAlgorithm. 
            <para>
            A specified override of the default encryption algorithm that is used in a code signing
            job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.SigningConfigurationOverrides.HashAlgorithm">
            <summary>
            Gets and sets the property HashAlgorithm. 
            <para>
            A specified override of the default hash algorithm that is used in a code signing
            job.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Signer.Model.SigningImageFormat">
            <summary>
            The image format of a code signing platform or profile.
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.SigningImageFormat.DefaultFormat">
            <summary>
            Gets and sets the property DefaultFormat. 
            <para>
            The default format of a code signing image.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.SigningImageFormat.SupportedFormats">
            <summary>
            Gets and sets the property SupportedFormats. 
            <para>
            The supported formats of a code signing image.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Signer.Model.SigningJob">
            <summary>
            Contains information about a signing job.
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.SigningJob.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The date and time that the signing job was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.SigningJob.IsRevoked">
            <summary>
            Gets and sets the property IsRevoked. 
            <para>
            Indicates whether the signing job is revoked.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.SigningJob.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            The ID of the signing job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.SigningJob.JobInvoker">
            <summary>
            Gets and sets the property JobInvoker. 
            <para>
            The AWS account ID of the job invoker.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.SigningJob.JobOwner">
            <summary>
            Gets and sets the property JobOwner. 
            <para>
            The AWS account ID of the job owner.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.SigningJob.PlatformDisplayName">
            <summary>
            Gets and sets the property PlatformDisplayName. 
            <para>
            The name of a signing platform.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.SigningJob.PlatformId">
            <summary>
            Gets and sets the property PlatformId. 
            <para>
            The unique identifier for a signing platform.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.SigningJob.ProfileName">
            <summary>
            Gets and sets the property ProfileName. 
            <para>
            The name of the signing profile that created a signing job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.SigningJob.ProfileVersion">
            <summary>
            Gets and sets the property ProfileVersion. 
            <para>
            The version of the signing profile that created a signing job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.SigningJob.SignatureExpiresAt">
            <summary>
            Gets and sets the property SignatureExpiresAt. 
            <para>
            The time when the signature of a signing job expires.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.SigningJob.SignedObject">
            <summary>
            Gets and sets the property SignedObject. 
            <para>
            A <code>SignedObject</code> structure that contains information about a signing job's
            signed code image.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.SigningJob.SigningMaterial">
            <summary>
            Gets and sets the property SigningMaterial. 
            <para>
            A <code>SigningMaterial</code> object that contains the Amazon Resource Name (ARN)
            of the certificate used for the signing job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.SigningJob.Source">
            <summary>
            Gets and sets the property Source. 
            <para>
            A <code>Source</code> that contains information about a signing job's code image source.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.SigningJob.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the signing job.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Signer.Model.SigningJobRevocationRecord">
            <summary>
            Revocation information for a signing job.
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.SigningJobRevocationRecord.Reason">
            <summary>
            Gets and sets the property Reason. 
            <para>
            A caller-supplied reason for revocation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.SigningJobRevocationRecord.RevokedAt">
            <summary>
            Gets and sets the property RevokedAt. 
            <para>
            The time of revocation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.SigningJobRevocationRecord.RevokedBy">
            <summary>
            Gets and sets the property RevokedBy. 
            <para>
            The identity of the revoker.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Signer.Model.SigningMaterial">
            <summary>
            The ACM certificate that is used to sign your code.
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.SigningMaterial.CertificateArn">
            <summary>
            Gets and sets the property CertificateArn. 
            <para>
            The Amazon Resource Name (ARN) of the certificates that is used to sign your code.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Signer.Model.SigningPlatform">
            <summary>
            Contains information about the signing configurations and parameters that are used
            to perform a code signing job.
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.SigningPlatform.Category">
            <summary>
            Gets and sets the property Category. 
            <para>
            The category of a code signing platform.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.SigningPlatform.DisplayName">
            <summary>
            Gets and sets the property DisplayName. 
            <para>
            The display name of a code signing platform.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.SigningPlatform.MaxSizeInMB">
            <summary>
            Gets and sets the property MaxSizeInMB. 
            <para>
            The maximum size (in MB) of code that can be signed by a code signing platform.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.SigningPlatform.Partner">
            <summary>
            Gets and sets the property Partner. 
            <para>
            Any partner entities linked to a code signing platform.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.SigningPlatform.PlatformId">
            <summary>
            Gets and sets the property PlatformId. 
            <para>
            The ID of a code signing; platform.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.SigningPlatform.RevocationSupported">
            <summary>
            Gets and sets the property RevocationSupported. 
            <para>
            Indicates whether revocation is supported for the platform.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.SigningPlatform.SigningConfiguration">
            <summary>
            Gets and sets the property SigningConfiguration. 
            <para>
            The configuration of a code signing platform. This includes the designated hash algorithm
            and encryption algorithm of a signing platform.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.SigningPlatform.SigningImageFormat">
            <summary>
            Gets and sets the property SigningImageFormat.
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.SigningPlatform.Target">
            <summary>
            Gets and sets the property Target. 
            <para>
            The types of targets that can be signed by a code signing platform.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Signer.Model.SigningPlatformOverrides">
            <summary>
            Any overrides that are applied to the signing configuration of a code signing platform.
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.SigningPlatformOverrides.SigningConfiguration">
            <summary>
            Gets and sets the property SigningConfiguration. 
            <para>
            A signing configuration that overrides the default encryption or hash algorithm of
            a signing job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.SigningPlatformOverrides.SigningImageFormat">
            <summary>
            Gets and sets the property SigningImageFormat. 
            <para>
            A signed image is a JSON object. When overriding the default signing platform configuration,
            a customer can select either of two signing formats, <code>JSONEmbedded</code> or
            <code>JSONDetached</code>. (A third format value, <code>JSON</code>, is reserved for
            future use.) With <code>JSONEmbedded</code>, the signing image has the payload embedded
            in it. With <code>JSONDetached</code>, the payload is not be embedded in the signing
            image.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Signer.Model.SigningProfile">
            <summary>
            Contains information about the ACM certificates and code signing configuration parameters
            that can be used by a given code signing user.
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.SigningProfile.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The Amazon Resource Name (ARN) for the signing profile.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.SigningProfile.PlatformDisplayName">
            <summary>
            Gets and sets the property PlatformDisplayName. 
            <para>
            The name of the signing platform.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.SigningProfile.PlatformId">
            <summary>
            Gets and sets the property PlatformId. 
            <para>
            The ID of a platform that is available for use by a signing profile.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.SigningProfile.ProfileName">
            <summary>
            Gets and sets the property ProfileName. 
            <para>
            The name of the signing profile.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.SigningProfile.ProfileVersion">
            <summary>
            Gets and sets the property ProfileVersion. 
            <para>
            The version of a signing profile.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.SigningProfile.ProfileVersionArn">
            <summary>
            Gets and sets the property ProfileVersionArn. 
            <para>
            The ARN of a signing profile, including the profile version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.SigningProfile.SignatureValidityPeriod">
            <summary>
            Gets and sets the property SignatureValidityPeriod. 
            <para>
            The validity period for a signing job created using this signing profile.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.SigningProfile.SigningMaterial">
            <summary>
            Gets and sets the property SigningMaterial. 
            <para>
            The ACM certificate that is available for use by a signing profile.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.SigningProfile.SigningParameters">
            <summary>
            Gets and sets the property SigningParameters. 
            <para>
            The parameters that are available for use by a code signing user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.SigningProfile.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of a code signing profile.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.SigningProfile.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            A list of tags associated with the signing profile.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Signer.Model.SigningProfileRevocationRecord">
            <summary>
            Revocation information for a signing profile.
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.SigningProfileRevocationRecord.RevocationEffectiveFrom">
            <summary>
            Gets and sets the property RevocationEffectiveFrom. 
            <para>
            The time when revocation becomes effective.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.SigningProfileRevocationRecord.RevokedAt">
            <summary>
            Gets and sets the property RevokedAt. 
            <para>
            The time when the signing profile was revoked.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.SigningProfileRevocationRecord.RevokedBy">
            <summary>
            Gets and sets the property RevokedBy. 
            <para>
            The identity of the revoker.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Signer.Model.Source">
            <summary>
            An <code>S3Source</code> object that contains information about the S3 bucket where
            you saved your unsigned code.
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.Source.S3">
            <summary>
            Gets and sets the property S3. 
            <para>
            The <code>S3Source</code> object.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Signer.Model.StartSigningJobRequest">
            <summary>
            Container for the parameters to the StartSigningJob operation.
            Initiates a signing job to be performed on the code provided. Signing jobs are viewable
            by the <code>ListSigningJobs</code> operation for two years after they are performed.
            Note the following requirements: 
            
             <ul> <li> 
            <para>
             You must create an Amazon S3 source bucket. For more information, see <a href="http://docs.aws.amazon.com/AmazonS3/latest/gsg/CreatingABucket.html">Create
            a Bucket</a> in the <i>Amazon S3 Getting Started Guide</i>. 
            </para>
             </li> <li> 
            <para>
            Your S3 source bucket must be version enabled.
            </para>
             </li> <li> 
            <para>
            You must create an S3 destination bucket. Code signing uses your S3 destination bucket
            to write your signed code.
            </para>
             </li> <li> 
            <para>
            You specify the name of the source and destination buckets when calling the <code>StartSigningJob</code>
            operation.
            </para>
             </li> <li> 
            <para>
            You must also specify a request token that identifies your request to code signing.
            </para>
             </li> </ul> 
            <para>
            You can call the <a>DescribeSigningJob</a> and the <a>ListSigningJobs</a> actions
            after you call <code>StartSigningJob</code>.
            </para>
             
            <para>
            For a Java example that shows how to use this action, see <a href="http://docs.aws.amazon.com/acm/latest/userguide/">http://docs.aws.amazon.com/acm/latest/userguide/</a>
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.StartSigningJobRequest.ClientRequestToken">
            <summary>
            Gets and sets the property ClientRequestToken. 
            <para>
            String that identifies the signing request. All calls after the first that use this
            token return the same response as the first call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.StartSigningJobRequest.Destination">
            <summary>
            Gets and sets the property Destination. 
            <para>
            The S3 bucket in which to save your signed object. The destination contains the name
            of your bucket and an optional prefix.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.StartSigningJobRequest.ProfileName">
            <summary>
            Gets and sets the property ProfileName. 
            <para>
            The name of the signing profile.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.StartSigningJobRequest.ProfileOwner">
            <summary>
            Gets and sets the property ProfileOwner. 
            <para>
            The AWS account ID of the signing profile owner.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.StartSigningJobRequest.Source">
            <summary>
            Gets and sets the property Source. 
            <para>
            The S3 bucket that contains the object to sign or a BLOB that contains your raw code.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Signer.Model.StartSigningJobResponse">
            <summary>
            This is the response object from the StartSigningJob operation.
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.StartSigningJobResponse.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            The ID of your signing job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.StartSigningJobResponse.JobOwner">
            <summary>
            Gets and sets the property JobOwner. 
            <para>
            The AWS account ID of the signing job owner.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Signer.Model.TagResourceRequest">
            <summary>
            Container for the parameters to the TagResource operation.
            Adds one or more tags to a signing profile. Tags are labels that you can use to identify
            and organize your AWS resources. Each tag consists of a key and an optional value.
            To specify the signing profile, use its Amazon Resource Name (ARN). To specify the
            tag, use a key-value pair.
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.TagResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The Amazon Resource Name (ARN) for the signing profile.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.TagResourceRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            One or more tags to be associated with the signing profile.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Signer.Model.TagResourceResponse">
            <summary>
            This is the response object from the TagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.Signer.Model.ThrottlingException">
            <summary>
            The request was denied due to request throttling.
            
             
            <para>
            Instead of this error, <code>TooManyRequestsException</code> should be used.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.Signer.Model.ThrottlingException.#ctor(System.String)">
            <summary>
            Constructs a new ThrottlingException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Signer.Model.ThrottlingException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Signer.Model.ThrottlingException.#ctor(System.Exception)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Signer.Model.ThrottlingException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Signer.Model.ThrottlingException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Signer.Model.ThrottlingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ThrottlingException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Signer.Model.ThrottlingException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="P:Amazon.Signer.Model.ThrottlingException.Code">
            <summary>
            Gets and sets the property Code.
            </summary>
        </member>
        <member name="T:Amazon.Signer.Model.TooManyRequestsException">
            <summary>
            The allowed number of job-signing requests has been exceeded.
            
             
            <para>
            This error supersedes the error <code>ThrottlingException</code>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.Signer.Model.TooManyRequestsException.#ctor(System.String)">
            <summary>
            Constructs a new TooManyRequestsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Signer.Model.TooManyRequestsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of TooManyRequestsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Signer.Model.TooManyRequestsException.#ctor(System.Exception)">
            <summary>
            Construct instance of TooManyRequestsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Signer.Model.TooManyRequestsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TooManyRequestsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Signer.Model.TooManyRequestsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TooManyRequestsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Signer.Model.TooManyRequestsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the TooManyRequestsException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Signer.Model.TooManyRequestsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="P:Amazon.Signer.Model.TooManyRequestsException.Code">
            <summary>
            Gets and sets the property Code.
            </summary>
        </member>
        <member name="T:Amazon.Signer.Model.UntagResourceRequest">
            <summary>
            Container for the parameters to the UntagResource operation.
            Removes one or more tags from a signing profile. To remove the tags, specify a list
            of tag keys.
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.UntagResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The Amazon Resource Name (ARN) for the signing profile.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.UntagResourceRequest.TagKeys">
            <summary>
            Gets and sets the property TagKeys. 
            <para>
            A list of tag keys to be removed from the signing profile.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Signer.Model.UntagResourceResponse">
            <summary>
            This is the response object from the UntagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.Signer.Model.ValidationException">
            <summary>
            You signing certificate could not be validated.
            </summary>
        </member>
        <member name="M:Amazon.Signer.Model.ValidationException.#ctor(System.String)">
            <summary>
            Constructs a new ValidationException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Signer.Model.ValidationException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Signer.Model.ValidationException.#ctor(System.Exception)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Signer.Model.ValidationException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Signer.Model.ValidationException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Signer.Model.ValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ValidationException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Signer.Model.ValidationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="P:Amazon.Signer.Model.ValidationException.Code">
            <summary>
            Gets and sets the property Code.
            </summary>
        </member>
        <member name="T:Amazon.Signer.Model.IListSigningJobsPaginator">
             <summary>
             Paginator for the ListSigningJobs operation
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.IListSigningJobsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.Signer.Model.IListSigningPlatformsPaginator">
             <summary>
             Paginator for the ListSigningPlatforms operation
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.IListSigningPlatformsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.Signer.Model.IListSigningProfilesPaginator">
             <summary>
             Paginator for the ListSigningProfiles operation
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.IListSigningProfilesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.Signer.Model.ISignerPaginatorFactory">
             <summary>
             Paginators for the Signer service
            </summary>
        </member>
        <member name="M:Amazon.Signer.Model.ISignerPaginatorFactory.ListSigningJobs(Amazon.Signer.Model.ListSigningJobsRequest)">
             <summary>
             Paginator for ListSigningJobs operation
            </summary>
        </member>
        <member name="M:Amazon.Signer.Model.ISignerPaginatorFactory.ListSigningPlatforms(Amazon.Signer.Model.ListSigningPlatformsRequest)">
             <summary>
             Paginator for ListSigningPlatforms operation
            </summary>
        </member>
        <member name="M:Amazon.Signer.Model.ISignerPaginatorFactory.ListSigningProfiles(Amazon.Signer.Model.ListSigningProfilesRequest)">
             <summary>
             Paginator for ListSigningProfiles operation
            </summary>
        </member>
        <member name="T:Amazon.Signer.Model.ListSigningJobsPaginator">
            <summary>
            Base class for ListSigningJobs paginators.
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.ListSigningJobsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.Signer.Model.ListSigningPlatformsPaginator">
            <summary>
            Base class for ListSigningPlatforms paginators.
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.ListSigningPlatformsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.Signer.Model.ListSigningProfilesPaginator">
            <summary>
            Base class for ListSigningProfiles paginators.
            </summary>
        </member>
        <member name="P:Amazon.Signer.Model.ListSigningProfilesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.Signer.Model.SignerPaginatorFactory">
             <summary>
             Paginators for the Signer service
            </summary>
        </member>
        <member name="M:Amazon.Signer.Model.SignerPaginatorFactory.ListSigningJobs(Amazon.Signer.Model.ListSigningJobsRequest)">
             <summary>
             Paginator for ListSigningJobs operation
            </summary>
        </member>
        <member name="M:Amazon.Signer.Model.SignerPaginatorFactory.ListSigningPlatforms(Amazon.Signer.Model.ListSigningPlatformsRequest)">
             <summary>
             Paginator for ListSigningPlatforms operation
            </summary>
        </member>
        <member name="M:Amazon.Signer.Model.SignerPaginatorFactory.ListSigningProfiles(Amazon.Signer.Model.ListSigningProfilesRequest)">
             <summary>
             Paginator for ListSigningProfiles operation
            </summary>
        </member>
        <member name="T:Amazon.Signer.AmazonSignerRequest">
            <summary>
            Base class for Signer operation requests.
            </summary>
        </member>
        <member name="T:Amazon.Signer.Category">
            <summary>
            Constants used for properties of type Category.
            </summary>
        </member>
        <member name="F:Amazon.Signer.Category.AWSIoT">
            <summary>
            Constant AWSIoT for Category
            </summary>
        </member>
        <member name="M:Amazon.Signer.Category.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Signer.Category.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Signer.Category.op_Implicit(System.String)~Amazon.Signer.Category">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Signer.EncryptionAlgorithm">
            <summary>
            Constants used for properties of type EncryptionAlgorithm.
            </summary>
        </member>
        <member name="F:Amazon.Signer.EncryptionAlgorithm.ECDSA">
            <summary>
            Constant ECDSA for EncryptionAlgorithm
            </summary>
        </member>
        <member name="F:Amazon.Signer.EncryptionAlgorithm.RSA">
            <summary>
            Constant RSA for EncryptionAlgorithm
            </summary>
        </member>
        <member name="M:Amazon.Signer.EncryptionAlgorithm.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Signer.EncryptionAlgorithm.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Signer.EncryptionAlgorithm.op_Implicit(System.String)~Amazon.Signer.EncryptionAlgorithm">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Signer.HashAlgorithm">
            <summary>
            Constants used for properties of type HashAlgorithm.
            </summary>
        </member>
        <member name="F:Amazon.Signer.HashAlgorithm.SHA1">
            <summary>
            Constant SHA1 for HashAlgorithm
            </summary>
        </member>
        <member name="F:Amazon.Signer.HashAlgorithm.SHA256">
            <summary>
            Constant SHA256 for HashAlgorithm
            </summary>
        </member>
        <member name="M:Amazon.Signer.HashAlgorithm.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Signer.HashAlgorithm.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Signer.HashAlgorithm.op_Implicit(System.String)~Amazon.Signer.HashAlgorithm">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Signer.ImageFormat">
            <summary>
            Constants used for properties of type ImageFormat.
            </summary>
        </member>
        <member name="F:Amazon.Signer.ImageFormat.JSON">
            <summary>
            Constant JSON for ImageFormat
            </summary>
        </member>
        <member name="F:Amazon.Signer.ImageFormat.JSONDetached">
            <summary>
            Constant JSONDetached for ImageFormat
            </summary>
        </member>
        <member name="F:Amazon.Signer.ImageFormat.JSONEmbedded">
            <summary>
            Constant JSONEmbedded for ImageFormat
            </summary>
        </member>
        <member name="M:Amazon.Signer.ImageFormat.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Signer.ImageFormat.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Signer.ImageFormat.op_Implicit(System.String)~Amazon.Signer.ImageFormat">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Signer.SigningProfileStatus">
            <summary>
            Constants used for properties of type SigningProfileStatus.
            </summary>
        </member>
        <member name="F:Amazon.Signer.SigningProfileStatus.Active">
            <summary>
            Constant Active for SigningProfileStatus
            </summary>
        </member>
        <member name="F:Amazon.Signer.SigningProfileStatus.Canceled">
            <summary>
            Constant Canceled for SigningProfileStatus
            </summary>
        </member>
        <member name="F:Amazon.Signer.SigningProfileStatus.Revoked">
            <summary>
            Constant Revoked for SigningProfileStatus
            </summary>
        </member>
        <member name="M:Amazon.Signer.SigningProfileStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Signer.SigningProfileStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Signer.SigningProfileStatus.op_Implicit(System.String)~Amazon.Signer.SigningProfileStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Signer.SigningStatus">
            <summary>
            Constants used for properties of type SigningStatus.
            </summary>
        </member>
        <member name="F:Amazon.Signer.SigningStatus.Failed">
            <summary>
            Constant Failed for SigningStatus
            </summary>
        </member>
        <member name="F:Amazon.Signer.SigningStatus.InProgress">
            <summary>
            Constant InProgress for SigningStatus
            </summary>
        </member>
        <member name="F:Amazon.Signer.SigningStatus.Succeeded">
            <summary>
            Constant Succeeded for SigningStatus
            </summary>
        </member>
        <member name="M:Amazon.Signer.SigningStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Signer.SigningStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Signer.SigningStatus.op_Implicit(System.String)~Amazon.Signer.SigningStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Signer.ValidityType">
            <summary>
            Constants used for properties of type ValidityType.
            </summary>
        </member>
        <member name="F:Amazon.Signer.ValidityType.DAYS">
            <summary>
            Constant DAYS for ValidityType
            </summary>
        </member>
        <member name="F:Amazon.Signer.ValidityType.MONTHS">
            <summary>
            Constant MONTHS for ValidityType
            </summary>
        </member>
        <member name="F:Amazon.Signer.ValidityType.YEARS">
            <summary>
            Constant YEARS for ValidityType
            </summary>
        </member>
        <member name="M:Amazon.Signer.ValidityType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Signer.ValidityType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Signer.ValidityType.op_Implicit(System.String)~Amazon.Signer.ValidityType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Signer.AmazonSignerClient">
             <summary>
             Implementation for accessing Signer
            
             AWS Signer is a fully managed code signing service to help you ensure the trust and
             integrity of your code. 
             
              
             <para>
             AWS Signer supports the following applications:
             </para>
              
             <para>
             With <i>code signing for AWS Lambda</i>, you can sign AWS Lambda deployment packages.
             Integrated support is provided for Amazon S3, Amazon CloudWatch, and AWS CloudTrail.
             In order to sign code, you create a signing profile and then use Signer to sign Lambda
             zip files in S3. 
             </para>
              
             <para>
             With <i>code signing for IoT</i>, you can sign code for any IoT device that is supported
             by AWS. IoT code signing is available for <a href="http://docs.aws.amazon.com/freertos/latest/userguide/">Amazon
             FreeRTOS</a> and <a href="http://docs.aws.amazon.com/iot/latest/developerguide/">AWS
             IoT Device Management</a>, and is integrated with <a href="http://docs.aws.amazon.com/acm/latest/userguide/">AWS
             Certificate Manager (ACM)</a>. In order to sign code, you import a third-party code
             signing certificate using ACM, and use that to sign updates in Amazon FreeRTOS and
             AWS IoT Device Management. 
             </para>
              
             <para>
             For more information about AWS Signer, see the <a href="http://docs.aws.amazon.com/signer/latest/developerguide/Welcome.html">AWS
             Signer Developer Guide</a>.
             </para>
             </summary>
        </member>
        <member name="P:Amazon.Signer.AmazonSignerClient.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.Signer.AmazonSignerClient.#ctor">
             <summary>
             Constructs AmazonSignerClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.Signer.AmazonSignerClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonSignerClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.Signer.AmazonSignerClient.#ctor(Amazon.Signer.AmazonSignerConfig)">
             <summary>
             Constructs AmazonSignerClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonSignerClient Configuration Object</param>
        </member>
        <member name="M:Amazon.Signer.AmazonSignerClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonSignerClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.Signer.AmazonSignerClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonSignerClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.Signer.AmazonSignerClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.Signer.AmazonSignerConfig)">
            <summary>
            Constructs AmazonSignerClient with AWS Credentials and an
            AmazonSignerClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonSignerClient Configuration Object</param>
        </member>
        <member name="M:Amazon.Signer.AmazonSignerClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonSignerClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.Signer.AmazonSignerClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonSignerClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.Signer.AmazonSignerClient.#ctor(System.String,System.String,Amazon.Signer.AmazonSignerConfig)">
            <summary>
            Constructs AmazonSignerClient with AWS Access Key ID, AWS Secret Key and an
            AmazonSignerClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonSignerClient Configuration Object</param>
        </member>
        <member name="M:Amazon.Signer.AmazonSignerClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonSignerClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.Signer.AmazonSignerClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonSignerClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.Signer.AmazonSignerClient.#ctor(System.String,System.String,System.String,Amazon.Signer.AmazonSignerConfig)">
            <summary>
            Constructs AmazonSignerClient with AWS Access Key ID, AWS Secret Key and an
            AmazonSignerClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonSignerClient Configuration Object</param>
        </member>
        <member name="M:Amazon.Signer.AmazonSignerClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="P:Amazon.Signer.AmazonSignerClient.ServiceMetadata">
            <summary>
            Capture metadata for the service.
            </summary>
        </member>
        <member name="M:Amazon.Signer.AmazonSignerClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.Signer.AmazonSignerClient.AddProfilePermission(Amazon.Signer.Model.AddProfilePermissionRequest)">
            <summary>
            Adds cross-account permissions to a signing profile.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AddProfilePermission service method.</param>
            
            <returns>The response from the AddProfilePermission service method, as returned by Signer.</returns>
            <exception cref="T:Amazon.Signer.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Signer.Model.ConflictException">
            The resource encountered a conflicting state.
            </exception>
            <exception cref="T:Amazon.Signer.Model.InternalServiceErrorException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.Signer.Model.ResourceNotFoundException">
            A specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.Signer.Model.ServiceLimitExceededException">
            The client is making a request that exceeds service limits.
            </exception>
            <exception cref="T:Amazon.Signer.Model.TooManyRequestsException">
            The allowed number of job-signing requests has been exceeded.
            
             
            <para>
            This error supersedes the error <code>ThrottlingException</code>.
            </para>
            </exception>
            <exception cref="T:Amazon.Signer.Model.ValidationException">
            You signing certificate could not be validated.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/signer-2017-08-25/AddProfilePermission">REST API Reference for AddProfilePermission Operation</seealso>
        </member>
        <member name="M:Amazon.Signer.AmazonSignerClient.AddProfilePermissionAsync(Amazon.Signer.Model.AddProfilePermissionRequest,System.Threading.CancellationToken)">
            <summary>
            Adds cross-account permissions to a signing profile.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AddProfilePermission service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AddProfilePermission service method, as returned by Signer.</returns>
            <exception cref="T:Amazon.Signer.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Signer.Model.ConflictException">
            The resource encountered a conflicting state.
            </exception>
            <exception cref="T:Amazon.Signer.Model.InternalServiceErrorException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.Signer.Model.ResourceNotFoundException">
            A specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.Signer.Model.ServiceLimitExceededException">
            The client is making a request that exceeds service limits.
            </exception>
            <exception cref="T:Amazon.Signer.Model.TooManyRequestsException">
            The allowed number of job-signing requests has been exceeded.
            
             
            <para>
            This error supersedes the error <code>ThrottlingException</code>.
            </para>
            </exception>
            <exception cref="T:Amazon.Signer.Model.ValidationException">
            You signing certificate could not be validated.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/signer-2017-08-25/AddProfilePermission">REST API Reference for AddProfilePermission Operation</seealso>
        </member>
        <member name="M:Amazon.Signer.AmazonSignerClient.CancelSigningProfile(Amazon.Signer.Model.CancelSigningProfileRequest)">
            <summary>
            Changes the state of an <code>ACTIVE</code> signing profile to <code>CANCELED</code>.
            A canceled profile is still viewable with the <code>ListSigningProfiles</code> operation,
            but it cannot perform new signing jobs, and is deleted two years after cancelation.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CancelSigningProfile service method.</param>
            
            <returns>The response from the CancelSigningProfile service method, as returned by Signer.</returns>
            <exception cref="T:Amazon.Signer.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Signer.Model.InternalServiceErrorException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.Signer.Model.ResourceNotFoundException">
            A specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.Signer.Model.TooManyRequestsException">
            The allowed number of job-signing requests has been exceeded.
            
             
            <para>
            This error supersedes the error <code>ThrottlingException</code>.
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/signer-2017-08-25/CancelSigningProfile">REST API Reference for CancelSigningProfile Operation</seealso>
        </member>
        <member name="M:Amazon.Signer.AmazonSignerClient.CancelSigningProfileAsync(Amazon.Signer.Model.CancelSigningProfileRequest,System.Threading.CancellationToken)">
            <summary>
            Changes the state of an <code>ACTIVE</code> signing profile to <code>CANCELED</code>.
            A canceled profile is still viewable with the <code>ListSigningProfiles</code> operation,
            but it cannot perform new signing jobs, and is deleted two years after cancelation.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CancelSigningProfile service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CancelSigningProfile service method, as returned by Signer.</returns>
            <exception cref="T:Amazon.Signer.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Signer.Model.InternalServiceErrorException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.Signer.Model.ResourceNotFoundException">
            A specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.Signer.Model.TooManyRequestsException">
            The allowed number of job-signing requests has been exceeded.
            
             
            <para>
            This error supersedes the error <code>ThrottlingException</code>.
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/signer-2017-08-25/CancelSigningProfile">REST API Reference for CancelSigningProfile Operation</seealso>
        </member>
        <member name="M:Amazon.Signer.AmazonSignerClient.DescribeSigningJob(Amazon.Signer.Model.DescribeSigningJobRequest)">
            <summary>
            Returns information about a specific code signing job. You specify the job by using
            the <code>jobId</code> value that is returned by the <a>StartSigningJob</a> operation.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeSigningJob service method.</param>
            
            <returns>The response from the DescribeSigningJob service method, as returned by Signer.</returns>
            <exception cref="T:Amazon.Signer.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Signer.Model.InternalServiceErrorException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.Signer.Model.ResourceNotFoundException">
            A specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.Signer.Model.TooManyRequestsException">
            The allowed number of job-signing requests has been exceeded.
            
             
            <para>
            This error supersedes the error <code>ThrottlingException</code>.
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/signer-2017-08-25/DescribeSigningJob">REST API Reference for DescribeSigningJob Operation</seealso>
        </member>
        <member name="M:Amazon.Signer.AmazonSignerClient.DescribeSigningJobAsync(Amazon.Signer.Model.DescribeSigningJobRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about a specific code signing job. You specify the job by using
            the <code>jobId</code> value that is returned by the <a>StartSigningJob</a> operation.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeSigningJob service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeSigningJob service method, as returned by Signer.</returns>
            <exception cref="T:Amazon.Signer.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Signer.Model.InternalServiceErrorException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.Signer.Model.ResourceNotFoundException">
            A specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.Signer.Model.TooManyRequestsException">
            The allowed number of job-signing requests has been exceeded.
            
             
            <para>
            This error supersedes the error <code>ThrottlingException</code>.
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/signer-2017-08-25/DescribeSigningJob">REST API Reference for DescribeSigningJob Operation</seealso>
        </member>
        <member name="M:Amazon.Signer.AmazonSignerClient.GetSigningPlatform(Amazon.Signer.Model.GetSigningPlatformRequest)">
            <summary>
            Returns information on a specific signing platform.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSigningPlatform service method.</param>
            
            <returns>The response from the GetSigningPlatform service method, as returned by Signer.</returns>
            <exception cref="T:Amazon.Signer.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Signer.Model.InternalServiceErrorException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.Signer.Model.ResourceNotFoundException">
            A specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.Signer.Model.TooManyRequestsException">
            The allowed number of job-signing requests has been exceeded.
            
             
            <para>
            This error supersedes the error <code>ThrottlingException</code>.
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/signer-2017-08-25/GetSigningPlatform">REST API Reference for GetSigningPlatform Operation</seealso>
        </member>
        <member name="M:Amazon.Signer.AmazonSignerClient.GetSigningPlatformAsync(Amazon.Signer.Model.GetSigningPlatformRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information on a specific signing platform.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSigningPlatform service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetSigningPlatform service method, as returned by Signer.</returns>
            <exception cref="T:Amazon.Signer.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Signer.Model.InternalServiceErrorException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.Signer.Model.ResourceNotFoundException">
            A specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.Signer.Model.TooManyRequestsException">
            The allowed number of job-signing requests has been exceeded.
            
             
            <para>
            This error supersedes the error <code>ThrottlingException</code>.
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/signer-2017-08-25/GetSigningPlatform">REST API Reference for GetSigningPlatform Operation</seealso>
        </member>
        <member name="M:Amazon.Signer.AmazonSignerClient.GetSigningProfile(Amazon.Signer.Model.GetSigningProfileRequest)">
            <summary>
            Returns information on a specific signing profile.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSigningProfile service method.</param>
            
            <returns>The response from the GetSigningProfile service method, as returned by Signer.</returns>
            <exception cref="T:Amazon.Signer.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Signer.Model.InternalServiceErrorException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.Signer.Model.ResourceNotFoundException">
            A specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.Signer.Model.TooManyRequestsException">
            The allowed number of job-signing requests has been exceeded.
            
             
            <para>
            This error supersedes the error <code>ThrottlingException</code>.
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/signer-2017-08-25/GetSigningProfile">REST API Reference for GetSigningProfile Operation</seealso>
        </member>
        <member name="M:Amazon.Signer.AmazonSignerClient.GetSigningProfileAsync(Amazon.Signer.Model.GetSigningProfileRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information on a specific signing profile.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSigningProfile service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetSigningProfile service method, as returned by Signer.</returns>
            <exception cref="T:Amazon.Signer.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Signer.Model.InternalServiceErrorException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.Signer.Model.ResourceNotFoundException">
            A specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.Signer.Model.TooManyRequestsException">
            The allowed number of job-signing requests has been exceeded.
            
             
            <para>
            This error supersedes the error <code>ThrottlingException</code>.
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/signer-2017-08-25/GetSigningProfile">REST API Reference for GetSigningProfile Operation</seealso>
        </member>
        <member name="M:Amazon.Signer.AmazonSignerClient.ListProfilePermissions(Amazon.Signer.Model.ListProfilePermissionsRequest)">
            <summary>
            Lists the cross-account permissions associated with a signing profile.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListProfilePermissions service method.</param>
            
            <returns>The response from the ListProfilePermissions service method, as returned by Signer.</returns>
            <exception cref="T:Amazon.Signer.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Signer.Model.InternalServiceErrorException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.Signer.Model.ResourceNotFoundException">
            A specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.Signer.Model.TooManyRequestsException">
            The allowed number of job-signing requests has been exceeded.
            
             
            <para>
            This error supersedes the error <code>ThrottlingException</code>.
            </para>
            </exception>
            <exception cref="T:Amazon.Signer.Model.ValidationException">
            You signing certificate could not be validated.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/signer-2017-08-25/ListProfilePermissions">REST API Reference for ListProfilePermissions Operation</seealso>
        </member>
        <member name="M:Amazon.Signer.AmazonSignerClient.ListProfilePermissionsAsync(Amazon.Signer.Model.ListProfilePermissionsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the cross-account permissions associated with a signing profile.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListProfilePermissions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListProfilePermissions service method, as returned by Signer.</returns>
            <exception cref="T:Amazon.Signer.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Signer.Model.InternalServiceErrorException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.Signer.Model.ResourceNotFoundException">
            A specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.Signer.Model.TooManyRequestsException">
            The allowed number of job-signing requests has been exceeded.
            
             
            <para>
            This error supersedes the error <code>ThrottlingException</code>.
            </para>
            </exception>
            <exception cref="T:Amazon.Signer.Model.ValidationException">
            You signing certificate could not be validated.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/signer-2017-08-25/ListProfilePermissions">REST API Reference for ListProfilePermissions Operation</seealso>
        </member>
        <member name="M:Amazon.Signer.AmazonSignerClient.ListSigningJobs(Amazon.Signer.Model.ListSigningJobsRequest)">
            <summary>
            Lists all your signing jobs. You can use the <code>maxResults</code> parameter to
            limit the number of signing jobs that are returned in the response. If additional
            jobs remain to be listed, code signing returns a <code>nextToken</code> value. Use
            this value in subsequent calls to <code>ListSigningJobs</code> to fetch the remaining
            values. You can continue calling <code>ListSigningJobs</code> with your <code>maxResults</code>
            parameter and with new values that code signing returns in the <code>nextToken</code>
            parameter until all of your signing jobs have been returned.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListSigningJobs service method.</param>
            
            <returns>The response from the ListSigningJobs service method, as returned by Signer.</returns>
            <exception cref="T:Amazon.Signer.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Signer.Model.InternalServiceErrorException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.Signer.Model.TooManyRequestsException">
            The allowed number of job-signing requests has been exceeded.
            
             
            <para>
            This error supersedes the error <code>ThrottlingException</code>.
            </para>
            </exception>
            <exception cref="T:Amazon.Signer.Model.ValidationException">
            You signing certificate could not be validated.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/signer-2017-08-25/ListSigningJobs">REST API Reference for ListSigningJobs Operation</seealso>
        </member>
        <member name="M:Amazon.Signer.AmazonSignerClient.ListSigningJobsAsync(Amazon.Signer.Model.ListSigningJobsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all your signing jobs. You can use the <code>maxResults</code> parameter to
            limit the number of signing jobs that are returned in the response. If additional
            jobs remain to be listed, code signing returns a <code>nextToken</code> value. Use
            this value in subsequent calls to <code>ListSigningJobs</code> to fetch the remaining
            values. You can continue calling <code>ListSigningJobs</code> with your <code>maxResults</code>
            parameter and with new values that code signing returns in the <code>nextToken</code>
            parameter until all of your signing jobs have been returned.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListSigningJobs service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListSigningJobs service method, as returned by Signer.</returns>
            <exception cref="T:Amazon.Signer.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Signer.Model.InternalServiceErrorException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.Signer.Model.TooManyRequestsException">
            The allowed number of job-signing requests has been exceeded.
            
             
            <para>
            This error supersedes the error <code>ThrottlingException</code>.
            </para>
            </exception>
            <exception cref="T:Amazon.Signer.Model.ValidationException">
            You signing certificate could not be validated.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/signer-2017-08-25/ListSigningJobs">REST API Reference for ListSigningJobs Operation</seealso>
        </member>
        <member name="M:Amazon.Signer.AmazonSignerClient.ListSigningPlatforms(Amazon.Signer.Model.ListSigningPlatformsRequest)">
            <summary>
            Lists all signing platforms available in code signing that match the request parameters.
            If additional jobs remain to be listed, code signing returns a <code>nextToken</code>
            value. Use this value in subsequent calls to <code>ListSigningJobs</code> to fetch
            the remaining values. You can continue calling <code>ListSigningJobs</code> with your
            <code>maxResults</code> parameter and with new values that code signing returns in
            the <code>nextToken</code> parameter until all of your signing jobs have been returned.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListSigningPlatforms service method.</param>
            
            <returns>The response from the ListSigningPlatforms service method, as returned by Signer.</returns>
            <exception cref="T:Amazon.Signer.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Signer.Model.InternalServiceErrorException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.Signer.Model.TooManyRequestsException">
            The allowed number of job-signing requests has been exceeded.
            
             
            <para>
            This error supersedes the error <code>ThrottlingException</code>.
            </para>
            </exception>
            <exception cref="T:Amazon.Signer.Model.ValidationException">
            You signing certificate could not be validated.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/signer-2017-08-25/ListSigningPlatforms">REST API Reference for ListSigningPlatforms Operation</seealso>
        </member>
        <member name="M:Amazon.Signer.AmazonSignerClient.ListSigningPlatformsAsync(Amazon.Signer.Model.ListSigningPlatformsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all signing platforms available in code signing that match the request parameters.
            If additional jobs remain to be listed, code signing returns a <code>nextToken</code>
            value. Use this value in subsequent calls to <code>ListSigningJobs</code> to fetch
            the remaining values. You can continue calling <code>ListSigningJobs</code> with your
            <code>maxResults</code> parameter and with new values that code signing returns in
            the <code>nextToken</code> parameter until all of your signing jobs have been returned.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListSigningPlatforms service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListSigningPlatforms service method, as returned by Signer.</returns>
            <exception cref="T:Amazon.Signer.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Signer.Model.InternalServiceErrorException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.Signer.Model.TooManyRequestsException">
            The allowed number of job-signing requests has been exceeded.
            
             
            <para>
            This error supersedes the error <code>ThrottlingException</code>.
            </para>
            </exception>
            <exception cref="T:Amazon.Signer.Model.ValidationException">
            You signing certificate could not be validated.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/signer-2017-08-25/ListSigningPlatforms">REST API Reference for ListSigningPlatforms Operation</seealso>
        </member>
        <member name="M:Amazon.Signer.AmazonSignerClient.ListSigningProfiles(Amazon.Signer.Model.ListSigningProfilesRequest)">
            <summary>
            Lists all available signing profiles in your AWS account. Returns only profiles with
            an <code>ACTIVE</code> status unless the <code>includeCanceled</code> request field
            is set to <code>true</code>. If additional jobs remain to be listed, code signing
            returns a <code>nextToken</code> value. Use this value in subsequent calls to <code>ListSigningJobs</code>
            to fetch the remaining values. You can continue calling <code>ListSigningJobs</code>
            with your <code>maxResults</code> parameter and with new values that code signing
            returns in the <code>nextToken</code> parameter until all of your signing jobs have
            been returned.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListSigningProfiles service method.</param>
            
            <returns>The response from the ListSigningProfiles service method, as returned by Signer.</returns>
            <exception cref="T:Amazon.Signer.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Signer.Model.InternalServiceErrorException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.Signer.Model.TooManyRequestsException">
            The allowed number of job-signing requests has been exceeded.
            
             
            <para>
            This error supersedes the error <code>ThrottlingException</code>.
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/signer-2017-08-25/ListSigningProfiles">REST API Reference for ListSigningProfiles Operation</seealso>
        </member>
        <member name="M:Amazon.Signer.AmazonSignerClient.ListSigningProfilesAsync(Amazon.Signer.Model.ListSigningProfilesRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all available signing profiles in your AWS account. Returns only profiles with
            an <code>ACTIVE</code> status unless the <code>includeCanceled</code> request field
            is set to <code>true</code>. If additional jobs remain to be listed, code signing
            returns a <code>nextToken</code> value. Use this value in subsequent calls to <code>ListSigningJobs</code>
            to fetch the remaining values. You can continue calling <code>ListSigningJobs</code>
            with your <code>maxResults</code> parameter and with new values that code signing
            returns in the <code>nextToken</code> parameter until all of your signing jobs have
            been returned.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListSigningProfiles service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListSigningProfiles service method, as returned by Signer.</returns>
            <exception cref="T:Amazon.Signer.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Signer.Model.InternalServiceErrorException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.Signer.Model.TooManyRequestsException">
            The allowed number of job-signing requests has been exceeded.
            
             
            <para>
            This error supersedes the error <code>ThrottlingException</code>.
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/signer-2017-08-25/ListSigningProfiles">REST API Reference for ListSigningProfiles Operation</seealso>
        </member>
        <member name="M:Amazon.Signer.AmazonSignerClient.ListTagsForResource(Amazon.Signer.Model.ListTagsForResourceRequest)">
            <summary>
            Returns a list of the tags associated with a signing profile resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            
            <returns>The response from the ListTagsForResource service method, as returned by Signer.</returns>
            <exception cref="T:Amazon.Signer.Model.BadRequestException">
            The request contains invalid parameters for the ARN or tags. This exception also occurs
            when you call a tagging API on a cancelled signing profile.
            </exception>
            <exception cref="T:Amazon.Signer.Model.InternalServiceErrorException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.Signer.Model.NotFoundException">
            The signing profile was not found.
            </exception>
            <exception cref="T:Amazon.Signer.Model.TooManyRequestsException">
            The allowed number of job-signing requests has been exceeded.
            
             
            <para>
            This error supersedes the error <code>ThrottlingException</code>.
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/signer-2017-08-25/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.Signer.AmazonSignerClient.ListTagsForResourceAsync(Amazon.Signer.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of the tags associated with a signing profile resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by Signer.</returns>
            <exception cref="T:Amazon.Signer.Model.BadRequestException">
            The request contains invalid parameters for the ARN or tags. This exception also occurs
            when you call a tagging API on a cancelled signing profile.
            </exception>
            <exception cref="T:Amazon.Signer.Model.InternalServiceErrorException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.Signer.Model.NotFoundException">
            The signing profile was not found.
            </exception>
            <exception cref="T:Amazon.Signer.Model.TooManyRequestsException">
            The allowed number of job-signing requests has been exceeded.
            
             
            <para>
            This error supersedes the error <code>ThrottlingException</code>.
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/signer-2017-08-25/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.Signer.AmazonSignerClient.PutSigningProfile(Amazon.Signer.Model.PutSigningProfileRequest)">
            <summary>
            Creates a signing profile. A signing profile is a code signing template that can be
            used to carry out a pre-defined signing job. For more information, see <a href="http://docs.aws.amazon.com/signer/latest/developerguide/gs-profile.html">http://docs.aws.amazon.com/signer/latest/developerguide/gs-profile.html</a>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutSigningProfile service method.</param>
            
            <returns>The response from the PutSigningProfile service method, as returned by Signer.</returns>
            <exception cref="T:Amazon.Signer.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Signer.Model.InternalServiceErrorException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.Signer.Model.ResourceNotFoundException">
            A specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.Signer.Model.TooManyRequestsException">
            The allowed number of job-signing requests has been exceeded.
            
             
            <para>
            This error supersedes the error <code>ThrottlingException</code>.
            </para>
            </exception>
            <exception cref="T:Amazon.Signer.Model.ValidationException">
            You signing certificate could not be validated.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/signer-2017-08-25/PutSigningProfile">REST API Reference for PutSigningProfile Operation</seealso>
        </member>
        <member name="M:Amazon.Signer.AmazonSignerClient.PutSigningProfileAsync(Amazon.Signer.Model.PutSigningProfileRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a signing profile. A signing profile is a code signing template that can be
            used to carry out a pre-defined signing job. For more information, see <a href="http://docs.aws.amazon.com/signer/latest/developerguide/gs-profile.html">http://docs.aws.amazon.com/signer/latest/developerguide/gs-profile.html</a>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutSigningProfile service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutSigningProfile service method, as returned by Signer.</returns>
            <exception cref="T:Amazon.Signer.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Signer.Model.InternalServiceErrorException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.Signer.Model.ResourceNotFoundException">
            A specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.Signer.Model.TooManyRequestsException">
            The allowed number of job-signing requests has been exceeded.
            
             
            <para>
            This error supersedes the error <code>ThrottlingException</code>.
            </para>
            </exception>
            <exception cref="T:Amazon.Signer.Model.ValidationException">
            You signing certificate could not be validated.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/signer-2017-08-25/PutSigningProfile">REST API Reference for PutSigningProfile Operation</seealso>
        </member>
        <member name="M:Amazon.Signer.AmazonSignerClient.RemoveProfilePermission(Amazon.Signer.Model.RemoveProfilePermissionRequest)">
            <summary>
            Removes cross-account permissions from a signing profile.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RemoveProfilePermission service method.</param>
            
            <returns>The response from the RemoveProfilePermission service method, as returned by Signer.</returns>
            <exception cref="T:Amazon.Signer.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Signer.Model.ConflictException">
            The resource encountered a conflicting state.
            </exception>
            <exception cref="T:Amazon.Signer.Model.InternalServiceErrorException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.Signer.Model.ResourceNotFoundException">
            A specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.Signer.Model.TooManyRequestsException">
            The allowed number of job-signing requests has been exceeded.
            
             
            <para>
            This error supersedes the error <code>ThrottlingException</code>.
            </para>
            </exception>
            <exception cref="T:Amazon.Signer.Model.ValidationException">
            You signing certificate could not be validated.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/signer-2017-08-25/RemoveProfilePermission">REST API Reference for RemoveProfilePermission Operation</seealso>
        </member>
        <member name="M:Amazon.Signer.AmazonSignerClient.RemoveProfilePermissionAsync(Amazon.Signer.Model.RemoveProfilePermissionRequest,System.Threading.CancellationToken)">
            <summary>
            Removes cross-account permissions from a signing profile.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RemoveProfilePermission service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RemoveProfilePermission service method, as returned by Signer.</returns>
            <exception cref="T:Amazon.Signer.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Signer.Model.ConflictException">
            The resource encountered a conflicting state.
            </exception>
            <exception cref="T:Amazon.Signer.Model.InternalServiceErrorException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.Signer.Model.ResourceNotFoundException">
            A specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.Signer.Model.TooManyRequestsException">
            The allowed number of job-signing requests has been exceeded.
            
             
            <para>
            This error supersedes the error <code>ThrottlingException</code>.
            </para>
            </exception>
            <exception cref="T:Amazon.Signer.Model.ValidationException">
            You signing certificate could not be validated.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/signer-2017-08-25/RemoveProfilePermission">REST API Reference for RemoveProfilePermission Operation</seealso>
        </member>
        <member name="M:Amazon.Signer.AmazonSignerClient.RevokeSignature(Amazon.Signer.Model.RevokeSignatureRequest)">
            <summary>
            Changes the state of a signing job to REVOKED. This indicates that the signature is
            no longer valid.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RevokeSignature service method.</param>
            
            <returns>The response from the RevokeSignature service method, as returned by Signer.</returns>
            <exception cref="T:Amazon.Signer.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Signer.Model.InternalServiceErrorException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.Signer.Model.ResourceNotFoundException">
            A specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.Signer.Model.TooManyRequestsException">
            The allowed number of job-signing requests has been exceeded.
            
             
            <para>
            This error supersedes the error <code>ThrottlingException</code>.
            </para>
            </exception>
            <exception cref="T:Amazon.Signer.Model.ValidationException">
            You signing certificate could not be validated.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/signer-2017-08-25/RevokeSignature">REST API Reference for RevokeSignature Operation</seealso>
        </member>
        <member name="M:Amazon.Signer.AmazonSignerClient.RevokeSignatureAsync(Amazon.Signer.Model.RevokeSignatureRequest,System.Threading.CancellationToken)">
            <summary>
            Changes the state of a signing job to REVOKED. This indicates that the signature is
            no longer valid.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RevokeSignature service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RevokeSignature service method, as returned by Signer.</returns>
            <exception cref="T:Amazon.Signer.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Signer.Model.InternalServiceErrorException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.Signer.Model.ResourceNotFoundException">
            A specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.Signer.Model.TooManyRequestsException">
            The allowed number of job-signing requests has been exceeded.
            
             
            <para>
            This error supersedes the error <code>ThrottlingException</code>.
            </para>
            </exception>
            <exception cref="T:Amazon.Signer.Model.ValidationException">
            You signing certificate could not be validated.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/signer-2017-08-25/RevokeSignature">REST API Reference for RevokeSignature Operation</seealso>
        </member>
        <member name="M:Amazon.Signer.AmazonSignerClient.RevokeSigningProfile(Amazon.Signer.Model.RevokeSigningProfileRequest)">
            <summary>
            Changes the state of a signing profile to REVOKED. This indicates that signatures
            generated using the signing profile after an effective start date are no longer valid.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RevokeSigningProfile service method.</param>
            
            <returns>The response from the RevokeSigningProfile service method, as returned by Signer.</returns>
            <exception cref="T:Amazon.Signer.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Signer.Model.InternalServiceErrorException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.Signer.Model.ResourceNotFoundException">
            A specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.Signer.Model.TooManyRequestsException">
            The allowed number of job-signing requests has been exceeded.
            
             
            <para>
            This error supersedes the error <code>ThrottlingException</code>.
            </para>
            </exception>
            <exception cref="T:Amazon.Signer.Model.ValidationException">
            You signing certificate could not be validated.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/signer-2017-08-25/RevokeSigningProfile">REST API Reference for RevokeSigningProfile Operation</seealso>
        </member>
        <member name="M:Amazon.Signer.AmazonSignerClient.RevokeSigningProfileAsync(Amazon.Signer.Model.RevokeSigningProfileRequest,System.Threading.CancellationToken)">
            <summary>
            Changes the state of a signing profile to REVOKED. This indicates that signatures
            generated using the signing profile after an effective start date are no longer valid.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RevokeSigningProfile service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RevokeSigningProfile service method, as returned by Signer.</returns>
            <exception cref="T:Amazon.Signer.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Signer.Model.InternalServiceErrorException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.Signer.Model.ResourceNotFoundException">
            A specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.Signer.Model.TooManyRequestsException">
            The allowed number of job-signing requests has been exceeded.
            
             
            <para>
            This error supersedes the error <code>ThrottlingException</code>.
            </para>
            </exception>
            <exception cref="T:Amazon.Signer.Model.ValidationException">
            You signing certificate could not be validated.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/signer-2017-08-25/RevokeSigningProfile">REST API Reference for RevokeSigningProfile Operation</seealso>
        </member>
        <member name="M:Amazon.Signer.AmazonSignerClient.StartSigningJob(Amazon.Signer.Model.StartSigningJobRequest)">
            <summary>
            Initiates a signing job to be performed on the code provided. Signing jobs are viewable
            by the <code>ListSigningJobs</code> operation for two years after they are performed.
            Note the following requirements: 
            
             <ul> <li> 
            <para>
             You must create an Amazon S3 source bucket. For more information, see <a href="http://docs.aws.amazon.com/AmazonS3/latest/gsg/CreatingABucket.html">Create
            a Bucket</a> in the <i>Amazon S3 Getting Started Guide</i>. 
            </para>
             </li> <li> 
            <para>
            Your S3 source bucket must be version enabled.
            </para>
             </li> <li> 
            <para>
            You must create an S3 destination bucket. Code signing uses your S3 destination bucket
            to write your signed code.
            </para>
             </li> <li> 
            <para>
            You specify the name of the source and destination buckets when calling the <code>StartSigningJob</code>
            operation.
            </para>
             </li> <li> 
            <para>
            You must also specify a request token that identifies your request to code signing.
            </para>
             </li> </ul> 
            <para>
            You can call the <a>DescribeSigningJob</a> and the <a>ListSigningJobs</a> actions
            after you call <code>StartSigningJob</code>.
            </para>
             
            <para>
            For a Java example that shows how to use this action, see <a href="http://docs.aws.amazon.com/acm/latest/userguide/">http://docs.aws.amazon.com/acm/latest/userguide/</a>
            
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartSigningJob service method.</param>
            
            <returns>The response from the StartSigningJob service method, as returned by Signer.</returns>
            <exception cref="T:Amazon.Signer.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Signer.Model.InternalServiceErrorException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.Signer.Model.ResourceNotFoundException">
            A specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.Signer.Model.ThrottlingException">
            The request was denied due to request throttling.
            
             
            <para>
            Instead of this error, <code>TooManyRequestsException</code> should be used.
            </para>
            </exception>
            <exception cref="T:Amazon.Signer.Model.TooManyRequestsException">
            The allowed number of job-signing requests has been exceeded.
            
             
            <para>
            This error supersedes the error <code>ThrottlingException</code>.
            </para>
            </exception>
            <exception cref="T:Amazon.Signer.Model.ValidationException">
            You signing certificate could not be validated.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/signer-2017-08-25/StartSigningJob">REST API Reference for StartSigningJob Operation</seealso>
        </member>
        <member name="M:Amazon.Signer.AmazonSignerClient.StartSigningJobAsync(Amazon.Signer.Model.StartSigningJobRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates a signing job to be performed on the code provided. Signing jobs are viewable
            by the <code>ListSigningJobs</code> operation for two years after they are performed.
            Note the following requirements: 
            
             <ul> <li> 
            <para>
             You must create an Amazon S3 source bucket. For more information, see <a href="http://docs.aws.amazon.com/AmazonS3/latest/gsg/CreatingABucket.html">Create
            a Bucket</a> in the <i>Amazon S3 Getting Started Guide</i>. 
            </para>
             </li> <li> 
            <para>
            Your S3 source bucket must be version enabled.
            </para>
             </li> <li> 
            <para>
            You must create an S3 destination bucket. Code signing uses your S3 destination bucket
            to write your signed code.
            </para>
             </li> <li> 
            <para>
            You specify the name of the source and destination buckets when calling the <code>StartSigningJob</code>
            operation.
            </para>
             </li> <li> 
            <para>
            You must also specify a request token that identifies your request to code signing.
            </para>
             </li> </ul> 
            <para>
            You can call the <a>DescribeSigningJob</a> and the <a>ListSigningJobs</a> actions
            after you call <code>StartSigningJob</code>.
            </para>
             
            <para>
            For a Java example that shows how to use this action, see <a href="http://docs.aws.amazon.com/acm/latest/userguide/">http://docs.aws.amazon.com/acm/latest/userguide/</a>
            
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartSigningJob service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartSigningJob service method, as returned by Signer.</returns>
            <exception cref="T:Amazon.Signer.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Signer.Model.InternalServiceErrorException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.Signer.Model.ResourceNotFoundException">
            A specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.Signer.Model.ThrottlingException">
            The request was denied due to request throttling.
            
             
            <para>
            Instead of this error, <code>TooManyRequestsException</code> should be used.
            </para>
            </exception>
            <exception cref="T:Amazon.Signer.Model.TooManyRequestsException">
            The allowed number of job-signing requests has been exceeded.
            
             
            <para>
            This error supersedes the error <code>ThrottlingException</code>.
            </para>
            </exception>
            <exception cref="T:Amazon.Signer.Model.ValidationException">
            You signing certificate could not be validated.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/signer-2017-08-25/StartSigningJob">REST API Reference for StartSigningJob Operation</seealso>
        </member>
        <member name="M:Amazon.Signer.AmazonSignerClient.TagResource(Amazon.Signer.Model.TagResourceRequest)">
            <summary>
            Adds one or more tags to a signing profile. Tags are labels that you can use to identify
            and organize your AWS resources. Each tag consists of a key and an optional value.
            To specify the signing profile, use its Amazon Resource Name (ARN). To specify the
            tag, use a key-value pair.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            
            <returns>The response from the TagResource service method, as returned by Signer.</returns>
            <exception cref="T:Amazon.Signer.Model.BadRequestException">
            The request contains invalid parameters for the ARN or tags. This exception also occurs
            when you call a tagging API on a cancelled signing profile.
            </exception>
            <exception cref="T:Amazon.Signer.Model.InternalServiceErrorException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.Signer.Model.NotFoundException">
            The signing profile was not found.
            </exception>
            <exception cref="T:Amazon.Signer.Model.TooManyRequestsException">
            The allowed number of job-signing requests has been exceeded.
            
             
            <para>
            This error supersedes the error <code>ThrottlingException</code>.
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/signer-2017-08-25/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.Signer.AmazonSignerClient.TagResourceAsync(Amazon.Signer.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Adds one or more tags to a signing profile. Tags are labels that you can use to identify
            and organize your AWS resources. Each tag consists of a key and an optional value.
            To specify the signing profile, use its Amazon Resource Name (ARN). To specify the
            tag, use a key-value pair.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by Signer.</returns>
            <exception cref="T:Amazon.Signer.Model.BadRequestException">
            The request contains invalid parameters for the ARN or tags. This exception also occurs
            when you call a tagging API on a cancelled signing profile.
            </exception>
            <exception cref="T:Amazon.Signer.Model.InternalServiceErrorException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.Signer.Model.NotFoundException">
            The signing profile was not found.
            </exception>
            <exception cref="T:Amazon.Signer.Model.TooManyRequestsException">
            The allowed number of job-signing requests has been exceeded.
            
             
            <para>
            This error supersedes the error <code>ThrottlingException</code>.
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/signer-2017-08-25/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.Signer.AmazonSignerClient.UntagResource(Amazon.Signer.Model.UntagResourceRequest)">
            <summary>
            Removes one or more tags from a signing profile. To remove the tags, specify a list
            of tag keys.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            
            <returns>The response from the UntagResource service method, as returned by Signer.</returns>
            <exception cref="T:Amazon.Signer.Model.BadRequestException">
            The request contains invalid parameters for the ARN or tags. This exception also occurs
            when you call a tagging API on a cancelled signing profile.
            </exception>
            <exception cref="T:Amazon.Signer.Model.InternalServiceErrorException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.Signer.Model.NotFoundException">
            The signing profile was not found.
            </exception>
            <exception cref="T:Amazon.Signer.Model.TooManyRequestsException">
            The allowed number of job-signing requests has been exceeded.
            
             
            <para>
            This error supersedes the error <code>ThrottlingException</code>.
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/signer-2017-08-25/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.Signer.AmazonSignerClient.UntagResourceAsync(Amazon.Signer.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Removes one or more tags from a signing profile. To remove the tags, specify a list
            of tag keys.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by Signer.</returns>
            <exception cref="T:Amazon.Signer.Model.BadRequestException">
            The request contains invalid parameters for the ARN or tags. This exception also occurs
            when you call a tagging API on a cancelled signing profile.
            </exception>
            <exception cref="T:Amazon.Signer.Model.InternalServiceErrorException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.Signer.Model.NotFoundException">
            The signing profile was not found.
            </exception>
            <exception cref="T:Amazon.Signer.Model.TooManyRequestsException">
            The allowed number of job-signing requests has been exceeded.
            
             
            <para>
            This error supersedes the error <code>ThrottlingException</code>.
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/signer-2017-08-25/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="T:Amazon.Signer.IAmazonSigner">
             <summary>
             Interface for accessing Signer
            
             AWS Signer is a fully managed code signing service to help you ensure the trust and
             integrity of your code. 
             
              
             <para>
             AWS Signer supports the following applications:
             </para>
              
             <para>
             With <i>code signing for AWS Lambda</i>, you can sign AWS Lambda deployment packages.
             Integrated support is provided for Amazon S3, Amazon CloudWatch, and AWS CloudTrail.
             In order to sign code, you create a signing profile and then use Signer to sign Lambda
             zip files in S3. 
             </para>
              
             <para>
             With <i>code signing for IoT</i>, you can sign code for any IoT device that is supported
             by AWS. IoT code signing is available for <a href="http://docs.aws.amazon.com/freertos/latest/userguide/">Amazon
             FreeRTOS</a> and <a href="http://docs.aws.amazon.com/iot/latest/developerguide/">AWS
             IoT Device Management</a>, and is integrated with <a href="http://docs.aws.amazon.com/acm/latest/userguide/">AWS
             Certificate Manager (ACM)</a>. In order to sign code, you import a third-party code
             signing certificate using ACM, and use that to sign updates in Amazon FreeRTOS and
             AWS IoT Device Management. 
             </para>
              
             <para>
             For more information about AWS Signer, see the <a href="http://docs.aws.amazon.com/signer/latest/developerguide/Welcome.html">AWS
             Signer Developer Guide</a>.
             </para>
             </summary>
        </member>
        <member name="P:Amazon.Signer.IAmazonSigner.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.Signer.IAmazonSigner.AddProfilePermission(Amazon.Signer.Model.AddProfilePermissionRequest)">
            <summary>
            Adds cross-account permissions to a signing profile.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AddProfilePermission service method.</param>
            
            <returns>The response from the AddProfilePermission service method, as returned by Signer.</returns>
            <exception cref="T:Amazon.Signer.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Signer.Model.ConflictException">
            The resource encountered a conflicting state.
            </exception>
            <exception cref="T:Amazon.Signer.Model.InternalServiceErrorException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.Signer.Model.ResourceNotFoundException">
            A specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.Signer.Model.ServiceLimitExceededException">
            The client is making a request that exceeds service limits.
            </exception>
            <exception cref="T:Amazon.Signer.Model.TooManyRequestsException">
            The allowed number of job-signing requests has been exceeded.
            
             
            <para>
            This error supersedes the error <code>ThrottlingException</code>.
            </para>
            </exception>
            <exception cref="T:Amazon.Signer.Model.ValidationException">
            You signing certificate could not be validated.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/signer-2017-08-25/AddProfilePermission">REST API Reference for AddProfilePermission Operation</seealso>
        </member>
        <member name="M:Amazon.Signer.IAmazonSigner.AddProfilePermissionAsync(Amazon.Signer.Model.AddProfilePermissionRequest,System.Threading.CancellationToken)">
            <summary>
            Adds cross-account permissions to a signing profile.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AddProfilePermission service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AddProfilePermission service method, as returned by Signer.</returns>
            <exception cref="T:Amazon.Signer.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Signer.Model.ConflictException">
            The resource encountered a conflicting state.
            </exception>
            <exception cref="T:Amazon.Signer.Model.InternalServiceErrorException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.Signer.Model.ResourceNotFoundException">
            A specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.Signer.Model.ServiceLimitExceededException">
            The client is making a request that exceeds service limits.
            </exception>
            <exception cref="T:Amazon.Signer.Model.TooManyRequestsException">
            The allowed number of job-signing requests has been exceeded.
            
             
            <para>
            This error supersedes the error <code>ThrottlingException</code>.
            </para>
            </exception>
            <exception cref="T:Amazon.Signer.Model.ValidationException">
            You signing certificate could not be validated.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/signer-2017-08-25/AddProfilePermission">REST API Reference for AddProfilePermission Operation</seealso>
        </member>
        <member name="M:Amazon.Signer.IAmazonSigner.CancelSigningProfile(Amazon.Signer.Model.CancelSigningProfileRequest)">
            <summary>
            Changes the state of an <code>ACTIVE</code> signing profile to <code>CANCELED</code>.
            A canceled profile is still viewable with the <code>ListSigningProfiles</code> operation,
            but it cannot perform new signing jobs, and is deleted two years after cancelation.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CancelSigningProfile service method.</param>
            
            <returns>The response from the CancelSigningProfile service method, as returned by Signer.</returns>
            <exception cref="T:Amazon.Signer.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Signer.Model.InternalServiceErrorException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.Signer.Model.ResourceNotFoundException">
            A specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.Signer.Model.TooManyRequestsException">
            The allowed number of job-signing requests has been exceeded.
            
             
            <para>
            This error supersedes the error <code>ThrottlingException</code>.
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/signer-2017-08-25/CancelSigningProfile">REST API Reference for CancelSigningProfile Operation</seealso>
        </member>
        <member name="M:Amazon.Signer.IAmazonSigner.CancelSigningProfileAsync(Amazon.Signer.Model.CancelSigningProfileRequest,System.Threading.CancellationToken)">
            <summary>
            Changes the state of an <code>ACTIVE</code> signing profile to <code>CANCELED</code>.
            A canceled profile is still viewable with the <code>ListSigningProfiles</code> operation,
            but it cannot perform new signing jobs, and is deleted two years after cancelation.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CancelSigningProfile service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CancelSigningProfile service method, as returned by Signer.</returns>
            <exception cref="T:Amazon.Signer.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Signer.Model.InternalServiceErrorException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.Signer.Model.ResourceNotFoundException">
            A specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.Signer.Model.TooManyRequestsException">
            The allowed number of job-signing requests has been exceeded.
            
             
            <para>
            This error supersedes the error <code>ThrottlingException</code>.
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/signer-2017-08-25/CancelSigningProfile">REST API Reference for CancelSigningProfile Operation</seealso>
        </member>
        <member name="M:Amazon.Signer.IAmazonSigner.DescribeSigningJob(Amazon.Signer.Model.DescribeSigningJobRequest)">
            <summary>
            Returns information about a specific code signing job. You specify the job by using
            the <code>jobId</code> value that is returned by the <a>StartSigningJob</a> operation.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeSigningJob service method.</param>
            
            <returns>The response from the DescribeSigningJob service method, as returned by Signer.</returns>
            <exception cref="T:Amazon.Signer.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Signer.Model.InternalServiceErrorException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.Signer.Model.ResourceNotFoundException">
            A specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.Signer.Model.TooManyRequestsException">
            The allowed number of job-signing requests has been exceeded.
            
             
            <para>
            This error supersedes the error <code>ThrottlingException</code>.
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/signer-2017-08-25/DescribeSigningJob">REST API Reference for DescribeSigningJob Operation</seealso>
        </member>
        <member name="M:Amazon.Signer.IAmazonSigner.DescribeSigningJobAsync(Amazon.Signer.Model.DescribeSigningJobRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about a specific code signing job. You specify the job by using
            the <code>jobId</code> value that is returned by the <a>StartSigningJob</a> operation.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeSigningJob service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeSigningJob service method, as returned by Signer.</returns>
            <exception cref="T:Amazon.Signer.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Signer.Model.InternalServiceErrorException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.Signer.Model.ResourceNotFoundException">
            A specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.Signer.Model.TooManyRequestsException">
            The allowed number of job-signing requests has been exceeded.
            
             
            <para>
            This error supersedes the error <code>ThrottlingException</code>.
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/signer-2017-08-25/DescribeSigningJob">REST API Reference for DescribeSigningJob Operation</seealso>
        </member>
        <member name="M:Amazon.Signer.IAmazonSigner.GetSigningPlatform(Amazon.Signer.Model.GetSigningPlatformRequest)">
            <summary>
            Returns information on a specific signing platform.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSigningPlatform service method.</param>
            
            <returns>The response from the GetSigningPlatform service method, as returned by Signer.</returns>
            <exception cref="T:Amazon.Signer.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Signer.Model.InternalServiceErrorException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.Signer.Model.ResourceNotFoundException">
            A specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.Signer.Model.TooManyRequestsException">
            The allowed number of job-signing requests has been exceeded.
            
             
            <para>
            This error supersedes the error <code>ThrottlingException</code>.
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/signer-2017-08-25/GetSigningPlatform">REST API Reference for GetSigningPlatform Operation</seealso>
        </member>
        <member name="M:Amazon.Signer.IAmazonSigner.GetSigningPlatformAsync(Amazon.Signer.Model.GetSigningPlatformRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information on a specific signing platform.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSigningPlatform service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetSigningPlatform service method, as returned by Signer.</returns>
            <exception cref="T:Amazon.Signer.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Signer.Model.InternalServiceErrorException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.Signer.Model.ResourceNotFoundException">
            A specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.Signer.Model.TooManyRequestsException">
            The allowed number of job-signing requests has been exceeded.
            
             
            <para>
            This error supersedes the error <code>ThrottlingException</code>.
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/signer-2017-08-25/GetSigningPlatform">REST API Reference for GetSigningPlatform Operation</seealso>
        </member>
        <member name="M:Amazon.Signer.IAmazonSigner.GetSigningProfile(Amazon.Signer.Model.GetSigningProfileRequest)">
            <summary>
            Returns information on a specific signing profile.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSigningProfile service method.</param>
            
            <returns>The response from the GetSigningProfile service method, as returned by Signer.</returns>
            <exception cref="T:Amazon.Signer.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Signer.Model.InternalServiceErrorException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.Signer.Model.ResourceNotFoundException">
            A specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.Signer.Model.TooManyRequestsException">
            The allowed number of job-signing requests has been exceeded.
            
             
            <para>
            This error supersedes the error <code>ThrottlingException</code>.
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/signer-2017-08-25/GetSigningProfile">REST API Reference for GetSigningProfile Operation</seealso>
        </member>
        <member name="M:Amazon.Signer.IAmazonSigner.GetSigningProfileAsync(Amazon.Signer.Model.GetSigningProfileRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information on a specific signing profile.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSigningProfile service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetSigningProfile service method, as returned by Signer.</returns>
            <exception cref="T:Amazon.Signer.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Signer.Model.InternalServiceErrorException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.Signer.Model.ResourceNotFoundException">
            A specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.Signer.Model.TooManyRequestsException">
            The allowed number of job-signing requests has been exceeded.
            
             
            <para>
            This error supersedes the error <code>ThrottlingException</code>.
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/signer-2017-08-25/GetSigningProfile">REST API Reference for GetSigningProfile Operation</seealso>
        </member>
        <member name="M:Amazon.Signer.IAmazonSigner.ListProfilePermissions(Amazon.Signer.Model.ListProfilePermissionsRequest)">
            <summary>
            Lists the cross-account permissions associated with a signing profile.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListProfilePermissions service method.</param>
            
            <returns>The response from the ListProfilePermissions service method, as returned by Signer.</returns>
            <exception cref="T:Amazon.Signer.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Signer.Model.InternalServiceErrorException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.Signer.Model.ResourceNotFoundException">
            A specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.Signer.Model.TooManyRequestsException">
            The allowed number of job-signing requests has been exceeded.
            
             
            <para>
            This error supersedes the error <code>ThrottlingException</code>.
            </para>
            </exception>
            <exception cref="T:Amazon.Signer.Model.ValidationException">
            You signing certificate could not be validated.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/signer-2017-08-25/ListProfilePermissions">REST API Reference for ListProfilePermissions Operation</seealso>
        </member>
        <member name="M:Amazon.Signer.IAmazonSigner.ListProfilePermissionsAsync(Amazon.Signer.Model.ListProfilePermissionsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the cross-account permissions associated with a signing profile.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListProfilePermissions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListProfilePermissions service method, as returned by Signer.</returns>
            <exception cref="T:Amazon.Signer.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Signer.Model.InternalServiceErrorException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.Signer.Model.ResourceNotFoundException">
            A specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.Signer.Model.TooManyRequestsException">
            The allowed number of job-signing requests has been exceeded.
            
             
            <para>
            This error supersedes the error <code>ThrottlingException</code>.
            </para>
            </exception>
            <exception cref="T:Amazon.Signer.Model.ValidationException">
            You signing certificate could not be validated.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/signer-2017-08-25/ListProfilePermissions">REST API Reference for ListProfilePermissions Operation</seealso>
        </member>
        <member name="M:Amazon.Signer.IAmazonSigner.ListSigningJobs(Amazon.Signer.Model.ListSigningJobsRequest)">
            <summary>
            Lists all your signing jobs. You can use the <code>maxResults</code> parameter to
            limit the number of signing jobs that are returned in the response. If additional
            jobs remain to be listed, code signing returns a <code>nextToken</code> value. Use
            this value in subsequent calls to <code>ListSigningJobs</code> to fetch the remaining
            values. You can continue calling <code>ListSigningJobs</code> with your <code>maxResults</code>
            parameter and with new values that code signing returns in the <code>nextToken</code>
            parameter until all of your signing jobs have been returned.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListSigningJobs service method.</param>
            
            <returns>The response from the ListSigningJobs service method, as returned by Signer.</returns>
            <exception cref="T:Amazon.Signer.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Signer.Model.InternalServiceErrorException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.Signer.Model.TooManyRequestsException">
            The allowed number of job-signing requests has been exceeded.
            
             
            <para>
            This error supersedes the error <code>ThrottlingException</code>.
            </para>
            </exception>
            <exception cref="T:Amazon.Signer.Model.ValidationException">
            You signing certificate could not be validated.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/signer-2017-08-25/ListSigningJobs">REST API Reference for ListSigningJobs Operation</seealso>
        </member>
        <member name="M:Amazon.Signer.IAmazonSigner.ListSigningJobsAsync(Amazon.Signer.Model.ListSigningJobsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all your signing jobs. You can use the <code>maxResults</code> parameter to
            limit the number of signing jobs that are returned in the response. If additional
            jobs remain to be listed, code signing returns a <code>nextToken</code> value. Use
            this value in subsequent calls to <code>ListSigningJobs</code> to fetch the remaining
            values. You can continue calling <code>ListSigningJobs</code> with your <code>maxResults</code>
            parameter and with new values that code signing returns in the <code>nextToken</code>
            parameter until all of your signing jobs have been returned.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListSigningJobs service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListSigningJobs service method, as returned by Signer.</returns>
            <exception cref="T:Amazon.Signer.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Signer.Model.InternalServiceErrorException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.Signer.Model.TooManyRequestsException">
            The allowed number of job-signing requests has been exceeded.
            
             
            <para>
            This error supersedes the error <code>ThrottlingException</code>.
            </para>
            </exception>
            <exception cref="T:Amazon.Signer.Model.ValidationException">
            You signing certificate could not be validated.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/signer-2017-08-25/ListSigningJobs">REST API Reference for ListSigningJobs Operation</seealso>
        </member>
        <member name="M:Amazon.Signer.IAmazonSigner.ListSigningPlatforms(Amazon.Signer.Model.ListSigningPlatformsRequest)">
            <summary>
            Lists all signing platforms available in code signing that match the request parameters.
            If additional jobs remain to be listed, code signing returns a <code>nextToken</code>
            value. Use this value in subsequent calls to <code>ListSigningJobs</code> to fetch
            the remaining values. You can continue calling <code>ListSigningJobs</code> with your
            <code>maxResults</code> parameter and with new values that code signing returns in
            the <code>nextToken</code> parameter until all of your signing jobs have been returned.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListSigningPlatforms service method.</param>
            
            <returns>The response from the ListSigningPlatforms service method, as returned by Signer.</returns>
            <exception cref="T:Amazon.Signer.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Signer.Model.InternalServiceErrorException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.Signer.Model.TooManyRequestsException">
            The allowed number of job-signing requests has been exceeded.
            
             
            <para>
            This error supersedes the error <code>ThrottlingException</code>.
            </para>
            </exception>
            <exception cref="T:Amazon.Signer.Model.ValidationException">
            You signing certificate could not be validated.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/signer-2017-08-25/ListSigningPlatforms">REST API Reference for ListSigningPlatforms Operation</seealso>
        </member>
        <member name="M:Amazon.Signer.IAmazonSigner.ListSigningPlatformsAsync(Amazon.Signer.Model.ListSigningPlatformsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all signing platforms available in code signing that match the request parameters.
            If additional jobs remain to be listed, code signing returns a <code>nextToken</code>
            value. Use this value in subsequent calls to <code>ListSigningJobs</code> to fetch
            the remaining values. You can continue calling <code>ListSigningJobs</code> with your
            <code>maxResults</code> parameter and with new values that code signing returns in
            the <code>nextToken</code> parameter until all of your signing jobs have been returned.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListSigningPlatforms service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListSigningPlatforms service method, as returned by Signer.</returns>
            <exception cref="T:Amazon.Signer.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Signer.Model.InternalServiceErrorException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.Signer.Model.TooManyRequestsException">
            The allowed number of job-signing requests has been exceeded.
            
             
            <para>
            This error supersedes the error <code>ThrottlingException</code>.
            </para>
            </exception>
            <exception cref="T:Amazon.Signer.Model.ValidationException">
            You signing certificate could not be validated.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/signer-2017-08-25/ListSigningPlatforms">REST API Reference for ListSigningPlatforms Operation</seealso>
        </member>
        <member name="M:Amazon.Signer.IAmazonSigner.ListSigningProfiles(Amazon.Signer.Model.ListSigningProfilesRequest)">
            <summary>
            Lists all available signing profiles in your AWS account. Returns only profiles with
            an <code>ACTIVE</code> status unless the <code>includeCanceled</code> request field
            is set to <code>true</code>. If additional jobs remain to be listed, code signing
            returns a <code>nextToken</code> value. Use this value in subsequent calls to <code>ListSigningJobs</code>
            to fetch the remaining values. You can continue calling <code>ListSigningJobs</code>
            with your <code>maxResults</code> parameter and with new values that code signing
            returns in the <code>nextToken</code> parameter until all of your signing jobs have
            been returned.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListSigningProfiles service method.</param>
            
            <returns>The response from the ListSigningProfiles service method, as returned by Signer.</returns>
            <exception cref="T:Amazon.Signer.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Signer.Model.InternalServiceErrorException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.Signer.Model.TooManyRequestsException">
            The allowed number of job-signing requests has been exceeded.
            
             
            <para>
            This error supersedes the error <code>ThrottlingException</code>.
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/signer-2017-08-25/ListSigningProfiles">REST API Reference for ListSigningProfiles Operation</seealso>
        </member>
        <member name="M:Amazon.Signer.IAmazonSigner.ListSigningProfilesAsync(Amazon.Signer.Model.ListSigningProfilesRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all available signing profiles in your AWS account. Returns only profiles with
            an <code>ACTIVE</code> status unless the <code>includeCanceled</code> request field
            is set to <code>true</code>. If additional jobs remain to be listed, code signing
            returns a <code>nextToken</code> value. Use this value in subsequent calls to <code>ListSigningJobs</code>
            to fetch the remaining values. You can continue calling <code>ListSigningJobs</code>
            with your <code>maxResults</code> parameter and with new values that code signing
            returns in the <code>nextToken</code> parameter until all of your signing jobs have
            been returned.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListSigningProfiles service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListSigningProfiles service method, as returned by Signer.</returns>
            <exception cref="T:Amazon.Signer.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Signer.Model.InternalServiceErrorException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.Signer.Model.TooManyRequestsException">
            The allowed number of job-signing requests has been exceeded.
            
             
            <para>
            This error supersedes the error <code>ThrottlingException</code>.
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/signer-2017-08-25/ListSigningProfiles">REST API Reference for ListSigningProfiles Operation</seealso>
        </member>
        <member name="M:Amazon.Signer.IAmazonSigner.ListTagsForResource(Amazon.Signer.Model.ListTagsForResourceRequest)">
            <summary>
            Returns a list of the tags associated with a signing profile resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            
            <returns>The response from the ListTagsForResource service method, as returned by Signer.</returns>
            <exception cref="T:Amazon.Signer.Model.BadRequestException">
            The request contains invalid parameters for the ARN or tags. This exception also occurs
            when you call a tagging API on a cancelled signing profile.
            </exception>
            <exception cref="T:Amazon.Signer.Model.InternalServiceErrorException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.Signer.Model.NotFoundException">
            The signing profile was not found.
            </exception>
            <exception cref="T:Amazon.Signer.Model.TooManyRequestsException">
            The allowed number of job-signing requests has been exceeded.
            
             
            <para>
            This error supersedes the error <code>ThrottlingException</code>.
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/signer-2017-08-25/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.Signer.IAmazonSigner.ListTagsForResourceAsync(Amazon.Signer.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of the tags associated with a signing profile resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by Signer.</returns>
            <exception cref="T:Amazon.Signer.Model.BadRequestException">
            The request contains invalid parameters for the ARN or tags. This exception also occurs
            when you call a tagging API on a cancelled signing profile.
            </exception>
            <exception cref="T:Amazon.Signer.Model.InternalServiceErrorException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.Signer.Model.NotFoundException">
            The signing profile was not found.
            </exception>
            <exception cref="T:Amazon.Signer.Model.TooManyRequestsException">
            The allowed number of job-signing requests has been exceeded.
            
             
            <para>
            This error supersedes the error <code>ThrottlingException</code>.
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/signer-2017-08-25/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.Signer.IAmazonSigner.PutSigningProfile(Amazon.Signer.Model.PutSigningProfileRequest)">
            <summary>
            Creates a signing profile. A signing profile is a code signing template that can be
            used to carry out a pre-defined signing job. For more information, see <a href="http://docs.aws.amazon.com/signer/latest/developerguide/gs-profile.html">http://docs.aws.amazon.com/signer/latest/developerguide/gs-profile.html</a>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutSigningProfile service method.</param>
            
            <returns>The response from the PutSigningProfile service method, as returned by Signer.</returns>
            <exception cref="T:Amazon.Signer.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Signer.Model.InternalServiceErrorException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.Signer.Model.ResourceNotFoundException">
            A specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.Signer.Model.TooManyRequestsException">
            The allowed number of job-signing requests has been exceeded.
            
             
            <para>
            This error supersedes the error <code>ThrottlingException</code>.
            </para>
            </exception>
            <exception cref="T:Amazon.Signer.Model.ValidationException">
            You signing certificate could not be validated.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/signer-2017-08-25/PutSigningProfile">REST API Reference for PutSigningProfile Operation</seealso>
        </member>
        <member name="M:Amazon.Signer.IAmazonSigner.PutSigningProfileAsync(Amazon.Signer.Model.PutSigningProfileRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a signing profile. A signing profile is a code signing template that can be
            used to carry out a pre-defined signing job. For more information, see <a href="http://docs.aws.amazon.com/signer/latest/developerguide/gs-profile.html">http://docs.aws.amazon.com/signer/latest/developerguide/gs-profile.html</a>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutSigningProfile service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutSigningProfile service method, as returned by Signer.</returns>
            <exception cref="T:Amazon.Signer.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Signer.Model.InternalServiceErrorException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.Signer.Model.ResourceNotFoundException">
            A specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.Signer.Model.TooManyRequestsException">
            The allowed number of job-signing requests has been exceeded.
            
             
            <para>
            This error supersedes the error <code>ThrottlingException</code>.
            </para>
            </exception>
            <exception cref="T:Amazon.Signer.Model.ValidationException">
            You signing certificate could not be validated.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/signer-2017-08-25/PutSigningProfile">REST API Reference for PutSigningProfile Operation</seealso>
        </member>
        <member name="M:Amazon.Signer.IAmazonSigner.RemoveProfilePermission(Amazon.Signer.Model.RemoveProfilePermissionRequest)">
            <summary>
            Removes cross-account permissions from a signing profile.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RemoveProfilePermission service method.</param>
            
            <returns>The response from the RemoveProfilePermission service method, as returned by Signer.</returns>
            <exception cref="T:Amazon.Signer.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Signer.Model.ConflictException">
            The resource encountered a conflicting state.
            </exception>
            <exception cref="T:Amazon.Signer.Model.InternalServiceErrorException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.Signer.Model.ResourceNotFoundException">
            A specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.Signer.Model.TooManyRequestsException">
            The allowed number of job-signing requests has been exceeded.
            
             
            <para>
            This error supersedes the error <code>ThrottlingException</code>.
            </para>
            </exception>
            <exception cref="T:Amazon.Signer.Model.ValidationException">
            You signing certificate could not be validated.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/signer-2017-08-25/RemoveProfilePermission">REST API Reference for RemoveProfilePermission Operation</seealso>
        </member>
        <member name="M:Amazon.Signer.IAmazonSigner.RemoveProfilePermissionAsync(Amazon.Signer.Model.RemoveProfilePermissionRequest,System.Threading.CancellationToken)">
            <summary>
            Removes cross-account permissions from a signing profile.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RemoveProfilePermission service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RemoveProfilePermission service method, as returned by Signer.</returns>
            <exception cref="T:Amazon.Signer.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Signer.Model.ConflictException">
            The resource encountered a conflicting state.
            </exception>
            <exception cref="T:Amazon.Signer.Model.InternalServiceErrorException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.Signer.Model.ResourceNotFoundException">
            A specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.Signer.Model.TooManyRequestsException">
            The allowed number of job-signing requests has been exceeded.
            
             
            <para>
            This error supersedes the error <code>ThrottlingException</code>.
            </para>
            </exception>
            <exception cref="T:Amazon.Signer.Model.ValidationException">
            You signing certificate could not be validated.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/signer-2017-08-25/RemoveProfilePermission">REST API Reference for RemoveProfilePermission Operation</seealso>
        </member>
        <member name="M:Amazon.Signer.IAmazonSigner.RevokeSignature(Amazon.Signer.Model.RevokeSignatureRequest)">
            <summary>
            Changes the state of a signing job to REVOKED. This indicates that the signature is
            no longer valid.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RevokeSignature service method.</param>
            
            <returns>The response from the RevokeSignature service method, as returned by Signer.</returns>
            <exception cref="T:Amazon.Signer.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Signer.Model.InternalServiceErrorException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.Signer.Model.ResourceNotFoundException">
            A specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.Signer.Model.TooManyRequestsException">
            The allowed number of job-signing requests has been exceeded.
            
             
            <para>
            This error supersedes the error <code>ThrottlingException</code>.
            </para>
            </exception>
            <exception cref="T:Amazon.Signer.Model.ValidationException">
            You signing certificate could not be validated.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/signer-2017-08-25/RevokeSignature">REST API Reference for RevokeSignature Operation</seealso>
        </member>
        <member name="M:Amazon.Signer.IAmazonSigner.RevokeSignatureAsync(Amazon.Signer.Model.RevokeSignatureRequest,System.Threading.CancellationToken)">
            <summary>
            Changes the state of a signing job to REVOKED. This indicates that the signature is
            no longer valid.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RevokeSignature service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RevokeSignature service method, as returned by Signer.</returns>
            <exception cref="T:Amazon.Signer.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Signer.Model.InternalServiceErrorException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.Signer.Model.ResourceNotFoundException">
            A specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.Signer.Model.TooManyRequestsException">
            The allowed number of job-signing requests has been exceeded.
            
             
            <para>
            This error supersedes the error <code>ThrottlingException</code>.
            </para>
            </exception>
            <exception cref="T:Amazon.Signer.Model.ValidationException">
            You signing certificate could not be validated.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/signer-2017-08-25/RevokeSignature">REST API Reference for RevokeSignature Operation</seealso>
        </member>
        <member name="M:Amazon.Signer.IAmazonSigner.RevokeSigningProfile(Amazon.Signer.Model.RevokeSigningProfileRequest)">
            <summary>
            Changes the state of a signing profile to REVOKED. This indicates that signatures
            generated using the signing profile after an effective start date are no longer valid.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RevokeSigningProfile service method.</param>
            
            <returns>The response from the RevokeSigningProfile service method, as returned by Signer.</returns>
            <exception cref="T:Amazon.Signer.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Signer.Model.InternalServiceErrorException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.Signer.Model.ResourceNotFoundException">
            A specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.Signer.Model.TooManyRequestsException">
            The allowed number of job-signing requests has been exceeded.
            
             
            <para>
            This error supersedes the error <code>ThrottlingException</code>.
            </para>
            </exception>
            <exception cref="T:Amazon.Signer.Model.ValidationException">
            You signing certificate could not be validated.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/signer-2017-08-25/RevokeSigningProfile">REST API Reference for RevokeSigningProfile Operation</seealso>
        </member>
        <member name="M:Amazon.Signer.IAmazonSigner.RevokeSigningProfileAsync(Amazon.Signer.Model.RevokeSigningProfileRequest,System.Threading.CancellationToken)">
            <summary>
            Changes the state of a signing profile to REVOKED. This indicates that signatures
            generated using the signing profile after an effective start date are no longer valid.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RevokeSigningProfile service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RevokeSigningProfile service method, as returned by Signer.</returns>
            <exception cref="T:Amazon.Signer.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Signer.Model.InternalServiceErrorException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.Signer.Model.ResourceNotFoundException">
            A specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.Signer.Model.TooManyRequestsException">
            The allowed number of job-signing requests has been exceeded.
            
             
            <para>
            This error supersedes the error <code>ThrottlingException</code>.
            </para>
            </exception>
            <exception cref="T:Amazon.Signer.Model.ValidationException">
            You signing certificate could not be validated.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/signer-2017-08-25/RevokeSigningProfile">REST API Reference for RevokeSigningProfile Operation</seealso>
        </member>
        <member name="M:Amazon.Signer.IAmazonSigner.StartSigningJob(Amazon.Signer.Model.StartSigningJobRequest)">
            <summary>
            Initiates a signing job to be performed on the code provided. Signing jobs are viewable
            by the <code>ListSigningJobs</code> operation for two years after they are performed.
            Note the following requirements: 
            
             <ul> <li> 
            <para>
             You must create an Amazon S3 source bucket. For more information, see <a href="http://docs.aws.amazon.com/AmazonS3/latest/gsg/CreatingABucket.html">Create
            a Bucket</a> in the <i>Amazon S3 Getting Started Guide</i>. 
            </para>
             </li> <li> 
            <para>
            Your S3 source bucket must be version enabled.
            </para>
             </li> <li> 
            <para>
            You must create an S3 destination bucket. Code signing uses your S3 destination bucket
            to write your signed code.
            </para>
             </li> <li> 
            <para>
            You specify the name of the source and destination buckets when calling the <code>StartSigningJob</code>
            operation.
            </para>
             </li> <li> 
            <para>
            You must also specify a request token that identifies your request to code signing.
            </para>
             </li> </ul> 
            <para>
            You can call the <a>DescribeSigningJob</a> and the <a>ListSigningJobs</a> actions
            after you call <code>StartSigningJob</code>.
            </para>
             
            <para>
            For a Java example that shows how to use this action, see <a href="http://docs.aws.amazon.com/acm/latest/userguide/">http://docs.aws.amazon.com/acm/latest/userguide/</a>
            
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartSigningJob service method.</param>
            
            <returns>The response from the StartSigningJob service method, as returned by Signer.</returns>
            <exception cref="T:Amazon.Signer.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Signer.Model.InternalServiceErrorException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.Signer.Model.ResourceNotFoundException">
            A specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.Signer.Model.ThrottlingException">
            The request was denied due to request throttling.
            
             
            <para>
            Instead of this error, <code>TooManyRequestsException</code> should be used.
            </para>
            </exception>
            <exception cref="T:Amazon.Signer.Model.TooManyRequestsException">
            The allowed number of job-signing requests has been exceeded.
            
             
            <para>
            This error supersedes the error <code>ThrottlingException</code>.
            </para>
            </exception>
            <exception cref="T:Amazon.Signer.Model.ValidationException">
            You signing certificate could not be validated.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/signer-2017-08-25/StartSigningJob">REST API Reference for StartSigningJob Operation</seealso>
        </member>
        <member name="M:Amazon.Signer.IAmazonSigner.StartSigningJobAsync(Amazon.Signer.Model.StartSigningJobRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates a signing job to be performed on the code provided. Signing jobs are viewable
            by the <code>ListSigningJobs</code> operation for two years after they are performed.
            Note the following requirements: 
            
             <ul> <li> 
            <para>
             You must create an Amazon S3 source bucket. For more information, see <a href="http://docs.aws.amazon.com/AmazonS3/latest/gsg/CreatingABucket.html">Create
            a Bucket</a> in the <i>Amazon S3 Getting Started Guide</i>. 
            </para>
             </li> <li> 
            <para>
            Your S3 source bucket must be version enabled.
            </para>
             </li> <li> 
            <para>
            You must create an S3 destination bucket. Code signing uses your S3 destination bucket
            to write your signed code.
            </para>
             </li> <li> 
            <para>
            You specify the name of the source and destination buckets when calling the <code>StartSigningJob</code>
            operation.
            </para>
             </li> <li> 
            <para>
            You must also specify a request token that identifies your request to code signing.
            </para>
             </li> </ul> 
            <para>
            You can call the <a>DescribeSigningJob</a> and the <a>ListSigningJobs</a> actions
            after you call <code>StartSigningJob</code>.
            </para>
             
            <para>
            For a Java example that shows how to use this action, see <a href="http://docs.aws.amazon.com/acm/latest/userguide/">http://docs.aws.amazon.com/acm/latest/userguide/</a>
            
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartSigningJob service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartSigningJob service method, as returned by Signer.</returns>
            <exception cref="T:Amazon.Signer.Model.AccessDeniedException">
            You do not have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.Signer.Model.InternalServiceErrorException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.Signer.Model.ResourceNotFoundException">
            A specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.Signer.Model.ThrottlingException">
            The request was denied due to request throttling.
            
             
            <para>
            Instead of this error, <code>TooManyRequestsException</code> should be used.
            </para>
            </exception>
            <exception cref="T:Amazon.Signer.Model.TooManyRequestsException">
            The allowed number of job-signing requests has been exceeded.
            
             
            <para>
            This error supersedes the error <code>ThrottlingException</code>.
            </para>
            </exception>
            <exception cref="T:Amazon.Signer.Model.ValidationException">
            You signing certificate could not be validated.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/signer-2017-08-25/StartSigningJob">REST API Reference for StartSigningJob Operation</seealso>
        </member>
        <member name="M:Amazon.Signer.IAmazonSigner.TagResource(Amazon.Signer.Model.TagResourceRequest)">
            <summary>
            Adds one or more tags to a signing profile. Tags are labels that you can use to identify
            and organize your AWS resources. Each tag consists of a key and an optional value.
            To specify the signing profile, use its Amazon Resource Name (ARN). To specify the
            tag, use a key-value pair.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            
            <returns>The response from the TagResource service method, as returned by Signer.</returns>
            <exception cref="T:Amazon.Signer.Model.BadRequestException">
            The request contains invalid parameters for the ARN or tags. This exception also occurs
            when you call a tagging API on a cancelled signing profile.
            </exception>
            <exception cref="T:Amazon.Signer.Model.InternalServiceErrorException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.Signer.Model.NotFoundException">
            The signing profile was not found.
            </exception>
            <exception cref="T:Amazon.Signer.Model.TooManyRequestsException">
            The allowed number of job-signing requests has been exceeded.
            
             
            <para>
            This error supersedes the error <code>ThrottlingException</code>.
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/signer-2017-08-25/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.Signer.IAmazonSigner.TagResourceAsync(Amazon.Signer.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Adds one or more tags to a signing profile. Tags are labels that you can use to identify
            and organize your AWS resources. Each tag consists of a key and an optional value.
            To specify the signing profile, use its Amazon Resource Name (ARN). To specify the
            tag, use a key-value pair.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by Signer.</returns>
            <exception cref="T:Amazon.Signer.Model.BadRequestException">
            The request contains invalid parameters for the ARN or tags. This exception also occurs
            when you call a tagging API on a cancelled signing profile.
            </exception>
            <exception cref="T:Amazon.Signer.Model.InternalServiceErrorException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.Signer.Model.NotFoundException">
            The signing profile was not found.
            </exception>
            <exception cref="T:Amazon.Signer.Model.TooManyRequestsException">
            The allowed number of job-signing requests has been exceeded.
            
             
            <para>
            This error supersedes the error <code>ThrottlingException</code>.
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/signer-2017-08-25/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.Signer.IAmazonSigner.UntagResource(Amazon.Signer.Model.UntagResourceRequest)">
            <summary>
            Removes one or more tags from a signing profile. To remove the tags, specify a list
            of tag keys.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            
            <returns>The response from the UntagResource service method, as returned by Signer.</returns>
            <exception cref="T:Amazon.Signer.Model.BadRequestException">
            The request contains invalid parameters for the ARN or tags. This exception also occurs
            when you call a tagging API on a cancelled signing profile.
            </exception>
            <exception cref="T:Amazon.Signer.Model.InternalServiceErrorException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.Signer.Model.NotFoundException">
            The signing profile was not found.
            </exception>
            <exception cref="T:Amazon.Signer.Model.TooManyRequestsException">
            The allowed number of job-signing requests has been exceeded.
            
             
            <para>
            This error supersedes the error <code>ThrottlingException</code>.
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/signer-2017-08-25/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.Signer.IAmazonSigner.UntagResourceAsync(Amazon.Signer.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Removes one or more tags from a signing profile. To remove the tags, specify a list
            of tag keys.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by Signer.</returns>
            <exception cref="T:Amazon.Signer.Model.BadRequestException">
            The request contains invalid parameters for the ARN or tags. This exception also occurs
            when you call a tagging API on a cancelled signing profile.
            </exception>
            <exception cref="T:Amazon.Signer.Model.InternalServiceErrorException">
            An internal error occurred.
            </exception>
            <exception cref="T:Amazon.Signer.Model.NotFoundException">
            The signing profile was not found.
            </exception>
            <exception cref="T:Amazon.Signer.Model.TooManyRequestsException">
            The allowed number of job-signing requests has been exceeded.
            
             
            <para>
            This error supersedes the error <code>ThrottlingException</code>.
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/signer-2017-08-25/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
    </members>
</doc>
