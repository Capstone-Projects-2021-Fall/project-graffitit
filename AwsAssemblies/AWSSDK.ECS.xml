<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.ECS</name>
    </assembly>
    <members>
        <member name="T:Amazon.ECS.AmazonECSConfig">
            <summary>
            Configuration for accessing Amazon ECS service
            </summary>
        </member>
        <member name="M:Amazon.ECS.AmazonECSConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.ECS.AmazonECSConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.ECS.AmazonECSConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.ECS.AmazonECSConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.ECS.AmazonECSException">
            <summary>
             Common exception for the ECS service.
             </summary>
        </member>
        <member name="M:Amazon.ECS.AmazonECSException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonECSException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.ECS.AmazonECSException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonECSException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.AmazonECSException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonECSException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.AmazonECSException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonECSException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.AmazonECSException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonECSException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.AmazonECSException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the AmazonECSException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.ECS.Internal.AmazonECSMetadata">
            <summary>
            Service metadata for  Amazon ECS service
            </summary>
        </member>
        <member name="P:Amazon.ECS.Internal.AmazonECSMetadata.ServiceId">
            <summary>
            Gets the value of the Service Id.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Internal.AmazonECSMetadata.OperationNameMapping">
            <summary>
            Gets the dictionary that gives mapping of renamed operations
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.AccessDeniedException">
            <summary>
            You do not have authorization to perform the requested action.
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.AccessDeniedException.#ctor(System.String)">
            <summary>
            Constructs a new AccessDeniedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECS.Model.AccessDeniedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.AccessDeniedException.#ctor(System.Exception)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.AccessDeniedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.AccessDeniedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.AccessDeniedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the AccessDeniedException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.ECS.Model.AccessDeniedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.ECS.Model.Attachment">
            <summary>
            An object representing a container instance or task attachment.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Attachment.Details">
            <summary>
            Gets and sets the property Details. 
            <para>
            Details of the attachment. For elastic network interfaces, this includes the network
            interface ID, the MAC address, the subnet ID, and the private IPv4 address.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Attachment.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            The unique identifier for the attachment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Attachment.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
             The status of the attachment. Valid values are <code>PRECREATED</code>, <code>CREATED</code>,
            <code>ATTACHING</code>, <code>ATTACHED</code>, <code>DETACHING</code>, <code>DETACHED</code>,
            and <code>DELETED</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Attachment.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of the attachment, such as <code>ElasticNetworkInterface</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.AttachmentStateChange">
            <summary>
            An object representing a change in state for a task attachment.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.AttachmentStateChange.AttachmentArn">
            <summary>
            Gets and sets the property AttachmentArn. 
            <para>
            The Amazon Resource Name (ARN) of the attachment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.AttachmentStateChange.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the attachment.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Attribute">
            <summary>
            An attribute is a name-value pair associated with an Amazon ECS object. Attributes
            enable you to extend the Amazon ECS data model by adding custom metadata to your resources.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-constraints.html#attributes">Attributes</a>
            in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Attribute.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the attribute. The <code>name</code> must contain between 1 and 128 characters
            and name may contain letters (uppercase and lowercase), numbers, hyphens, underscores,
            forward slashes, back slashes, or periods.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Attribute.TargetId">
            <summary>
            Gets and sets the property TargetId. 
            <para>
            The ID of the target. You can specify the short form ID for a resource or the full
            Amazon Resource Name (ARN).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Attribute.TargetType">
            <summary>
            Gets and sets the property TargetType. 
            <para>
            The type of the target with which to attach the attribute. This parameter is required
            if you use the short form ID for a resource instead of the full ARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Attribute.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The value of the attribute. The <code>value</code> must contain between 1 and 128
            characters and may contain letters (uppercase and lowercase), numbers, hyphens, underscores,
            periods, at signs (@), forward slashes, back slashes, colons, or spaces. The value
            cannot contain any leading or trailing whitespace.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.AttributeLimitExceededException">
            <summary>
            You can apply up to 10 custom attributes per resource. You can view the attributes
            of a resource with <a>ListAttributes</a>. You can remove existing attributes on a
            resource with <a>DeleteAttributes</a>.
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.AttributeLimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new AttributeLimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECS.Model.AttributeLimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AttributeLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.AttributeLimitExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of AttributeLimitExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.AttributeLimitExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AttributeLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.AttributeLimitExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AttributeLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.AttributeLimitExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the AttributeLimitExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.ECS.Model.AttributeLimitExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.ECS.Model.AutoScalingGroupProvider">
            <summary>
            The details of the Auto Scaling group for the capacity provider.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.AutoScalingGroupProvider.AutoScalingGroupArn">
            <summary>
            Gets and sets the property AutoScalingGroupArn. 
            <para>
            The Amazon Resource Name (ARN) that identifies the Auto Scaling group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.AutoScalingGroupProvider.ManagedScaling">
            <summary>
            Gets and sets the property ManagedScaling. 
            <para>
            The managed scaling settings for the Auto Scaling group capacity provider.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.AutoScalingGroupProvider.ManagedTerminationProtection">
            <summary>
            Gets and sets the property ManagedTerminationProtection. 
            <para>
            The managed termination protection setting to use for the Auto Scaling group capacity
            provider. This determines whether the Auto Scaling group has managed termination protection.
            </para>
             <important> 
            <para>
            When using managed termination protection, managed scaling must also be used otherwise
            managed termination protection will not work.
            </para>
             </important> 
            <para>
            When managed termination protection is enabled, Amazon ECS prevents the Amazon EC2
            instances in an Auto Scaling group that contain tasks from being terminated during
            a scale-in action. The Auto Scaling group and each instance in the Auto Scaling group
            must have instance protection from scale-in actions enabled as well. For more information,
            see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-termination.html#instance-protection">Instance
            Protection</a> in the <i>Auto Scaling User Guide</i>.
            </para>
             
            <para>
            When managed termination protection is disabled, your Amazon EC2 instances are not
            protected from termination when the Auto Scaling group scales in.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.AutoScalingGroupProviderUpdate">
            <summary>
            The details of the Auto Scaling group capacity provider to update.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.AutoScalingGroupProviderUpdate.ManagedScaling">
            <summary>
            Gets and sets the property ManagedScaling. 
            <para>
            The managed scaling settings for the Auto Scaling group capacity provider.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.AutoScalingGroupProviderUpdate.ManagedTerminationProtection">
            <summary>
            Gets and sets the property ManagedTerminationProtection. 
            <para>
            The managed termination protection setting to use for the Auto Scaling group capacity
            provider. This determines whether the Auto Scaling group has managed termination protection.
            </para>
             <important> 
            <para>
            When using managed termination protection, managed scaling must also be used otherwise
            managed termination protection will not work.
            </para>
             </important> 
            <para>
            When managed termination protection is enabled, Amazon ECS prevents the Amazon EC2
            instances in an Auto Scaling group that contain tasks from being terminated during
            a scale-in action. The Auto Scaling group and each instance in the Auto Scaling group
            must have instance protection from scale-in actions enabled as well. For more information,
            see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-termination.html#instance-protection">Instance
            Protection</a> in the <i>Auto Scaling User Guide</i>.
            </para>
             
            <para>
            When managed termination protection is disabled, your Amazon EC2 instances are not
            protected from termination when the Auto Scaling group scales in.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.AwsVpcConfiguration">
            <summary>
            An object representing the networking details for a task or service.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.AwsVpcConfiguration.AssignPublicIp">
            <summary>
            Gets and sets the property AssignPublicIp. 
            <para>
            Whether the task's elastic network interface receives a public IP address. The default
            value is <code>DISABLED</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.AwsVpcConfiguration.SecurityGroups">
            <summary>
            Gets and sets the property SecurityGroups. 
            <para>
            The IDs of the security groups associated with the task or service. If you do not
            specify a security group, the default security group for the VPC is used. There is
            a limit of 5 security groups that can be specified per <code>AwsVpcConfiguration</code>.
            </para>
             <note> 
            <para>
            All specified security groups must be from the same VPC.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.AwsVpcConfiguration.Subnets">
            <summary>
            Gets and sets the property Subnets. 
            <para>
            The IDs of the subnets associated with the task or service. There is a limit of 16
            subnets that can be specified per <code>AwsVpcConfiguration</code>.
            </para>
             <note> 
            <para>
            All specified subnets must be from the same VPC.
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.BlockedException">
            <summary>
            Your Amazon Web Services account has been blocked. For more information, contact <a
            href="http://aws.amazon.com/contact-us/"> Amazon Web Services Support</a>.
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.BlockedException.#ctor(System.String)">
            <summary>
            Constructs a new BlockedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECS.Model.BlockedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of BlockedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.BlockedException.#ctor(System.Exception)">
            <summary>
            Construct instance of BlockedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.BlockedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of BlockedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.BlockedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of BlockedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.BlockedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the BlockedException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.ECS.Model.BlockedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.ECS.Model.CapacityProvider">
            <summary>
            The details of a capacity provider.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CapacityProvider.AutoScalingGroupProvider">
            <summary>
            Gets and sets the property AutoScalingGroupProvider. 
            <para>
            The Auto Scaling group settings for the capacity provider.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CapacityProvider.CapacityProviderArn">
            <summary>
            Gets and sets the property CapacityProviderArn. 
            <para>
            The Amazon Resource Name (ARN) that identifies the capacity provider.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CapacityProvider.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the capacity provider.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CapacityProvider.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The current status of the capacity provider. Only capacity providers in an <code>ACTIVE</code>
            state can be used in a cluster. When a capacity provider is successfully deleted,
            it will have an <code>INACTIVE</code> status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CapacityProvider.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The metadata that you apply to the capacity provider to help you categorize and organize
            it. Each tag consists of a key and an optional value, both of which you define.
            </para>
             
            <para>
            The following basic restrictions apply to tags:
            </para>
             <ul> <li> 
            <para>
            Maximum number of tags per resource - 50
            </para>
             </li> <li> 
            <para>
            For each resource, each tag key must be unique, and each tag key can have only one
            value.
            </para>
             </li> <li> 
            <para>
            Maximum key length - 128 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            Maximum value length - 256 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            If your tagging schema is used across multiple services and resources, remember that
            other services may have restrictions on allowed characters. Generally allowed characters
            are: letters, numbers, and spaces representable in UTF-8, and the following characters:
            + - = . _ : / @.
            </para>
             </li> <li> 
            <para>
            Tag keys and values are case-sensitive.
            </para>
             </li> <li> 
            <para>
            Do not use <code>aws:</code>, <code>AWS:</code>, or any upper or lowercase combination
            of such as a prefix for either keys or values as it is reserved for Amazon Web Services
            use. You cannot edit or delete tag keys or values with this prefix. Tags with this
            prefix do not count against your tags per resource limit.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CapacityProvider.UpdateStatus">
            <summary>
            Gets and sets the property UpdateStatus. 
            <para>
            The update status of the capacity provider. The following are the possible states
            that will be returned.
            </para>
             <dl> <dt>DELETE_IN_PROGRESS</dt> <dd> 
            <para>
            The capacity provider is in the process of being deleted.
            </para>
             </dd> <dt>DELETE_COMPLETE</dt> <dd> 
            <para>
            The capacity provider has been successfully deleted and will have an <code>INACTIVE</code>
            status.
            </para>
             </dd> <dt>DELETE_FAILED</dt> <dd> 
            <para>
            The capacity provider was unable to be deleted. The update status reason will provide
            further details about why the delete failed.
            </para>
             </dd> </dl>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CapacityProvider.UpdateStatusReason">
            <summary>
            Gets and sets the property UpdateStatusReason. 
            <para>
            The update status reason. This provides further details about the update status for
            the capacity provider.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.CapacityProviderStrategyItem">
            <summary>
            The details of a capacity provider strategy. A capacity provider strategy can be set
            when using the <a>RunTask</a> or <a>CreateCluster</a> APIs or as the default capacity
            provider strategy for a cluster with the <a>CreateCluster</a> API.
            
             
            <para>
            Only capacity providers that are already associated with a cluster and have an <code>ACTIVE</code>
            or <code>UPDATING</code> status can be used in a capacity provider strategy. The <a>PutClusterCapacityProviders</a>
            API is used to associate a capacity provider with a cluster.
            </para>
             
            <para>
            If specifying a capacity provider that uses an Auto Scaling group, the capacity provider
            must already be created. New Auto Scaling group capacity providers can be created
            with the <a>CreateCapacityProvider</a> API operation.
            </para>
             
            <para>
            To use a Fargate capacity provider, specify either the <code>FARGATE</code> or <code>FARGATE_SPOT</code>
            capacity providers. The Fargate capacity providers are available to all accounts and
            only need to be associated with a cluster to be used in a capacity provider strategy.
            </para>
             
            <para>
            A capacity provider strategy may contain a maximum of 6 capacity providers.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CapacityProviderStrategyItem.Base">
            <summary>
            Gets and sets the property Base. 
            <para>
            The <i>base</i> value designates how many tasks, at a minimum, to run on the specified
            capacity provider. Only one capacity provider in a capacity provider strategy can
            have a <i>base</i> defined. If no value is specified, the default value of <code>0</code>
            is used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CapacityProviderStrategyItem.CapacityProvider">
            <summary>
            Gets and sets the property CapacityProvider. 
            <para>
            The short name of the capacity provider.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CapacityProviderStrategyItem.Weight">
            <summary>
            Gets and sets the property Weight. 
            <para>
            The <i>weight</i> value designates the relative percentage of the total number of
            tasks launched that should use the specified capacity provider. The <code>weight</code>
            value is taken into consideration after the <code>base</code> value, if defined, is
            satisfied.
            </para>
             
            <para>
            If no <code>weight</code> value is specified, the default value of <code>0</code>
            is used. When multiple capacity providers are specified within a capacity provider
            strategy, at least one of the capacity providers must have a weight value greater
            than zero and any capacity providers with a weight of <code>0</code> will not be used
            to place tasks. If you specify multiple capacity providers in a strategy that all
            have a weight of <code>0</code>, any <code>RunTask</code> or <code>CreateService</code>
            actions using the capacity provider strategy will fail.
            </para>
             
            <para>
            An example scenario for using weights is defining a strategy that contains two capacity
            providers and both have a weight of <code>1</code>, then when the <code>base</code>
            is satisfied, the tasks will be split evenly across the two capacity providers. Using
            that same logic, if you specify a weight of <code>1</code> for <i>capacityProviderA</i>
            and a weight of <code>4</code> for <i>capacityProviderB</i>, then for every one task
            that is run using <i>capacityProviderA</i>, four tasks would use <i>capacityProviderB</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ClientException">
            <summary>
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.ClientException.#ctor(System.String)">
            <summary>
            Constructs a new ClientException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECS.Model.ClientException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ClientException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ClientException.#ctor(System.Exception)">
            <summary>
            Construct instance of ClientException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ClientException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ClientException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ClientException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ClientException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ClientException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ClientException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.ECS.Model.ClientException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.ECS.Model.Cluster">
            <summary>
            A regional grouping of one or more container instances on which you can run task requests.
            Each account receives a default cluster the first time you use the Amazon ECS service,
            but you may also create other clusters. Clusters may contain more than one instance
            type simultaneously.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Cluster.ActiveServicesCount">
            <summary>
            Gets and sets the property ActiveServicesCount. 
            <para>
            The number of services that are running on the cluster in an <code>ACTIVE</code> state.
            You can view these services with <a>ListServices</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Cluster.Attachments">
            <summary>
            Gets and sets the property Attachments. 
            <para>
            The resources attached to a cluster. When using a capacity provider with a cluster,
            the Auto Scaling plan that is created will be returned as a cluster attachment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Cluster.AttachmentsStatus">
            <summary>
            Gets and sets the property AttachmentsStatus. 
            <para>
            The status of the capacity providers associated with the cluster. The following are
            the states that will be returned:
            </para>
             <dl> <dt>UPDATE_IN_PROGRESS</dt> <dd> 
            <para>
            The available capacity providers for the cluster are updating. This occurs when the
            Auto Scaling plan is provisioning or deprovisioning.
            </para>
             </dd> <dt>UPDATE_COMPLETE</dt> <dd> 
            <para>
            The capacity providers have successfully updated.
            </para>
             </dd> <dt>UPDATE_FAILED</dt> <dd> 
            <para>
            The capacity provider updates failed.
            </para>
             </dd> </dl>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Cluster.CapacityProviders">
            <summary>
            Gets and sets the property CapacityProviders. 
            <para>
            The capacity providers associated with the cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Cluster.ClusterArn">
            <summary>
            Gets and sets the property ClusterArn. 
            <para>
            The Amazon Resource Name (ARN) that identifies the cluster. The ARN contains the <code>arn:aws:ecs</code>
            namespace, followed by the Region of the cluster, the Amazon Web Services account
            ID of the cluster owner, the <code>cluster</code> namespace, and then the cluster
            name. For example, <code>arn:aws:ecs:region:012345678910:cluster/test</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Cluster.ClusterName">
            <summary>
            Gets and sets the property ClusterName. 
            <para>
            A user-generated string that you use to identify your cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Cluster.Configuration">
            <summary>
            Gets and sets the property Configuration. 
            <para>
            The execute command configuration for the cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Cluster.DefaultCapacityProviderStrategy">
            <summary>
            Gets and sets the property DefaultCapacityProviderStrategy. 
            <para>
            The default capacity provider strategy for the cluster. When services or tasks are
            run in the cluster with no launch type or capacity provider strategy specified, the
            default capacity provider strategy is used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Cluster.PendingTasksCount">
            <summary>
            Gets and sets the property PendingTasksCount. 
            <para>
            The number of tasks in the cluster that are in the <code>PENDING</code> state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Cluster.RegisteredContainerInstancesCount">
            <summary>
            Gets and sets the property RegisteredContainerInstancesCount. 
            <para>
            The number of container instances registered into the cluster. This includes container
            instances in both <code>ACTIVE</code> and <code>DRAINING</code> status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Cluster.RunningTasksCount">
            <summary>
            Gets and sets the property RunningTasksCount. 
            <para>
            The number of tasks in the cluster that are in the <code>RUNNING</code> state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Cluster.Settings">
            <summary>
            Gets and sets the property Settings. 
            <para>
            The settings for the cluster. This parameter indicates whether CloudWatch Container
            Insights is enabled or disabled for a cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Cluster.Statistics">
            <summary>
            Gets and sets the property Statistics. 
            <para>
            Additional information about your clusters that are separated by launch type, including:
            </para>
             <ul> <li> 
            <para>
            runningEC2TasksCount
            </para>
             </li> <li> 
            <para>
            RunningFargateTasksCount
            </para>
             </li> <li> 
            <para>
            pendingEC2TasksCount
            </para>
             </li> <li> 
            <para>
            pendingFargateTasksCount
            </para>
             </li> <li> 
            <para>
            activeEC2ServiceCount
            </para>
             </li> <li> 
            <para>
            activeFargateServiceCount
            </para>
             </li> <li> 
            <para>
            drainingEC2ServiceCount
            </para>
             </li> <li> 
            <para>
            drainingFargateServiceCount
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Cluster.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the cluster. The following are the possible states that will be returned.
            </para>
             <dl> <dt>ACTIVE</dt> <dd> 
            <para>
            The cluster is ready to accept tasks and if applicable you can register container
            instances with the cluster.
            </para>
             </dd> <dt>PROVISIONING</dt> <dd> 
            <para>
            The cluster has capacity providers associated with it and the resources needed for
            the capacity provider are being created.
            </para>
             </dd> <dt>DEPROVISIONING</dt> <dd> 
            <para>
            The cluster has capacity providers associated with it and the resources needed for
            the capacity provider are being deleted.
            </para>
             </dd> <dt>FAILED</dt> <dd> 
            <para>
            The cluster has capacity providers associated with it and the resources needed for
            the capacity provider have failed to create.
            </para>
             </dd> <dt>INACTIVE</dt> <dd> 
            <para>
            The cluster has been deleted. Clusters with an <code>INACTIVE</code> status may remain
            discoverable in your account for a period of time. However, this behavior is subject
            to change in the future, so you should not rely on <code>INACTIVE</code> clusters
            persisting.
            </para>
             </dd> </dl>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Cluster.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The metadata that you apply to the cluster to help you categorize and organize them.
            Each tag consists of a key and an optional value, both of which you define.
            </para>
             
            <para>
            The following basic restrictions apply to tags:
            </para>
             <ul> <li> 
            <para>
            Maximum number of tags per resource - 50
            </para>
             </li> <li> 
            <para>
            For each resource, each tag key must be unique, and each tag key can have only one
            value.
            </para>
             </li> <li> 
            <para>
            Maximum key length - 128 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            Maximum value length - 256 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            If your tagging schema is used across multiple services and resources, remember that
            other services may have restrictions on allowed characters. Generally allowed characters
            are: letters, numbers, and spaces representable in UTF-8, and the following characters:
            + - = . _ : / @.
            </para>
             </li> <li> 
            <para>
            Tag keys and values are case-sensitive.
            </para>
             </li> <li> 
            <para>
            Do not use <code>aws:</code>, <code>AWS:</code>, or any upper or lowercase combination
            of such as a prefix for either keys or values as it is reserved for Amazon Web Services
            use. You cannot edit or delete tag keys or values with this prefix. Tags with this
            prefix do not count against your tags per resource limit.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ClusterConfiguration">
            <summary>
            The execute command configuration for the cluster.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ClusterConfiguration.ExecuteCommandConfiguration">
            <summary>
            Gets and sets the property ExecuteCommandConfiguration. 
            <para>
            The details of the execute command configuration.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ClusterContainsContainerInstancesException">
            <summary>
            You cannot delete a cluster that has registered container instances. First, deregister
            the container instances before you can delete the cluster. For more information, see
            <a>DeregisterContainerInstance</a>.
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.ClusterContainsContainerInstancesException.#ctor(System.String)">
            <summary>
            Constructs a new ClusterContainsContainerInstancesException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECS.Model.ClusterContainsContainerInstancesException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ClusterContainsContainerInstancesException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ClusterContainsContainerInstancesException.#ctor(System.Exception)">
            <summary>
            Construct instance of ClusterContainsContainerInstancesException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ClusterContainsContainerInstancesException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ClusterContainsContainerInstancesException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ClusterContainsContainerInstancesException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ClusterContainsContainerInstancesException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ClusterContainsContainerInstancesException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ClusterContainsContainerInstancesException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.ECS.Model.ClusterContainsContainerInstancesException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.ECS.Model.ClusterContainsServicesException">
            <summary>
            You cannot delete a cluster that contains services. First, update the service to reduce
            its desired task count to 0 and then delete the service. For more information, see
            <a>UpdateService</a> and <a>DeleteService</a>.
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.ClusterContainsServicesException.#ctor(System.String)">
            <summary>
            Constructs a new ClusterContainsServicesException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECS.Model.ClusterContainsServicesException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ClusterContainsServicesException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ClusterContainsServicesException.#ctor(System.Exception)">
            <summary>
            Construct instance of ClusterContainsServicesException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ClusterContainsServicesException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ClusterContainsServicesException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ClusterContainsServicesException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ClusterContainsServicesException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ClusterContainsServicesException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ClusterContainsServicesException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.ECS.Model.ClusterContainsServicesException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.ECS.Model.ClusterContainsTasksException">
            <summary>
            You cannot delete a cluster that has active tasks.
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.ClusterContainsTasksException.#ctor(System.String)">
            <summary>
            Constructs a new ClusterContainsTasksException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECS.Model.ClusterContainsTasksException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ClusterContainsTasksException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ClusterContainsTasksException.#ctor(System.Exception)">
            <summary>
            Construct instance of ClusterContainsTasksException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ClusterContainsTasksException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ClusterContainsTasksException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ClusterContainsTasksException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ClusterContainsTasksException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ClusterContainsTasksException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ClusterContainsTasksException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.ECS.Model.ClusterContainsTasksException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.ECS.Model.ClusterNotFoundException">
            <summary>
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.ClusterNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ClusterNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECS.Model.ClusterNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ClusterNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ClusterNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of ClusterNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ClusterNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ClusterNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ClusterNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ClusterNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ClusterNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ClusterNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.ECS.Model.ClusterNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.ECS.Model.ClusterSetting">
            <summary>
            The settings to use when creating a cluster. This parameter is used to enable CloudWatch
            Container Insights for a cluster.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ClusterSetting.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the cluster setting. The only supported value is <code>containerInsights</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ClusterSetting.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The value to set for the cluster setting. The supported values are <code>enabled</code>
            and <code>disabled</code>. If <code>enabled</code> is specified, CloudWatch Container
            Insights will be enabled for the cluster, otherwise it will be disabled unless the
            <code>containerInsights</code> account setting is enabled. If a cluster value is specified,
            it will override the <code>containerInsights</code> value set with <a>PutAccountSetting</a>
            or <a>PutAccountSettingDefault</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Container">
            <summary>
            A Docker container that is part of a task.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Container.ContainerArn">
            <summary>
            Gets and sets the property ContainerArn. 
            <para>
            The Amazon Resource Name (ARN) of the container.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Container.Cpu">
            <summary>
            Gets and sets the property Cpu. 
            <para>
            The number of CPU units set for the container. The value will be <code>0</code> if
            no value was specified in the container definition when the task definition was registered.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Container.ExitCode">
            <summary>
            Gets and sets the property ExitCode. 
            <para>
            The exit code returned from the container.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Container.GpuIds">
            <summary>
            Gets and sets the property GpuIds. 
            <para>
            The IDs of each GPU assigned to the container.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Container.HealthStatus">
            <summary>
            Gets and sets the property HealthStatus. 
            <para>
            The health status of the container. If health checks are not configured for this container
            in its task definition, then it reports the health status as <code>UNKNOWN</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Container.Image">
            <summary>
            Gets and sets the property Image. 
            <para>
            The image used for the container.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Container.ImageDigest">
            <summary>
            Gets and sets the property ImageDigest. 
            <para>
            The container image manifest digest.
            </para>
             <note> 
            <para>
            The <code>imageDigest</code> is only returned if the container is using an image hosted
            in Amazon ECR, otherwise it is omitted.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Container.LastStatus">
            <summary>
            Gets and sets the property LastStatus. 
            <para>
            The last known status of the container.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Container.ManagedAgents">
            <summary>
            Gets and sets the property ManagedAgents. 
            <para>
            The details of any Amazon ECS managed agents associated with the container.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Container.Memory">
            <summary>
            Gets and sets the property Memory. 
            <para>
            The hard limit (in MiB) of memory set for the container.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Container.MemoryReservation">
            <summary>
            Gets and sets the property MemoryReservation. 
            <para>
            The soft limit (in MiB) of memory set for the container.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Container.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the container.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Container.NetworkBindings">
            <summary>
            Gets and sets the property NetworkBindings. 
            <para>
            The network bindings associated with the container.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Container.NetworkInterfaces">
            <summary>
            Gets and sets the property NetworkInterfaces. 
            <para>
            The network interfaces associated with the container.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Container.Reason">
            <summary>
            Gets and sets the property Reason. 
            <para>
            A short (255 max characters) human-readable string to provide additional details about
            a running or stopped container.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Container.RuntimeId">
            <summary>
            Gets and sets the property RuntimeId. 
            <para>
            The ID of the Docker container.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Container.TaskArn">
            <summary>
            Gets and sets the property TaskArn. 
            <para>
            The ARN of the task.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ContainerDefinition">
            <summary>
            Container definitions are used in task definitions to describe the different containers
            that are launched as part of a task.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.Command">
            <summary>
            Gets and sets the property Command. 
            <para>
            The command that is passed to the container. This parameter maps to <code>Cmd</code>
            in the <a href="https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.35/">Docker
            Remote API</a> and the <code>COMMAND</code> parameter to <a href="https://docs.docker.com/engine/reference/run/#security-configuration">docker
            run</a>. For more information, see <a href="https://docs.docker.com/engine/reference/builder/#cmd">https://docs.docker.com/engine/reference/builder/#cmd</a>.
            If there are multiple arguments, each argument should be a separated string in the
            array.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.Cpu">
            <summary>
            Gets and sets the property Cpu. 
            <para>
            The number of <code>cpu</code> units reserved for the container. This parameter maps
            to <code>CpuShares</code> in the <a href="https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.35/">Docker
            Remote API</a> and the <code>--cpu-shares</code> option to <a href="https://docs.docker.com/engine/reference/run/#security-configuration">docker
            run</a>.
            </para>
             
            <para>
            This field is optional for tasks using the Fargate launch type, and the only requirement
            is that the total amount of CPU reserved for all containers within a task be lower
            than the task-level <code>cpu</code> value.
            </para>
             <note> 
            <para>
            You can determine the number of CPU units that are available per EC2 instance type
            by multiplying the vCPUs listed for that instance type on the <a href="http://aws.amazon.com/ec2/instance-types/">Amazon
            EC2 Instances</a> detail page by 1,024.
            </para>
             </note> 
            <para>
            Linux containers share unallocated CPU units with other containers on the container
            instance with the same ratio as their allocated amount. For example, if you run a
            single-container task on a single-core instance type with 512 CPU units specified
            for that container, and that is the only task running on the container instance, that
            container could use the full 1,024 CPU unit share at any given time. However, if you
            launched another copy of the same task on that container instance, each task would
            be guaranteed a minimum of 512 CPU units when needed, and each container could float
            to higher CPU usage if the other container was not using it, but if both tasks were
            100% active all of the time, they would be limited to 512 CPU units.
            </para>
             
            <para>
            On Linux container instances, the Docker daemon on the container instance uses the
            CPU value to calculate the relative CPU share ratios for running containers. For more
            information, see <a href="https://docs.docker.com/engine/reference/run/#cpu-share-constraint">CPU
            share constraint</a> in the Docker documentation. The minimum valid CPU share value
            that the Linux kernel allows is 2. However, the CPU parameter is not required, and
            you can use CPU values below 2 in your container definitions. For CPU values below
            2 (including null), the behavior varies based on your Amazon ECS container agent version:
            </para>
             <ul> <li> 
            <para>
             <b>Agent versions less than or equal to 1.1.0:</b> Null and zero CPU values are passed
            to Docker as 0, which Docker then converts to 1,024 CPU shares. CPU values of 1 are
            passed to Docker as 1, which the Linux kernel converts to two CPU shares.
            </para>
             </li> <li> 
            <para>
             <b>Agent versions greater than or equal to 1.2.0:</b> Null, zero, and CPU values
            of 1 are passed to Docker as 2.
            </para>
             </li> </ul> 
            <para>
            On Windows container instances, the CPU limit is enforced as an absolute limit, or
            a quota. Windows containers only have access to the specified amount of CPU that is
            described in the task definition. A null or zero CPU value is passed to Docker as
            <code>0</code>, which Windows interprets as 1% of one CPU.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.DependsOn">
            <summary>
            Gets and sets the property DependsOn. 
            <para>
            The dependencies defined for container startup and shutdown. A container can contain
            multiple dependencies. When a dependency is defined for container startup, for container
            shutdown it is reversed.
            </para>
             
            <para>
            For tasks using the EC2 launch type, the container instances require at least version
            1.26.0 of the container agent to enable container dependencies. However, we recommend
            using the latest container agent version. For information about checking your agent
            version and updating to the latest version, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-update.html">Updating
            the Amazon ECS Container Agent</a> in the <i>Amazon Elastic Container Service Developer
            Guide</i>. If you are using an Amazon ECS-optimized Linux AMI, your instance needs
            at least version 1.26.0-1 of the <code>ecs-init</code> package. If your container
            instances are launched from version <code>20190301</code> or later, then they contain
            the required versions of the container agent and <code>ecs-init</code>. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-optimized_AMI.html">Amazon
            ECS-optimized Linux AMI</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            For tasks using the Fargate launch type, the task or service requires platform version
            <code>1.3.0</code> or later.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.DisableNetworking">
            <summary>
            Gets and sets the property DisableNetworking. 
            <para>
            When this parameter is true, networking is disabled within the container. This parameter
            maps to <code>NetworkDisabled</code> in the <a href="https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.35/">Docker
            Remote API</a>.
            </para>
             <note> 
            <para>
            This parameter is not supported for Windows containers.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.DnsSearchDomains">
            <summary>
            Gets and sets the property DnsSearchDomains. 
            <para>
            A list of DNS search domains that are presented to the container. This parameter maps
            to <code>DnsSearch</code> in the <a href="https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.35/">Docker
            Remote API</a> and the <code>--dns-search</code> option to <a href="https://docs.docker.com/engine/reference/run/#security-configuration">docker
            run</a>.
            </para>
             <note> 
            <para>
            This parameter is not supported for Windows containers.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.DnsServers">
            <summary>
            Gets and sets the property DnsServers. 
            <para>
            A list of DNS servers that are presented to the container. This parameter maps to
            <code>Dns</code> in the <a href="https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.35/">Docker
            Remote API</a> and the <code>--dns</code> option to <a href="https://docs.docker.com/engine/reference/run/#security-configuration">docker
            run</a>.
            </para>
             <note> 
            <para>
            This parameter is not supported for Windows containers.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.DockerLabels">
            <summary>
            Gets and sets the property DockerLabels. 
            <para>
            A key/value map of labels to add to the container. This parameter maps to <code>Labels</code>
            in the <a href="https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.35/">Docker
            Remote API</a> and the <code>--label</code> option to <a href="https://docs.docker.com/engine/reference/run/#security-configuration">docker
            run</a>. This parameter requires version 1.18 of the Docker Remote API or greater
            on your container instance. To check the Docker Remote API version on your container
            instance, log in to your container instance and run the following command: <code>sudo
            docker version --format '{{.Server.APIVersion}}'</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.DockerSecurityOptions">
            <summary>
            Gets and sets the property DockerSecurityOptions. 
            <para>
            A list of strings to provide custom labels for SELinux and AppArmor multi-level security
            systems. This field is not valid for containers in tasks using the Fargate launch
            type.
            </para>
             
            <para>
            With Windows containers, this parameter can be used to reference a credential spec
            file when configuring a container for Active Directory authentication. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/windows-gmsa.html">Using
            gMSAs for Windows Containers</a> in the <i>Amazon Elastic Container Service Developer
            Guide</i>.
            </para>
             
            <para>
            This parameter maps to <code>SecurityOpt</code> in the <a href="https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.35/">Docker
            Remote API</a> and the <code>--security-opt</code> option to <a href="https://docs.docker.com/engine/reference/run/#security-configuration">docker
            run</a>.
            </para>
             <note> 
            <para>
            The Amazon ECS container agent running on a container instance must register with
            the <code>ECS_SELINUX_CAPABLE=true</code> or <code>ECS_APPARMOR_CAPABLE=true</code>
            environment variables before containers placed on that instance can use these security
            options. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-config.html">Amazon
            ECS Container Agent Configuration</a> in the <i>Amazon Elastic Container Service Developer
            Guide</i>.
            </para>
             </note> 
            <para>
            For more information about valid values, see <a href="https://docs.docker.com/engine/reference/run/#security-configuration">Docker
            Run Security Configuration</a>. 
            </para>
             
            <para>
            Valid values: "no-new-privileges" | "apparmor:PROFILE" | "label:value" | "credentialspec:CredentialSpecFilePath"
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.EntryPoint">
            <summary>
            Gets and sets the property EntryPoint. <important> 
            <para>
            Early versions of the Amazon ECS container agent do not properly handle <code>entryPoint</code>
            parameters. If you have problems using <code>entryPoint</code>, update your container
            agent or enter your commands and arguments as <code>command</code> array items instead.
            </para>
             </important> 
            <para>
            The entry point that is passed to the container. This parameter maps to <code>Entrypoint</code>
            in the <a href="https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.35/">Docker
            Remote API</a> and the <code>--entrypoint</code> option to <a href="https://docs.docker.com/engine/reference/run/#security-configuration">docker
            run</a>. For more information, see <a href="https://docs.docker.com/engine/reference/builder/#entrypoint">https://docs.docker.com/engine/reference/builder/#entrypoint</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.Environment">
            <summary>
            Gets and sets the property Environment. 
            <para>
            The environment variables to pass to a container. This parameter maps to <code>Env</code>
            in the <a href="https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.35/">Docker
            Remote API</a> and the <code>--env</code> option to <a href="https://docs.docker.com/engine/reference/run/#security-configuration">docker
            run</a>.
            </para>
             <important> 
            <para>
            We do not recommend using plaintext environment variables for sensitive information,
            such as credential data.
            </para>
             </important>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.EnvironmentFiles">
            <summary>
            Gets and sets the property EnvironmentFiles. 
            <para>
            A list of files containing the environment variables to pass to a container. This
            parameter maps to the <code>--env-file</code> option to <a href="https://docs.docker.com/engine/reference/run/#security-configuration">docker
            run</a>.
            </para>
             
            <para>
            You can specify up to ten environment files. The file must have a <code>.env</code>
            file extension. Each line in an environment file should contain an environment variable
            in <code>VARIABLE=VALUE</code> format. Lines beginning with <code>#</code> are treated
            as comments and are ignored. For more information on the environment variable file
            syntax, see <a href="https://docs.docker.com/compose/env-file/">Declare default environment
            variables in file</a>.
            </para>
             
            <para>
            If there are environment variables specified using the <code>environment</code> parameter
            in a container definition, they take precedence over the variables contained within
            an environment file. If multiple environment files are specified that contain the
            same variable, they are processed from the top down. It is recommended to use unique
            variable names. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/taskdef-envfiles.html">Specifying
            Environment Variables</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.Essential">
            <summary>
            Gets and sets the property Essential. 
            <para>
            If the <code>essential</code> parameter of a container is marked as <code>true</code>,
            and that container fails or stops for any reason, all other containers that are part
            of the task are stopped. If the <code>essential</code> parameter of a container is
            marked as <code>false</code>, then its failure does not affect the rest of the containers
            in a task. If this parameter is omitted, a container is assumed to be essential.
            </para>
             
            <para>
            All tasks must have at least one essential container. If you have an application that
            is composed of multiple containers, you should group containers that are used for
            a common purpose into components, and separate the different components into multiple
            task definitions. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/application_architecture.html">Application
            Architecture</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.ExtraHosts">
            <summary>
            Gets and sets the property ExtraHosts. 
            <para>
            A list of hostnames and IP address mappings to append to the <code>/etc/hosts</code>
            file on the container. This parameter maps to <code>ExtraHosts</code> in the <a href="https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.35/">Docker
            Remote API</a> and the <code>--add-host</code> option to <a href="https://docs.docker.com/engine/reference/run/#security-configuration">docker
            run</a>.
            </para>
             <note> 
            <para>
            This parameter is not supported for Windows containers or tasks that use the <code>awsvpc</code>
            network mode.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.FirelensConfiguration">
            <summary>
            Gets and sets the property FirelensConfiguration. 
            <para>
            The FireLens configuration for the container. This is used to specify and configure
            a log router for container logs. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using_firelens.html">Custom
            Log Routing</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.HealthCheck">
            <summary>
            Gets and sets the property HealthCheck. 
            <para>
            The container health check command and associated configuration parameters for the
            container. This parameter maps to <code>HealthCheck</code> in the <a href="https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.35/">Docker
            Remote API</a> and the <code>HEALTHCHECK</code> parameter of <a href="https://docs.docker.com/engine/reference/run/#security-configuration">docker
            run</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.Hostname">
            <summary>
            Gets and sets the property Hostname. 
            <para>
            The hostname to use for your container. This parameter maps to <code>Hostname</code>
            in the <a href="https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.35/">Docker
            Remote API</a> and the <code>--hostname</code> option to <a href="https://docs.docker.com/engine/reference/run/#security-configuration">docker
            run</a>.
            </para>
             <note> 
            <para>
            The <code>hostname</code> parameter is not supported if you are using the <code>awsvpc</code>
            network mode.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.Image">
            <summary>
            Gets and sets the property Image. 
            <para>
            The image used to start a container. This string is passed directly to the Docker
            daemon. Images in the Docker Hub registry are available by default. Other repositories
            are specified with either <code> <i>repository-url</i>/<i>image</i>:<i>tag</i> </code>
            or <code> <i>repository-url</i>/<i>image</i>@<i>digest</i> </code>. Up to 255 letters
            (uppercase and lowercase), numbers, hyphens, underscores, colons, periods, forward
            slashes, and number signs are allowed. This parameter maps to <code>Image</code> in
            the <a href="https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.35/">Docker
            Remote API</a> and the <code>IMAGE</code> parameter of <a href="https://docs.docker.com/engine/reference/run/#security-configuration">docker
            run</a>.
            </para>
             <ul> <li> 
            <para>
            When a new task starts, the Amazon ECS container agent pulls the latest version of
            the specified image and tag for the container to use. However, subsequent updates
            to a repository image are not propagated to already running tasks.
            </para>
             </li> <li> 
            <para>
            Images in Amazon ECR repositories can be specified by either using the full <code>registry/repository:tag</code>
            or <code>registry/repository@digest</code>. For example, <code>012345678910.dkr.ecr.&lt;region-name&gt;.amazonaws.com/&lt;repository-name&gt;:latest</code>
            or <code>012345678910.dkr.ecr.&lt;region-name&gt;.amazonaws.com/&lt;repository-name&gt;@sha256:94afd1f2e64d908bc90dbca0035a5b567EXAMPLE</code>.
            
            </para>
             </li> <li> 
            <para>
            Images in official repositories on Docker Hub use a single name (for example, <code>ubuntu</code>
            or <code>mongo</code>).
            </para>
             </li> <li> 
            <para>
            Images in other repositories on Docker Hub are qualified with an organization name
            (for example, <code>amazon/amazon-ecs-agent</code>).
            </para>
             </li> <li> 
            <para>
            Images in other online repositories are qualified further by a domain name (for example,
            <code>quay.io/assemblyline/ubuntu</code>).
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.Interactive">
            <summary>
            Gets and sets the property Interactive. 
            <para>
            When this parameter is <code>true</code>, this allows you to deploy containerized
            applications that require <code>stdin</code> or a <code>tty</code> to be allocated.
            This parameter maps to <code>OpenStdin</code> in the <a href="https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.35/">Docker
            Remote API</a> and the <code>--interactive</code> option to <a href="https://docs.docker.com/engine/reference/run/#security-configuration">docker
            run</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.Links">
            <summary>
            Gets and sets the property Links. 
            <para>
            The <code>links</code> parameter allows containers to communicate with each other
            without the need for port mappings. This parameter is only supported if the network
            mode of a task definition is <code>bridge</code>. The <code>name:internalName</code>
            construct is analogous to <code>name:alias</code> in Docker links. Up to 255 letters
            (uppercase and lowercase), numbers, underscores, and hyphens are allowed. For more
            information about linking Docker containers, go to <a href="https://docs.docker.com/network/links/">Legacy
            container links</a> in the Docker documentation. This parameter maps to <code>Links</code>
            in the <a href="https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.35/">Docker
            Remote API</a> and the <code>--link</code> option to <a href="https://docs.docker.com/engine/reference/run/#security-configuration">docker
            run</a>.
            </para>
             <note> 
            <para>
            This parameter is not supported for Windows containers.
            </para>
             </note> <important> 
            <para>
            Containers that are collocated on a single container instance may be able to communicate
            with each other without requiring links or host port mappings. Network isolation is
            achieved on the container instance using security groups and VPC settings.
            </para>
             </important>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.LinuxParameters">
            <summary>
            Gets and sets the property LinuxParameters. 
            <para>
            Linux-specific modifications that are applied to the container, such as Linux kernel
            capabilities. For more information see <a>KernelCapabilities</a>.
            </para>
             <note> 
            <para>
            This parameter is not supported for Windows containers.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.LogConfiguration">
            <summary>
            Gets and sets the property LogConfiguration. 
            <para>
            The log configuration specification for the container.
            </para>
             
            <para>
            This parameter maps to <code>LogConfig</code> in the <a href="https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.35/">Docker
            Remote API</a> and the <code>--log-driver</code> option to <a href="https://docs.docker.com/engine/reference/run/#security-configuration">docker
            run</a>. By default, containers use the same logging driver that the Docker daemon
            uses. However the container may use a different logging driver than the Docker daemon
            by specifying a log driver with this parameter in the container definition. To use
            a different logging driver for a container, the log system must be configured properly
            on the container instance (or on a different log server for remote logging options).
            For more information on the options for different supported log drivers, see <a href="https://docs.docker.com/engine/admin/logging/overview/">Configure
            logging drivers</a> in the Docker documentation.
            </para>
             <note> 
            <para>
            Amazon ECS currently supports a subset of the logging drivers available to the Docker
            daemon (shown in the <a>LogConfiguration</a> data type). Additional log drivers may
            be available in future releases of the Amazon ECS container agent.
            </para>
             </note> 
            <para>
            This parameter requires version 1.18 of the Docker Remote API or greater on your container
            instance. To check the Docker Remote API version on your container instance, log in
            to your container instance and run the following command: <code>sudo docker version
            --format '{{.Server.APIVersion}}'</code> 
            </para>
             <note> 
            <para>
            The Amazon ECS container agent running on a container instance must register the logging
            drivers available on that instance with the <code>ECS_AVAILABLE_LOGGING_DRIVERS</code>
            environment variable before containers placed on that instance can use these log configuration
            options. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-config.html">Amazon
            ECS Container Agent Configuration</a> in the <i>Amazon Elastic Container Service Developer
            Guide</i>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.Memory">
            <summary>
            Gets and sets the property Memory. 
            <para>
            The amount (in MiB) of memory to present to the container. If your container attempts
            to exceed the memory specified here, the container is killed. The total amount of
            memory reserved for all containers within a task must be lower than the task <code>memory</code>
            value, if one is specified. This parameter maps to <code>Memory</code> in the <a href="https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.35/">Docker
            Remote API</a> and the <code>--memory</code> option to <a href="https://docs.docker.com/engine/reference/run/#security-configuration">docker
            run</a>.
            </para>
             
            <para>
            If using the Fargate launch type, this parameter is optional.
            </para>
             
            <para>
            If using the EC2 launch type, you must specify either a task-level memory value or
            a container-level memory value. If you specify both a container-level <code>memory</code>
            and <code>memoryReservation</code> value, <code>memory</code> must be greater than
            <code>memoryReservation</code>. If you specify <code>memoryReservation</code>, then
            that value is subtracted from the available memory resources for the container instance
            on which the container is placed. Otherwise, the value of <code>memory</code> is used.
            </para>
             
            <para>
            The Docker daemon reserves a minimum of 4 MiB of memory for a container, so you should
            not specify fewer than 4 MiB of memory for your containers.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.MemoryReservation">
            <summary>
            Gets and sets the property MemoryReservation. 
            <para>
            The soft limit (in MiB) of memory to reserve for the container. When system memory
            is under heavy contention, Docker attempts to keep the container memory to this soft
            limit. However, your container can consume more memory when it needs to, up to either
            the hard limit specified with the <code>memory</code> parameter (if applicable), or
            all of the available memory on the container instance, whichever comes first. This
            parameter maps to <code>MemoryReservation</code> in the <a href="https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.35/">Docker
            Remote API</a> and the <code>--memory-reservation</code> option to <a href="https://docs.docker.com/engine/reference/run/#security-configuration">docker
            run</a>.
            </para>
             
            <para>
            If a task-level memory value is not specified, you must specify a non-zero integer
            for one or both of <code>memory</code> or <code>memoryReservation</code> in a container
            definition. If you specify both, <code>memory</code> must be greater than <code>memoryReservation</code>.
            If you specify <code>memoryReservation</code>, then that value is subtracted from
            the available memory resources for the container instance on which the container is
            placed. Otherwise, the value of <code>memory</code> is used.
            </para>
             
            <para>
            For example, if your container normally uses 128 MiB of memory, but occasionally bursts
            to 256 MiB of memory for short periods of time, you can set a <code>memoryReservation</code>
            of 128 MiB, and a <code>memory</code> hard limit of 300 MiB. This configuration would
            allow the container to only reserve 128 MiB of memory from the remaining resources
            on the container instance, but also allow the container to consume more memory resources
            when needed.
            </para>
             
            <para>
            The Docker daemon reserves a minimum of 4 MiB of memory for a container, so you should
            not specify fewer than 4 MiB of memory for your containers. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.MountPoints">
            <summary>
            Gets and sets the property MountPoints. 
            <para>
            The mount points for data volumes in your container.
            </para>
             
            <para>
            This parameter maps to <code>Volumes</code> in the <a href="https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.35/">Docker
            Remote API</a> and the <code>--volume</code> option to <a href="https://docs.docker.com/engine/reference/run/#security-configuration">docker
            run</a>.
            </para>
             
            <para>
            Windows containers can mount whole directories on the same drive as <code>$env:ProgramData</code>.
            Windows containers cannot mount directories on a different drive, and mount point
            cannot be across drives.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of a container. If you are linking multiple containers together in a task
            definition, the <code>name</code> of one container can be entered in the <code>links</code>
            of another container to connect the containers. Up to 255 letters (uppercase and lowercase),
            numbers, underscores, and hyphens are allowed. This parameter maps to <code>name</code>
            in the <a href="https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.35/">Docker
            Remote API</a> and the <code>--name</code> option to <a href="https://docs.docker.com/engine/reference/run/#security-configuration">docker
            run</a>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.PortMappings">
            <summary>
            Gets and sets the property PortMappings. 
            <para>
            The list of port mappings for the container. Port mappings allow containers to access
            ports on the host container instance to send or receive traffic.
            </para>
             
            <para>
            For task definitions that use the <code>awsvpc</code> network mode, you should only
            specify the <code>containerPort</code>. The <code>hostPort</code> can be left blank
            or it must be the same value as the <code>containerPort</code>.
            </para>
             
            <para>
            Port mappings on Windows use the <code>NetNAT</code> gateway address rather than <code>localhost</code>.
            There is no loopback for port mappings on Windows, so you cannot access a container's
            mapped port from the host itself. 
            </para>
             
            <para>
            This parameter maps to <code>PortBindings</code> in the <a href="https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.35/">Docker
            Remote API</a> and the <code>--publish</code> option to <a href="https://docs.docker.com/engine/reference/run/#security-configuration">docker
            run</a>. If the network mode of a task definition is set to <code>none</code>, then
            you can't specify port mappings. If the network mode of a task definition is set to
            <code>host</code>, then host ports must either be undefined or they must match the
            container port in the port mapping.
            </para>
             <note> 
            <para>
            After a task reaches the <code>RUNNING</code> status, manual and automatic host and
            container port assignments are visible in the <b>Network Bindings</b> section of a
            container description for a selected task in the Amazon ECS console. The assignments
            are also visible in the <code>networkBindings</code> section <a>DescribeTasks</a>
            responses.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.Privileged">
            <summary>
            Gets and sets the property Privileged. 
            <para>
            When this parameter is true, the container is given elevated privileges on the host
            container instance (similar to the <code>root</code> user). This parameter maps to
            <code>Privileged</code> in the <a href="https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.35/">Docker
            Remote API</a> and the <code>--privileged</code> option to <a href="https://docs.docker.com/engine/reference/run/#security-configuration">docker
            run</a>.
            </para>
             <note> 
            <para>
            This parameter is not supported for Windows containers or tasks run on Fargate.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.PseudoTerminal">
            <summary>
            Gets and sets the property PseudoTerminal. 
            <para>
            When this parameter is <code>true</code>, a TTY is allocated. This parameter maps
            to <code>Tty</code> in the <a href="https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.35/">Docker
            Remote API</a> and the <code>--tty</code> option to <a href="https://docs.docker.com/engine/reference/run/#security-configuration">docker
            run</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.ReadonlyRootFilesystem">
            <summary>
            Gets and sets the property ReadonlyRootFilesystem. 
            <para>
            When this parameter is true, the container is given read-only access to its root file
            system. This parameter maps to <code>ReadonlyRootfs</code> in the <a href="https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.35/">Docker
            Remote API</a> and the <code>--read-only</code> option to <a href="https://docs.docker.com/engine/reference/run/#security-configuration">docker
            run</a>.
            </para>
             <note> 
            <para>
            This parameter is not supported for Windows containers.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.RepositoryCredentials">
            <summary>
            Gets and sets the property RepositoryCredentials. 
            <para>
            The private repository authentication credentials to use.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.ResourceRequirements">
            <summary>
            Gets and sets the property ResourceRequirements. 
            <para>
            The type and amount of a resource to assign to a container. The only supported resource
            is a GPU.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.Secrets">
            <summary>
            Gets and sets the property Secrets. 
            <para>
            The secrets to pass to the container. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/specifying-sensitive-data.html">Specifying
            Sensitive Data</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.StartTimeout">
            <summary>
            Gets and sets the property StartTimeout. 
            <para>
            Time duration (in seconds) to wait before giving up on resolving dependencies for
            a container. For example, you specify two containers in a task definition with containerA
            having a dependency on containerB reaching a <code>COMPLETE</code>, <code>SUCCESS</code>,
            or <code>HEALTHY</code> status. If a <code>startTimeout</code> value is specified
            for containerB and it does not reach the desired status within that time then containerA
            will give up and not start. This results in the task transitioning to a <code>STOPPED</code>
            state.
            </para>
             <note> 
            <para>
            When the <code>ECS_CONTAINER_START_TIMEOUT</code> container agent configuration variable
            is used, it is enforced indendently from this start timeout value.
            </para>
             </note> 
            <para>
            For tasks using the Fargate launch type, this parameter requires that the task or
            service uses platform version 1.3.0 or later.
            </para>
             
            <para>
            For tasks using the EC2 launch type, your container instances require at least version
            <code>1.26.0</code> of the container agent to enable a container start timeout value.
            However, we recommend using the latest container agent version. For information about
            checking your agent version and updating to the latest version, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-update.html">Updating
            the Amazon ECS Container Agent</a> in the <i>Amazon Elastic Container Service Developer
            Guide</i>. If you are using an Amazon ECS-optimized Linux AMI, your instance needs
            at least version <code>1.26.0-1</code> of the <code>ecs-init</code> package. If your
            container instances are launched from version <code>20190301</code> or later, then
            they contain the required versions of the container agent and <code>ecs-init</code>.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-optimized_AMI.html">Amazon
            ECS-optimized Linux AMI</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.StopTimeout">
            <summary>
            Gets and sets the property StopTimeout. 
            <para>
            Time duration (in seconds) to wait before the container is forcefully killed if it
            doesn't exit normally on its own.
            </para>
             
            <para>
            For tasks using the Fargate launch type, the task or service requires platform version
            1.3.0 or later. The max stop timeout value is 120 seconds and if the parameter is
            not specified, the default value of 30 seconds is used.
            </para>
             
            <para>
            For tasks using the EC2 launch type, if the <code>stopTimeout</code> parameter is
            not specified, the value set for the Amazon ECS container agent configuration variable
            <code>ECS_CONTAINER_STOP_TIMEOUT</code> is used by default. If neither the <code>stopTimeout</code>
            parameter or the <code>ECS_CONTAINER_STOP_TIMEOUT</code> agent configuration variable
            are set, then the default values of 30 seconds for Linux containers and 30 seconds
            on Windows containers are used. Your container instances require at least version
            1.26.0 of the container agent to enable a container stop timeout value. However, we
            recommend using the latest container agent version. For information about checking
            your agent version and updating to the latest version, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-update.html">Updating
            the Amazon ECS Container Agent</a> in the <i>Amazon Elastic Container Service Developer
            Guide</i>. If you are using an Amazon ECS-optimized Linux AMI, your instance needs
            at least version 1.26.0-1 of the <code>ecs-init</code> package. If your container
            instances are launched from version <code>20190301</code> or later, then they contain
            the required versions of the container agent and <code>ecs-init</code>. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-optimized_AMI.html">Amazon
            ECS-optimized Linux AMI</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.SystemControls">
            <summary>
            Gets and sets the property SystemControls. 
            <para>
            A list of namespaced kernel parameters to set in the container. This parameter maps
            to <code>Sysctls</code> in the <a href="https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.35/">Docker
            Remote API</a> and the <code>--sysctl</code> option to <a href="https://docs.docker.com/engine/reference/run/#security-configuration">docker
            run</a>.
            </para>
             <note> 
            <para>
            It is not recommended that you specify network-related <code>systemControls</code>
            parameters for multiple containers in a single task that also uses either the <code>awsvpc</code>
            or <code>host</code> network modes. For tasks that use the <code>awsvpc</code> network
            mode, the container that is started last determines which <code>systemControls</code>
            parameters take effect. For tasks that use the <code>host</code> network mode, it
            changes the container instance's namespaced kernel parameters as well as the containers.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.Ulimits">
            <summary>
            Gets and sets the property Ulimits. 
            <para>
            A list of <code>ulimits</code> to set in the container. If a ulimit value is specified
            in a task definition, it will override the default values set by Docker. This parameter
            maps to <code>Ulimits</code> in the <a href="https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.35/">Docker
            Remote API</a> and the <code>--ulimit</code> option to <a href="https://docs.docker.com/engine/reference/run/#security-configuration">docker
            run</a>. Valid naming values are displayed in the <a>Ulimit</a> data type.
            </para>
             
            <para>
            Amazon ECS tasks hosted on Fargate use the default resource limit values set by the
            operating system with the exception of the <code>nofile</code> resource limit parameter
            which Fargate overrides. The <code>nofile</code> resource limit sets a restriction
            on the number of open files that a container can use. The default <code>nofile</code>
            soft limit is <code>1024</code> and hard limit is <code>4096</code>.
            </para>
             
            <para>
            This parameter requires version 1.18 of the Docker Remote API or greater on your container
            instance. To check the Docker Remote API version on your container instance, log in
            to your container instance and run the following command: <code>sudo docker version
            --format '{{.Server.APIVersion}}'</code> 
            </para>
             <note> 
            <para>
            This parameter is not supported for Windows containers.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.User">
            <summary>
            Gets and sets the property User. 
            <para>
            The user to use inside the container. This parameter maps to <code>User</code> in
            the <a href="https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.35/">Docker
            Remote API</a> and the <code>--user</code> option to <a href="https://docs.docker.com/engine/reference/run/#security-configuration">docker
            run</a>.
            </para>
             <important> 
            <para>
            When running tasks using the <code>host</code> network mode, you should not run containers
            using the root user (UID 0). It is considered best practice to use a non-root user.
            </para>
             </important> 
            <para>
            You can specify the <code>user</code> using the following formats. If specifying a
            UID or GID, you must specify it as a positive integer.
            </para>
             <ul> <li> 
            <para>
             <code>user</code> 
            </para>
             </li> <li> 
            <para>
             <code>user:group</code> 
            </para>
             </li> <li> 
            <para>
             <code>uid</code> 
            </para>
             </li> <li> 
            <para>
             <code>uid:gid</code> 
            </para>
             </li> <li> 
            <para>
             <code>user:gid</code> 
            </para>
             </li> <li> 
            <para>
             <code>uid:group</code> 
            </para>
             </li> </ul> <note> 
            <para>
            This parameter is not supported for Windows containers.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.VolumesFrom">
            <summary>
            Gets and sets the property VolumesFrom. 
            <para>
            Data volumes to mount from another container. This parameter maps to <code>VolumesFrom</code>
            in the <a href="https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.35/">Docker
            Remote API</a> and the <code>--volumes-from</code> option to <a href="https://docs.docker.com/engine/reference/run/#security-configuration">docker
            run</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.WorkingDirectory">
            <summary>
            Gets and sets the property WorkingDirectory. 
            <para>
            The working directory in which to run commands inside the container. This parameter
            maps to <code>WorkingDir</code> in the <a href="https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.35/">Docker
            Remote API</a> and the <code>--workdir</code> option to <a href="https://docs.docker.com/engine/reference/run/#security-configuration">docker
            run</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ContainerDependency">
            <summary>
            The dependencies defined for container startup and shutdown. A container can contain
            multiple dependencies. When a dependency is defined for container startup, for container
            shutdown it is reversed.
            
             
            <para>
            Your Amazon ECS container instances require at least version 1.26.0 of the container
            agent to enable container dependencies. However, we recommend using the latest container
            agent version. For information about checking your agent version and updating to the
            latest version, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-update.html">Updating
            the Amazon ECS Container Agent</a> in the <i>Amazon Elastic Container Service Developer
            Guide</i>. If you are using an Amazon ECS-optimized Linux AMI, your instance needs
            at least version 1.26.0-1 of the <code>ecs-init</code> package. If your container
            instances are launched from version <code>20190301</code> or later, then they contain
            the required versions of the container agent and <code>ecs-init</code>. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-optimized_AMI.html">Amazon
            ECS-optimized Linux AMI</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             <note> 
            <para>
            For tasks using the Fargate launch type, this parameter requires that the task or
            service uses platform version 1.3.0 or later.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDependency.Condition">
            <summary>
            Gets and sets the property Condition. 
            <para>
            The dependency condition of the container. The following are the available conditions
            and their behavior:
            </para>
             <ul> <li> 
            <para>
             <code>START</code> - This condition emulates the behavior of links and volumes today.
            It validates that a dependent container is started before permitting other containers
            to start.
            </para>
             </li> <li> 
            <para>
             <code>COMPLETE</code> - This condition validates that a dependent container runs
            to completion (exits) before permitting other containers to start. This can be useful
            for nonessential containers that run a script and then exit. This condition cannot
            be set on an essential container.
            </para>
             </li> <li> 
            <para>
             <code>SUCCESS</code> - This condition is the same as <code>COMPLETE</code>, but it
            also requires that the container exits with a <code>zero</code> status. This condition
            cannot be set on an essential container.
            </para>
             </li> <li> 
            <para>
             <code>HEALTHY</code> - This condition validates that the dependent container passes
            its Docker health check before permitting other containers to start. This requires
            that the dependent container has health checks configured. This condition is confirmed
            only at task startup.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDependency.ContainerName">
            <summary>
            Gets and sets the property ContainerName. 
            <para>
            The name of a container.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ContainerInstance">
            <summary>
            An EC2 instance that is running the Amazon ECS agent and has been registered with
            a cluster.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerInstance.AgentConnected">
            <summary>
            Gets and sets the property AgentConnected. 
            <para>
            This parameter returns <code>true</code> if the agent is connected to Amazon ECS.
            Registered instances with an agent that may be unhealthy or stopped return <code>false</code>.
            Only instances connected to an agent can accept placement requests.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerInstance.AgentUpdateStatus">
            <summary>
            Gets and sets the property AgentUpdateStatus. 
            <para>
            The status of the most recent agent update. If an update has never been requested,
            this value is <code>NULL</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerInstance.Attachments">
            <summary>
            Gets and sets the property Attachments. 
            <para>
            The resources attached to a container instance, such as elastic network interfaces.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerInstance.Attributes">
            <summary>
            Gets and sets the property Attributes. 
            <para>
            The attributes set for the container instance, either by the Amazon ECS container
            agent at instance registration or manually with the <a>PutAttributes</a> operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerInstance.CapacityProviderName">
            <summary>
            Gets and sets the property CapacityProviderName. 
            <para>
            The capacity provider associated with the container instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerInstance.ContainerInstanceArn">
            <summary>
            Gets and sets the property ContainerInstanceArn. 
            <para>
            The Amazon Resource Name (ARN) of the container instance. The ARN contains the <code>arn:aws:ecs</code>
            namespace, followed by the Region of the container instance, the Amazon Web Services
            account ID of the container instance owner, the <code>container-instance</code> namespace,
            and then the container instance ID. For example, <code>arn:aws:ecs:region:aws_account_id:container-instance/container_instance_ID</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerInstance.Ec2InstanceId">
            <summary>
            Gets and sets the property Ec2InstanceId. 
            <para>
            The ID of the container instance. For Amazon EC2 instances, this value is the Amazon
            EC2 instance ID. For external instances, this value is the Amazon Web Services Systems
            Manager managed instance ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerInstance.PendingTasksCount">
            <summary>
            Gets and sets the property PendingTasksCount. 
            <para>
            The number of tasks on the container instance that are in the <code>PENDING</code>
            status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerInstance.RegisteredAt">
            <summary>
            Gets and sets the property RegisteredAt. 
            <para>
            The Unix timestamp for when the container instance was registered.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerInstance.RegisteredResources">
            <summary>
            Gets and sets the property RegisteredResources. 
            <para>
            For CPU and memory resource types, this parameter describes the amount of each resource
            that was available on the container instance when the container agent registered it
            with Amazon ECS. This value represents the total amount of CPU and memory that can
            be allocated on this container instance to tasks. For port resource types, this parameter
            describes the ports that were reserved by the Amazon ECS container agent when it registered
            the container instance with Amazon ECS.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerInstance.RemainingResources">
            <summary>
            Gets and sets the property RemainingResources. 
            <para>
            For CPU and memory resource types, this parameter describes the remaining CPU and
            memory that has not already been allocated to tasks and is therefore available for
            new tasks. For port resource types, this parameter describes the ports that were reserved
            by the Amazon ECS container agent (at instance registration time) and any task containers
            that have reserved port mappings on the host (with the <code>host</code> or <code>bridge</code>
            network mode). Any port that is not specified here is available for new tasks.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerInstance.RunningTasksCount">
            <summary>
            Gets and sets the property RunningTasksCount. 
            <para>
            The number of tasks on the container instance that are in the <code>RUNNING</code>
            status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerInstance.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the container instance. The valid values are <code>REGISTERING</code>,
            <code>REGISTRATION_FAILED</code>, <code>ACTIVE</code>, <code>INACTIVE</code>, <code>DEREGISTERING</code>,
            or <code>DRAINING</code>.
            </para>
             
            <para>
            If your account has opted in to the <code>awsvpcTrunking</code> account setting, then
            any newly registered container instance will transition to a <code>REGISTERING</code>
            status while the trunk elastic network interface is provisioned for the instance.
            If the registration fails, the instance will transition to a <code>REGISTRATION_FAILED</code>
            status. You can describe the container instance and see the reason for failure in
            the <code>statusReason</code> parameter. Once the container instance is terminated,
            the instance transitions to a <code>DEREGISTERING</code> status while the trunk elastic
            network interface is deprovisioned. The instance then transitions to an <code>INACTIVE</code>
            status.
            </para>
             
            <para>
            The <code>ACTIVE</code> status indicates that the container instance can accept tasks.
            The <code>DRAINING</code> indicates that new tasks are not placed on the container
            instance and any service tasks running on the container instance are removed if possible.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/container-instance-draining.html">Container
            Instance Draining</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerInstance.StatusReason">
            <summary>
            Gets and sets the property StatusReason. 
            <para>
            The reason that the container instance reached its current status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerInstance.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The metadata that you apply to the container instance to help you categorize and organize
            them. Each tag consists of a key and an optional value, both of which you define.
            </para>
             
            <para>
            The following basic restrictions apply to tags:
            </para>
             <ul> <li> 
            <para>
            Maximum number of tags per resource - 50
            </para>
             </li> <li> 
            <para>
            For each resource, each tag key must be unique, and each tag key can have only one
            value.
            </para>
             </li> <li> 
            <para>
            Maximum key length - 128 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            Maximum value length - 256 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            If your tagging schema is used across multiple services and resources, remember that
            other services may have restrictions on allowed characters. Generally allowed characters
            are: letters, numbers, and spaces representable in UTF-8, and the following characters:
            + - = . _ : / @.
            </para>
             </li> <li> 
            <para>
            Tag keys and values are case-sensitive.
            </para>
             </li> <li> 
            <para>
            Do not use <code>aws:</code>, <code>AWS:</code>, or any upper or lowercase combination
            of such as a prefix for either keys or values as it is reserved for Amazon Web Services
            use. You cannot edit or delete tag keys or values with this prefix. Tags with this
            prefix do not count against your tags per resource limit.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerInstance.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            The version counter for the container instance. Every time a container instance experiences
            a change that triggers a CloudWatch event, the version counter is incremented. If
            you are replicating your Amazon ECS container instance state with CloudWatch Events,
            you can compare the version of a container instance reported by the Amazon ECS APIs
            with the version reported in CloudWatch Events for the container instance (inside
            the <code>detail</code> object) to verify that the version in your event stream is
            current.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerInstance.VersionInfo">
            <summary>
            Gets and sets the property VersionInfo. 
            <para>
            The version information for the Amazon ECS container agent and Docker daemon running
            on the container instance.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ContainerOverride">
            <summary>
            The overrides that should be sent to a container. An empty container override can
            be passed in. An example of an empty container override would be <code>{"containerOverrides":
            [ ] }</code>. If a non-empty container override is specified, the <code>name</code>
            parameter must be included.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerOverride.Command">
            <summary>
            Gets and sets the property Command. 
            <para>
            The command to send to the container that overrides the default command from the Docker
            image or the task definition. You must also specify a container name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerOverride.Cpu">
            <summary>
            Gets and sets the property Cpu. 
            <para>
            The number of <code>cpu</code> units reserved for the container, instead of the default
            value from the task definition. You must also specify a container name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerOverride.Environment">
            <summary>
            Gets and sets the property Environment. 
            <para>
            The environment variables to send to the container. You can add new environment variables,
            which are added to the container at launch, or you can override the existing environment
            variables from the Docker image or the task definition. You must also specify a container
            name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerOverride.EnvironmentFiles">
            <summary>
            Gets and sets the property EnvironmentFiles. 
            <para>
            A list of files containing the environment variables to pass to a container, instead
            of the value from the container definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerOverride.Memory">
            <summary>
            Gets and sets the property Memory. 
            <para>
            The hard limit (in MiB) of memory to present to the container, instead of the default
            value from the task definition. If your container attempts to exceed the memory specified
            here, the container is killed. You must also specify a container name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerOverride.MemoryReservation">
            <summary>
            Gets and sets the property MemoryReservation. 
            <para>
            The soft limit (in MiB) of memory to reserve for the container, instead of the default
            value from the task definition. You must also specify a container name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerOverride.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the container that receives the override. This parameter is required if
            any override is specified.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerOverride.ResourceRequirements">
            <summary>
            Gets and sets the property ResourceRequirements. 
            <para>
            The type and amount of a resource to assign to a container, instead of the default
            value from the task definition. The only supported resource is a GPU.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.CreateCapacityProviderRequest">
            <summary>
            Container for the parameters to the CreateCapacityProvider operation.
            Creates a new capacity provider. Capacity providers are associated with an Amazon
            ECS cluster and are used in capacity provider strategies to facilitate cluster auto
            scaling.
            
             
            <para>
            Only capacity providers using an Auto Scaling group can be created. Amazon ECS tasks
            on Fargate use the <code>FARGATE</code> and <code>FARGATE_SPOT</code> capacity providers
            which are already created and available to all accounts in Regions supported by Fargate.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateCapacityProviderRequest.AutoScalingGroupProvider">
            <summary>
            Gets and sets the property AutoScalingGroupProvider. 
            <para>
            The details of the Auto Scaling group for the capacity provider.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateCapacityProviderRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the capacity provider. Up to 255 characters are allowed, including letters
            (upper and lowercase), numbers, underscores, and hyphens. The name cannot be prefixed
            with "<code>aws</code>", "<code>ecs</code>", or "<code>fargate</code>".
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateCapacityProviderRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The metadata that you apply to the capacity provider to help you categorize and organize
            them. Each tag consists of a key and an optional value, both of which you define.
            </para>
             
            <para>
            The following basic restrictions apply to tags:
            </para>
             <ul> <li> 
            <para>
            Maximum number of tags per resource - 50
            </para>
             </li> <li> 
            <para>
            For each resource, each tag key must be unique, and each tag key can have only one
            value.
            </para>
             </li> <li> 
            <para>
            Maximum key length - 128 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            Maximum value length - 256 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            If your tagging schema is used across multiple services and resources, remember that
            other services may have restrictions on allowed characters. Generally allowed characters
            are: letters, numbers, and spaces representable in UTF-8, and the following characters:
            + - = . _ : / @.
            </para>
             </li> <li> 
            <para>
            Tag keys and values are case-sensitive.
            </para>
             </li> <li> 
            <para>
            Do not use <code>aws:</code>, <code>AWS:</code>, or any upper or lowercase combination
            of such as a prefix for either keys or values as it is reserved for Amazon Web Services
            use. You cannot edit or delete tag keys or values with this prefix. Tags with this
            prefix do not count against your tags per resource limit.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.CreateCapacityProviderResponse">
            <summary>
            This is the response object from the CreateCapacityProvider operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateCapacityProviderResponse.CapacityProvider">
            <summary>
            Gets and sets the property CapacityProvider. 
            <para>
            The full description of the new capacity provider.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.CreateClusterRequest">
            <summary>
            Container for the parameters to the CreateCluster operation.
            Creates a new Amazon ECS cluster. By default, your account receives a <code>default</code>
            cluster when you launch your first container instance. However, you can create your
            own cluster with a unique name with the <code>CreateCluster</code> action.
            
             <note> 
            <para>
            When you call the <a>CreateCluster</a> API operation, Amazon ECS attempts to create
            the Amazon ECS service-linked role for your account so that required resources in
            other Amazon Web Services services can be managed on your behalf. However, if the
            IAM user that makes the call does not have permissions to create the service-linked
            role, it is not created. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using-service-linked-roles.html">Using
            Service-Linked Roles for Amazon ECS</a> in the <i>Amazon Elastic Container Service
            Developer Guide</i>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateClusterRequest.CapacityProviders">
            <summary>
            Gets and sets the property CapacityProviders. 
            <para>
            The short name of one or more capacity providers to associate with the cluster. A
            capacity provider must be associated with a cluster before it can be included as part
            of the default capacity provider strategy of the cluster or used in a capacity provider
            strategy when calling the <a>CreateService</a> or <a>RunTask</a> actions.
            </para>
             
            <para>
            If specifying a capacity provider that uses an Auto Scaling group, the capacity provider
            must already be created and not already associated with another cluster. New Auto
            Scaling group capacity providers can be created with the <a>CreateCapacityProvider</a>
            API operation.
            </para>
             
            <para>
            To use a Fargate capacity provider, specify either the <code>FARGATE</code> or <code>FARGATE_SPOT</code>
            capacity providers. The Fargate capacity providers are available to all accounts and
            only need to be associated with a cluster to be used.
            </para>
             
            <para>
            The <a>PutClusterCapacityProviders</a> API operation is used to update the list of
            available capacity providers for a cluster after the cluster is created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateClusterRequest.ClusterName">
            <summary>
            Gets and sets the property ClusterName. 
            <para>
            The name of your cluster. If you do not specify a name for your cluster, you create
            a cluster named <code>default</code>. Up to 255 letters (uppercase and lowercase),
            numbers, underscores, and hyphens are allowed. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateClusterRequest.Configuration">
            <summary>
            Gets and sets the property Configuration. 
            <para>
            The execute command configuration for the cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateClusterRequest.DefaultCapacityProviderStrategy">
            <summary>
            Gets and sets the property DefaultCapacityProviderStrategy. 
            <para>
            The capacity provider strategy to set as the default for the cluster. When a default
            capacity provider strategy is set for a cluster, when calling the <a>RunTask</a> or
            <a>CreateService</a> APIs with no capacity provider strategy or launch type specified,
            the default capacity provider strategy for the cluster is used.
            </para>
             
            <para>
            If a default capacity provider strategy is not defined for a cluster during creation,
            it can be defined later with the <a>PutClusterCapacityProviders</a> API operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateClusterRequest.Settings">
            <summary>
            Gets and sets the property Settings. 
            <para>
            The setting to use when creating a cluster. This parameter is used to enable CloudWatch
            Container Insights for a cluster. If this value is specified, it will override the
            <code>containerInsights</code> value set with <a>PutAccountSetting</a> or <a>PutAccountSettingDefault</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateClusterRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The metadata that you apply to the cluster to help you categorize and organize them.
            Each tag consists of a key and an optional value, both of which you define.
            </para>
             
            <para>
            The following basic restrictions apply to tags:
            </para>
             <ul> <li> 
            <para>
            Maximum number of tags per resource - 50
            </para>
             </li> <li> 
            <para>
            For each resource, each tag key must be unique, and each tag key can have only one
            value.
            </para>
             </li> <li> 
            <para>
            Maximum key length - 128 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            Maximum value length - 256 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            If your tagging schema is used across multiple services and resources, remember that
            other services may have restrictions on allowed characters. Generally allowed characters
            are: letters, numbers, and spaces representable in UTF-8, and the following characters:
            + - = . _ : / @.
            </para>
             </li> <li> 
            <para>
            Tag keys and values are case-sensitive.
            </para>
             </li> <li> 
            <para>
            Do not use <code>aws:</code>, <code>AWS:</code>, or any upper or lowercase combination
            of such as a prefix for either keys or values as it is reserved for Amazon Web Services
            use. You cannot edit or delete tag keys or values with this prefix. Tags with this
            prefix do not count against your tags per resource limit.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.CreateClusterResponse">
            <summary>
            This is the response object from the CreateCluster operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateClusterResponse.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The full description of your new cluster.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.CreateServiceRequest">
            <summary>
            Container for the parameters to the CreateService operation.
            Runs and maintains a desired number of tasks from a specified task definition. If
            the number of tasks running in a service drops below the <code>desiredCount</code>,
            Amazon ECS runs another copy of the task in the specified cluster. To update an existing
            service, see the UpdateService action.
            
             
            <para>
            In addition to maintaining the desired count of tasks in your service, you can optionally
            run your service behind one or more load balancers. The load balancers distribute
            traffic across the tasks that are associated with the service. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-load-balancing.html">Service
            Load Balancing</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            Tasks for services that <i>do not</i> use a load balancer are considered healthy if
            they're in the <code>RUNNING</code> state. Tasks for services that <i>do</i> use a
            load balancer are considered healthy if they're in the <code>RUNNING</code> state
            and the container instance that they're hosted on is reported as healthy by the load
            balancer.
            </para>
             
            <para>
            There are two service scheduler strategies available:
            </para>
             <ul> <li> 
            <para>
             <code>REPLICA</code> - The replica scheduling strategy places and maintains the desired
            number of tasks across your cluster. By default, the service scheduler spreads tasks
            across Availability Zones. You can use task placement strategies and constraints to
            customize task placement decisions. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs_services.html">Service
            Scheduler Concepts</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             </li> <li> 
            <para>
             <code>DAEMON</code> - The daemon scheduling strategy deploys exactly one task on
            each active container instance that meets all of the task placement constraints that
            you specify in your cluster. The service scheduler also evaluates the task placement
            constraints for running tasks and will stop tasks that do not meet the placement constraints.
            When using this strategy, you don't need to specify a desired number of tasks, a task
            placement strategy, or use Service Auto Scaling policies. For more information, see
            <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs_services.html">Service
            Scheduler Concepts</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             </li> </ul> 
            <para>
            You can optionally specify a deployment configuration for your service. The deployment
            is triggered by changing properties, such as the task definition or the desired count
            of a service, with an <a>UpdateService</a> operation. The default value for a replica
            service for <code>minimumHealthyPercent</code> is 100%. The default value for a daemon
            service for <code>minimumHealthyPercent</code> is 0%.
            </para>
             
            <para>
            If a service is using the <code>ECS</code> deployment controller, the minimum healthy
            percent represents a lower limit on the number of tasks in a service that must remain
            in the <code>RUNNING</code> state during a deployment, as a percentage of the desired
            number of tasks (rounded up to the nearest integer), and while any container instances
            are in the <code>DRAINING</code> state if the service contains tasks using the EC2
            launch type. This parameter enables you to deploy without using additional cluster
            capacity. For example, if your service has a desired number of four tasks and a minimum
            healthy percent of 50%, the scheduler might stop two existing tasks to free up cluster
            capacity before starting two new tasks. Tasks for services that <i>do not</i> use
            a load balancer are considered healthy if they're in the <code>RUNNING</code> state.
            Tasks for services that <i>do</i> use a load balancer are considered healthy if they're
            in the <code>RUNNING</code> state and they're reported as healthy by the load balancer.
            The default value for minimum healthy percent is 100%.
            </para>
             
            <para>
            If a service is using the <code>ECS</code> deployment controller, the <b>maximum percent</b>
            parameter represents an upper limit on the number of tasks in a service that are allowed
            in the <code>RUNNING</code> or <code>PENDING</code> state during a deployment, as
            a percentage of the desired number of tasks (rounded down to the nearest integer),
            and while any container instances are in the <code>DRAINING</code> state if the service
            contains tasks using the EC2 launch type. This parameter enables you to define the
            deployment batch size. For example, if your service has a desired number of four tasks
            and a maximum percent value of 200%, the scheduler may start four new tasks before
            stopping the four older tasks (provided that the cluster resources required to do
            this are available). The default value for maximum percent is 200%.
            </para>
             
            <para>
            If a service is using either the <code>CODE_DEPLOY</code> or <code>EXTERNAL</code>
            deployment controller types and tasks that use the EC2 launch type, the <b>minimum
            healthy percent</b> and <b>maximum percent</b> values are used only to define the
            lower and upper limit on the number of the tasks in the service that remain in the
            <code>RUNNING</code> state while the container instances are in the <code>DRAINING</code>
            state. If the tasks in the service use the Fargate launch type, the minimum healthy
            percent and maximum percent values aren't used, although they're currently visible
            when describing your service.
            </para>
             
            <para>
            When creating a service that uses the <code>EXTERNAL</code> deployment controller,
            you can specify only parameters that aren't controlled at the task set level. The
            only required parameter is the service name. You control your services using the <a>CreateTaskSet</a>
            operation. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-types.html">Amazon
            ECS Deployment Types</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            When the service scheduler launches new tasks, it determines task placement in your
            cluster using the following logic:
            </para>
             <ul> <li> 
            <para>
            Determine which of the container instances in your cluster can support your service's
            task definition (for example, they have the required CPU, memory, ports, and container
            instance attributes).
            </para>
             </li> <li> 
            <para>
            By default, the service scheduler attempts to balance tasks across Availability Zones
            in this manner (although you can choose a different placement strategy) with the <code>placementStrategy</code>
            parameter):
            </para>
             <ul> <li> 
            <para>
            Sort the valid container instances, giving priority to instances that have the fewest
            number of running tasks for this service in their respective Availability Zone. For
            example, if zone A has one running service task and zones B and C each have zero,
            valid container instances in either zone B or C are considered optimal for placement.
            </para>
             </li> <li> 
            <para>
            Place the new service task on a valid container instance in an optimal Availability
            Zone (based on the previous steps), favoring container instances with the fewest number
            of running tasks for this service.
            </para>
             </li> </ul> </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateServiceRequest.CapacityProviderStrategy">
            <summary>
            Gets and sets the property CapacityProviderStrategy. 
            <para>
            The capacity provider strategy to use for the service.
            </para>
             
            <para>
            If a <code>capacityProviderStrategy</code> is specified, the <code>launchType</code>
            parameter must be omitted. If no <code>capacityProviderStrategy</code> or <code>launchType</code>
            is specified, the <code>defaultCapacityProviderStrategy</code> for the cluster is
            used.
            </para>
             
            <para>
            A capacity provider strategy may contain a maximum of 6 capacity providers.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateServiceRequest.ClientToken">
            <summary>
            Gets and sets the property ClientToken. 
            <para>
            Unique, case-sensitive identifier that you provide to ensure the idempotency of the
            request. Up to 32 ASCII characters are allowed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateServiceRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the cluster on which to run your
            service. If you do not specify a cluster, the default cluster is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateServiceRequest.DeploymentConfiguration">
            <summary>
            Gets and sets the property DeploymentConfiguration. 
            <para>
            Optional deployment parameters that control how many tasks run during the deployment
            and the ordering of stopping and starting tasks.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateServiceRequest.DeploymentController">
            <summary>
            Gets and sets the property DeploymentController. 
            <para>
            The deployment controller to use for the service. If no deployment controller is specified,
            the default value of <code>ECS</code> is used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateServiceRequest.DesiredCount">
            <summary>
            Gets and sets the property DesiredCount. 
            <para>
            The number of instantiations of the specified task definition to place and keep running
            on your cluster.
            </para>
             
            <para>
            This is required if <code>schedulingStrategy</code> is <code>REPLICA</code> or is
            not specified. If <code>schedulingStrategy</code> is <code>DAEMON</code> then this
            is not required.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateServiceRequest.EnableECSManagedTags">
            <summary>
            Gets and sets the property EnableECSManagedTags. 
            <para>
            Specifies whether to enable Amazon ECS managed tags for the tasks within the service.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-using-tags.html">Tagging
            Your Amazon ECS Resources</a> in the <i>Amazon Elastic Container Service Developer
            Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateServiceRequest.EnableExecuteCommand">
            <summary>
            Gets and sets the property EnableExecuteCommand. 
            <para>
            Whether or not the execute command functionality is enabled for the service. If <code>true</code>,
            this enables execute command functionality on all containers in the service tasks.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateServiceRequest.HealthCheckGracePeriodSeconds">
            <summary>
            Gets and sets the property HealthCheckGracePeriodSeconds. 
            <para>
            The period of time, in seconds, that the Amazon ECS service scheduler should ignore
            unhealthy Elastic Load Balancing target health checks after a task has first started.
            This is only used when your service is configured to use a load balancer. If your
            service has a load balancer defined and you don't specify a health check grace period
            value, the default value of <code>0</code> is used.
            </para>
             
            <para>
            If your service's tasks take a while to start and respond to Elastic Load Balancing
            health checks, you can specify a health check grace period of up to 2,147,483,647
            seconds. During that time, the Amazon ECS service scheduler ignores health check status.
            This grace period can prevent the service scheduler from marking tasks as unhealthy
            and stopping them before they have time to come up.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateServiceRequest.LaunchType">
            <summary>
            Gets and sets the property LaunchType. 
            <para>
            The infrastructure on which to run your service. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html">Amazon
            ECS launch types</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            The <code>FARGATE</code> launch type runs your tasks on Fargate On-Demand infrastructure.
            </para>
             <note> 
            <para>
            Fargate Spot infrastructure is available for use but a capacity provider strategy
            must be used. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/userguide/fargate-capacity-providers.html">Fargate
            capacity providers</a> in the <i>Amazon ECS User Guide for Fargate</i>.
            </para>
             </note> 
            <para>
            The <code>EC2</code> launch type runs your tasks on Amazon EC2 instances registered
            to your cluster.
            </para>
             
            <para>
            The <code>EXTERNAL</code> launch type runs your tasks on your on-premise server or
            virtual machine (VM) capacity registered to your cluster.
            </para>
             
            <para>
            A service can use either a launch type or a capacity provider strategy. If a <code>launchType</code>
            is specified, the <code>capacityProviderStrategy</code> parameter must be omitted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateServiceRequest.LoadBalancers">
            <summary>
            Gets and sets the property LoadBalancers. 
            <para>
            A load balancer object representing the load balancers to use with your service. For
            more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-load-balancing.html">Service
            Load Balancing</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            If the service is using the rolling update (<code>ECS</code>) deployment controller
            and using either an Application Load Balancer or Network Load Balancer, you must specify
            one or more target group ARNs to attach to the service. The service-linked role is
            required for services that make use of multiple target groups. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using-service-linked-roles.html">Using
            service-linked roles for Amazon ECS</a> in the <i>Amazon Elastic Container Service
            Developer Guide</i>.
            </para>
             
            <para>
            If the service is using the <code>CODE_DEPLOY</code> deployment controller, the service
            is required to use either an Application Load Balancer or Network Load Balancer. When
            creating an CodeDeploy deployment group, you specify two target groups (referred to
            as a <code>targetGroupPair</code>). During a deployment, CodeDeploy determines which
            task set in your service has the status <code>PRIMARY</code> and associates one target
            group with it, and then associates the other target group with the replacement task
            set. The load balancer can also have up to two listeners: a required listener for
            production traffic and an optional listener that allows you perform validation tests
            with Lambda functions before routing production traffic to it.
            </para>
             
            <para>
            After you create a service using the <code>ECS</code> deployment controller, the load
            balancer name or target group ARN, container name, and container port specified in
            the service definition are immutable. If you are using the <code>CODE_DEPLOY</code>
            deployment controller, these values can be changed when updating the service.
            </para>
             
            <para>
            For Application Load Balancers and Network Load Balancers, this object must contain
            the load balancer target group ARN, the container name (as it appears in a container
            definition), and the container port to access from the load balancer. The load balancer
            name parameter must be omitted. When a task from this service is placed on a container
            instance, the container instance and port combination is registered as a target in
            the target group specified here.
            </para>
             
            <para>
            For Classic Load Balancers, this object must contain the load balancer name, the container
            name (as it appears in a container definition), and the container port to access from
            the load balancer. The target group ARN parameter must be omitted. When a task from
            this service is placed on a container instance, the container instance is registered
            with the load balancer specified here.
            </para>
             
            <para>
            Services with tasks that use the <code>awsvpc</code> network mode (for example, those
            with the Fargate launch type) only support Application Load Balancers and Network
            Load Balancers. Classic Load Balancers are not supported. Also, when you create any
            target groups for these services, you must choose <code>ip</code> as the target type,
            not <code>instance</code>, because tasks that use the <code>awsvpc</code> network
            mode are associated with an elastic network interface, not an Amazon EC2 instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateServiceRequest.NetworkConfiguration">
            <summary>
            Gets and sets the property NetworkConfiguration. 
            <para>
            The network configuration for the service. This parameter is required for task definitions
            that use the <code>awsvpc</code> network mode to receive their own elastic network
            interface, and it is not supported for other network modes. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-networking.html">Task
            networking</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateServiceRequest.PlacementConstraints">
            <summary>
            Gets and sets the property PlacementConstraints. 
            <para>
            An array of placement constraint objects to use for tasks in your service. You can
            specify a maximum of 10 constraints per task (this limit includes constraints in the
            task definition and those specified at runtime).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateServiceRequest.PlacementStrategy">
            <summary>
            Gets and sets the property PlacementStrategy. 
            <para>
            The placement strategy objects to use for tasks in your service. You can specify a
            maximum of 5 strategy rules per service.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateServiceRequest.PlatformVersion">
            <summary>
            Gets and sets the property PlatformVersion. 
            <para>
            The platform version that your tasks in the service are running on. A platform version
            is specified only for tasks using the Fargate launch type. If one isn't specified,
            the <code>LATEST</code> platform version is used by default. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/platform_versions.html">Fargate
            platform versions</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateServiceRequest.PropagateTags">
            <summary>
            Gets and sets the property PropagateTags. 
            <para>
            Specifies whether to propagate the tags from the task definition or the service to
            the tasks in the service. If no value is specified, the tags are not propagated. Tags
            can only be propagated to the tasks within the service during service creation. To
            add tags to a task after service creation or task creation, use the <a>TagResource</a>
            API action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateServiceRequest.Role">
            <summary>
            Gets and sets the property Role. 
            <para>
            The name or full Amazon Resource Name (ARN) of the IAM role that allows Amazon ECS
            to make calls to your load balancer on your behalf. This parameter is only permitted
            if you are using a load balancer with your service and your task definition does not
            use the <code>awsvpc</code> network mode. If you specify the <code>role</code> parameter,
            you must also specify a load balancer object with the <code>loadBalancers</code> parameter.
            </para>
             <important> 
            <para>
            If your account has already created the Amazon ECS service-linked role, that role
            is used by default for your service unless you specify a role here. The service-linked
            role is required if your task definition uses the <code>awsvpc</code> network mode
            or if the service is configured to use service discovery, an external deployment controller,
            multiple target groups, or Elastic Inference accelerators in which case you should
            not specify a role here. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using-service-linked-roles.html">Using
            service-linked roles for Amazon ECS</a> in the <i>Amazon Elastic Container Service
            Developer Guide</i>.
            </para>
             </important> 
            <para>
            If your specified role has a path other than <code>/</code>, then you must either
            specify the full role ARN (this is recommended) or prefix the role name with the path.
            For example, if a role with the name <code>bar</code> has a path of <code>/foo/</code>
            then you would specify <code>/foo/bar</code> as the role name. For more information,
            see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html#identifiers-friendly-names">Friendly
            names and paths</a> in the <i>IAM User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateServiceRequest.SchedulingStrategy">
            <summary>
            Gets and sets the property SchedulingStrategy. 
            <para>
            The scheduling strategy to use for the service. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs_services.html">Services</a>.
            </para>
             
            <para>
            There are two service scheduler strategies available:
            </para>
             <ul> <li> 
            <para>
             <code>REPLICA</code>-The replica scheduling strategy places and maintains the desired
            number of tasks across your cluster. By default, the service scheduler spreads tasks
            across Availability Zones. You can use task placement strategies and constraints to
            customize task placement decisions. This scheduler strategy is required if the service
            is using the <code>CODE_DEPLOY</code> or <code>EXTERNAL</code> deployment controller
            types.
            </para>
             </li> <li> 
            <para>
             <code>DAEMON</code>-The daemon scheduling strategy deploys exactly one task on each
            active container instance that meets all of the task placement constraints that you
            specify in your cluster. The service scheduler also evaluates the task placement constraints
            for running tasks and will stop tasks that do not meet the placement constraints.
            When you're using this strategy, you don't need to specify a desired number of tasks,
            a task placement strategy, or use Service Auto Scaling policies.
            </para>
             <note> 
            <para>
            Tasks using the Fargate launch type or the <code>CODE_DEPLOY</code> or <code>EXTERNAL</code>
            deployment controller types don't support the <code>DAEMON</code> scheduling strategy.
            </para>
             </note> </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateServiceRequest.ServiceName">
            <summary>
            Gets and sets the property ServiceName. 
            <para>
            The name of your service. Up to 255 letters (uppercase and lowercase), numbers, underscores,
            and hyphens are allowed. Service names must be unique within a cluster, but you can
            have similarly named services in multiple clusters within a Region or across multiple
            Regions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateServiceRequest.ServiceRegistries">
            <summary>
            Gets and sets the property ServiceRegistries. 
            <para>
            The details of the service discovery registry to associate with this service. For
            more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-discovery.html">Service
            discovery</a>.
            </para>
             <note> 
            <para>
            Each service may be associated with one service registry. Multiple service registries
            per service isn't supported.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateServiceRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The metadata that you apply to the service to help you categorize and organize them.
            Each tag consists of a key and an optional value, both of which you define. When a
            service is deleted, the tags are deleted as well.
            </para>
             
            <para>
            The following basic restrictions apply to tags:
            </para>
             <ul> <li> 
            <para>
            Maximum number of tags per resource - 50
            </para>
             </li> <li> 
            <para>
            For each resource, each tag key must be unique, and each tag key can have only one
            value.
            </para>
             </li> <li> 
            <para>
            Maximum key length - 128 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            Maximum value length - 256 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            If your tagging schema is used across multiple services and resources, remember that
            other services may have restrictions on allowed characters. Generally allowed characters
            are: letters, numbers, and spaces representable in UTF-8, and the following characters:
            + - = . _ : / @.
            </para>
             </li> <li> 
            <para>
            Tag keys and values are case-sensitive.
            </para>
             </li> <li> 
            <para>
            Do not use <code>aws:</code>, <code>AWS:</code>, or any upper or lowercase combination
            of such as a prefix for either keys or values as it is reserved for Amazon Web Services
            use. You cannot edit or delete tag keys or values with this prefix. Tags with this
            prefix do not count against your tags per resource limit.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateServiceRequest.TaskDefinition">
            <summary>
            Gets and sets the property TaskDefinition. 
            <para>
            The <code>family</code> and <code>revision</code> (<code>family:revision</code>) or
            full ARN of the task definition to run in your service. If a <code>revision</code>
            is not specified, the latest <code>ACTIVE</code> revision is used.
            </para>
             
            <para>
            A task definition must be specified if the service is using either the <code>ECS</code>
            or <code>CODE_DEPLOY</code> deployment controllers.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.CreateServiceResponse">
            <summary>
            This is the response object from the CreateService operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateServiceResponse.Service">
            <summary>
            Gets and sets the property Service. 
            <para>
            The full description of your service following the create call.
            </para>
             
            <para>
            A service will return either a <code>capacityProviderStrategy</code> or <code>launchType</code>
            parameter, but not both, depending on which one was specified during creation.
            </para>
             
            <para>
            If a service is using the <code>ECS</code> deployment controller, the <code>deploymentController</code>
            and <code>taskSets</code> parameters will not be returned.
            </para>
             
            <para>
            If the service is using the <code>CODE_DEPLOY</code> deployment controller, the <code>deploymentController</code>,
            <code>taskSets</code> and <code>deployments</code> parameters will be returned, however
            the <code>deployments</code> parameter will be an empty list.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.CreateTaskSetRequest">
            <summary>
            Container for the parameters to the CreateTaskSet operation.
            Create a task set in the specified cluster and service. This is used when a service
            uses the <code>EXTERNAL</code> deployment controller type. For more information, see
            <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-types.html">Amazon
            ECS Deployment Types</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateTaskSetRequest.CapacityProviderStrategy">
            <summary>
            Gets and sets the property CapacityProviderStrategy. 
            <para>
            The capacity provider strategy to use for the task set.
            </para>
             
            <para>
            A capacity provider strategy consists of one or more capacity providers along with
            the <code>base</code> and <code>weight</code> to assign to them. A capacity provider
            must be associated with the cluster to be used in a capacity provider strategy. The
            <a>PutClusterCapacityProviders</a> API is used to associate a capacity provider with
            a cluster. Only capacity providers with an <code>ACTIVE</code> or <code>UPDATING</code>
            status can be used.
            </para>
             
            <para>
            If a <code>capacityProviderStrategy</code> is specified, the <code>launchType</code>
            parameter must be omitted. If no <code>capacityProviderStrategy</code> or <code>launchType</code>
            is specified, the <code>defaultCapacityProviderStrategy</code> for the cluster is
            used.
            </para>
             
            <para>
            If specifying a capacity provider that uses an Auto Scaling group, the capacity provider
            must already be created. New capacity providers can be created with the <a>CreateCapacityProvider</a>
            API operation.
            </para>
             
            <para>
            To use a Fargate capacity provider, specify either the <code>FARGATE</code> or <code>FARGATE_SPOT</code>
            capacity providers. The Fargate capacity providers are available to all accounts and
            only need to be associated with a cluster to be used.
            </para>
             
            <para>
            The <a>PutClusterCapacityProviders</a> API operation is used to update the list of
            available capacity providers for a cluster after the cluster is created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateTaskSetRequest.ClientToken">
            <summary>
            Gets and sets the property ClientToken. 
            <para>
            Unique, case-sensitive identifier that you provide to ensure the idempotency of the
            request. Up to 32 ASCII characters are allowed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateTaskSetRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the cluster that hosts the service
            to create the task set in.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateTaskSetRequest.ExternalId">
            <summary>
            Gets and sets the property ExternalId. 
            <para>
            An optional non-unique tag that identifies this task set in external systems. If the
            task set is associated with a service discovery registry, the tasks in this task set
            will have the <code>ECS_TASK_SET_EXTERNAL_ID</code> Cloud Map attribute set to the
            provided value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateTaskSetRequest.LaunchType">
            <summary>
            Gets and sets the property LaunchType. 
            <para>
            The launch type that new tasks in the task set will use. For more information, see
            <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html">Amazon
            ECS Launch Types</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            If a <code>launchType</code> is specified, the <code>capacityProviderStrategy</code>
            parameter must be omitted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateTaskSetRequest.LoadBalancers">
            <summary>
            Gets and sets the property LoadBalancers. 
            <para>
            A load balancer object representing the load balancer to use with the task set. The
            supported load balancer types are either an Application Load Balancer or a Network
            Load Balancer.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateTaskSetRequest.NetworkConfiguration">
            <summary>
            Gets and sets the property NetworkConfiguration. 
            <para>
            An object representing the network configuration for a task set.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateTaskSetRequest.PlatformVersion">
            <summary>
            Gets and sets the property PlatformVersion. 
            <para>
            The platform version that the tasks in the task set should use. A platform version
            is specified only for tasks using the Fargate launch type. If one isn't specified,
            the <code>LATEST</code> platform version is used by default.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateTaskSetRequest.Scale">
            <summary>
            Gets and sets the property Scale. 
            <para>
            A floating-point percentage of the desired number of tasks to place and keep running
            in the task set.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateTaskSetRequest.Service">
            <summary>
            Gets and sets the property Service. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the service to create the task
            set in.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateTaskSetRequest.ServiceRegistries">
            <summary>
            Gets and sets the property ServiceRegistries. 
            <para>
            The details of the service discovery registries to assign to this task set. For more
            information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-discovery.html">Service
            Discovery</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateTaskSetRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The metadata that you apply to the task set to help you categorize and organize them.
            Each tag consists of a key and an optional value, both of which you define. When a
            service is deleted, the tags are deleted as well.
            </para>
             
            <para>
            The following basic restrictions apply to tags:
            </para>
             <ul> <li> 
            <para>
            Maximum number of tags per resource - 50
            </para>
             </li> <li> 
            <para>
            For each resource, each tag key must be unique, and each tag key can have only one
            value.
            </para>
             </li> <li> 
            <para>
            Maximum key length - 128 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            Maximum value length - 256 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            If your tagging schema is used across multiple services and resources, remember that
            other services may have restrictions on allowed characters. Generally allowed characters
            are: letters, numbers, and spaces representable in UTF-8, and the following characters:
            + - = . _ : / @.
            </para>
             </li> <li> 
            <para>
            Tag keys and values are case-sensitive.
            </para>
             </li> <li> 
            <para>
            Do not use <code>aws:</code>, <code>AWS:</code>, or any upper or lowercase combination
            of such as a prefix for either keys or values as it is reserved for Amazon Web Services
            use. You cannot edit or delete tag keys or values with this prefix. Tags with this
            prefix do not count against your tags per resource limit.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateTaskSetRequest.TaskDefinition">
            <summary>
            Gets and sets the property TaskDefinition. 
            <para>
            The task definition for the tasks in the task set to use.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.CreateTaskSetResponse">
            <summary>
            This is the response object from the CreateTaskSet operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateTaskSetResponse.TaskSet">
            <summary>
            Gets and sets the property TaskSet. 
            <para>
            Information about a set of Amazon ECS tasks in either an CodeDeploy or an <code>EXTERNAL</code>
            deployment. A task set includes details such as the desired number of tasks, how many
            tasks are running, and whether the task set serves production traffic.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DeleteAccountSettingRequest">
            <summary>
            Container for the parameters to the DeleteAccountSetting operation.
            Disables an account setting for a specified IAM user, IAM role, or the root user for
            an account.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeleteAccountSettingRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The resource name for which to disable the account setting. If <code>serviceLongArnFormat</code>
            is specified, the ARN for your Amazon ECS services is affected. If <code>taskLongArnFormat</code>
            is specified, the ARN and resource ID for your Amazon ECS tasks is affected. If <code>containerInstanceLongArnFormat</code>
            is specified, the ARN and resource ID for your Amazon ECS container instances is affected.
            If <code>awsvpcTrunking</code> is specified, the ENI limit for your Amazon ECS container
            instances is affected.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeleteAccountSettingRequest.PrincipalArn">
            <summary>
            Gets and sets the property PrincipalArn. 
            <para>
            The ARN of the principal, which can be an IAM user, IAM role, or the root user. If
            you specify the root user, it disables the account setting for all IAM users, IAM
            roles, and the root user of the account unless an IAM user or role explicitly overrides
            these settings. If this field is omitted, the setting is changed only for the authenticated
            user.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DeleteAccountSettingResponse">
            <summary>
            This is the response object from the DeleteAccountSetting operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeleteAccountSettingResponse.Setting">
            <summary>
            Gets and sets the property Setting. 
            <para>
            The account setting for the specified principal ARN.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DeleteAttributesRequest">
            <summary>
            Container for the parameters to the DeleteAttributes operation.
            Deletes one or more custom attributes from an Amazon ECS resource.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeleteAttributesRequest.Attributes">
            <summary>
            Gets and sets the property Attributes. 
            <para>
            The attributes to delete from your resource. You can specify up to 10 attributes per
            request. For custom attributes, specify the attribute name and target ID, but do not
            specify the value. If you specify the target ID using the short form, you must also
            specify the target type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeleteAttributesRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the cluster that contains the
            resource to delete attributes. If you do not specify a cluster, the default cluster
            is assumed.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DeleteAttributesResponse">
            <summary>
            This is the response object from the DeleteAttributes operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeleteAttributesResponse.Attributes">
            <summary>
            Gets and sets the property Attributes. 
            <para>
            A list of attribute objects that were successfully deleted from your resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DeleteCapacityProviderRequest">
            <summary>
            Container for the parameters to the DeleteCapacityProvider operation.
            Deletes the specified capacity provider.
            
             <note> 
            <para>
            The <code>FARGATE</code> and <code>FARGATE_SPOT</code> capacity providers are reserved
            and cannot be deleted. You can disassociate them from a cluster using either the <a>PutClusterCapacityProviders</a>
            API or by deleting the cluster.
            </para>
             </note> 
            <para>
            Prior to a capacity provider being deleted, the capacity provider must be removed
            from the capacity provider strategy from all services. The <a>UpdateService</a> API
            can be used to remove a capacity provider from a service's capacity provider strategy.
            When updating a service, the <code>forceNewDeployment</code> option can be used to
            ensure that any tasks using the Amazon EC2 instance capacity provided by the capacity
            provider are transitioned to use the capacity from the remaining capacity providers.
            Only capacity providers that are not associated with a cluster can be deleted. To
            remove a capacity provider from a cluster, you can either use <a>PutClusterCapacityProviders</a>
            or delete the cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeleteCapacityProviderRequest.CapacityProvider">
            <summary>
            Gets and sets the property CapacityProvider. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the capacity provider to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DeleteCapacityProviderResponse">
            <summary>
            This is the response object from the DeleteCapacityProvider operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeleteCapacityProviderResponse.CapacityProvider">
            <summary>
            Gets and sets the property CapacityProvider. 
            <para>
            The details of the capacity provider.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DeleteClusterRequest">
            <summary>
            Container for the parameters to the DeleteCluster operation.
            Deletes the specified cluster. The cluster will transition to the <code>INACTIVE</code>
            state. Clusters with an <code>INACTIVE</code> status may remain discoverable in your
            account for a period of time. However, this behavior is subject to change in the future,
            so you should not rely on <code>INACTIVE</code> clusters persisting.
            
             
            <para>
            You must deregister all container instances from this cluster before you may delete
            it. You can list the container instances in a cluster with <a>ListContainerInstances</a>
            and deregister them with <a>DeregisterContainerInstance</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeleteClusterRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the cluster to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DeleteClusterResponse">
            <summary>
            This is the response object from the DeleteCluster operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeleteClusterResponse.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The full description of the deleted cluster.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DeleteServiceRequest">
            <summary>
            Container for the parameters to the DeleteService operation.
            Deletes a specified service within a cluster. You can delete a service if you have
            no running tasks in it and the desired task count is zero. If the service is actively
            maintaining tasks, you cannot delete it, and you must update the service to a desired
            task count of zero. For more information, see <a>UpdateService</a>.
            
             <note> 
            <para>
            When you delete a service, if there are still running tasks that require cleanup,
            the service status moves from <code>ACTIVE</code> to <code>DRAINING</code>, and the
            service is no longer visible in the console or in the <a>ListServices</a> API operation.
            After all tasks have transitioned to either <code>STOPPING</code> or <code>STOPPED</code>
            status, the service status moves from <code>DRAINING</code> to <code>INACTIVE</code>.
            Services in the <code>DRAINING</code> or <code>INACTIVE</code> status can still be
            viewed with the <a>DescribeServices</a> API operation. However, in the future, <code>INACTIVE</code>
            services may be cleaned up and purged from Amazon ECS record keeping, and <a>DescribeServices</a>
            calls on those services return a <code>ServiceNotFoundException</code> error.
            </para>
             </note> <important> 
            <para>
            If you attempt to create a new service with the same name as an existing service in
            either <code>ACTIVE</code> or <code>DRAINING</code> status, you receive an error.
            </para>
             </important>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeleteServiceRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the cluster that hosts the service
            to delete. If you do not specify a cluster, the default cluster is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeleteServiceRequest.Force">
            <summary>
            Gets and sets the property Force. 
            <para>
            If <code>true</code>, allows you to delete a service even if it has not been scaled
            down to zero tasks. It is only necessary to use this if the service is using the <code>REPLICA</code>
            scheduling strategy.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeleteServiceRequest.Service">
            <summary>
            Gets and sets the property Service. 
            <para>
            The name of the service to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DeleteServiceResponse">
            <summary>
            This is the response object from the DeleteService operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeleteServiceResponse.Service">
            <summary>
            Gets and sets the property Service. 
            <para>
            The full description of the deleted service.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DeleteTaskSetRequest">
            <summary>
            Container for the parameters to the DeleteTaskSet operation.
            Deletes a specified task set within a service. This is used when a service uses the
            <code>EXTERNAL</code> deployment controller type. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-types.html">Amazon
            ECS Deployment Types</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeleteTaskSetRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the cluster that hosts the service
            that the task set exists in to delete.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeleteTaskSetRequest.Force">
            <summary>
            Gets and sets the property Force. 
            <para>
            If <code>true</code>, this allows you to delete a task set even if it hasn't been
            scaled down to zero.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeleteTaskSetRequest.Service">
            <summary>
            Gets and sets the property Service. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the service that hosts the task
            set to delete.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeleteTaskSetRequest.TaskSet">
            <summary>
            Gets and sets the property TaskSet. 
            <para>
            The task set ID or full Amazon Resource Name (ARN) of the task set to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DeleteTaskSetResponse">
            <summary>
            This is the response object from the DeleteTaskSet operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeleteTaskSetResponse.TaskSet">
            <summary>
            Gets and sets the property TaskSet. 
            <para>
            Details about the task set.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Deployment">
            <summary>
            The details of an Amazon ECS service deployment. This is used only when a service
            uses the <code>ECS</code> deployment controller type.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Deployment.CapacityProviderStrategy">
            <summary>
            Gets and sets the property CapacityProviderStrategy. 
            <para>
            The capacity provider strategy that the deployment is using.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Deployment.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The Unix timestamp for when the service deployment was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Deployment.DesiredCount">
            <summary>
            Gets and sets the property DesiredCount. 
            <para>
            The most recent desired count of tasks that was specified for the service to deploy
            or maintain.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Deployment.FailedTasks">
            <summary>
            Gets and sets the property FailedTasks. 
            <para>
            The number of consecutively failed tasks in the deployment. A task is considered a
            failure if the service scheduler can't launch the task, the task doesn't transition
            to a <code>RUNNING</code> state, or if it fails any of its defined health checks and
            is stopped.
            </para>
             <note> 
            <para>
            Once a service deployment has one or more successfully running tasks, the failed task
            count resets to zero and stops being evaluated.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Deployment.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            The ID of the deployment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Deployment.LaunchType">
            <summary>
            Gets and sets the property LaunchType. 
            <para>
            The launch type the tasks in the service are using. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html">Amazon
            ECS Launch Types</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Deployment.NetworkConfiguration">
            <summary>
            Gets and sets the property NetworkConfiguration. 
            <para>
            The VPC subnet and security group configuration for tasks that receive their own elastic
            network interface by using the <code>awsvpc</code> networking mode.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Deployment.PendingCount">
            <summary>
            Gets and sets the property PendingCount. 
            <para>
            The number of tasks in the deployment that are in the <code>PENDING</code> status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Deployment.PlatformVersion">
            <summary>
            Gets and sets the property PlatformVersion. 
            <para>
            The platform version on which your tasks in the service are running. A platform version
            is only specified for tasks using the Fargate launch type. If one is not specified,
            the <code>LATEST</code> platform version is used by default. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/platform_versions.html">Fargate
            Platform Versions</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Deployment.RolloutState">
            <summary>
            Gets and sets the property RolloutState. <note> 
            <para>
            The <code>rolloutState</code> of a service is only returned for services that use
            the rolling update (<code>ECS</code>) deployment type that are not behind a Classic
            Load Balancer.
            </para>
             </note> 
            <para>
            The rollout state of the deployment. When a service deployment is started, it begins
            in an <code>IN_PROGRESS</code> state. When the service reaches a steady state, the
            deployment will transition to a <code>COMPLETED</code> state. If the service fails
            to reach a steady state and circuit breaker is enabled, the deployment will transition
            to a <code>FAILED</code> state. A deployment in <code>FAILED</code> state will launch
            no new tasks. For more information, see <a>DeploymentCircuitBreaker</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Deployment.RolloutStateReason">
            <summary>
            Gets and sets the property RolloutStateReason. 
            <para>
            A description of the rollout state of a deployment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Deployment.RunningCount">
            <summary>
            Gets and sets the property RunningCount. 
            <para>
            The number of tasks in the deployment that are in the <code>RUNNING</code> status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Deployment.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the deployment. The following describes each state:
            </para>
             <dl> <dt>PRIMARY</dt> <dd> 
            <para>
            The most recent deployment of a service.
            </para>
             </dd> <dt>ACTIVE</dt> <dd> 
            <para>
            A service deployment that still has running tasks, but are in the process of being
            replaced with a new <code>PRIMARY</code> deployment.
            </para>
             </dd> <dt>INACTIVE</dt> <dd> 
            <para>
            A deployment that has been completely replaced.
            </para>
             </dd> </dl>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Deployment.TaskDefinition">
            <summary>
            Gets and sets the property TaskDefinition. 
            <para>
            The most recent task definition that was specified for the tasks in the service to
            use.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Deployment.UpdatedAt">
            <summary>
            Gets and sets the property UpdatedAt. 
            <para>
            The Unix timestamp for when the service deployment was last updated.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DeploymentCircuitBreaker">
            <summary>
            <note> 
            <para>
            The deployment circuit breaker can only be used for services using the rolling update
            (<code>ECS</code>) deployment type that are not behind a Classic Load Balancer.
            </para>
             </note> 
            <para>
            The <b>deployment circuit breaker</b> determines whether a service deployment will
            fail if the service can't reach a steady state. If enabled, a service deployment will
            transition to a failed state and stop launching new tasks. You can also enable Amazon
            ECS to roll back your service to the last completed deployment after a failure. For
            more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-type-ecs.html">Rolling
            update</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeploymentCircuitBreaker.Enable">
            <summary>
            Gets and sets the property Enable. 
            <para>
            Whether to enable the deployment circuit breaker logic for the service.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeploymentCircuitBreaker.Rollback">
            <summary>
            Gets and sets the property Rollback. 
            <para>
            Whether to enable Amazon ECS to roll back the service if a service deployment fails.
            If rollback is enabled, when a service deployment fails, the service is rolled back
            to the last deployment that completed successfully.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DeploymentConfiguration">
            <summary>
            Optional deployment parameters that control how many tasks run during a deployment
            and the ordering of stopping and starting tasks.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeploymentConfiguration.DeploymentCircuitBreaker">
            <summary>
            Gets and sets the property DeploymentCircuitBreaker. <note> 
            <para>
            The deployment circuit breaker can only be used for services using the rolling update
            (<code>ECS</code>) deployment type.
            </para>
             </note> 
            <para>
            The <b>deployment circuit breaker</b> determines whether a service deployment will
            fail if the service can't reach a steady state. If deployment circuit breaker is enabled,
            a service deployment will transition to a failed state and stop launching new tasks.
            If rollback is enabled, when a service deployment fails, the service is rolled back
            to the last deployment that completed successfully.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeploymentConfiguration.MaximumPercent">
            <summary>
            Gets and sets the property MaximumPercent. 
            <para>
            If a service is using the rolling update (<code>ECS</code>) deployment type, the <b>maximum
            percent</b> parameter represents an upper limit on the number of tasks in a service
            that are allowed in the <code>RUNNING</code> or <code>PENDING</code> state during
            a deployment, as a percentage of the desired number of tasks (rounded down to the
            nearest integer), and while any container instances are in the <code>DRAINING</code>
            state if the service contains tasks using the EC2 launch type. This parameter enables
            you to define the deployment batch size. For example, if your service has a desired
            number of four tasks and a maximum percent value of 200%, the scheduler may start
            four new tasks before stopping the four older tasks (provided that the cluster resources
            required to do this are available). The default value for maximum percent is 200%.
            </para>
             
            <para>
            If a service is using the blue/green (<code>CODE_DEPLOY</code>) or <code>EXTERNAL</code>
            deployment types and tasks that use the EC2 launch type, the <b>maximum percent</b>
            value is set to the default value and is used to define the upper limit on the number
            of the tasks in the service that remain in the <code>RUNNING</code> state while the
            container instances are in the <code>DRAINING</code> state. If the tasks in the service
            use the Fargate launch type, the maximum percent value is not used, although it is
            returned when describing your service.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeploymentConfiguration.MinimumHealthyPercent">
            <summary>
            Gets and sets the property MinimumHealthyPercent. 
            <para>
            If a service is using the rolling update (<code>ECS</code>) deployment type, the <b>minimum
            healthy percent</b> represents a lower limit on the number of tasks in a service that
            must remain in the <code>RUNNING</code> state during a deployment, as a percentage
            of the desired number of tasks (rounded up to the nearest integer), and while any
            container instances are in the <code>DRAINING</code> state if the service contains
            tasks using the EC2 launch type. This parameter enables you to deploy without using
            additional cluster capacity. For example, if your service has a desired number of
            four tasks and a minimum healthy percent of 50%, the scheduler may stop two existing
            tasks to free up cluster capacity before starting two new tasks. Tasks for services
            that <i>do not</i> use a load balancer are considered healthy if they are in the <code>RUNNING</code>
            state; tasks for services that <i>do</i> use a load balancer are considered healthy
            if they are in the <code>RUNNING</code> state and they are reported as healthy by
            the load balancer. The default value for minimum healthy percent is 100%.
            </para>
             
            <para>
            If a service is using the blue/green (<code>CODE_DEPLOY</code>) or <code>EXTERNAL</code>
            deployment types and tasks that use the EC2 launch type, the <b>minimum healthy percent</b>
            value is set to the default value and is used to define the lower limit on the number
            of the tasks in the service that remain in the <code>RUNNING</code> state while the
            container instances are in the <code>DRAINING</code> state. If the tasks in the service
            use the Fargate launch type, the minimum healthy percent value is not used, although
            it is returned when describing your service.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DeploymentController">
            <summary>
            The deployment controller to use for the service. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-types.html">Amazon
            ECS Deployment Types</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeploymentController.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The deployment controller type to use.
            </para>
             
            <para>
            There are three deployment controller types available:
            </para>
             <dl> <dt>ECS</dt> <dd> 
            <para>
            The rolling update (<code>ECS</code>) deployment type involves replacing the current
            running version of the container with the latest version. The number of containers
            Amazon ECS adds or removes from the service during a rolling update is controlled
            by adjusting the minimum and maximum number of healthy tasks allowed during a service
            deployment, as specified in the <a>DeploymentConfiguration</a>.
            </para>
             </dd> <dt>CODE_DEPLOY</dt> <dd> 
            <para>
            The blue/green (<code>CODE_DEPLOY</code>) deployment type uses the blue/green deployment
            model powered by CodeDeploy, which allows you to verify a new deployment of a service
            before sending production traffic to it.
            </para>
             </dd> <dt>EXTERNAL</dt> <dd> 
            <para>
            The external (<code>EXTERNAL</code>) deployment type enables you to use any third-party
            deployment controller for full control over the deployment process for an Amazon ECS
            service.
            </para>
             </dd> </dl>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DeregisterContainerInstanceRequest">
            <summary>
            Container for the parameters to the DeregisterContainerInstance operation.
            Deregisters an Amazon ECS container instance from the specified cluster. This instance
            is no longer available to run tasks.
            
             
            <para>
            If you intend to use the container instance for some other purpose after deregistration,
            you should stop all of the tasks running on the container instance before deregistration.
            That prevents any orphaned tasks from consuming resources.
            </para>
             
            <para>
            Deregistering a container instance removes the instance from a cluster, but it does
            not terminate the EC2 instance. If you are finished using the instance, be sure to
            terminate it in the Amazon EC2 console to stop billing.
            </para>
             <note> 
            <para>
            If you terminate a running container instance, Amazon ECS automatically deregisters
            the instance from your cluster (stopped container instances or instances with disconnected
            agents are not automatically deregistered when terminated).
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeregisterContainerInstanceRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the cluster that hosts the container
            instance to deregister. If you do not specify a cluster, the default cluster is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeregisterContainerInstanceRequest.ContainerInstance">
            <summary>
            Gets and sets the property ContainerInstance. 
            <para>
            The container instance ID or full ARN of the container instance to deregister. The
            ARN contains the <code>arn:aws:ecs</code> namespace, followed by the Region of the
            container instance, the Amazon Web Services account ID of the container instance owner,
            the <code>container-instance</code> namespace, and then the container instance ID.
            For example, <code>arn:aws:ecs:region:aws_account_id:container-instance/container_instance_ID</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeregisterContainerInstanceRequest.Force">
            <summary>
            Gets and sets the property Force. 
            <para>
            Forces the deregistration of the container instance. If you have tasks running on
            the container instance when you deregister it with the <code>force</code> option,
            these tasks remain running until you terminate the instance or the tasks stop through
            some other means, but they are orphaned (no longer monitored or accounted for by Amazon
            ECS). If an orphaned task on your container instance is part of an Amazon ECS service,
            then the service scheduler starts another copy of that task, on a different container
            instance if possible. 
            </para>
             
            <para>
            Any containers in orphaned service tasks that are registered with a Classic Load Balancer
            or an Application Load Balancer target group are deregistered. They begin connection
            draining according to the settings on the load balancer or target group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DeregisterContainerInstanceResponse">
            <summary>
            This is the response object from the DeregisterContainerInstance operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeregisterContainerInstanceResponse.ContainerInstance">
            <summary>
            Gets and sets the property ContainerInstance. 
            <para>
            The container instance that was deregistered.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DeregisterTaskDefinitionRequest">
            <summary>
            Container for the parameters to the DeregisterTaskDefinition operation.
            Deregisters the specified task definition by family and revision. Upon deregistration,
            the task definition is marked as <code>INACTIVE</code>. Existing tasks and services
            that reference an <code>INACTIVE</code> task definition continue to run without disruption.
            Existing services that reference an <code>INACTIVE</code> task definition can still
            scale up or down by modifying the service's desired count.
            
             
            <para>
            You cannot use an <code>INACTIVE</code> task definition to run new tasks or create
            new services, and you cannot update an existing service to reference an <code>INACTIVE</code>
            task definition. However, there may be up to a 10-minute window following deregistration
            where these restrictions have not yet taken effect.
            </para>
             <note> 
            <para>
            At this time, <code>INACTIVE</code> task definitions remain discoverable in your account
            indefinitely. However, this behavior is subject to change in the future, so you should
            not rely on <code>INACTIVE</code> task definitions persisting beyond the lifecycle
            of any associated tasks and services.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeregisterTaskDefinitionRequest.TaskDefinition">
            <summary>
            Gets and sets the property TaskDefinition. 
            <para>
            The <code>family</code> and <code>revision</code> (<code>family:revision</code>) or
            full Amazon Resource Name (ARN) of the task definition to deregister. You must specify
            a <code>revision</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DeregisterTaskDefinitionResponse">
            <summary>
            This is the response object from the DeregisterTaskDefinition operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeregisterTaskDefinitionResponse.TaskDefinition">
            <summary>
            Gets and sets the property TaskDefinition. 
            <para>
            The full description of the deregistered task.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DescribeCapacityProvidersRequest">
            <summary>
            Container for the parameters to the DescribeCapacityProviders operation.
            Describes one or more of your capacity providers.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeCapacityProvidersRequest.CapacityProviders">
            <summary>
            Gets and sets the property CapacityProviders. 
            <para>
            The short name or full Amazon Resource Name (ARN) of one or more capacity providers.
            Up to <code>100</code> capacity providers can be described in an action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeCapacityProvidersRequest.Include">
            <summary>
            Gets and sets the property Include. 
            <para>
            Specifies whether or not you want to see the resource tags for the capacity provider.
            If <code>TAGS</code> is specified, the tags are included in the response. If this
            field is omitted, tags are not included in the response.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeCapacityProvidersRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of account setting results returned by <code>DescribeCapacityProviders</code>
            in paginated output. When this parameter is used, <code>DescribeCapacityProviders</code>
            only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code>
            response element. The remaining results of the initial request can be seen by sending
            another <code>DescribeCapacityProviders</code> request with the returned <code>nextToken</code>
            value. This value can be between 1 and 10. If this parameter is not used, then <code>DescribeCapacityProviders</code>
            returns up to 10 results and a <code>nextToken</code> value if applicable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeCapacityProvidersRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>nextToken</code> value returned from a previous paginated <code>DescribeCapacityProviders</code>
            request where <code>maxResults</code> was used and the results exceeded the value
            of that parameter. Pagination continues from the end of the previous results that
            returned the <code>nextToken</code> value.
            </para>
             <note> 
            <para>
            This token should be treated as an opaque identifier that is only used to retrieve
            the next items in a list and not for other programmatic purposes.
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DescribeCapacityProvidersResponse">
            <summary>
            This is the response object from the DescribeCapacityProviders operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeCapacityProvidersResponse.CapacityProviders">
            <summary>
            Gets and sets the property CapacityProviders. 
            <para>
            The list of capacity providers.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeCapacityProvidersResponse.Failures">
            <summary>
            Gets and sets the property Failures. 
            <para>
            Any failures associated with the call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeCapacityProvidersResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>nextToken</code> value to include in a future <code>DescribeCapacityProviders</code>
            request. When the results of a <code>DescribeCapacityProviders</code> request exceed
            <code>maxResults</code>, this value can be used to retrieve the next page of results.
            This value is <code>null</code> when there are no more results to return.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DescribeClustersRequest">
            <summary>
            Container for the parameters to the DescribeClusters operation.
            Describes one or more of your clusters.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeClustersRequest.Clusters">
            <summary>
            Gets and sets the property Clusters. 
            <para>
            A list of up to 100 cluster names or full cluster Amazon Resource Name (ARN) entries.
            If you do not specify a cluster, the default cluster is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeClustersRequest.Include">
            <summary>
            Gets and sets the property Include. 
            <para>
            Whether to include additional information about the clusters in the response. If this
            field is omitted, this information isn't included.
            </para>
             
            <para>
            If <code>ATTACHMENTS</code> is specified, the attachments for the container instances
            or tasks within the cluster are included.
            </para>
             
            <para>
            If <code>SETTINGS</code> is specified, the settings for the cluster are included.
            </para>
             
            <para>
            If <code>CONFIGURATIONS</code> is specified, the configuration for the cluster is
            included.
            </para>
             
            <para>
            If <code>STATISTICS</code> is specified, the task and service count is included, separated
            by launch type.
            </para>
             
            <para>
            If <code>TAGS</code> is specified, the metadata tags associated with the cluster are
            included.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DescribeClustersResponse">
            <summary>
            This is the response object from the DescribeClusters operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeClustersResponse.Clusters">
            <summary>
            Gets and sets the property Clusters. 
            <para>
            The list of clusters.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeClustersResponse.Failures">
            <summary>
            Gets and sets the property Failures. 
            <para>
            Any failures associated with the call.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DescribeContainerInstancesRequest">
            <summary>
            Container for the parameters to the DescribeContainerInstances operation.
            Describes one or more container instances. Returns metadata about each container instance
            requested.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeContainerInstancesRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the cluster that hosts the container
            instances to describe. If you do not specify a cluster, the default cluster is assumed.
            This parameter is required if the container instance or container instances you are
            describing were launched in any cluster other than the default cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeContainerInstancesRequest.ContainerInstances">
            <summary>
            Gets and sets the property ContainerInstances. 
            <para>
            A list of up to 100 container instance IDs or full Amazon Resource Name (ARN) entries.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeContainerInstancesRequest.Include">
            <summary>
            Gets and sets the property Include. 
            <para>
            Specifies whether you want to see the resource tags for the container instance. If
            <code>TAGS</code> is specified, the tags are included in the response. If this field
            is omitted, tags are not included in the response.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DescribeContainerInstancesResponse">
            <summary>
            This is the response object from the DescribeContainerInstances operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeContainerInstancesResponse.ContainerInstances">
            <summary>
            Gets and sets the property ContainerInstances. 
            <para>
            The list of container instances.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeContainerInstancesResponse.Failures">
            <summary>
            Gets and sets the property Failures. 
            <para>
            Any failures associated with the call.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DescribeServicesRequest">
            <summary>
            Container for the parameters to the DescribeServices operation.
            Describes the specified services running in your cluster.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeServicesRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full Amazon Resource Name (ARN)the cluster that hosts the service
            to describe. If you do not specify a cluster, the default cluster is assumed. This
            parameter is required if the service or services you are describing were launched
            in any cluster other than the default cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeServicesRequest.Include">
            <summary>
            Gets and sets the property Include. 
            <para>
            Specifies whether you want to see the resource tags for the service. If <code>TAGS</code>
            is specified, the tags are included in the response. If this field is omitted, tags
            are not included in the response.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeServicesRequest.Services">
            <summary>
            Gets and sets the property Services. 
            <para>
            A list of services to describe. You may specify up to 10 services to describe in a
            single operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DescribeServicesResponse">
            <summary>
            This is the response object from the DescribeServices operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeServicesResponse.Failures">
            <summary>
            Gets and sets the property Failures. 
            <para>
            Any failures associated with the call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeServicesResponse.Services">
            <summary>
            Gets and sets the property Services. 
            <para>
            The list of services described.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DescribeTaskDefinitionRequest">
            <summary>
            Container for the parameters to the DescribeTaskDefinition operation.
            Describes a task definition. You can specify a <code>family</code> and <code>revision</code>
            to find information about a specific task definition, or you can simply specify the
            family to find the latest <code>ACTIVE</code> revision in that family.
            
             <note> 
            <para>
            You can only describe <code>INACTIVE</code> task definitions while an active task
            or service references them.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeTaskDefinitionRequest.Include">
            <summary>
            Gets and sets the property Include. 
            <para>
            Specifies whether to see the resource tags for the task definition. If <code>TAGS</code>
            is specified, the tags are included in the response. If this field is omitted, tags
            are not included in the response.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeTaskDefinitionRequest.TaskDefinition">
            <summary>
            Gets and sets the property TaskDefinition. 
            <para>
            The <code>family</code> for the latest <code>ACTIVE</code> revision, <code>family</code>
            and <code>revision</code> (<code>family:revision</code>) for a specific revision in
            the family, or full Amazon Resource Name (ARN) of the task definition to describe.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DescribeTaskDefinitionResponse">
            <summary>
            This is the response object from the DescribeTaskDefinition operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeTaskDefinitionResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The metadata that is applied to the task definition to help you categorize and organize
            them. Each tag consists of a key and an optional value, both of which you define.
            </para>
             
            <para>
            The following basic restrictions apply to tags:
            </para>
             <ul> <li> 
            <para>
            Maximum number of tags per resource - 50
            </para>
             </li> <li> 
            <para>
            For each resource, each tag key must be unique, and each tag key can have only one
            value.
            </para>
             </li> <li> 
            <para>
            Maximum key length - 128 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            Maximum value length - 256 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            If your tagging schema is used across multiple services and resources, remember that
            other services may have restrictions on allowed characters. Generally allowed characters
            are: letters, numbers, and spaces representable in UTF-8, and the following characters:
            + - = . _ : / @.
            </para>
             </li> <li> 
            <para>
            Tag keys and values are case-sensitive.
            </para>
             </li> <li> 
            <para>
            Do not use <code>aws:</code>, <code>AWS:</code>, or any upper or lowercase combination
            of such as a prefix for either keys or values as it is reserved for Amazon Web Services
            use. You cannot edit or delete tag keys or values with this prefix. Tags with this
            prefix do not count against your tags per resource limit.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeTaskDefinitionResponse.TaskDefinition">
            <summary>
            Gets and sets the property TaskDefinition. 
            <para>
            The full task definition description.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DescribeTaskSetsRequest">
            <summary>
            Container for the parameters to the DescribeTaskSets operation.
            Describes the task sets in the specified cluster and service. This is used when a
            service uses the <code>EXTERNAL</code> deployment controller type. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-types.html">Amazon
            ECS Deployment Types</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeTaskSetsRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the cluster that hosts the service
            that the task sets exist in.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeTaskSetsRequest.Include">
            <summary>
            Gets and sets the property Include. 
            <para>
            Specifies whether to see the resource tags for the task set. If <code>TAGS</code>
            is specified, the tags are included in the response. If this field is omitted, tags
            are not included in the response.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeTaskSetsRequest.Service">
            <summary>
            Gets and sets the property Service. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the service that the task sets
            exist in.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeTaskSetsRequest.TaskSets">
            <summary>
            Gets and sets the property TaskSets. 
            <para>
            The ID or full Amazon Resource Name (ARN) of task sets to describe.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DescribeTaskSetsResponse">
            <summary>
            This is the response object from the DescribeTaskSets operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeTaskSetsResponse.Failures">
            <summary>
            Gets and sets the property Failures. 
            <para>
            Any failures associated with the call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeTaskSetsResponse.TaskSets">
            <summary>
            Gets and sets the property TaskSets. 
            <para>
            The list of task sets described.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DescribeTasksRequest">
            <summary>
            Container for the parameters to the DescribeTasks operation.
            Describes a specified task or tasks.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeTasksRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the cluster that hosts the task
            or tasks to describe. If you do not specify a cluster, the default cluster is assumed.
            This parameter is required if the task or tasks you are describing were launched in
            any cluster other than the default cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeTasksRequest.Include">
            <summary>
            Gets and sets the property Include. 
            <para>
            Specifies whether you want to see the resource tags for the task. If <code>TAGS</code>
            is specified, the tags are included in the response. If this field is omitted, tags
            are not included in the response.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeTasksRequest.Tasks">
            <summary>
            Gets and sets the property Tasks. 
            <para>
            A list of up to 100 task IDs or full ARN entries.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DescribeTasksResponse">
            <summary>
            This is the response object from the DescribeTasks operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeTasksResponse.Failures">
            <summary>
            Gets and sets the property Failures. 
            <para>
            Any failures associated with the call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeTasksResponse.Tasks">
            <summary>
            Gets and sets the property Tasks. 
            <para>
            The list of tasks.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Device">
            <summary>
            An object representing a container instance host device.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Device.ContainerPath">
            <summary>
            Gets and sets the property ContainerPath. 
            <para>
            The path inside the container at which to expose the host device.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Device.HostPath">
            <summary>
            Gets and sets the property HostPath. 
            <para>
            The path for the device on the host container instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Device.Permissions">
            <summary>
            Gets and sets the property Permissions. 
            <para>
            The explicit permissions to provide to the container for the device. By default, the
            container has permissions for <code>read</code>, <code>write</code>, and <code>mknod</code>
            for the device.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DockerVolumeConfiguration">
            <summary>
            This parameter is specified when you are using Docker volumes. Docker volumes are
            only supported when you are using the EC2 launch type. Windows containers only support
            the use of the <code>local</code> driver. To use bind mounts, specify a <code>host</code>
            instead.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DockerVolumeConfiguration.Autoprovision">
            <summary>
            Gets and sets the property Autoprovision. 
            <para>
            If this value is <code>true</code>, the Docker volume is created if it does not already
            exist.
            </para>
             <note> 
            <para>
            This field is only used if the <code>scope</code> is <code>shared</code>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DockerVolumeConfiguration.Driver">
            <summary>
            Gets and sets the property Driver. 
            <para>
            The Docker volume driver to use. The driver value must match the driver name provided
            by Docker because it is used for task placement. If the driver was installed using
            the Docker plugin CLI, use <code>docker plugin ls</code> to retrieve the driver name
            from your container instance. If the driver was installed using another method, use
            Docker plugin discovery to retrieve the driver name. For more information, see <a
            href="https://docs.docker.com/engine/extend/plugin_api/#plugin-discovery">Docker plugin
            discovery</a>. This parameter maps to <code>Driver</code> in the <a href="https://docs.docker.com/engine/api/v1.35/#operation/VolumeCreate">Create
            a volume</a> section of the <a href="https://docs.docker.com/engine/api/v1.35/">Docker
            Remote API</a> and the <code>xxdriver</code> option to <a href="https://docs.docker.com/engine/reference/commandline/volume_create/">docker
            volume create</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DockerVolumeConfiguration.DriverOpts">
            <summary>
            Gets and sets the property DriverOpts. 
            <para>
            A map of Docker driver-specific options passed through. This parameter maps to <code>DriverOpts</code>
            in the <a href="https://docs.docker.com/engine/api/v1.35/#operation/VolumeCreate">Create
            a volume</a> section of the <a href="https://docs.docker.com/engine/api/v1.35/">Docker
            Remote API</a> and the <code>xxopt</code> option to <a href="https://docs.docker.com/engine/reference/commandline/volume_create/">docker
            volume create</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DockerVolumeConfiguration.Labels">
            <summary>
            Gets and sets the property Labels. 
            <para>
            Custom metadata to add to your Docker volume. This parameter maps to <code>Labels</code>
            in the <a href="https://docs.docker.com/engine/api/v1.35/#operation/VolumeCreate">Create
            a volume</a> section of the <a href="https://docs.docker.com/engine/api/v1.35/">Docker
            Remote API</a> and the <code>xxlabel</code> option to <a href="https://docs.docker.com/engine/reference/commandline/volume_create/">docker
            volume create</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DockerVolumeConfiguration.Scope">
            <summary>
            Gets and sets the property Scope. 
            <para>
            The scope for the Docker volume that determines its lifecycle. Docker volumes that
            are scoped to a <code>task</code> are automatically provisioned when the task starts
            and destroyed when the task stops. Docker volumes that are scoped as <code>shared</code>
            persist after the task stops.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.EFSAuthorizationConfig">
            <summary>
            The authorization configuration details for the Amazon EFS file system.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.EFSAuthorizationConfig.AccessPointId">
            <summary>
            Gets and sets the property AccessPointId. 
            <para>
            The Amazon EFS access point ID to use. If an access point is specified, the root directory
            value specified in the <code>EFSVolumeConfiguration</code> must either be omitted
            or set to <code>/</code> which will enforce the path set on the EFS access point.
            If an access point is used, transit encryption must be enabled in the <code>EFSVolumeConfiguration</code>.
            For more information, see <a href="https://docs.aws.amazon.com/efs/latest/ug/efs-access-points.html">Working
            with Amazon EFS Access Points</a> in the <i>Amazon Elastic File System User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.EFSAuthorizationConfig.Iam">
            <summary>
            Gets and sets the property Iam. 
            <para>
            Whether or not to use the Amazon ECS task IAM role defined in a task definition when
            mounting the Amazon EFS file system. If enabled, transit encryption must be enabled
            in the <code>EFSVolumeConfiguration</code>. If this parameter is omitted, the default
            value of <code>DISABLED</code> is used. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/efs-volumes.html#efs-volume-accesspoints">Using
            Amazon EFS Access Points</a> in the <i>Amazon Elastic Container Service Developer
            Guide</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.EFSVolumeConfiguration">
            <summary>
            This parameter is specified when you are using an Amazon Elastic File System file
            system for task storage. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/efs-volumes.html">Amazon
            EFS Volumes</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.EFSVolumeConfiguration.AuthorizationConfig">
            <summary>
            Gets and sets the property AuthorizationConfig. 
            <para>
            The authorization configuration details for the Amazon EFS file system.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.EFSVolumeConfiguration.FileSystemId">
            <summary>
            Gets and sets the property FileSystemId. 
            <para>
            The Amazon EFS file system ID to use.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.EFSVolumeConfiguration.RootDirectory">
            <summary>
            Gets and sets the property RootDirectory. 
            <para>
            The directory within the Amazon EFS file system to mount as the root directory inside
            the host. If this parameter is omitted, the root of the Amazon EFS volume will be
            used. Specifying <code>/</code> will have the same effect as omitting this parameter.
            </para>
             <important> 
            <para>
            If an EFS access point is specified in the <code>authorizationConfig</code>, the root
            directory parameter must either be omitted or set to <code>/</code> which will enforce
            the path set on the EFS access point.
            </para>
             </important>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.EFSVolumeConfiguration.TransitEncryption">
            <summary>
            Gets and sets the property TransitEncryption. 
            <para>
            Whether or not to enable encryption for Amazon EFS data in transit between the Amazon
            ECS host and the Amazon EFS server. Transit encryption must be enabled if Amazon EFS
            IAM authorization is used. If this parameter is omitted, the default value of <code>DISABLED</code>
            is used. For more information, see <a href="https://docs.aws.amazon.com/efs/latest/ug/encryption-in-transit.html">Encrypting
            Data in Transit</a> in the <i>Amazon Elastic File System User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.EFSVolumeConfiguration.TransitEncryptionPort">
            <summary>
            Gets and sets the property TransitEncryptionPort. 
            <para>
            The port to use when sending encrypted data between the Amazon ECS host and the Amazon
            EFS server. If you do not specify a transit encryption port, it will use the port
            selection strategy that the Amazon EFS mount helper uses. For more information, see
            <a href="https://docs.aws.amazon.com/efs/latest/ug/efs-mount-helper.html">EFS Mount
            Helper</a> in the <i>Amazon Elastic File System User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.EnvironmentFile">
            <summary>
            A list of files containing the environment variables to pass to a container. You can
            specify up to ten environment files. The file must have a <code>.env</code> file extension.
            Each line in an environment file should contain an environment variable in <code>VARIABLE=VALUE</code>
            format. Lines beginning with <code>#</code> are treated as comments and are ignored.
            For more information on the environment variable file syntax, see <a href="https://docs.docker.com/compose/env-file/">Declare
            default environment variables in file</a>.
            
             
            <para>
            If there are environment variables specified using the <code>environment</code> parameter
            in a container definition, they take precedence over the variables contained within
            an environment file. If multiple environment files are specified that contain the
            same variable, they are processed from the top down. It is recommended to use unique
            variable names. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/taskdef-envfiles.html">Specifying
            environment variables</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            This field is only valid for containers in Fargate tasks that use platform version
            <code>1.4.0</code> or later.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.EnvironmentFile.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The file type to use. The only supported value is <code>s3</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.EnvironmentFile.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The Amazon Resource Name (ARN) of the Amazon S3 object containing the environment
            variable file.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.EphemeralStorage">
            <summary>
            The amount of ephemeral storage to allocate for the task. This parameter is used to
            expand the total amount of ephemeral storage available, beyond the default amount,
            for tasks hosted on Fargate. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/userguide/using_data_volumes.html">Fargate
            task storage</a> in the <i>Amazon ECS User Guide for Fargate</i>.
            
             <note> 
            <para>
            This parameter is only supported for tasks hosted on Fargate using platform version
            <code>1.4.0</code> or later.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.EphemeralStorage.SizeInGiB">
            <summary>
            Gets and sets the property SizeInGiB. 
            <para>
            The total amount, in GiB, of ephemeral storage to set for the task. The minimum supported
            value is <code>21</code> GiB and the maximum supported value is <code>200</code> GiB.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ExecuteCommandConfiguration">
            <summary>
            The details of the execute command configuration.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ExecuteCommandConfiguration.KmsKeyId">
            <summary>
            Gets and sets the property KmsKeyId. 
            <para>
            Specify an Key Management Service key ID to encrypt the data between the local client
            and the container.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ExecuteCommandConfiguration.LogConfiguration">
            <summary>
            Gets and sets the property LogConfiguration. 
            <para>
            The log configuration for the results of the execute command actions. The logs can
            be sent to CloudWatch Logs or an Amazon S3 bucket. When <code>logging=OVERRIDE</code>
            is specified, a <code>logConfiguration</code> must be provided.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ExecuteCommandConfiguration.Logging">
            <summary>
            Gets and sets the property Logging. 
            <para>
            The log setting to use for redirecting logs for your execute command results. The
            following log settings are available.
            </para>
             <ul> <li> 
            <para>
             <code>NONE</code>: The execute command session is not logged.
            </para>
             </li> <li> 
            <para>
             <code>DEFAULT</code>: The <code>awslogs</code> configuration in the task definition
            is used. If no logging parameter is specified, it defaults to this value. If no <code>awslogs</code>
            log driver is configured in the task definition, the output won't be logged.
            </para>
             </li> <li> 
            <para>
             <code>OVERRIDE</code>: Specify the logging details as a part of <code>logConfiguration</code>.
            If the <code>OVERRIDE</code> logging option is specified, the <code>logConfiguration</code>
            is required.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ExecuteCommandLogConfiguration">
            <summary>
            The log configuration for the results of the execute command actions. The logs can
            be sent to CloudWatch Logs or an Amazon S3 bucket.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ExecuteCommandLogConfiguration.CloudWatchEncryptionEnabled">
            <summary>
            Gets and sets the property CloudWatchEncryptionEnabled. 
            <para>
            Whether or not to enable encryption on the CloudWatch logs. If not specified, encryption
            will be disabled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ExecuteCommandLogConfiguration.CloudWatchLogGroupName">
            <summary>
            Gets and sets the property CloudWatchLogGroupName. 
            <para>
            The name of the CloudWatch log group to send logs to.
            </para>
             <note> 
            <para>
            The CloudWatch log group must already be created.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ExecuteCommandLogConfiguration.S3BucketName">
            <summary>
            Gets and sets the property S3BucketName. 
            <para>
            The name of the S3 bucket to send logs to.
            </para>
             <note> 
            <para>
            The S3 bucket must already be created.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ExecuteCommandLogConfiguration.S3EncryptionEnabled">
            <summary>
            Gets and sets the property S3EncryptionEnabled. 
            <para>
            Whether or not to enable encryption on the CloudWatch logs. If not specified, encryption
            will be disabled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ExecuteCommandLogConfiguration.S3KeyPrefix">
            <summary>
            Gets and sets the property S3KeyPrefix. 
            <para>
            An optional folder in the S3 bucket to place logs in.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ExecuteCommandRequest">
            <summary>
            Container for the parameters to the ExecuteCommand operation.
            Runs a command remotely on a container within a task.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ExecuteCommandRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The Amazon Resource Name (ARN) or short name of the cluster the task is running in.
            If you do not specify a cluster, the default cluster is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ExecuteCommandRequest.Command">
            <summary>
            Gets and sets the property Command. 
            <para>
            The command to run on the container.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ExecuteCommandRequest.Container">
            <summary>
            Gets and sets the property Container. 
            <para>
            The name of the container to execute the command on. A container name only needs to
            be specified for tasks containing multiple containers.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ExecuteCommandRequest.Interactive">
            <summary>
            Gets and sets the property Interactive. 
            <para>
            Use this flag to run your command in interactive mode.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ExecuteCommandRequest.Task">
            <summary>
            Gets and sets the property Task. 
            <para>
            The Amazon Resource Name (ARN) or ID of the task the container is part of.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ExecuteCommandResponse">
            <summary>
            This is the response object from the ExecuteCommand operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ExecuteCommandResponse.ClusterArn">
            <summary>
            Gets and sets the property ClusterArn. 
            <para>
            The Amazon Resource Name (ARN) of the cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ExecuteCommandResponse.ContainerArn">
            <summary>
            Gets and sets the property ContainerArn. 
            <para>
            The Amazon Resource Name (ARN) of the container.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ExecuteCommandResponse.ContainerName">
            <summary>
            Gets and sets the property ContainerName. 
            <para>
            The name of the container.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ExecuteCommandResponse.Interactive">
            <summary>
            Gets and sets the property Interactive. 
            <para>
            Whether or not the execute command session is running in interactive mode. Amazon
            ECS only supports initiating interactive sessions, so you must specify <code>true</code>
            for this value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ExecuteCommandResponse.Session">
            <summary>
            Gets and sets the property Session. 
            <para>
            The details of the SSM session that was created for this instance of execute-command.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ExecuteCommandResponse.TaskArn">
            <summary>
            Gets and sets the property TaskArn. 
            <para>
            The Amazon Resource Name (ARN) of the task.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Failure">
            <summary>
            A failed resource. For a list of common causes, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/api_failures_messages.html">API
            failure reasons</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Failure.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The Amazon Resource Name (ARN) of the failed resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Failure.Detail">
            <summary>
            Gets and sets the property Detail. 
            <para>
            The details of the failure.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Failure.Reason">
            <summary>
            Gets and sets the property Reason. 
            <para>
            The reason for the failure.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.FirelensConfiguration">
            <summary>
            The FireLens configuration for the container. This is used to specify and configure
            a log router for container logs. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using_firelens.html">Custom
            Log Routing</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.FirelensConfiguration.Options">
            <summary>
            Gets and sets the property Options. 
            <para>
            The options to use when configuring the log router. This field is optional and can
            be used to specify a custom configuration file or to add additional metadata, such
            as the task, task definition, cluster, and container instance details to the log event.
            If specified, the syntax to use is <code>"options":{"enable-ecs-log-metadata":"true|false","config-file-type:"s3|file","config-file-value":"arn:aws:s3:::mybucket/fluent.conf|filepath"}</code>.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using_firelens.html#firelens-taskdef">Creating
            a Task Definition that Uses a FireLens Configuration</a> in the <i>Amazon Elastic
            Container Service Developer Guide</i>.
            </para>
             <note> 
            <para>
            Tasks hosted on Fargate only support the <code>file</code> configuration file type.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.FirelensConfiguration.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The log router to use. The valid values are <code>fluentd</code> or <code>fluentbit</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.FSxWindowsFileServerAuthorizationConfig">
            <summary>
            The authorization configuration details for Amazon FSx for Windows File Server file
            system. See <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_FSxWindowsFileServerVolumeConfiguration.html">FSxWindowsFileServerVolumeConfiguration</a>
            in the <i>Amazon Elastic Container Service API Reference</i>.
            
             
            <para>
            For more information and the input format, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/wfsx-volumes.html">Amazon
            FSx for Windows File Server Volumes</a> in the <i>Amazon Elastic Container Service
            Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.FSxWindowsFileServerAuthorizationConfig.CredentialsParameter">
            <summary>
            Gets and sets the property CredentialsParameter. 
            <para>
            The authorization credential option to use. The authorization credential options can
            be provided using either the Amazon Resource Name (ARN) of an Secrets Manager secret
            or SSM Parameter Store parameter. The ARNs refer to the stored credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.FSxWindowsFileServerAuthorizationConfig.Domain">
            <summary>
            Gets and sets the property Domain. 
            <para>
            A fully qualified domain name hosted by an <a href="https://docs.aws.amazon.com/directoryservice/latest/admin-guide/directory_microsoft_ad.html">Directory
            Service</a> Managed Microsoft AD (Active Directory) or self-hosted AD on Amazon EC2.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.FSxWindowsFileServerVolumeConfiguration">
            <summary>
            This parameter is specified when you are using <a href="https://docs.aws.amazon.com/fsx/latest/WindowsGuide/what-is.html">Amazon
            FSx for Windows File Server</a> file system for task storage.
            
             
            <para>
            For more information and the input format, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/wfsx-volumes.html">Amazon
            FSx for Windows File Server Volumes</a> in the <i>Amazon Elastic Container Service
            Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.FSxWindowsFileServerVolumeConfiguration.AuthorizationConfig">
            <summary>
            Gets and sets the property AuthorizationConfig. 
            <para>
            The authorization configuration details for the Amazon FSx for Windows File Server
            file system.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.FSxWindowsFileServerVolumeConfiguration.FileSystemId">
            <summary>
            Gets and sets the property FileSystemId. 
            <para>
            The Amazon FSx for Windows File Server file system ID to use.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.FSxWindowsFileServerVolumeConfiguration.RootDirectory">
            <summary>
            Gets and sets the property RootDirectory. 
            <para>
            The directory within the Amazon FSx for Windows File Server file system to mount as
            the root directory inside the host.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.HealthCheck">
            <summary>
            An object representing a container health check. Health check parameters that are
            specified in a container definition override any Docker health checks that exist in
            the container image (such as those specified in a parent image or from the image's
            Dockerfile).
            
             
            <para>
            You can view the health status of both individual containers and a task with the DescribeTasks
            API operation or when viewing the task details in the console.
            </para>
             
            <para>
            The following describes the possible <code>healthStatus</code> values for a container:
            </para>
             <ul> <li> 
            <para>
             <code>HEALTHY</code>-The container health check has passed successfully.
            </para>
             </li> <li> 
            <para>
             <code>UNHEALTHY</code>-The container health check has failed.
            </para>
             </li> <li> 
            <para>
             <code>UNKNOWN</code>-The container health check is being evaluated or there is no
            container health check defined.
            </para>
             </li> </ul> 
            <para>
            The following describes the possible <code>healthStatus</code> values for a task.
            The container health check status of nonessential containers do not have an effect
            on the health status of a task.
            </para>
             <ul> <li> 
            <para>
             <code>HEALTHY</code>-All essential containers within the task have passed their health
            checks.
            </para>
             </li> <li> 
            <para>
             <code>UNHEALTHY</code>-One or more essential containers have failed their health
            check.
            </para>
             </li> <li> 
            <para>
             <code>UNKNOWN</code>-The essential containers within the task are still having their
            health checks evaluated or there are no container health checks defined.
            </para>
             </li> </ul> 
            <para>
            If a task is run manually, and not as part of a service, the task will continue its
            lifecycle regardless of its health status. For tasks that are part of a service, if
            the task reports as unhealthy then the task will be stopped and the service scheduler
            will replace it.
            </para>
             
            <para>
            The following are notes about container health check support:
            </para>
             <ul> <li> 
            <para>
            Container health checks require version 1.17.0 or greater of the Amazon ECS container
            agent. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-update.html">Updating
            the Amazon ECS Container Agent</a>.
            </para>
             </li> <li> 
            <para>
            Container health checks are supported for Fargate tasks if you are using platform
            version 1.1.0 or greater. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/platform_versions.html">Fargate
            Platform Versions</a>.
            </para>
             </li> <li> 
            <para>
            Container health checks are not supported for tasks that are part of a service that
            is configured to use a Classic Load Balancer.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.HealthCheck.Command">
            <summary>
            Gets and sets the property Command. 
            <para>
            A string array representing the command that the container runs to determine if it
            is healthy. The string array must start with <code>CMD</code> to execute the command
            arguments directly, or <code>CMD-SHELL</code> to run the command with the container's
            default shell. 
            </para>
             
            <para>
             When you use the Amazon Web Services Management Console JSON panel, the Command Line
            Interface, or the APIs, you should enclose the list of commands in brackets, as shown
            below.
            </para>
             
            <para>
             <code>[ "CMD-SHELL", "curl -f http://localhost/ || exit 1" ]</code> 
            </para>
             
            <para>
            You do not need to include the brackets when you use the Amazon Web Services Management
            Consoleas shown below.
            </para>
             
            <para>
             <code> "CMD-SHELL", "curl -f http://localhost/ || exit 1" </code> 
            </para>
             
            <para>
            An exit code of 0 indicates success, and non-zero exit code indicates failure. For
            more information, see <code>HealthCheck</code> in the <a href="https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.35/">Docker
            Remote API</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.HealthCheck.Interval">
            <summary>
            Gets and sets the property Interval. 
            <para>
            The time period in seconds between each health check execution. You may specify between
            5 and 300 seconds. The default value is 30 seconds.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.HealthCheck.Retries">
            <summary>
            Gets and sets the property Retries. 
            <para>
            The number of times to retry a failed health check before the container is considered
            unhealthy. You may specify between 1 and 10 retries. The default value is 3.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.HealthCheck.StartPeriod">
            <summary>
            Gets and sets the property StartPeriod. 
            <para>
            The optional grace period within which to provide containers time to bootstrap before
            failed health checks count towards the maximum number of retries. You may specify
            between 0 and 300 seconds. The <code>startPeriod</code> is disabled by default.
            </para>
             <note> 
            <para>
            If a health check succeeds within the <code>startPeriod</code>, then the container
            is considered healthy and any subsequent failures count toward the maximum number
            of retries.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.HealthCheck.Timeout">
            <summary>
            Gets and sets the property Timeout. 
            <para>
            The time period in seconds to wait for a health check to succeed before it is considered
            a failure. You may specify between 2 and 60 seconds. The default value is 5.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.HostEntry">
            <summary>
            Hostnames and IP address entries that are added to the <code>/etc/hosts</code> file
            of a container via the <code>extraHosts</code> parameter of its <a>ContainerDefinition</a>.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.HostEntry.Hostname">
            <summary>
            Gets and sets the property Hostname. 
            <para>
            The hostname to use in the <code>/etc/hosts</code> entry.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.HostEntry.IpAddress">
            <summary>
            Gets and sets the property IpAddress. 
            <para>
            The IP address to use in the <code>/etc/hosts</code> entry.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.HostVolumeProperties">
            <summary>
            Details on a container instance bind mount host volume.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.HostVolumeProperties.SourcePath">
            <summary>
            Gets and sets the property SourcePath. 
            <para>
            When the <code>host</code> parameter is used, specify a <code>sourcePath</code> to
            declare the path on the host container instance that is presented to the container.
            If this parameter is empty, then the Docker daemon has assigned a host path for you.
            If the <code>host</code> parameter contains a <code>sourcePath</code> file location,
            then the data volume persists at the specified location on the host container instance
            until you delete it manually. If the <code>sourcePath</code> value does not exist
            on the host container instance, the Docker daemon creates it. If the location does
            exist, the contents of the source path folder are exported.
            </para>
             
            <para>
            If you are using the Fargate launch type, the <code>sourcePath</code> parameter is
            not supported.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.InferenceAccelerator">
            <summary>
            Details on a Elastic Inference accelerator. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-inference.html">Working
            with Amazon Elastic Inference on Amazon ECS</a> in the <i>Amazon Elastic Container
            Service Developer Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.InferenceAccelerator.DeviceName">
            <summary>
            Gets and sets the property DeviceName. 
            <para>
            The Elastic Inference accelerator device name. The <code>deviceName</code> must also
            be referenced in a container definition as a <a>ResourceRequirement</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.InferenceAccelerator.DeviceType">
            <summary>
            Gets and sets the property DeviceType. 
            <para>
            The Elastic Inference accelerator type to use.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.InferenceAcceleratorOverride">
            <summary>
            Details on an Elastic Inference accelerator task override. This parameter is used
            to override the Elastic Inference accelerator specified in the task definition. For
            more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-inference.html">Working
            with Amazon Elastic Inference on Amazon ECS</a> in the <i>Amazon Elastic Container
            Service Developer Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.InferenceAcceleratorOverride.DeviceName">
            <summary>
            Gets and sets the property DeviceName. 
            <para>
            The Elastic Inference accelerator device name to override for the task. This parameter
            must match a <code>deviceName</code> specified in the task definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.InferenceAcceleratorOverride.DeviceType">
            <summary>
            Gets and sets the property DeviceType. 
            <para>
            The Elastic Inference accelerator type to use.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for AccessDeniedException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.AttachmentStateChangeMarshaller">
            <summary>
            AttachmentStateChange Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.AttachmentStateChangeMarshaller.Marshall(Amazon.ECS.Model.AttachmentStateChange,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.AttachmentStateChangeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.AttachmentUnmarshaller">
            <summary>
            Response Unmarshaller for Attachment Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.AttachmentUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#Attachment,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.AttachmentUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.AttachmentUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.AttributeLimitExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for AttributeLimitExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.AttributeLimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.AttributeLimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.AttributeLimitExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.AttributeMarshaller">
            <summary>
            Attribute Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.AttributeMarshaller.Marshall(Amazon.ECS.Model.Attribute,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.AttributeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.AttributeUnmarshaller">
            <summary>
            Response Unmarshaller for Attribute Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.AttributeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#Attribute,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.AttributeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.AttributeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.AutoScalingGroupProviderMarshaller">
            <summary>
            AutoScalingGroupProvider Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.AutoScalingGroupProviderMarshaller.Marshall(Amazon.ECS.Model.AutoScalingGroupProvider,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.AutoScalingGroupProviderMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.AutoScalingGroupProviderUnmarshaller">
            <summary>
            Response Unmarshaller for AutoScalingGroupProvider Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.AutoScalingGroupProviderUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#AutoScalingGroupProvider,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.AutoScalingGroupProviderUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.AutoScalingGroupProviderUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.AutoScalingGroupProviderUpdateMarshaller">
            <summary>
            AutoScalingGroupProviderUpdate Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.AutoScalingGroupProviderUpdateMarshaller.Marshall(Amazon.ECS.Model.AutoScalingGroupProviderUpdate,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.AutoScalingGroupProviderUpdateMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.AwsVpcConfigurationMarshaller">
            <summary>
            AwsVpcConfiguration Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.AwsVpcConfigurationMarshaller.Marshall(Amazon.ECS.Model.AwsVpcConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.AwsVpcConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.AwsVpcConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for AwsVpcConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.AwsVpcConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#AwsVpcConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.AwsVpcConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.AwsVpcConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.BlockedExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for BlockedException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.BlockedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.BlockedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.BlockedExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.CapacityProviderStrategyItemMarshaller">
            <summary>
            CapacityProviderStrategyItem Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.CapacityProviderStrategyItemMarshaller.Marshall(Amazon.ECS.Model.CapacityProviderStrategyItem,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.CapacityProviderStrategyItemMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.CapacityProviderStrategyItemUnmarshaller">
            <summary>
            Response Unmarshaller for CapacityProviderStrategyItem Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.CapacityProviderStrategyItemUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#CapacityProviderStrategyItem,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.CapacityProviderStrategyItemUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.CapacityProviderStrategyItemUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.CapacityProviderUnmarshaller">
            <summary>
            Response Unmarshaller for CapacityProvider Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.CapacityProviderUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#CapacityProvider,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.CapacityProviderUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.CapacityProviderUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ClientExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ClientException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ClientExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ClientExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ClientExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterConfigurationMarshaller">
            <summary>
            ClusterConfiguration Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterConfigurationMarshaller.Marshall(Amazon.ECS.Model.ClusterConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for ClusterConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#ClusterConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterContainsContainerInstancesExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ClusterContainsContainerInstancesException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterContainsContainerInstancesExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterContainsContainerInstancesExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterContainsContainerInstancesExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterContainsServicesExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ClusterContainsServicesException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterContainsServicesExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterContainsServicesExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterContainsServicesExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterContainsTasksExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ClusterContainsTasksException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterContainsTasksExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterContainsTasksExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterContainsTasksExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ClusterNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterSettingMarshaller">
            <summary>
            ClusterSetting Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterSettingMarshaller.Marshall(Amazon.ECS.Model.ClusterSetting,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterSettingMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterSettingUnmarshaller">
            <summary>
            Response Unmarshaller for ClusterSetting Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterSettingUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#ClusterSetting,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterSettingUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterSettingUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterUnmarshaller">
            <summary>
            Response Unmarshaller for Cluster Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#Cluster,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerDefinitionMarshaller">
            <summary>
            ContainerDefinition Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerDefinitionMarshaller.Marshall(Amazon.ECS.Model.ContainerDefinition,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerDefinitionMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerDefinitionUnmarshaller">
            <summary>
            Response Unmarshaller for ContainerDefinition Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerDefinitionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#ContainerDefinition,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerDefinitionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerDefinitionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerDependencyMarshaller">
            <summary>
            ContainerDependency Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerDependencyMarshaller.Marshall(Amazon.ECS.Model.ContainerDependency,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerDependencyMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerDependencyUnmarshaller">
            <summary>
            Response Unmarshaller for ContainerDependency Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerDependencyUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#ContainerDependency,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerDependencyUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerDependencyUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerInstanceUnmarshaller">
            <summary>
            Response Unmarshaller for ContainerInstance Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerInstanceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#ContainerInstance,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerInstanceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerInstanceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerOverrideMarshaller">
            <summary>
            ContainerOverride Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerOverrideMarshaller.Marshall(Amazon.ECS.Model.ContainerOverride,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerOverrideMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerOverrideUnmarshaller">
            <summary>
            Response Unmarshaller for ContainerOverride Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerOverrideUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#ContainerOverride,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerOverrideUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerOverrideUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerUnmarshaller">
            <summary>
            Response Unmarshaller for Container Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#Container,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.CreateCapacityProviderRequestMarshaller">
            <summary>
            CreateCapacityProvider Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.CreateCapacityProviderRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.CreateCapacityProviderRequestMarshaller.Marshall(Amazon.ECS.Model.CreateCapacityProviderRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.CreateCapacityProviderRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.CreateCapacityProviderResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateCapacityProvider operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.CreateCapacityProviderResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.CreateCapacityProviderResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.CreateCapacityProviderResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.CreateClusterRequestMarshaller">
            <summary>
            CreateCluster Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.CreateClusterRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.CreateClusterRequestMarshaller.Marshall(Amazon.ECS.Model.CreateClusterRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.CreateClusterRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.CreateClusterResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateCluster operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.CreateClusterResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.CreateClusterResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.CreateClusterResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.CreateServiceRequestMarshaller">
            <summary>
            CreateService Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.CreateServiceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.CreateServiceRequestMarshaller.Marshall(Amazon.ECS.Model.CreateServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.CreateServiceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.CreateServiceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateService operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.CreateServiceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.CreateServiceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.CreateServiceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.CreateTaskSetRequestMarshaller">
            <summary>
            CreateTaskSet Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.CreateTaskSetRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.CreateTaskSetRequestMarshaller.Marshall(Amazon.ECS.Model.CreateTaskSetRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.CreateTaskSetRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.CreateTaskSetResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateTaskSet operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.CreateTaskSetResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.CreateTaskSetResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.CreateTaskSetResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteAccountSettingRequestMarshaller">
            <summary>
            DeleteAccountSetting Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteAccountSettingRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteAccountSettingRequestMarshaller.Marshall(Amazon.ECS.Model.DeleteAccountSettingRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteAccountSettingRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteAccountSettingResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteAccountSetting operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteAccountSettingResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteAccountSettingResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteAccountSettingResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteAttributesRequestMarshaller">
            <summary>
            DeleteAttributes Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteAttributesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteAttributesRequestMarshaller.Marshall(Amazon.ECS.Model.DeleteAttributesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteAttributesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteAttributesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteAttributes operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteAttributesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteAttributesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteAttributesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteCapacityProviderRequestMarshaller">
            <summary>
            DeleteCapacityProvider Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteCapacityProviderRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteCapacityProviderRequestMarshaller.Marshall(Amazon.ECS.Model.DeleteCapacityProviderRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteCapacityProviderRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteCapacityProviderResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteCapacityProvider operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteCapacityProviderResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteCapacityProviderResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteCapacityProviderResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteClusterRequestMarshaller">
            <summary>
            DeleteCluster Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteClusterRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteClusterRequestMarshaller.Marshall(Amazon.ECS.Model.DeleteClusterRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteClusterRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteClusterResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteCluster operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteClusterResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteClusterResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteClusterResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteServiceRequestMarshaller">
            <summary>
            DeleteService Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteServiceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteServiceRequestMarshaller.Marshall(Amazon.ECS.Model.DeleteServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteServiceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteServiceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteService operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteServiceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteServiceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteServiceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteTaskSetRequestMarshaller">
            <summary>
            DeleteTaskSet Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteTaskSetRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteTaskSetRequestMarshaller.Marshall(Amazon.ECS.Model.DeleteTaskSetRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteTaskSetRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteTaskSetResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteTaskSet operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteTaskSetResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteTaskSetResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteTaskSetResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DeploymentCircuitBreakerMarshaller">
            <summary>
            DeploymentCircuitBreaker Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeploymentCircuitBreakerMarshaller.Marshall(Amazon.ECS.Model.DeploymentCircuitBreaker,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.DeploymentCircuitBreakerMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DeploymentCircuitBreakerUnmarshaller">
            <summary>
            Response Unmarshaller for DeploymentCircuitBreaker Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeploymentCircuitBreakerUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#DeploymentCircuitBreaker,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeploymentCircuitBreakerUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DeploymentCircuitBreakerUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DeploymentConfigurationMarshaller">
            <summary>
            DeploymentConfiguration Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeploymentConfigurationMarshaller.Marshall(Amazon.ECS.Model.DeploymentConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.DeploymentConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DeploymentConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for DeploymentConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeploymentConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#DeploymentConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeploymentConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DeploymentConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DeploymentControllerMarshaller">
            <summary>
            DeploymentController Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeploymentControllerMarshaller.Marshall(Amazon.ECS.Model.DeploymentController,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.DeploymentControllerMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DeploymentControllerUnmarshaller">
            <summary>
            Response Unmarshaller for DeploymentController Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeploymentControllerUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#DeploymentController,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeploymentControllerUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DeploymentControllerUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DeploymentUnmarshaller">
            <summary>
            Response Unmarshaller for Deployment Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeploymentUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#Deployment,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeploymentUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DeploymentUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DeregisterContainerInstanceRequestMarshaller">
            <summary>
            DeregisterContainerInstance Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeregisterContainerInstanceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeregisterContainerInstanceRequestMarshaller.Marshall(Amazon.ECS.Model.DeregisterContainerInstanceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DeregisterContainerInstanceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DeregisterContainerInstanceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeregisterContainerInstance operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeregisterContainerInstanceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeregisterContainerInstanceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DeregisterContainerInstanceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DeregisterTaskDefinitionRequestMarshaller">
            <summary>
            DeregisterTaskDefinition Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeregisterTaskDefinitionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeregisterTaskDefinitionRequestMarshaller.Marshall(Amazon.ECS.Model.DeregisterTaskDefinitionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DeregisterTaskDefinitionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DeregisterTaskDefinitionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeregisterTaskDefinition operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeregisterTaskDefinitionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeregisterTaskDefinitionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DeregisterTaskDefinitionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeCapacityProvidersRequestMarshaller">
            <summary>
            DescribeCapacityProviders Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeCapacityProvidersRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeCapacityProvidersRequestMarshaller.Marshall(Amazon.ECS.Model.DescribeCapacityProvidersRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeCapacityProvidersRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeCapacityProvidersResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeCapacityProviders operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeCapacityProvidersResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeCapacityProvidersResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeCapacityProvidersResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeClustersRequestMarshaller">
            <summary>
            DescribeClusters Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeClustersRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeClustersRequestMarshaller.Marshall(Amazon.ECS.Model.DescribeClustersRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeClustersRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeClustersResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeClusters operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeClustersResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeClustersResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeClustersResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeContainerInstancesRequestMarshaller">
            <summary>
            DescribeContainerInstances Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeContainerInstancesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeContainerInstancesRequestMarshaller.Marshall(Amazon.ECS.Model.DescribeContainerInstancesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeContainerInstancesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeContainerInstancesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeContainerInstances operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeContainerInstancesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeContainerInstancesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeContainerInstancesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeServicesRequestMarshaller">
            <summary>
            DescribeServices Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeServicesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeServicesRequestMarshaller.Marshall(Amazon.ECS.Model.DescribeServicesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeServicesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeServicesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeServices operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeServicesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeServicesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeServicesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeTaskDefinitionRequestMarshaller">
            <summary>
            DescribeTaskDefinition Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeTaskDefinitionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeTaskDefinitionRequestMarshaller.Marshall(Amazon.ECS.Model.DescribeTaskDefinitionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeTaskDefinitionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeTaskDefinitionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeTaskDefinition operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeTaskDefinitionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeTaskDefinitionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeTaskDefinitionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeTaskSetsRequestMarshaller">
            <summary>
            DescribeTaskSets Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeTaskSetsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeTaskSetsRequestMarshaller.Marshall(Amazon.ECS.Model.DescribeTaskSetsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeTaskSetsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeTaskSetsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeTaskSets operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeTaskSetsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeTaskSetsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeTaskSetsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeTasksRequestMarshaller">
            <summary>
            DescribeTasks Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeTasksRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeTasksRequestMarshaller.Marshall(Amazon.ECS.Model.DescribeTasksRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeTasksRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeTasksResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeTasks operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeTasksResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeTasksResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeTasksResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DeviceMarshaller">
            <summary>
            Device Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeviceMarshaller.Marshall(Amazon.ECS.Model.Device,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.DeviceMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DeviceUnmarshaller">
            <summary>
            Response Unmarshaller for Device Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeviceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#Device,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeviceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DeviceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DockerVolumeConfigurationMarshaller">
            <summary>
            DockerVolumeConfiguration Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DockerVolumeConfigurationMarshaller.Marshall(Amazon.ECS.Model.DockerVolumeConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.DockerVolumeConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DockerVolumeConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for DockerVolumeConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DockerVolumeConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#DockerVolumeConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DockerVolumeConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DockerVolumeConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.EFSAuthorizationConfigMarshaller">
            <summary>
            EFSAuthorizationConfig Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.EFSAuthorizationConfigMarshaller.Marshall(Amazon.ECS.Model.EFSAuthorizationConfig,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.EFSAuthorizationConfigMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.EFSAuthorizationConfigUnmarshaller">
            <summary>
            Response Unmarshaller for EFSAuthorizationConfig Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.EFSAuthorizationConfigUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#EFSAuthorizationConfig,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.EFSAuthorizationConfigUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.EFSAuthorizationConfigUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.EFSVolumeConfigurationMarshaller">
            <summary>
            EFSVolumeConfiguration Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.EFSVolumeConfigurationMarshaller.Marshall(Amazon.ECS.Model.EFSVolumeConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.EFSVolumeConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.EFSVolumeConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for EFSVolumeConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.EFSVolumeConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#EFSVolumeConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.EFSVolumeConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.EFSVolumeConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.EnvironmentFileMarshaller">
            <summary>
            EnvironmentFile Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.EnvironmentFileMarshaller.Marshall(Amazon.ECS.Model.EnvironmentFile,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.EnvironmentFileMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.EnvironmentFileUnmarshaller">
            <summary>
            Response Unmarshaller for EnvironmentFile Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.EnvironmentFileUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#EnvironmentFile,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.EnvironmentFileUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.EnvironmentFileUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.EphemeralStorageMarshaller">
            <summary>
            EphemeralStorage Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.EphemeralStorageMarshaller.Marshall(Amazon.ECS.Model.EphemeralStorage,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.EphemeralStorageMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.EphemeralStorageUnmarshaller">
            <summary>
            Response Unmarshaller for EphemeralStorage Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.EphemeralStorageUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#EphemeralStorage,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.EphemeralStorageUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.EphemeralStorageUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ExecuteCommandConfigurationMarshaller">
            <summary>
            ExecuteCommandConfiguration Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ExecuteCommandConfigurationMarshaller.Marshall(Amazon.ECS.Model.ExecuteCommandConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.ExecuteCommandConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ExecuteCommandConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for ExecuteCommandConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ExecuteCommandConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#ExecuteCommandConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ExecuteCommandConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ExecuteCommandConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ExecuteCommandLogConfigurationMarshaller">
            <summary>
            ExecuteCommandLogConfiguration Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ExecuteCommandLogConfigurationMarshaller.Marshall(Amazon.ECS.Model.ExecuteCommandLogConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.ExecuteCommandLogConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ExecuteCommandLogConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for ExecuteCommandLogConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ExecuteCommandLogConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#ExecuteCommandLogConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ExecuteCommandLogConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ExecuteCommandLogConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ExecuteCommandRequestMarshaller">
            <summary>
            ExecuteCommand Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ExecuteCommandRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ExecuteCommandRequestMarshaller.Marshall(Amazon.ECS.Model.ExecuteCommandRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ExecuteCommandRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ExecuteCommandResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ExecuteCommand operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ExecuteCommandResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ExecuteCommandResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ExecuteCommandResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.FailureUnmarshaller">
            <summary>
            Response Unmarshaller for Failure Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.FailureUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#Failure,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.FailureUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.FailureUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.FirelensConfigurationMarshaller">
            <summary>
            FirelensConfiguration Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.FirelensConfigurationMarshaller.Marshall(Amazon.ECS.Model.FirelensConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.FirelensConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.FirelensConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for FirelensConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.FirelensConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#FirelensConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.FirelensConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.FirelensConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.FSxWindowsFileServerAuthorizationConfigMarshaller">
            <summary>
            FSxWindowsFileServerAuthorizationConfig Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.FSxWindowsFileServerAuthorizationConfigMarshaller.Marshall(Amazon.ECS.Model.FSxWindowsFileServerAuthorizationConfig,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.FSxWindowsFileServerAuthorizationConfigMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.FSxWindowsFileServerAuthorizationConfigUnmarshaller">
            <summary>
            Response Unmarshaller for FSxWindowsFileServerAuthorizationConfig Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.FSxWindowsFileServerAuthorizationConfigUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#FSxWindowsFileServerAuthorizationConfig,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.FSxWindowsFileServerAuthorizationConfigUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.FSxWindowsFileServerAuthorizationConfigUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.FSxWindowsFileServerVolumeConfigurationMarshaller">
            <summary>
            FSxWindowsFileServerVolumeConfiguration Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.FSxWindowsFileServerVolumeConfigurationMarshaller.Marshall(Amazon.ECS.Model.FSxWindowsFileServerVolumeConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.FSxWindowsFileServerVolumeConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.FSxWindowsFileServerVolumeConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for FSxWindowsFileServerVolumeConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.FSxWindowsFileServerVolumeConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#FSxWindowsFileServerVolumeConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.FSxWindowsFileServerVolumeConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.FSxWindowsFileServerVolumeConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.HealthCheckMarshaller">
            <summary>
            HealthCheck Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.HealthCheckMarshaller.Marshall(Amazon.ECS.Model.HealthCheck,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.HealthCheckMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.HealthCheckUnmarshaller">
            <summary>
            Response Unmarshaller for HealthCheck Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.HealthCheckUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#HealthCheck,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.HealthCheckUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.HealthCheckUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.HostEntryMarshaller">
            <summary>
            HostEntry Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.HostEntryMarshaller.Marshall(Amazon.ECS.Model.HostEntry,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.HostEntryMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.HostEntryUnmarshaller">
            <summary>
            Response Unmarshaller for HostEntry Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.HostEntryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#HostEntry,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.HostEntryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.HostEntryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.HostVolumePropertiesMarshaller">
            <summary>
            HostVolumeProperties Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.HostVolumePropertiesMarshaller.Marshall(Amazon.ECS.Model.HostVolumeProperties,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.HostVolumePropertiesMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.HostVolumePropertiesUnmarshaller">
            <summary>
            Response Unmarshaller for HostVolumeProperties Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.HostVolumePropertiesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#HostVolumeProperties,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.HostVolumePropertiesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.HostVolumePropertiesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.InferenceAcceleratorMarshaller">
            <summary>
            InferenceAccelerator Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.InferenceAcceleratorMarshaller.Marshall(Amazon.ECS.Model.InferenceAccelerator,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.InferenceAcceleratorMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.InferenceAcceleratorOverrideMarshaller">
            <summary>
            InferenceAcceleratorOverride Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.InferenceAcceleratorOverrideMarshaller.Marshall(Amazon.ECS.Model.InferenceAcceleratorOverride,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.InferenceAcceleratorOverrideMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.InferenceAcceleratorOverrideUnmarshaller">
            <summary>
            Response Unmarshaller for InferenceAcceleratorOverride Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.InferenceAcceleratorOverrideUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#InferenceAcceleratorOverride,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.InferenceAcceleratorOverrideUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.InferenceAcceleratorOverrideUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.InferenceAcceleratorUnmarshaller">
            <summary>
            Response Unmarshaller for InferenceAccelerator Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.InferenceAcceleratorUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#InferenceAccelerator,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.InferenceAcceleratorUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.InferenceAcceleratorUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.InvalidParameterExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidParameterException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.InvalidParameterExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.InvalidParameterExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.InvalidParameterExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.KernelCapabilitiesMarshaller">
            <summary>
            KernelCapabilities Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.KernelCapabilitiesMarshaller.Marshall(Amazon.ECS.Model.KernelCapabilities,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.KernelCapabilitiesMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.KernelCapabilitiesUnmarshaller">
            <summary>
            Response Unmarshaller for KernelCapabilities Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.KernelCapabilitiesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#KernelCapabilities,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.KernelCapabilitiesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.KernelCapabilitiesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.KeyValuePairMarshaller">
            <summary>
            KeyValuePair Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.KeyValuePairMarshaller.Marshall(Amazon.ECS.Model.KeyValuePair,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.KeyValuePairMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.KeyValuePairUnmarshaller">
            <summary>
            Response Unmarshaller for KeyValuePair Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.KeyValuePairUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#KeyValuePair,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.KeyValuePairUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.KeyValuePairUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for LimitExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.LinuxParametersMarshaller">
            <summary>
            LinuxParameters Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.LinuxParametersMarshaller.Marshall(Amazon.ECS.Model.LinuxParameters,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.LinuxParametersMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.LinuxParametersUnmarshaller">
            <summary>
            Response Unmarshaller for LinuxParameters Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.LinuxParametersUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#LinuxParameters,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.LinuxParametersUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.LinuxParametersUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ListAccountSettingsRequestMarshaller">
            <summary>
            ListAccountSettings Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListAccountSettingsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListAccountSettingsRequestMarshaller.Marshall(Amazon.ECS.Model.ListAccountSettingsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ListAccountSettingsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ListAccountSettingsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListAccountSettings operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListAccountSettingsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListAccountSettingsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ListAccountSettingsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ListAttributesRequestMarshaller">
            <summary>
            ListAttributes Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListAttributesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListAttributesRequestMarshaller.Marshall(Amazon.ECS.Model.ListAttributesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ListAttributesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ListAttributesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListAttributes operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListAttributesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListAttributesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ListAttributesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ListClustersRequestMarshaller">
            <summary>
            ListClusters Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListClustersRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListClustersRequestMarshaller.Marshall(Amazon.ECS.Model.ListClustersRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ListClustersRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ListClustersResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListClusters operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListClustersResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListClustersResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ListClustersResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ListContainerInstancesRequestMarshaller">
            <summary>
            ListContainerInstances Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListContainerInstancesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListContainerInstancesRequestMarshaller.Marshall(Amazon.ECS.Model.ListContainerInstancesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ListContainerInstancesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ListContainerInstancesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListContainerInstances operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListContainerInstancesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListContainerInstancesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ListContainerInstancesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ListServicesRequestMarshaller">
            <summary>
            ListServices Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListServicesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListServicesRequestMarshaller.Marshall(Amazon.ECS.Model.ListServicesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ListServicesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ListServicesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListServices operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListServicesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListServicesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ListServicesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller">
            <summary>
            ListTagsForResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.ECS.Model.ListTagsForResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListTagsForResource operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ListTaskDefinitionFamiliesRequestMarshaller">
            <summary>
            ListTaskDefinitionFamilies Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListTaskDefinitionFamiliesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListTaskDefinitionFamiliesRequestMarshaller.Marshall(Amazon.ECS.Model.ListTaskDefinitionFamiliesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ListTaskDefinitionFamiliesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ListTaskDefinitionFamiliesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListTaskDefinitionFamilies operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListTaskDefinitionFamiliesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListTaskDefinitionFamiliesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ListTaskDefinitionFamiliesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ListTaskDefinitionsRequestMarshaller">
            <summary>
            ListTaskDefinitions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListTaskDefinitionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListTaskDefinitionsRequestMarshaller.Marshall(Amazon.ECS.Model.ListTaskDefinitionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ListTaskDefinitionsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ListTaskDefinitionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListTaskDefinitions operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListTaskDefinitionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListTaskDefinitionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ListTaskDefinitionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ListTasksRequestMarshaller">
            <summary>
            ListTasks Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListTasksRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListTasksRequestMarshaller.Marshall(Amazon.ECS.Model.ListTasksRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ListTasksRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ListTasksResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListTasks operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListTasksResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListTasksResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ListTasksResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.LoadBalancerMarshaller">
            <summary>
            LoadBalancer Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.LoadBalancerMarshaller.Marshall(Amazon.ECS.Model.LoadBalancer,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.LoadBalancerMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.LoadBalancerUnmarshaller">
            <summary>
            Response Unmarshaller for LoadBalancer Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.LoadBalancerUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#LoadBalancer,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.LoadBalancerUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.LoadBalancerUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.LogConfigurationMarshaller">
            <summary>
            LogConfiguration Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.LogConfigurationMarshaller.Marshall(Amazon.ECS.Model.LogConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.LogConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.LogConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for LogConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.LogConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#LogConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.LogConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.LogConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ManagedAgentUnmarshaller">
            <summary>
            Response Unmarshaller for ManagedAgent Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ManagedAgentUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#ManagedAgent,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ManagedAgentUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ManagedAgentUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ManagedScalingMarshaller">
            <summary>
            ManagedScaling Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ManagedScalingMarshaller.Marshall(Amazon.ECS.Model.ManagedScaling,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.ManagedScalingMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ManagedScalingUnmarshaller">
            <summary>
            Response Unmarshaller for ManagedScaling Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ManagedScalingUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#ManagedScaling,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ManagedScalingUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ManagedScalingUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.MissingVersionExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for MissingVersionException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.MissingVersionExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.MissingVersionExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.MissingVersionExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.MountPointMarshaller">
            <summary>
            MountPoint Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.MountPointMarshaller.Marshall(Amazon.ECS.Model.MountPoint,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.MountPointMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.MountPointUnmarshaller">
            <summary>
            Response Unmarshaller for MountPoint Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.MountPointUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#MountPoint,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.MountPointUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.MountPointUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.NetworkBindingUnmarshaller">
            <summary>
            Response Unmarshaller for NetworkBinding Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.NetworkBindingUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#NetworkBinding,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.NetworkBindingUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.NetworkBindingUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.NetworkConfigurationMarshaller">
            <summary>
            NetworkConfiguration Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.NetworkConfigurationMarshaller.Marshall(Amazon.ECS.Model.NetworkConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.NetworkConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.NetworkConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for NetworkConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.NetworkConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#NetworkConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.NetworkConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.NetworkConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.NetworkInterfaceUnmarshaller">
            <summary>
            Response Unmarshaller for NetworkInterface Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.NetworkInterfaceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#NetworkInterface,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.NetworkInterfaceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.NetworkInterfaceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.NoUpdateAvailableExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for NoUpdateAvailableException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.NoUpdateAvailableExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.NoUpdateAvailableExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.NoUpdateAvailableExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.PlacementConstraintMarshaller">
            <summary>
            PlacementConstraint Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.PlacementConstraintMarshaller.Marshall(Amazon.ECS.Model.PlacementConstraint,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.PlacementConstraintMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.PlacementConstraintUnmarshaller">
            <summary>
            Response Unmarshaller for PlacementConstraint Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.PlacementConstraintUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#PlacementConstraint,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.PlacementConstraintUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.PlacementConstraintUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.PlacementStrategyMarshaller">
            <summary>
            PlacementStrategy Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.PlacementStrategyMarshaller.Marshall(Amazon.ECS.Model.PlacementStrategy,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.PlacementStrategyMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.PlacementStrategyUnmarshaller">
            <summary>
            Response Unmarshaller for PlacementStrategy Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.PlacementStrategyUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#PlacementStrategy,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.PlacementStrategyUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.PlacementStrategyUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.PlatformTaskDefinitionIncompatibilityExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for PlatformTaskDefinitionIncompatibilityException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.PlatformTaskDefinitionIncompatibilityExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.PlatformTaskDefinitionIncompatibilityExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.PlatformTaskDefinitionIncompatibilityExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.PlatformUnknownExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for PlatformUnknownException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.PlatformUnknownExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.PlatformUnknownExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.PlatformUnknownExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.PortMappingMarshaller">
            <summary>
            PortMapping Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.PortMappingMarshaller.Marshall(Amazon.ECS.Model.PortMapping,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.PortMappingMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.PortMappingUnmarshaller">
            <summary>
            Response Unmarshaller for PortMapping Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.PortMappingUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#PortMapping,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.PortMappingUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.PortMappingUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ProxyConfigurationMarshaller">
            <summary>
            ProxyConfiguration Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ProxyConfigurationMarshaller.Marshall(Amazon.ECS.Model.ProxyConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.ProxyConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ProxyConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for ProxyConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ProxyConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#ProxyConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ProxyConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ProxyConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.PutAccountSettingDefaultRequestMarshaller">
            <summary>
            PutAccountSettingDefault Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.PutAccountSettingDefaultRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.PutAccountSettingDefaultRequestMarshaller.Marshall(Amazon.ECS.Model.PutAccountSettingDefaultRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.PutAccountSettingDefaultRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.PutAccountSettingDefaultResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutAccountSettingDefault operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.PutAccountSettingDefaultResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.PutAccountSettingDefaultResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.PutAccountSettingDefaultResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.PutAccountSettingRequestMarshaller">
            <summary>
            PutAccountSetting Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.PutAccountSettingRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.PutAccountSettingRequestMarshaller.Marshall(Amazon.ECS.Model.PutAccountSettingRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.PutAccountSettingRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.PutAccountSettingResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutAccountSetting operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.PutAccountSettingResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.PutAccountSettingResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.PutAccountSettingResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.PutAttributesRequestMarshaller">
            <summary>
            PutAttributes Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.PutAttributesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.PutAttributesRequestMarshaller.Marshall(Amazon.ECS.Model.PutAttributesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.PutAttributesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.PutAttributesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutAttributes operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.PutAttributesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.PutAttributesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.PutAttributesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.PutClusterCapacityProvidersRequestMarshaller">
            <summary>
            PutClusterCapacityProviders Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.PutClusterCapacityProvidersRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.PutClusterCapacityProvidersRequestMarshaller.Marshall(Amazon.ECS.Model.PutClusterCapacityProvidersRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.PutClusterCapacityProvidersRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.PutClusterCapacityProvidersResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutClusterCapacityProviders operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.PutClusterCapacityProvidersResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.PutClusterCapacityProvidersResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.PutClusterCapacityProvidersResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.RegisterTaskDefinitionRequestMarshaller">
            <summary>
            RegisterTaskDefinition Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.RegisterTaskDefinitionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.RegisterTaskDefinitionRequestMarshaller.Marshall(Amazon.ECS.Model.RegisterTaskDefinitionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.RegisterTaskDefinitionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.RegisterTaskDefinitionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RegisterTaskDefinition operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.RegisterTaskDefinitionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.RegisterTaskDefinitionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.RegisterTaskDefinitionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.RepositoryCredentialsMarshaller">
            <summary>
            RepositoryCredentials Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.RepositoryCredentialsMarshaller.Marshall(Amazon.ECS.Model.RepositoryCredentials,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.RepositoryCredentialsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.RepositoryCredentialsUnmarshaller">
            <summary>
            Response Unmarshaller for RepositoryCredentials Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.RepositoryCredentialsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#RepositoryCredentials,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.RepositoryCredentialsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.RepositoryCredentialsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ResourceInUseExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceInUseException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ResourceInUseExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ResourceInUseExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ResourceInUseExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ResourceRequirementMarshaller">
            <summary>
            ResourceRequirement Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ResourceRequirementMarshaller.Marshall(Amazon.ECS.Model.ResourceRequirement,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.ResourceRequirementMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ResourceRequirementUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceRequirement Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ResourceRequirementUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#ResourceRequirement,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ResourceRequirementUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ResourceRequirementUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ResourceUnmarshaller">
            <summary>
            Response Unmarshaller for Resource Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ResourceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#Resource,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ResourceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ResourceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.RunTaskRequestMarshaller">
            <summary>
            RunTask Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.RunTaskRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.RunTaskRequestMarshaller.Marshall(Amazon.ECS.Model.RunTaskRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.RunTaskRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.RunTaskResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RunTask operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.RunTaskResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.RunTaskResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.RunTaskResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ScaleMarshaller">
            <summary>
            Scale Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ScaleMarshaller.Marshall(Amazon.ECS.Model.Scale,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.ScaleMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ScaleUnmarshaller">
            <summary>
            Response Unmarshaller for Scale Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ScaleUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#Scale,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ScaleUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ScaleUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.SecretMarshaller">
            <summary>
            Secret Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.SecretMarshaller.Marshall(Amazon.ECS.Model.Secret,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.SecretMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.SecretUnmarshaller">
            <summary>
            Response Unmarshaller for Secret Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.SecretUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#Secret,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.SecretUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.SecretUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ServerExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ServerException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ServerExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ServerExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ServerExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceEventUnmarshaller">
            <summary>
            Response Unmarshaller for ServiceEvent Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceEventUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#ServiceEvent,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceEventUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceEventUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceNotActiveExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ServiceNotActiveException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceNotActiveExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceNotActiveExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceNotActiveExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ServiceNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceRegistryMarshaller">
            <summary>
            ServiceRegistry Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceRegistryMarshaller.Marshall(Amazon.ECS.Model.ServiceRegistry,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceRegistryMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceRegistryUnmarshaller">
            <summary>
            Response Unmarshaller for ServiceRegistry Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceRegistryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#ServiceRegistry,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceRegistryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceRegistryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceUnmarshaller">
            <summary>
            Response Unmarshaller for Service Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#Service,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.SessionUnmarshaller">
            <summary>
            Response Unmarshaller for Session Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.SessionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#Session,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.SessionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.SessionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.SettingUnmarshaller">
            <summary>
            Response Unmarshaller for Setting Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.SettingUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#Setting,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.SettingUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.SettingUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.StartTaskRequestMarshaller">
            <summary>
            StartTask Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.StartTaskRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.StartTaskRequestMarshaller.Marshall(Amazon.ECS.Model.StartTaskRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.StartTaskRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.StartTaskResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StartTask operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.StartTaskResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.StartTaskResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.StartTaskResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.StopTaskRequestMarshaller">
            <summary>
            StopTask Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.StopTaskRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.StopTaskRequestMarshaller.Marshall(Amazon.ECS.Model.StopTaskRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.StopTaskRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.StopTaskResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StopTask operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.StopTaskResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.StopTaskResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.StopTaskResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.SubmitAttachmentStateChangesRequestMarshaller">
            <summary>
            SubmitAttachmentStateChanges Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.SubmitAttachmentStateChangesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.SubmitAttachmentStateChangesRequestMarshaller.Marshall(Amazon.ECS.Model.SubmitAttachmentStateChangesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.SubmitAttachmentStateChangesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.SubmitAttachmentStateChangesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for SubmitAttachmentStateChanges operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.SubmitAttachmentStateChangesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.SubmitAttachmentStateChangesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.SubmitAttachmentStateChangesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.SystemControlMarshaller">
            <summary>
            SystemControl Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.SystemControlMarshaller.Marshall(Amazon.ECS.Model.SystemControl,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.SystemControlMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.SystemControlUnmarshaller">
            <summary>
            Response Unmarshaller for SystemControl Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.SystemControlUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#SystemControl,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.SystemControlUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.SystemControlUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.TagMarshaller">
            <summary>
            Tag Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TagMarshaller.Marshall(Amazon.ECS.Model.Tag,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.TagMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller">
            <summary>
            TagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.ECS.Model.TagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for TagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.TagUnmarshaller">
            <summary>
            Response Unmarshaller for Tag Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TagUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#Tag,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TagUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.TagUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.TargetNotConnectedExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for TargetNotConnectedException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TargetNotConnectedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TargetNotConnectedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.TargetNotConnectedExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.TargetNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for TargetNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TargetNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TargetNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.TargetNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.TaskDefinitionPlacementConstraintMarshaller">
            <summary>
            TaskDefinitionPlacementConstraint Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TaskDefinitionPlacementConstraintMarshaller.Marshall(Amazon.ECS.Model.TaskDefinitionPlacementConstraint,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.TaskDefinitionPlacementConstraintMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.TaskDefinitionPlacementConstraintUnmarshaller">
            <summary>
            Response Unmarshaller for TaskDefinitionPlacementConstraint Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TaskDefinitionPlacementConstraintUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#TaskDefinitionPlacementConstraint,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TaskDefinitionPlacementConstraintUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.TaskDefinitionPlacementConstraintUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.TaskDefinitionUnmarshaller">
            <summary>
            Response Unmarshaller for TaskDefinition Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TaskDefinitionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#TaskDefinition,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TaskDefinitionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.TaskDefinitionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.TaskOverrideMarshaller">
            <summary>
            TaskOverride Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TaskOverrideMarshaller.Marshall(Amazon.ECS.Model.TaskOverride,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.TaskOverrideMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.TaskOverrideUnmarshaller">
            <summary>
            Response Unmarshaller for TaskOverride Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TaskOverrideUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#TaskOverride,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TaskOverrideUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.TaskOverrideUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.TaskSetNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for TaskSetNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TaskSetNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TaskSetNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.TaskSetNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.TaskSetUnmarshaller">
            <summary>
            Response Unmarshaller for TaskSet Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TaskSetUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#TaskSet,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TaskSetUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.TaskSetUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.TaskUnmarshaller">
            <summary>
            Response Unmarshaller for Task Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TaskUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#Task,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TaskUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.TaskUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.TmpfsMarshaller">
            <summary>
            Tmpfs Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TmpfsMarshaller.Marshall(Amazon.ECS.Model.Tmpfs,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.TmpfsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.TmpfsUnmarshaller">
            <summary>
            Response Unmarshaller for Tmpfs Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TmpfsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#Tmpfs,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TmpfsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.TmpfsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.UlimitMarshaller">
            <summary>
            Ulimit Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UlimitMarshaller.Marshall(Amazon.ECS.Model.Ulimit,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.UlimitMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.UlimitUnmarshaller">
            <summary>
            Response Unmarshaller for Ulimit Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UlimitUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#Ulimit,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UlimitUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.UlimitUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.UnsupportedFeatureExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for UnsupportedFeatureException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UnsupportedFeatureExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UnsupportedFeatureExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.UnsupportedFeatureExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller">
            <summary>
            UntagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.ECS.Model.UntagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UntagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateCapacityProviderRequestMarshaller">
            <summary>
            UpdateCapacityProvider Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateCapacityProviderRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateCapacityProviderRequestMarshaller.Marshall(Amazon.ECS.Model.UpdateCapacityProviderRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateCapacityProviderRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateCapacityProviderResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateCapacityProvider operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateCapacityProviderResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateCapacityProviderResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateCapacityProviderResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateClusterRequestMarshaller">
            <summary>
            UpdateCluster Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateClusterRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateClusterRequestMarshaller.Marshall(Amazon.ECS.Model.UpdateClusterRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateClusterRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateClusterResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateCluster operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateClusterResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateClusterResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateClusterResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateClusterSettingsRequestMarshaller">
            <summary>
            UpdateClusterSettings Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateClusterSettingsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateClusterSettingsRequestMarshaller.Marshall(Amazon.ECS.Model.UpdateClusterSettingsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateClusterSettingsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateClusterSettingsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateClusterSettings operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateClusterSettingsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateClusterSettingsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateClusterSettingsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateContainerAgentRequestMarshaller">
            <summary>
            UpdateContainerAgent Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateContainerAgentRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateContainerAgentRequestMarshaller.Marshall(Amazon.ECS.Model.UpdateContainerAgentRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateContainerAgentRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateContainerAgentResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateContainerAgent operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateContainerAgentResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateContainerAgentResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateContainerAgentResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateContainerInstancesStateRequestMarshaller">
            <summary>
            UpdateContainerInstancesState Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateContainerInstancesStateRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateContainerInstancesStateRequestMarshaller.Marshall(Amazon.ECS.Model.UpdateContainerInstancesStateRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateContainerInstancesStateRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateContainerInstancesStateResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateContainerInstancesState operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateContainerInstancesStateResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateContainerInstancesStateResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateContainerInstancesStateResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateInProgressExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateInProgressException Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateInProgressExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateInProgressExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateInProgressExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateServicePrimaryTaskSetRequestMarshaller">
            <summary>
            UpdateServicePrimaryTaskSet Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateServicePrimaryTaskSetRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateServicePrimaryTaskSetRequestMarshaller.Marshall(Amazon.ECS.Model.UpdateServicePrimaryTaskSetRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateServicePrimaryTaskSetRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateServicePrimaryTaskSetResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateServicePrimaryTaskSet operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateServicePrimaryTaskSetResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateServicePrimaryTaskSetResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateServicePrimaryTaskSetResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateServiceRequestMarshaller">
            <summary>
            UpdateService Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateServiceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateServiceRequestMarshaller.Marshall(Amazon.ECS.Model.UpdateServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateServiceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateServiceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateService operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateServiceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateServiceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateServiceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateTaskSetRequestMarshaller">
            <summary>
            UpdateTaskSet Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateTaskSetRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateTaskSetRequestMarshaller.Marshall(Amazon.ECS.Model.UpdateTaskSetRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateTaskSetRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateTaskSetResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateTaskSet operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateTaskSetResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateTaskSetResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateTaskSetResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.VersionInfoUnmarshaller">
            <summary>
            Response Unmarshaller for VersionInfo Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.VersionInfoUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#VersionInfo,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.VersionInfoUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.VersionInfoUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.VolumeFromMarshaller">
            <summary>
            VolumeFrom Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.VolumeFromMarshaller.Marshall(Amazon.ECS.Model.VolumeFrom,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.VolumeFromMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.VolumeFromUnmarshaller">
            <summary>
            Response Unmarshaller for VolumeFrom Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.VolumeFromUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#VolumeFrom,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.VolumeFromUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.VolumeFromUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.VolumeMarshaller">
            <summary>
            Volume Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.VolumeMarshaller.Marshall(Amazon.ECS.Model.Volume,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.VolumeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.VolumeUnmarshaller">
            <summary>
            Response Unmarshaller for Volume Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.VolumeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#Volume,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.VolumeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.VolumeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.InvalidParameterException">
            <summary>
            The specified parameter is invalid. Review the available parameters for the API request.
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.InvalidParameterException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidParameterException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECS.Model.InvalidParameterException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.InvalidParameterException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.InvalidParameterException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.InvalidParameterException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.InvalidParameterException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidParameterException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.ECS.Model.InvalidParameterException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.ECS.Model.KernelCapabilities">
            <summary>
            The Linux capabilities for the container that are added to or dropped from the default
            configuration provided by Docker. For more information on the default capabilities
            and the non-default available capabilities, see <a href="https://docs.docker.com/engine/reference/run/#runtime-privilege-and-linux-capabilities">Runtime
            privilege and Linux capabilities</a> in the <i>Docker run reference</i>. For more
            detailed information on these Linux capabilities, see the <a href="http://man7.org/linux/man-pages/man7/capabilities.7.html">capabilities(7)</a>
            Linux manual page.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.KernelCapabilities.Add">
            <summary>
            Gets and sets the property Add. 
            <para>
            The Linux capabilities for the container that have been added to the default configuration
            provided by Docker. This parameter maps to <code>CapAdd</code> in the <a href="https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.35/">Docker
            Remote API</a> and the <code>--cap-add</code> option to <a href="https://docs.docker.com/engine/reference/run/#security-configuration">docker
            run</a>.
            </para>
             <note> 
            <para>
            Tasks launched on Fargate only support adding the <code>SYS_PTRACE</code> kernel capability.
            </para>
             </note> 
            <para>
            Valid values: <code>"ALL" | "AUDIT_CONTROL" | "AUDIT_WRITE" | "BLOCK_SUSPEND" | "CHOWN"
            | "DAC_OVERRIDE" | "DAC_READ_SEARCH" | "FOWNER" | "FSETID" | "IPC_LOCK" | "IPC_OWNER"
            | "KILL" | "LEASE" | "LINUX_IMMUTABLE" | "MAC_ADMIN" | "MAC_OVERRIDE" | "MKNOD" |
            "NET_ADMIN" | "NET_BIND_SERVICE" | "NET_BROADCAST" | "NET_RAW" | "SETFCAP" | "SETGID"
            | "SETPCAP" | "SETUID" | "SYS_ADMIN" | "SYS_BOOT" | "SYS_CHROOT" | "SYS_MODULE" |
            "SYS_NICE" | "SYS_PACCT" | "SYS_PTRACE" | "SYS_RAWIO" | "SYS_RESOURCE" | "SYS_TIME"
            | "SYS_TTY_CONFIG" | "SYSLOG" | "WAKE_ALARM"</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.KernelCapabilities.Drop">
            <summary>
            Gets and sets the property Drop. 
            <para>
            The Linux capabilities for the container that have been removed from the default configuration
            provided by Docker. This parameter maps to <code>CapDrop</code> in the <a href="https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.35/">Docker
            Remote API</a> and the <code>--cap-drop</code> option to <a href="https://docs.docker.com/engine/reference/run/#security-configuration">docker
            run</a>.
            </para>
             
            <para>
            Valid values: <code>"ALL" | "AUDIT_CONTROL" | "AUDIT_WRITE" | "BLOCK_SUSPEND" | "CHOWN"
            | "DAC_OVERRIDE" | "DAC_READ_SEARCH" | "FOWNER" | "FSETID" | "IPC_LOCK" | "IPC_OWNER"
            | "KILL" | "LEASE" | "LINUX_IMMUTABLE" | "MAC_ADMIN" | "MAC_OVERRIDE" | "MKNOD" |
            "NET_ADMIN" | "NET_BIND_SERVICE" | "NET_BROADCAST" | "NET_RAW" | "SETFCAP" | "SETGID"
            | "SETPCAP" | "SETUID" | "SYS_ADMIN" | "SYS_BOOT" | "SYS_CHROOT" | "SYS_MODULE" |
            "SYS_NICE" | "SYS_PACCT" | "SYS_PTRACE" | "SYS_RAWIO" | "SYS_RESOURCE" | "SYS_TIME"
            | "SYS_TTY_CONFIG" | "SYSLOG" | "WAKE_ALARM"</code> 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.KeyValuePair">
            <summary>
            A key-value pair object.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.KeyValuePair.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the key-value pair. For environment variables, this is the name of the
            environment variable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.KeyValuePair.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The value of the key-value pair. For environment variables, this is the value of the
            environment variable.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.LimitExceededException">
            <summary>
            The limit for the resource has been exceeded.
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.LimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new LimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECS.Model.LimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.LimitExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.LimitExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.LimitExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.LimitExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the LimitExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.ECS.Model.LimitExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.ECS.Model.LinuxParameters">
            <summary>
            Linux-specific options that are applied to the container, such as Linux <a>KernelCapabilities</a>.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.LinuxParameters.Capabilities">
            <summary>
            Gets and sets the property Capabilities. 
            <para>
            The Linux capabilities for the container that are added to or dropped from the default
            configuration provided by Docker.
            </para>
             <note> 
            <para>
            For tasks that use the Fargate launch type, <code>capabilities</code> is supported
            for all platform versions but the <code>add</code> parameter is only supported if
            using platform version 1.4.0 or later.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.LinuxParameters.Devices">
            <summary>
            Gets and sets the property Devices. 
            <para>
            Any host devices to expose to the container. This parameter maps to <code>Devices</code>
            in the <a href="https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.35/">Docker
            Remote API</a> and the <code>--device</code> option to <a href="https://docs.docker.com/engine/reference/run/#security-configuration">docker
            run</a>.
            </para>
             <note> 
            <para>
            If you are using tasks that use the Fargate launch type, the <code>devices</code>
            parameter is not supported.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.LinuxParameters.InitProcessEnabled">
            <summary>
            Gets and sets the property InitProcessEnabled. 
            <para>
            Run an <code>init</code> process inside the container that forwards signals and reaps
            processes. This parameter maps to the <code>--init</code> option to <a href="https://docs.docker.com/engine/reference/run/#security-configuration">docker
            run</a>. This parameter requires version 1.25 of the Docker Remote API or greater
            on your container instance. To check the Docker Remote API version on your container
            instance, log in to your container instance and run the following command: <code>sudo
            docker version --format '{{.Server.APIVersion}}'</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.LinuxParameters.MaxSwap">
            <summary>
            Gets and sets the property MaxSwap. 
            <para>
            The total amount of swap memory (in MiB) a container can use. This parameter will
            be translated to the <code>--memory-swap</code> option to <a href="https://docs.docker.com/engine/reference/run/#security-configuration">docker
            run</a> where the value would be the sum of the container memory plus the <code>maxSwap</code>
            value.
            </para>
             
            <para>
            If a <code>maxSwap</code> value of <code>0</code> is specified, the container will
            not use swap. Accepted values are <code>0</code> or any positive integer. If the <code>maxSwap</code>
            parameter is omitted, the container will use the swap configuration for the container
            instance it is running on. A <code>maxSwap</code> value must be set for the <code>swappiness</code>
            parameter to be used.
            </para>
             <note> 
            <para>
            If you are using tasks that use the Fargate launch type, the <code>maxSwap</code>
            parameter is not supported.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.LinuxParameters.SharedMemorySize">
            <summary>
            Gets and sets the property SharedMemorySize. 
            <para>
            The value for the size (in MiB) of the <code>/dev/shm</code> volume. This parameter
            maps to the <code>--shm-size</code> option to <a href="https://docs.docker.com/engine/reference/run/#security-configuration">docker
            run</a>.
            </para>
             <note> 
            <para>
            If you are using tasks that use the Fargate launch type, the <code>sharedMemorySize</code>
            parameter is not supported.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.LinuxParameters.Swappiness">
            <summary>
            Gets and sets the property Swappiness. 
            <para>
            This allows you to tune a container's memory swappiness behavior. A <code>swappiness</code>
            value of <code>0</code> will cause swapping to not happen unless absolutely necessary.
            A <code>swappiness</code> value of <code>100</code> will cause pages to be swapped
            very aggressively. Accepted values are whole numbers between <code>0</code> and <code>100</code>.
            If the <code>swappiness</code> parameter is not specified, a default value of <code>60</code>
            is used. If a value is not specified for <code>maxSwap</code> then this parameter
            is ignored. This parameter maps to the <code>--memory-swappiness</code> option to
            <a href="https://docs.docker.com/engine/reference/run/#security-configuration">docker
            run</a>.
            </para>
             <note> 
            <para>
            If you are using tasks that use the Fargate launch type, the <code>swappiness</code>
            parameter is not supported.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.LinuxParameters.Tmpfs">
            <summary>
            Gets and sets the property Tmpfs. 
            <para>
            The container path, mount options, and size (in MiB) of the tmpfs mount. This parameter
            maps to the <code>--tmpfs</code> option to <a href="https://docs.docker.com/engine/reference/run/#security-configuration">docker
            run</a>.
            </para>
             <note> 
            <para>
            If you are using tasks that use the Fargate launch type, the <code>tmpfs</code> parameter
            is not supported.
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ListAccountSettingsRequest">
            <summary>
            Container for the parameters to the ListAccountSettings operation.
            Lists the account settings for a specified principal.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListAccountSettingsRequest.EffectiveSettings">
            <summary>
            Gets and sets the property EffectiveSettings. 
            <para>
            Specifies whether to return the effective settings. If <code>true</code>, the account
            settings for the root user or the default setting for the <code>principalArn</code>
            are returned. If <code>false</code>, the account settings for the <code>principalArn</code>
            are returned if they are set. Otherwise, no account settings are returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListAccountSettingsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of account setting results returned by <code>ListAccountSettings</code>
            in paginated output. When this parameter is used, <code>ListAccountSettings</code>
            only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code>
            response element. The remaining results of the initial request can be seen by sending
            another <code>ListAccountSettings</code> request with the returned <code>nextToken</code>
            value. This value can be between 1 and 10. If this parameter is not used, then <code>ListAccountSettings</code>
            returns up to 10 results and a <code>nextToken</code> value if applicable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListAccountSettingsRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the account setting you want to list the settings for.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListAccountSettingsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>nextToken</code> value returned from a <code>ListAccountSettings</code>
            request indicating that more results are available to fulfill the request and further
            calls will be needed. If <code>maxResults</code> was provided, it is possible the
            number of results to be fewer than <code>maxResults</code>.
            </para>
             <note> 
            <para>
            This token should be treated as an opaque identifier that is only used to retrieve
            the next items in a list and not for other programmatic purposes.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListAccountSettingsRequest.PrincipalArn">
            <summary>
            Gets and sets the property PrincipalArn. 
            <para>
            The ARN of the principal, which can be an IAM user, IAM role, or the root user. If
            this field is omitted, the account settings are listed only for the authenticated
            user.
            </para>
             <note> 
            <para>
            Federated users assume the account setting of the root user and can't have explicit
            account settings set for them.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListAccountSettingsRequest.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The value of the account settings with which to filter results. You must also specify
            an account setting name to use this parameter.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ListAccountSettingsResponse">
            <summary>
            This is the response object from the ListAccountSettings operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListAccountSettingsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>nextToken</code> value to include in a future <code>ListAccountSettings</code>
            request. When the results of a <code>ListAccountSettings</code> request exceed <code>maxResults</code>,
            this value can be used to retrieve the next page of results. This value is <code>null</code>
            when there are no more results to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListAccountSettingsResponse.Settings">
            <summary>
            Gets and sets the property Settings. 
            <para>
            The account settings for the resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ListAttributesRequest">
            <summary>
            Container for the parameters to the ListAttributes operation.
            Lists the attributes for Amazon ECS resources within a specified target type and cluster.
            When you specify a target type and cluster, <code>ListAttributes</code> returns a
            list of attribute objects, one for each attribute on each resource. You can filter
            the list of results to a single attribute name to only return results that have that
            name. You can also filter the results by attribute name and value, for example, to
            see which container instances in a cluster are running a Linux AMI (<code>ecs.os-type=linux</code>).
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListAttributesRequest.AttributeName">
            <summary>
            Gets and sets the property AttributeName. 
            <para>
            The name of the attribute with which to filter the results. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListAttributesRequest.AttributeValue">
            <summary>
            Gets and sets the property AttributeValue. 
            <para>
            The value of the attribute with which to filter results. You must also specify an
            attribute name to use this parameter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListAttributesRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the cluster to list attributes.
            If you do not specify a cluster, the default cluster is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListAttributesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of cluster results returned by <code>ListAttributes</code> in paginated
            output. When this parameter is used, <code>ListAttributes</code> only returns <code>maxResults</code>
            results in a single page along with a <code>nextToken</code> response element. The
            remaining results of the initial request can be seen by sending another <code>ListAttributes</code>
            request with the returned <code>nextToken</code> value. This value can be between
            1 and 100. If this parameter is not used, then <code>ListAttributes</code> returns
            up to 100 results and a <code>nextToken</code> value if applicable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListAttributesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>nextToken</code> value returned from a <code>ListAttributes</code> request
            indicating that more results are available to fulfill the request and further calls
            will be needed. If <code>maxResults</code> was provided, it is possible the number
            of results to be fewer than <code>maxResults</code>.
            </para>
             <note> 
            <para>
            This token should be treated as an opaque identifier that is only used to retrieve
            the next items in a list and not for other programmatic purposes.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListAttributesRequest.TargetType">
            <summary>
            Gets and sets the property TargetType. 
            <para>
            The type of the target with which to list attributes.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ListAttributesResponse">
            <summary>
            This is the response object from the ListAttributes operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListAttributesResponse.Attributes">
            <summary>
            Gets and sets the property Attributes. 
            <para>
            A list of attribute objects that meet the criteria of the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListAttributesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>nextToken</code> value to include in a future <code>ListAttributes</code>
            request. When the results of a <code>ListAttributes</code> request exceed <code>maxResults</code>,
            this value can be used to retrieve the next page of results. This value is <code>null</code>
            when there are no more results to return.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ListClustersRequest">
            <summary>
            Container for the parameters to the ListClusters operation.
            Returns a list of existing clusters.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListClustersRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of cluster results returned by <code>ListClusters</code> in paginated
            output. When this parameter is used, <code>ListClusters</code> only returns <code>maxResults</code>
            results in a single page along with a <code>nextToken</code> response element. The
            remaining results of the initial request can be seen by sending another <code>ListClusters</code>
            request with the returned <code>nextToken</code> value. This value can be between
            1 and 100. If this parameter is not used, then <code>ListClusters</code> returns up
            to 100 results and a <code>nextToken</code> value if applicable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListClustersRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>nextToken</code> value returned from a <code>ListClusters</code> request
            indicating that more results are available to fulfill the request and further calls
            will be needed. If <code>maxResults</code> was provided, it is possible the number
            of results to be fewer than <code>maxResults</code>.
            </para>
             <note> 
            <para>
            This token should be treated as an opaque identifier that is only used to retrieve
            the next items in a list and not for other programmatic purposes.
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ListClustersResponse">
            <summary>
            This is the response object from the ListClusters operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListClustersResponse.ClusterArns">
            <summary>
            Gets and sets the property ClusterArns. 
            <para>
            The list of full Amazon Resource Name (ARN) entries for each cluster associated with
            your account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListClustersResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>nextToken</code> value to include in a future <code>ListClusters</code>
            request. When the results of a <code>ListClusters</code> request exceed <code>maxResults</code>,
            this value can be used to retrieve the next page of results. This value is <code>null</code>
            when there are no more results to return.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ListContainerInstancesRequest">
            <summary>
            Container for the parameters to the ListContainerInstances operation.
            Returns a list of container instances in a specified cluster. You can filter the results
            of a <code>ListContainerInstances</code> operation with cluster query language statements
            inside the <code>filter</code> parameter. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cluster-query-language.html">Cluster
            Query Language</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListContainerInstancesRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the cluster that hosts the container
            instances to list. If you do not specify a cluster, the default cluster is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListContainerInstancesRequest.Filter">
            <summary>
            Gets and sets the property Filter. 
            <para>
            You can filter the results of a <code>ListContainerInstances</code> operation with
            cluster query language statements. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cluster-query-language.html">Cluster
            Query Language</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListContainerInstancesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of container instance results returned by <code>ListContainerInstances</code>
            in paginated output. When this parameter is used, <code>ListContainerInstances</code>
            only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code>
            response element. The remaining results of the initial request can be seen by sending
            another <code>ListContainerInstances</code> request with the returned <code>nextToken</code>
            value. This value can be between 1 and 100. If this parameter is not used, then <code>ListContainerInstances</code>
            returns up to 100 results and a <code>nextToken</code> value if applicable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListContainerInstancesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>nextToken</code> value returned from a <code>ListContainerInstances</code>
            request indicating that more results are available to fulfill the request and further
            calls will be needed. If <code>maxResults</code> was provided, it is possible the
            number of results to be fewer than <code>maxResults</code>.
            </para>
             <note> 
            <para>
            This token should be treated as an opaque identifier that is only used to retrieve
            the next items in a list and not for other programmatic purposes.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListContainerInstancesRequest.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Filters the container instances by status. For example, if you specify the <code>DRAINING</code>
            status, the results include only container instances that have been set to <code>DRAINING</code>
            using <a>UpdateContainerInstancesState</a>. If you do not specify this parameter,
            the default is to include container instances set to all states other than <code>INACTIVE</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ListContainerInstancesResponse">
            <summary>
            This is the response object from the ListContainerInstances operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListContainerInstancesResponse.ContainerInstanceArns">
            <summary>
            Gets and sets the property ContainerInstanceArns. 
            <para>
            The list of container instances with full ARN entries for each container instance
            associated with the specified cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListContainerInstancesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>nextToken</code> value to include in a future <code>ListContainerInstances</code>
            request. When the results of a <code>ListContainerInstances</code> request exceed
            <code>maxResults</code>, this value can be used to retrieve the next page of results.
            This value is <code>null</code> when there are no more results to return.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ListServicesRequest">
            <summary>
            Container for the parameters to the ListServices operation.
            Returns a list of services. You can filter the results by cluster, launch type, and
            scheduling strategy.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListServicesRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the cluster to use when filtering
            the <code>ListServices</code> results. If you do not specify a cluster, the default
            cluster is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListServicesRequest.LaunchType">
            <summary>
            Gets and sets the property LaunchType. 
            <para>
            The launch type to use when filtering the <code>ListServices</code> results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListServicesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of service results returned by <code>ListServices</code> in paginated
            output. When this parameter is used, <code>ListServices</code> only returns <code>maxResults</code>
            results in a single page along with a <code>nextToken</code> response element. The
            remaining results of the initial request can be seen by sending another <code>ListServices</code>
            request with the returned <code>nextToken</code> value. This value can be between
            1 and 100. If this parameter is not used, then <code>ListServices</code> returns up
            to 10 results and a <code>nextToken</code> value if applicable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListServicesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>nextToken</code> value returned from a <code>ListServices</code> request
            indicating that more results are available to fulfill the request and further calls
            will be needed. If <code>maxResults</code> was provided, it is possible the number
            of results to be fewer than <code>maxResults</code>.
            </para>
             <note> 
            <para>
            This token should be treated as an opaque identifier that is only used to retrieve
            the next items in a list and not for other programmatic purposes.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListServicesRequest.SchedulingStrategy">
            <summary>
            Gets and sets the property SchedulingStrategy. 
            <para>
            The scheduling strategy to use when filtering the <code>ListServices</code> results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ListServicesResponse">
            <summary>
            This is the response object from the ListServices operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListServicesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>nextToken</code> value to include in a future <code>ListServices</code>
            request. When the results of a <code>ListServices</code> request exceed <code>maxResults</code>,
            this value can be used to retrieve the next page of results. This value is <code>null</code>
            when there are no more results to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListServicesResponse.ServiceArns">
            <summary>
            Gets and sets the property ServiceArns. 
            <para>
            The list of full ARN entries for each service associated with the specified cluster.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ListTagsForResourceRequest">
            <summary>
            Container for the parameters to the ListTagsForResource operation.
            List the tags for an Amazon ECS resource.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTagsForResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The Amazon Resource Name (ARN) that identifies the resource for which to list the
            tags. Currently, the supported resources are Amazon ECS tasks, services, task definitions,
            clusters, and container instances.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ListTagsForResourceResponse">
            <summary>
            This is the response object from the ListTagsForResource operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTagsForResourceResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags for the resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ListTaskDefinitionFamiliesRequest">
            <summary>
            Container for the parameters to the ListTaskDefinitionFamilies operation.
            Returns a list of task definition families that are registered to your account (which
            may include task definition families that no longer have any <code>ACTIVE</code> task
            definition revisions).
            
             
            <para>
            You can filter out task definition families that do not contain any <code>ACTIVE</code>
            task definition revisions by setting the <code>status</code> parameter to <code>ACTIVE</code>.
            You can also filter the results with the <code>familyPrefix</code> parameter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTaskDefinitionFamiliesRequest.FamilyPrefix">
            <summary>
            Gets and sets the property FamilyPrefix. 
            <para>
            The <code>familyPrefix</code> is a string that is used to filter the results of <code>ListTaskDefinitionFamilies</code>.
            If you specify a <code>familyPrefix</code>, only task definition family names that
            begin with the <code>familyPrefix</code> string are returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTaskDefinitionFamiliesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of task definition family results returned by <code>ListTaskDefinitionFamilies</code>
            in paginated output. When this parameter is used, <code>ListTaskDefinitions</code>
            only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code>
            response element. The remaining results of the initial request can be seen by sending
            another <code>ListTaskDefinitionFamilies</code> request with the returned <code>nextToken</code>
            value. This value can be between 1 and 100. If this parameter is not used, then <code>ListTaskDefinitionFamilies</code>
            returns up to 100 results and a <code>nextToken</code> value if applicable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTaskDefinitionFamiliesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>nextToken</code> value returned from a <code>ListTaskDefinitionFamilies</code>
            request indicating that more results are available to fulfill the request and further
            calls will be needed. If <code>maxResults</code> was provided, it is possible the
            number of results to be fewer than <code>maxResults</code>.
            </para>
             <note> 
            <para>
            This token should be treated as an opaque identifier that is only used to retrieve
            the next items in a list and not for other programmatic purposes.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTaskDefinitionFamiliesRequest.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The task definition family status with which to filter the <code>ListTaskDefinitionFamilies</code>
            results. By default, both <code>ACTIVE</code> and <code>INACTIVE</code> task definition
            families are listed. If this parameter is set to <code>ACTIVE</code>, only task definition
            families that have an <code>ACTIVE</code> task definition revision are returned. If
            this parameter is set to <code>INACTIVE</code>, only task definition families that
            do not have any <code>ACTIVE</code> task definition revisions are returned. If you
            paginate the resulting output, be sure to keep the <code>status</code> value constant
            in each subsequent request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ListTaskDefinitionFamiliesResponse">
            <summary>
            This is the response object from the ListTaskDefinitionFamilies operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTaskDefinitionFamiliesResponse.Families">
            <summary>
            Gets and sets the property Families. 
            <para>
            The list of task definition family names that match the <code>ListTaskDefinitionFamilies</code>
            request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTaskDefinitionFamiliesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>nextToken</code> value to include in a future <code>ListTaskDefinitionFamilies</code>
            request. When the results of a <code>ListTaskDefinitionFamilies</code> request exceed
            <code>maxResults</code>, this value can be used to retrieve the next page of results.
            This value is <code>null</code> when there are no more results to return.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ListTaskDefinitionsRequest">
            <summary>
            Container for the parameters to the ListTaskDefinitions operation.
            Returns a list of task definitions that are registered to your account. You can filter
            the results by family name with the <code>familyPrefix</code> parameter or by status
            with the <code>status</code> parameter.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTaskDefinitionsRequest.FamilyPrefix">
            <summary>
            Gets and sets the property FamilyPrefix. 
            <para>
            The full family name with which to filter the <code>ListTaskDefinitions</code> results.
            Specifying a <code>familyPrefix</code> limits the listed task definitions to task
            definition revisions that belong to that family.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTaskDefinitionsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of task definition results returned by <code>ListTaskDefinitions</code>
            in paginated output. When this parameter is used, <code>ListTaskDefinitions</code>
            only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code>
            response element. The remaining results of the initial request can be seen by sending
            another <code>ListTaskDefinitions</code> request with the returned <code>nextToken</code>
            value. This value can be between 1 and 100. If this parameter is not used, then <code>ListTaskDefinitions</code>
            returns up to 100 results and a <code>nextToken</code> value if applicable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTaskDefinitionsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>nextToken</code> value returned from a <code>ListTaskDefinitions</code>
            request indicating that more results are available to fulfill the request and further
            calls will be needed. If <code>maxResults</code> was provided, it is possible the
            number of results to be fewer than <code>maxResults</code>.
            </para>
             <note> 
            <para>
            This token should be treated as an opaque identifier that is only used to retrieve
            the next items in a list and not for other programmatic purposes.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTaskDefinitionsRequest.Sort">
            <summary>
            Gets and sets the property Sort. 
            <para>
            The order in which to sort the results. Valid values are <code>ASC</code> and <code>DESC</code>.
            By default (<code>ASC</code>), task definitions are listed lexicographically by family
            name and in ascending numerical order by revision so that the newest task definitions
            in a family are listed last. Setting this parameter to <code>DESC</code> reverses
            the sort order on family name and revision so that the newest task definitions in
            a family are listed first.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTaskDefinitionsRequest.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The task definition status with which to filter the <code>ListTaskDefinitions</code>
            results. By default, only <code>ACTIVE</code> task definitions are listed. By setting
            this parameter to <code>INACTIVE</code>, you can view task definitions that are <code>INACTIVE</code>
            as long as an active task or service still references them. If you paginate the resulting
            output, be sure to keep the <code>status</code> value constant in each subsequent
            request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ListTaskDefinitionsResponse">
            <summary>
            This is the response object from the ListTaskDefinitions operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTaskDefinitionsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>nextToken</code> value to include in a future <code>ListTaskDefinitions</code>
            request. When the results of a <code>ListTaskDefinitions</code> request exceed <code>maxResults</code>,
            this value can be used to retrieve the next page of results. This value is <code>null</code>
            when there are no more results to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTaskDefinitionsResponse.TaskDefinitionArns">
            <summary>
            Gets and sets the property TaskDefinitionArns. 
            <para>
            The list of task definition Amazon Resource Name (ARN) entries for the <code>ListTaskDefinitions</code>
            request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ListTasksRequest">
            <summary>
            Container for the parameters to the ListTasks operation.
            Returns a list of tasks. You can filter the results by cluster, task definition family,
            container instance, launch type, what IAM principal started the task, or by the desired
            status of the task.
            
             
            <para>
            Recently stopped tasks might appear in the returned results. Currently, stopped tasks
            appear in the returned results for at least one hour.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTasksRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the cluster to use when filtering
            the <code>ListTasks</code> results. If you do not specify a cluster, the default cluster
            is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTasksRequest.ContainerInstance">
            <summary>
            Gets and sets the property ContainerInstance. 
            <para>
            The container instance ID or full ARN of the container instance to use when filtering
            the <code>ListTasks</code> results. Specifying a <code>containerInstance</code> limits
            the results to tasks that belong to that container instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTasksRequest.DesiredStatus">
            <summary>
            Gets and sets the property DesiredStatus. 
            <para>
            The task desired status to use when filtering the <code>ListTasks</code> results.
            Specifying a <code>desiredStatus</code> of <code>STOPPED</code> limits the results
            to tasks that Amazon ECS has set the desired status to <code>STOPPED</code>. This
            can be useful for debugging tasks that are not starting properly or have died or finished.
            The default status filter is <code>RUNNING</code>, which shows tasks that Amazon ECS
            has set the desired status to <code>RUNNING</code>.
            </para>
             <note> 
            <para>
            Although you can filter results based on a desired status of <code>PENDING</code>,
            this does not return any results. Amazon ECS never sets the desired status of a task
            to that value (only a task's <code>lastStatus</code> may have a value of <code>PENDING</code>).
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTasksRequest.Family">
            <summary>
            Gets and sets the property Family. 
            <para>
            The name of the task definition family to use when filtering the <code>ListTasks</code>
            results. Specifying a <code>family</code> limits the results to tasks that belong
            to that family.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTasksRequest.LaunchType">
            <summary>
            Gets and sets the property LaunchType. 
            <para>
            The launch type to use when filtering the <code>ListTasks</code> results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTasksRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of task results returned by <code>ListTasks</code> in paginated
            output. When this parameter is used, <code>ListTasks</code> only returns <code>maxResults</code>
            results in a single page along with a <code>nextToken</code> response element. The
            remaining results of the initial request can be seen by sending another <code>ListTasks</code>
            request with the returned <code>nextToken</code> value. This value can be between
            1 and 100. If this parameter is not used, then <code>ListTasks</code> returns up to
            100 results and a <code>nextToken</code> value if applicable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTasksRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>nextToken</code> value returned from a <code>ListTasks</code> request indicating
            that more results are available to fulfill the request and further calls will be needed.
            If <code>maxResults</code> was provided, it is possible the number of results to be
            fewer than <code>maxResults</code>.
            </para>
             <note> 
            <para>
            This token should be treated as an opaque identifier that is only used to retrieve
            the next items in a list and not for other programmatic purposes.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTasksRequest.ServiceName">
            <summary>
            Gets and sets the property ServiceName. 
            <para>
            The name of the service to use when filtering the <code>ListTasks</code> results.
            Specifying a <code>serviceName</code> limits the results to tasks that belong to that
            service.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTasksRequest.StartedBy">
            <summary>
            Gets and sets the property StartedBy. 
            <para>
            The <code>startedBy</code> value with which to filter the task results. Specifying
            a <code>startedBy</code> value limits the results to tasks that were started with
            that value.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ListTasksResponse">
            <summary>
            This is the response object from the ListTasks operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTasksResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>nextToken</code> value to include in a future <code>ListTasks</code> request.
            When the results of a <code>ListTasks</code> request exceed <code>maxResults</code>,
            this value can be used to retrieve the next page of results. This value is <code>null</code>
            when there are no more results to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTasksResponse.TaskArns">
            <summary>
            Gets and sets the property TaskArns. 
            <para>
            The list of task ARN entries for the <code>ListTasks</code> request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.LoadBalancer">
            <summary>
            The load balancer configuration to use with a service or task set.
            
             
            <para>
            For specific notes and restrictions regarding the use of load balancers with services
            and task sets, see the CreateService and CreateTaskSet actions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.LoadBalancer.ContainerName">
            <summary>
            Gets and sets the property ContainerName. 
            <para>
            The name of the container (as it appears in a container definition) to associate with
            the load balancer.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.LoadBalancer.ContainerPort">
            <summary>
            Gets and sets the property ContainerPort. 
            <para>
            The port on the container to associate with the load balancer. This port must correspond
            to a <code>containerPort</code> in the task definition the tasks in the service are
            using. For tasks that use the EC2 launch type, the container instance they are launched
            on must allow ingress traffic on the <code>hostPort</code> of the port mapping.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.LoadBalancer.LoadBalancerName">
            <summary>
            Gets and sets the property LoadBalancerName. 
            <para>
            The name of the load balancer to associate with the Amazon ECS service or task set.
            </para>
             
            <para>
            A load balancer name is only specified when using a Classic Load Balancer. If you
            are using an Application Load Balancer or a Network Load Balancer the load balancer
            name parameter should be omitted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.LoadBalancer.TargetGroupArn">
            <summary>
            Gets and sets the property TargetGroupArn. 
            <para>
            The full Amazon Resource Name (ARN) of the Elastic Load Balancing target group or
            groups associated with a service or task set.
            </para>
             
            <para>
            A target group ARN is only specified when using an Application Load Balancer or Network
            Load Balancer. If you are using a Classic Load Balancer the target group ARN should
            be omitted.
            </para>
             
            <para>
            For services using the <code>ECS</code> deployment controller, you can specify one
            or multiple target groups. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/register-multiple-targetgroups.html">Registering
            Multiple Target Groups with a Service</a> in the <i>Amazon Elastic Container Service
            Developer Guide</i>.
            </para>
             
            <para>
            For services using the <code>CODE_DEPLOY</code> deployment controller, you are required
            to define two target groups for the load balancer. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-type-bluegreen.html">Blue/Green
            Deployment with CodeDeploy</a> in the <i>Amazon Elastic Container Service Developer
            Guide</i>.
            </para>
             <important> 
            <para>
            If your service's task definition uses the <code>awsvpc</code> network mode (which
            is required for the Fargate launch type), you must choose <code>ip</code> as the target
            type, not <code>instance</code>, when creating your target groups because tasks that
            use the <code>awsvpc</code> network mode are associated with an elastic network interface,
            not an Amazon EC2 instance.
            </para>
             </important>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.LogConfiguration">
            <summary>
            The log configuration for the container. This parameter maps to <code>LogConfig</code>
            in the <a href="https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.35/">Docker
            Remote API</a> and the <code>--log-driver</code> option to <a href="https://docs.docker.com/engine/reference/commandline/run/">
            <code>docker run</code> </a>.
            
             
            <para>
            By default, containers use the same logging driver that the Docker daemon uses; however
            the container may use a different logging driver than the Docker daemon by specifying
            a log driver configuration in the container definition. For more information on the
            options for different supported log drivers, see <a href="https://docs.docker.com/engine/admin/logging/overview/">Configure
            logging drivers</a> in the Docker documentation.
            </para>
             
            <para>
            The following should be noted when specifying a log configuration for your containers:
            </para>
             <ul> <li> 
            <para>
            Amazon ECS currently supports a subset of the logging drivers available to the Docker
            daemon (shown in the valid values below). Additional log drivers may be available
            in future releases of the Amazon ECS container agent.
            </para>
             </li> <li> 
            <para>
            This parameter requires version 1.18 of the Docker Remote API or greater on your container
            instance.
            </para>
             </li> <li> 
            <para>
            For tasks hosted on Amazon EC2 instances, the Amazon ECS container agent must register
            the available logging drivers with the <code>ECS_AVAILABLE_LOGGING_DRIVERS</code>
            environment variable before containers placed on that instance can use these log configuration
            options. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-config.html">Amazon
            ECS container agent configuration</a> in the <i>Amazon Elastic Container Service Developer
            Guide</i>.
            </para>
             </li> <li> 
            <para>
            For tasks on Fargate, because you do not have access to the underlying infrastructure
            your tasks are hosted on, any additional software needed will have to be installed
            outside of the task. For example, the Fluentd output aggregators or a remote host
            running Logstash to send Gelf logs to.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.LogConfiguration.LogDriver">
            <summary>
            Gets and sets the property LogDriver. 
            <para>
            The log driver to use for the container.
            </para>
             
            <para>
            For tasks on Fargate, the supported log drivers are <code>awslogs</code>, <code>splunk</code>,
            and <code>awsfirelens</code>.
            </para>
             
            <para>
            For tasks hosted on Amazon EC2 instances, the supported log drivers are <code>awslogs</code>,
            <code>fluentd</code>, <code>gelf</code>, <code>json-file</code>, <code>journald</code>,
            <code>logentries</code>,<code>syslog</code>, <code>splunk</code>, and <code>awsfirelens</code>.
            </para>
             
            <para>
            For more information about using the <code>awslogs</code> log driver, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using_awslogs.html">Using
            the awslogs log driver</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            For more information about using the <code>awsfirelens</code> log driver, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using_firelens.html">Custom
            log routing</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             <note> 
            <para>
            If you have a custom driver that is not listed, you can fork the Amazon ECS container
            agent project that is <a href="https://github.com/aws/amazon-ecs-agent">available
            on GitHub</a> and customize it to work with that driver. We encourage you to submit
            pull requests for changes that you would like to have included. However, we do not
            currently provide support for running modified copies of this software.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.LogConfiguration.Options">
            <summary>
            Gets and sets the property Options. 
            <para>
            The configuration options to send to the log driver. This parameter requires version
            1.19 of the Docker Remote API or greater on your container instance. To check the
            Docker Remote API version on your container instance, log in to your container instance
            and run the following command: <code>sudo docker version --format '{{.Server.APIVersion}}'</code>
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.LogConfiguration.SecretOptions">
            <summary>
            Gets and sets the property SecretOptions. 
            <para>
            The secrets to pass to the log configuration. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/specifying-sensitive-data.html">Specifying
            Sensitive Data</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ManagedAgent">
            <summary>
            Details about the managed agent status for the container.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ManagedAgent.LastStartedAt">
            <summary>
            Gets and sets the property LastStartedAt. 
            <para>
            The Unix timestamp for when the managed agent was last started.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ManagedAgent.LastStatus">
            <summary>
            Gets and sets the property LastStatus. 
            <para>
            The last known status of the managed agent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ManagedAgent.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the managed agent. When the execute command feature is enabled, the managed
            agent name is <code>ExecuteCommandAgent</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ManagedAgent.Reason">
            <summary>
            Gets and sets the property Reason. 
            <para>
            The reason for why the managed agent is in the state it is in.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ManagedScaling">
            <summary>
            The managed scaling settings for the Auto Scaling group capacity provider.
            
             
            <para>
            When managed scaling is enabled, Amazon ECS manages the scale-in and scale-out actions
            of the Auto Scaling group. Amazon ECS manages a target tracking scaling policy using
            an Amazon ECS-managed CloudWatch metric with the specified <code>targetCapacity</code>
            value as the target value for the metric. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/asg-capacity-providers.html#asg-capacity-providers-managed-scaling">Using
            Managed Scaling</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            If managed scaling is disabled, the user must manage the scaling of the Auto Scaling
            group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ManagedScaling.InstanceWarmupPeriod">
            <summary>
            Gets and sets the property InstanceWarmupPeriod. 
            <para>
            The period of time, in seconds, after a newly launched Amazon EC2 instance can contribute
            to CloudWatch metrics for Auto Scaling group. If this parameter is omitted, the default
            value of <code>300</code> seconds is used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ManagedScaling.MaximumScalingStepSize">
            <summary>
            Gets and sets the property MaximumScalingStepSize. 
            <para>
            The maximum number of container instances that Amazon ECS will scale in or scale out
            at one time. If this parameter is omitted, the default value of <code>10000</code>
            is used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ManagedScaling.MinimumScalingStepSize">
            <summary>
            Gets and sets the property MinimumScalingStepSize. 
            <para>
            The minimum number of container instances that Amazon ECS will scale in or scale out
            at one time. If this parameter is omitted, the default value of <code>1</code> is
            used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ManagedScaling.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Whether or not to enable managed scaling for the capacity provider.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ManagedScaling.TargetCapacity">
            <summary>
            Gets and sets the property TargetCapacity. 
            <para>
            The target capacity value for the capacity provider. The specified value must be greater
            than <code>0</code> and less than or equal to <code>100</code>. A value of <code>100</code>
            will result in the Amazon EC2 instances in your Auto Scaling group being completely
            utilized.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.MissingVersionException">
            <summary>
            Amazon ECS is unable to determine the current version of the Amazon ECS container
            agent on the container instance and does not have enough information to proceed with
            an update. This could be because the agent running on the container instance is an
            older or custom version that does not use our version information.
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.MissingVersionException.#ctor(System.String)">
            <summary>
            Constructs a new MissingVersionException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECS.Model.MissingVersionException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of MissingVersionException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.MissingVersionException.#ctor(System.Exception)">
            <summary>
            Construct instance of MissingVersionException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.MissingVersionException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of MissingVersionException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.MissingVersionException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of MissingVersionException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.MissingVersionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the MissingVersionException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.ECS.Model.MissingVersionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.ECS.Model.MountPoint">
            <summary>
            Details on a volume mount point that is used in a container definition.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.MountPoint.ContainerPath">
            <summary>
            Gets and sets the property ContainerPath. 
            <para>
            The path on the container to mount the host volume at.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.MountPoint.ReadOnly">
            <summary>
            Gets and sets the property ReadOnly. 
            <para>
            If this value is <code>true</code>, the container has read-only access to the volume.
            If this value is <code>false</code>, then the container can write to the volume. The
            default value is <code>false</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.MountPoint.SourceVolume">
            <summary>
            Gets and sets the property SourceVolume. 
            <para>
            The name of the volume to mount. Must be a volume name referenced in the <code>name</code>
            parameter of task definition <code>volume</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.NetworkBinding">
            <summary>
            Details on the network bindings between a container and its host container instance.
            After a task reaches the <code>RUNNING</code> status, manual and automatic host and
            container port assignments are visible in the <code>networkBindings</code> section
            of <a>DescribeTasks</a> API responses.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.NetworkBinding.BindIP">
            <summary>
            Gets and sets the property BindIP. 
            <para>
            The IP address that the container is bound to on the container instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.NetworkBinding.ContainerPort">
            <summary>
            Gets and sets the property ContainerPort. 
            <para>
            The port number on the container that is used with the network binding.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.NetworkBinding.HostPort">
            <summary>
            Gets and sets the property HostPort. 
            <para>
            The port number on the host that is used with the network binding.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.NetworkBinding.Protocol">
            <summary>
            Gets and sets the property Protocol. 
            <para>
            The protocol used for the network binding.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.NetworkConfiguration">
            <summary>
            An object representing the network configuration for a task or service.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.NetworkConfiguration.AwsvpcConfiguration">
            <summary>
            Gets and sets the property AwsvpcConfiguration. 
            <para>
            The VPC subnets and security groups associated with a task.
            </para>
             <note> 
            <para>
            All specified subnets and security groups must be from the same VPC.
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.NetworkInterface">
            <summary>
            An object representing the elastic network interface for tasks that use the <code>awsvpc</code>
            network mode.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.NetworkInterface.AttachmentId">
            <summary>
            Gets and sets the property AttachmentId. 
            <para>
            The attachment ID for the network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.NetworkInterface.Ipv6Address">
            <summary>
            Gets and sets the property Ipv6Address. 
            <para>
            The private IPv6 address for the network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.NetworkInterface.PrivateIpv4Address">
            <summary>
            Gets and sets the property PrivateIpv4Address. 
            <para>
            The private IPv4 address for the network interface.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.NoUpdateAvailableException">
            <summary>
            There is no update available for this Amazon ECS container agent. This could be because
            the agent is already running the latest version, or it is so old that there is no
            update path to the current version.
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.NoUpdateAvailableException.#ctor(System.String)">
            <summary>
            Constructs a new NoUpdateAvailableException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECS.Model.NoUpdateAvailableException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of NoUpdateAvailableException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.NoUpdateAvailableException.#ctor(System.Exception)">
            <summary>
            Construct instance of NoUpdateAvailableException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.NoUpdateAvailableException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of NoUpdateAvailableException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.NoUpdateAvailableException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of NoUpdateAvailableException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.NoUpdateAvailableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the NoUpdateAvailableException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.ECS.Model.NoUpdateAvailableException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.ECS.Model.PlacementConstraint">
            <summary>
            An object representing a constraint on task placement. For more information, see <a
            href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-constraints.html">Task
            Placement Constraints</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            
             <note> 
            <para>
            If you are using the Fargate launch type, task placement constraints are not supported.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.PlacementConstraint.Expression">
            <summary>
            Gets and sets the property Expression. 
            <para>
            A cluster query language expression to apply to the constraint. The expression can
            have a maximum length of 2000 characters. You can't specify an expression if the constraint
            type is <code>distinctInstance</code>. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cluster-query-language.html">Cluster
            query language</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.PlacementConstraint.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of constraint. Use <code>distinctInstance</code> to ensure that each task
            in a particular group is running on a different container instance. Use <code>memberOf</code>
            to restrict the selection to a group of valid candidates.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.PlacementStrategy">
            <summary>
            The task placement strategy for a task or service. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-strategies.html">Task
            Placement Strategies</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.PlacementStrategy.Field">
            <summary>
            Gets and sets the property Field. 
            <para>
            The field to apply the placement strategy against. For the <code>spread</code> placement
            strategy, valid values are <code>instanceId</code> (or <code>host</code>, which has
            the same effect), or any platform or custom attribute that is applied to a container
            instance, such as <code>attribute:ecs.availability-zone</code>. For the <code>binpack</code>
            placement strategy, valid values are <code>cpu</code> and <code>memory</code>. For
            the <code>random</code> placement strategy, this field is not used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.PlacementStrategy.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of placement strategy. The <code>random</code> placement strategy randomly
            places tasks on available candidates. The <code>spread</code> placement strategy spreads
            placement across available candidates evenly based on the <code>field</code> parameter.
            The <code>binpack</code> strategy places tasks on available candidates that have the
            least available amount of the resource that is specified with the <code>field</code>
            parameter. For example, if you binpack on memory, a task is placed on the instance
            with the least amount of remaining memory (but still enough to run the task).
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.PlatformTaskDefinitionIncompatibilityException">
            <summary>
            The specified platform version does not satisfy the task definition's required capabilities.
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.PlatformTaskDefinitionIncompatibilityException.#ctor(System.String)">
            <summary>
            Constructs a new PlatformTaskDefinitionIncompatibilityException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECS.Model.PlatformTaskDefinitionIncompatibilityException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of PlatformTaskDefinitionIncompatibilityException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.PlatformTaskDefinitionIncompatibilityException.#ctor(System.Exception)">
            <summary>
            Construct instance of PlatformTaskDefinitionIncompatibilityException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.PlatformTaskDefinitionIncompatibilityException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of PlatformTaskDefinitionIncompatibilityException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.PlatformTaskDefinitionIncompatibilityException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of PlatformTaskDefinitionIncompatibilityException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.PlatformTaskDefinitionIncompatibilityException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the PlatformTaskDefinitionIncompatibilityException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.ECS.Model.PlatformTaskDefinitionIncompatibilityException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.ECS.Model.PlatformUnknownException">
            <summary>
            The specified platform version does not exist.
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.PlatformUnknownException.#ctor(System.String)">
            <summary>
            Constructs a new PlatformUnknownException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECS.Model.PlatformUnknownException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of PlatformUnknownException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.PlatformUnknownException.#ctor(System.Exception)">
            <summary>
            Construct instance of PlatformUnknownException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.PlatformUnknownException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of PlatformUnknownException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.PlatformUnknownException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of PlatformUnknownException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.PlatformUnknownException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the PlatformUnknownException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.ECS.Model.PlatformUnknownException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.ECS.Model.PortMapping">
            <summary>
            Port mappings allow containers to access ports on the host container instance to send
            or receive traffic. Port mappings are specified as part of the container definition.
            
             
            <para>
            If you are using containers in a task with the <code>awsvpc</code> or <code>host</code>
            network mode, exposed ports should be specified using <code>containerPort</code>.
            The <code>hostPort</code> can be left blank or it must be the same value as the <code>containerPort</code>.
            </para>
             <note> 
            <para>
            You cannot expose the same container port for multiple protocols. An error will be
            returned if this is attempted
            </para>
             </note> 
            <para>
            After a task reaches the <code>RUNNING</code> status, manual and automatic host and
            container port assignments are visible in the <code>networkBindings</code> section
            of <a>DescribeTasks</a> API responses.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.PortMapping.ContainerPort">
            <summary>
            Gets and sets the property ContainerPort. 
            <para>
            The port number on the container that is bound to the user-specified or automatically
            assigned host port.
            </para>
             
            <para>
            If you are using containers in a task with the <code>awsvpc</code> or <code>host</code>
            network mode, exposed ports should be specified using <code>containerPort</code>.
            </para>
             
            <para>
            If you are using containers in a task with the <code>bridge</code> network mode and
            you specify a container port and not a host port, your container automatically receives
            a host port in the ephemeral port range. For more information, see <code>hostPort</code>.
            Port mappings that are automatically assigned in this way do not count toward the
            100 reserved ports limit of a container instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.PortMapping.HostPort">
            <summary>
            Gets and sets the property HostPort. 
            <para>
            The port number on the container instance to reserve for your container.
            </para>
             
            <para>
            If you are using containers in a task with the <code>awsvpc</code> or <code>host</code>
            network mode, the <code>hostPort</code> can either be left blank or set to the same
            value as the <code>containerPort</code>.
            </para>
             
            <para>
            If you are using containers in a task with the <code>bridge</code> network mode, you
            can specify a non-reserved host port for your container port mapping, or you can omit
            the <code>hostPort</code> (or set it to <code>0</code>) while specifying a <code>containerPort</code>
            and your container automatically receives a port in the ephemeral port range for your
            container instance operating system and Docker version.
            </para>
             
            <para>
            The default ephemeral port range for Docker version 1.6.0 and later is listed on the
            instance under <code>/proc/sys/net/ipv4/ip_local_port_range</code>. If this kernel
            parameter is unavailable, the default ephemeral port range from 49153 through 65535
            is used. Do not attempt to specify a host port in the ephemeral port range as these
            are reserved for automatic assignment. In general, ports below 32768 are outside of
            the ephemeral port range.
            </para>
             <note> 
            <para>
            The default ephemeral port range from 49153 through 65535 is always used for Docker
            versions before 1.6.0.
            </para>
             </note> 
            <para>
            The default reserved ports are 22 for SSH, the Docker ports 2375 and 2376, and the
            Amazon ECS container agent ports 51678-51680. Any host port that was previously specified
            in a running task is also reserved while the task is running (after a task stops,
            the host port is released). The current reserved ports are displayed in the <code>remainingResources</code>
            of <a>DescribeContainerInstances</a> output. A container instance can have up to 100
            reserved ports at a time, including the default reserved ports. Automatically assigned
            ports don't count toward the 100 reserved ports limit.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.PortMapping.Protocol">
            <summary>
            Gets and sets the property Protocol. 
            <para>
            The protocol used for the port mapping. Valid values are <code>tcp</code> and <code>udp</code>.
            The default is <code>tcp</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ProxyConfiguration">
            <summary>
            The configuration details for the App Mesh proxy.
            
             
            <para>
            For tasks using the EC2 launch type, the container instances require at least version
            1.26.0 of the container agent and at least version 1.26.0-1 of the <code>ecs-init</code>
            package to enable a proxy configuration. If your container instances are launched
            from the Amazon ECS-optimized AMI version <code>20190301</code> or later, then they
            contain the required versions of the container agent and <code>ecs-init</code>. For
            more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-optimized_AMI.html">Amazon
            ECS-optimized Linux AMI</a> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ProxyConfiguration.ContainerName">
            <summary>
            Gets and sets the property ContainerName. 
            <para>
            The name of the container that will serve as the App Mesh proxy.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ProxyConfiguration.Properties">
            <summary>
            Gets and sets the property Properties. 
            <para>
            The set of network configuration parameters to provide the Container Network Interface
            (CNI) plugin, specified as key-value pairs.
            </para>
             <ul> <li> 
            <para>
             <code>IgnoredUID</code> - (Required) The user ID (UID) of the proxy container as
            defined by the <code>user</code> parameter in a container definition. This is used
            to ensure the proxy ignores its own traffic. If <code>IgnoredGID</code> is specified,
            this field can be empty.
            </para>
             </li> <li> 
            <para>
             <code>IgnoredGID</code> - (Required) The group ID (GID) of the proxy container as
            defined by the <code>user</code> parameter in a container definition. This is used
            to ensure the proxy ignores its own traffic. If <code>IgnoredUID</code> is specified,
            this field can be empty.
            </para>
             </li> <li> 
            <para>
             <code>AppPorts</code> - (Required) The list of ports that the application uses. Network
            traffic to these ports is forwarded to the <code>ProxyIngressPort</code> and <code>ProxyEgressPort</code>.
            </para>
             </li> <li> 
            <para>
             <code>ProxyIngressPort</code> - (Required) Specifies the port that incoming traffic
            to the <code>AppPorts</code> is directed to.
            </para>
             </li> <li> 
            <para>
             <code>ProxyEgressPort</code> - (Required) Specifies the port that outgoing traffic
            from the <code>AppPorts</code> is directed to.
            </para>
             </li> <li> 
            <para>
             <code>EgressIgnoredPorts</code> - (Required) The egress traffic going to the specified
            ports is ignored and not redirected to the <code>ProxyEgressPort</code>. It can be
            an empty list.
            </para>
             </li> <li> 
            <para>
             <code>EgressIgnoredIPs</code> - (Required) The egress traffic going to the specified
            IP addresses is ignored and not redirected to the <code>ProxyEgressPort</code>. It
            can be an empty list.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ProxyConfiguration.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The proxy type. The only supported value is <code>APPMESH</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.PutAccountSettingDefaultRequest">
            <summary>
            Container for the parameters to the PutAccountSettingDefault operation.
            Modifies an account setting for all IAM users on an account for whom no individual
            account setting has been specified. Account settings are set on a per-Region basis.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.PutAccountSettingDefaultRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The resource name for which to modify the account setting. If <code>serviceLongArnFormat</code>
            is specified, the ARN for your Amazon ECS services is affected. If <code>taskLongArnFormat</code>
            is specified, the ARN and resource ID for your Amazon ECS tasks is affected. If <code>containerInstanceLongArnFormat</code>
            is specified, the ARN and resource ID for your Amazon ECS container instances is affected.
            If <code>awsvpcTrunking</code> is specified, the ENI limit for your Amazon ECS container
            instances is affected. If <code>containerInsights</code> is specified, the default
            setting for CloudWatch Container Insights for your clusters is affected.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.PutAccountSettingDefaultRequest.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The account setting value for the specified principal ARN. Accepted values are <code>enabled</code>
            and <code>disabled</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.PutAccountSettingDefaultResponse">
            <summary>
            This is the response object from the PutAccountSettingDefault operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.PutAccountSettingDefaultResponse.Setting">
            <summary>
            Gets and sets the property Setting. 
            <para>
            The current setting for a resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.PutAccountSettingRequest">
            <summary>
            Container for the parameters to the PutAccountSetting operation.
            Modifies an account setting. Account settings are set on a per-Region basis.
            
             
            <para>
            If you change the account setting for the root user, the default settings for all
            of the IAM users and roles for which no individual account setting has been specified
            are reset. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-account-settings.html">Account
            Settings</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            When <code>serviceLongArnFormat</code>, <code>taskLongArnFormat</code>, or <code>containerInstanceLongArnFormat</code>
            are specified, the Amazon Resource Name (ARN) and resource ID format of the resource
            type for a specified IAM user, IAM role, or the root user for an account is affected.
            The opt-in and opt-out account setting must be set for each Amazon ECS resource separately.
            The ARN and resource ID format of a resource will be defined by the opt-in status
            of the IAM user or role that created the resource. You must enable this setting to
            use Amazon ECS features such as resource tagging.
            </para>
             
            <para>
            When <code>awsvpcTrunking</code> is specified, the elastic network interface (ENI)
            limit for any new container instances that support the feature is changed. If <code>awsvpcTrunking</code>
            is enabled, any new container instances that support the feature are launched have
            the increased ENI limits available to them. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/container-instance-eni.html">Elastic
            Network Interface Trunking</a> in the <i>Amazon Elastic Container Service Developer
            Guide</i>.
            </para>
             
            <para>
            When <code>containerInsights</code> is specified, the default setting indicating whether
            CloudWatch Container Insights is enabled for your clusters is changed. If <code>containerInsights</code>
            is enabled, any new clusters that are created will have Container Insights enabled
            unless you disable it during cluster creation. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cloudwatch-container-insights.html">CloudWatch
            Container Insights</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.PutAccountSettingRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The Amazon ECS resource name for which to modify the account setting. If <code>serviceLongArnFormat</code>
            is specified, the ARN for your Amazon ECS services is affected. If <code>taskLongArnFormat</code>
            is specified, the ARN and resource ID for your Amazon ECS tasks is affected. If <code>containerInstanceLongArnFormat</code>
            is specified, the ARN and resource ID for your Amazon ECS container instances is affected.
            If <code>awsvpcTrunking</code> is specified, the elastic network interface (ENI) limit
            for your Amazon ECS container instances is affected. If <code>containerInsights</code>
            is specified, the default setting for CloudWatch Container Insights for your clusters
            is affected.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.PutAccountSettingRequest.PrincipalArn">
            <summary>
            Gets and sets the property PrincipalArn. 
            <para>
            The ARN of the principal, which can be an IAM user, IAM role, or the root user. If
            you specify the root user, it modifies the account setting for all IAM users, IAM
            roles, and the root user of the account unless an IAM user or role explicitly overrides
            these settings. If this field is omitted, the setting is changed only for the authenticated
            user.
            </para>
             <note> 
            <para>
            Federated users assume the account setting of the root user and can't have explicit
            account settings set for them.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.PutAccountSettingRequest.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The account setting value for the specified principal ARN. Accepted values are <code>enabled</code>
            and <code>disabled</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.PutAccountSettingResponse">
            <summary>
            This is the response object from the PutAccountSetting operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.PutAccountSettingResponse.Setting">
            <summary>
            Gets and sets the property Setting. 
            <para>
            The current account setting for a resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.PutAttributesRequest">
            <summary>
            Container for the parameters to the PutAttributes operation.
            Create or update an attribute on an Amazon ECS resource. If the attribute does not
            exist, it is created. If the attribute exists, its value is replaced with the specified
            value. To delete an attribute, use <a>DeleteAttributes</a>. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-constraints.html#attributes">Attributes</a>
            in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.PutAttributesRequest.Attributes">
            <summary>
            Gets and sets the property Attributes. 
            <para>
            The attributes to apply to your resource. You can specify up to 10 custom attributes
            per resource. You can specify up to 10 attributes in a single call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.PutAttributesRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the cluster that contains the
            resource to apply attributes. If you do not specify a cluster, the default cluster
            is assumed.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.PutAttributesResponse">
            <summary>
            This is the response object from the PutAttributes operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.PutAttributesResponse.Attributes">
            <summary>
            Gets and sets the property Attributes. 
            <para>
            The attributes applied to your resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.PutClusterCapacityProvidersRequest">
            <summary>
            Container for the parameters to the PutClusterCapacityProviders operation.
            Modifies the available capacity providers and the default capacity provider strategy
            for a cluster.
            
             
            <para>
            You must specify both the available capacity providers and a default capacity provider
            strategy for the cluster. If the specified cluster has existing capacity providers
            associated with it, you must specify all existing capacity providers in addition to
            any new ones you want to add. Any existing capacity providers associated with a cluster
            that are omitted from a <a>PutClusterCapacityProviders</a> API call will be disassociated
            with the cluster. You can only disassociate an existing capacity provider from a cluster
            if it's not being used by any existing tasks.
            </para>
             
            <para>
            When creating a service or running a task on a cluster, if no capacity provider or
            launch type is specified, then the cluster's default capacity provider strategy is
            used. It is recommended to define a default capacity provider strategy for your cluster,
            however you may specify an empty array (<code>[]</code>) to bypass defining a default
            strategy.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.PutClusterCapacityProvidersRequest.CapacityProviders">
            <summary>
            Gets and sets the property CapacityProviders. 
            <para>
            The name of one or more capacity providers to associate with the cluster.
            </para>
             
            <para>
            If specifying a capacity provider that uses an Auto Scaling group, the capacity provider
            must already be created. New capacity providers can be created with the <a>CreateCapacityProvider</a>
            API operation.
            </para>
             
            <para>
            To use a Fargate capacity provider, specify either the <code>FARGATE</code> or <code>FARGATE_SPOT</code>
            capacity providers. The Fargate capacity providers are available to all accounts and
            only need to be associated with a cluster to be used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.PutClusterCapacityProvidersRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the cluster to modify the capacity
            provider settings for. If you do not specify a cluster, the default cluster is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.PutClusterCapacityProvidersRequest.DefaultCapacityProviderStrategy">
            <summary>
            Gets and sets the property DefaultCapacityProviderStrategy. 
            <para>
            The capacity provider strategy to use by default for the cluster.
            </para>
             
            <para>
            When creating a service or running a task on a cluster, if no capacity provider or
            launch type is specified then the default capacity provider strategy for the cluster
            is used.
            </para>
             
            <para>
            A capacity provider strategy consists of one or more capacity providers along with
            the <code>base</code> and <code>weight</code> to assign to them. A capacity provider
            must be associated with the cluster to be used in a capacity provider strategy. The
            <a>PutClusterCapacityProviders</a> API is used to associate a capacity provider with
            a cluster. Only capacity providers with an <code>ACTIVE</code> or <code>UPDATING</code>
            status can be used.
            </para>
             
            <para>
            If specifying a capacity provider that uses an Auto Scaling group, the capacity provider
            must already be created. New capacity providers can be created with the <a>CreateCapacityProvider</a>
            API operation.
            </para>
             
            <para>
            To use a Fargate capacity provider, specify either the <code>FARGATE</code> or <code>FARGATE_SPOT</code>
            capacity providers. The Fargate capacity providers are available to all accounts and
            only need to be associated with a cluster to be used.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.PutClusterCapacityProvidersResponse">
            <summary>
            This is the response object from the PutClusterCapacityProviders operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.PutClusterCapacityProvidersResponse.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            Details about the cluster.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.RegisterTaskDefinitionRequest">
            <summary>
            Container for the parameters to the RegisterTaskDefinition operation.
            Registers a new task definition from the supplied <code>family</code> and <code>containerDefinitions</code>.
            Optionally, you can add data volumes to your containers with the <code>volumes</code>
            parameter. For more information about task definition parameters and defaults, see
            <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_defintions.html">Amazon
            ECS Task Definitions</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            
             
            <para>
            You can specify an IAM role for your task with the <code>taskRoleArn</code> parameter.
            When you specify an IAM role for a task, its containers can then use the latest versions
            of the CLI or SDKs to make API requests to the Amazon Web Services services that are
            specified in the IAM policy associated with the role. For more information, see <a
            href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-iam-roles.html">IAM
            Roles for Tasks</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            You can specify a Docker networking mode for the containers in your task definition
            with the <code>networkMode</code> parameter. The available network modes correspond
            to those described in <a href="https://docs.docker.com/engine/reference/run/#/network-settings">Network
            settings</a> in the Docker run reference. If you specify the <code>awsvpc</code> network
            mode, the task is allocated an elastic network interface, and you must specify a <a>NetworkConfiguration</a>
            when you create a service or run a task with the task definition. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-networking.html">Task
            Networking</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RegisterTaskDefinitionRequest.ContainerDefinitions">
            <summary>
            Gets and sets the property ContainerDefinitions. 
            <para>
            A list of container definitions in JSON format that describe the different containers
            that make up your task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RegisterTaskDefinitionRequest.Cpu">
            <summary>
            Gets and sets the property Cpu. 
            <para>
            The number of CPU units used by the task. It can be expressed as an integer using
            CPU units, for example <code>1024</code>, or as a string using vCPUs, for example
            <code>1 vCPU</code> or <code>1 vcpu</code>, in a task definition. String values are
            converted to an integer indicating the CPU units when the task definition is registered.
            </para>
             <note> 
            <para>
            Task-level CPU and memory parameters are ignored for Windows containers. We recommend
            specifying container-level resources for Windows containers.
            </para>
             </note> 
            <para>
            If you are using the EC2 launch type, this field is optional. Supported values are
            between <code>128</code> CPU units (<code>0.125</code> vCPUs) and <code>10240</code>
            CPU units (<code>10</code> vCPUs).
            </para>
             
            <para>
            If you are using the Fargate launch type, this field is required and you must use
            one of the following values, which determines your range of supported values for the
            <code>memory</code> parameter:
            </para>
             <ul> <li> 
            <para>
            256 (.25 vCPU) - Available <code>memory</code> values: 512 (0.5 GB), 1024 (1 GB),
            2048 (2 GB)
            </para>
             </li> <li> 
            <para>
            512 (.5 vCPU) - Available <code>memory</code> values: 1024 (1 GB), 2048 (2 GB), 3072
            (3 GB), 4096 (4 GB)
            </para>
             </li> <li> 
            <para>
            1024 (1 vCPU) - Available <code>memory</code> values: 2048 (2 GB), 3072 (3 GB), 4096
            (4 GB), 5120 (5 GB), 6144 (6 GB), 7168 (7 GB), 8192 (8 GB)
            </para>
             </li> <li> 
            <para>
            2048 (2 vCPU) - Available <code>memory</code> values: Between 4096 (4 GB) and 16384
            (16 GB) in increments of 1024 (1 GB)
            </para>
             </li> <li> 
            <para>
            4096 (4 vCPU) - Available <code>memory</code> values: Between 8192 (8 GB) and 30720
            (30 GB) in increments of 1024 (1 GB)
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RegisterTaskDefinitionRequest.EphemeralStorage">
            <summary>
            Gets and sets the property EphemeralStorage. 
            <para>
            The amount of ephemeral storage to allocate for the task. This parameter is used to
            expand the total amount of ephemeral storage available, beyond the default amount,
            for tasks hosted on Fargate. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/userguide/using_data_volumes.html">Fargate
            task storage</a> in the <i>Amazon ECS User Guide for Fargate</i>.
            </para>
             <note> 
            <para>
            This parameter is only supported for tasks hosted on Fargate using platform version
            <code>1.4.0</code> or later.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RegisterTaskDefinitionRequest.ExecutionRoleArn">
            <summary>
            Gets and sets the property ExecutionRoleArn. 
            <para>
            The Amazon Resource Name (ARN) of the task execution role that grants the Amazon ECS
            container agent permission to make Amazon Web Services API calls on your behalf. The
            task execution IAM role is required depending on the requirements of your task. For
            more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_execution_IAM_role.html">Amazon
            ECS task execution IAM role</a> in the <i>Amazon Elastic Container Service Developer
            Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RegisterTaskDefinitionRequest.Family">
            <summary>
            Gets and sets the property Family. 
            <para>
            You must specify a <code>family</code> for a task definition, which allows you to
            track multiple versions of the same task definition. The <code>family</code> is used
            as a name for your task definition. Up to 255 letters (uppercase and lowercase), numbers,
            underscores, and hyphens are allowed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RegisterTaskDefinitionRequest.InferenceAccelerators">
            <summary>
            Gets and sets the property InferenceAccelerators. 
            <para>
            The Elastic Inference accelerators to use for the containers in the task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RegisterTaskDefinitionRequest.IpcMode">
            <summary>
            Gets and sets the property IpcMode. 
            <para>
            The IPC resource namespace to use for the containers in the task. The valid values
            are <code>host</code>, <code>task</code>, or <code>none</code>. If <code>host</code>
            is specified, then all containers within the tasks that specified the <code>host</code>
            IPC mode on the same container instance share the same IPC resources with the host
            Amazon EC2 instance. If <code>task</code> is specified, all containers within the
            specified task share the same IPC resources. If <code>none</code> is specified, then
            IPC resources within the containers of a task are private and not shared with other
            containers in a task or on the container instance. If no value is specified, then
            the IPC resource namespace sharing depends on the Docker daemon setting on the container
            instance. For more information, see <a href="https://docs.docker.com/engine/reference/run/#ipc-settings---ipc">IPC
            settings</a> in the <i>Docker run reference</i>.
            </para>
             
            <para>
            If the <code>host</code> IPC mode is used, be aware that there is a heightened risk
            of undesired IPC namespace expose. For more information, see <a href="https://docs.docker.com/engine/security/security/">Docker
            security</a>.
            </para>
             
            <para>
            If you are setting namespaced kernel parameters using <code>systemControls</code>
            for the containers in the task, the following will apply to your IPC resource namespace.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definition_parameters.html">System
            Controls</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             <ul> <li> 
            <para>
            For tasks that use the <code>host</code> IPC mode, IPC namespace related <code>systemControls</code>
            are not supported.
            </para>
             </li> <li> 
            <para>
            For tasks that use the <code>task</code> IPC mode, IPC namespace related <code>systemControls</code>
            will apply to all containers within a task.
            </para>
             </li> </ul> <note> 
            <para>
            This parameter is not supported for Windows containers or tasks run on Fargate.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RegisterTaskDefinitionRequest.Memory">
            <summary>
            Gets and sets the property Memory. 
            <para>
            The amount of memory (in MiB) used by the task. It can be expressed as an integer
            using MiB, for example <code>1024</code>, or as a string using GB, for example <code>1GB</code>
            or <code>1 GB</code>, in a task definition. String values are converted to an integer
            indicating the MiB when the task definition is registered.
            </para>
             <note> 
            <para>
            Task-level CPU and memory parameters are ignored for Windows containers. We recommend
            specifying container-level resources for Windows containers.
            </para>
             </note> 
            <para>
            If using the EC2 launch type, this field is optional.
            </para>
             
            <para>
            If using the Fargate launch type, this field is required and you must use one of the
            following values, which determines your range of supported values for the <code>cpu</code>
            parameter:
            </para>
             <ul> <li> 
            <para>
            512 (0.5 GB), 1024 (1 GB), 2048 (2 GB) - Available <code>cpu</code> values: 256 (.25
            vCPU)
            </para>
             </li> <li> 
            <para>
            1024 (1 GB), 2048 (2 GB), 3072 (3 GB), 4096 (4 GB) - Available <code>cpu</code> values:
            512 (.5 vCPU)
            </para>
             </li> <li> 
            <para>
            2048 (2 GB), 3072 (3 GB), 4096 (4 GB), 5120 (5 GB), 6144 (6 GB), 7168 (7 GB), 8192
            (8 GB) - Available <code>cpu</code> values: 1024 (1 vCPU)
            </para>
             </li> <li> 
            <para>
            Between 4096 (4 GB) and 16384 (16 GB) in increments of 1024 (1 GB) - Available <code>cpu</code>
            values: 2048 (2 vCPU)
            </para>
             </li> <li> 
            <para>
            Between 8192 (8 GB) and 30720 (30 GB) in increments of 1024 (1 GB) - Available <code>cpu</code>
            values: 4096 (4 vCPU)
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RegisterTaskDefinitionRequest.NetworkMode">
            <summary>
            Gets and sets the property NetworkMode. 
            <para>
            The Docker networking mode to use for the containers in the task. The valid values
            are <code>none</code>, <code>bridge</code>, <code>awsvpc</code>, and <code>host</code>.
            If no network mode is specified, the default is <code>bridge</code>.
            </para>
             
            <para>
            For Amazon ECS tasks on Fargate, the <code>awsvpc</code> network mode is required.
            For Amazon ECS tasks on Amazon EC2 Linux instances, any network mode can be used.
            For Amazon ECS tasks on Amazon EC2 Windows instances, <code>&lt;default&gt;</code>
            or <code>awsvpc</code> can be used. If the network mode is set to <code>none</code>,
            you cannot specify port mappings in your container definitions, and the tasks containers
            do not have external connectivity. The <code>host</code> and <code>awsvpc</code> network
            modes offer the highest networking performance for containers because they use the
            EC2 network stack instead of the virtualized network stack provided by the <code>bridge</code>
            mode.
            </para>
             
            <para>
            With the <code>host</code> and <code>awsvpc</code> network modes, exposed container
            ports are mapped directly to the corresponding host port (for the <code>host</code>
            network mode) or the attached elastic network interface port (for the <code>awsvpc</code>
            network mode), so you cannot take advantage of dynamic host port mappings. 
            </para>
             <important> 
            <para>
            When using the <code>host</code> network mode, you should not run containers using
            the root user (UID 0). It is considered best practice to use a non-root user.
            </para>
             </important> 
            <para>
            If the network mode is <code>awsvpc</code>, the task is allocated an elastic network
            interface, and you must specify a <a>NetworkConfiguration</a> value when you create
            a service or run a task with the task definition. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-networking.html">Task
            Networking</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            If the network mode is <code>host</code>, you cannot run multiple instantiations of
            the same task on a single container instance when port mappings are used.
            </para>
             
            <para>
            For more information, see <a href="https://docs.docker.com/engine/reference/run/#network-settings">Network
            settings</a> in the <i>Docker run reference</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RegisterTaskDefinitionRequest.PidMode">
            <summary>
            Gets and sets the property PidMode. 
            <para>
            The process namespace to use for the containers in the task. The valid values are
            <code>host</code> or <code>task</code>. If <code>host</code> is specified, then all
            containers within the tasks that specified the <code>host</code> PID mode on the same
            container instance share the same process namespace with the host Amazon EC2 instance.
            If <code>task</code> is specified, all containers within the specified task share
            the same process namespace. If no value is specified, the default is a private namespace.
            For more information, see <a href="https://docs.docker.com/engine/reference/run/#pid-settings---pid">PID
            settings</a> in the <i>Docker run reference</i>.
            </para>
             
            <para>
            If the <code>host</code> PID mode is used, be aware that there is a heightened risk
            of undesired process namespace expose. For more information, see <a href="https://docs.docker.com/engine/security/security/">Docker
            security</a>.
            </para>
             <note> 
            <para>
            This parameter is not supported for Windows containers or tasks run on Fargate.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RegisterTaskDefinitionRequest.PlacementConstraints">
            <summary>
            Gets and sets the property PlacementConstraints. 
            <para>
            An array of placement constraint objects to use for the task. You can specify a maximum
            of 10 constraints per task (this limit includes constraints in the task definition
            and those specified at runtime).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RegisterTaskDefinitionRequest.ProxyConfiguration">
            <summary>
            Gets and sets the property ProxyConfiguration. 
            <para>
            The configuration details for the App Mesh proxy.
            </para>
             
            <para>
            For tasks hosted on Amazon EC2 instances, the container instances require at least
            version <code>1.26.0</code> of the container agent and at least version <code>1.26.0-1</code>
            of the <code>ecs-init</code> package to enable a proxy configuration. If your container
            instances are launched from the Amazon ECS-optimized AMI version <code>20190301</code>
            or later, then they contain the required versions of the container agent and <code>ecs-init</code>.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-ami-versions.html">Amazon
            ECS-optimized AMI versions</a> in the <i>Amazon Elastic Container Service Developer
            Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RegisterTaskDefinitionRequest.RequiresCompatibilities">
            <summary>
            Gets and sets the property RequiresCompatibilities. 
            <para>
            The task launch type that Amazon ECS should validate the task definition against.
            A client exception is returned if the task definition doesn't validate against the
            compatibilities specified. If no value is specified, the parameter is omitted from
            the response.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RegisterTaskDefinitionRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The metadata that you apply to the task definition to help you categorize and organize
            them. Each tag consists of a key and an optional value, both of which you define.
            </para>
             
            <para>
            The following basic restrictions apply to tags:
            </para>
             <ul> <li> 
            <para>
            Maximum number of tags per resource - 50
            </para>
             </li> <li> 
            <para>
            For each resource, each tag key must be unique, and each tag key can have only one
            value.
            </para>
             </li> <li> 
            <para>
            Maximum key length - 128 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            Maximum value length - 256 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            If your tagging schema is used across multiple services and resources, remember that
            other services may have restrictions on allowed characters. Generally allowed characters
            are: letters, numbers, and spaces representable in UTF-8, and the following characters:
            + - = . _ : / @.
            </para>
             </li> <li> 
            <para>
            Tag keys and values are case-sensitive.
            </para>
             </li> <li> 
            <para>
            Do not use <code>aws:</code>, <code>AWS:</code>, or any upper or lowercase combination
            of such as a prefix for either keys or values as it is reserved for Amazon Web Services
            use. You cannot edit or delete tag keys or values with this prefix. Tags with this
            prefix do not count against your tags per resource limit.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RegisterTaskDefinitionRequest.TaskRoleArn">
            <summary>
            Gets and sets the property TaskRoleArn. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the IAM role that containers
            in this task can assume. All containers in this task are granted the permissions that
            are specified in this role. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-iam-roles.html">IAM
            Roles for Tasks</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RegisterTaskDefinitionRequest.Volumes">
            <summary>
            Gets and sets the property Volumes. 
            <para>
            A list of volume definitions in JSON format that containers in your task may use.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.RegisterTaskDefinitionResponse">
            <summary>
            This is the response object from the RegisterTaskDefinition operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RegisterTaskDefinitionResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The list of tags associated with the task definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RegisterTaskDefinitionResponse.TaskDefinition">
            <summary>
            Gets and sets the property TaskDefinition. 
            <para>
            The full description of the registered task definition.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.RepositoryCredentials">
            <summary>
            The repository credentials for private registry authentication.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RepositoryCredentials.CredentialsParameter">
            <summary>
            Gets and sets the property CredentialsParameter. 
            <para>
            The Amazon Resource Name (ARN) of the secret containing the private repository credentials.
            </para>
             <note> 
            <para>
            When you are using the Amazon ECS API, CLI, or Amazon Web Services SDK, if the secret
            exists in the same Region as the task that you are launching then you can use either
            the full ARN or the name of the secret. When you are using the Amazon Web Services
            Management Console, you must specify the full ARN of the secret.
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Resource">
            <summary>
            Describes the resources available for a container instance.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Resource.DoubleValue">
            <summary>
            Gets and sets the property DoubleValue. 
            <para>
            When the <code>doubleValue</code> type is set, the value of the resource must be a
            double precision floating-point type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Resource.IntegerValue">
            <summary>
            Gets and sets the property IntegerValue. 
            <para>
            When the <code>integerValue</code> type is set, the value of the resource must be
            an integer.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Resource.LongValue">
            <summary>
            Gets and sets the property LongValue. 
            <para>
            When the <code>longValue</code> type is set, the value of the resource must be an
            extended precision floating-point type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Resource.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the resource, such as <code>CPU</code>, <code>MEMORY</code>, <code>PORTS</code>,
            <code>PORTS_UDP</code>, or a user-defined resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Resource.StringSetValue">
            <summary>
            Gets and sets the property StringSetValue. 
            <para>
            When the <code>stringSetValue</code> type is set, the value of the resource must be
            a string type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Resource.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of the resource, such as <code>INTEGER</code>, <code>DOUBLE</code>, <code>LONG</code>,
            or <code>STRINGSET</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ResourceInUseException">
            <summary>
            The specified resource is in-use and cannot be removed.
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.ResourceInUseException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceInUseException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECS.Model.ResourceInUseException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceInUseException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ResourceInUseException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceInUseException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ResourceInUseException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceInUseException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ResourceInUseException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceInUseException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ResourceInUseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ResourceInUseException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.ECS.Model.ResourceInUseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.ECS.Model.ResourceNotFoundException">
            <summary>
            The specified resource could not be found.
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.ResourceNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECS.Model.ResourceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ResourceNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ResourceNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ResourceNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ResourceNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ResourceNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.ECS.Model.ResourceNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.ECS.Model.ResourceRequirement">
            <summary>
            The type and amount of a resource to assign to a container. The supported resource
            types are GPUs and Elastic Inference accelerators. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-gpu.html">Working
            with GPUs on Amazon ECS</a> or <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-inference.html">Working
            with Amazon Elastic Inference on Amazon ECS</a> in the <i>Amazon Elastic Container
            Service Developer Guide</i>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ResourceRequirement.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of resource to assign to a container. The supported values are <code>GPU</code>
            or <code>InferenceAccelerator</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ResourceRequirement.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The value for the specified resource type.
            </para>
             
            <para>
            If the <code>GPU</code> type is used, the value is the number of physical <code>GPUs</code>
            the Amazon ECS container agent will reserve for the container. The number of GPUs
            reserved for all containers in a task should not exceed the number of available GPUs
            on the container instance the task is launched on.
            </para>
             
            <para>
            If the <code>InferenceAccelerator</code> type is used, the <code>value</code> should
            match the <code>deviceName</code> for an <a>InferenceAccelerator</a> specified in
            a task definition.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.RunTaskRequest">
            <summary>
            Container for the parameters to the RunTask operation.
            Starts a new task using the specified task definition.
            
             
            <para>
            You can allow Amazon ECS to place tasks for you, or you can customize how Amazon ECS
            places tasks using placement constraints and placement strategies. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/scheduling_tasks.html">Scheduling
            Tasks</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            Alternatively, you can use <a>StartTask</a> to use your own scheduler or place tasks
            manually on specific container instances.
            </para>
             
            <para>
            The Amazon ECS API follows an eventual consistency model, due to the distributed nature
            of the system supporting the API. This means that the result of an API command you
            run that affects your Amazon ECS resources might not be immediately visible to all
            subsequent commands you run. Keep this in mind when you carry out an API command that
            immediately follows a previous API command.
            </para>
             
            <para>
            To manage eventual consistency, you can do the following:
            </para>
             <ul> <li> 
            <para>
            Confirm the state of the resource before you run a command to modify it. Run the DescribeTasks
            command using an exponential backoff algorithm to ensure that you allow enough time
            for the previous command to propagate through the system. To do this, run the DescribeTasks
            command repeatedly, starting with a couple of seconds of wait time and increasing
            gradually up to five minutes of wait time.
            </para>
             </li> <li> 
            <para>
            Add wait time between subsequent commands, even if the DescribeTasks command returns
            an accurate response. Apply an exponential backoff algorithm starting with a couple
            of seconds of wait time, and increase gradually up to about five minutes of wait time.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RunTaskRequest.CapacityProviderStrategy">
            <summary>
            Gets and sets the property CapacityProviderStrategy. 
            <para>
            The capacity provider strategy to use for the task.
            </para>
             
            <para>
            If a <code>capacityProviderStrategy</code> is specified, the <code>launchType</code>
            parameter must be omitted. If no <code>capacityProviderStrategy</code> or <code>launchType</code>
            is specified, the <code>defaultCapacityProviderStrategy</code> for the cluster is
            used.
            </para>
             
            <para>
            When you use cluster auto scaling, you must specify <code>capacityProviderStrategy</code>
            and not <code>launchType</code>. 
            </para>
             
            <para>
            A capacity provider strategy may contain a maximum of 6 capacity providers.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RunTaskRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the cluster on which to run your
            task. If you do not specify a cluster, the default cluster is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RunTaskRequest.Count">
            <summary>
            Gets and sets the property Count. 
            <para>
            The number of instantiations of the specified task to place on your cluster. You can
            specify up to 10 tasks per call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RunTaskRequest.EnableECSManagedTags">
            <summary>
            Gets and sets the property EnableECSManagedTags. 
            <para>
            Specifies whether to enable Amazon ECS managed tags for the task. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-using-tags.html">Tagging
            Your Amazon ECS Resources</a> in the <i>Amazon Elastic Container Service Developer
            Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RunTaskRequest.EnableExecuteCommand">
            <summary>
            Gets and sets the property EnableExecuteCommand. 
            <para>
            Whether or not to enable the execute command functionality for the containers in this
            task. If <code>true</code>, this enables execute command functionality on all containers
            in the task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RunTaskRequest.Group">
            <summary>
            Gets and sets the property Group. 
            <para>
            The name of the task group to associate with the task. The default value is the family
            name of the task definition (for example, <code>family:my-family-name</code>).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RunTaskRequest.LaunchType">
            <summary>
            Gets and sets the property LaunchType. 
            <para>
            The infrastructure on which to run your standalone task. For more information, see
            <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html">Amazon
            ECS launch types</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            The <code>FARGATE</code> launch type runs your tasks on Fargate On-Demand infrastructure.
            </para>
             <note> 
            <para>
            Fargate Spot infrastructure is available for use but a capacity provider strategy
            must be used. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/userguide/fargate-capacity-providers.html">Fargate
            capacity providers</a> in the <i>Amazon ECS User Guide for Fargate</i>.
            </para>
             </note> 
            <para>
            The <code>EC2</code> launch type runs your tasks on Amazon EC2 instances registered
            to your cluster.
            </para>
             
            <para>
            The <code>EXTERNAL</code> launch type runs your tasks on your on-premise server or
            virtual machine (VM) capacity registered to your cluster.
            </para>
             
            <para>
            A task can use either a launch type or a capacity provider strategy. If a <code>launchType</code>
            is specified, the <code>capacityProviderStrategy</code> parameter must be omitted.
            </para>
             
            <para>
            When you use cluster auto scaling, you must specify <code>capacityProviderStrategy</code>
            and not <code>launchType</code>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RunTaskRequest.NetworkConfiguration">
            <summary>
            Gets and sets the property NetworkConfiguration. 
            <para>
            The network configuration for the task. This parameter is required for task definitions
            that use the <code>awsvpc</code> network mode to receive their own elastic network
            interface, and it is not supported for other network modes. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-networking.html">Task
            networking</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RunTaskRequest.Overrides">
            <summary>
            Gets and sets the property Overrides. 
            <para>
            A list of container overrides in JSON format that specify the name of a container
            in the specified task definition and the overrides it should receive. You can override
            the default command for a container (that is specified in the task definition or Docker
            image) with a <code>command</code> override. You can also override existing environment
            variables (that are specified in the task definition or Docker image) on a container
            or add new environment variables to it with an <code>environment</code> override.
            </para>
             
            <para>
            A total of 8192 characters are allowed for overrides. This limit includes the JSON
            formatting characters of the override structure.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RunTaskRequest.PlacementConstraints">
            <summary>
            Gets and sets the property PlacementConstraints. 
            <para>
            An array of placement constraint objects to use for the task. You can specify up to
            10 constraints per task (including constraints in the task definition and those specified
            at runtime).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RunTaskRequest.PlacementStrategy">
            <summary>
            Gets and sets the property PlacementStrategy. 
            <para>
            The placement strategy objects to use for the task. You can specify a maximum of 5
            strategy rules per task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RunTaskRequest.PlatformVersion">
            <summary>
            Gets and sets the property PlatformVersion. 
            <para>
            The platform version the task should use. A platform version is only specified for
            tasks hosted on Fargate. If one is not specified, the <code>LATEST</code> platform
            version is used by default. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/platform_versions.html">Fargate
            platform versions</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RunTaskRequest.PropagateTags">
            <summary>
            Gets and sets the property PropagateTags. 
            <para>
            Specifies whether to propagate the tags from the task definition to the task. If no
            value is specified, the tags are not propagated. Tags can only be propagated to the
            task during task creation. To add tags to a task after task creation, use the <a>TagResource</a>
            API action.
            </para>
             <note> 
            <para>
            An error will be received if you specify the <code>SERVICE</code> option when running
            a task.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RunTaskRequest.ReferenceId">
            <summary>
            Gets and sets the property ReferenceId. 
            <para>
            The reference ID to use for the task. The reference ID can have a maximum length of
            1024 characters.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RunTaskRequest.StartedBy">
            <summary>
            Gets and sets the property StartedBy. 
            <para>
            An optional tag specified when a task is started. For example, if you automatically
            trigger a task to run a batch process job, you could apply a unique identifier for
            that job to your task with the <code>startedBy</code> parameter. You can then identify
            which tasks belong to that job by filtering the results of a <a>ListTasks</a> call
            with the <code>startedBy</code> value. Up to 36 letters (uppercase and lowercase),
            numbers, hyphens, and underscores are allowed.
            </para>
             
            <para>
            If a task is started by an Amazon ECS service, then the <code>startedBy</code> parameter
            contains the deployment ID of the service that starts it.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RunTaskRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The metadata that you apply to the task to help you categorize and organize them.
            Each tag consists of a key and an optional value, both of which you define.
            </para>
             
            <para>
            The following basic restrictions apply to tags:
            </para>
             <ul> <li> 
            <para>
            Maximum number of tags per resource - 50
            </para>
             </li> <li> 
            <para>
            For each resource, each tag key must be unique, and each tag key can have only one
            value.
            </para>
             </li> <li> 
            <para>
            Maximum key length - 128 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            Maximum value length - 256 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            If your tagging schema is used across multiple services and resources, remember that
            other services may have restrictions on allowed characters. Generally allowed characters
            are: letters, numbers, and spaces representable in UTF-8, and the following characters:
            + - = . _ : / @.
            </para>
             </li> <li> 
            <para>
            Tag keys and values are case-sensitive.
            </para>
             </li> <li> 
            <para>
            Do not use <code>aws:</code>, <code>AWS:</code>, or any upper or lowercase combination
            of such as a prefix for either keys or values as it is reserved for Amazon Web Services
            use. You cannot edit or delete tag keys or values with this prefix. Tags with this
            prefix do not count against your tags per resource limit.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RunTaskRequest.TaskDefinition">
            <summary>
            Gets and sets the property TaskDefinition. 
            <para>
            The <code>family</code> and <code>revision</code> (<code>family:revision</code>) or
            full ARN of the task definition to run. If a <code>revision</code> is not specified,
            the latest <code>ACTIVE</code> revision is used.
            </para>
             
            <para>
            The full ARN value must match the value that you specified ias the <code>Resource</code>
            of the IAM principal's permissions policy. For example, if the <code>Resource</code>
            is arn:aws:ecs:us-east-1:111122223333:task-definition/TaskFamilyName:*, the <code>taskDefinition</code>
            ARN value must be <code>arn:aws:ecs:us-east-1:111122223333:task-definition/TaskFamilyName</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.RunTaskResponse">
            <summary>
            This is the response object from the RunTask operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RunTaskResponse.Failures">
            <summary>
            Gets and sets the property Failures. 
            <para>
            Any failures associated with the call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RunTaskResponse.Tasks">
            <summary>
            Gets and sets the property Tasks. 
            <para>
            A full description of the tasks that were run. The tasks that were successfully placed
            on your cluster are described here.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Scale">
            <summary>
            A floating-point percentage of the desired number of tasks to place and keep running
            in the task set.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Scale.Unit">
            <summary>
            Gets and sets the property Unit. 
            <para>
            The unit of measure for the scale value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Scale.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The value, specified as a percent total of a service's <code>desiredCount</code>,
            to scale the task set. Accepted values are numbers between 0 and 100.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Secret">
            <summary>
            An object representing the secret to expose to your container. Secrets can be exposed
            to a container in the following ways:
            
             <ul> <li> 
            <para>
            To inject sensitive data into your containers as environment variables, use the <code>secrets</code>
            container definition parameter.
            </para>
             </li> <li> 
            <para>
            To reference sensitive information in the log configuration of a container, use the
            <code>secretOptions</code> container definition parameter.
            </para>
             </li> </ul> 
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/specifying-sensitive-data.html">Specifying
            Sensitive Data</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Secret.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the secret.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Secret.ValueFrom">
            <summary>
            Gets and sets the property ValueFrom. 
            <para>
            The secret to expose to the container. The supported values are either the full ARN
            of the Secrets Manager secret or the full ARN of the parameter in the SSM Parameter
            Store.
            </para>
             <note> 
            <para>
            If the SSM Parameter Store parameter exists in the same Region as the task you are
            launching, then you can use either the full ARN or name of the parameter. If the parameter
            exists in a different Region, then the full ARN must be specified.
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ServerException">
            <summary>
            These errors are usually caused by a server issue.
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.ServerException.#ctor(System.String)">
            <summary>
            Constructs a new ServerException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECS.Model.ServerException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ServerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ServerException.#ctor(System.Exception)">
            <summary>
            Construct instance of ServerException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ServerException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ServerException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServerException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ServerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ServerException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.ECS.Model.ServerException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.ECS.Model.Service">
            <summary>
            Details on a service within a cluster
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.CapacityProviderStrategy">
            <summary>
            Gets and sets the property CapacityProviderStrategy. 
            <para>
            The capacity provider strategy the service is using. When using the DescribeServices
            API, this field is omitted if the service was created using a launch type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.ClusterArn">
            <summary>
            Gets and sets the property ClusterArn. 
            <para>
            The Amazon Resource Name (ARN) of the cluster that hosts the service.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The Unix timestamp for when the service was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.CreatedBy">
            <summary>
            Gets and sets the property CreatedBy. 
            <para>
            The principal that created the service.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.DeploymentConfiguration">
            <summary>
            Gets and sets the property DeploymentConfiguration. 
            <para>
            Optional deployment parameters that control how many tasks run during the deployment
            and the ordering of stopping and starting tasks.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.DeploymentController">
            <summary>
            Gets and sets the property DeploymentController. 
            <para>
            The deployment controller type the service is using. When using the DescribeServices
            API, this field is omitted if the service is using the <code>ECS</code> deployment
            controller type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.Deployments">
            <summary>
            Gets and sets the property Deployments. 
            <para>
            The current state of deployments for the service.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.DesiredCount">
            <summary>
            Gets and sets the property DesiredCount. 
            <para>
            The desired number of instantiations of the task definition to keep running on the
            service. This value is specified when the service is created with <a>CreateService</a>,
            and it can be modified with <a>UpdateService</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.EnableECSManagedTags">
            <summary>
            Gets and sets the property EnableECSManagedTags. 
            <para>
            Specifies whether to enable Amazon ECS managed tags for the tasks in the service.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-using-tags.html">Tagging
            Your Amazon ECS Resources</a> in the <i>Amazon Elastic Container Service Developer
            Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.EnableExecuteCommand">
            <summary>
            Gets and sets the property EnableExecuteCommand. 
            <para>
            Whether or not the execute command functionality is enabled for the service. If <code>true</code>,
            the execute command functionality is enabled for all containers in tasks as part of
            the service.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.Events">
            <summary>
            Gets and sets the property Events. 
            <para>
            The event stream for your service. A maximum of 100 of the latest events are displayed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.HealthCheckGracePeriodSeconds">
            <summary>
            Gets and sets the property HealthCheckGracePeriodSeconds. 
            <para>
            The period of time, in seconds, that the Amazon ECS service scheduler ignores unhealthy
            Elastic Load Balancing target health checks after a task has first started.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.LaunchType">
            <summary>
            Gets and sets the property LaunchType. 
            <para>
            The launch type the service is using. When using the DescribeServices API, this field
            is omitted if the service was created using a capacity provider strategy.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.LoadBalancers">
            <summary>
            Gets and sets the property LoadBalancers. 
            <para>
            A list of Elastic Load Balancing load balancer objects, containing the load balancer
            name, the container name (as it appears in a container definition), and the container
            port to access from the load balancer.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.NetworkConfiguration">
            <summary>
            Gets and sets the property NetworkConfiguration. 
            <para>
            The VPC subnet and security group configuration for tasks that receive their own elastic
            network interface by using the <code>awsvpc</code> networking mode.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.PendingCount">
            <summary>
            Gets and sets the property PendingCount. 
            <para>
            The number of tasks in the cluster that are in the <code>PENDING</code> state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.PlacementConstraints">
            <summary>
            Gets and sets the property PlacementConstraints. 
            <para>
            The placement constraints for the tasks in the service.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.PlacementStrategy">
            <summary>
            Gets and sets the property PlacementStrategy. 
            <para>
            The placement strategy that determines how tasks for the service are placed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.PlatformVersion">
            <summary>
            Gets and sets the property PlatformVersion. 
            <para>
            The platform version on which to run your service. A platform version is only specified
            for tasks hosted on Fargate. If one is not specified, the <code>LATEST</code> platform
            version is used by default. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/platform_versions.html">Fargate
            Platform Versions</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.PropagateTags">
            <summary>
            Gets and sets the property PropagateTags. 
            <para>
            Specifies whether to propagate the tags from the task definition or the service to
            the task. If no value is specified, the tags are not propagated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The ARN of the IAM role associated with the service that allows the Amazon ECS container
            agent to register container instances with an Elastic Load Balancing load balancer.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.RunningCount">
            <summary>
            Gets and sets the property RunningCount. 
            <para>
            The number of tasks in the cluster that are in the <code>RUNNING</code> state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.SchedulingStrategy">
            <summary>
            Gets and sets the property SchedulingStrategy. 
            <para>
            The scheduling strategy to use for the service. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs_services.html">Services</a>.
            </para>
             
            <para>
            There are two service scheduler strategies available:
            </para>
             <ul> <li> 
            <para>
             <code>REPLICA</code>-The replica scheduling strategy places and maintains the desired
            number of tasks across your cluster. By default, the service scheduler spreads tasks
            across Availability Zones. You can use task placement strategies and constraints to
            customize task placement decisions.
            </para>
             </li> <li> 
            <para>
             <code>DAEMON</code>-The daemon scheduling strategy deploys exactly one task on each
            active container instance that meets all of the task placement constraints that you
            specify in your cluster. The service scheduler also evaluates the task placement constraints
            for running tasks and will stop tasks that do not meet the placement constraints.
            </para>
             <note> 
            <para>
            Fargate tasks do not support the <code>DAEMON</code> scheduling strategy.
            </para>
             </note> </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.ServiceArn">
            <summary>
            Gets and sets the property ServiceArn. 
            <para>
            The ARN that identifies the service. The ARN contains the <code>arn:aws:ecs</code>
            namespace, followed by the Region of the service, the Amazon Web Services account
            ID of the service owner, the <code>service</code> namespace, and then the service
            name. For example, <code>arn:aws:ecs:region:012345678910:service/my-service</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.ServiceName">
            <summary>
            Gets and sets the property ServiceName. 
            <para>
            The name of your service. Up to 255 letters (uppercase and lowercase), numbers, underscores,
            and hyphens are allowed. Service names must be unique within a cluster, but you can
            have similarly named services in multiple clusters within a Region or across multiple
            Regions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.ServiceRegistries">
            <summary>
            Gets and sets the property ServiceRegistries. 
            <para>
            The details of the service discovery registries to assign to this service. For more
            information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-discovery.html">Service
            Discovery</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the service. The valid values are <code>ACTIVE</code>, <code>DRAINING</code>,
            or <code>INACTIVE</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The metadata that you apply to the service to help you categorize and organize them.
            Each tag consists of a key and an optional value, both of which you define.
            </para>
             
            <para>
            The following basic restrictions apply to tags:
            </para>
             <ul> <li> 
            <para>
            Maximum number of tags per resource - 50
            </para>
             </li> <li> 
            <para>
            For each resource, each tag key must be unique, and each tag key can have only one
            value.
            </para>
             </li> <li> 
            <para>
            Maximum key length - 128 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            Maximum value length - 256 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            If your tagging schema is used across multiple services and resources, remember that
            other services may have restrictions on allowed characters. Generally allowed characters
            are: letters, numbers, and spaces representable in UTF-8, and the following characters:
            + - = . _ : / @.
            </para>
             </li> <li> 
            <para>
            Tag keys and values are case-sensitive.
            </para>
             </li> <li> 
            <para>
            Do not use <code>aws:</code>, <code>AWS:</code>, or any upper or lowercase combination
            of such as a prefix for either keys or values as it is reserved for Amazon Web Services
            use. You cannot edit or delete tag keys or values with this prefix. Tags with this
            prefix do not count against your tags per resource limit.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.TaskDefinition">
            <summary>
            Gets and sets the property TaskDefinition. 
            <para>
            The task definition to use for tasks in the service. This value is specified when
            the service is created with <a>CreateService</a>, and it can be modified with <a>UpdateService</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.TaskSets">
            <summary>
            Gets and sets the property TaskSets. 
            <para>
            Information about a set of Amazon ECS tasks in either an CodeDeploy or an <code>EXTERNAL</code>
            deployment. An Amazon ECS task set includes details such as the desired number of
            tasks, how many tasks are running, and whether the task set serves production traffic.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ServiceEvent">
            <summary>
            Details on an event associated with a service.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceEvent.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The Unix timestamp for when the event was triggered.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceEvent.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            The ID string of the event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceEvent.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            The event message.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ServiceNotActiveException">
            <summary>
            The specified service is not active. You can't update a service that is inactive.
            If you have previously deleted a service, you can re-create it with <a>CreateService</a>.
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.ServiceNotActiveException.#ctor(System.String)">
            <summary>
            Constructs a new ServiceNotActiveException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECS.Model.ServiceNotActiveException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ServiceNotActiveException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ServiceNotActiveException.#ctor(System.Exception)">
            <summary>
            Construct instance of ServiceNotActiveException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ServiceNotActiveException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceNotActiveException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ServiceNotActiveException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceNotActiveException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ServiceNotActiveException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ServiceNotActiveException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.ECS.Model.ServiceNotActiveException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.ECS.Model.ServiceNotFoundException">
            <summary>
            The specified service could not be found. You can view your available services with
            <a>ListServices</a>. Amazon ECS services are cluster-specific and Region-specific.
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.ServiceNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ServiceNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECS.Model.ServiceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ServiceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ServiceNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of ServiceNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ServiceNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ServiceNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ServiceNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ServiceNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.ECS.Model.ServiceNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.ECS.Model.ServiceRegistry">
            <summary>
            Details of the service registry.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceRegistry.ContainerName">
            <summary>
            Gets and sets the property ContainerName. 
            <para>
            The container name value, already specified in the task definition, to be used for
            your service discovery service. If the task definition that your service task specifies
            uses the <code>bridge</code> or <code>host</code> network mode, you must specify a
            <code>containerName</code> and <code>containerPort</code> combination from the task
            definition. If the task definition that your service task specifies uses the <code>awsvpc</code>
            network mode and a type SRV DNS record is used, you must specify either a <code>containerName</code>
            and <code>containerPort</code> combination or a <code>port</code> value, but not both.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceRegistry.ContainerPort">
            <summary>
            Gets and sets the property ContainerPort. 
            <para>
            The port value, already specified in the task definition, to be used for your service
            discovery service. If the task definition your service task specifies uses the <code>bridge</code>
            or <code>host</code> network mode, you must specify a <code>containerName</code> and
            <code>containerPort</code> combination from the task definition. If the task definition
            your service task specifies uses the <code>awsvpc</code> network mode and a type SRV
            DNS record is used, you must specify either a <code>containerName</code> and <code>containerPort</code>
            combination or a <code>port</code> value, but not both.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceRegistry.Port">
            <summary>
            Gets and sets the property Port. 
            <para>
            The port value used if your service discovery service specified an SRV record. This
            field may be used if both the <code>awsvpc</code> network mode and SRV records are
            used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceRegistry.RegistryArn">
            <summary>
            Gets and sets the property RegistryArn. 
            <para>
            The Amazon Resource Name (ARN) of the service registry. The currently supported service
            registry is Cloud Map. For more information, see <a href="https://docs.aws.amazon.com/cloud-map/latest/api/API_CreateService.html">CreateService</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Session">
            <summary>
            The details of the execute command session.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Session.SessionId">
            <summary>
            Gets and sets the property SessionId. 
            <para>
            The ID of the execute command session.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Session.StreamUrl">
            <summary>
            Gets and sets the property StreamUrl. 
            <para>
            A URL back to managed agent on the container that the SSM Session Manager client uses
            to send commands and receive output from the container.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Session.TokenValue">
            <summary>
            Gets and sets the property TokenValue. 
            <para>
            An encrypted token value containing session and caller information. Used to authenticate
            the connection to the container.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Setting">
            <summary>
            The current account setting for a resource.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Setting.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The Amazon ECS resource name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Setting.PrincipalArn">
            <summary>
            Gets and sets the property PrincipalArn. 
            <para>
            The ARN of the principal, which can be an IAM user, IAM role, or the root user. If
            this field is omitted, the authenticated user is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Setting.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            Whether the account setting is enabled or disabled for the specified resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.StartTaskRequest">
            <summary>
            Container for the parameters to the StartTask operation.
            Starts a new task from the specified task definition on the specified container instance
            or instances.
            
             
            <para>
            Alternatively, you can use <a>RunTask</a> to place tasks for you. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/scheduling_tasks.html">Scheduling
            Tasks</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.StartTaskRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the cluster on which to start
            your task. If you do not specify a cluster, the default cluster is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.StartTaskRequest.ContainerInstances">
            <summary>
            Gets and sets the property ContainerInstances. 
            <para>
            The container instance IDs or full ARN entries for the container instances on which
            you would like to place your task. You can specify up to 10 container instances.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.StartTaskRequest.EnableECSManagedTags">
            <summary>
            Gets and sets the property EnableECSManagedTags. 
            <para>
            Specifies whether to enable Amazon ECS managed tags for the task. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-using-tags.html">Tagging
            Your Amazon ECS Resources</a> in the <i>Amazon Elastic Container Service Developer
            Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.StartTaskRequest.EnableExecuteCommand">
            <summary>
            Gets and sets the property EnableExecuteCommand. 
            <para>
            Whether or not the execute command functionality is enabled for the task. If <code>true</code>,
            this enables execute command functionality on all containers in the task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.StartTaskRequest.Group">
            <summary>
            Gets and sets the property Group. 
            <para>
            The name of the task group to associate with the task. The default value is the family
            name of the task definition (for example, family:my-family-name).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.StartTaskRequest.NetworkConfiguration">
            <summary>
            Gets and sets the property NetworkConfiguration. 
            <para>
            The VPC subnet and security group configuration for tasks that receive their own elastic
            network interface by using the <code>awsvpc</code> networking mode.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.StartTaskRequest.Overrides">
            <summary>
            Gets and sets the property Overrides. 
            <para>
            A list of container overrides in JSON format that specify the name of a container
            in the specified task definition and the overrides it should receive. You can override
            the default command for a container (that is specified in the task definition or Docker
            image) with a <code>command</code> override. You can also override existing environment
            variables (that are specified in the task definition or Docker image) on a container
            or add new environment variables to it with an <code>environment</code> override.
            </para>
             <note> 
            <para>
            A total of 8192 characters are allowed for overrides. This limit includes the JSON
            formatting characters of the override structure.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.StartTaskRequest.PropagateTags">
            <summary>
            Gets and sets the property PropagateTags. 
            <para>
            Specifies whether to propagate the tags from the task definition or the service to
            the task. If no value is specified, the tags are not propagated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.StartTaskRequest.ReferenceId">
            <summary>
            Gets and sets the property ReferenceId. 
            <para>
            The reference ID to use for the task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.StartTaskRequest.StartedBy">
            <summary>
            Gets and sets the property StartedBy. 
            <para>
            An optional tag specified when a task is started. For example, if you automatically
            trigger a task to run a batch process job, you could apply a unique identifier for
            that job to your task with the <code>startedBy</code> parameter. You can then identify
            which tasks belong to that job by filtering the results of a <a>ListTasks</a> call
            with the <code>startedBy</code> value. Up to 36 letters (uppercase and lowercase),
            numbers, hyphens, and underscores are allowed.
            </para>
             
            <para>
            If a task is started by an Amazon ECS service, then the <code>startedBy</code> parameter
            contains the deployment ID of the service that starts it.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.StartTaskRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The metadata that you apply to the task to help you categorize and organize them.
            Each tag consists of a key and an optional value, both of which you define.
            </para>
             
            <para>
            The following basic restrictions apply to tags:
            </para>
             <ul> <li> 
            <para>
            Maximum number of tags per resource - 50
            </para>
             </li> <li> 
            <para>
            For each resource, each tag key must be unique, and each tag key can have only one
            value.
            </para>
             </li> <li> 
            <para>
            Maximum key length - 128 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            Maximum value length - 256 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            If your tagging schema is used across multiple services and resources, remember that
            other services may have restrictions on allowed characters. Generally allowed characters
            are: letters, numbers, and spaces representable in UTF-8, and the following characters:
            + - = . _ : / @.
            </para>
             </li> <li> 
            <para>
            Tag keys and values are case-sensitive.
            </para>
             </li> <li> 
            <para>
            Do not use <code>aws:</code>, <code>AWS:</code>, or any upper or lowercase combination
            of such as a prefix for either keys or values as it is reserved for Amazon Web Services
            use. You cannot edit or delete tag keys or values with this prefix. Tags with this
            prefix do not count against your tags per resource limit.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.StartTaskRequest.TaskDefinition">
            <summary>
            Gets and sets the property TaskDefinition. 
            <para>
            The <code>family</code> and <code>revision</code> (<code>family:revision</code>) or
            full ARN of the task definition to start. If a <code>revision</code> is not specified,
            the latest <code>ACTIVE</code> revision is used.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.StartTaskResponse">
            <summary>
            This is the response object from the StartTask operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.StartTaskResponse.Failures">
            <summary>
            Gets and sets the property Failures. 
            <para>
            Any failures associated with the call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.StartTaskResponse.Tasks">
            <summary>
            Gets and sets the property Tasks. 
            <para>
            A full description of the tasks that were started. Each task that was successfully
            placed on your container instances is described.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.StopTaskRequest">
            <summary>
            Container for the parameters to the StopTask operation.
            Stops a running task. Any tags associated with the task will be deleted.
            
             
            <para>
            When <a>StopTask</a> is called on a task, the equivalent of <code>docker stop</code>
            is issued to the containers running in the task. This results in a <code>SIGTERM</code>
            value and a default 30-second timeout, after which the <code>SIGKILL</code> value
            is sent and the containers are forcibly stopped. If the container handles the <code>SIGTERM</code>
            value gracefully and exits within 30 seconds from receiving it, no <code>SIGKILL</code>
            value is sent.
            </para>
             <note> 
            <para>
            The default 30-second timeout can be configured on the Amazon ECS container agent
            with the <code>ECS_CONTAINER_STOP_TIMEOUT</code> variable. For more information, see
            <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-config.html">Amazon
            ECS Container Agent Configuration</a> in the <i>Amazon Elastic Container Service Developer
            Guide</i>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.StopTaskRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the cluster that hosts the task
            to stop. If you do not specify a cluster, the default cluster is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.StopTaskRequest.Reason">
            <summary>
            Gets and sets the property Reason. 
            <para>
            An optional message specified when a task is stopped. For example, if you are using
            a custom scheduler, you can use this parameter to specify the reason for stopping
            the task here, and the message appears in subsequent <a>DescribeTasks</a> API operations
            on this task. Up to 255 characters are allowed in this message.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.StopTaskRequest.Task">
            <summary>
            Gets and sets the property Task. 
            <para>
            The task ID or full Amazon Resource Name (ARN) of the task to stop.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.StopTaskResponse">
            <summary>
            This is the response object from the StopTask operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.StopTaskResponse.Task">
            <summary>
            Gets and sets the property Task. 
            <para>
            The task that was stopped.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.SubmitAttachmentStateChangesRequest">
            <summary>
            Container for the parameters to the SubmitAttachmentStateChanges operation.
            <note> 
            <para>
            This action is only used by the Amazon ECS agent, and it is not intended for use outside
            of the agent.
            </para>
             </note> 
            <para>
            Sent to acknowledge that an attachment changed states.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.SubmitAttachmentStateChangesRequest.Attachments">
            <summary>
            Gets and sets the property Attachments. 
            <para>
            Any attachments associated with the state change request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.SubmitAttachmentStateChangesRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full ARN of the cluster that hosts the container instance the attachment
            belongs to.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.SubmitAttachmentStateChangesResponse">
            <summary>
            This is the response object from the SubmitAttachmentStateChanges operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.SubmitAttachmentStateChangesResponse.Acknowledgment">
            <summary>
            Gets and sets the property Acknowledgment. 
            <para>
            Acknowledgement of the state change.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.SystemControl">
            <summary>
            A list of namespaced kernel parameters to set in the container. This parameter maps
            to <code>Sysctls</code> in the <a href="https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.35/">Docker
            Remote API</a> and the <code>--sysctl</code> option to <a href="https://docs.docker.com/engine/reference/run/#security-configuration">docker
            run</a>.
            
             
            <para>
            It is not recommended that you specify network-related <code>systemControls</code>
            parameters for multiple containers in a single task that also uses either the <code>awsvpc</code>
            or <code>host</code> network mode for the following reasons:
            </para>
             <ul> <li> 
            <para>
            For tasks that use the <code>awsvpc</code> network mode, if you set <code>systemControls</code>
            for any container, it applies to all containers in the task. If you set different
            <code>systemControls</code> for multiple containers in a single task, the container
            that is started last determines which <code>systemControls</code> take effect.
            </para>
             </li> <li> 
            <para>
            For tasks that use the <code>host</code> network mode, the <code>systemControls</code>
            parameter applies to the container instance's kernel parameter as well as that of
            all containers of any tasks running on that container instance.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.SystemControl.Namespace">
            <summary>
            Gets and sets the property Namespace. 
            <para>
            The namespaced kernel parameter for which to set a <code>value</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.SystemControl.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The value for the namespaced kernel parameter specified in <code>namespace</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Tag">
            <summary>
            The metadata that you apply to a resource to help you categorize and organize them.
            Each tag consists of a key and an optional value, both of which you define.
            
             
            <para>
            The following basic restrictions apply to tags:
            </para>
             <ul> <li> 
            <para>
            Maximum number of tags per resource - 50
            </para>
             </li> <li> 
            <para>
            For each resource, each tag key must be unique, and each tag key can have only one
            value.
            </para>
             </li> <li> 
            <para>
            Maximum key length - 128 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            Maximum value length - 256 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            If your tagging schema is used across multiple services and resources, remember that
            other services may have restrictions on allowed characters. Generally allowed characters
            are: letters, numbers, and spaces representable in UTF-8, and the following characters:
            + - = . _ : / @.
            </para>
             </li> <li> 
            <para>
            Tag keys and values are case-sensitive.
            </para>
             </li> <li> 
            <para>
            Do not use <code>aws:</code>, <code>AWS:</code>, or any upper or lowercase combination
            of such as a prefix for either keys or values as it is reserved for Amazon Web Services
            use. You cannot edit or delete tag keys or values with this prefix. Tags with this
            prefix do not count against your tags per resource limit.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Tag.Key">
            <summary>
            Gets and sets the property Key. 
            <para>
            One part of a key-value pair that make up a tag. A <code>key</code> is a general label
            that acts like a category for more specific tag values.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Tag.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The optional part of a key-value pair that make up a tag. A <code>value</code> acts
            as a descriptor within a tag category (key).
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.TagResourceRequest">
            <summary>
            Container for the parameters to the TagResource operation.
            Associates the specified tags to a resource with the specified <code>resourceArn</code>.
            If existing tags on a resource are not specified in the request parameters, they are
            not changed. When a resource is deleted, the tags associated with that resource are
            deleted as well.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TagResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The Amazon Resource Name (ARN) of the resource to which to add tags. Currently, the
            supported resources are Amazon ECS capacity providers, tasks, services, task definitions,
            clusters, and container instances.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TagResourceRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags to add to the resource. A tag is an array of key-value pairs.
            </para>
             
            <para>
            The following basic restrictions apply to tags:
            </para>
             <ul> <li> 
            <para>
            Maximum number of tags per resource - 50
            </para>
             </li> <li> 
            <para>
            For each resource, each tag key must be unique, and each tag key can have only one
            value.
            </para>
             </li> <li> 
            <para>
            Maximum key length - 128 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            Maximum value length - 256 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            If your tagging schema is used across multiple services and resources, remember that
            other services may have restrictions on allowed characters. Generally allowed characters
            are: letters, numbers, and spaces representable in UTF-8, and the following characters:
            + - = . _ : / @.
            </para>
             </li> <li> 
            <para>
            Tag keys and values are case-sensitive.
            </para>
             </li> <li> 
            <para>
            Do not use <code>aws:</code>, <code>AWS:</code>, or any upper or lowercase combination
            of such as a prefix for either keys or values as it is reserved for Amazon Web Services
            use. You cannot edit or delete tag keys or values with this prefix. Tags with this
            prefix do not count against your tags per resource limit.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.TagResourceResponse">
            <summary>
            This is the response object from the TagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.TargetNotConnectedException">
            <summary>
            The target container is not properly configured with the execute command agent or
            the container is no longer active or running.
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.TargetNotConnectedException.#ctor(System.String)">
            <summary>
            Constructs a new TargetNotConnectedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECS.Model.TargetNotConnectedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of TargetNotConnectedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.TargetNotConnectedException.#ctor(System.Exception)">
            <summary>
            Construct instance of TargetNotConnectedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.TargetNotConnectedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TargetNotConnectedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.TargetNotConnectedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TargetNotConnectedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.TargetNotConnectedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the TargetNotConnectedException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.ECS.Model.TargetNotConnectedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.ECS.Model.TargetNotFoundException">
            <summary>
            The specified target could not be found. You can view your available container instances
            with <a>ListContainerInstances</a>. Amazon ECS container instances are cluster-specific
            and Region-specific.
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.TargetNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new TargetNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECS.Model.TargetNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of TargetNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.TargetNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of TargetNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.TargetNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TargetNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.TargetNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TargetNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.TargetNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the TargetNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.ECS.Model.TargetNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.ECS.Model.Task">
            <summary>
            Details on a task in a cluster.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.Attachments">
            <summary>
            Gets and sets the property Attachments. 
            <para>
            The Elastic Network Adapter associated with the task if the task uses the <code>awsvpc</code>
            network mode.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.Attributes">
            <summary>
            Gets and sets the property Attributes. 
            <para>
            The attributes of the task
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.AvailabilityZone">
            <summary>
            Gets and sets the property AvailabilityZone. 
            <para>
            The availability zone of the task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.CapacityProviderName">
            <summary>
            Gets and sets the property CapacityProviderName. 
            <para>
            The capacity provider associated with the task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.ClusterArn">
            <summary>
            Gets and sets the property ClusterArn. 
            <para>
            The ARN of the cluster that hosts the task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.Connectivity">
            <summary>
            Gets and sets the property Connectivity. 
            <para>
            The connectivity status of a task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.ConnectivityAt">
            <summary>
            Gets and sets the property ConnectivityAt. 
            <para>
            The Unix timestamp for when the task last went into <code>CONNECTED</code> status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.ContainerInstanceArn">
            <summary>
            Gets and sets the property ContainerInstanceArn. 
            <para>
            The ARN of the container instances that host the task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.Containers">
            <summary>
            Gets and sets the property Containers. 
            <para>
            The containers associated with the task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.Cpu">
            <summary>
            Gets and sets the property Cpu. 
            <para>
            The number of CPU units used by the task as expressed in a task definition. It can
            be expressed as an integer using CPU units, for example <code>1024</code>. It can
            also be expressed as a string using vCPUs, for example <code>1 vCPU</code> or <code>1
            vcpu</code>. String values are converted to an integer indicating the CPU units when
            the task definition is registered.
            </para>
             
            <para>
            If you are using the EC2 launch type, this field is optional. Supported values are
            between <code>128</code> CPU units (<code>0.125</code> vCPUs) and <code>10240</code>
            CPU units (<code>10</code> vCPUs).
            </para>
             
            <para>
            If you are using the Fargate launch type, this field is required and you must use
            one of the following values, which determines your range of supported values for the
            <code>memory</code> parameter:
            </para>
             <ul> <li> 
            <para>
            256 (.25 vCPU) - Available <code>memory</code> values: 512 (0.5 GB), 1024 (1 GB),
            2048 (2 GB)
            </para>
             </li> <li> 
            <para>
            512 (.5 vCPU) - Available <code>memory</code> values: 1024 (1 GB), 2048 (2 GB), 3072
            (3 GB), 4096 (4 GB)
            </para>
             </li> <li> 
            <para>
            1024 (1 vCPU) - Available <code>memory</code> values: 2048 (2 GB), 3072 (3 GB), 4096
            (4 GB), 5120 (5 GB), 6144 (6 GB), 7168 (7 GB), 8192 (8 GB)
            </para>
             </li> <li> 
            <para>
            2048 (2 vCPU) - Available <code>memory</code> values: Between 4096 (4 GB) and 16384
            (16 GB) in increments of 1024 (1 GB)
            </para>
             </li> <li> 
            <para>
            4096 (4 vCPU) - Available <code>memory</code> values: Between 8192 (8 GB) and 30720
            (30 GB) in increments of 1024 (1 GB)
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The Unix timestamp for when the task was created (the task entered the <code>PENDING</code>
            state).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.DesiredStatus">
            <summary>
            Gets and sets the property DesiredStatus. 
            <para>
            The desired status of the task. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-lifecycle.html">Task
            Lifecycle</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.EnableExecuteCommand">
            <summary>
            Gets and sets the property EnableExecuteCommand. 
            <para>
            Whether or not execute command functionality is enabled for this task. If <code>true</code>,
            this enables execute command functionality on all containers in the task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.EphemeralStorage">
            <summary>
            Gets and sets the property EphemeralStorage. 
            <para>
            The ephemeral storage settings for the task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.ExecutionStoppedAt">
            <summary>
            Gets and sets the property ExecutionStoppedAt. 
            <para>
            The Unix timestamp for when the task execution stopped.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.Group">
            <summary>
            Gets and sets the property Group. 
            <para>
            The name of the task group associated with the task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.HealthStatus">
            <summary>
            Gets and sets the property HealthStatus. 
            <para>
            The health status for the task, which is determined by the health of the essential
            containers in the task. If all essential containers in the task are reporting as <code>HEALTHY</code>,
            then the task status also reports as <code>HEALTHY</code>. If any essential containers
            in the task are reporting as <code>UNHEALTHY</code> or <code>UNKNOWN</code>, then
            the task status also reports as <code>UNHEALTHY</code> or <code>UNKNOWN</code>, accordingly.
            </para>
             <note> 
            <para>
            The Amazon ECS container agent does not monitor or report on Docker health checks
            that are embedded in a container image (such as those specified in a parent image
            or from the image's Dockerfile) and not specified in the container definition. Health
            check parameters that are specified in a container definition override any Docker
            health checks that exist in the container image.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.InferenceAccelerators">
            <summary>
            Gets and sets the property InferenceAccelerators. 
            <para>
            The Elastic Inference accelerator associated with the task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.LastStatus">
            <summary>
            Gets and sets the property LastStatus. 
            <para>
            The last known status of the task. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-lifecycle.html">Task
            Lifecycle</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.LaunchType">
            <summary>
            Gets and sets the property LaunchType. 
            <para>
            The infrastructure on which your task is running. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html">Amazon
            ECS launch types</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.Memory">
            <summary>
            Gets and sets the property Memory. 
            <para>
            The amount of memory (in MiB) used by the task as expressed in a task definition.
            It can be expressed as an integer using MiB, for example <code>1024</code>. It can
            also be expressed as a string using GB, for example <code>1GB</code> or <code>1 GB</code>.
            String values are converted to an integer indicating the MiB when the task definition
            is registered.
            </para>
             
            <para>
            If you are using the EC2 launch type, this field is optional.
            </para>
             
            <para>
            If you are using the Fargate launch type, this field is required and you must use
            one of the following values, which determines your range of supported values for the
            <code>cpu</code> parameter:
            </para>
             <ul> <li> 
            <para>
            512 (0.5 GB), 1024 (1 GB), 2048 (2 GB) - Available <code>cpu</code> values: 256 (.25
            vCPU)
            </para>
             </li> <li> 
            <para>
            1024 (1 GB), 2048 (2 GB), 3072 (3 GB), 4096 (4 GB) - Available <code>cpu</code> values:
            512 (.5 vCPU)
            </para>
             </li> <li> 
            <para>
            2048 (2 GB), 3072 (3 GB), 4096 (4 GB), 5120 (5 GB), 6144 (6 GB), 7168 (7 GB), 8192
            (8 GB) - Available <code>cpu</code> values: 1024 (1 vCPU)
            </para>
             </li> <li> 
            <para>
            Between 4096 (4 GB) and 16384 (16 GB) in increments of 1024 (1 GB) - Available <code>cpu</code>
            values: 2048 (2 vCPU)
            </para>
             </li> <li> 
            <para>
            Between 8192 (8 GB) and 30720 (30 GB) in increments of 1024 (1 GB) - Available <code>cpu</code>
            values: 4096 (4 vCPU)
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.Overrides">
            <summary>
            Gets and sets the property Overrides. 
            <para>
            One or more container overrides.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.PlatformVersion">
            <summary>
            Gets and sets the property PlatformVersion. 
            <para>
            The platform version on which your task is running. A platform version is only specified
            for tasks using the Fargate launch type. If one is not specified, the <code>LATEST</code>
            platform version is used by default. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/platform_versions.html">Fargate
            Platform Versions</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.PullStartedAt">
            <summary>
            Gets and sets the property PullStartedAt. 
            <para>
            The Unix timestamp for when the container image pull began.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.PullStoppedAt">
            <summary>
            Gets and sets the property PullStoppedAt. 
            <para>
            The Unix timestamp for when the container image pull completed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.StartedAt">
            <summary>
            Gets and sets the property StartedAt. 
            <para>
            The Unix timestamp for when the task started (the task transitioned from the <code>PENDING</code>
            state to the <code>RUNNING</code> state).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.StartedBy">
            <summary>
            Gets and sets the property StartedBy. 
            <para>
            The tag specified when a task is started. If the task is started by an Amazon ECS
            service, then the <code>startedBy</code> parameter contains the deployment ID of the
            service that starts it.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.StopCode">
            <summary>
            Gets and sets the property StopCode. 
            <para>
            The stop code indicating why a task was stopped. The <code>stoppedReason</code> may
            contain additional details.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.StoppedAt">
            <summary>
            Gets and sets the property StoppedAt. 
            <para>
            The Unix timestamp for when the task was stopped (the task transitioned from the <code>RUNNING</code>
            state to the <code>STOPPED</code> state).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.StoppedReason">
            <summary>
            Gets and sets the property StoppedReason. 
            <para>
            The reason that the task was stopped.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.StoppingAt">
            <summary>
            Gets and sets the property StoppingAt. 
            <para>
            The Unix timestamp for when the task stops (transitions from the <code>RUNNING</code>
            state to <code>STOPPED</code>).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The metadata that you apply to the task to help you categorize and organize them.
            Each tag consists of a key and an optional value, both of which you define.
            </para>
             
            <para>
            The following basic restrictions apply to tags:
            </para>
             <ul> <li> 
            <para>
            Maximum number of tags per resource - 50
            </para>
             </li> <li> 
            <para>
            For each resource, each tag key must be unique, and each tag key can have only one
            value.
            </para>
             </li> <li> 
            <para>
            Maximum key length - 128 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            Maximum value length - 256 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            If your tagging schema is used across multiple services and resources, remember that
            other services may have restrictions on allowed characters. Generally allowed characters
            are: letters, numbers, and spaces representable in UTF-8, and the following characters:
            + - = . _ : / @.
            </para>
             </li> <li> 
            <para>
            Tag keys and values are case-sensitive.
            </para>
             </li> <li> 
            <para>
            Do not use <code>aws:</code>, <code>AWS:</code>, or any upper or lowercase combination
            of such as a prefix for either keys or values as it is reserved for Amazon Web Services
            use. You cannot edit or delete tag keys or values with this prefix. Tags with this
            prefix do not count against your tags per resource limit.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.TaskArn">
            <summary>
            Gets and sets the property TaskArn. 
            <para>
            The Amazon Resource Name (ARN) of the task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.TaskDefinitionArn">
            <summary>
            Gets and sets the property TaskDefinitionArn. 
            <para>
            The ARN of the task definition that creates the task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            The version counter for the task. Every time a task experiences a change that triggers
            a CloudWatch event, the version counter is incremented. If you are replicating your
            Amazon ECS task state with CloudWatch Events, you can compare the version of a task
            reported by the Amazon ECS API actions with the version reported in CloudWatch Events
            for the task (inside the <code>detail</code> object) to verify that the version in
            your event stream is current.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.TaskDefinition">
            <summary>
            The details of a task definition which describes the container and volume definitions
            of an Amazon Elastic Container Service task. You can specify which Docker images to
            use, the required resources, and other configurations related to launching the task
            definition through an Amazon ECS service or task.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskDefinition.Compatibilities">
            <summary>
            Gets and sets the property Compatibilities. 
            <para>
            The task launch types the task definition validated against during task definition
            registration. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html">Amazon
            ECS launch types</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskDefinition.ContainerDefinitions">
            <summary>
            Gets and sets the property ContainerDefinitions. 
            <para>
            A list of container definitions in JSON format that describe the different containers
            that make up your task. For more information about container definition parameters
            and defaults, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_defintions.html">Amazon
            ECS Task Definitions</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskDefinition.Cpu">
            <summary>
            Gets and sets the property Cpu. 
            <para>
            The number of <code>cpu</code> units used by the task. If you are using the EC2 launch
            type, this field is optional and any value can be used. If you are using the Fargate
            launch type, this field is required and you must use one of the following values,
            which determines your range of valid values for the <code>memory</code> parameter:
            </para>
             <ul> <li> 
            <para>
            256 (.25 vCPU) - Available <code>memory</code> values: 512 (0.5 GB), 1024 (1 GB),
            2048 (2 GB)
            </para>
             </li> <li> 
            <para>
            512 (.5 vCPU) - Available <code>memory</code> values: 1024 (1 GB), 2048 (2 GB), 3072
            (3 GB), 4096 (4 GB)
            </para>
             </li> <li> 
            <para>
            1024 (1 vCPU) - Available <code>memory</code> values: 2048 (2 GB), 3072 (3 GB), 4096
            (4 GB), 5120 (5 GB), 6144 (6 GB), 7168 (7 GB), 8192 (8 GB)
            </para>
             </li> <li> 
            <para>
            2048 (2 vCPU) - Available <code>memory</code> values: Between 4096 (4 GB) and 16384
            (16 GB) in increments of 1024 (1 GB)
            </para>
             </li> <li> 
            <para>
            4096 (4 vCPU) - Available <code>memory</code> values: Between 8192 (8 GB) and 30720
            (30 GB) in increments of 1024 (1 GB)
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskDefinition.DeregisteredAt">
            <summary>
            Gets and sets the property DeregisteredAt. 
            <para>
            The Unix timestamp for when the task definition was deregistered.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskDefinition.EphemeralStorage">
            <summary>
            Gets and sets the property EphemeralStorage. 
            <para>
            The ephemeral storage settings to use for tasks run with the task definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskDefinition.ExecutionRoleArn">
            <summary>
            Gets and sets the property ExecutionRoleArn. 
            <para>
            The Amazon Resource Name (ARN) of the task execution role that grants the Amazon ECS
            container agent permission to make Amazon Web Services API calls on your behalf. The
            task execution IAM role is required depending on the requirements of your task. For
            more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_execution_IAM_role.html">Amazon
            ECS task execution IAM role</a> in the <i>Amazon Elastic Container Service Developer
            Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskDefinition.Family">
            <summary>
            Gets and sets the property Family. 
            <para>
            The name of a family that this task definition is registered to. Up to 255 letters
            (uppercase and lowercase), numbers, hyphens, and underscores are allowed.
            </para>
             
            <para>
            A family groups multiple versions of a task definition. Amazon ECS gives the first
            task definition that you registered to a family a revision number of 1. Amazon ECS
            gives sequential revision numbers to each task definition that you add.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskDefinition.InferenceAccelerators">
            <summary>
            Gets and sets the property InferenceAccelerators. 
            <para>
            The Elastic Inference accelerator associated with the task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskDefinition.IpcMode">
            <summary>
            Gets and sets the property IpcMode. 
            <para>
            The IPC resource namespace to use for the containers in the task. The valid values
            are <code>host</code>, <code>task</code>, or <code>none</code>. If <code>host</code>
            is specified, then all containers within the tasks that specified the <code>host</code>
            IPC mode on the same container instance share the same IPC resources with the host
            Amazon EC2 instance. If <code>task</code> is specified, all containers within the
            specified task share the same IPC resources. If <code>none</code> is specified, then
            IPC resources within the containers of a task are private and not shared with other
            containers in a task or on the container instance. If no value is specified, then
            the IPC resource namespace sharing depends on the Docker daemon setting on the container
            instance. For more information, see <a href="https://docs.docker.com/engine/reference/run/#ipc-settings---ipc">IPC
            settings</a> in the <i>Docker run reference</i>.
            </para>
             
            <para>
            If the <code>host</code> IPC mode is used, be aware that there is a heightened risk
            of undesired IPC namespace expose. For more information, see <a href="https://docs.docker.com/engine/security/security/">Docker
            security</a>.
            </para>
             
            <para>
            If you are setting namespaced kernel parameters using <code>systemControls</code>
            for the containers in the task, the following will apply to your IPC resource namespace.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definition_parameters.html">System
            Controls</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             <ul> <li> 
            <para>
            For tasks that use the <code>host</code> IPC mode, IPC namespace related <code>systemControls</code>
            are not supported.
            </para>
             </li> <li> 
            <para>
            For tasks that use the <code>task</code> IPC mode, IPC namespace related <code>systemControls</code>
            will apply to all containers within a task.
            </para>
             </li> </ul> <note> 
            <para>
            This parameter is not supported for Windows containers or tasks run on Fargate.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskDefinition.Memory">
            <summary>
            Gets and sets the property Memory. 
            <para>
            The amount (in MiB) of memory used by the task.
            </para>
             
            <para>
            If your tasks will be run on Amazon EC2 instances, you must specify either a task-level
            memory value or a container-level memory value. This field is optional and any value
            can be used. If a task-level memory value is specified then the container-level memory
            value is optional. For more information regarding container-level memory and memory
            reservation, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ContainerDefinition.html">ContainerDefinition</a>.
            </para>
             
            <para>
            If your tasks will be run on Fargate, this field is required and you must use one
            of the following values, which determines your range of valid values for the <code>cpu</code>
            parameter:
            </para>
             <ul> <li> 
            <para>
            512 (0.5 GB), 1024 (1 GB), 2048 (2 GB) - Available <code>cpu</code> values: 256 (.25
            vCPU)
            </para>
             </li> <li> 
            <para>
            1024 (1 GB), 2048 (2 GB), 3072 (3 GB), 4096 (4 GB) - Available <code>cpu</code> values:
            512 (.5 vCPU)
            </para>
             </li> <li> 
            <para>
            2048 (2 GB), 3072 (3 GB), 4096 (4 GB), 5120 (5 GB), 6144 (6 GB), 7168 (7 GB), 8192
            (8 GB) - Available <code>cpu</code> values: 1024 (1 vCPU)
            </para>
             </li> <li> 
            <para>
            Between 4096 (4 GB) and 16384 (16 GB) in increments of 1024 (1 GB) - Available <code>cpu</code>
            values: 2048 (2 vCPU)
            </para>
             </li> <li> 
            <para>
            Between 8192 (8 GB) and 30720 (30 GB) in increments of 1024 (1 GB) - Available <code>cpu</code>
            values: 4096 (4 vCPU)
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskDefinition.NetworkMode">
            <summary>
            Gets and sets the property NetworkMode. 
            <para>
            The Docker networking mode to use for the containers in the task. The valid values
            are <code>none</code>, <code>bridge</code>, <code>awsvpc</code>, and <code>host</code>.
            If no network mode is specified, the default is <code>bridge</code>.
            </para>
             
            <para>
            For Amazon ECS tasks on Fargate, the <code>awsvpc</code> network mode is required.
            For Amazon ECS tasks on Amazon EC2 Linux instances, any network mode can be used.
            For Amazon ECS tasks on Amazon EC2 Windows instances, <code>&lt;default&gt;</code>
            or <code>awsvpc</code> can be used. If the network mode is set to <code>none</code>,
            you cannot specify port mappings in your container definitions, and the tasks containers
            do not have external connectivity. The <code>host</code> and <code>awsvpc</code> network
            modes offer the highest networking performance for containers because they use the
            EC2 network stack instead of the virtualized network stack provided by the <code>bridge</code>
            mode.
            </para>
             
            <para>
            With the <code>host</code> and <code>awsvpc</code> network modes, exposed container
            ports are mapped directly to the corresponding host port (for the <code>host</code>
            network mode) or the attached elastic network interface port (for the <code>awsvpc</code>
            network mode), so you cannot take advantage of dynamic host port mappings. 
            </para>
             <important> 
            <para>
            When using the <code>host</code> network mode, you should not run containers using
            the root user (UID 0). It is considered best practice to use a non-root user.
            </para>
             </important> 
            <para>
            If the network mode is <code>awsvpc</code>, the task is allocated an elastic network
            interface, and you must specify a <a>NetworkConfiguration</a> value when you create
            a service or run a task with the task definition. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-networking.html">Task
            Networking</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            If the network mode is <code>host</code>, you cannot run multiple instantiations of
            the same task on a single container instance when port mappings are used.
            </para>
             
            <para>
            For more information, see <a href="https://docs.docker.com/engine/reference/run/#network-settings">Network
            settings</a> in the <i>Docker run reference</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskDefinition.PidMode">
            <summary>
            Gets and sets the property PidMode. 
            <para>
            The process namespace to use for the containers in the task. The valid values are
            <code>host</code> or <code>task</code>. If <code>host</code> is specified, then all
            containers within the tasks that specified the <code>host</code> PID mode on the same
            container instance share the same process namespace with the host Amazon EC2 instance.
            If <code>task</code> is specified, all containers within the specified task share
            the same process namespace. If no value is specified, the default is a private namespace.
            For more information, see <a href="https://docs.docker.com/engine/reference/run/#pid-settings---pid">PID
            settings</a> in the <i>Docker run reference</i>.
            </para>
             
            <para>
            If the <code>host</code> PID mode is used, be aware that there is a heightened risk
            of undesired process namespace expose. For more information, see <a href="https://docs.docker.com/engine/security/security/">Docker
            security</a>.
            </para>
             <note> 
            <para>
            This parameter is not supported for Windows containers or tasks run on Fargate.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskDefinition.PlacementConstraints">
            <summary>
            Gets and sets the property PlacementConstraints. 
            <para>
            An array of placement constraint objects to use for tasks.
            </para>
             <note> 
            <para>
            This parameter is not supported for tasks run on Fargate.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskDefinition.ProxyConfiguration">
            <summary>
            Gets and sets the property ProxyConfiguration. 
            <para>
            The configuration details for the App Mesh proxy.
            </para>
             
            <para>
            Your Amazon ECS container instances require at least version 1.26.0 of the container
            agent and at least version 1.26.0-1 of the <code>ecs-init</code> package to enable
            a proxy configuration. If your container instances are launched from the Amazon ECS-optimized
            AMI version <code>20190301</code> or later, then they contain the required versions
            of the container agent and <code>ecs-init</code>. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-optimized_AMI.html">Amazon
            ECS-optimized Linux AMI</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskDefinition.RegisteredAt">
            <summary>
            Gets and sets the property RegisteredAt. 
            <para>
            The Unix timestamp for when the task definition was registered.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskDefinition.RegisteredBy">
            <summary>
            Gets and sets the property RegisteredBy. 
            <para>
            The principal that registered the task definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskDefinition.RequiresAttributes">
            <summary>
            Gets and sets the property RequiresAttributes. 
            <para>
            The container instance attributes required by your task. When an Amazon EC2 instance
            is registered to your cluster, the Amazon ECS container agent assigns some standard
            attributes to the instance. You can apply custom attributes, specified as key-value
            pairs using the Amazon ECS console or the <a>PutAttributes</a> API. These attributes
            are used when considering task placement for tasks hosted on Amazon EC2 instances.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-constraints.html#attributes">Attributes</a>
            in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             <note> 
            <para>
            This parameter is not supported for tasks run on Fargate.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskDefinition.RequiresCompatibilities">
            <summary>
            Gets and sets the property RequiresCompatibilities. 
            <para>
            The task launch types the task definition was validated against. To determine which
            task launch types the task definition is validated for, see the <a>TaskDefinition$compatibilities</a>
            parameter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskDefinition.Revision">
            <summary>
            Gets and sets the property Revision. 
            <para>
            The revision of the task in a particular family. The revision is a version number
            of a task definition in a family. When you register a task definition for the first
            time, the revision is <code>1</code>. Each time that you register a new revision of
            a task definition in the same family, the revision value always increases by one,
            even if you have deregistered previous revisions in this family.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskDefinition.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the task definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskDefinition.TaskDefinitionArn">
            <summary>
            Gets and sets the property TaskDefinitionArn. 
            <para>
            The full Amazon Resource Name (ARN) of the task definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskDefinition.TaskRoleArn">
            <summary>
            Gets and sets the property TaskRoleArn. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the Identity and Access Management
            role that grants containers in the task permission to call Amazon Web Services APIs
            on your behalf. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-iam-roles.html">Amazon
            ECS Task Role</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            IAM roles for tasks on Windows require that the <code>-EnableTaskIAMRole</code> option
            is set when you launch the Amazon ECS-optimized Windows AMI. Your containers must
            also run some configuration code in order to take advantage of the feature. For more
            information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/windows_task_IAM_roles.html">Windows
            IAM roles for tasks</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskDefinition.Volumes">
            <summary>
            Gets and sets the property Volumes. 
            <para>
            The list of data volume definitions for the task. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using_data_volumes.html">Using
            data volumes in tasks</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             <note> 
            <para>
            The <code>host</code> and <code>sourcePath</code> parameters are not supported for
            tasks run on Fargate.
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.TaskDefinitionPlacementConstraint">
            <summary>
            An object representing a constraint on task placement in the task definition. For
            more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-constraints.html">Task
            placement constraints</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            
             <note> 
            <para>
            Task placement constraints are not supported for tasks run on Fargate.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskDefinitionPlacementConstraint.Expression">
            <summary>
            Gets and sets the property Expression. 
            <para>
            A cluster query language expression to apply to the constraint. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cluster-query-language.html">Cluster
            query language</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskDefinitionPlacementConstraint.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of constraint. The <code>MemberOf</code> constraint restricts selection to
            be from a group of valid candidates.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.TaskOverride">
            <summary>
            The overrides associated with a task.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskOverride.ContainerOverrides">
            <summary>
            Gets and sets the property ContainerOverrides. 
            <para>
            One or more container overrides sent to a task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskOverride.Cpu">
            <summary>
            Gets and sets the property Cpu. 
            <para>
            The cpu override for the task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskOverride.EphemeralStorage">
            <summary>
            Gets and sets the property EphemeralStorage. 
            <para>
            The ephemeral storage setting override for the task.
            </para>
             <note> 
            <para>
            This parameter is only supported for tasks hosted on Fargate using platform version
            <code>1.4.0</code> or later.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskOverride.ExecutionRoleArn">
            <summary>
            Gets and sets the property ExecutionRoleArn. 
            <para>
            The Amazon Resource Name (ARN) of the task execution IAM role override for the task.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_execution_IAM_role.html">Amazon
            ECS task execution IAM role</a> in the <i>Amazon Elastic Container Service Developer
            Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskOverride.InferenceAcceleratorOverrides">
            <summary>
            Gets and sets the property InferenceAcceleratorOverrides. 
            <para>
            The Elastic Inference accelerator override for the task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskOverride.Memory">
            <summary>
            Gets and sets the property Memory. 
            <para>
            The memory override for the task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskOverride.TaskRoleArn">
            <summary>
            Gets and sets the property TaskRoleArn. 
            <para>
            The Amazon Resource Name (ARN) of the IAM role that containers in this task can assume.
            All containers in this task are granted the permissions that are specified in this
            role. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-iam-roles.html">IAM
            Role for Tasks</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.TaskSet">
            <summary>
            Information about a set of Amazon ECS tasks in either an CodeDeploy or an <code>EXTERNAL</code>
            deployment. An Amazon ECS task set includes details such as the desired number of
            tasks, how many tasks are running, and whether the task set serves production traffic.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskSet.CapacityProviderStrategy">
            <summary>
            Gets and sets the property CapacityProviderStrategy. 
            <para>
            The capacity provider strategy associated with the task set.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskSet.ClusterArn">
            <summary>
            Gets and sets the property ClusterArn. 
            <para>
            The Amazon Resource Name (ARN) of the cluster that the service that hosts the task
            set exists in.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskSet.ComputedDesiredCount">
            <summary>
            Gets and sets the property ComputedDesiredCount. 
            <para>
            The computed desired count for the task set. This is calculated by multiplying the
            service's <code>desiredCount</code> by the task set's <code>scale</code> percentage.
            The result is always rounded up. For example, if the computed desired count is 1.2,
            it rounds up to 2 tasks.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskSet.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The Unix timestamp for when the task set was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskSet.ExternalId">
            <summary>
            Gets and sets the property ExternalId. 
            <para>
            The external ID associated with the task set.
            </para>
             
            <para>
            If a task set is created by an CodeDeploy deployment, the <code>externalId</code>
            parameter contains the CodeDeploy deployment ID.
            </para>
             
            <para>
            If a task set is created for an external deployment and is associated with a service
            discovery registry, the <code>externalId</code> parameter contains the <code>ECS_TASK_SET_EXTERNAL_ID</code>
            Cloud Map attribute.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskSet.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            The ID of the task set.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskSet.LaunchType">
            <summary>
            Gets and sets the property LaunchType. 
            <para>
            The launch type the tasks in the task set are using. For more information, see <a
            href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html">Amazon
            ECS launch types</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskSet.LoadBalancers">
            <summary>
            Gets and sets the property LoadBalancers. 
            <para>
            Details on a load balancer that is used with a task set.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskSet.NetworkConfiguration">
            <summary>
            Gets and sets the property NetworkConfiguration. 
            <para>
            The network configuration for the task set.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskSet.PendingCount">
            <summary>
            Gets and sets the property PendingCount. 
            <para>
            The number of tasks in the task set that are in the <code>PENDING</code> status during
            a deployment. A task in the <code>PENDING</code> state is preparing to enter the <code>RUNNING</code>
            state. A task set enters the <code>PENDING</code> status when it launches for the
            first time or when it is restarted after being in the <code>STOPPED</code> state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskSet.PlatformVersion">
            <summary>
            Gets and sets the property PlatformVersion. 
            <para>
            The Fargate platform version on which the tasks in the task set are running. A platform
            version is only specified for tasks run on Fargate. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/platform_versions.html">Fargate
            platform versions</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskSet.RunningCount">
            <summary>
            Gets and sets the property RunningCount. 
            <para>
            The number of tasks in the task set that are in the <code>RUNNING</code> status during
            a deployment. A task in the <code>RUNNING</code> state is running and ready for use.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskSet.Scale">
            <summary>
            Gets and sets the property Scale. 
            <para>
            A floating-point percentage of the desired number of tasks to place and keep running
            in the task set.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskSet.ServiceArn">
            <summary>
            Gets and sets the property ServiceArn. 
            <para>
            The Amazon Resource Name (ARN) of the service the task set exists in.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskSet.ServiceRegistries">
            <summary>
            Gets and sets the property ServiceRegistries. 
            <para>
            The details of the service discovery registries to assign to this task set. For more
            information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-discovery.html">Service
            discovery</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskSet.StabilityStatus">
            <summary>
            Gets and sets the property StabilityStatus. 
            <para>
            The stability status, which indicates whether the task set has reached a steady state.
            If the following conditions are met, the task set will be in <code>STEADY_STATE</code>:
            </para>
             <ul> <li> 
            <para>
            The task <code>runningCount</code> is equal to the <code>computedDesiredCount</code>.
            </para>
             </li> <li> 
            <para>
            The <code>pendingCount</code> is <code>0</code>.
            </para>
             </li> <li> 
            <para>
            There are no tasks running on container instances in the <code>DRAINING</code> status.
            </para>
             </li> <li> 
            <para>
            All tasks are reporting a healthy status from the load balancers, service discovery,
            and container health checks.
            </para>
             </li> </ul> 
            <para>
            If any of those conditions are not met, the stability status returns <code>STABILIZING</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskSet.StabilityStatusAt">
            <summary>
            Gets and sets the property StabilityStatusAt. 
            <para>
            The Unix timestamp for when the task set stability status was retrieved.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskSet.StartedBy">
            <summary>
            Gets and sets the property StartedBy. 
            <para>
            The tag specified when a task set is started. If the task set is created by an CodeDeploy
            deployment, the <code>startedBy</code> parameter is <code>CODE_DEPLOY</code>. For
            a task set created for an external deployment, the startedBy field isn't used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskSet.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the task set. The following describes each state:
            </para>
             <dl> <dt>PRIMARY</dt> <dd> 
            <para>
            The task set is serving production traffic.
            </para>
             </dd> <dt>ACTIVE</dt> <dd> 
            <para>
            The task set is not serving production traffic.
            </para>
             </dd> <dt>DRAINING</dt> <dd> 
            <para>
            The tasks in the task set are being stopped and their corresponding targets are being
            deregistered from their target group.
            </para>
             </dd> </dl>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskSet.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The metadata that you apply to the task set to help you categorize and organize them.
            Each tag consists of a key and an optional value, both of which you define.
            </para>
             
            <para>
            The following basic restrictions apply to tags:
            </para>
             <ul> <li> 
            <para>
            Maximum number of tags per resource - 50
            </para>
             </li> <li> 
            <para>
            For each resource, each tag key must be unique, and each tag key can have only one
            value.
            </para>
             </li> <li> 
            <para>
            Maximum key length - 128 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            Maximum value length - 256 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            If your tagging schema is used across multiple services and resources, remember that
            other services may have restrictions on allowed characters. Generally allowed characters
            are: letters, numbers, and spaces representable in UTF-8, and the following characters:
            + - = . _ : / @.
            </para>
             </li> <li> 
            <para>
            Tag keys and values are case-sensitive.
            </para>
             </li> <li> 
            <para>
            Do not use <code>aws:</code>, <code>AWS:</code>, or any upper or lowercase combination
            of such as a prefix for either keys or values as it is reserved for Amazon Web Services
            use. You cannot edit or delete tag keys or values with this prefix. Tags with this
            prefix do not count against your tags per resource limit.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskSet.TaskDefinition">
            <summary>
            Gets and sets the property TaskDefinition. 
            <para>
            The task definition the task set is using.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskSet.TaskSetArn">
            <summary>
            Gets and sets the property TaskSetArn. 
            <para>
            The Amazon Resource Name (ARN) of the task set.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskSet.UpdatedAt">
            <summary>
            Gets and sets the property UpdatedAt. 
            <para>
            The Unix timestamp for when the task set was last updated.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.TaskSetNotFoundException">
            <summary>
            The specified task set could not be found. You can view your available task sets with
            <a>DescribeTaskSets</a>. Task sets are specific to each cluster, service and Region.
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.TaskSetNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new TaskSetNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECS.Model.TaskSetNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of TaskSetNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.TaskSetNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of TaskSetNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.TaskSetNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TaskSetNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.TaskSetNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TaskSetNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.TaskSetNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the TaskSetNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.ECS.Model.TaskSetNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.ECS.Model.Tmpfs">
            <summary>
            The container path, mount options, and size of the tmpfs mount.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Tmpfs.ContainerPath">
            <summary>
            Gets and sets the property ContainerPath. 
            <para>
            The absolute file path where the tmpfs volume is to be mounted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Tmpfs.MountOptions">
            <summary>
            Gets and sets the property MountOptions. 
            <para>
            The list of tmpfs volume mount options.
            </para>
             
            <para>
            Valid values: <code>"defaults" | "ro" | "rw" | "suid" | "nosuid" | "dev" | "nodev"
            | "exec" | "noexec" | "sync" | "async" | "dirsync" | "remount" | "mand" | "nomand"
            | "atime" | "noatime" | "diratime" | "nodiratime" | "bind" | "rbind" | "unbindable"
            | "runbindable" | "private" | "rprivate" | "shared" | "rshared" | "slave" | "rslave"
            | "relatime" | "norelatime" | "strictatime" | "nostrictatime" | "mode" | "uid" | "gid"
            | "nr_inodes" | "nr_blocks" | "mpol"</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Tmpfs.Size">
            <summary>
            Gets and sets the property Size. 
            <para>
            The maximum size (in MiB) of the tmpfs volume.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Ulimit">
            <summary>
            The <code>ulimit</code> settings to pass to the container.
            
             
            <para>
            Amazon ECS tasks hosted on Fargate use the default resource limit values set by the
            operating system with the exception of the <code>nofile</code> resource limit parameter
            which Fargate overrides. The <code>nofile</code> resource limit sets a restriction
            on the number of open files that a container can use. The default <code>nofile</code>
            soft limit is <code>1024</code> and hard limit is <code>4096</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Ulimit.HardLimit">
            <summary>
            Gets and sets the property HardLimit. 
            <para>
            The hard limit for the ulimit type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Ulimit.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The <code>type</code> of the <code>ulimit</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Ulimit.SoftLimit">
            <summary>
            Gets and sets the property SoftLimit. 
            <para>
            The soft limit for the ulimit type.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.UnsupportedFeatureException">
            <summary>
            The specified task is not supported in this Region.
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.UnsupportedFeatureException.#ctor(System.String)">
            <summary>
            Constructs a new UnsupportedFeatureException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECS.Model.UnsupportedFeatureException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of UnsupportedFeatureException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.UnsupportedFeatureException.#ctor(System.Exception)">
            <summary>
            Construct instance of UnsupportedFeatureException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.UnsupportedFeatureException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UnsupportedFeatureException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.UnsupportedFeatureException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UnsupportedFeatureException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.UnsupportedFeatureException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the UnsupportedFeatureException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.ECS.Model.UnsupportedFeatureException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.ECS.Model.UntagResourceRequest">
            <summary>
            Container for the parameters to the UntagResource operation.
            Deletes specified tags from a resource.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UntagResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The Amazon Resource Name (ARN) of the resource from which to delete tags. Currently,
            the supported resources are Amazon ECS capacity providers, tasks, services, task definitions,
            clusters, and container instances.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UntagResourceRequest.TagKeys">
            <summary>
            Gets and sets the property TagKeys. 
            <para>
            The keys of the tags to be removed.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.UntagResourceResponse">
            <summary>
            This is the response object from the UntagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.UpdateCapacityProviderRequest">
            <summary>
            Container for the parameters to the UpdateCapacityProvider operation.
            Modifies the parameters for a capacity provider.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateCapacityProviderRequest.AutoScalingGroupProvider">
            <summary>
            Gets and sets the property AutoScalingGroupProvider. 
            <para>
            An object representing the parameters to update for the Auto Scaling group capacity
            provider.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateCapacityProviderRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the capacity provider to update.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.UpdateCapacityProviderResponse">
            <summary>
            This is the response object from the UpdateCapacityProvider operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateCapacityProviderResponse.CapacityProvider">
            <summary>
            Gets and sets the property CapacityProvider. 
            <para>
            Details about the capacity provider.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.UpdateClusterRequest">
            <summary>
            Container for the parameters to the UpdateCluster operation.
            Updates the cluster.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateClusterRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The name of the cluster to modify the settings for.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateClusterRequest.Configuration">
            <summary>
            Gets and sets the property Configuration. 
            <para>
            The execute command configuration for the cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateClusterRequest.Settings">
            <summary>
            Gets and sets the property Settings. 
            <para>
            The cluster settings for your cluster.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.UpdateClusterResponse">
            <summary>
            This is the response object from the UpdateCluster operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateClusterResponse.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            Details about the cluster.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.UpdateClusterSettingsRequest">
            <summary>
            Container for the parameters to the UpdateClusterSettings operation.
            Modifies the settings to use for a cluster.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateClusterSettingsRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The name of the cluster to modify the settings for.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateClusterSettingsRequest.Settings">
            <summary>
            Gets and sets the property Settings. 
            <para>
            The setting to use by default for a cluster. This parameter is used to enable CloudWatch
            Container Insights for a cluster. If this value is specified, it will override the
            <code>containerInsights</code> value set with <a>PutAccountSetting</a> or <a>PutAccountSettingDefault</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.UpdateClusterSettingsResponse">
            <summary>
            This is the response object from the UpdateClusterSettings operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateClusterSettingsResponse.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            Details about the cluster
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.UpdateContainerAgentRequest">
            <summary>
            Container for the parameters to the UpdateContainerAgent operation.
            Updates the Amazon ECS container agent on a specified container instance. Updating
            the Amazon ECS container agent does not interrupt running tasks or services on the
            container instance. The process for updating the agent differs depending on whether
            your container instance was launched with the Amazon ECS-optimized AMI or another
            operating system.
            
             <note> 
            <para>
            The <code>UpdateContainerAgent</code> API isn't supported for container instances
            using the Amazon ECS-optimized Amazon Linux 2 (arm64) AMI. To update the container
            agent, you can update the <code>ecs-init</code> package which will update the agent.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/agent-update-ecs-ami.html">Updating
            the Amazon ECS container agent</a> in the <i>Amazon Elastic Container Service Developer
            Guide</i>.
            </para>
             </note> 
            <para>
            The <code>UpdateContainerAgent</code> API requires an Amazon ECS-optimized AMI or
            Amazon Linux AMI with the <code>ecs-init</code> service installed and running. For
            help updating the Amazon ECS container agent on other operating systems, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-update.html#manually_update_agent">Manually
            updating the Amazon ECS container agent</a> in the <i>Amazon Elastic Container Service
            Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateContainerAgentRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the cluster that your container
            instance is running on. If you do not specify a cluster, the default cluster is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateContainerAgentRequest.ContainerInstance">
            <summary>
            Gets and sets the property ContainerInstance. 
            <para>
            The container instance ID or full ARN entries for the container instance on which
            you would like to update the Amazon ECS container agent.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.UpdateContainerAgentResponse">
            <summary>
            This is the response object from the UpdateContainerAgent operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateContainerAgentResponse.ContainerInstance">
            <summary>
            Gets and sets the property ContainerInstance. 
            <para>
            The container instance for which the container agent was updated.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.UpdateContainerInstancesStateRequest">
            <summary>
            Container for the parameters to the UpdateContainerInstancesState operation.
            Modifies the status of an Amazon ECS container instance.
            
             
            <para>
            Once a container instance has reached an <code>ACTIVE</code> state, you can change
            the status of a container instance to <code>DRAINING</code> to manually remove an
            instance from a cluster, for example to perform system updates, update the Docker
            daemon, or scale down the cluster size.
            </para>
             <important> 
            <para>
            A container instance cannot be changed to <code>DRAINING</code> until it has reached
            an <code>ACTIVE</code> status. If the instance is in any other status, an error will
            be received.
            </para>
             </important> 
            <para>
            When you set a container instance to <code>DRAINING</code>, Amazon ECS prevents new
            tasks from being scheduled for placement on the container instance and replacement
            service tasks are started on other container instances in the cluster if the resources
            are available. Service tasks on the container instance that are in the <code>PENDING</code>
            state are stopped immediately.
            </para>
             
            <para>
            Service tasks on the container instance that are in the <code>RUNNING</code> state
            are stopped and replaced according to the service's deployment configuration parameters,
            <code>minimumHealthyPercent</code> and <code>maximumPercent</code>. You can change
            the deployment configuration of your service using <a>UpdateService</a>.
            </para>
             <ul> <li> 
            <para>
            If <code>minimumHealthyPercent</code> is below 100%, the scheduler can ignore <code>desiredCount</code>
            temporarily during task replacement. For example, <code>desiredCount</code> is four
            tasks, a minimum of 50% allows the scheduler to stop two existing tasks before starting
            two new tasks. If the minimum is 100%, the service scheduler can't remove existing
            tasks until the replacement tasks are considered healthy. Tasks for services that
            do not use a load balancer are considered healthy if they are in the <code>RUNNING</code>
            state. Tasks for services that use a load balancer are considered healthy if they
            are in the <code>RUNNING</code> state and the container instance they are hosted on
            is reported as healthy by the load balancer.
            </para>
             </li> <li> 
            <para>
            The <code>maximumPercent</code> parameter represents an upper limit on the number
            of running tasks during task replacement, which enables you to define the replacement
            batch size. For example, if <code>desiredCount</code> is four tasks, a maximum of
            200% starts four new tasks before stopping the four tasks to be drained, provided
            that the cluster resources required to do this are available. If the maximum is 100%,
            then replacement tasks can't start until the draining tasks have stopped.
            </para>
             </li> </ul> 
            <para>
            Any <code>PENDING</code> or <code>RUNNING</code> tasks that do not belong to a service
            are not affected. You must wait for them to finish or stop them manually.
            </para>
             
            <para>
            A container instance has completed draining when it has no more <code>RUNNING</code>
            tasks. You can verify this using <a>ListTasks</a>.
            </para>
             
            <para>
            When a container instance has been drained, you can set a container instance to <code>ACTIVE</code>
            status and once it has reached that status the Amazon ECS scheduler can begin scheduling
            tasks on the instance again.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateContainerInstancesStateRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the cluster that hosts the container
            instance to update. If you do not specify a cluster, the default cluster is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateContainerInstancesStateRequest.ContainerInstances">
            <summary>
            Gets and sets the property ContainerInstances. 
            <para>
            A list of container instance IDs or full ARN entries.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateContainerInstancesStateRequest.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The container instance state with which to update the container instance. The only
            valid values for this action are <code>ACTIVE</code> and <code>DRAINING</code>. A
            container instance can only be updated to <code>DRAINING</code> status once it has
            reached an <code>ACTIVE</code> state. If a container instance is in <code>REGISTERING</code>,
            <code>DEREGISTERING</code>, or <code>REGISTRATION_FAILED</code> state you can describe
            the container instance but will be unable to update the container instance state.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.UpdateContainerInstancesStateResponse">
            <summary>
            This is the response object from the UpdateContainerInstancesState operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateContainerInstancesStateResponse.ContainerInstances">
            <summary>
            Gets and sets the property ContainerInstances. 
            <para>
            The list of container instances.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateContainerInstancesStateResponse.Failures">
            <summary>
            Gets and sets the property Failures. 
            <para>
            Any failures associated with the call.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.UpdateInProgressException">
            <summary>
            There is already a current Amazon ECS container agent update in progress on the specified
            container instance. If the container agent becomes disconnected while it is in a transitional
            stage, such as <code>PENDING</code> or <code>STAGING</code>, the update process can
            get stuck in that state. However, when the agent reconnects, it resumes where it stopped
            previously.
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.UpdateInProgressException.#ctor(System.String)">
            <summary>
            Constructs a new UpdateInProgressException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECS.Model.UpdateInProgressException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of UpdateInProgressException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.UpdateInProgressException.#ctor(System.Exception)">
            <summary>
            Construct instance of UpdateInProgressException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.UpdateInProgressException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UpdateInProgressException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.UpdateInProgressException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UpdateInProgressException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.UpdateInProgressException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the UpdateInProgressException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.ECS.Model.UpdateInProgressException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.ECS.Model.UpdateServicePrimaryTaskSetRequest">
            <summary>
            Container for the parameters to the UpdateServicePrimaryTaskSet operation.
            Modifies which task set in a service is the primary task set. Any parameters that
            are updated on the primary task set in a service will transition to the service. This
            is used when a service uses the <code>EXTERNAL</code> deployment controller type.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-types.html">Amazon
            ECS Deployment Types</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateServicePrimaryTaskSetRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the cluster that hosts the service
            that the task set exists in.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateServicePrimaryTaskSetRequest.PrimaryTaskSet">
            <summary>
            Gets and sets the property PrimaryTaskSet. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the task set to set as the primary
            task set in the deployment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateServicePrimaryTaskSetRequest.Service">
            <summary>
            Gets and sets the property Service. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the service that the task set
            exists in.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.UpdateServicePrimaryTaskSetResponse">
            <summary>
            This is the response object from the UpdateServicePrimaryTaskSet operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateServicePrimaryTaskSetResponse.TaskSet">
            <summary>
            Gets and sets the property TaskSet. 
            <para>
            Details about the task set.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.UpdateServiceRequest">
            <summary>
            Container for the parameters to the UpdateService operation.
            <important> 
            <para>
            Updating the task placement strategies and constraints on an Amazon ECS service remains
            in preview and is a Beta Service as defined by and subject to the Beta Service Participation
            Service Terms located at <a href="https://aws.amazon.com/service-terms">https://aws.amazon.com/service-terms</a>
            ("Beta Terms"). These Beta Terms apply to your participation in this preview.
            </para>
             </important> 
            <para>
            Modifies the parameters of a service.
            </para>
             
            <para>
            For services using the rolling update (<code>ECS</code>) deployment controller, the
            desired count, deployment configuration, network configuration, task placement constraints
            and strategies, or task definition used can be updated.
            </para>
             
            <para>
            For services using the blue/green (<code>CODE_DEPLOY</code>) deployment controller,
            only the desired count, deployment configuration, task placement constraints and strategies,
            and health check grace period can be updated using this API. If the network configuration,
            platform version, or task definition need to be updated, a new CodeDeploy deployment
            should be created. For more information, see <a href="https://docs.aws.amazon.com/codedeploy/latest/APIReference/API_CreateDeployment.html">CreateDeployment</a>
            in the <i>CodeDeploy API Reference</i>.
            </para>
             
            <para>
            For services using an external deployment controller, you can update only the desired
            count, task placement constraints and strategies, and health check grace period using
            this API. If the launch type, load balancer, network configuration, platform version,
            or task definition need to be updated, you should create a new task set. For more
            information, see <a>CreateTaskSet</a>.
            </para>
             
            <para>
            You can add to or subtract from the number of instantiations of a task definition
            in a service by specifying the cluster that the service is running in and a new <code>desiredCount</code>
            parameter.
            </para>
             
            <para>
            If you have updated the Docker image of your application, you can create a new task
            definition with that image and deploy it to your service. The service scheduler uses
            the minimum healthy percent and maximum percent parameters (in the service's deployment
            configuration) to determine the deployment strategy.
            </para>
             <note> 
            <para>
            If your updated Docker image uses the same tag as what is in the existing task definition
            for your service (for example, <code>my_image:latest</code>), you do not need to create
            a new revision of your task definition. You can update the service using the <code>forceNewDeployment</code>
            option. The new tasks launched by the deployment pull the current image/tag combination
            from your repository when they start.
            </para>
             </note> 
            <para>
            You can also update the deployment configuration of a service. When a deployment is
            triggered by updating the task definition of a service, the service scheduler uses
            the deployment configuration parameters, <code>minimumHealthyPercent</code> and <code>maximumPercent</code>,
            to determine the deployment strategy.
            </para>
             <ul> <li> 
            <para>
            If <code>minimumHealthyPercent</code> is below 100%, the scheduler can ignore <code>desiredCount</code>
            temporarily during a deployment. For example, if <code>desiredCount</code> is four
            tasks, a minimum of 50% allows the scheduler to stop two existing tasks before starting
            two new tasks. Tasks for services that do not use a load balancer are considered healthy
            if they are in the <code>RUNNING</code> state. Tasks for services that use a load
            balancer are considered healthy if they are in the <code>RUNNING</code> state and
            the container instance they are hosted on is reported as healthy by the load balancer.
            </para>
             </li> <li> 
            <para>
            The <code>maximumPercent</code> parameter represents an upper limit on the number
            of running tasks during a deployment, which enables you to define the deployment batch
            size. For example, if <code>desiredCount</code> is four tasks, a maximum of 200% starts
            four new tasks before stopping the four older tasks (provided that the cluster resources
            required to do this are available).
            </para>
             </li> </ul> 
            <para>
            When <a>UpdateService</a> stops a task during a deployment, the equivalent of <code>docker
            stop</code> is issued to the containers running in the task. This results in a <code>SIGTERM</code>
            and a 30-second timeout, after which <code>SIGKILL</code> is sent and the containers
            are forcibly stopped. If the container handles the <code>SIGTERM</code> gracefully
            and exits within 30 seconds from receiving it, no <code>SIGKILL</code> is sent.
            </para>
             
            <para>
            When the service scheduler launches new tasks, it determines task placement in your
            cluster with the following logic:
            </para>
             <ul> <li> 
            <para>
            Determine which of the container instances in your cluster can support your service's
            task definition (for example, they have the required CPU, memory, ports, and container
            instance attributes).
            </para>
             </li> <li> 
            <para>
            By default, the service scheduler attempts to balance tasks across Availability Zones
            in this manner (although you can choose a different placement strategy):
            </para>
             <ul> <li> 
            <para>
            Sort the valid container instances by the fewest number of running tasks for this
            service in the same Availability Zone as the instance. For example, if zone A has
            one running service task and zones B and C each have zero, valid container instances
            in either zone B or C are considered optimal for placement.
            </para>
             </li> <li> 
            <para>
            Place the new service task on a valid container instance in an optimal Availability
            Zone (based on the previous steps), favoring container instances with the fewest number
            of running tasks for this service.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            When the service scheduler stops running tasks, it attempts to maintain balance across
            the Availability Zones in your cluster using the following logic: 
            </para>
             <ul> <li> 
            <para>
            Sort the container instances by the largest number of running tasks for this service
            in the same Availability Zone as the instance. For example, if zone A has one running
            service task and zones B and C each have two, container instances in either zone B
            or C are considered optimal for termination.
            </para>
             </li> <li> 
            <para>
            Stop the task on a container instance in an optimal Availability Zone (based on the
            previous steps), favoring container instances with the largest number of running tasks
            for this service.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateServiceRequest.CapacityProviderStrategy">
            <summary>
            Gets and sets the property CapacityProviderStrategy. 
            <para>
            The capacity provider strategy to update the service to use.
            </para>
             
            <para>
            If the service is using the default capacity provider strategy for the cluster, the
            service can be updated to use one or more capacity providers as opposed to the default
            capacity provider strategy. However, when a service is using a capacity provider strategy
            that is not the default capacity provider strategy, the service cannot be updated
            to use the cluster's default capacity provider strategy.
            </para>
             
            <para>
            A capacity provider strategy consists of one or more capacity providers along with
            the <code>base</code> and <code>weight</code> to assign to them. A capacity provider
            must be associated with the cluster to be used in a capacity provider strategy. The
            <a>PutClusterCapacityProviders</a> API is used to associate a capacity provider with
            a cluster. Only capacity providers with an <code>ACTIVE</code> or <code>UPDATING</code>
            status can be used.
            </para>
             
            <para>
            If specifying a capacity provider that uses an Auto Scaling group, the capacity provider
            must already be created. New capacity providers can be created with the <a>CreateCapacityProvider</a>
            API operation.
            </para>
             
            <para>
            To use a Fargate capacity provider, specify either the <code>FARGATE</code> or <code>FARGATE_SPOT</code>
            capacity providers. The Fargate capacity providers are available to all accounts and
            only need to be associated with a cluster to be used.
            </para>
             
            <para>
            The <a>PutClusterCapacityProviders</a> API operation is used to update the list of
            available capacity providers for a cluster after the cluster is created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateServiceRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the cluster that your service
            is running on. If you do not specify a cluster, the default cluster is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateServiceRequest.DeploymentConfiguration">
            <summary>
            Gets and sets the property DeploymentConfiguration. 
            <para>
            Optional deployment parameters that control how many tasks run during the deployment
            and the ordering of stopping and starting tasks.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateServiceRequest.DesiredCount">
            <summary>
            Gets and sets the property DesiredCount. 
            <para>
            The number of instantiations of the task to place and keep running in your service.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateServiceRequest.EnableExecuteCommand">
            <summary>
            Gets and sets the property EnableExecuteCommand. 
            <para>
            If <code>true</code>, this enables execute command functionality on all task containers.
            </para>
             
            <para>
            If you do not want to override the value that was set when the service was created,
            you can set this to <code>null</code> when performing this action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateServiceRequest.ForceNewDeployment">
            <summary>
            Gets and sets the property ForceNewDeployment. 
            <para>
            Whether to force a new deployment of the service. Deployments are not forced by default.
            You can use this option to trigger a new deployment with no service definition changes.
            For example, you can update a service's tasks to use a newer Docker image with the
            same image/tag combination (<code>my_image:latest</code>) or to roll Fargate tasks
            onto a newer platform version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateServiceRequest.HealthCheckGracePeriodSeconds">
            <summary>
            Gets and sets the property HealthCheckGracePeriodSeconds. 
            <para>
            The period of time, in seconds, that the Amazon ECS service scheduler should ignore
            unhealthy Elastic Load Balancing target health checks after a task has first started.
            This is only valid if your service is configured to use a load balancer. If your service's
            tasks take a while to start and respond to Elastic Load Balancing health checks, you
            can specify a health check grace period of up to 2,147,483,647 seconds. During that
            time, the Amazon ECS service scheduler ignores the Elastic Load Balancing health check
            status. This grace period can prevent the ECS service scheduler from marking tasks
            as unhealthy and stopping them before they have time to come up.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateServiceRequest.NetworkConfiguration">
            <summary>
            Gets and sets the property NetworkConfiguration. 
            <para>
            An object representing the network configuration for the service.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateServiceRequest.PlacementConstraints">
            <summary>
            Gets and sets the property PlacementConstraints. 
            <para>
            An array of task placement constraint objects to update the service to use. If no
            value is specified, the existing placement constraints for the service will remain
            unchanged. If this value is specified, it will override any existing placement constraints
            defined for the service. To remove all existing placement constraints, specify an
            empty array.
            </para>
             
            <para>
            You can specify a maximum of 10 constraints per task (this limit includes constraints
            in the task definition and those specified at runtime).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateServiceRequest.PlacementStrategy">
            <summary>
            Gets and sets the property PlacementStrategy. 
            <para>
            The task placement strategy objects to update the service to use. If no value is specified,
            the existing placement strategy for the service will remain unchanged. If this value
            is specified, it will override the existing placement strategy defined for the service.
            To remove an existing placement strategy, specify an empty object.
            </para>
             
            <para>
            You can specify a maximum of five strategy rules per service.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateServiceRequest.PlatformVersion">
            <summary>
            Gets and sets the property PlatformVersion. 
            <para>
            The platform version on which your tasks in the service are running. A platform version
            is only specified for tasks using the Fargate launch type. If a platform version is
            not specified, the <code>LATEST</code> platform version is used by default. For more
            information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/platform_versions.html">Fargate
            Platform Versions</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateServiceRequest.Service">
            <summary>
            Gets and sets the property Service. 
            <para>
            The name of the service to update.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateServiceRequest.TaskDefinition">
            <summary>
            Gets and sets the property TaskDefinition. 
            <para>
            The <code>family</code> and <code>revision</code> (<code>family:revision</code>) or
            full ARN of the task definition to run in your service. If a <code>revision</code>
            is not specified, the latest <code>ACTIVE</code> revision is used. If you modify the
            task definition with <code>UpdateService</code>, Amazon ECS spawns a task with the
            new version of the task definition and then stops an old task after the new version
            is running.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.UpdateServiceResponse">
            <summary>
            This is the response object from the UpdateService operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateServiceResponse.Service">
            <summary>
            Gets and sets the property Service. 
            <para>
            The full description of your service following the update call.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.UpdateTaskSetRequest">
            <summary>
            Container for the parameters to the UpdateTaskSet operation.
            Modifies a task set. This is used when a service uses the <code>EXTERNAL</code> deployment
            controller type. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-types.html">Amazon
            ECS Deployment Types</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateTaskSetRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the cluster that hosts the service
            that the task set exists in.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateTaskSetRequest.Scale">
            <summary>
            Gets and sets the property Scale. 
            <para>
            A floating-point percentage of the desired number of tasks to place and keep running
            in the task set.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateTaskSetRequest.Service">
            <summary>
            Gets and sets the property Service. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the service that the task set
            exists in.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateTaskSetRequest.TaskSet">
            <summary>
            Gets and sets the property TaskSet. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the task set to update.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.UpdateTaskSetResponse">
            <summary>
            This is the response object from the UpdateTaskSet operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateTaskSetResponse.TaskSet">
            <summary>
            Gets and sets the property TaskSet. 
            <para>
            Details about the task set.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.VersionInfo">
            <summary>
            The Docker and Amazon ECS container agent version information about a container instance.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.VersionInfo.AgentHash">
            <summary>
            Gets and sets the property AgentHash. 
            <para>
            The Git commit hash for the Amazon ECS container agent build on the <a href="https://github.com/aws/amazon-ecs-agent/commits/master">amazon-ecs-agent
            </a> GitHub repository.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.VersionInfo.AgentVersion">
            <summary>
            Gets and sets the property AgentVersion. 
            <para>
            The version number of the Amazon ECS container agent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.VersionInfo.DockerVersion">
            <summary>
            Gets and sets the property DockerVersion. 
            <para>
            The Docker version running on the container instance.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Volume">
            <summary>
            A data volume used in a task definition. For tasks that use the Amazon Elastic File
            System (Amazon EFS), specify an <code>efsVolumeConfiguration</code>. For Windows tasks
            that use Amazon FSx for Windows File Server file system, specify a <code>fsxWindowsFileServerVolumeConfiguration</code>.
            For tasks that use a Docker volume, specify a <code>DockerVolumeConfiguration</code>.
            For tasks that use a bind mount host volume, specify a <code>host</code> and optional
            <code>sourcePath</code>. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using_data_volumes.html">Using
            Data Volumes in Tasks</a>.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Volume.DockerVolumeConfiguration">
            <summary>
            Gets and sets the property DockerVolumeConfiguration. 
            <para>
            This parameter is specified when you are using Docker volumes.
            </para>
             
            <para>
            Windows containers only support the use of the <code>local</code> driver. To use bind
            mounts, specify the <code>host</code> parameter instead.
            </para>
             <note> 
            <para>
            Docker volumes are not supported by tasks run on Fargate.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Volume.EfsVolumeConfiguration">
            <summary>
            Gets and sets the property EfsVolumeConfiguration. 
            <para>
            This parameter is specified when you are using an Amazon Elastic File System file
            system for task storage.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Volume.FsxWindowsFileServerVolumeConfiguration">
            <summary>
            Gets and sets the property FsxWindowsFileServerVolumeConfiguration. 
            <para>
            This parameter is specified when you are using Amazon FSx for Windows File Server
            file system for task storage.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Volume.Host">
            <summary>
            Gets and sets the property Host. 
            <para>
            This parameter is specified when you are using bind mount host volumes. The contents
            of the <code>host</code> parameter determine whether your bind mount host volume persists
            on the host container instance and where it is stored. If the <code>host</code> parameter
            is empty, then the Docker daemon assigns a host path for your data volume. However,
            the data is not guaranteed to persist after the containers associated with it stop
            running.
            </para>
             
            <para>
            Windows containers can mount whole directories on the same drive as <code>$env:ProgramData</code>.
            Windows containers cannot mount directories on a different drive, and mount point
            cannot be across drives. For example, you can mount <code>C:\my\path:C:\my\path</code>
            and <code>D:\:D:\</code>, but not <code>D:\my\path:C:\my\path</code> or <code>D:\:C:\my\path</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Volume.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the volume. Up to 255 letters (uppercase and lowercase), numbers, underscores,
            and hyphens are allowed. This name is referenced in the <code>sourceVolume</code>
            parameter of container definition <code>mountPoints</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.VolumeFrom">
            <summary>
            Details on a data volume from another container in the same task definition.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.VolumeFrom.ReadOnly">
            <summary>
            Gets and sets the property ReadOnly. 
            <para>
            If this value is <code>true</code>, the container has read-only access to the volume.
            If this value is <code>false</code>, then the container can write to the volume. The
            default value is <code>false</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.VolumeFrom.SourceContainer">
            <summary>
            Gets and sets the property SourceContainer. 
            <para>
            The name of another container within the same task definition from which to mount
            volumes.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ECSPaginatorFactory">
             <summary>
             Paginators for the ECS service
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.ECSPaginatorFactory.ListAccountSettings(Amazon.ECS.Model.ListAccountSettingsRequest)">
             <summary>
             Paginator for ListAccountSettings operation
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.ECSPaginatorFactory.ListAttributes(Amazon.ECS.Model.ListAttributesRequest)">
             <summary>
             Paginator for ListAttributes operation
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.ECSPaginatorFactory.ListClusters(Amazon.ECS.Model.ListClustersRequest)">
             <summary>
             Paginator for ListClusters operation
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.ECSPaginatorFactory.ListContainerInstances(Amazon.ECS.Model.ListContainerInstancesRequest)">
             <summary>
             Paginator for ListContainerInstances operation
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.ECSPaginatorFactory.ListServices(Amazon.ECS.Model.ListServicesRequest)">
             <summary>
             Paginator for ListServices operation
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.ECSPaginatorFactory.ListTaskDefinitionFamilies(Amazon.ECS.Model.ListTaskDefinitionFamiliesRequest)">
             <summary>
             Paginator for ListTaskDefinitionFamilies operation
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.ECSPaginatorFactory.ListTaskDefinitions(Amazon.ECS.Model.ListTaskDefinitionsRequest)">
             <summary>
             Paginator for ListTaskDefinitions operation
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.ECSPaginatorFactory.ListTasks(Amazon.ECS.Model.ListTasksRequest)">
             <summary>
             Paginator for ListTasks operation
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.IECSPaginatorFactory">
             <summary>
             Paginators for the ECS service
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.IECSPaginatorFactory.ListAccountSettings(Amazon.ECS.Model.ListAccountSettingsRequest)">
             <summary>
             Paginator for ListAccountSettings operation
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.IECSPaginatorFactory.ListAttributes(Amazon.ECS.Model.ListAttributesRequest)">
             <summary>
             Paginator for ListAttributes operation
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.IECSPaginatorFactory.ListClusters(Amazon.ECS.Model.ListClustersRequest)">
             <summary>
             Paginator for ListClusters operation
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.IECSPaginatorFactory.ListContainerInstances(Amazon.ECS.Model.ListContainerInstancesRequest)">
             <summary>
             Paginator for ListContainerInstances operation
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.IECSPaginatorFactory.ListServices(Amazon.ECS.Model.ListServicesRequest)">
             <summary>
             Paginator for ListServices operation
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.IECSPaginatorFactory.ListTaskDefinitionFamilies(Amazon.ECS.Model.ListTaskDefinitionFamiliesRequest)">
             <summary>
             Paginator for ListTaskDefinitionFamilies operation
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.IECSPaginatorFactory.ListTaskDefinitions(Amazon.ECS.Model.ListTaskDefinitionsRequest)">
             <summary>
             Paginator for ListTaskDefinitions operation
            </summary>
        </member>
        <member name="M:Amazon.ECS.Model.IECSPaginatorFactory.ListTasks(Amazon.ECS.Model.ListTasksRequest)">
             <summary>
             Paginator for ListTasks operation
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.IListAccountSettingsPaginator">
             <summary>
             Paginator for the ListAccountSettings operation
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.IListAccountSettingsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.IListAccountSettingsPaginator.Settings">
            <summary>
            Enumerable containing all of the Settings
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.IListAttributesPaginator">
             <summary>
             Paginator for the ListAttributes operation
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.IListAttributesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.IListAttributesPaginator.Attributes">
            <summary>
            Enumerable containing all of the Attributes
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.IListClustersPaginator">
             <summary>
             Paginator for the ListClusters operation
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.IListClustersPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.IListClustersPaginator.ClusterArns">
            <summary>
            Enumerable containing all of the ClusterArns
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.IListContainerInstancesPaginator">
             <summary>
             Paginator for the ListContainerInstances operation
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.IListContainerInstancesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.IListContainerInstancesPaginator.ContainerInstanceArns">
            <summary>
            Enumerable containing all of the ContainerInstanceArns
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.IListServicesPaginator">
             <summary>
             Paginator for the ListServices operation
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.IListServicesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.IListServicesPaginator.ServiceArns">
            <summary>
            Enumerable containing all of the ServiceArns
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.IListTaskDefinitionFamiliesPaginator">
             <summary>
             Paginator for the ListTaskDefinitionFamilies operation
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.IListTaskDefinitionFamiliesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.IListTaskDefinitionFamiliesPaginator.Families">
            <summary>
            Enumerable containing all of the Families
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.IListTaskDefinitionsPaginator">
             <summary>
             Paginator for the ListTaskDefinitions operation
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.IListTaskDefinitionsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.IListTaskDefinitionsPaginator.TaskDefinitionArns">
            <summary>
            Enumerable containing all of the TaskDefinitionArns
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.IListTasksPaginator">
             <summary>
             Paginator for the ListTasks operation
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.IListTasksPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.IListTasksPaginator.TaskArns">
            <summary>
            Enumerable containing all of the TaskArns
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ListAccountSettingsPaginator">
            <summary>
            Base class for ListAccountSettings paginators.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListAccountSettingsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListAccountSettingsPaginator.Settings">
            <summary>
            Enumerable containing all of the Settings
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ListAttributesPaginator">
            <summary>
            Base class for ListAttributes paginators.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListAttributesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListAttributesPaginator.Attributes">
            <summary>
            Enumerable containing all of the Attributes
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ListClustersPaginator">
            <summary>
            Base class for ListClusters paginators.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListClustersPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListClustersPaginator.ClusterArns">
            <summary>
            Enumerable containing all of the ClusterArns
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ListContainerInstancesPaginator">
            <summary>
            Base class for ListContainerInstances paginators.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListContainerInstancesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListContainerInstancesPaginator.ContainerInstanceArns">
            <summary>
            Enumerable containing all of the ContainerInstanceArns
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ListServicesPaginator">
            <summary>
            Base class for ListServices paginators.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListServicesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListServicesPaginator.ServiceArns">
            <summary>
            Enumerable containing all of the ServiceArns
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ListTaskDefinitionFamiliesPaginator">
            <summary>
            Base class for ListTaskDefinitionFamilies paginators.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTaskDefinitionFamiliesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTaskDefinitionFamiliesPaginator.Families">
            <summary>
            Enumerable containing all of the Families
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ListTaskDefinitionsPaginator">
            <summary>
            Base class for ListTaskDefinitions paginators.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTaskDefinitionsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTaskDefinitionsPaginator.TaskDefinitionArns">
            <summary>
            Enumerable containing all of the TaskDefinitionArns
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ListTasksPaginator">
            <summary>
            Base class for ListTasks paginators.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTasksPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTasksPaginator.TaskArns">
            <summary>
            Enumerable containing all of the TaskArns
            </summary>
        </member>
        <member name="T:Amazon.ECS.AmazonECSRequest">
            <summary>
            Base class for ECS operation requests.
            </summary>
        </member>
        <member name="T:Amazon.ECS.AgentUpdateStatus">
            <summary>
            Constants used for properties of type AgentUpdateStatus.
            </summary>
        </member>
        <member name="F:Amazon.ECS.AgentUpdateStatus.FAILED">
            <summary>
            Constant FAILED for AgentUpdateStatus
            </summary>
        </member>
        <member name="F:Amazon.ECS.AgentUpdateStatus.PENDING">
            <summary>
            Constant PENDING for AgentUpdateStatus
            </summary>
        </member>
        <member name="F:Amazon.ECS.AgentUpdateStatus.STAGED">
            <summary>
            Constant STAGED for AgentUpdateStatus
            </summary>
        </member>
        <member name="F:Amazon.ECS.AgentUpdateStatus.STAGING">
            <summary>
            Constant STAGING for AgentUpdateStatus
            </summary>
        </member>
        <member name="F:Amazon.ECS.AgentUpdateStatus.UPDATED">
            <summary>
            Constant UPDATED for AgentUpdateStatus
            </summary>
        </member>
        <member name="F:Amazon.ECS.AgentUpdateStatus.UPDATING">
            <summary>
            Constant UPDATING for AgentUpdateStatus
            </summary>
        </member>
        <member name="M:Amazon.ECS.AgentUpdateStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.AgentUpdateStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.AgentUpdateStatus.op_Implicit(System.String)~Amazon.ECS.AgentUpdateStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.AssignPublicIp">
            <summary>
            Constants used for properties of type AssignPublicIp.
            </summary>
        </member>
        <member name="F:Amazon.ECS.AssignPublicIp.DISABLED">
            <summary>
            Constant DISABLED for AssignPublicIp
            </summary>
        </member>
        <member name="F:Amazon.ECS.AssignPublicIp.ENABLED">
            <summary>
            Constant ENABLED for AssignPublicIp
            </summary>
        </member>
        <member name="M:Amazon.ECS.AssignPublicIp.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.AssignPublicIp.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.AssignPublicIp.op_Implicit(System.String)~Amazon.ECS.AssignPublicIp">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.CapacityProviderField">
            <summary>
            Constants used for properties of type CapacityProviderField.
            </summary>
        </member>
        <member name="F:Amazon.ECS.CapacityProviderField.TAGS">
            <summary>
            Constant TAGS for CapacityProviderField
            </summary>
        </member>
        <member name="M:Amazon.ECS.CapacityProviderField.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.CapacityProviderField.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.CapacityProviderField.op_Implicit(System.String)~Amazon.ECS.CapacityProviderField">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.CapacityProviderStatus">
            <summary>
            Constants used for properties of type CapacityProviderStatus.
            </summary>
        </member>
        <member name="F:Amazon.ECS.CapacityProviderStatus.ACTIVE">
            <summary>
            Constant ACTIVE for CapacityProviderStatus
            </summary>
        </member>
        <member name="F:Amazon.ECS.CapacityProviderStatus.INACTIVE">
            <summary>
            Constant INACTIVE for CapacityProviderStatus
            </summary>
        </member>
        <member name="M:Amazon.ECS.CapacityProviderStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.CapacityProviderStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.CapacityProviderStatus.op_Implicit(System.String)~Amazon.ECS.CapacityProviderStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.CapacityProviderUpdateStatus">
            <summary>
            Constants used for properties of type CapacityProviderUpdateStatus.
            </summary>
        </member>
        <member name="F:Amazon.ECS.CapacityProviderUpdateStatus.DELETE_COMPLETE">
            <summary>
            Constant DELETE_COMPLETE for CapacityProviderUpdateStatus
            </summary>
        </member>
        <member name="F:Amazon.ECS.CapacityProviderUpdateStatus.DELETE_FAILED">
            <summary>
            Constant DELETE_FAILED for CapacityProviderUpdateStatus
            </summary>
        </member>
        <member name="F:Amazon.ECS.CapacityProviderUpdateStatus.DELETE_IN_PROGRESS">
            <summary>
            Constant DELETE_IN_PROGRESS for CapacityProviderUpdateStatus
            </summary>
        </member>
        <member name="F:Amazon.ECS.CapacityProviderUpdateStatus.UPDATE_COMPLETE">
            <summary>
            Constant UPDATE_COMPLETE for CapacityProviderUpdateStatus
            </summary>
        </member>
        <member name="F:Amazon.ECS.CapacityProviderUpdateStatus.UPDATE_FAILED">
            <summary>
            Constant UPDATE_FAILED for CapacityProviderUpdateStatus
            </summary>
        </member>
        <member name="F:Amazon.ECS.CapacityProviderUpdateStatus.UPDATE_IN_PROGRESS">
            <summary>
            Constant UPDATE_IN_PROGRESS for CapacityProviderUpdateStatus
            </summary>
        </member>
        <member name="M:Amazon.ECS.CapacityProviderUpdateStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.CapacityProviderUpdateStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.CapacityProviderUpdateStatus.op_Implicit(System.String)~Amazon.ECS.CapacityProviderUpdateStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.ClusterField">
            <summary>
            Constants used for properties of type ClusterField.
            </summary>
        </member>
        <member name="F:Amazon.ECS.ClusterField.ATTACHMENTS">
            <summary>
            Constant ATTACHMENTS for ClusterField
            </summary>
        </member>
        <member name="F:Amazon.ECS.ClusterField.CONFIGURATIONS">
            <summary>
            Constant CONFIGURATIONS for ClusterField
            </summary>
        </member>
        <member name="F:Amazon.ECS.ClusterField.SETTINGS">
            <summary>
            Constant SETTINGS for ClusterField
            </summary>
        </member>
        <member name="F:Amazon.ECS.ClusterField.STATISTICS">
            <summary>
            Constant STATISTICS for ClusterField
            </summary>
        </member>
        <member name="F:Amazon.ECS.ClusterField.TAGS">
            <summary>
            Constant TAGS for ClusterField
            </summary>
        </member>
        <member name="M:Amazon.ECS.ClusterField.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.ClusterField.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.ClusterField.op_Implicit(System.String)~Amazon.ECS.ClusterField">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.ClusterSettingName">
            <summary>
            Constants used for properties of type ClusterSettingName.
            </summary>
        </member>
        <member name="F:Amazon.ECS.ClusterSettingName.ContainerInsights">
            <summary>
            Constant ContainerInsights for ClusterSettingName
            </summary>
        </member>
        <member name="M:Amazon.ECS.ClusterSettingName.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.ClusterSettingName.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.ClusterSettingName.op_Implicit(System.String)~Amazon.ECS.ClusterSettingName">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.Compatibility">
            <summary>
            Constants used for properties of type Compatibility.
            </summary>
        </member>
        <member name="F:Amazon.ECS.Compatibility.EC2">
            <summary>
            Constant EC2 for Compatibility
            </summary>
        </member>
        <member name="F:Amazon.ECS.Compatibility.EXTERNAL">
            <summary>
            Constant EXTERNAL for Compatibility
            </summary>
        </member>
        <member name="F:Amazon.ECS.Compatibility.FARGATE">
            <summary>
            Constant FARGATE for Compatibility
            </summary>
        </member>
        <member name="M:Amazon.ECS.Compatibility.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.Compatibility.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.Compatibility.op_Implicit(System.String)~Amazon.ECS.Compatibility">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.Connectivity">
            <summary>
            Constants used for properties of type Connectivity.
            </summary>
        </member>
        <member name="F:Amazon.ECS.Connectivity.CONNECTED">
            <summary>
            Constant CONNECTED for Connectivity
            </summary>
        </member>
        <member name="F:Amazon.ECS.Connectivity.DISCONNECTED">
            <summary>
            Constant DISCONNECTED for Connectivity
            </summary>
        </member>
        <member name="M:Amazon.ECS.Connectivity.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.Connectivity.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.Connectivity.op_Implicit(System.String)~Amazon.ECS.Connectivity">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.ContainerCondition">
            <summary>
            Constants used for properties of type ContainerCondition.
            </summary>
        </member>
        <member name="F:Amazon.ECS.ContainerCondition.COMPLETE">
            <summary>
            Constant COMPLETE for ContainerCondition
            </summary>
        </member>
        <member name="F:Amazon.ECS.ContainerCondition.HEALTHY">
            <summary>
            Constant HEALTHY for ContainerCondition
            </summary>
        </member>
        <member name="F:Amazon.ECS.ContainerCondition.START">
            <summary>
            Constant START for ContainerCondition
            </summary>
        </member>
        <member name="F:Amazon.ECS.ContainerCondition.SUCCESS">
            <summary>
            Constant SUCCESS for ContainerCondition
            </summary>
        </member>
        <member name="M:Amazon.ECS.ContainerCondition.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.ContainerCondition.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.ContainerCondition.op_Implicit(System.String)~Amazon.ECS.ContainerCondition">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.ContainerInstanceField">
            <summary>
            Constants used for properties of type ContainerInstanceField.
            </summary>
        </member>
        <member name="F:Amazon.ECS.ContainerInstanceField.TAGS">
            <summary>
            Constant TAGS for ContainerInstanceField
            </summary>
        </member>
        <member name="M:Amazon.ECS.ContainerInstanceField.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.ContainerInstanceField.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.ContainerInstanceField.op_Implicit(System.String)~Amazon.ECS.ContainerInstanceField">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.ContainerInstanceStatus">
            <summary>
            Constants used for properties of type ContainerInstanceStatus.
            </summary>
        </member>
        <member name="F:Amazon.ECS.ContainerInstanceStatus.ACTIVE">
            <summary>
            Constant ACTIVE for ContainerInstanceStatus
            </summary>
        </member>
        <member name="F:Amazon.ECS.ContainerInstanceStatus.DEREGISTERING">
            <summary>
            Constant DEREGISTERING for ContainerInstanceStatus
            </summary>
        </member>
        <member name="F:Amazon.ECS.ContainerInstanceStatus.DRAINING">
            <summary>
            Constant DRAINING for ContainerInstanceStatus
            </summary>
        </member>
        <member name="F:Amazon.ECS.ContainerInstanceStatus.REGISTERING">
            <summary>
            Constant REGISTERING for ContainerInstanceStatus
            </summary>
        </member>
        <member name="F:Amazon.ECS.ContainerInstanceStatus.REGISTRATION_FAILED">
            <summary>
            Constant REGISTRATION_FAILED for ContainerInstanceStatus
            </summary>
        </member>
        <member name="M:Amazon.ECS.ContainerInstanceStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.ContainerInstanceStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.ContainerInstanceStatus.op_Implicit(System.String)~Amazon.ECS.ContainerInstanceStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.DeploymentControllerType">
            <summary>
            Constants used for properties of type DeploymentControllerType.
            </summary>
        </member>
        <member name="F:Amazon.ECS.DeploymentControllerType.CODE_DEPLOY">
            <summary>
            Constant CODE_DEPLOY for DeploymentControllerType
            </summary>
        </member>
        <member name="F:Amazon.ECS.DeploymentControllerType.ECS">
            <summary>
            Constant ECS for DeploymentControllerType
            </summary>
        </member>
        <member name="F:Amazon.ECS.DeploymentControllerType.EXTERNAL">
            <summary>
            Constant EXTERNAL for DeploymentControllerType
            </summary>
        </member>
        <member name="M:Amazon.ECS.DeploymentControllerType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.DeploymentControllerType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.DeploymentControllerType.op_Implicit(System.String)~Amazon.ECS.DeploymentControllerType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.DeploymentRolloutState">
            <summary>
            Constants used for properties of type DeploymentRolloutState.
            </summary>
        </member>
        <member name="F:Amazon.ECS.DeploymentRolloutState.COMPLETED">
            <summary>
            Constant COMPLETED for DeploymentRolloutState
            </summary>
        </member>
        <member name="F:Amazon.ECS.DeploymentRolloutState.FAILED">
            <summary>
            Constant FAILED for DeploymentRolloutState
            </summary>
        </member>
        <member name="F:Amazon.ECS.DeploymentRolloutState.IN_PROGRESS">
            <summary>
            Constant IN_PROGRESS for DeploymentRolloutState
            </summary>
        </member>
        <member name="M:Amazon.ECS.DeploymentRolloutState.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.DeploymentRolloutState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.DeploymentRolloutState.op_Implicit(System.String)~Amazon.ECS.DeploymentRolloutState">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.DesiredStatus">
            <summary>
            Constants used for properties of type DesiredStatus.
            </summary>
        </member>
        <member name="F:Amazon.ECS.DesiredStatus.PENDING">
            <summary>
            Constant PENDING for DesiredStatus
            </summary>
        </member>
        <member name="F:Amazon.ECS.DesiredStatus.RUNNING">
            <summary>
            Constant RUNNING for DesiredStatus
            </summary>
        </member>
        <member name="F:Amazon.ECS.DesiredStatus.STOPPED">
            <summary>
            Constant STOPPED for DesiredStatus
            </summary>
        </member>
        <member name="M:Amazon.ECS.DesiredStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.DesiredStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.DesiredStatus.op_Implicit(System.String)~Amazon.ECS.DesiredStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.DeviceCgroupPermission">
            <summary>
            Constants used for properties of type DeviceCgroupPermission.
            </summary>
        </member>
        <member name="F:Amazon.ECS.DeviceCgroupPermission.Mknod">
            <summary>
            Constant Mknod for DeviceCgroupPermission
            </summary>
        </member>
        <member name="F:Amazon.ECS.DeviceCgroupPermission.Read">
            <summary>
            Constant Read for DeviceCgroupPermission
            </summary>
        </member>
        <member name="F:Amazon.ECS.DeviceCgroupPermission.Write">
            <summary>
            Constant Write for DeviceCgroupPermission
            </summary>
        </member>
        <member name="M:Amazon.ECS.DeviceCgroupPermission.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.DeviceCgroupPermission.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.DeviceCgroupPermission.op_Implicit(System.String)~Amazon.ECS.DeviceCgroupPermission">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.EFSAuthorizationConfigIAM">
            <summary>
            Constants used for properties of type EFSAuthorizationConfigIAM.
            </summary>
        </member>
        <member name="F:Amazon.ECS.EFSAuthorizationConfigIAM.DISABLED">
            <summary>
            Constant DISABLED for EFSAuthorizationConfigIAM
            </summary>
        </member>
        <member name="F:Amazon.ECS.EFSAuthorizationConfigIAM.ENABLED">
            <summary>
            Constant ENABLED for EFSAuthorizationConfigIAM
            </summary>
        </member>
        <member name="M:Amazon.ECS.EFSAuthorizationConfigIAM.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.EFSAuthorizationConfigIAM.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.EFSAuthorizationConfigIAM.op_Implicit(System.String)~Amazon.ECS.EFSAuthorizationConfigIAM">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.EFSTransitEncryption">
            <summary>
            Constants used for properties of type EFSTransitEncryption.
            </summary>
        </member>
        <member name="F:Amazon.ECS.EFSTransitEncryption.DISABLED">
            <summary>
            Constant DISABLED for EFSTransitEncryption
            </summary>
        </member>
        <member name="F:Amazon.ECS.EFSTransitEncryption.ENABLED">
            <summary>
            Constant ENABLED for EFSTransitEncryption
            </summary>
        </member>
        <member name="M:Amazon.ECS.EFSTransitEncryption.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.EFSTransitEncryption.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.EFSTransitEncryption.op_Implicit(System.String)~Amazon.ECS.EFSTransitEncryption">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.EnvironmentFileType">
            <summary>
            Constants used for properties of type EnvironmentFileType.
            </summary>
        </member>
        <member name="F:Amazon.ECS.EnvironmentFileType.S3">
            <summary>
            Constant S3 for EnvironmentFileType
            </summary>
        </member>
        <member name="M:Amazon.ECS.EnvironmentFileType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.EnvironmentFileType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.EnvironmentFileType.op_Implicit(System.String)~Amazon.ECS.EnvironmentFileType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.ExecuteCommandLogging">
            <summary>
            Constants used for properties of type ExecuteCommandLogging.
            </summary>
        </member>
        <member name="F:Amazon.ECS.ExecuteCommandLogging.DEFAULT">
            <summary>
            Constant DEFAULT for ExecuteCommandLogging
            </summary>
        </member>
        <member name="F:Amazon.ECS.ExecuteCommandLogging.NONE">
            <summary>
            Constant NONE for ExecuteCommandLogging
            </summary>
        </member>
        <member name="F:Amazon.ECS.ExecuteCommandLogging.OVERRIDE">
            <summary>
            Constant OVERRIDE for ExecuteCommandLogging
            </summary>
        </member>
        <member name="M:Amazon.ECS.ExecuteCommandLogging.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.ExecuteCommandLogging.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.ExecuteCommandLogging.op_Implicit(System.String)~Amazon.ECS.ExecuteCommandLogging">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.FirelensConfigurationType">
            <summary>
            Constants used for properties of type FirelensConfigurationType.
            </summary>
        </member>
        <member name="F:Amazon.ECS.FirelensConfigurationType.Fluentbit">
            <summary>
            Constant Fluentbit for FirelensConfigurationType
            </summary>
        </member>
        <member name="F:Amazon.ECS.FirelensConfigurationType.Fluentd">
            <summary>
            Constant Fluentd for FirelensConfigurationType
            </summary>
        </member>
        <member name="M:Amazon.ECS.FirelensConfigurationType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.FirelensConfigurationType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.FirelensConfigurationType.op_Implicit(System.String)~Amazon.ECS.FirelensConfigurationType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.HealthStatus">
            <summary>
            Constants used for properties of type HealthStatus.
            </summary>
        </member>
        <member name="F:Amazon.ECS.HealthStatus.HEALTHY">
            <summary>
            Constant HEALTHY for HealthStatus
            </summary>
        </member>
        <member name="F:Amazon.ECS.HealthStatus.UNHEALTHY">
            <summary>
            Constant UNHEALTHY for HealthStatus
            </summary>
        </member>
        <member name="F:Amazon.ECS.HealthStatus.UNKNOWN">
            <summary>
            Constant UNKNOWN for HealthStatus
            </summary>
        </member>
        <member name="M:Amazon.ECS.HealthStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.HealthStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.HealthStatus.op_Implicit(System.String)~Amazon.ECS.HealthStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.IpcMode">
            <summary>
            Constants used for properties of type IpcMode.
            </summary>
        </member>
        <member name="F:Amazon.ECS.IpcMode.Host">
            <summary>
            Constant Host for IpcMode
            </summary>
        </member>
        <member name="F:Amazon.ECS.IpcMode.None">
            <summary>
            Constant None for IpcMode
            </summary>
        </member>
        <member name="F:Amazon.ECS.IpcMode.Task">
            <summary>
            Constant Task for IpcMode
            </summary>
        </member>
        <member name="M:Amazon.ECS.IpcMode.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.IpcMode.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.IpcMode.op_Implicit(System.String)~Amazon.ECS.IpcMode">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.LaunchType">
            <summary>
            Constants used for properties of type LaunchType.
            </summary>
        </member>
        <member name="F:Amazon.ECS.LaunchType.EC2">
            <summary>
            Constant EC2 for LaunchType
            </summary>
        </member>
        <member name="F:Amazon.ECS.LaunchType.EXTERNAL">
            <summary>
            Constant EXTERNAL for LaunchType
            </summary>
        </member>
        <member name="F:Amazon.ECS.LaunchType.FARGATE">
            <summary>
            Constant FARGATE for LaunchType
            </summary>
        </member>
        <member name="M:Amazon.ECS.LaunchType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.LaunchType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.LaunchType.op_Implicit(System.String)~Amazon.ECS.LaunchType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.LogDriver">
            <summary>
            Constants used for properties of type LogDriver.
            </summary>
        </member>
        <member name="F:Amazon.ECS.LogDriver.Awsfirelens">
            <summary>
            Constant Awsfirelens for LogDriver
            </summary>
        </member>
        <member name="F:Amazon.ECS.LogDriver.Awslogs">
            <summary>
            Constant Awslogs for LogDriver
            </summary>
        </member>
        <member name="F:Amazon.ECS.LogDriver.Fluentd">
            <summary>
            Constant Fluentd for LogDriver
            </summary>
        </member>
        <member name="F:Amazon.ECS.LogDriver.Gelf">
            <summary>
            Constant Gelf for LogDriver
            </summary>
        </member>
        <member name="F:Amazon.ECS.LogDriver.Journald">
            <summary>
            Constant Journald for LogDriver
            </summary>
        </member>
        <member name="F:Amazon.ECS.LogDriver.JsonFile">
            <summary>
            Constant JsonFile for LogDriver
            </summary>
        </member>
        <member name="F:Amazon.ECS.LogDriver.Splunk">
            <summary>
            Constant Splunk for LogDriver
            </summary>
        </member>
        <member name="F:Amazon.ECS.LogDriver.Syslog">
            <summary>
            Constant Syslog for LogDriver
            </summary>
        </member>
        <member name="M:Amazon.ECS.LogDriver.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.LogDriver.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.LogDriver.op_Implicit(System.String)~Amazon.ECS.LogDriver">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.ManagedAgentName">
            <summary>
            Constants used for properties of type ManagedAgentName.
            </summary>
        </member>
        <member name="F:Amazon.ECS.ManagedAgentName.ExecuteCommandAgent">
            <summary>
            Constant ExecuteCommandAgent for ManagedAgentName
            </summary>
        </member>
        <member name="M:Amazon.ECS.ManagedAgentName.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.ManagedAgentName.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.ManagedAgentName.op_Implicit(System.String)~Amazon.ECS.ManagedAgentName">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.ManagedScalingStatus">
            <summary>
            Constants used for properties of type ManagedScalingStatus.
            </summary>
        </member>
        <member name="F:Amazon.ECS.ManagedScalingStatus.DISABLED">
            <summary>
            Constant DISABLED for ManagedScalingStatus
            </summary>
        </member>
        <member name="F:Amazon.ECS.ManagedScalingStatus.ENABLED">
            <summary>
            Constant ENABLED for ManagedScalingStatus
            </summary>
        </member>
        <member name="M:Amazon.ECS.ManagedScalingStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.ManagedScalingStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.ManagedScalingStatus.op_Implicit(System.String)~Amazon.ECS.ManagedScalingStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.ManagedTerminationProtection">
            <summary>
            Constants used for properties of type ManagedTerminationProtection.
            </summary>
        </member>
        <member name="F:Amazon.ECS.ManagedTerminationProtection.DISABLED">
            <summary>
            Constant DISABLED for ManagedTerminationProtection
            </summary>
        </member>
        <member name="F:Amazon.ECS.ManagedTerminationProtection.ENABLED">
            <summary>
            Constant ENABLED for ManagedTerminationProtection
            </summary>
        </member>
        <member name="M:Amazon.ECS.ManagedTerminationProtection.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.ManagedTerminationProtection.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.ManagedTerminationProtection.op_Implicit(System.String)~Amazon.ECS.ManagedTerminationProtection">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.NetworkMode">
            <summary>
            Constants used for properties of type NetworkMode.
            </summary>
        </member>
        <member name="F:Amazon.ECS.NetworkMode.Awsvpc">
            <summary>
            Constant Awsvpc for NetworkMode
            </summary>
        </member>
        <member name="F:Amazon.ECS.NetworkMode.Bridge">
            <summary>
            Constant Bridge for NetworkMode
            </summary>
        </member>
        <member name="F:Amazon.ECS.NetworkMode.Host">
            <summary>
            Constant Host for NetworkMode
            </summary>
        </member>
        <member name="F:Amazon.ECS.NetworkMode.None">
            <summary>
            Constant None for NetworkMode
            </summary>
        </member>
        <member name="M:Amazon.ECS.NetworkMode.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.NetworkMode.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.NetworkMode.op_Implicit(System.String)~Amazon.ECS.NetworkMode">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.PidMode">
            <summary>
            Constants used for properties of type PidMode.
            </summary>
        </member>
        <member name="F:Amazon.ECS.PidMode.Host">
            <summary>
            Constant Host for PidMode
            </summary>
        </member>
        <member name="F:Amazon.ECS.PidMode.Task">
            <summary>
            Constant Task for PidMode
            </summary>
        </member>
        <member name="M:Amazon.ECS.PidMode.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.PidMode.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.PidMode.op_Implicit(System.String)~Amazon.ECS.PidMode">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.PlacementConstraintType">
            <summary>
            Constants used for properties of type PlacementConstraintType.
            </summary>
        </member>
        <member name="F:Amazon.ECS.PlacementConstraintType.DistinctInstance">
            <summary>
            Constant DistinctInstance for PlacementConstraintType
            </summary>
        </member>
        <member name="F:Amazon.ECS.PlacementConstraintType.MemberOf">
            <summary>
            Constant MemberOf for PlacementConstraintType
            </summary>
        </member>
        <member name="M:Amazon.ECS.PlacementConstraintType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.PlacementConstraintType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.PlacementConstraintType.op_Implicit(System.String)~Amazon.ECS.PlacementConstraintType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.PlacementStrategyType">
            <summary>
            Constants used for properties of type PlacementStrategyType.
            </summary>
        </member>
        <member name="F:Amazon.ECS.PlacementStrategyType.Binpack">
            <summary>
            Constant Binpack for PlacementStrategyType
            </summary>
        </member>
        <member name="F:Amazon.ECS.PlacementStrategyType.Random">
            <summary>
            Constant Random for PlacementStrategyType
            </summary>
        </member>
        <member name="F:Amazon.ECS.PlacementStrategyType.Spread">
            <summary>
            Constant Spread for PlacementStrategyType
            </summary>
        </member>
        <member name="M:Amazon.ECS.PlacementStrategyType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.PlacementStrategyType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.PlacementStrategyType.op_Implicit(System.String)~Amazon.ECS.PlacementStrategyType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.PlatformDeviceType">
            <summary>
            Constants used for properties of type PlatformDeviceType.
            </summary>
        </member>
        <member name="F:Amazon.ECS.PlatformDeviceType.GPU">
            <summary>
            Constant GPU for PlatformDeviceType
            </summary>
        </member>
        <member name="M:Amazon.ECS.PlatformDeviceType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.PlatformDeviceType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.PlatformDeviceType.op_Implicit(System.String)~Amazon.ECS.PlatformDeviceType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.PropagateTags">
            <summary>
            Constants used for properties of type PropagateTags.
            </summary>
        </member>
        <member name="F:Amazon.ECS.PropagateTags.SERVICE">
            <summary>
            Constant SERVICE for PropagateTags
            </summary>
        </member>
        <member name="F:Amazon.ECS.PropagateTags.TASK_DEFINITION">
            <summary>
            Constant TASK_DEFINITION for PropagateTags
            </summary>
        </member>
        <member name="M:Amazon.ECS.PropagateTags.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.PropagateTags.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.PropagateTags.op_Implicit(System.String)~Amazon.ECS.PropagateTags">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.ProxyConfigurationType">
            <summary>
            Constants used for properties of type ProxyConfigurationType.
            </summary>
        </member>
        <member name="F:Amazon.ECS.ProxyConfigurationType.APPMESH">
            <summary>
            Constant APPMESH for ProxyConfigurationType
            </summary>
        </member>
        <member name="M:Amazon.ECS.ProxyConfigurationType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.ProxyConfigurationType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.ProxyConfigurationType.op_Implicit(System.String)~Amazon.ECS.ProxyConfigurationType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.ResourceType">
            <summary>
            Constants used for properties of type ResourceType.
            </summary>
        </member>
        <member name="F:Amazon.ECS.ResourceType.GPU">
            <summary>
            Constant GPU for ResourceType
            </summary>
        </member>
        <member name="F:Amazon.ECS.ResourceType.InferenceAccelerator">
            <summary>
            Constant InferenceAccelerator for ResourceType
            </summary>
        </member>
        <member name="M:Amazon.ECS.ResourceType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.ResourceType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.ResourceType.op_Implicit(System.String)~Amazon.ECS.ResourceType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.ScaleUnit">
            <summary>
            Constants used for properties of type ScaleUnit.
            </summary>
        </member>
        <member name="F:Amazon.ECS.ScaleUnit.PERCENT">
            <summary>
            Constant PERCENT for ScaleUnit
            </summary>
        </member>
        <member name="M:Amazon.ECS.ScaleUnit.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.ScaleUnit.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.ScaleUnit.op_Implicit(System.String)~Amazon.ECS.ScaleUnit">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.SchedulingStrategy">
            <summary>
            Constants used for properties of type SchedulingStrategy.
            </summary>
        </member>
        <member name="F:Amazon.ECS.SchedulingStrategy.DAEMON">
            <summary>
            Constant DAEMON for SchedulingStrategy
            </summary>
        </member>
        <member name="F:Amazon.ECS.SchedulingStrategy.REPLICA">
            <summary>
            Constant REPLICA for SchedulingStrategy
            </summary>
        </member>
        <member name="M:Amazon.ECS.SchedulingStrategy.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.SchedulingStrategy.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.SchedulingStrategy.op_Implicit(System.String)~Amazon.ECS.SchedulingStrategy">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.Scope">
            <summary>
            Constants used for properties of type Scope.
            </summary>
        </member>
        <member name="F:Amazon.ECS.Scope.Shared">
            <summary>
            Constant Shared for Scope
            </summary>
        </member>
        <member name="F:Amazon.ECS.Scope.Task">
            <summary>
            Constant Task for Scope
            </summary>
        </member>
        <member name="M:Amazon.ECS.Scope.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.Scope.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.Scope.op_Implicit(System.String)~Amazon.ECS.Scope">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.ServiceField">
            <summary>
            Constants used for properties of type ServiceField.
            </summary>
        </member>
        <member name="F:Amazon.ECS.ServiceField.TAGS">
            <summary>
            Constant TAGS for ServiceField
            </summary>
        </member>
        <member name="M:Amazon.ECS.ServiceField.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.ServiceField.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.ServiceField.op_Implicit(System.String)~Amazon.ECS.ServiceField">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.SettingName">
            <summary>
            Constants used for properties of type SettingName.
            </summary>
        </member>
        <member name="F:Amazon.ECS.SettingName.AwsvpcTrunking">
            <summary>
            Constant AwsvpcTrunking for SettingName
            </summary>
        </member>
        <member name="F:Amazon.ECS.SettingName.ContainerInsights">
            <summary>
            Constant ContainerInsights for SettingName
            </summary>
        </member>
        <member name="F:Amazon.ECS.SettingName.ContainerInstanceLongArnFormat">
            <summary>
            Constant ContainerInstanceLongArnFormat for SettingName
            </summary>
        </member>
        <member name="F:Amazon.ECS.SettingName.ServiceLongArnFormat">
            <summary>
            Constant ServiceLongArnFormat for SettingName
            </summary>
        </member>
        <member name="F:Amazon.ECS.SettingName.TaskLongArnFormat">
            <summary>
            Constant TaskLongArnFormat for SettingName
            </summary>
        </member>
        <member name="M:Amazon.ECS.SettingName.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.SettingName.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.SettingName.op_Implicit(System.String)~Amazon.ECS.SettingName">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.SortOrder">
            <summary>
            Constants used for properties of type SortOrder.
            </summary>
        </member>
        <member name="F:Amazon.ECS.SortOrder.ASC">
            <summary>
            Constant ASC for SortOrder
            </summary>
        </member>
        <member name="F:Amazon.ECS.SortOrder.DESC">
            <summary>
            Constant DESC for SortOrder
            </summary>
        </member>
        <member name="M:Amazon.ECS.SortOrder.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.SortOrder.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.SortOrder.op_Implicit(System.String)~Amazon.ECS.SortOrder">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.StabilityStatus">
            <summary>
            Constants used for properties of type StabilityStatus.
            </summary>
        </member>
        <member name="F:Amazon.ECS.StabilityStatus.STABILIZING">
            <summary>
            Constant STABILIZING for StabilityStatus
            </summary>
        </member>
        <member name="F:Amazon.ECS.StabilityStatus.STEADY_STATE">
            <summary>
            Constant STEADY_STATE for StabilityStatus
            </summary>
        </member>
        <member name="M:Amazon.ECS.StabilityStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.StabilityStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.StabilityStatus.op_Implicit(System.String)~Amazon.ECS.StabilityStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.TargetType">
            <summary>
            Constants used for properties of type TargetType.
            </summary>
        </member>
        <member name="F:Amazon.ECS.TargetType.ContainerInstance">
            <summary>
            Constant ContainerInstance for TargetType
            </summary>
        </member>
        <member name="M:Amazon.ECS.TargetType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.TargetType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.TargetType.op_Implicit(System.String)~Amazon.ECS.TargetType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.TaskDefinitionFamilyStatus">
            <summary>
            Constants used for properties of type TaskDefinitionFamilyStatus.
            </summary>
        </member>
        <member name="F:Amazon.ECS.TaskDefinitionFamilyStatus.ACTIVE">
            <summary>
            Constant ACTIVE for TaskDefinitionFamilyStatus
            </summary>
        </member>
        <member name="F:Amazon.ECS.TaskDefinitionFamilyStatus.ALL">
            <summary>
            Constant ALL for TaskDefinitionFamilyStatus
            </summary>
        </member>
        <member name="F:Amazon.ECS.TaskDefinitionFamilyStatus.INACTIVE">
            <summary>
            Constant INACTIVE for TaskDefinitionFamilyStatus
            </summary>
        </member>
        <member name="M:Amazon.ECS.TaskDefinitionFamilyStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.TaskDefinitionFamilyStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.TaskDefinitionFamilyStatus.op_Implicit(System.String)~Amazon.ECS.TaskDefinitionFamilyStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.TaskDefinitionField">
            <summary>
            Constants used for properties of type TaskDefinitionField.
            </summary>
        </member>
        <member name="F:Amazon.ECS.TaskDefinitionField.TAGS">
            <summary>
            Constant TAGS for TaskDefinitionField
            </summary>
        </member>
        <member name="M:Amazon.ECS.TaskDefinitionField.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.TaskDefinitionField.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.TaskDefinitionField.op_Implicit(System.String)~Amazon.ECS.TaskDefinitionField">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.TaskDefinitionPlacementConstraintType">
            <summary>
            Constants used for properties of type TaskDefinitionPlacementConstraintType.
            </summary>
        </member>
        <member name="F:Amazon.ECS.TaskDefinitionPlacementConstraintType.MemberOf">
            <summary>
            Constant MemberOf for TaskDefinitionPlacementConstraintType
            </summary>
        </member>
        <member name="M:Amazon.ECS.TaskDefinitionPlacementConstraintType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.TaskDefinitionPlacementConstraintType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.TaskDefinitionPlacementConstraintType.op_Implicit(System.String)~Amazon.ECS.TaskDefinitionPlacementConstraintType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.TaskDefinitionStatus">
            <summary>
            Constants used for properties of type TaskDefinitionStatus.
            </summary>
        </member>
        <member name="F:Amazon.ECS.TaskDefinitionStatus.ACTIVE">
            <summary>
            Constant ACTIVE for TaskDefinitionStatus
            </summary>
        </member>
        <member name="F:Amazon.ECS.TaskDefinitionStatus.INACTIVE">
            <summary>
            Constant INACTIVE for TaskDefinitionStatus
            </summary>
        </member>
        <member name="M:Amazon.ECS.TaskDefinitionStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.TaskDefinitionStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.TaskDefinitionStatus.op_Implicit(System.String)~Amazon.ECS.TaskDefinitionStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.TaskField">
            <summary>
            Constants used for properties of type TaskField.
            </summary>
        </member>
        <member name="F:Amazon.ECS.TaskField.TAGS">
            <summary>
            Constant TAGS for TaskField
            </summary>
        </member>
        <member name="M:Amazon.ECS.TaskField.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.TaskField.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.TaskField.op_Implicit(System.String)~Amazon.ECS.TaskField">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.TaskSetField">
            <summary>
            Constants used for properties of type TaskSetField.
            </summary>
        </member>
        <member name="F:Amazon.ECS.TaskSetField.TAGS">
            <summary>
            Constant TAGS for TaskSetField
            </summary>
        </member>
        <member name="M:Amazon.ECS.TaskSetField.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.TaskSetField.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.TaskSetField.op_Implicit(System.String)~Amazon.ECS.TaskSetField">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.TaskStopCode">
            <summary>
            Constants used for properties of type TaskStopCode.
            </summary>
        </member>
        <member name="F:Amazon.ECS.TaskStopCode.EssentialContainerExited">
            <summary>
            Constant EssentialContainerExited for TaskStopCode
            </summary>
        </member>
        <member name="F:Amazon.ECS.TaskStopCode.TaskFailedToStart">
            <summary>
            Constant TaskFailedToStart for TaskStopCode
            </summary>
        </member>
        <member name="F:Amazon.ECS.TaskStopCode.UserInitiated">
            <summary>
            Constant UserInitiated for TaskStopCode
            </summary>
        </member>
        <member name="M:Amazon.ECS.TaskStopCode.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.TaskStopCode.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.TaskStopCode.op_Implicit(System.String)~Amazon.ECS.TaskStopCode">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.TransportProtocol">
            <summary>
            Constants used for properties of type TransportProtocol.
            </summary>
        </member>
        <member name="F:Amazon.ECS.TransportProtocol.Tcp">
            <summary>
            Constant Tcp for TransportProtocol
            </summary>
        </member>
        <member name="F:Amazon.ECS.TransportProtocol.Udp">
            <summary>
            Constant Udp for TransportProtocol
            </summary>
        </member>
        <member name="M:Amazon.ECS.TransportProtocol.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.TransportProtocol.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.TransportProtocol.op_Implicit(System.String)~Amazon.ECS.TransportProtocol">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.UlimitName">
            <summary>
            Constants used for properties of type UlimitName.
            </summary>
        </member>
        <member name="F:Amazon.ECS.UlimitName.Core">
            <summary>
            Constant Core for UlimitName
            </summary>
        </member>
        <member name="F:Amazon.ECS.UlimitName.Cpu">
            <summary>
            Constant Cpu for UlimitName
            </summary>
        </member>
        <member name="F:Amazon.ECS.UlimitName.Data">
            <summary>
            Constant Data for UlimitName
            </summary>
        </member>
        <member name="F:Amazon.ECS.UlimitName.Fsize">
            <summary>
            Constant Fsize for UlimitName
            </summary>
        </member>
        <member name="F:Amazon.ECS.UlimitName.Locks">
            <summary>
            Constant Locks for UlimitName
            </summary>
        </member>
        <member name="F:Amazon.ECS.UlimitName.Memlock">
            <summary>
            Constant Memlock for UlimitName
            </summary>
        </member>
        <member name="F:Amazon.ECS.UlimitName.Msgqueue">
            <summary>
            Constant Msgqueue for UlimitName
            </summary>
        </member>
        <member name="F:Amazon.ECS.UlimitName.Nice">
            <summary>
            Constant Nice for UlimitName
            </summary>
        </member>
        <member name="F:Amazon.ECS.UlimitName.Nofile">
            <summary>
            Constant Nofile for UlimitName
            </summary>
        </member>
        <member name="F:Amazon.ECS.UlimitName.Nproc">
            <summary>
            Constant Nproc for UlimitName
            </summary>
        </member>
        <member name="F:Amazon.ECS.UlimitName.Rss">
            <summary>
            Constant Rss for UlimitName
            </summary>
        </member>
        <member name="F:Amazon.ECS.UlimitName.Rtprio">
            <summary>
            Constant Rtprio for UlimitName
            </summary>
        </member>
        <member name="F:Amazon.ECS.UlimitName.Rttime">
            <summary>
            Constant Rttime for UlimitName
            </summary>
        </member>
        <member name="F:Amazon.ECS.UlimitName.Sigpending">
            <summary>
            Constant Sigpending for UlimitName
            </summary>
        </member>
        <member name="F:Amazon.ECS.UlimitName.Stack">
            <summary>
            Constant Stack for UlimitName
            </summary>
        </member>
        <member name="M:Amazon.ECS.UlimitName.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.UlimitName.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.UlimitName.op_Implicit(System.String)~Amazon.ECS.UlimitName">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.AmazonECSClient">
             <summary>
             Implementation for accessing ECS
            
             Amazon Elastic Container Service 
             <para>
             Amazon Elastic Container Service (Amazon ECS) is a highly scalable, fast, container
             management service that makes it easy to run, stop, and manage Docker containers on
             a cluster. You can host your cluster on a serverless infrastructure that is managed
             by Amazon ECS by launching your services or tasks on Fargate. For more control, you
             can host your tasks on a cluster of Amazon Elastic Compute Cloud (Amazon EC2) instances
             that you manage.
             </para>
              
             <para>
             Amazon ECS makes it easy to launch and stop container-based applications with simple
             API calls, allows you to get the state of your cluster from a centralized service,
             and gives you access to many familiar Amazon EC2 features.
             </para>
              
             <para>
             You can use Amazon ECS to schedule the placement of containers across your cluster
             based on your resource needs, isolation policies, and availability requirements. Amazon
             ECS eliminates the need for you to operate your own cluster management and configuration
             management systems or worry about scaling your management infrastructure.
             </para>
             </summary>
        </member>
        <member name="P:Amazon.ECS.AmazonECSClient.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.#ctor">
             <summary>
             Constructs AmazonECSClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonECSClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.#ctor(Amazon.ECS.AmazonECSConfig)">
             <summary>
             Constructs AmazonECSClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonECSClient Configuration Object</param>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonECSClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonECSClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.ECS.AmazonECSConfig)">
            <summary>
            Constructs AmazonECSClient with AWS Credentials and an
            AmazonECSClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonECSClient Configuration Object</param>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonECSClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonECSClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.#ctor(System.String,System.String,Amazon.ECS.AmazonECSConfig)">
            <summary>
            Constructs AmazonECSClient with AWS Access Key ID, AWS Secret Key and an
            AmazonECSClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonECSClient Configuration Object</param>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonECSClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonECSClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.#ctor(System.String,System.String,System.String,Amazon.ECS.AmazonECSConfig)">
            <summary>
            Constructs AmazonECSClient with AWS Access Key ID, AWS Secret Key and an
            AmazonECSClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonECSClient Configuration Object</param>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="P:Amazon.ECS.AmazonECSClient.ServiceMetadata">
            <summary>
            Capture metadata for the service.
            </summary>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.CreateCapacityProvider(Amazon.ECS.Model.CreateCapacityProviderRequest)">
            <summary>
            Creates a new capacity provider. Capacity providers are associated with an Amazon
            ECS cluster and are used in capacity provider strategies to facilitate cluster auto
            scaling.
            
             
            <para>
            Only capacity providers using an Auto Scaling group can be created. Amazon ECS tasks
            on Fargate use the <code>FARGATE</code> and <code>FARGATE_SPOT</code> capacity providers
            which are already created and available to all accounts in Regions supported by Fargate.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateCapacityProvider service method.</param>
            
            <returns>The response from the CreateCapacityProvider service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.LimitExceededException">
            The limit for the resource has been exceeded.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UpdateInProgressException">
            There is already a current Amazon ECS container agent update in progress on the specified
            container instance. If the container agent becomes disconnected while it is in a transitional
            stage, such as <code>PENDING</code> or <code>STAGING</code>, the update process can
            get stuck in that state. However, when the agent reconnects, it resumes where it stopped
            previously.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/CreateCapacityProvider">REST API Reference for CreateCapacityProvider Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.CreateCapacityProviderAsync(Amazon.ECS.Model.CreateCapacityProviderRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new capacity provider. Capacity providers are associated with an Amazon
            ECS cluster and are used in capacity provider strategies to facilitate cluster auto
            scaling.
            
             
            <para>
            Only capacity providers using an Auto Scaling group can be created. Amazon ECS tasks
            on Fargate use the <code>FARGATE</code> and <code>FARGATE_SPOT</code> capacity providers
            which are already created and available to all accounts in Regions supported by Fargate.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateCapacityProvider service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateCapacityProvider service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.LimitExceededException">
            The limit for the resource has been exceeded.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UpdateInProgressException">
            There is already a current Amazon ECS container agent update in progress on the specified
            container instance. If the container agent becomes disconnected while it is in a transitional
            stage, such as <code>PENDING</code> or <code>STAGING</code>, the update process can
            get stuck in that state. However, when the agent reconnects, it resumes where it stopped
            previously.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/CreateCapacityProvider">REST API Reference for CreateCapacityProvider Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.CreateCluster(Amazon.ECS.Model.CreateClusterRequest)">
            <summary>
            Creates a new Amazon ECS cluster. By default, your account receives a <code>default</code>
            cluster when you launch your first container instance. However, you can create your
            own cluster with a unique name with the <code>CreateCluster</code> action.
            
             <note> 
            <para>
            When you call the <a>CreateCluster</a> API operation, Amazon ECS attempts to create
            the Amazon ECS service-linked role for your account so that required resources in
            other Amazon Web Services services can be managed on your behalf. However, if the
            IAM user that makes the call does not have permissions to create the service-linked
            role, it is not created. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using-service-linked-roles.html">Using
            Service-Linked Roles for Amazon ECS</a> in the <i>Amazon Elastic Container Service
            Developer Guide</i>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateCluster service method.</param>
            
            <returns>The response from the CreateCluster service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/CreateCluster">REST API Reference for CreateCluster Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.CreateClusterAsync(Amazon.ECS.Model.CreateClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new Amazon ECS cluster. By default, your account receives a <code>default</code>
            cluster when you launch your first container instance. However, you can create your
            own cluster with a unique name with the <code>CreateCluster</code> action.
            
             <note> 
            <para>
            When you call the <a>CreateCluster</a> API operation, Amazon ECS attempts to create
            the Amazon ECS service-linked role for your account so that required resources in
            other Amazon Web Services services can be managed on your behalf. However, if the
            IAM user that makes the call does not have permissions to create the service-linked
            role, it is not created. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using-service-linked-roles.html">Using
            Service-Linked Roles for Amazon ECS</a> in the <i>Amazon Elastic Container Service
            Developer Guide</i>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateCluster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateCluster service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/CreateCluster">REST API Reference for CreateCluster Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.CreateService(Amazon.ECS.Model.CreateServiceRequest)">
            <summary>
            Runs and maintains a desired number of tasks from a specified task definition. If
            the number of tasks running in a service drops below the <code>desiredCount</code>,
            Amazon ECS runs another copy of the task in the specified cluster. To update an existing
            service, see the UpdateService action.
            
             
            <para>
            In addition to maintaining the desired count of tasks in your service, you can optionally
            run your service behind one or more load balancers. The load balancers distribute
            traffic across the tasks that are associated with the service. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-load-balancing.html">Service
            Load Balancing</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            Tasks for services that <i>do not</i> use a load balancer are considered healthy if
            they're in the <code>RUNNING</code> state. Tasks for services that <i>do</i> use a
            load balancer are considered healthy if they're in the <code>RUNNING</code> state
            and the container instance that they're hosted on is reported as healthy by the load
            balancer.
            </para>
             
            <para>
            There are two service scheduler strategies available:
            </para>
             <ul> <li> 
            <para>
             <code>REPLICA</code> - The replica scheduling strategy places and maintains the desired
            number of tasks across your cluster. By default, the service scheduler spreads tasks
            across Availability Zones. You can use task placement strategies and constraints to
            customize task placement decisions. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs_services.html">Service
            Scheduler Concepts</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             </li> <li> 
            <para>
             <code>DAEMON</code> - The daemon scheduling strategy deploys exactly one task on
            each active container instance that meets all of the task placement constraints that
            you specify in your cluster. The service scheduler also evaluates the task placement
            constraints for running tasks and will stop tasks that do not meet the placement constraints.
            When using this strategy, you don't need to specify a desired number of tasks, a task
            placement strategy, or use Service Auto Scaling policies. For more information, see
            <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs_services.html">Service
            Scheduler Concepts</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             </li> </ul> 
            <para>
            You can optionally specify a deployment configuration for your service. The deployment
            is triggered by changing properties, such as the task definition or the desired count
            of a service, with an <a>UpdateService</a> operation. The default value for a replica
            service for <code>minimumHealthyPercent</code> is 100%. The default value for a daemon
            service for <code>minimumHealthyPercent</code> is 0%.
            </para>
             
            <para>
            If a service is using the <code>ECS</code> deployment controller, the minimum healthy
            percent represents a lower limit on the number of tasks in a service that must remain
            in the <code>RUNNING</code> state during a deployment, as a percentage of the desired
            number of tasks (rounded up to the nearest integer), and while any container instances
            are in the <code>DRAINING</code> state if the service contains tasks using the EC2
            launch type. This parameter enables you to deploy without using additional cluster
            capacity. For example, if your service has a desired number of four tasks and a minimum
            healthy percent of 50%, the scheduler might stop two existing tasks to free up cluster
            capacity before starting two new tasks. Tasks for services that <i>do not</i> use
            a load balancer are considered healthy if they're in the <code>RUNNING</code> state.
            Tasks for services that <i>do</i> use a load balancer are considered healthy if they're
            in the <code>RUNNING</code> state and they're reported as healthy by the load balancer.
            The default value for minimum healthy percent is 100%.
            </para>
             
            <para>
            If a service is using the <code>ECS</code> deployment controller, the <b>maximum percent</b>
            parameter represents an upper limit on the number of tasks in a service that are allowed
            in the <code>RUNNING</code> or <code>PENDING</code> state during a deployment, as
            a percentage of the desired number of tasks (rounded down to the nearest integer),
            and while any container instances are in the <code>DRAINING</code> state if the service
            contains tasks using the EC2 launch type. This parameter enables you to define the
            deployment batch size. For example, if your service has a desired number of four tasks
            and a maximum percent value of 200%, the scheduler may start four new tasks before
            stopping the four older tasks (provided that the cluster resources required to do
            this are available). The default value for maximum percent is 200%.
            </para>
             
            <para>
            If a service is using either the <code>CODE_DEPLOY</code> or <code>EXTERNAL</code>
            deployment controller types and tasks that use the EC2 launch type, the <b>minimum
            healthy percent</b> and <b>maximum percent</b> values are used only to define the
            lower and upper limit on the number of the tasks in the service that remain in the
            <code>RUNNING</code> state while the container instances are in the <code>DRAINING</code>
            state. If the tasks in the service use the Fargate launch type, the minimum healthy
            percent and maximum percent values aren't used, although they're currently visible
            when describing your service.
            </para>
             
            <para>
            When creating a service that uses the <code>EXTERNAL</code> deployment controller,
            you can specify only parameters that aren't controlled at the task set level. The
            only required parameter is the service name. You control your services using the <a>CreateTaskSet</a>
            operation. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-types.html">Amazon
            ECS Deployment Types</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            When the service scheduler launches new tasks, it determines task placement in your
            cluster using the following logic:
            </para>
             <ul> <li> 
            <para>
            Determine which of the container instances in your cluster can support your service's
            task definition (for example, they have the required CPU, memory, ports, and container
            instance attributes).
            </para>
             </li> <li> 
            <para>
            By default, the service scheduler attempts to balance tasks across Availability Zones
            in this manner (although you can choose a different placement strategy) with the <code>placementStrategy</code>
            parameter):
            </para>
             <ul> <li> 
            <para>
            Sort the valid container instances, giving priority to instances that have the fewest
            number of running tasks for this service in their respective Availability Zone. For
            example, if zone A has one running service task and zones B and C each have zero,
            valid container instances in either zone B or C are considered optimal for placement.
            </para>
             </li> <li> 
            <para>
            Place the new service task on a valid container instance in an optimal Availability
            Zone (based on the previous steps), favoring container instances with the fewest number
            of running tasks for this service.
            </para>
             </li> </ul> </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateService service method.</param>
            
            <returns>The response from the CreateService service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AccessDeniedException">
            You do not have authorization to perform the requested action.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.PlatformTaskDefinitionIncompatibilityException">
            The specified platform version does not satisfy the task definition's required capabilities.
            </exception>
            <exception cref="T:Amazon.ECS.Model.PlatformUnknownException">
            The specified platform version does not exist.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UnsupportedFeatureException">
            The specified task is not supported in this Region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/CreateService">REST API Reference for CreateService Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.CreateServiceAsync(Amazon.ECS.Model.CreateServiceRequest,System.Threading.CancellationToken)">
            <summary>
            Runs and maintains a desired number of tasks from a specified task definition. If
            the number of tasks running in a service drops below the <code>desiredCount</code>,
            Amazon ECS runs another copy of the task in the specified cluster. To update an existing
            service, see the UpdateService action.
            
             
            <para>
            In addition to maintaining the desired count of tasks in your service, you can optionally
            run your service behind one or more load balancers. The load balancers distribute
            traffic across the tasks that are associated with the service. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-load-balancing.html">Service
            Load Balancing</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            Tasks for services that <i>do not</i> use a load balancer are considered healthy if
            they're in the <code>RUNNING</code> state. Tasks for services that <i>do</i> use a
            load balancer are considered healthy if they're in the <code>RUNNING</code> state
            and the container instance that they're hosted on is reported as healthy by the load
            balancer.
            </para>
             
            <para>
            There are two service scheduler strategies available:
            </para>
             <ul> <li> 
            <para>
             <code>REPLICA</code> - The replica scheduling strategy places and maintains the desired
            number of tasks across your cluster. By default, the service scheduler spreads tasks
            across Availability Zones. You can use task placement strategies and constraints to
            customize task placement decisions. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs_services.html">Service
            Scheduler Concepts</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             </li> <li> 
            <para>
             <code>DAEMON</code> - The daemon scheduling strategy deploys exactly one task on
            each active container instance that meets all of the task placement constraints that
            you specify in your cluster. The service scheduler also evaluates the task placement
            constraints for running tasks and will stop tasks that do not meet the placement constraints.
            When using this strategy, you don't need to specify a desired number of tasks, a task
            placement strategy, or use Service Auto Scaling policies. For more information, see
            <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs_services.html">Service
            Scheduler Concepts</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             </li> </ul> 
            <para>
            You can optionally specify a deployment configuration for your service. The deployment
            is triggered by changing properties, such as the task definition or the desired count
            of a service, with an <a>UpdateService</a> operation. The default value for a replica
            service for <code>minimumHealthyPercent</code> is 100%. The default value for a daemon
            service for <code>minimumHealthyPercent</code> is 0%.
            </para>
             
            <para>
            If a service is using the <code>ECS</code> deployment controller, the minimum healthy
            percent represents a lower limit on the number of tasks in a service that must remain
            in the <code>RUNNING</code> state during a deployment, as a percentage of the desired
            number of tasks (rounded up to the nearest integer), and while any container instances
            are in the <code>DRAINING</code> state if the service contains tasks using the EC2
            launch type. This parameter enables you to deploy without using additional cluster
            capacity. For example, if your service has a desired number of four tasks and a minimum
            healthy percent of 50%, the scheduler might stop two existing tasks to free up cluster
            capacity before starting two new tasks. Tasks for services that <i>do not</i> use
            a load balancer are considered healthy if they're in the <code>RUNNING</code> state.
            Tasks for services that <i>do</i> use a load balancer are considered healthy if they're
            in the <code>RUNNING</code> state and they're reported as healthy by the load balancer.
            The default value for minimum healthy percent is 100%.
            </para>
             
            <para>
            If a service is using the <code>ECS</code> deployment controller, the <b>maximum percent</b>
            parameter represents an upper limit on the number of tasks in a service that are allowed
            in the <code>RUNNING</code> or <code>PENDING</code> state during a deployment, as
            a percentage of the desired number of tasks (rounded down to the nearest integer),
            and while any container instances are in the <code>DRAINING</code> state if the service
            contains tasks using the EC2 launch type. This parameter enables you to define the
            deployment batch size. For example, if your service has a desired number of four tasks
            and a maximum percent value of 200%, the scheduler may start four new tasks before
            stopping the four older tasks (provided that the cluster resources required to do
            this are available). The default value for maximum percent is 200%.
            </para>
             
            <para>
            If a service is using either the <code>CODE_DEPLOY</code> or <code>EXTERNAL</code>
            deployment controller types and tasks that use the EC2 launch type, the <b>minimum
            healthy percent</b> and <b>maximum percent</b> values are used only to define the
            lower and upper limit on the number of the tasks in the service that remain in the
            <code>RUNNING</code> state while the container instances are in the <code>DRAINING</code>
            state. If the tasks in the service use the Fargate launch type, the minimum healthy
            percent and maximum percent values aren't used, although they're currently visible
            when describing your service.
            </para>
             
            <para>
            When creating a service that uses the <code>EXTERNAL</code> deployment controller,
            you can specify only parameters that aren't controlled at the task set level. The
            only required parameter is the service name. You control your services using the <a>CreateTaskSet</a>
            operation. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-types.html">Amazon
            ECS Deployment Types</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            When the service scheduler launches new tasks, it determines task placement in your
            cluster using the following logic:
            </para>
             <ul> <li> 
            <para>
            Determine which of the container instances in your cluster can support your service's
            task definition (for example, they have the required CPU, memory, ports, and container
            instance attributes).
            </para>
             </li> <li> 
            <para>
            By default, the service scheduler attempts to balance tasks across Availability Zones
            in this manner (although you can choose a different placement strategy) with the <code>placementStrategy</code>
            parameter):
            </para>
             <ul> <li> 
            <para>
            Sort the valid container instances, giving priority to instances that have the fewest
            number of running tasks for this service in their respective Availability Zone. For
            example, if zone A has one running service task and zones B and C each have zero,
            valid container instances in either zone B or C are considered optimal for placement.
            </para>
             </li> <li> 
            <para>
            Place the new service task on a valid container instance in an optimal Availability
            Zone (based on the previous steps), favoring container instances with the fewest number
            of running tasks for this service.
            </para>
             </li> </ul> </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateService service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateService service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AccessDeniedException">
            You do not have authorization to perform the requested action.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.PlatformTaskDefinitionIncompatibilityException">
            The specified platform version does not satisfy the task definition's required capabilities.
            </exception>
            <exception cref="T:Amazon.ECS.Model.PlatformUnknownException">
            The specified platform version does not exist.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UnsupportedFeatureException">
            The specified task is not supported in this Region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/CreateService">REST API Reference for CreateService Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.CreateTaskSet(Amazon.ECS.Model.CreateTaskSetRequest)">
            <summary>
            Create a task set in the specified cluster and service. This is used when a service
            uses the <code>EXTERNAL</code> deployment controller type. For more information, see
            <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-types.html">Amazon
            ECS Deployment Types</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateTaskSet service method.</param>
            
            <returns>The response from the CreateTaskSet service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AccessDeniedException">
            You do not have authorization to perform the requested action.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.PlatformTaskDefinitionIncompatibilityException">
            The specified platform version does not satisfy the task definition's required capabilities.
            </exception>
            <exception cref="T:Amazon.ECS.Model.PlatformUnknownException">
            The specified platform version does not exist.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotActiveException">
            The specified service is not active. You can't update a service that is inactive.
            If you have previously deleted a service, you can re-create it with <a>CreateService</a>.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotFoundException">
            The specified service could not be found. You can view your available services with
            <a>ListServices</a>. Amazon ECS services are cluster-specific and Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UnsupportedFeatureException">
            The specified task is not supported in this Region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/CreateTaskSet">REST API Reference for CreateTaskSet Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.CreateTaskSetAsync(Amazon.ECS.Model.CreateTaskSetRequest,System.Threading.CancellationToken)">
            <summary>
            Create a task set in the specified cluster and service. This is used when a service
            uses the <code>EXTERNAL</code> deployment controller type. For more information, see
            <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-types.html">Amazon
            ECS Deployment Types</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateTaskSet service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateTaskSet service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AccessDeniedException">
            You do not have authorization to perform the requested action.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.PlatformTaskDefinitionIncompatibilityException">
            The specified platform version does not satisfy the task definition's required capabilities.
            </exception>
            <exception cref="T:Amazon.ECS.Model.PlatformUnknownException">
            The specified platform version does not exist.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotActiveException">
            The specified service is not active. You can't update a service that is inactive.
            If you have previously deleted a service, you can re-create it with <a>CreateService</a>.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotFoundException">
            The specified service could not be found. You can view your available services with
            <a>ListServices</a>. Amazon ECS services are cluster-specific and Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UnsupportedFeatureException">
            The specified task is not supported in this Region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/CreateTaskSet">REST API Reference for CreateTaskSet Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.DeleteAccountSetting(Amazon.ECS.Model.DeleteAccountSettingRequest)">
            <summary>
            Disables an account setting for a specified IAM user, IAM role, or the root user for
            an account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteAccountSetting service method.</param>
            
            <returns>The response from the DeleteAccountSetting service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DeleteAccountSetting">REST API Reference for DeleteAccountSetting Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.DeleteAccountSettingAsync(Amazon.ECS.Model.DeleteAccountSettingRequest,System.Threading.CancellationToken)">
            <summary>
            Disables an account setting for a specified IAM user, IAM role, or the root user for
            an account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteAccountSetting service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteAccountSetting service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DeleteAccountSetting">REST API Reference for DeleteAccountSetting Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.DeleteAttributes(Amazon.ECS.Model.DeleteAttributesRequest)">
            <summary>
            Deletes one or more custom attributes from an Amazon ECS resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteAttributes service method.</param>
            
            <returns>The response from the DeleteAttributes service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.TargetNotFoundException">
            The specified target could not be found. You can view your available container instances
            with <a>ListContainerInstances</a>. Amazon ECS container instances are cluster-specific
            and Region-specific.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DeleteAttributes">REST API Reference for DeleteAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.DeleteAttributesAsync(Amazon.ECS.Model.DeleteAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes one or more custom attributes from an Amazon ECS resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteAttributes service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteAttributes service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.TargetNotFoundException">
            The specified target could not be found. You can view your available container instances
            with <a>ListContainerInstances</a>. Amazon ECS container instances are cluster-specific
            and Region-specific.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DeleteAttributes">REST API Reference for DeleteAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.DeleteCapacityProvider(Amazon.ECS.Model.DeleteCapacityProviderRequest)">
            <summary>
            Deletes the specified capacity provider.
            
             <note> 
            <para>
            The <code>FARGATE</code> and <code>FARGATE_SPOT</code> capacity providers are reserved
            and cannot be deleted. You can disassociate them from a cluster using either the <a>PutClusterCapacityProviders</a>
            API or by deleting the cluster.
            </para>
             </note> 
            <para>
            Prior to a capacity provider being deleted, the capacity provider must be removed
            from the capacity provider strategy from all services. The <a>UpdateService</a> API
            can be used to remove a capacity provider from a service's capacity provider strategy.
            When updating a service, the <code>forceNewDeployment</code> option can be used to
            ensure that any tasks using the Amazon EC2 instance capacity provided by the capacity
            provider are transitioned to use the capacity from the remaining capacity providers.
            Only capacity providers that are not associated with a cluster can be deleted. To
            remove a capacity provider from a cluster, you can either use <a>PutClusterCapacityProviders</a>
            or delete the cluster.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteCapacityProvider service method.</param>
            
            <returns>The response from the DeleteCapacityProvider service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DeleteCapacityProvider">REST API Reference for DeleteCapacityProvider Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.DeleteCapacityProviderAsync(Amazon.ECS.Model.DeleteCapacityProviderRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified capacity provider.
            
             <note> 
            <para>
            The <code>FARGATE</code> and <code>FARGATE_SPOT</code> capacity providers are reserved
            and cannot be deleted. You can disassociate them from a cluster using either the <a>PutClusterCapacityProviders</a>
            API or by deleting the cluster.
            </para>
             </note> 
            <para>
            Prior to a capacity provider being deleted, the capacity provider must be removed
            from the capacity provider strategy from all services. The <a>UpdateService</a> API
            can be used to remove a capacity provider from a service's capacity provider strategy.
            When updating a service, the <code>forceNewDeployment</code> option can be used to
            ensure that any tasks using the Amazon EC2 instance capacity provided by the capacity
            provider are transitioned to use the capacity from the remaining capacity providers.
            Only capacity providers that are not associated with a cluster can be deleted. To
            remove a capacity provider from a cluster, you can either use <a>PutClusterCapacityProviders</a>
            or delete the cluster.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteCapacityProvider service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteCapacityProvider service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DeleteCapacityProvider">REST API Reference for DeleteCapacityProvider Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.DeleteCluster(Amazon.ECS.Model.DeleteClusterRequest)">
            <summary>
            Deletes the specified cluster. The cluster will transition to the <code>INACTIVE</code>
            state. Clusters with an <code>INACTIVE</code> status may remain discoverable in your
            account for a period of time. However, this behavior is subject to change in the future,
            so you should not rely on <code>INACTIVE</code> clusters persisting.
            
             
            <para>
            You must deregister all container instances from this cluster before you may delete
            it. You can list the container instances in a cluster with <a>ListContainerInstances</a>
            and deregister them with <a>DeregisterContainerInstance</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteCluster service method.</param>
            
            <returns>The response from the DeleteCluster service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterContainsContainerInstancesException">
            You cannot delete a cluster that has registered container instances. First, deregister
            the container instances before you can delete the cluster. For more information, see
            <a>DeregisterContainerInstance</a>.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterContainsServicesException">
            You cannot delete a cluster that contains services. First, update the service to reduce
            its desired task count to 0 and then delete the service. For more information, see
            <a>UpdateService</a> and <a>DeleteService</a>.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterContainsTasksException">
            You cannot delete a cluster that has active tasks.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UpdateInProgressException">
            There is already a current Amazon ECS container agent update in progress on the specified
            container instance. If the container agent becomes disconnected while it is in a transitional
            stage, such as <code>PENDING</code> or <code>STAGING</code>, the update process can
            get stuck in that state. However, when the agent reconnects, it resumes where it stopped
            previously.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DeleteCluster">REST API Reference for DeleteCluster Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.DeleteClusterAsync(Amazon.ECS.Model.DeleteClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified cluster. The cluster will transition to the <code>INACTIVE</code>
            state. Clusters with an <code>INACTIVE</code> status may remain discoverable in your
            account for a period of time. However, this behavior is subject to change in the future,
            so you should not rely on <code>INACTIVE</code> clusters persisting.
            
             
            <para>
            You must deregister all container instances from this cluster before you may delete
            it. You can list the container instances in a cluster with <a>ListContainerInstances</a>
            and deregister them with <a>DeregisterContainerInstance</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteCluster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteCluster service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterContainsContainerInstancesException">
            You cannot delete a cluster that has registered container instances. First, deregister
            the container instances before you can delete the cluster. For more information, see
            <a>DeregisterContainerInstance</a>.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterContainsServicesException">
            You cannot delete a cluster that contains services. First, update the service to reduce
            its desired task count to 0 and then delete the service. For more information, see
            <a>UpdateService</a> and <a>DeleteService</a>.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterContainsTasksException">
            You cannot delete a cluster that has active tasks.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UpdateInProgressException">
            There is already a current Amazon ECS container agent update in progress on the specified
            container instance. If the container agent becomes disconnected while it is in a transitional
            stage, such as <code>PENDING</code> or <code>STAGING</code>, the update process can
            get stuck in that state. However, when the agent reconnects, it resumes where it stopped
            previously.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DeleteCluster">REST API Reference for DeleteCluster Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.DeleteService(Amazon.ECS.Model.DeleteServiceRequest)">
            <summary>
            Deletes a specified service within a cluster. You can delete a service if you have
            no running tasks in it and the desired task count is zero. If the service is actively
            maintaining tasks, you cannot delete it, and you must update the service to a desired
            task count of zero. For more information, see <a>UpdateService</a>.
            
             <note> 
            <para>
            When you delete a service, if there are still running tasks that require cleanup,
            the service status moves from <code>ACTIVE</code> to <code>DRAINING</code>, and the
            service is no longer visible in the console or in the <a>ListServices</a> API operation.
            After all tasks have transitioned to either <code>STOPPING</code> or <code>STOPPED</code>
            status, the service status moves from <code>DRAINING</code> to <code>INACTIVE</code>.
            Services in the <code>DRAINING</code> or <code>INACTIVE</code> status can still be
            viewed with the <a>DescribeServices</a> API operation. However, in the future, <code>INACTIVE</code>
            services may be cleaned up and purged from Amazon ECS record keeping, and <a>DescribeServices</a>
            calls on those services return a <code>ServiceNotFoundException</code> error.
            </para>
             </note> <important> 
            <para>
            If you attempt to create a new service with the same name as an existing service in
            either <code>ACTIVE</code> or <code>DRAINING</code> status, you receive an error.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteService service method.</param>
            
            <returns>The response from the DeleteService service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotFoundException">
            The specified service could not be found. You can view your available services with
            <a>ListServices</a>. Amazon ECS services are cluster-specific and Region-specific.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DeleteService">REST API Reference for DeleteService Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.DeleteServiceAsync(Amazon.ECS.Model.DeleteServiceRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a specified service within a cluster. You can delete a service if you have
            no running tasks in it and the desired task count is zero. If the service is actively
            maintaining tasks, you cannot delete it, and you must update the service to a desired
            task count of zero. For more information, see <a>UpdateService</a>.
            
             <note> 
            <para>
            When you delete a service, if there are still running tasks that require cleanup,
            the service status moves from <code>ACTIVE</code> to <code>DRAINING</code>, and the
            service is no longer visible in the console or in the <a>ListServices</a> API operation.
            After all tasks have transitioned to either <code>STOPPING</code> or <code>STOPPED</code>
            status, the service status moves from <code>DRAINING</code> to <code>INACTIVE</code>.
            Services in the <code>DRAINING</code> or <code>INACTIVE</code> status can still be
            viewed with the <a>DescribeServices</a> API operation. However, in the future, <code>INACTIVE</code>
            services may be cleaned up and purged from Amazon ECS record keeping, and <a>DescribeServices</a>
            calls on those services return a <code>ServiceNotFoundException</code> error.
            </para>
             </note> <important> 
            <para>
            If you attempt to create a new service with the same name as an existing service in
            either <code>ACTIVE</code> or <code>DRAINING</code> status, you receive an error.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteService service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteService service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotFoundException">
            The specified service could not be found. You can view your available services with
            <a>ListServices</a>. Amazon ECS services are cluster-specific and Region-specific.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DeleteService">REST API Reference for DeleteService Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.DeleteTaskSet(Amazon.ECS.Model.DeleteTaskSetRequest)">
            <summary>
            Deletes a specified task set within a service. This is used when a service uses the
            <code>EXTERNAL</code> deployment controller type. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-types.html">Amazon
            ECS Deployment Types</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteTaskSet service method.</param>
            
            <returns>The response from the DeleteTaskSet service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AccessDeniedException">
            You do not have authorization to perform the requested action.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotActiveException">
            The specified service is not active. You can't update a service that is inactive.
            If you have previously deleted a service, you can re-create it with <a>CreateService</a>.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotFoundException">
            The specified service could not be found. You can view your available services with
            <a>ListServices</a>. Amazon ECS services are cluster-specific and Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.TaskSetNotFoundException">
            The specified task set could not be found. You can view your available task sets with
            <a>DescribeTaskSets</a>. Task sets are specific to each cluster, service and Region.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UnsupportedFeatureException">
            The specified task is not supported in this Region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DeleteTaskSet">REST API Reference for DeleteTaskSet Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.DeleteTaskSetAsync(Amazon.ECS.Model.DeleteTaskSetRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a specified task set within a service. This is used when a service uses the
            <code>EXTERNAL</code> deployment controller type. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-types.html">Amazon
            ECS Deployment Types</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteTaskSet service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteTaskSet service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AccessDeniedException">
            You do not have authorization to perform the requested action.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotActiveException">
            The specified service is not active. You can't update a service that is inactive.
            If you have previously deleted a service, you can re-create it with <a>CreateService</a>.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotFoundException">
            The specified service could not be found. You can view your available services with
            <a>ListServices</a>. Amazon ECS services are cluster-specific and Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.TaskSetNotFoundException">
            The specified task set could not be found. You can view your available task sets with
            <a>DescribeTaskSets</a>. Task sets are specific to each cluster, service and Region.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UnsupportedFeatureException">
            The specified task is not supported in this Region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DeleteTaskSet">REST API Reference for DeleteTaskSet Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.DeregisterContainerInstance(Amazon.ECS.Model.DeregisterContainerInstanceRequest)">
            <summary>
            Deregisters an Amazon ECS container instance from the specified cluster. This instance
            is no longer available to run tasks.
            
             
            <para>
            If you intend to use the container instance for some other purpose after deregistration,
            you should stop all of the tasks running on the container instance before deregistration.
            That prevents any orphaned tasks from consuming resources.
            </para>
             
            <para>
            Deregistering a container instance removes the instance from a cluster, but it does
            not terminate the EC2 instance. If you are finished using the instance, be sure to
            terminate it in the Amazon EC2 console to stop billing.
            </para>
             <note> 
            <para>
            If you terminate a running container instance, Amazon ECS automatically deregisters
            the instance from your cluster (stopped container instances or instances with disconnected
            agents are not automatically deregistered when terminated).
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeregisterContainerInstance service method.</param>
            
            <returns>The response from the DeregisterContainerInstance service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DeregisterContainerInstance">REST API Reference for DeregisterContainerInstance Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.DeregisterContainerInstanceAsync(Amazon.ECS.Model.DeregisterContainerInstanceRequest,System.Threading.CancellationToken)">
            <summary>
            Deregisters an Amazon ECS container instance from the specified cluster. This instance
            is no longer available to run tasks.
            
             
            <para>
            If you intend to use the container instance for some other purpose after deregistration,
            you should stop all of the tasks running on the container instance before deregistration.
            That prevents any orphaned tasks from consuming resources.
            </para>
             
            <para>
            Deregistering a container instance removes the instance from a cluster, but it does
            not terminate the EC2 instance. If you are finished using the instance, be sure to
            terminate it in the Amazon EC2 console to stop billing.
            </para>
             <note> 
            <para>
            If you terminate a running container instance, Amazon ECS automatically deregisters
            the instance from your cluster (stopped container instances or instances with disconnected
            agents are not automatically deregistered when terminated).
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeregisterContainerInstance service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeregisterContainerInstance service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DeregisterContainerInstance">REST API Reference for DeregisterContainerInstance Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.DeregisterTaskDefinition(Amazon.ECS.Model.DeregisterTaskDefinitionRequest)">
            <summary>
            Deregisters the specified task definition by family and revision. Upon deregistration,
            the task definition is marked as <code>INACTIVE</code>. Existing tasks and services
            that reference an <code>INACTIVE</code> task definition continue to run without disruption.
            Existing services that reference an <code>INACTIVE</code> task definition can still
            scale up or down by modifying the service's desired count.
            
             
            <para>
            You cannot use an <code>INACTIVE</code> task definition to run new tasks or create
            new services, and you cannot update an existing service to reference an <code>INACTIVE</code>
            task definition. However, there may be up to a 10-minute window following deregistration
            where these restrictions have not yet taken effect.
            </para>
             <note> 
            <para>
            At this time, <code>INACTIVE</code> task definitions remain discoverable in your account
            indefinitely. However, this behavior is subject to change in the future, so you should
            not rely on <code>INACTIVE</code> task definitions persisting beyond the lifecycle
            of any associated tasks and services.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeregisterTaskDefinition service method.</param>
            
            <returns>The response from the DeregisterTaskDefinition service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DeregisterTaskDefinition">REST API Reference for DeregisterTaskDefinition Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.DeregisterTaskDefinitionAsync(Amazon.ECS.Model.DeregisterTaskDefinitionRequest,System.Threading.CancellationToken)">
            <summary>
            Deregisters the specified task definition by family and revision. Upon deregistration,
            the task definition is marked as <code>INACTIVE</code>. Existing tasks and services
            that reference an <code>INACTIVE</code> task definition continue to run without disruption.
            Existing services that reference an <code>INACTIVE</code> task definition can still
            scale up or down by modifying the service's desired count.
            
             
            <para>
            You cannot use an <code>INACTIVE</code> task definition to run new tasks or create
            new services, and you cannot update an existing service to reference an <code>INACTIVE</code>
            task definition. However, there may be up to a 10-minute window following deregistration
            where these restrictions have not yet taken effect.
            </para>
             <note> 
            <para>
            At this time, <code>INACTIVE</code> task definitions remain discoverable in your account
            indefinitely. However, this behavior is subject to change in the future, so you should
            not rely on <code>INACTIVE</code> task definitions persisting beyond the lifecycle
            of any associated tasks and services.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeregisterTaskDefinition service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeregisterTaskDefinition service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DeregisterTaskDefinition">REST API Reference for DeregisterTaskDefinition Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.DescribeCapacityProviders(Amazon.ECS.Model.DescribeCapacityProvidersRequest)">
            <summary>
            Describes one or more of your capacity providers.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeCapacityProviders service method.</param>
            
            <returns>The response from the DescribeCapacityProviders service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DescribeCapacityProviders">REST API Reference for DescribeCapacityProviders Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.DescribeCapacityProvidersAsync(Amazon.ECS.Model.DescribeCapacityProvidersRequest,System.Threading.CancellationToken)">
            <summary>
            Describes one or more of your capacity providers.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeCapacityProviders service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeCapacityProviders service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DescribeCapacityProviders">REST API Reference for DescribeCapacityProviders Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.DescribeClusters(Amazon.ECS.Model.DescribeClustersRequest)">
            <summary>
            Describes one or more of your clusters.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeClusters service method.</param>
            
            <returns>The response from the DescribeClusters service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DescribeClusters">REST API Reference for DescribeClusters Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.DescribeClustersAsync(Amazon.ECS.Model.DescribeClustersRequest,System.Threading.CancellationToken)">
            <summary>
            Describes one or more of your clusters.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeClusters service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeClusters service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DescribeClusters">REST API Reference for DescribeClusters Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.DescribeContainerInstances(Amazon.ECS.Model.DescribeContainerInstancesRequest)">
            <summary>
            Describes one or more container instances. Returns metadata about each container instance
            requested.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeContainerInstances service method.</param>
            
            <returns>The response from the DescribeContainerInstances service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DescribeContainerInstances">REST API Reference for DescribeContainerInstances Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.DescribeContainerInstancesAsync(Amazon.ECS.Model.DescribeContainerInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Describes one or more container instances. Returns metadata about each container instance
            requested.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeContainerInstances service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeContainerInstances service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DescribeContainerInstances">REST API Reference for DescribeContainerInstances Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.DescribeServices(Amazon.ECS.Model.DescribeServicesRequest)">
            <summary>
            Describes the specified services running in your cluster.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeServices service method.</param>
            
            <returns>The response from the DescribeServices service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DescribeServices">REST API Reference for DescribeServices Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.DescribeServicesAsync(Amazon.ECS.Model.DescribeServicesRequest,System.Threading.CancellationToken)">
            <summary>
            Describes the specified services running in your cluster.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeServices service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeServices service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DescribeServices">REST API Reference for DescribeServices Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.DescribeTaskDefinition(Amazon.ECS.Model.DescribeTaskDefinitionRequest)">
            <summary>
            Describes a task definition. You can specify a <code>family</code> and <code>revision</code>
            to find information about a specific task definition, or you can simply specify the
            family to find the latest <code>ACTIVE</code> revision in that family.
            
             <note> 
            <para>
            You can only describe <code>INACTIVE</code> task definitions while an active task
            or service references them.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeTaskDefinition service method.</param>
            
            <returns>The response from the DescribeTaskDefinition service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DescribeTaskDefinition">REST API Reference for DescribeTaskDefinition Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.DescribeTaskDefinitionAsync(Amazon.ECS.Model.DescribeTaskDefinitionRequest,System.Threading.CancellationToken)">
            <summary>
            Describes a task definition. You can specify a <code>family</code> and <code>revision</code>
            to find information about a specific task definition, or you can simply specify the
            family to find the latest <code>ACTIVE</code> revision in that family.
            
             <note> 
            <para>
            You can only describe <code>INACTIVE</code> task definitions while an active task
            or service references them.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeTaskDefinition service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeTaskDefinition service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DescribeTaskDefinition">REST API Reference for DescribeTaskDefinition Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.DescribeTasks(Amazon.ECS.Model.DescribeTasksRequest)">
            <summary>
            Describes a specified task or tasks.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeTasks service method.</param>
            
            <returns>The response from the DescribeTasks service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DescribeTasks">REST API Reference for DescribeTasks Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.DescribeTasksAsync(Amazon.ECS.Model.DescribeTasksRequest,System.Threading.CancellationToken)">
            <summary>
            Describes a specified task or tasks.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeTasks service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeTasks service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DescribeTasks">REST API Reference for DescribeTasks Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.DescribeTaskSets(Amazon.ECS.Model.DescribeTaskSetsRequest)">
            <summary>
            Describes the task sets in the specified cluster and service. This is used when a
            service uses the <code>EXTERNAL</code> deployment controller type. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-types.html">Amazon
            ECS Deployment Types</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeTaskSets service method.</param>
            
            <returns>The response from the DescribeTaskSets service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AccessDeniedException">
            You do not have authorization to perform the requested action.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotActiveException">
            The specified service is not active. You can't update a service that is inactive.
            If you have previously deleted a service, you can re-create it with <a>CreateService</a>.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotFoundException">
            The specified service could not be found. You can view your available services with
            <a>ListServices</a>. Amazon ECS services are cluster-specific and Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UnsupportedFeatureException">
            The specified task is not supported in this Region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DescribeTaskSets">REST API Reference for DescribeTaskSets Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.DescribeTaskSetsAsync(Amazon.ECS.Model.DescribeTaskSetsRequest,System.Threading.CancellationToken)">
            <summary>
            Describes the task sets in the specified cluster and service. This is used when a
            service uses the <code>EXTERNAL</code> deployment controller type. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-types.html">Amazon
            ECS Deployment Types</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeTaskSets service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeTaskSets service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AccessDeniedException">
            You do not have authorization to perform the requested action.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotActiveException">
            The specified service is not active. You can't update a service that is inactive.
            If you have previously deleted a service, you can re-create it with <a>CreateService</a>.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotFoundException">
            The specified service could not be found. You can view your available services with
            <a>ListServices</a>. Amazon ECS services are cluster-specific and Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UnsupportedFeatureException">
            The specified task is not supported in this Region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DescribeTaskSets">REST API Reference for DescribeTaskSets Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.ExecuteCommand(Amazon.ECS.Model.ExecuteCommandRequest)">
            <summary>
            Runs a command remotely on a container within a task.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ExecuteCommand service method.</param>
            
            <returns>The response from the ExecuteCommand service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AccessDeniedException">
            You do not have authorization to perform the requested action.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.TargetNotConnectedException">
            The target container is not properly configured with the execute command agent or
            the container is no longer active or running.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ExecuteCommand">REST API Reference for ExecuteCommand Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.ExecuteCommandAsync(Amazon.ECS.Model.ExecuteCommandRequest,System.Threading.CancellationToken)">
            <summary>
            Runs a command remotely on a container within a task.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ExecuteCommand service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ExecuteCommand service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AccessDeniedException">
            You do not have authorization to perform the requested action.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.TargetNotConnectedException">
            The target container is not properly configured with the execute command agent or
            the container is no longer active or running.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ExecuteCommand">REST API Reference for ExecuteCommand Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.ListAccountSettings(Amazon.ECS.Model.ListAccountSettingsRequest)">
            <summary>
            Lists the account settings for a specified principal.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListAccountSettings service method.</param>
            
            <returns>The response from the ListAccountSettings service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListAccountSettings">REST API Reference for ListAccountSettings Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.ListAccountSettingsAsync(Amazon.ECS.Model.ListAccountSettingsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the account settings for a specified principal.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListAccountSettings service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListAccountSettings service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListAccountSettings">REST API Reference for ListAccountSettings Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.ListAttributes(Amazon.ECS.Model.ListAttributesRequest)">
            <summary>
            Lists the attributes for Amazon ECS resources within a specified target type and cluster.
            When you specify a target type and cluster, <code>ListAttributes</code> returns a
            list of attribute objects, one for each attribute on each resource. You can filter
            the list of results to a single attribute name to only return results that have that
            name. You can also filter the results by attribute name and value, for example, to
            see which container instances in a cluster are running a Linux AMI (<code>ecs.os-type=linux</code>).
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListAttributes service method.</param>
            
            <returns>The response from the ListAttributes service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListAttributes">REST API Reference for ListAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.ListAttributesAsync(Amazon.ECS.Model.ListAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the attributes for Amazon ECS resources within a specified target type and cluster.
            When you specify a target type and cluster, <code>ListAttributes</code> returns a
            list of attribute objects, one for each attribute on each resource. You can filter
            the list of results to a single attribute name to only return results that have that
            name. You can also filter the results by attribute name and value, for example, to
            see which container instances in a cluster are running a Linux AMI (<code>ecs.os-type=linux</code>).
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListAttributes service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListAttributes service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListAttributes">REST API Reference for ListAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.ListClusters(Amazon.ECS.Model.ListClustersRequest)">
            <summary>
            Returns a list of existing clusters.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListClusters service method.</param>
            
            <returns>The response from the ListClusters service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListClusters">REST API Reference for ListClusters Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.ListClustersAsync(Amazon.ECS.Model.ListClustersRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of existing clusters.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListClusters service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListClusters service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListClusters">REST API Reference for ListClusters Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.ListContainerInstances(Amazon.ECS.Model.ListContainerInstancesRequest)">
            <summary>
            Returns a list of container instances in a specified cluster. You can filter the results
            of a <code>ListContainerInstances</code> operation with cluster query language statements
            inside the <code>filter</code> parameter. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cluster-query-language.html">Cluster
            Query Language</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListContainerInstances service method.</param>
            
            <returns>The response from the ListContainerInstances service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListContainerInstances">REST API Reference for ListContainerInstances Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.ListContainerInstancesAsync(Amazon.ECS.Model.ListContainerInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of container instances in a specified cluster. You can filter the results
            of a <code>ListContainerInstances</code> operation with cluster query language statements
            inside the <code>filter</code> parameter. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cluster-query-language.html">Cluster
            Query Language</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListContainerInstances service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListContainerInstances service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListContainerInstances">REST API Reference for ListContainerInstances Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.ListServices(Amazon.ECS.Model.ListServicesRequest)">
            <summary>
            Returns a list of services. You can filter the results by cluster, launch type, and
            scheduling strategy.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListServices service method.</param>
            
            <returns>The response from the ListServices service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListServices">REST API Reference for ListServices Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.ListServicesAsync(Amazon.ECS.Model.ListServicesRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of services. You can filter the results by cluster, launch type, and
            scheduling strategy.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListServices service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListServices service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListServices">REST API Reference for ListServices Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.ListTagsForResource(Amazon.ECS.Model.ListTagsForResourceRequest)">
            <summary>
            List the tags for an Amazon ECS resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            
            <returns>The response from the ListTagsForResource service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.ListTagsForResourceAsync(Amazon.ECS.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            List the tags for an Amazon ECS resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.ListTaskDefinitionFamilies(Amazon.ECS.Model.ListTaskDefinitionFamiliesRequest)">
            <summary>
            Returns a list of task definition families that are registered to your account (which
            may include task definition families that no longer have any <code>ACTIVE</code> task
            definition revisions).
            
             
            <para>
            You can filter out task definition families that do not contain any <code>ACTIVE</code>
            task definition revisions by setting the <code>status</code> parameter to <code>ACTIVE</code>.
            You can also filter the results with the <code>familyPrefix</code> parameter.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTaskDefinitionFamilies service method.</param>
            
            <returns>The response from the ListTaskDefinitionFamilies service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListTaskDefinitionFamilies">REST API Reference for ListTaskDefinitionFamilies Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.ListTaskDefinitionFamiliesAsync(Amazon.ECS.Model.ListTaskDefinitionFamiliesRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of task definition families that are registered to your account (which
            may include task definition families that no longer have any <code>ACTIVE</code> task
            definition revisions).
            
             
            <para>
            You can filter out task definition families that do not contain any <code>ACTIVE</code>
            task definition revisions by setting the <code>status</code> parameter to <code>ACTIVE</code>.
            You can also filter the results with the <code>familyPrefix</code> parameter.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTaskDefinitionFamilies service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTaskDefinitionFamilies service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListTaskDefinitionFamilies">REST API Reference for ListTaskDefinitionFamilies Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.ListTaskDefinitions(Amazon.ECS.Model.ListTaskDefinitionsRequest)">
            <summary>
            Returns a list of task definitions that are registered to your account. You can filter
            the results by family name with the <code>familyPrefix</code> parameter or by status
            with the <code>status</code> parameter.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTaskDefinitions service method.</param>
            
            <returns>The response from the ListTaskDefinitions service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListTaskDefinitions">REST API Reference for ListTaskDefinitions Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.ListTaskDefinitionsAsync(Amazon.ECS.Model.ListTaskDefinitionsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of task definitions that are registered to your account. You can filter
            the results by family name with the <code>familyPrefix</code> parameter or by status
            with the <code>status</code> parameter.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTaskDefinitions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTaskDefinitions service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListTaskDefinitions">REST API Reference for ListTaskDefinitions Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.ListTasks(Amazon.ECS.Model.ListTasksRequest)">
            <summary>
            Returns a list of tasks. You can filter the results by cluster, task definition family,
            container instance, launch type, what IAM principal started the task, or by the desired
            status of the task.
            
             
            <para>
            Recently stopped tasks might appear in the returned results. Currently, stopped tasks
            appear in the returned results for at least one hour.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTasks service method.</param>
            
            <returns>The response from the ListTasks service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotFoundException">
            The specified service could not be found. You can view your available services with
            <a>ListServices</a>. Amazon ECS services are cluster-specific and Region-specific.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListTasks">REST API Reference for ListTasks Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.ListTasksAsync(Amazon.ECS.Model.ListTasksRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of tasks. You can filter the results by cluster, task definition family,
            container instance, launch type, what IAM principal started the task, or by the desired
            status of the task.
            
             
            <para>
            Recently stopped tasks might appear in the returned results. Currently, stopped tasks
            appear in the returned results for at least one hour.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTasks service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTasks service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotFoundException">
            The specified service could not be found. You can view your available services with
            <a>ListServices</a>. Amazon ECS services are cluster-specific and Region-specific.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListTasks">REST API Reference for ListTasks Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.PutAccountSetting(Amazon.ECS.Model.PutAccountSettingRequest)">
            <summary>
            Modifies an account setting. Account settings are set on a per-Region basis.
            
             
            <para>
            If you change the account setting for the root user, the default settings for all
            of the IAM users and roles for which no individual account setting has been specified
            are reset. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-account-settings.html">Account
            Settings</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            When <code>serviceLongArnFormat</code>, <code>taskLongArnFormat</code>, or <code>containerInstanceLongArnFormat</code>
            are specified, the Amazon Resource Name (ARN) and resource ID format of the resource
            type for a specified IAM user, IAM role, or the root user for an account is affected.
            The opt-in and opt-out account setting must be set for each Amazon ECS resource separately.
            The ARN and resource ID format of a resource will be defined by the opt-in status
            of the IAM user or role that created the resource. You must enable this setting to
            use Amazon ECS features such as resource tagging.
            </para>
             
            <para>
            When <code>awsvpcTrunking</code> is specified, the elastic network interface (ENI)
            limit for any new container instances that support the feature is changed. If <code>awsvpcTrunking</code>
            is enabled, any new container instances that support the feature are launched have
            the increased ENI limits available to them. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/container-instance-eni.html">Elastic
            Network Interface Trunking</a> in the <i>Amazon Elastic Container Service Developer
            Guide</i>.
            </para>
             
            <para>
            When <code>containerInsights</code> is specified, the default setting indicating whether
            CloudWatch Container Insights is enabled for your clusters is changed. If <code>containerInsights</code>
            is enabled, any new clusters that are created will have Container Insights enabled
            unless you disable it during cluster creation. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cloudwatch-container-insights.html">CloudWatch
            Container Insights</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutAccountSetting service method.</param>
            
            <returns>The response from the PutAccountSetting service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/PutAccountSetting">REST API Reference for PutAccountSetting Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.PutAccountSettingAsync(Amazon.ECS.Model.PutAccountSettingRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies an account setting. Account settings are set on a per-Region basis.
            
             
            <para>
            If you change the account setting for the root user, the default settings for all
            of the IAM users and roles for which no individual account setting has been specified
            are reset. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-account-settings.html">Account
            Settings</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            When <code>serviceLongArnFormat</code>, <code>taskLongArnFormat</code>, or <code>containerInstanceLongArnFormat</code>
            are specified, the Amazon Resource Name (ARN) and resource ID format of the resource
            type for a specified IAM user, IAM role, or the root user for an account is affected.
            The opt-in and opt-out account setting must be set for each Amazon ECS resource separately.
            The ARN and resource ID format of a resource will be defined by the opt-in status
            of the IAM user or role that created the resource. You must enable this setting to
            use Amazon ECS features such as resource tagging.
            </para>
             
            <para>
            When <code>awsvpcTrunking</code> is specified, the elastic network interface (ENI)
            limit for any new container instances that support the feature is changed. If <code>awsvpcTrunking</code>
            is enabled, any new container instances that support the feature are launched have
            the increased ENI limits available to them. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/container-instance-eni.html">Elastic
            Network Interface Trunking</a> in the <i>Amazon Elastic Container Service Developer
            Guide</i>.
            </para>
             
            <para>
            When <code>containerInsights</code> is specified, the default setting indicating whether
            CloudWatch Container Insights is enabled for your clusters is changed. If <code>containerInsights</code>
            is enabled, any new clusters that are created will have Container Insights enabled
            unless you disable it during cluster creation. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cloudwatch-container-insights.html">CloudWatch
            Container Insights</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutAccountSetting service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutAccountSetting service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/PutAccountSetting">REST API Reference for PutAccountSetting Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.PutAccountSettingDefault(Amazon.ECS.Model.PutAccountSettingDefaultRequest)">
            <summary>
            Modifies an account setting for all IAM users on an account for whom no individual
            account setting has been specified. Account settings are set on a per-Region basis.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutAccountSettingDefault service method.</param>
            
            <returns>The response from the PutAccountSettingDefault service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/PutAccountSettingDefault">REST API Reference for PutAccountSettingDefault Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.PutAccountSettingDefaultAsync(Amazon.ECS.Model.PutAccountSettingDefaultRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies an account setting for all IAM users on an account for whom no individual
            account setting has been specified. Account settings are set on a per-Region basis.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutAccountSettingDefault service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutAccountSettingDefault service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/PutAccountSettingDefault">REST API Reference for PutAccountSettingDefault Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.PutAttributes(Amazon.ECS.Model.PutAttributesRequest)">
            <summary>
            Create or update an attribute on an Amazon ECS resource. If the attribute does not
            exist, it is created. If the attribute exists, its value is replaced with the specified
            value. To delete an attribute, use <a>DeleteAttributes</a>. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-constraints.html#attributes">Attributes</a>
            in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutAttributes service method.</param>
            
            <returns>The response from the PutAttributes service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AttributeLimitExceededException">
            You can apply up to 10 custom attributes per resource. You can view the attributes
            of a resource with <a>ListAttributes</a>. You can remove existing attributes on a
            resource with <a>DeleteAttributes</a>.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.TargetNotFoundException">
            The specified target could not be found. You can view your available container instances
            with <a>ListContainerInstances</a>. Amazon ECS container instances are cluster-specific
            and Region-specific.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/PutAttributes">REST API Reference for PutAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.PutAttributesAsync(Amazon.ECS.Model.PutAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Create or update an attribute on an Amazon ECS resource. If the attribute does not
            exist, it is created. If the attribute exists, its value is replaced with the specified
            value. To delete an attribute, use <a>DeleteAttributes</a>. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-constraints.html#attributes">Attributes</a>
            in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutAttributes service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutAttributes service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AttributeLimitExceededException">
            You can apply up to 10 custom attributes per resource. You can view the attributes
            of a resource with <a>ListAttributes</a>. You can remove existing attributes on a
            resource with <a>DeleteAttributes</a>.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.TargetNotFoundException">
            The specified target could not be found. You can view your available container instances
            with <a>ListContainerInstances</a>. Amazon ECS container instances are cluster-specific
            and Region-specific.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/PutAttributes">REST API Reference for PutAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.PutClusterCapacityProviders(Amazon.ECS.Model.PutClusterCapacityProvidersRequest)">
            <summary>
            Modifies the available capacity providers and the default capacity provider strategy
            for a cluster.
            
             
            <para>
            You must specify both the available capacity providers and a default capacity provider
            strategy for the cluster. If the specified cluster has existing capacity providers
            associated with it, you must specify all existing capacity providers in addition to
            any new ones you want to add. Any existing capacity providers associated with a cluster
            that are omitted from a <a>PutClusterCapacityProviders</a> API call will be disassociated
            with the cluster. You can only disassociate an existing capacity provider from a cluster
            if it's not being used by any existing tasks.
            </para>
             
            <para>
            When creating a service or running a task on a cluster, if no capacity provider or
            launch type is specified, then the cluster's default capacity provider strategy is
            used. It is recommended to define a default capacity provider strategy for your cluster,
            however you may specify an empty array (<code>[]</code>) to bypass defining a default
            strategy.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutClusterCapacityProviders service method.</param>
            
            <returns>The response from the PutClusterCapacityProviders service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ResourceInUseException">
            The specified resource is in-use and cannot be removed.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UpdateInProgressException">
            There is already a current Amazon ECS container agent update in progress on the specified
            container instance. If the container agent becomes disconnected while it is in a transitional
            stage, such as <code>PENDING</code> or <code>STAGING</code>, the update process can
            get stuck in that state. However, when the agent reconnects, it resumes where it stopped
            previously.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/PutClusterCapacityProviders">REST API Reference for PutClusterCapacityProviders Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.PutClusterCapacityProvidersAsync(Amazon.ECS.Model.PutClusterCapacityProvidersRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies the available capacity providers and the default capacity provider strategy
            for a cluster.
            
             
            <para>
            You must specify both the available capacity providers and a default capacity provider
            strategy for the cluster. If the specified cluster has existing capacity providers
            associated with it, you must specify all existing capacity providers in addition to
            any new ones you want to add. Any existing capacity providers associated with a cluster
            that are omitted from a <a>PutClusterCapacityProviders</a> API call will be disassociated
            with the cluster. You can only disassociate an existing capacity provider from a cluster
            if it's not being used by any existing tasks.
            </para>
             
            <para>
            When creating a service or running a task on a cluster, if no capacity provider or
            launch type is specified, then the cluster's default capacity provider strategy is
            used. It is recommended to define a default capacity provider strategy for your cluster,
            however you may specify an empty array (<code>[]</code>) to bypass defining a default
            strategy.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutClusterCapacityProviders service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutClusterCapacityProviders service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ResourceInUseException">
            The specified resource is in-use and cannot be removed.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UpdateInProgressException">
            There is already a current Amazon ECS container agent update in progress on the specified
            container instance. If the container agent becomes disconnected while it is in a transitional
            stage, such as <code>PENDING</code> or <code>STAGING</code>, the update process can
            get stuck in that state. However, when the agent reconnects, it resumes where it stopped
            previously.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/PutClusterCapacityProviders">REST API Reference for PutClusterCapacityProviders Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.RegisterTaskDefinition(Amazon.ECS.Model.RegisterTaskDefinitionRequest)">
            <summary>
            Registers a new task definition from the supplied <code>family</code> and <code>containerDefinitions</code>.
            Optionally, you can add data volumes to your containers with the <code>volumes</code>
            parameter. For more information about task definition parameters and defaults, see
            <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_defintions.html">Amazon
            ECS Task Definitions</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            
             
            <para>
            You can specify an IAM role for your task with the <code>taskRoleArn</code> parameter.
            When you specify an IAM role for a task, its containers can then use the latest versions
            of the CLI or SDKs to make API requests to the Amazon Web Services services that are
            specified in the IAM policy associated with the role. For more information, see <a
            href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-iam-roles.html">IAM
            Roles for Tasks</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            You can specify a Docker networking mode for the containers in your task definition
            with the <code>networkMode</code> parameter. The available network modes correspond
            to those described in <a href="https://docs.docker.com/engine/reference/run/#/network-settings">Network
            settings</a> in the Docker run reference. If you specify the <code>awsvpc</code> network
            mode, the task is allocated an elastic network interface, and you must specify a <a>NetworkConfiguration</a>
            when you create a service or run a task with the task definition. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-networking.html">Task
            Networking</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RegisterTaskDefinition service method.</param>
            
            <returns>The response from the RegisterTaskDefinition service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/RegisterTaskDefinition">REST API Reference for RegisterTaskDefinition Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.RegisterTaskDefinitionAsync(Amazon.ECS.Model.RegisterTaskDefinitionRequest,System.Threading.CancellationToken)">
            <summary>
            Registers a new task definition from the supplied <code>family</code> and <code>containerDefinitions</code>.
            Optionally, you can add data volumes to your containers with the <code>volumes</code>
            parameter. For more information about task definition parameters and defaults, see
            <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_defintions.html">Amazon
            ECS Task Definitions</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            
             
            <para>
            You can specify an IAM role for your task with the <code>taskRoleArn</code> parameter.
            When you specify an IAM role for a task, its containers can then use the latest versions
            of the CLI or SDKs to make API requests to the Amazon Web Services services that are
            specified in the IAM policy associated with the role. For more information, see <a
            href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-iam-roles.html">IAM
            Roles for Tasks</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            You can specify a Docker networking mode for the containers in your task definition
            with the <code>networkMode</code> parameter. The available network modes correspond
            to those described in <a href="https://docs.docker.com/engine/reference/run/#/network-settings">Network
            settings</a> in the Docker run reference. If you specify the <code>awsvpc</code> network
            mode, the task is allocated an elastic network interface, and you must specify a <a>NetworkConfiguration</a>
            when you create a service or run a task with the task definition. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-networking.html">Task
            Networking</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RegisterTaskDefinition service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RegisterTaskDefinition service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/RegisterTaskDefinition">REST API Reference for RegisterTaskDefinition Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.RunTask(Amazon.ECS.Model.RunTaskRequest)">
            <summary>
            Starts a new task using the specified task definition.
            
             
            <para>
            You can allow Amazon ECS to place tasks for you, or you can customize how Amazon ECS
            places tasks using placement constraints and placement strategies. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/scheduling_tasks.html">Scheduling
            Tasks</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            Alternatively, you can use <a>StartTask</a> to use your own scheduler or place tasks
            manually on specific container instances.
            </para>
             
            <para>
            The Amazon ECS API follows an eventual consistency model, due to the distributed nature
            of the system supporting the API. This means that the result of an API command you
            run that affects your Amazon ECS resources might not be immediately visible to all
            subsequent commands you run. Keep this in mind when you carry out an API command that
            immediately follows a previous API command.
            </para>
             
            <para>
            To manage eventual consistency, you can do the following:
            </para>
             <ul> <li> 
            <para>
            Confirm the state of the resource before you run a command to modify it. Run the DescribeTasks
            command using an exponential backoff algorithm to ensure that you allow enough time
            for the previous command to propagate through the system. To do this, run the DescribeTasks
            command repeatedly, starting with a couple of seconds of wait time and increasing
            gradually up to five minutes of wait time.
            </para>
             </li> <li> 
            <para>
            Add wait time between subsequent commands, even if the DescribeTasks command returns
            an accurate response. Apply an exponential backoff algorithm starting with a couple
            of seconds of wait time, and increase gradually up to about five minutes of wait time.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RunTask service method.</param>
            
            <returns>The response from the RunTask service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AccessDeniedException">
            You do not have authorization to perform the requested action.
            </exception>
            <exception cref="T:Amazon.ECS.Model.BlockedException">
            Your Amazon Web Services account has been blocked. For more information, contact <a
            href="http://aws.amazon.com/contact-us/"> Amazon Web Services Support</a>.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.PlatformTaskDefinitionIncompatibilityException">
            The specified platform version does not satisfy the task definition's required capabilities.
            </exception>
            <exception cref="T:Amazon.ECS.Model.PlatformUnknownException">
            The specified platform version does not exist.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UnsupportedFeatureException">
            The specified task is not supported in this Region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/RunTask">REST API Reference for RunTask Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.RunTaskAsync(Amazon.ECS.Model.RunTaskRequest,System.Threading.CancellationToken)">
            <summary>
            Starts a new task using the specified task definition.
            
             
            <para>
            You can allow Amazon ECS to place tasks for you, or you can customize how Amazon ECS
            places tasks using placement constraints and placement strategies. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/scheduling_tasks.html">Scheduling
            Tasks</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            Alternatively, you can use <a>StartTask</a> to use your own scheduler or place tasks
            manually on specific container instances.
            </para>
             
            <para>
            The Amazon ECS API follows an eventual consistency model, due to the distributed nature
            of the system supporting the API. This means that the result of an API command you
            run that affects your Amazon ECS resources might not be immediately visible to all
            subsequent commands you run. Keep this in mind when you carry out an API command that
            immediately follows a previous API command.
            </para>
             
            <para>
            To manage eventual consistency, you can do the following:
            </para>
             <ul> <li> 
            <para>
            Confirm the state of the resource before you run a command to modify it. Run the DescribeTasks
            command using an exponential backoff algorithm to ensure that you allow enough time
            for the previous command to propagate through the system. To do this, run the DescribeTasks
            command repeatedly, starting with a couple of seconds of wait time and increasing
            gradually up to five minutes of wait time.
            </para>
             </li> <li> 
            <para>
            Add wait time between subsequent commands, even if the DescribeTasks command returns
            an accurate response. Apply an exponential backoff algorithm starting with a couple
            of seconds of wait time, and increase gradually up to about five minutes of wait time.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RunTask service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RunTask service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AccessDeniedException">
            You do not have authorization to perform the requested action.
            </exception>
            <exception cref="T:Amazon.ECS.Model.BlockedException">
            Your Amazon Web Services account has been blocked. For more information, contact <a
            href="http://aws.amazon.com/contact-us/"> Amazon Web Services Support</a>.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.PlatformTaskDefinitionIncompatibilityException">
            The specified platform version does not satisfy the task definition's required capabilities.
            </exception>
            <exception cref="T:Amazon.ECS.Model.PlatformUnknownException">
            The specified platform version does not exist.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UnsupportedFeatureException">
            The specified task is not supported in this Region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/RunTask">REST API Reference for RunTask Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.StartTask(Amazon.ECS.Model.StartTaskRequest)">
            <summary>
            Starts a new task from the specified task definition on the specified container instance
            or instances.
            
             
            <para>
            Alternatively, you can use <a>RunTask</a> to place tasks for you. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/scheduling_tasks.html">Scheduling
            Tasks</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartTask service method.</param>
            
            <returns>The response from the StartTask service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/StartTask">REST API Reference for StartTask Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.StartTaskAsync(Amazon.ECS.Model.StartTaskRequest,System.Threading.CancellationToken)">
            <summary>
            Starts a new task from the specified task definition on the specified container instance
            or instances.
            
             
            <para>
            Alternatively, you can use <a>RunTask</a> to place tasks for you. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/scheduling_tasks.html">Scheduling
            Tasks</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartTask service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartTask service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/StartTask">REST API Reference for StartTask Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.StopTask(Amazon.ECS.Model.StopTaskRequest)">
            <summary>
            Stops a running task. Any tags associated with the task will be deleted.
            
             
            <para>
            When <a>StopTask</a> is called on a task, the equivalent of <code>docker stop</code>
            is issued to the containers running in the task. This results in a <code>SIGTERM</code>
            value and a default 30-second timeout, after which the <code>SIGKILL</code> value
            is sent and the containers are forcibly stopped. If the container handles the <code>SIGTERM</code>
            value gracefully and exits within 30 seconds from receiving it, no <code>SIGKILL</code>
            value is sent.
            </para>
             <note> 
            <para>
            The default 30-second timeout can be configured on the Amazon ECS container agent
            with the <code>ECS_CONTAINER_STOP_TIMEOUT</code> variable. For more information, see
            <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-config.html">Amazon
            ECS Container Agent Configuration</a> in the <i>Amazon Elastic Container Service Developer
            Guide</i>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StopTask service method.</param>
            
            <returns>The response from the StopTask service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/StopTask">REST API Reference for StopTask Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.StopTaskAsync(Amazon.ECS.Model.StopTaskRequest,System.Threading.CancellationToken)">
            <summary>
            Stops a running task. Any tags associated with the task will be deleted.
            
             
            <para>
            When <a>StopTask</a> is called on a task, the equivalent of <code>docker stop</code>
            is issued to the containers running in the task. This results in a <code>SIGTERM</code>
            value and a default 30-second timeout, after which the <code>SIGKILL</code> value
            is sent and the containers are forcibly stopped. If the container handles the <code>SIGTERM</code>
            value gracefully and exits within 30 seconds from receiving it, no <code>SIGKILL</code>
            value is sent.
            </para>
             <note> 
            <para>
            The default 30-second timeout can be configured on the Amazon ECS container agent
            with the <code>ECS_CONTAINER_STOP_TIMEOUT</code> variable. For more information, see
            <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-config.html">Amazon
            ECS Container Agent Configuration</a> in the <i>Amazon Elastic Container Service Developer
            Guide</i>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StopTask service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StopTask service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/StopTask">REST API Reference for StopTask Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.SubmitAttachmentStateChanges(Amazon.ECS.Model.SubmitAttachmentStateChangesRequest)">
            <summary>
            <note> 
            <para>
            This action is only used by the Amazon ECS agent, and it is not intended for use outside
            of the agent.
            </para>
             </note> 
            <para>
            Sent to acknowledge that an attachment changed states.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the SubmitAttachmentStateChanges service method.</param>
            
            <returns>The response from the SubmitAttachmentStateChanges service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AccessDeniedException">
            You do not have authorization to perform the requested action.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/SubmitAttachmentStateChanges">REST API Reference for SubmitAttachmentStateChanges Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.SubmitAttachmentStateChangesAsync(Amazon.ECS.Model.SubmitAttachmentStateChangesRequest,System.Threading.CancellationToken)">
            <summary>
            <note> 
            <para>
            This action is only used by the Amazon ECS agent, and it is not intended for use outside
            of the agent.
            </para>
             </note> 
            <para>
            Sent to acknowledge that an attachment changed states.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the SubmitAttachmentStateChanges service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the SubmitAttachmentStateChanges service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AccessDeniedException">
            You do not have authorization to perform the requested action.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/SubmitAttachmentStateChanges">REST API Reference for SubmitAttachmentStateChanges Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.TagResource(Amazon.ECS.Model.TagResourceRequest)">
            <summary>
            Associates the specified tags to a resource with the specified <code>resourceArn</code>.
            If existing tags on a resource are not specified in the request parameters, they are
            not changed. When a resource is deleted, the tags associated with that resource are
            deleted as well.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            
            <returns>The response from the TagResource service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.TagResourceAsync(Amazon.ECS.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Associates the specified tags to a resource with the specified <code>resourceArn</code>.
            If existing tags on a resource are not specified in the request parameters, they are
            not changed. When a resource is deleted, the tags associated with that resource are
            deleted as well.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.UntagResource(Amazon.ECS.Model.UntagResourceRequest)">
            <summary>
            Deletes specified tags from a resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            
            <returns>The response from the UntagResource service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.UntagResourceAsync(Amazon.ECS.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes specified tags from a resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.UpdateCapacityProvider(Amazon.ECS.Model.UpdateCapacityProviderRequest)">
            <summary>
            Modifies the parameters for a capacity provider.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateCapacityProvider service method.</param>
            
            <returns>The response from the UpdateCapacityProvider service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/UpdateCapacityProvider">REST API Reference for UpdateCapacityProvider Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.UpdateCapacityProviderAsync(Amazon.ECS.Model.UpdateCapacityProviderRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies the parameters for a capacity provider.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateCapacityProvider service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateCapacityProvider service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/UpdateCapacityProvider">REST API Reference for UpdateCapacityProvider Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.UpdateCluster(Amazon.ECS.Model.UpdateClusterRequest)">
            <summary>
            Updates the cluster.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateCluster service method.</param>
            
            <returns>The response from the UpdateCluster service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/UpdateCluster">REST API Reference for UpdateCluster Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.UpdateClusterAsync(Amazon.ECS.Model.UpdateClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the cluster.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateCluster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateCluster service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/UpdateCluster">REST API Reference for UpdateCluster Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.UpdateClusterSettings(Amazon.ECS.Model.UpdateClusterSettingsRequest)">
            <summary>
            Modifies the settings to use for a cluster.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateClusterSettings service method.</param>
            
            <returns>The response from the UpdateClusterSettings service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/UpdateClusterSettings">REST API Reference for UpdateClusterSettings Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.UpdateClusterSettingsAsync(Amazon.ECS.Model.UpdateClusterSettingsRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies the settings to use for a cluster.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateClusterSettings service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateClusterSettings service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/UpdateClusterSettings">REST API Reference for UpdateClusterSettings Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.UpdateContainerAgent(Amazon.ECS.Model.UpdateContainerAgentRequest)">
            <summary>
            Updates the Amazon ECS container agent on a specified container instance. Updating
            the Amazon ECS container agent does not interrupt running tasks or services on the
            container instance. The process for updating the agent differs depending on whether
            your container instance was launched with the Amazon ECS-optimized AMI or another
            operating system.
            
             <note> 
            <para>
            The <code>UpdateContainerAgent</code> API isn't supported for container instances
            using the Amazon ECS-optimized Amazon Linux 2 (arm64) AMI. To update the container
            agent, you can update the <code>ecs-init</code> package which will update the agent.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/agent-update-ecs-ami.html">Updating
            the Amazon ECS container agent</a> in the <i>Amazon Elastic Container Service Developer
            Guide</i>.
            </para>
             </note> 
            <para>
            The <code>UpdateContainerAgent</code> API requires an Amazon ECS-optimized AMI or
            Amazon Linux AMI with the <code>ecs-init</code> service installed and running. For
            help updating the Amazon ECS container agent on other operating systems, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-update.html#manually_update_agent">Manually
            updating the Amazon ECS container agent</a> in the <i>Amazon Elastic Container Service
            Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateContainerAgent service method.</param>
            
            <returns>The response from the UpdateContainerAgent service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.MissingVersionException">
            Amazon ECS is unable to determine the current version of the Amazon ECS container
            agent on the container instance and does not have enough information to proceed with
            an update. This could be because the agent running on the container instance is an
            older or custom version that does not use our version information.
            </exception>
            <exception cref="T:Amazon.ECS.Model.NoUpdateAvailableException">
            There is no update available for this Amazon ECS container agent. This could be because
            the agent is already running the latest version, or it is so old that there is no
            update path to the current version.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UpdateInProgressException">
            There is already a current Amazon ECS container agent update in progress on the specified
            container instance. If the container agent becomes disconnected while it is in a transitional
            stage, such as <code>PENDING</code> or <code>STAGING</code>, the update process can
            get stuck in that state. However, when the agent reconnects, it resumes where it stopped
            previously.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/UpdateContainerAgent">REST API Reference for UpdateContainerAgent Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.UpdateContainerAgentAsync(Amazon.ECS.Model.UpdateContainerAgentRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the Amazon ECS container agent on a specified container instance. Updating
            the Amazon ECS container agent does not interrupt running tasks or services on the
            container instance. The process for updating the agent differs depending on whether
            your container instance was launched with the Amazon ECS-optimized AMI or another
            operating system.
            
             <note> 
            <para>
            The <code>UpdateContainerAgent</code> API isn't supported for container instances
            using the Amazon ECS-optimized Amazon Linux 2 (arm64) AMI. To update the container
            agent, you can update the <code>ecs-init</code> package which will update the agent.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/agent-update-ecs-ami.html">Updating
            the Amazon ECS container agent</a> in the <i>Amazon Elastic Container Service Developer
            Guide</i>.
            </para>
             </note> 
            <para>
            The <code>UpdateContainerAgent</code> API requires an Amazon ECS-optimized AMI or
            Amazon Linux AMI with the <code>ecs-init</code> service installed and running. For
            help updating the Amazon ECS container agent on other operating systems, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-update.html#manually_update_agent">Manually
            updating the Amazon ECS container agent</a> in the <i>Amazon Elastic Container Service
            Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateContainerAgent service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateContainerAgent service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.MissingVersionException">
            Amazon ECS is unable to determine the current version of the Amazon ECS container
            agent on the container instance and does not have enough information to proceed with
            an update. This could be because the agent running on the container instance is an
            older or custom version that does not use our version information.
            </exception>
            <exception cref="T:Amazon.ECS.Model.NoUpdateAvailableException">
            There is no update available for this Amazon ECS container agent. This could be because
            the agent is already running the latest version, or it is so old that there is no
            update path to the current version.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UpdateInProgressException">
            There is already a current Amazon ECS container agent update in progress on the specified
            container instance. If the container agent becomes disconnected while it is in a transitional
            stage, such as <code>PENDING</code> or <code>STAGING</code>, the update process can
            get stuck in that state. However, when the agent reconnects, it resumes where it stopped
            previously.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/UpdateContainerAgent">REST API Reference for UpdateContainerAgent Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.UpdateContainerInstancesState(Amazon.ECS.Model.UpdateContainerInstancesStateRequest)">
            <summary>
            Modifies the status of an Amazon ECS container instance.
            
             
            <para>
            Once a container instance has reached an <code>ACTIVE</code> state, you can change
            the status of a container instance to <code>DRAINING</code> to manually remove an
            instance from a cluster, for example to perform system updates, update the Docker
            daemon, or scale down the cluster size.
            </para>
             <important> 
            <para>
            A container instance cannot be changed to <code>DRAINING</code> until it has reached
            an <code>ACTIVE</code> status. If the instance is in any other status, an error will
            be received.
            </para>
             </important> 
            <para>
            When you set a container instance to <code>DRAINING</code>, Amazon ECS prevents new
            tasks from being scheduled for placement on the container instance and replacement
            service tasks are started on other container instances in the cluster if the resources
            are available. Service tasks on the container instance that are in the <code>PENDING</code>
            state are stopped immediately.
            </para>
             
            <para>
            Service tasks on the container instance that are in the <code>RUNNING</code> state
            are stopped and replaced according to the service's deployment configuration parameters,
            <code>minimumHealthyPercent</code> and <code>maximumPercent</code>. You can change
            the deployment configuration of your service using <a>UpdateService</a>.
            </para>
             <ul> <li> 
            <para>
            If <code>minimumHealthyPercent</code> is below 100%, the scheduler can ignore <code>desiredCount</code>
            temporarily during task replacement. For example, <code>desiredCount</code> is four
            tasks, a minimum of 50% allows the scheduler to stop two existing tasks before starting
            two new tasks. If the minimum is 100%, the service scheduler can't remove existing
            tasks until the replacement tasks are considered healthy. Tasks for services that
            do not use a load balancer are considered healthy if they are in the <code>RUNNING</code>
            state. Tasks for services that use a load balancer are considered healthy if they
            are in the <code>RUNNING</code> state and the container instance they are hosted on
            is reported as healthy by the load balancer.
            </para>
             </li> <li> 
            <para>
            The <code>maximumPercent</code> parameter represents an upper limit on the number
            of running tasks during task replacement, which enables you to define the replacement
            batch size. For example, if <code>desiredCount</code> is four tasks, a maximum of
            200% starts four new tasks before stopping the four tasks to be drained, provided
            that the cluster resources required to do this are available. If the maximum is 100%,
            then replacement tasks can't start until the draining tasks have stopped.
            </para>
             </li> </ul> 
            <para>
            Any <code>PENDING</code> or <code>RUNNING</code> tasks that do not belong to a service
            are not affected. You must wait for them to finish or stop them manually.
            </para>
             
            <para>
            A container instance has completed draining when it has no more <code>RUNNING</code>
            tasks. You can verify this using <a>ListTasks</a>.
            </para>
             
            <para>
            When a container instance has been drained, you can set a container instance to <code>ACTIVE</code>
            status and once it has reached that status the Amazon ECS scheduler can begin scheduling
            tasks on the instance again.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateContainerInstancesState service method.</param>
            
            <returns>The response from the UpdateContainerInstancesState service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/UpdateContainerInstancesState">REST API Reference for UpdateContainerInstancesState Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.UpdateContainerInstancesStateAsync(Amazon.ECS.Model.UpdateContainerInstancesStateRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies the status of an Amazon ECS container instance.
            
             
            <para>
            Once a container instance has reached an <code>ACTIVE</code> state, you can change
            the status of a container instance to <code>DRAINING</code> to manually remove an
            instance from a cluster, for example to perform system updates, update the Docker
            daemon, or scale down the cluster size.
            </para>
             <important> 
            <para>
            A container instance cannot be changed to <code>DRAINING</code> until it has reached
            an <code>ACTIVE</code> status. If the instance is in any other status, an error will
            be received.
            </para>
             </important> 
            <para>
            When you set a container instance to <code>DRAINING</code>, Amazon ECS prevents new
            tasks from being scheduled for placement on the container instance and replacement
            service tasks are started on other container instances in the cluster if the resources
            are available. Service tasks on the container instance that are in the <code>PENDING</code>
            state are stopped immediately.
            </para>
             
            <para>
            Service tasks on the container instance that are in the <code>RUNNING</code> state
            are stopped and replaced according to the service's deployment configuration parameters,
            <code>minimumHealthyPercent</code> and <code>maximumPercent</code>. You can change
            the deployment configuration of your service using <a>UpdateService</a>.
            </para>
             <ul> <li> 
            <para>
            If <code>minimumHealthyPercent</code> is below 100%, the scheduler can ignore <code>desiredCount</code>
            temporarily during task replacement. For example, <code>desiredCount</code> is four
            tasks, a minimum of 50% allows the scheduler to stop two existing tasks before starting
            two new tasks. If the minimum is 100%, the service scheduler can't remove existing
            tasks until the replacement tasks are considered healthy. Tasks for services that
            do not use a load balancer are considered healthy if they are in the <code>RUNNING</code>
            state. Tasks for services that use a load balancer are considered healthy if they
            are in the <code>RUNNING</code> state and the container instance they are hosted on
            is reported as healthy by the load balancer.
            </para>
             </li> <li> 
            <para>
            The <code>maximumPercent</code> parameter represents an upper limit on the number
            of running tasks during task replacement, which enables you to define the replacement
            batch size. For example, if <code>desiredCount</code> is four tasks, a maximum of
            200% starts four new tasks before stopping the four tasks to be drained, provided
            that the cluster resources required to do this are available. If the maximum is 100%,
            then replacement tasks can't start until the draining tasks have stopped.
            </para>
             </li> </ul> 
            <para>
            Any <code>PENDING</code> or <code>RUNNING</code> tasks that do not belong to a service
            are not affected. You must wait for them to finish or stop them manually.
            </para>
             
            <para>
            A container instance has completed draining when it has no more <code>RUNNING</code>
            tasks. You can verify this using <a>ListTasks</a>.
            </para>
             
            <para>
            When a container instance has been drained, you can set a container instance to <code>ACTIVE</code>
            status and once it has reached that status the Amazon ECS scheduler can begin scheduling
            tasks on the instance again.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateContainerInstancesState service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateContainerInstancesState service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/UpdateContainerInstancesState">REST API Reference for UpdateContainerInstancesState Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.UpdateService(Amazon.ECS.Model.UpdateServiceRequest)">
            <summary>
            <important> 
            <para>
            Updating the task placement strategies and constraints on an Amazon ECS service remains
            in preview and is a Beta Service as defined by and subject to the Beta Service Participation
            Service Terms located at <a href="https://aws.amazon.com/service-terms">https://aws.amazon.com/service-terms</a>
            ("Beta Terms"). These Beta Terms apply to your participation in this preview.
            </para>
             </important> 
            <para>
            Modifies the parameters of a service.
            </para>
             
            <para>
            For services using the rolling update (<code>ECS</code>) deployment controller, the
            desired count, deployment configuration, network configuration, task placement constraints
            and strategies, or task definition used can be updated.
            </para>
             
            <para>
            For services using the blue/green (<code>CODE_DEPLOY</code>) deployment controller,
            only the desired count, deployment configuration, task placement constraints and strategies,
            and health check grace period can be updated using this API. If the network configuration,
            platform version, or task definition need to be updated, a new CodeDeploy deployment
            should be created. For more information, see <a href="https://docs.aws.amazon.com/codedeploy/latest/APIReference/API_CreateDeployment.html">CreateDeployment</a>
            in the <i>CodeDeploy API Reference</i>.
            </para>
             
            <para>
            For services using an external deployment controller, you can update only the desired
            count, task placement constraints and strategies, and health check grace period using
            this API. If the launch type, load balancer, network configuration, platform version,
            or task definition need to be updated, you should create a new task set. For more
            information, see <a>CreateTaskSet</a>.
            </para>
             
            <para>
            You can add to or subtract from the number of instantiations of a task definition
            in a service by specifying the cluster that the service is running in and a new <code>desiredCount</code>
            parameter.
            </para>
             
            <para>
            If you have updated the Docker image of your application, you can create a new task
            definition with that image and deploy it to your service. The service scheduler uses
            the minimum healthy percent and maximum percent parameters (in the service's deployment
            configuration) to determine the deployment strategy.
            </para>
             <note> 
            <para>
            If your updated Docker image uses the same tag as what is in the existing task definition
            for your service (for example, <code>my_image:latest</code>), you do not need to create
            a new revision of your task definition. You can update the service using the <code>forceNewDeployment</code>
            option. The new tasks launched by the deployment pull the current image/tag combination
            from your repository when they start.
            </para>
             </note> 
            <para>
            You can also update the deployment configuration of a service. When a deployment is
            triggered by updating the task definition of a service, the service scheduler uses
            the deployment configuration parameters, <code>minimumHealthyPercent</code> and <code>maximumPercent</code>,
            to determine the deployment strategy.
            </para>
             <ul> <li> 
            <para>
            If <code>minimumHealthyPercent</code> is below 100%, the scheduler can ignore <code>desiredCount</code>
            temporarily during a deployment. For example, if <code>desiredCount</code> is four
            tasks, a minimum of 50% allows the scheduler to stop two existing tasks before starting
            two new tasks. Tasks for services that do not use a load balancer are considered healthy
            if they are in the <code>RUNNING</code> state. Tasks for services that use a load
            balancer are considered healthy if they are in the <code>RUNNING</code> state and
            the container instance they are hosted on is reported as healthy by the load balancer.
            </para>
             </li> <li> 
            <para>
            The <code>maximumPercent</code> parameter represents an upper limit on the number
            of running tasks during a deployment, which enables you to define the deployment batch
            size. For example, if <code>desiredCount</code> is four tasks, a maximum of 200% starts
            four new tasks before stopping the four older tasks (provided that the cluster resources
            required to do this are available).
            </para>
             </li> </ul> 
            <para>
            When <a>UpdateService</a> stops a task during a deployment, the equivalent of <code>docker
            stop</code> is issued to the containers running in the task. This results in a <code>SIGTERM</code>
            and a 30-second timeout, after which <code>SIGKILL</code> is sent and the containers
            are forcibly stopped. If the container handles the <code>SIGTERM</code> gracefully
            and exits within 30 seconds from receiving it, no <code>SIGKILL</code> is sent.
            </para>
             
            <para>
            When the service scheduler launches new tasks, it determines task placement in your
            cluster with the following logic:
            </para>
             <ul> <li> 
            <para>
            Determine which of the container instances in your cluster can support your service's
            task definition (for example, they have the required CPU, memory, ports, and container
            instance attributes).
            </para>
             </li> <li> 
            <para>
            By default, the service scheduler attempts to balance tasks across Availability Zones
            in this manner (although you can choose a different placement strategy):
            </para>
             <ul> <li> 
            <para>
            Sort the valid container instances by the fewest number of running tasks for this
            service in the same Availability Zone as the instance. For example, if zone A has
            one running service task and zones B and C each have zero, valid container instances
            in either zone B or C are considered optimal for placement.
            </para>
             </li> <li> 
            <para>
            Place the new service task on a valid container instance in an optimal Availability
            Zone (based on the previous steps), favoring container instances with the fewest number
            of running tasks for this service.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            When the service scheduler stops running tasks, it attempts to maintain balance across
            the Availability Zones in your cluster using the following logic: 
            </para>
             <ul> <li> 
            <para>
            Sort the container instances by the largest number of running tasks for this service
            in the same Availability Zone as the instance. For example, if zone A has one running
            service task and zones B and C each have two, container instances in either zone B
            or C are considered optimal for termination.
            </para>
             </li> <li> 
            <para>
            Stop the task on a container instance in an optimal Availability Zone (based on the
            previous steps), favoring container instances with the largest number of running tasks
            for this service.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateService service method.</param>
            
            <returns>The response from the UpdateService service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AccessDeniedException">
            You do not have authorization to perform the requested action.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.PlatformTaskDefinitionIncompatibilityException">
            The specified platform version does not satisfy the task definition's required capabilities.
            </exception>
            <exception cref="T:Amazon.ECS.Model.PlatformUnknownException">
            The specified platform version does not exist.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotActiveException">
            The specified service is not active. You can't update a service that is inactive.
            If you have previously deleted a service, you can re-create it with <a>CreateService</a>.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotFoundException">
            The specified service could not be found. You can view your available services with
            <a>ListServices</a>. Amazon ECS services are cluster-specific and Region-specific.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/UpdateService">REST API Reference for UpdateService Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.UpdateServiceAsync(Amazon.ECS.Model.UpdateServiceRequest,System.Threading.CancellationToken)">
            <summary>
            <important> 
            <para>
            Updating the task placement strategies and constraints on an Amazon ECS service remains
            in preview and is a Beta Service as defined by and subject to the Beta Service Participation
            Service Terms located at <a href="https://aws.amazon.com/service-terms">https://aws.amazon.com/service-terms</a>
            ("Beta Terms"). These Beta Terms apply to your participation in this preview.
            </para>
             </important> 
            <para>
            Modifies the parameters of a service.
            </para>
             
            <para>
            For services using the rolling update (<code>ECS</code>) deployment controller, the
            desired count, deployment configuration, network configuration, task placement constraints
            and strategies, or task definition used can be updated.
            </para>
             
            <para>
            For services using the blue/green (<code>CODE_DEPLOY</code>) deployment controller,
            only the desired count, deployment configuration, task placement constraints and strategies,
            and health check grace period can be updated using this API. If the network configuration,
            platform version, or task definition need to be updated, a new CodeDeploy deployment
            should be created. For more information, see <a href="https://docs.aws.amazon.com/codedeploy/latest/APIReference/API_CreateDeployment.html">CreateDeployment</a>
            in the <i>CodeDeploy API Reference</i>.
            </para>
             
            <para>
            For services using an external deployment controller, you can update only the desired
            count, task placement constraints and strategies, and health check grace period using
            this API. If the launch type, load balancer, network configuration, platform version,
            or task definition need to be updated, you should create a new task set. For more
            information, see <a>CreateTaskSet</a>.
            </para>
             
            <para>
            You can add to or subtract from the number of instantiations of a task definition
            in a service by specifying the cluster that the service is running in and a new <code>desiredCount</code>
            parameter.
            </para>
             
            <para>
            If you have updated the Docker image of your application, you can create a new task
            definition with that image and deploy it to your service. The service scheduler uses
            the minimum healthy percent and maximum percent parameters (in the service's deployment
            configuration) to determine the deployment strategy.
            </para>
             <note> 
            <para>
            If your updated Docker image uses the same tag as what is in the existing task definition
            for your service (for example, <code>my_image:latest</code>), you do not need to create
            a new revision of your task definition. You can update the service using the <code>forceNewDeployment</code>
            option. The new tasks launched by the deployment pull the current image/tag combination
            from your repository when they start.
            </para>
             </note> 
            <para>
            You can also update the deployment configuration of a service. When a deployment is
            triggered by updating the task definition of a service, the service scheduler uses
            the deployment configuration parameters, <code>minimumHealthyPercent</code> and <code>maximumPercent</code>,
            to determine the deployment strategy.
            </para>
             <ul> <li> 
            <para>
            If <code>minimumHealthyPercent</code> is below 100%, the scheduler can ignore <code>desiredCount</code>
            temporarily during a deployment. For example, if <code>desiredCount</code> is four
            tasks, a minimum of 50% allows the scheduler to stop two existing tasks before starting
            two new tasks. Tasks for services that do not use a load balancer are considered healthy
            if they are in the <code>RUNNING</code> state. Tasks for services that use a load
            balancer are considered healthy if they are in the <code>RUNNING</code> state and
            the container instance they are hosted on is reported as healthy by the load balancer.
            </para>
             </li> <li> 
            <para>
            The <code>maximumPercent</code> parameter represents an upper limit on the number
            of running tasks during a deployment, which enables you to define the deployment batch
            size. For example, if <code>desiredCount</code> is four tasks, a maximum of 200% starts
            four new tasks before stopping the four older tasks (provided that the cluster resources
            required to do this are available).
            </para>
             </li> </ul> 
            <para>
            When <a>UpdateService</a> stops a task during a deployment, the equivalent of <code>docker
            stop</code> is issued to the containers running in the task. This results in a <code>SIGTERM</code>
            and a 30-second timeout, after which <code>SIGKILL</code> is sent and the containers
            are forcibly stopped. If the container handles the <code>SIGTERM</code> gracefully
            and exits within 30 seconds from receiving it, no <code>SIGKILL</code> is sent.
            </para>
             
            <para>
            When the service scheduler launches new tasks, it determines task placement in your
            cluster with the following logic:
            </para>
             <ul> <li> 
            <para>
            Determine which of the container instances in your cluster can support your service's
            task definition (for example, they have the required CPU, memory, ports, and container
            instance attributes).
            </para>
             </li> <li> 
            <para>
            By default, the service scheduler attempts to balance tasks across Availability Zones
            in this manner (although you can choose a different placement strategy):
            </para>
             <ul> <li> 
            <para>
            Sort the valid container instances by the fewest number of running tasks for this
            service in the same Availability Zone as the instance. For example, if zone A has
            one running service task and zones B and C each have zero, valid container instances
            in either zone B or C are considered optimal for placement.
            </para>
             </li> <li> 
            <para>
            Place the new service task on a valid container instance in an optimal Availability
            Zone (based on the previous steps), favoring container instances with the fewest number
            of running tasks for this service.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            When the service scheduler stops running tasks, it attempts to maintain balance across
            the Availability Zones in your cluster using the following logic: 
            </para>
             <ul> <li> 
            <para>
            Sort the container instances by the largest number of running tasks for this service
            in the same Availability Zone as the instance. For example, if zone A has one running
            service task and zones B and C each have two, container instances in either zone B
            or C are considered optimal for termination.
            </para>
             </li> <li> 
            <para>
            Stop the task on a container instance in an optimal Availability Zone (based on the
            previous steps), favoring container instances with the largest number of running tasks
            for this service.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateService service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateService service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AccessDeniedException">
            You do not have authorization to perform the requested action.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.PlatformTaskDefinitionIncompatibilityException">
            The specified platform version does not satisfy the task definition's required capabilities.
            </exception>
            <exception cref="T:Amazon.ECS.Model.PlatformUnknownException">
            The specified platform version does not exist.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotActiveException">
            The specified service is not active. You can't update a service that is inactive.
            If you have previously deleted a service, you can re-create it with <a>CreateService</a>.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotFoundException">
            The specified service could not be found. You can view your available services with
            <a>ListServices</a>. Amazon ECS services are cluster-specific and Region-specific.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/UpdateService">REST API Reference for UpdateService Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.UpdateServicePrimaryTaskSet(Amazon.ECS.Model.UpdateServicePrimaryTaskSetRequest)">
            <summary>
            Modifies which task set in a service is the primary task set. Any parameters that
            are updated on the primary task set in a service will transition to the service. This
            is used when a service uses the <code>EXTERNAL</code> deployment controller type.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-types.html">Amazon
            ECS Deployment Types</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateServicePrimaryTaskSet service method.</param>
            
            <returns>The response from the UpdateServicePrimaryTaskSet service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AccessDeniedException">
            You do not have authorization to perform the requested action.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotActiveException">
            The specified service is not active. You can't update a service that is inactive.
            If you have previously deleted a service, you can re-create it with <a>CreateService</a>.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotFoundException">
            The specified service could not be found. You can view your available services with
            <a>ListServices</a>. Amazon ECS services are cluster-specific and Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.TaskSetNotFoundException">
            The specified task set could not be found. You can view your available task sets with
            <a>DescribeTaskSets</a>. Task sets are specific to each cluster, service and Region.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UnsupportedFeatureException">
            The specified task is not supported in this Region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/UpdateServicePrimaryTaskSet">REST API Reference for UpdateServicePrimaryTaskSet Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.UpdateServicePrimaryTaskSetAsync(Amazon.ECS.Model.UpdateServicePrimaryTaskSetRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies which task set in a service is the primary task set. Any parameters that
            are updated on the primary task set in a service will transition to the service. This
            is used when a service uses the <code>EXTERNAL</code> deployment controller type.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-types.html">Amazon
            ECS Deployment Types</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateServicePrimaryTaskSet service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateServicePrimaryTaskSet service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AccessDeniedException">
            You do not have authorization to perform the requested action.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotActiveException">
            The specified service is not active. You can't update a service that is inactive.
            If you have previously deleted a service, you can re-create it with <a>CreateService</a>.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotFoundException">
            The specified service could not be found. You can view your available services with
            <a>ListServices</a>. Amazon ECS services are cluster-specific and Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.TaskSetNotFoundException">
            The specified task set could not be found. You can view your available task sets with
            <a>DescribeTaskSets</a>. Task sets are specific to each cluster, service and Region.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UnsupportedFeatureException">
            The specified task is not supported in this Region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/UpdateServicePrimaryTaskSet">REST API Reference for UpdateServicePrimaryTaskSet Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.UpdateTaskSet(Amazon.ECS.Model.UpdateTaskSetRequest)">
            <summary>
            Modifies a task set. This is used when a service uses the <code>EXTERNAL</code> deployment
            controller type. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-types.html">Amazon
            ECS Deployment Types</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateTaskSet service method.</param>
            
            <returns>The response from the UpdateTaskSet service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AccessDeniedException">
            You do not have authorization to perform the requested action.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotActiveException">
            The specified service is not active. You can't update a service that is inactive.
            If you have previously deleted a service, you can re-create it with <a>CreateService</a>.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotFoundException">
            The specified service could not be found. You can view your available services with
            <a>ListServices</a>. Amazon ECS services are cluster-specific and Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.TaskSetNotFoundException">
            The specified task set could not be found. You can view your available task sets with
            <a>DescribeTaskSets</a>. Task sets are specific to each cluster, service and Region.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UnsupportedFeatureException">
            The specified task is not supported in this Region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/UpdateTaskSet">REST API Reference for UpdateTaskSet Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.UpdateTaskSetAsync(Amazon.ECS.Model.UpdateTaskSetRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies a task set. This is used when a service uses the <code>EXTERNAL</code> deployment
            controller type. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-types.html">Amazon
            ECS Deployment Types</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateTaskSet service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateTaskSet service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AccessDeniedException">
            You do not have authorization to perform the requested action.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotActiveException">
            The specified service is not active. You can't update a service that is inactive.
            If you have previously deleted a service, you can re-create it with <a>CreateService</a>.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotFoundException">
            The specified service could not be found. You can view your available services with
            <a>ListServices</a>. Amazon ECS services are cluster-specific and Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.TaskSetNotFoundException">
            The specified task set could not be found. You can view your available task sets with
            <a>DescribeTaskSets</a>. Task sets are specific to each cluster, service and Region.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UnsupportedFeatureException">
            The specified task is not supported in this Region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/UpdateTaskSet">REST API Reference for UpdateTaskSet Operation</seealso>
        </member>
        <member name="T:Amazon.ECS.IAmazonECS">
             <summary>
             Interface for accessing ECS
            
             Amazon Elastic Container Service 
             <para>
             Amazon Elastic Container Service (Amazon ECS) is a highly scalable, fast, container
             management service that makes it easy to run, stop, and manage Docker containers on
             a cluster. You can host your cluster on a serverless infrastructure that is managed
             by Amazon ECS by launching your services or tasks on Fargate. For more control, you
             can host your tasks on a cluster of Amazon Elastic Compute Cloud (Amazon EC2) instances
             that you manage.
             </para>
              
             <para>
             Amazon ECS makes it easy to launch and stop container-based applications with simple
             API calls, allows you to get the state of your cluster from a centralized service,
             and gives you access to many familiar Amazon EC2 features.
             </para>
              
             <para>
             You can use Amazon ECS to schedule the placement of containers across your cluster
             based on your resource needs, isolation policies, and availability requirements. Amazon
             ECS eliminates the need for you to operate your own cluster management and configuration
             management systems or worry about scaling your management infrastructure.
             </para>
             </summary>
        </member>
        <member name="P:Amazon.ECS.IAmazonECS.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.CreateCapacityProvider(Amazon.ECS.Model.CreateCapacityProviderRequest)">
            <summary>
            Creates a new capacity provider. Capacity providers are associated with an Amazon
            ECS cluster and are used in capacity provider strategies to facilitate cluster auto
            scaling.
            
             
            <para>
            Only capacity providers using an Auto Scaling group can be created. Amazon ECS tasks
            on Fargate use the <code>FARGATE</code> and <code>FARGATE_SPOT</code> capacity providers
            which are already created and available to all accounts in Regions supported by Fargate.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateCapacityProvider service method.</param>
            
            <returns>The response from the CreateCapacityProvider service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.LimitExceededException">
            The limit for the resource has been exceeded.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UpdateInProgressException">
            There is already a current Amazon ECS container agent update in progress on the specified
            container instance. If the container agent becomes disconnected while it is in a transitional
            stage, such as <code>PENDING</code> or <code>STAGING</code>, the update process can
            get stuck in that state. However, when the agent reconnects, it resumes where it stopped
            previously.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/CreateCapacityProvider">REST API Reference for CreateCapacityProvider Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.CreateCapacityProviderAsync(Amazon.ECS.Model.CreateCapacityProviderRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new capacity provider. Capacity providers are associated with an Amazon
            ECS cluster and are used in capacity provider strategies to facilitate cluster auto
            scaling.
            
             
            <para>
            Only capacity providers using an Auto Scaling group can be created. Amazon ECS tasks
            on Fargate use the <code>FARGATE</code> and <code>FARGATE_SPOT</code> capacity providers
            which are already created and available to all accounts in Regions supported by Fargate.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateCapacityProvider service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateCapacityProvider service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.LimitExceededException">
            The limit for the resource has been exceeded.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UpdateInProgressException">
            There is already a current Amazon ECS container agent update in progress on the specified
            container instance. If the container agent becomes disconnected while it is in a transitional
            stage, such as <code>PENDING</code> or <code>STAGING</code>, the update process can
            get stuck in that state. However, when the agent reconnects, it resumes where it stopped
            previously.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/CreateCapacityProvider">REST API Reference for CreateCapacityProvider Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.CreateCluster(Amazon.ECS.Model.CreateClusterRequest)">
            <summary>
            Creates a new Amazon ECS cluster. By default, your account receives a <code>default</code>
            cluster when you launch your first container instance. However, you can create your
            own cluster with a unique name with the <code>CreateCluster</code> action.
            
             <note> 
            <para>
            When you call the <a>CreateCluster</a> API operation, Amazon ECS attempts to create
            the Amazon ECS service-linked role for your account so that required resources in
            other Amazon Web Services services can be managed on your behalf. However, if the
            IAM user that makes the call does not have permissions to create the service-linked
            role, it is not created. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using-service-linked-roles.html">Using
            Service-Linked Roles for Amazon ECS</a> in the <i>Amazon Elastic Container Service
            Developer Guide</i>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateCluster service method.</param>
            
            <returns>The response from the CreateCluster service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/CreateCluster">REST API Reference for CreateCluster Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.CreateClusterAsync(Amazon.ECS.Model.CreateClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new Amazon ECS cluster. By default, your account receives a <code>default</code>
            cluster when you launch your first container instance. However, you can create your
            own cluster with a unique name with the <code>CreateCluster</code> action.
            
             <note> 
            <para>
            When you call the <a>CreateCluster</a> API operation, Amazon ECS attempts to create
            the Amazon ECS service-linked role for your account so that required resources in
            other Amazon Web Services services can be managed on your behalf. However, if the
            IAM user that makes the call does not have permissions to create the service-linked
            role, it is not created. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using-service-linked-roles.html">Using
            Service-Linked Roles for Amazon ECS</a> in the <i>Amazon Elastic Container Service
            Developer Guide</i>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateCluster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateCluster service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/CreateCluster">REST API Reference for CreateCluster Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.CreateService(Amazon.ECS.Model.CreateServiceRequest)">
            <summary>
            Runs and maintains a desired number of tasks from a specified task definition. If
            the number of tasks running in a service drops below the <code>desiredCount</code>,
            Amazon ECS runs another copy of the task in the specified cluster. To update an existing
            service, see the UpdateService action.
            
             
            <para>
            In addition to maintaining the desired count of tasks in your service, you can optionally
            run your service behind one or more load balancers. The load balancers distribute
            traffic across the tasks that are associated with the service. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-load-balancing.html">Service
            Load Balancing</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            Tasks for services that <i>do not</i> use a load balancer are considered healthy if
            they're in the <code>RUNNING</code> state. Tasks for services that <i>do</i> use a
            load balancer are considered healthy if they're in the <code>RUNNING</code> state
            and the container instance that they're hosted on is reported as healthy by the load
            balancer.
            </para>
             
            <para>
            There are two service scheduler strategies available:
            </para>
             <ul> <li> 
            <para>
             <code>REPLICA</code> - The replica scheduling strategy places and maintains the desired
            number of tasks across your cluster. By default, the service scheduler spreads tasks
            across Availability Zones. You can use task placement strategies and constraints to
            customize task placement decisions. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs_services.html">Service
            Scheduler Concepts</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             </li> <li> 
            <para>
             <code>DAEMON</code> - The daemon scheduling strategy deploys exactly one task on
            each active container instance that meets all of the task placement constraints that
            you specify in your cluster. The service scheduler also evaluates the task placement
            constraints for running tasks and will stop tasks that do not meet the placement constraints.
            When using this strategy, you don't need to specify a desired number of tasks, a task
            placement strategy, or use Service Auto Scaling policies. For more information, see
            <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs_services.html">Service
            Scheduler Concepts</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             </li> </ul> 
            <para>
            You can optionally specify a deployment configuration for your service. The deployment
            is triggered by changing properties, such as the task definition or the desired count
            of a service, with an <a>UpdateService</a> operation. The default value for a replica
            service for <code>minimumHealthyPercent</code> is 100%. The default value for a daemon
            service for <code>minimumHealthyPercent</code> is 0%.
            </para>
             
            <para>
            If a service is using the <code>ECS</code> deployment controller, the minimum healthy
            percent represents a lower limit on the number of tasks in a service that must remain
            in the <code>RUNNING</code> state during a deployment, as a percentage of the desired
            number of tasks (rounded up to the nearest integer), and while any container instances
            are in the <code>DRAINING</code> state if the service contains tasks using the EC2
            launch type. This parameter enables you to deploy without using additional cluster
            capacity. For example, if your service has a desired number of four tasks and a minimum
            healthy percent of 50%, the scheduler might stop two existing tasks to free up cluster
            capacity before starting two new tasks. Tasks for services that <i>do not</i> use
            a load balancer are considered healthy if they're in the <code>RUNNING</code> state.
            Tasks for services that <i>do</i> use a load balancer are considered healthy if they're
            in the <code>RUNNING</code> state and they're reported as healthy by the load balancer.
            The default value for minimum healthy percent is 100%.
            </para>
             
            <para>
            If a service is using the <code>ECS</code> deployment controller, the <b>maximum percent</b>
            parameter represents an upper limit on the number of tasks in a service that are allowed
            in the <code>RUNNING</code> or <code>PENDING</code> state during a deployment, as
            a percentage of the desired number of tasks (rounded down to the nearest integer),
            and while any container instances are in the <code>DRAINING</code> state if the service
            contains tasks using the EC2 launch type. This parameter enables you to define the
            deployment batch size. For example, if your service has a desired number of four tasks
            and a maximum percent value of 200%, the scheduler may start four new tasks before
            stopping the four older tasks (provided that the cluster resources required to do
            this are available). The default value for maximum percent is 200%.
            </para>
             
            <para>
            If a service is using either the <code>CODE_DEPLOY</code> or <code>EXTERNAL</code>
            deployment controller types and tasks that use the EC2 launch type, the <b>minimum
            healthy percent</b> and <b>maximum percent</b> values are used only to define the
            lower and upper limit on the number of the tasks in the service that remain in the
            <code>RUNNING</code> state while the container instances are in the <code>DRAINING</code>
            state. If the tasks in the service use the Fargate launch type, the minimum healthy
            percent and maximum percent values aren't used, although they're currently visible
            when describing your service.
            </para>
             
            <para>
            When creating a service that uses the <code>EXTERNAL</code> deployment controller,
            you can specify only parameters that aren't controlled at the task set level. The
            only required parameter is the service name. You control your services using the <a>CreateTaskSet</a>
            operation. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-types.html">Amazon
            ECS Deployment Types</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            When the service scheduler launches new tasks, it determines task placement in your
            cluster using the following logic:
            </para>
             <ul> <li> 
            <para>
            Determine which of the container instances in your cluster can support your service's
            task definition (for example, they have the required CPU, memory, ports, and container
            instance attributes).
            </para>
             </li> <li> 
            <para>
            By default, the service scheduler attempts to balance tasks across Availability Zones
            in this manner (although you can choose a different placement strategy) with the <code>placementStrategy</code>
            parameter):
            </para>
             <ul> <li> 
            <para>
            Sort the valid container instances, giving priority to instances that have the fewest
            number of running tasks for this service in their respective Availability Zone. For
            example, if zone A has one running service task and zones B and C each have zero,
            valid container instances in either zone B or C are considered optimal for placement.
            </para>
             </li> <li> 
            <para>
            Place the new service task on a valid container instance in an optimal Availability
            Zone (based on the previous steps), favoring container instances with the fewest number
            of running tasks for this service.
            </para>
             </li> </ul> </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateService service method.</param>
            
            <returns>The response from the CreateService service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AccessDeniedException">
            You do not have authorization to perform the requested action.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.PlatformTaskDefinitionIncompatibilityException">
            The specified platform version does not satisfy the task definition's required capabilities.
            </exception>
            <exception cref="T:Amazon.ECS.Model.PlatformUnknownException">
            The specified platform version does not exist.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UnsupportedFeatureException">
            The specified task is not supported in this Region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/CreateService">REST API Reference for CreateService Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.CreateServiceAsync(Amazon.ECS.Model.CreateServiceRequest,System.Threading.CancellationToken)">
            <summary>
            Runs and maintains a desired number of tasks from a specified task definition. If
            the number of tasks running in a service drops below the <code>desiredCount</code>,
            Amazon ECS runs another copy of the task in the specified cluster. To update an existing
            service, see the UpdateService action.
            
             
            <para>
            In addition to maintaining the desired count of tasks in your service, you can optionally
            run your service behind one or more load balancers. The load balancers distribute
            traffic across the tasks that are associated with the service. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-load-balancing.html">Service
            Load Balancing</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            Tasks for services that <i>do not</i> use a load balancer are considered healthy if
            they're in the <code>RUNNING</code> state. Tasks for services that <i>do</i> use a
            load balancer are considered healthy if they're in the <code>RUNNING</code> state
            and the container instance that they're hosted on is reported as healthy by the load
            balancer.
            </para>
             
            <para>
            There are two service scheduler strategies available:
            </para>
             <ul> <li> 
            <para>
             <code>REPLICA</code> - The replica scheduling strategy places and maintains the desired
            number of tasks across your cluster. By default, the service scheduler spreads tasks
            across Availability Zones. You can use task placement strategies and constraints to
            customize task placement decisions. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs_services.html">Service
            Scheduler Concepts</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             </li> <li> 
            <para>
             <code>DAEMON</code> - The daemon scheduling strategy deploys exactly one task on
            each active container instance that meets all of the task placement constraints that
            you specify in your cluster. The service scheduler also evaluates the task placement
            constraints for running tasks and will stop tasks that do not meet the placement constraints.
            When using this strategy, you don't need to specify a desired number of tasks, a task
            placement strategy, or use Service Auto Scaling policies. For more information, see
            <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs_services.html">Service
            Scheduler Concepts</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             </li> </ul> 
            <para>
            You can optionally specify a deployment configuration for your service. The deployment
            is triggered by changing properties, such as the task definition or the desired count
            of a service, with an <a>UpdateService</a> operation. The default value for a replica
            service for <code>minimumHealthyPercent</code> is 100%. The default value for a daemon
            service for <code>minimumHealthyPercent</code> is 0%.
            </para>
             
            <para>
            If a service is using the <code>ECS</code> deployment controller, the minimum healthy
            percent represents a lower limit on the number of tasks in a service that must remain
            in the <code>RUNNING</code> state during a deployment, as a percentage of the desired
            number of tasks (rounded up to the nearest integer), and while any container instances
            are in the <code>DRAINING</code> state if the service contains tasks using the EC2
            launch type. This parameter enables you to deploy without using additional cluster
            capacity. For example, if your service has a desired number of four tasks and a minimum
            healthy percent of 50%, the scheduler might stop two existing tasks to free up cluster
            capacity before starting two new tasks. Tasks for services that <i>do not</i> use
            a load balancer are considered healthy if they're in the <code>RUNNING</code> state.
            Tasks for services that <i>do</i> use a load balancer are considered healthy if they're
            in the <code>RUNNING</code> state and they're reported as healthy by the load balancer.
            The default value for minimum healthy percent is 100%.
            </para>
             
            <para>
            If a service is using the <code>ECS</code> deployment controller, the <b>maximum percent</b>
            parameter represents an upper limit on the number of tasks in a service that are allowed
            in the <code>RUNNING</code> or <code>PENDING</code> state during a deployment, as
            a percentage of the desired number of tasks (rounded down to the nearest integer),
            and while any container instances are in the <code>DRAINING</code> state if the service
            contains tasks using the EC2 launch type. This parameter enables you to define the
            deployment batch size. For example, if your service has a desired number of four tasks
            and a maximum percent value of 200%, the scheduler may start four new tasks before
            stopping the four older tasks (provided that the cluster resources required to do
            this are available). The default value for maximum percent is 200%.
            </para>
             
            <para>
            If a service is using either the <code>CODE_DEPLOY</code> or <code>EXTERNAL</code>
            deployment controller types and tasks that use the EC2 launch type, the <b>minimum
            healthy percent</b> and <b>maximum percent</b> values are used only to define the
            lower and upper limit on the number of the tasks in the service that remain in the
            <code>RUNNING</code> state while the container instances are in the <code>DRAINING</code>
            state. If the tasks in the service use the Fargate launch type, the minimum healthy
            percent and maximum percent values aren't used, although they're currently visible
            when describing your service.
            </para>
             
            <para>
            When creating a service that uses the <code>EXTERNAL</code> deployment controller,
            you can specify only parameters that aren't controlled at the task set level. The
            only required parameter is the service name. You control your services using the <a>CreateTaskSet</a>
            operation. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-types.html">Amazon
            ECS Deployment Types</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            When the service scheduler launches new tasks, it determines task placement in your
            cluster using the following logic:
            </para>
             <ul> <li> 
            <para>
            Determine which of the container instances in your cluster can support your service's
            task definition (for example, they have the required CPU, memory, ports, and container
            instance attributes).
            </para>
             </li> <li> 
            <para>
            By default, the service scheduler attempts to balance tasks across Availability Zones
            in this manner (although you can choose a different placement strategy) with the <code>placementStrategy</code>
            parameter):
            </para>
             <ul> <li> 
            <para>
            Sort the valid container instances, giving priority to instances that have the fewest
            number of running tasks for this service in their respective Availability Zone. For
            example, if zone A has one running service task and zones B and C each have zero,
            valid container instances in either zone B or C are considered optimal for placement.
            </para>
             </li> <li> 
            <para>
            Place the new service task on a valid container instance in an optimal Availability
            Zone (based on the previous steps), favoring container instances with the fewest number
            of running tasks for this service.
            </para>
             </li> </ul> </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateService service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateService service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AccessDeniedException">
            You do not have authorization to perform the requested action.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.PlatformTaskDefinitionIncompatibilityException">
            The specified platform version does not satisfy the task definition's required capabilities.
            </exception>
            <exception cref="T:Amazon.ECS.Model.PlatformUnknownException">
            The specified platform version does not exist.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UnsupportedFeatureException">
            The specified task is not supported in this Region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/CreateService">REST API Reference for CreateService Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.CreateTaskSet(Amazon.ECS.Model.CreateTaskSetRequest)">
            <summary>
            Create a task set in the specified cluster and service. This is used when a service
            uses the <code>EXTERNAL</code> deployment controller type. For more information, see
            <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-types.html">Amazon
            ECS Deployment Types</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateTaskSet service method.</param>
            
            <returns>The response from the CreateTaskSet service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AccessDeniedException">
            You do not have authorization to perform the requested action.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.PlatformTaskDefinitionIncompatibilityException">
            The specified platform version does not satisfy the task definition's required capabilities.
            </exception>
            <exception cref="T:Amazon.ECS.Model.PlatformUnknownException">
            The specified platform version does not exist.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotActiveException">
            The specified service is not active. You can't update a service that is inactive.
            If you have previously deleted a service, you can re-create it with <a>CreateService</a>.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotFoundException">
            The specified service could not be found. You can view your available services with
            <a>ListServices</a>. Amazon ECS services are cluster-specific and Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UnsupportedFeatureException">
            The specified task is not supported in this Region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/CreateTaskSet">REST API Reference for CreateTaskSet Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.CreateTaskSetAsync(Amazon.ECS.Model.CreateTaskSetRequest,System.Threading.CancellationToken)">
            <summary>
            Create a task set in the specified cluster and service. This is used when a service
            uses the <code>EXTERNAL</code> deployment controller type. For more information, see
            <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-types.html">Amazon
            ECS Deployment Types</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateTaskSet service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateTaskSet service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AccessDeniedException">
            You do not have authorization to perform the requested action.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.PlatformTaskDefinitionIncompatibilityException">
            The specified platform version does not satisfy the task definition's required capabilities.
            </exception>
            <exception cref="T:Amazon.ECS.Model.PlatformUnknownException">
            The specified platform version does not exist.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotActiveException">
            The specified service is not active. You can't update a service that is inactive.
            If you have previously deleted a service, you can re-create it with <a>CreateService</a>.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotFoundException">
            The specified service could not be found. You can view your available services with
            <a>ListServices</a>. Amazon ECS services are cluster-specific and Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UnsupportedFeatureException">
            The specified task is not supported in this Region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/CreateTaskSet">REST API Reference for CreateTaskSet Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.DeleteAccountSetting(Amazon.ECS.Model.DeleteAccountSettingRequest)">
            <summary>
            Disables an account setting for a specified IAM user, IAM role, or the root user for
            an account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteAccountSetting service method.</param>
            
            <returns>The response from the DeleteAccountSetting service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DeleteAccountSetting">REST API Reference for DeleteAccountSetting Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.DeleteAccountSettingAsync(Amazon.ECS.Model.DeleteAccountSettingRequest,System.Threading.CancellationToken)">
            <summary>
            Disables an account setting for a specified IAM user, IAM role, or the root user for
            an account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteAccountSetting service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteAccountSetting service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DeleteAccountSetting">REST API Reference for DeleteAccountSetting Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.DeleteAttributes(Amazon.ECS.Model.DeleteAttributesRequest)">
            <summary>
            Deletes one or more custom attributes from an Amazon ECS resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteAttributes service method.</param>
            
            <returns>The response from the DeleteAttributes service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.TargetNotFoundException">
            The specified target could not be found. You can view your available container instances
            with <a>ListContainerInstances</a>. Amazon ECS container instances are cluster-specific
            and Region-specific.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DeleteAttributes">REST API Reference for DeleteAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.DeleteAttributesAsync(Amazon.ECS.Model.DeleteAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes one or more custom attributes from an Amazon ECS resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteAttributes service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteAttributes service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.TargetNotFoundException">
            The specified target could not be found. You can view your available container instances
            with <a>ListContainerInstances</a>. Amazon ECS container instances are cluster-specific
            and Region-specific.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DeleteAttributes">REST API Reference for DeleteAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.DeleteCapacityProvider(Amazon.ECS.Model.DeleteCapacityProviderRequest)">
            <summary>
            Deletes the specified capacity provider.
            
             <note> 
            <para>
            The <code>FARGATE</code> and <code>FARGATE_SPOT</code> capacity providers are reserved
            and cannot be deleted. You can disassociate them from a cluster using either the <a>PutClusterCapacityProviders</a>
            API or by deleting the cluster.
            </para>
             </note> 
            <para>
            Prior to a capacity provider being deleted, the capacity provider must be removed
            from the capacity provider strategy from all services. The <a>UpdateService</a> API
            can be used to remove a capacity provider from a service's capacity provider strategy.
            When updating a service, the <code>forceNewDeployment</code> option can be used to
            ensure that any tasks using the Amazon EC2 instance capacity provided by the capacity
            provider are transitioned to use the capacity from the remaining capacity providers.
            Only capacity providers that are not associated with a cluster can be deleted. To
            remove a capacity provider from a cluster, you can either use <a>PutClusterCapacityProviders</a>
            or delete the cluster.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteCapacityProvider service method.</param>
            
            <returns>The response from the DeleteCapacityProvider service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DeleteCapacityProvider">REST API Reference for DeleteCapacityProvider Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.DeleteCapacityProviderAsync(Amazon.ECS.Model.DeleteCapacityProviderRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified capacity provider.
            
             <note> 
            <para>
            The <code>FARGATE</code> and <code>FARGATE_SPOT</code> capacity providers are reserved
            and cannot be deleted. You can disassociate them from a cluster using either the <a>PutClusterCapacityProviders</a>
            API or by deleting the cluster.
            </para>
             </note> 
            <para>
            Prior to a capacity provider being deleted, the capacity provider must be removed
            from the capacity provider strategy from all services. The <a>UpdateService</a> API
            can be used to remove a capacity provider from a service's capacity provider strategy.
            When updating a service, the <code>forceNewDeployment</code> option can be used to
            ensure that any tasks using the Amazon EC2 instance capacity provided by the capacity
            provider are transitioned to use the capacity from the remaining capacity providers.
            Only capacity providers that are not associated with a cluster can be deleted. To
            remove a capacity provider from a cluster, you can either use <a>PutClusterCapacityProviders</a>
            or delete the cluster.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteCapacityProvider service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteCapacityProvider service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DeleteCapacityProvider">REST API Reference for DeleteCapacityProvider Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.DeleteCluster(Amazon.ECS.Model.DeleteClusterRequest)">
            <summary>
            Deletes the specified cluster. The cluster will transition to the <code>INACTIVE</code>
            state. Clusters with an <code>INACTIVE</code> status may remain discoverable in your
            account for a period of time. However, this behavior is subject to change in the future,
            so you should not rely on <code>INACTIVE</code> clusters persisting.
            
             
            <para>
            You must deregister all container instances from this cluster before you may delete
            it. You can list the container instances in a cluster with <a>ListContainerInstances</a>
            and deregister them with <a>DeregisterContainerInstance</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteCluster service method.</param>
            
            <returns>The response from the DeleteCluster service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterContainsContainerInstancesException">
            You cannot delete a cluster that has registered container instances. First, deregister
            the container instances before you can delete the cluster. For more information, see
            <a>DeregisterContainerInstance</a>.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterContainsServicesException">
            You cannot delete a cluster that contains services. First, update the service to reduce
            its desired task count to 0 and then delete the service. For more information, see
            <a>UpdateService</a> and <a>DeleteService</a>.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterContainsTasksException">
            You cannot delete a cluster that has active tasks.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UpdateInProgressException">
            There is already a current Amazon ECS container agent update in progress on the specified
            container instance. If the container agent becomes disconnected while it is in a transitional
            stage, such as <code>PENDING</code> or <code>STAGING</code>, the update process can
            get stuck in that state. However, when the agent reconnects, it resumes where it stopped
            previously.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DeleteCluster">REST API Reference for DeleteCluster Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.DeleteClusterAsync(Amazon.ECS.Model.DeleteClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified cluster. The cluster will transition to the <code>INACTIVE</code>
            state. Clusters with an <code>INACTIVE</code> status may remain discoverable in your
            account for a period of time. However, this behavior is subject to change in the future,
            so you should not rely on <code>INACTIVE</code> clusters persisting.
            
             
            <para>
            You must deregister all container instances from this cluster before you may delete
            it. You can list the container instances in a cluster with <a>ListContainerInstances</a>
            and deregister them with <a>DeregisterContainerInstance</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteCluster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteCluster service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterContainsContainerInstancesException">
            You cannot delete a cluster that has registered container instances. First, deregister
            the container instances before you can delete the cluster. For more information, see
            <a>DeregisterContainerInstance</a>.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterContainsServicesException">
            You cannot delete a cluster that contains services. First, update the service to reduce
            its desired task count to 0 and then delete the service. For more information, see
            <a>UpdateService</a> and <a>DeleteService</a>.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterContainsTasksException">
            You cannot delete a cluster that has active tasks.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UpdateInProgressException">
            There is already a current Amazon ECS container agent update in progress on the specified
            container instance. If the container agent becomes disconnected while it is in a transitional
            stage, such as <code>PENDING</code> or <code>STAGING</code>, the update process can
            get stuck in that state. However, when the agent reconnects, it resumes where it stopped
            previously.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DeleteCluster">REST API Reference for DeleteCluster Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.DeleteService(Amazon.ECS.Model.DeleteServiceRequest)">
            <summary>
            Deletes a specified service within a cluster. You can delete a service if you have
            no running tasks in it and the desired task count is zero. If the service is actively
            maintaining tasks, you cannot delete it, and you must update the service to a desired
            task count of zero. For more information, see <a>UpdateService</a>.
            
             <note> 
            <para>
            When you delete a service, if there are still running tasks that require cleanup,
            the service status moves from <code>ACTIVE</code> to <code>DRAINING</code>, and the
            service is no longer visible in the console or in the <a>ListServices</a> API operation.
            After all tasks have transitioned to either <code>STOPPING</code> or <code>STOPPED</code>
            status, the service status moves from <code>DRAINING</code> to <code>INACTIVE</code>.
            Services in the <code>DRAINING</code> or <code>INACTIVE</code> status can still be
            viewed with the <a>DescribeServices</a> API operation. However, in the future, <code>INACTIVE</code>
            services may be cleaned up and purged from Amazon ECS record keeping, and <a>DescribeServices</a>
            calls on those services return a <code>ServiceNotFoundException</code> error.
            </para>
             </note> <important> 
            <para>
            If you attempt to create a new service with the same name as an existing service in
            either <code>ACTIVE</code> or <code>DRAINING</code> status, you receive an error.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteService service method.</param>
            
            <returns>The response from the DeleteService service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotFoundException">
            The specified service could not be found. You can view your available services with
            <a>ListServices</a>. Amazon ECS services are cluster-specific and Region-specific.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DeleteService">REST API Reference for DeleteService Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.DeleteServiceAsync(Amazon.ECS.Model.DeleteServiceRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a specified service within a cluster. You can delete a service if you have
            no running tasks in it and the desired task count is zero. If the service is actively
            maintaining tasks, you cannot delete it, and you must update the service to a desired
            task count of zero. For more information, see <a>UpdateService</a>.
            
             <note> 
            <para>
            When you delete a service, if there are still running tasks that require cleanup,
            the service status moves from <code>ACTIVE</code> to <code>DRAINING</code>, and the
            service is no longer visible in the console or in the <a>ListServices</a> API operation.
            After all tasks have transitioned to either <code>STOPPING</code> or <code>STOPPED</code>
            status, the service status moves from <code>DRAINING</code> to <code>INACTIVE</code>.
            Services in the <code>DRAINING</code> or <code>INACTIVE</code> status can still be
            viewed with the <a>DescribeServices</a> API operation. However, in the future, <code>INACTIVE</code>
            services may be cleaned up and purged from Amazon ECS record keeping, and <a>DescribeServices</a>
            calls on those services return a <code>ServiceNotFoundException</code> error.
            </para>
             </note> <important> 
            <para>
            If you attempt to create a new service with the same name as an existing service in
            either <code>ACTIVE</code> or <code>DRAINING</code> status, you receive an error.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteService service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteService service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotFoundException">
            The specified service could not be found. You can view your available services with
            <a>ListServices</a>. Amazon ECS services are cluster-specific and Region-specific.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DeleteService">REST API Reference for DeleteService Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.DeleteTaskSet(Amazon.ECS.Model.DeleteTaskSetRequest)">
            <summary>
            Deletes a specified task set within a service. This is used when a service uses the
            <code>EXTERNAL</code> deployment controller type. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-types.html">Amazon
            ECS Deployment Types</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteTaskSet service method.</param>
            
            <returns>The response from the DeleteTaskSet service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AccessDeniedException">
            You do not have authorization to perform the requested action.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotActiveException">
            The specified service is not active. You can't update a service that is inactive.
            If you have previously deleted a service, you can re-create it with <a>CreateService</a>.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotFoundException">
            The specified service could not be found. You can view your available services with
            <a>ListServices</a>. Amazon ECS services are cluster-specific and Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.TaskSetNotFoundException">
            The specified task set could not be found. You can view your available task sets with
            <a>DescribeTaskSets</a>. Task sets are specific to each cluster, service and Region.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UnsupportedFeatureException">
            The specified task is not supported in this Region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DeleteTaskSet">REST API Reference for DeleteTaskSet Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.DeleteTaskSetAsync(Amazon.ECS.Model.DeleteTaskSetRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a specified task set within a service. This is used when a service uses the
            <code>EXTERNAL</code> deployment controller type. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-types.html">Amazon
            ECS Deployment Types</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteTaskSet service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteTaskSet service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AccessDeniedException">
            You do not have authorization to perform the requested action.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotActiveException">
            The specified service is not active. You can't update a service that is inactive.
            If you have previously deleted a service, you can re-create it with <a>CreateService</a>.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotFoundException">
            The specified service could not be found. You can view your available services with
            <a>ListServices</a>. Amazon ECS services are cluster-specific and Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.TaskSetNotFoundException">
            The specified task set could not be found. You can view your available task sets with
            <a>DescribeTaskSets</a>. Task sets are specific to each cluster, service and Region.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UnsupportedFeatureException">
            The specified task is not supported in this Region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DeleteTaskSet">REST API Reference for DeleteTaskSet Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.DeregisterContainerInstance(Amazon.ECS.Model.DeregisterContainerInstanceRequest)">
            <summary>
            Deregisters an Amazon ECS container instance from the specified cluster. This instance
            is no longer available to run tasks.
            
             
            <para>
            If you intend to use the container instance for some other purpose after deregistration,
            you should stop all of the tasks running on the container instance before deregistration.
            That prevents any orphaned tasks from consuming resources.
            </para>
             
            <para>
            Deregistering a container instance removes the instance from a cluster, but it does
            not terminate the EC2 instance. If you are finished using the instance, be sure to
            terminate it in the Amazon EC2 console to stop billing.
            </para>
             <note> 
            <para>
            If you terminate a running container instance, Amazon ECS automatically deregisters
            the instance from your cluster (stopped container instances or instances with disconnected
            agents are not automatically deregistered when terminated).
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeregisterContainerInstance service method.</param>
            
            <returns>The response from the DeregisterContainerInstance service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DeregisterContainerInstance">REST API Reference for DeregisterContainerInstance Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.DeregisterContainerInstanceAsync(Amazon.ECS.Model.DeregisterContainerInstanceRequest,System.Threading.CancellationToken)">
            <summary>
            Deregisters an Amazon ECS container instance from the specified cluster. This instance
            is no longer available to run tasks.
            
             
            <para>
            If you intend to use the container instance for some other purpose after deregistration,
            you should stop all of the tasks running on the container instance before deregistration.
            That prevents any orphaned tasks from consuming resources.
            </para>
             
            <para>
            Deregistering a container instance removes the instance from a cluster, but it does
            not terminate the EC2 instance. If you are finished using the instance, be sure to
            terminate it in the Amazon EC2 console to stop billing.
            </para>
             <note> 
            <para>
            If you terminate a running container instance, Amazon ECS automatically deregisters
            the instance from your cluster (stopped container instances or instances with disconnected
            agents are not automatically deregistered when terminated).
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeregisterContainerInstance service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeregisterContainerInstance service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DeregisterContainerInstance">REST API Reference for DeregisterContainerInstance Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.DeregisterTaskDefinition(Amazon.ECS.Model.DeregisterTaskDefinitionRequest)">
            <summary>
            Deregisters the specified task definition by family and revision. Upon deregistration,
            the task definition is marked as <code>INACTIVE</code>. Existing tasks and services
            that reference an <code>INACTIVE</code> task definition continue to run without disruption.
            Existing services that reference an <code>INACTIVE</code> task definition can still
            scale up or down by modifying the service's desired count.
            
             
            <para>
            You cannot use an <code>INACTIVE</code> task definition to run new tasks or create
            new services, and you cannot update an existing service to reference an <code>INACTIVE</code>
            task definition. However, there may be up to a 10-minute window following deregistration
            where these restrictions have not yet taken effect.
            </para>
             <note> 
            <para>
            At this time, <code>INACTIVE</code> task definitions remain discoverable in your account
            indefinitely. However, this behavior is subject to change in the future, so you should
            not rely on <code>INACTIVE</code> task definitions persisting beyond the lifecycle
            of any associated tasks and services.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeregisterTaskDefinition service method.</param>
            
            <returns>The response from the DeregisterTaskDefinition service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DeregisterTaskDefinition">REST API Reference for DeregisterTaskDefinition Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.DeregisterTaskDefinitionAsync(Amazon.ECS.Model.DeregisterTaskDefinitionRequest,System.Threading.CancellationToken)">
            <summary>
            Deregisters the specified task definition by family and revision. Upon deregistration,
            the task definition is marked as <code>INACTIVE</code>. Existing tasks and services
            that reference an <code>INACTIVE</code> task definition continue to run without disruption.
            Existing services that reference an <code>INACTIVE</code> task definition can still
            scale up or down by modifying the service's desired count.
            
             
            <para>
            You cannot use an <code>INACTIVE</code> task definition to run new tasks or create
            new services, and you cannot update an existing service to reference an <code>INACTIVE</code>
            task definition. However, there may be up to a 10-minute window following deregistration
            where these restrictions have not yet taken effect.
            </para>
             <note> 
            <para>
            At this time, <code>INACTIVE</code> task definitions remain discoverable in your account
            indefinitely. However, this behavior is subject to change in the future, so you should
            not rely on <code>INACTIVE</code> task definitions persisting beyond the lifecycle
            of any associated tasks and services.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeregisterTaskDefinition service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeregisterTaskDefinition service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DeregisterTaskDefinition">REST API Reference for DeregisterTaskDefinition Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.DescribeCapacityProviders(Amazon.ECS.Model.DescribeCapacityProvidersRequest)">
            <summary>
            Describes one or more of your capacity providers.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeCapacityProviders service method.</param>
            
            <returns>The response from the DescribeCapacityProviders service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DescribeCapacityProviders">REST API Reference for DescribeCapacityProviders Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.DescribeCapacityProvidersAsync(Amazon.ECS.Model.DescribeCapacityProvidersRequest,System.Threading.CancellationToken)">
            <summary>
            Describes one or more of your capacity providers.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeCapacityProviders service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeCapacityProviders service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DescribeCapacityProviders">REST API Reference for DescribeCapacityProviders Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.DescribeClusters(Amazon.ECS.Model.DescribeClustersRequest)">
            <summary>
            Describes one or more of your clusters.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeClusters service method.</param>
            
            <returns>The response from the DescribeClusters service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DescribeClusters">REST API Reference for DescribeClusters Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.DescribeClustersAsync(Amazon.ECS.Model.DescribeClustersRequest,System.Threading.CancellationToken)">
            <summary>
            Describes one or more of your clusters.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeClusters service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeClusters service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DescribeClusters">REST API Reference for DescribeClusters Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.DescribeContainerInstances(Amazon.ECS.Model.DescribeContainerInstancesRequest)">
            <summary>
            Describes one or more container instances. Returns metadata about each container instance
            requested.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeContainerInstances service method.</param>
            
            <returns>The response from the DescribeContainerInstances service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DescribeContainerInstances">REST API Reference for DescribeContainerInstances Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.DescribeContainerInstancesAsync(Amazon.ECS.Model.DescribeContainerInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Describes one or more container instances. Returns metadata about each container instance
            requested.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeContainerInstances service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeContainerInstances service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DescribeContainerInstances">REST API Reference for DescribeContainerInstances Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.DescribeServices(Amazon.ECS.Model.DescribeServicesRequest)">
            <summary>
            Describes the specified services running in your cluster.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeServices service method.</param>
            
            <returns>The response from the DescribeServices service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DescribeServices">REST API Reference for DescribeServices Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.DescribeServicesAsync(Amazon.ECS.Model.DescribeServicesRequest,System.Threading.CancellationToken)">
            <summary>
            Describes the specified services running in your cluster.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeServices service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeServices service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DescribeServices">REST API Reference for DescribeServices Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.DescribeTaskDefinition(Amazon.ECS.Model.DescribeTaskDefinitionRequest)">
            <summary>
            Describes a task definition. You can specify a <code>family</code> and <code>revision</code>
            to find information about a specific task definition, or you can simply specify the
            family to find the latest <code>ACTIVE</code> revision in that family.
            
             <note> 
            <para>
            You can only describe <code>INACTIVE</code> task definitions while an active task
            or service references them.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeTaskDefinition service method.</param>
            
            <returns>The response from the DescribeTaskDefinition service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DescribeTaskDefinition">REST API Reference for DescribeTaskDefinition Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.DescribeTaskDefinitionAsync(Amazon.ECS.Model.DescribeTaskDefinitionRequest,System.Threading.CancellationToken)">
            <summary>
            Describes a task definition. You can specify a <code>family</code> and <code>revision</code>
            to find information about a specific task definition, or you can simply specify the
            family to find the latest <code>ACTIVE</code> revision in that family.
            
             <note> 
            <para>
            You can only describe <code>INACTIVE</code> task definitions while an active task
            or service references them.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeTaskDefinition service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeTaskDefinition service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DescribeTaskDefinition">REST API Reference for DescribeTaskDefinition Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.DescribeTasks(Amazon.ECS.Model.DescribeTasksRequest)">
            <summary>
            Describes a specified task or tasks.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeTasks service method.</param>
            
            <returns>The response from the DescribeTasks service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DescribeTasks">REST API Reference for DescribeTasks Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.DescribeTasksAsync(Amazon.ECS.Model.DescribeTasksRequest,System.Threading.CancellationToken)">
            <summary>
            Describes a specified task or tasks.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeTasks service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeTasks service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DescribeTasks">REST API Reference for DescribeTasks Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.DescribeTaskSets(Amazon.ECS.Model.DescribeTaskSetsRequest)">
            <summary>
            Describes the task sets in the specified cluster and service. This is used when a
            service uses the <code>EXTERNAL</code> deployment controller type. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-types.html">Amazon
            ECS Deployment Types</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeTaskSets service method.</param>
            
            <returns>The response from the DescribeTaskSets service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AccessDeniedException">
            You do not have authorization to perform the requested action.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotActiveException">
            The specified service is not active. You can't update a service that is inactive.
            If you have previously deleted a service, you can re-create it with <a>CreateService</a>.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotFoundException">
            The specified service could not be found. You can view your available services with
            <a>ListServices</a>. Amazon ECS services are cluster-specific and Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UnsupportedFeatureException">
            The specified task is not supported in this Region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DescribeTaskSets">REST API Reference for DescribeTaskSets Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.DescribeTaskSetsAsync(Amazon.ECS.Model.DescribeTaskSetsRequest,System.Threading.CancellationToken)">
            <summary>
            Describes the task sets in the specified cluster and service. This is used when a
            service uses the <code>EXTERNAL</code> deployment controller type. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-types.html">Amazon
            ECS Deployment Types</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeTaskSets service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeTaskSets service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AccessDeniedException">
            You do not have authorization to perform the requested action.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotActiveException">
            The specified service is not active. You can't update a service that is inactive.
            If you have previously deleted a service, you can re-create it with <a>CreateService</a>.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotFoundException">
            The specified service could not be found. You can view your available services with
            <a>ListServices</a>. Amazon ECS services are cluster-specific and Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UnsupportedFeatureException">
            The specified task is not supported in this Region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DescribeTaskSets">REST API Reference for DescribeTaskSets Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.ExecuteCommand(Amazon.ECS.Model.ExecuteCommandRequest)">
            <summary>
            Runs a command remotely on a container within a task.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ExecuteCommand service method.</param>
            
            <returns>The response from the ExecuteCommand service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AccessDeniedException">
            You do not have authorization to perform the requested action.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.TargetNotConnectedException">
            The target container is not properly configured with the execute command agent or
            the container is no longer active or running.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ExecuteCommand">REST API Reference for ExecuteCommand Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.ExecuteCommandAsync(Amazon.ECS.Model.ExecuteCommandRequest,System.Threading.CancellationToken)">
            <summary>
            Runs a command remotely on a container within a task.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ExecuteCommand service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ExecuteCommand service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AccessDeniedException">
            You do not have authorization to perform the requested action.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.TargetNotConnectedException">
            The target container is not properly configured with the execute command agent or
            the container is no longer active or running.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ExecuteCommand">REST API Reference for ExecuteCommand Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.ListAccountSettings(Amazon.ECS.Model.ListAccountSettingsRequest)">
            <summary>
            Lists the account settings for a specified principal.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListAccountSettings service method.</param>
            
            <returns>The response from the ListAccountSettings service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListAccountSettings">REST API Reference for ListAccountSettings Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.ListAccountSettingsAsync(Amazon.ECS.Model.ListAccountSettingsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the account settings for a specified principal.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListAccountSettings service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListAccountSettings service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListAccountSettings">REST API Reference for ListAccountSettings Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.ListAttributes(Amazon.ECS.Model.ListAttributesRequest)">
            <summary>
            Lists the attributes for Amazon ECS resources within a specified target type and cluster.
            When you specify a target type and cluster, <code>ListAttributes</code> returns a
            list of attribute objects, one for each attribute on each resource. You can filter
            the list of results to a single attribute name to only return results that have that
            name. You can also filter the results by attribute name and value, for example, to
            see which container instances in a cluster are running a Linux AMI (<code>ecs.os-type=linux</code>).
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListAttributes service method.</param>
            
            <returns>The response from the ListAttributes service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListAttributes">REST API Reference for ListAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.ListAttributesAsync(Amazon.ECS.Model.ListAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the attributes for Amazon ECS resources within a specified target type and cluster.
            When you specify a target type and cluster, <code>ListAttributes</code> returns a
            list of attribute objects, one for each attribute on each resource. You can filter
            the list of results to a single attribute name to only return results that have that
            name. You can also filter the results by attribute name and value, for example, to
            see which container instances in a cluster are running a Linux AMI (<code>ecs.os-type=linux</code>).
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListAttributes service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListAttributes service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListAttributes">REST API Reference for ListAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.ListClusters(Amazon.ECS.Model.ListClustersRequest)">
            <summary>
            Returns a list of existing clusters.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListClusters service method.</param>
            
            <returns>The response from the ListClusters service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListClusters">REST API Reference for ListClusters Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.ListClustersAsync(Amazon.ECS.Model.ListClustersRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of existing clusters.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListClusters service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListClusters service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListClusters">REST API Reference for ListClusters Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.ListContainerInstances(Amazon.ECS.Model.ListContainerInstancesRequest)">
            <summary>
            Returns a list of container instances in a specified cluster. You can filter the results
            of a <code>ListContainerInstances</code> operation with cluster query language statements
            inside the <code>filter</code> parameter. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cluster-query-language.html">Cluster
            Query Language</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListContainerInstances service method.</param>
            
            <returns>The response from the ListContainerInstances service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListContainerInstances">REST API Reference for ListContainerInstances Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.ListContainerInstancesAsync(Amazon.ECS.Model.ListContainerInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of container instances in a specified cluster. You can filter the results
            of a <code>ListContainerInstances</code> operation with cluster query language statements
            inside the <code>filter</code> parameter. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cluster-query-language.html">Cluster
            Query Language</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListContainerInstances service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListContainerInstances service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListContainerInstances">REST API Reference for ListContainerInstances Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.ListServices(Amazon.ECS.Model.ListServicesRequest)">
            <summary>
            Returns a list of services. You can filter the results by cluster, launch type, and
            scheduling strategy.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListServices service method.</param>
            
            <returns>The response from the ListServices service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListServices">REST API Reference for ListServices Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.ListServicesAsync(Amazon.ECS.Model.ListServicesRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of services. You can filter the results by cluster, launch type, and
            scheduling strategy.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListServices service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListServices service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListServices">REST API Reference for ListServices Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.ListTagsForResource(Amazon.ECS.Model.ListTagsForResourceRequest)">
            <summary>
            List the tags for an Amazon ECS resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            
            <returns>The response from the ListTagsForResource service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.ListTagsForResourceAsync(Amazon.ECS.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            List the tags for an Amazon ECS resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.ListTaskDefinitionFamilies(Amazon.ECS.Model.ListTaskDefinitionFamiliesRequest)">
            <summary>
            Returns a list of task definition families that are registered to your account (which
            may include task definition families that no longer have any <code>ACTIVE</code> task
            definition revisions).
            
             
            <para>
            You can filter out task definition families that do not contain any <code>ACTIVE</code>
            task definition revisions by setting the <code>status</code> parameter to <code>ACTIVE</code>.
            You can also filter the results with the <code>familyPrefix</code> parameter.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTaskDefinitionFamilies service method.</param>
            
            <returns>The response from the ListTaskDefinitionFamilies service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListTaskDefinitionFamilies">REST API Reference for ListTaskDefinitionFamilies Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.ListTaskDefinitionFamiliesAsync(Amazon.ECS.Model.ListTaskDefinitionFamiliesRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of task definition families that are registered to your account (which
            may include task definition families that no longer have any <code>ACTIVE</code> task
            definition revisions).
            
             
            <para>
            You can filter out task definition families that do not contain any <code>ACTIVE</code>
            task definition revisions by setting the <code>status</code> parameter to <code>ACTIVE</code>.
            You can also filter the results with the <code>familyPrefix</code> parameter.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTaskDefinitionFamilies service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTaskDefinitionFamilies service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListTaskDefinitionFamilies">REST API Reference for ListTaskDefinitionFamilies Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.ListTaskDefinitions(Amazon.ECS.Model.ListTaskDefinitionsRequest)">
            <summary>
            Returns a list of task definitions that are registered to your account. You can filter
            the results by family name with the <code>familyPrefix</code> parameter or by status
            with the <code>status</code> parameter.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTaskDefinitions service method.</param>
            
            <returns>The response from the ListTaskDefinitions service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListTaskDefinitions">REST API Reference for ListTaskDefinitions Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.ListTaskDefinitionsAsync(Amazon.ECS.Model.ListTaskDefinitionsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of task definitions that are registered to your account. You can filter
            the results by family name with the <code>familyPrefix</code> parameter or by status
            with the <code>status</code> parameter.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTaskDefinitions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTaskDefinitions service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListTaskDefinitions">REST API Reference for ListTaskDefinitions Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.ListTasks(Amazon.ECS.Model.ListTasksRequest)">
            <summary>
            Returns a list of tasks. You can filter the results by cluster, task definition family,
            container instance, launch type, what IAM principal started the task, or by the desired
            status of the task.
            
             
            <para>
            Recently stopped tasks might appear in the returned results. Currently, stopped tasks
            appear in the returned results for at least one hour.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTasks service method.</param>
            
            <returns>The response from the ListTasks service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotFoundException">
            The specified service could not be found. You can view your available services with
            <a>ListServices</a>. Amazon ECS services are cluster-specific and Region-specific.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListTasks">REST API Reference for ListTasks Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.ListTasksAsync(Amazon.ECS.Model.ListTasksRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of tasks. You can filter the results by cluster, task definition family,
            container instance, launch type, what IAM principal started the task, or by the desired
            status of the task.
            
             
            <para>
            Recently stopped tasks might appear in the returned results. Currently, stopped tasks
            appear in the returned results for at least one hour.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTasks service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTasks service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotFoundException">
            The specified service could not be found. You can view your available services with
            <a>ListServices</a>. Amazon ECS services are cluster-specific and Region-specific.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListTasks">REST API Reference for ListTasks Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.PutAccountSetting(Amazon.ECS.Model.PutAccountSettingRequest)">
            <summary>
            Modifies an account setting. Account settings are set on a per-Region basis.
            
             
            <para>
            If you change the account setting for the root user, the default settings for all
            of the IAM users and roles for which no individual account setting has been specified
            are reset. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-account-settings.html">Account
            Settings</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            When <code>serviceLongArnFormat</code>, <code>taskLongArnFormat</code>, or <code>containerInstanceLongArnFormat</code>
            are specified, the Amazon Resource Name (ARN) and resource ID format of the resource
            type for a specified IAM user, IAM role, or the root user for an account is affected.
            The opt-in and opt-out account setting must be set for each Amazon ECS resource separately.
            The ARN and resource ID format of a resource will be defined by the opt-in status
            of the IAM user or role that created the resource. You must enable this setting to
            use Amazon ECS features such as resource tagging.
            </para>
             
            <para>
            When <code>awsvpcTrunking</code> is specified, the elastic network interface (ENI)
            limit for any new container instances that support the feature is changed. If <code>awsvpcTrunking</code>
            is enabled, any new container instances that support the feature are launched have
            the increased ENI limits available to them. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/container-instance-eni.html">Elastic
            Network Interface Trunking</a> in the <i>Amazon Elastic Container Service Developer
            Guide</i>.
            </para>
             
            <para>
            When <code>containerInsights</code> is specified, the default setting indicating whether
            CloudWatch Container Insights is enabled for your clusters is changed. If <code>containerInsights</code>
            is enabled, any new clusters that are created will have Container Insights enabled
            unless you disable it during cluster creation. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cloudwatch-container-insights.html">CloudWatch
            Container Insights</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutAccountSetting service method.</param>
            
            <returns>The response from the PutAccountSetting service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/PutAccountSetting">REST API Reference for PutAccountSetting Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.PutAccountSettingAsync(Amazon.ECS.Model.PutAccountSettingRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies an account setting. Account settings are set on a per-Region basis.
            
             
            <para>
            If you change the account setting for the root user, the default settings for all
            of the IAM users and roles for which no individual account setting has been specified
            are reset. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-account-settings.html">Account
            Settings</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            When <code>serviceLongArnFormat</code>, <code>taskLongArnFormat</code>, or <code>containerInstanceLongArnFormat</code>
            are specified, the Amazon Resource Name (ARN) and resource ID format of the resource
            type for a specified IAM user, IAM role, or the root user for an account is affected.
            The opt-in and opt-out account setting must be set for each Amazon ECS resource separately.
            The ARN and resource ID format of a resource will be defined by the opt-in status
            of the IAM user or role that created the resource. You must enable this setting to
            use Amazon ECS features such as resource tagging.
            </para>
             
            <para>
            When <code>awsvpcTrunking</code> is specified, the elastic network interface (ENI)
            limit for any new container instances that support the feature is changed. If <code>awsvpcTrunking</code>
            is enabled, any new container instances that support the feature are launched have
            the increased ENI limits available to them. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/container-instance-eni.html">Elastic
            Network Interface Trunking</a> in the <i>Amazon Elastic Container Service Developer
            Guide</i>.
            </para>
             
            <para>
            When <code>containerInsights</code> is specified, the default setting indicating whether
            CloudWatch Container Insights is enabled for your clusters is changed. If <code>containerInsights</code>
            is enabled, any new clusters that are created will have Container Insights enabled
            unless you disable it during cluster creation. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cloudwatch-container-insights.html">CloudWatch
            Container Insights</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutAccountSetting service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutAccountSetting service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/PutAccountSetting">REST API Reference for PutAccountSetting Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.PutAccountSettingDefault(Amazon.ECS.Model.PutAccountSettingDefaultRequest)">
            <summary>
            Modifies an account setting for all IAM users on an account for whom no individual
            account setting has been specified. Account settings are set on a per-Region basis.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutAccountSettingDefault service method.</param>
            
            <returns>The response from the PutAccountSettingDefault service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/PutAccountSettingDefault">REST API Reference for PutAccountSettingDefault Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.PutAccountSettingDefaultAsync(Amazon.ECS.Model.PutAccountSettingDefaultRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies an account setting for all IAM users on an account for whom no individual
            account setting has been specified. Account settings are set on a per-Region basis.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutAccountSettingDefault service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutAccountSettingDefault service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/PutAccountSettingDefault">REST API Reference for PutAccountSettingDefault Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.PutAttributes(Amazon.ECS.Model.PutAttributesRequest)">
            <summary>
            Create or update an attribute on an Amazon ECS resource. If the attribute does not
            exist, it is created. If the attribute exists, its value is replaced with the specified
            value. To delete an attribute, use <a>DeleteAttributes</a>. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-constraints.html#attributes">Attributes</a>
            in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutAttributes service method.</param>
            
            <returns>The response from the PutAttributes service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AttributeLimitExceededException">
            You can apply up to 10 custom attributes per resource. You can view the attributes
            of a resource with <a>ListAttributes</a>. You can remove existing attributes on a
            resource with <a>DeleteAttributes</a>.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.TargetNotFoundException">
            The specified target could not be found. You can view your available container instances
            with <a>ListContainerInstances</a>. Amazon ECS container instances are cluster-specific
            and Region-specific.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/PutAttributes">REST API Reference for PutAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.PutAttributesAsync(Amazon.ECS.Model.PutAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Create or update an attribute on an Amazon ECS resource. If the attribute does not
            exist, it is created. If the attribute exists, its value is replaced with the specified
            value. To delete an attribute, use <a>DeleteAttributes</a>. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-constraints.html#attributes">Attributes</a>
            in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutAttributes service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutAttributes service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AttributeLimitExceededException">
            You can apply up to 10 custom attributes per resource. You can view the attributes
            of a resource with <a>ListAttributes</a>. You can remove existing attributes on a
            resource with <a>DeleteAttributes</a>.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.TargetNotFoundException">
            The specified target could not be found. You can view your available container instances
            with <a>ListContainerInstances</a>. Amazon ECS container instances are cluster-specific
            and Region-specific.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/PutAttributes">REST API Reference for PutAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.PutClusterCapacityProviders(Amazon.ECS.Model.PutClusterCapacityProvidersRequest)">
            <summary>
            Modifies the available capacity providers and the default capacity provider strategy
            for a cluster.
            
             
            <para>
            You must specify both the available capacity providers and a default capacity provider
            strategy for the cluster. If the specified cluster has existing capacity providers
            associated with it, you must specify all existing capacity providers in addition to
            any new ones you want to add. Any existing capacity providers associated with a cluster
            that are omitted from a <a>PutClusterCapacityProviders</a> API call will be disassociated
            with the cluster. You can only disassociate an existing capacity provider from a cluster
            if it's not being used by any existing tasks.
            </para>
             
            <para>
            When creating a service or running a task on a cluster, if no capacity provider or
            launch type is specified, then the cluster's default capacity provider strategy is
            used. It is recommended to define a default capacity provider strategy for your cluster,
            however you may specify an empty array (<code>[]</code>) to bypass defining a default
            strategy.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutClusterCapacityProviders service method.</param>
            
            <returns>The response from the PutClusterCapacityProviders service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ResourceInUseException">
            The specified resource is in-use and cannot be removed.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UpdateInProgressException">
            There is already a current Amazon ECS container agent update in progress on the specified
            container instance. If the container agent becomes disconnected while it is in a transitional
            stage, such as <code>PENDING</code> or <code>STAGING</code>, the update process can
            get stuck in that state. However, when the agent reconnects, it resumes where it stopped
            previously.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/PutClusterCapacityProviders">REST API Reference for PutClusterCapacityProviders Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.PutClusterCapacityProvidersAsync(Amazon.ECS.Model.PutClusterCapacityProvidersRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies the available capacity providers and the default capacity provider strategy
            for a cluster.
            
             
            <para>
            You must specify both the available capacity providers and a default capacity provider
            strategy for the cluster. If the specified cluster has existing capacity providers
            associated with it, you must specify all existing capacity providers in addition to
            any new ones you want to add. Any existing capacity providers associated with a cluster
            that are omitted from a <a>PutClusterCapacityProviders</a> API call will be disassociated
            with the cluster. You can only disassociate an existing capacity provider from a cluster
            if it's not being used by any existing tasks.
            </para>
             
            <para>
            When creating a service or running a task on a cluster, if no capacity provider or
            launch type is specified, then the cluster's default capacity provider strategy is
            used. It is recommended to define a default capacity provider strategy for your cluster,
            however you may specify an empty array (<code>[]</code>) to bypass defining a default
            strategy.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutClusterCapacityProviders service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutClusterCapacityProviders service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ResourceInUseException">
            The specified resource is in-use and cannot be removed.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UpdateInProgressException">
            There is already a current Amazon ECS container agent update in progress on the specified
            container instance. If the container agent becomes disconnected while it is in a transitional
            stage, such as <code>PENDING</code> or <code>STAGING</code>, the update process can
            get stuck in that state. However, when the agent reconnects, it resumes where it stopped
            previously.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/PutClusterCapacityProviders">REST API Reference for PutClusterCapacityProviders Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.RegisterTaskDefinition(Amazon.ECS.Model.RegisterTaskDefinitionRequest)">
            <summary>
            Registers a new task definition from the supplied <code>family</code> and <code>containerDefinitions</code>.
            Optionally, you can add data volumes to your containers with the <code>volumes</code>
            parameter. For more information about task definition parameters and defaults, see
            <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_defintions.html">Amazon
            ECS Task Definitions</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            
             
            <para>
            You can specify an IAM role for your task with the <code>taskRoleArn</code> parameter.
            When you specify an IAM role for a task, its containers can then use the latest versions
            of the CLI or SDKs to make API requests to the Amazon Web Services services that are
            specified in the IAM policy associated with the role. For more information, see <a
            href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-iam-roles.html">IAM
            Roles for Tasks</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            You can specify a Docker networking mode for the containers in your task definition
            with the <code>networkMode</code> parameter. The available network modes correspond
            to those described in <a href="https://docs.docker.com/engine/reference/run/#/network-settings">Network
            settings</a> in the Docker run reference. If you specify the <code>awsvpc</code> network
            mode, the task is allocated an elastic network interface, and you must specify a <a>NetworkConfiguration</a>
            when you create a service or run a task with the task definition. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-networking.html">Task
            Networking</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RegisterTaskDefinition service method.</param>
            
            <returns>The response from the RegisterTaskDefinition service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/RegisterTaskDefinition">REST API Reference for RegisterTaskDefinition Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.RegisterTaskDefinitionAsync(Amazon.ECS.Model.RegisterTaskDefinitionRequest,System.Threading.CancellationToken)">
            <summary>
            Registers a new task definition from the supplied <code>family</code> and <code>containerDefinitions</code>.
            Optionally, you can add data volumes to your containers with the <code>volumes</code>
            parameter. For more information about task definition parameters and defaults, see
            <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_defintions.html">Amazon
            ECS Task Definitions</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            
             
            <para>
            You can specify an IAM role for your task with the <code>taskRoleArn</code> parameter.
            When you specify an IAM role for a task, its containers can then use the latest versions
            of the CLI or SDKs to make API requests to the Amazon Web Services services that are
            specified in the IAM policy associated with the role. For more information, see <a
            href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-iam-roles.html">IAM
            Roles for Tasks</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            You can specify a Docker networking mode for the containers in your task definition
            with the <code>networkMode</code> parameter. The available network modes correspond
            to those described in <a href="https://docs.docker.com/engine/reference/run/#/network-settings">Network
            settings</a> in the Docker run reference. If you specify the <code>awsvpc</code> network
            mode, the task is allocated an elastic network interface, and you must specify a <a>NetworkConfiguration</a>
            when you create a service or run a task with the task definition. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-networking.html">Task
            Networking</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RegisterTaskDefinition service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RegisterTaskDefinition service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/RegisterTaskDefinition">REST API Reference for RegisterTaskDefinition Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.RunTask(Amazon.ECS.Model.RunTaskRequest)">
            <summary>
            Starts a new task using the specified task definition.
            
             
            <para>
            You can allow Amazon ECS to place tasks for you, or you can customize how Amazon ECS
            places tasks using placement constraints and placement strategies. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/scheduling_tasks.html">Scheduling
            Tasks</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            Alternatively, you can use <a>StartTask</a> to use your own scheduler or place tasks
            manually on specific container instances.
            </para>
             
            <para>
            The Amazon ECS API follows an eventual consistency model, due to the distributed nature
            of the system supporting the API. This means that the result of an API command you
            run that affects your Amazon ECS resources might not be immediately visible to all
            subsequent commands you run. Keep this in mind when you carry out an API command that
            immediately follows a previous API command.
            </para>
             
            <para>
            To manage eventual consistency, you can do the following:
            </para>
             <ul> <li> 
            <para>
            Confirm the state of the resource before you run a command to modify it. Run the DescribeTasks
            command using an exponential backoff algorithm to ensure that you allow enough time
            for the previous command to propagate through the system. To do this, run the DescribeTasks
            command repeatedly, starting with a couple of seconds of wait time and increasing
            gradually up to five minutes of wait time.
            </para>
             </li> <li> 
            <para>
            Add wait time between subsequent commands, even if the DescribeTasks command returns
            an accurate response. Apply an exponential backoff algorithm starting with a couple
            of seconds of wait time, and increase gradually up to about five minutes of wait time.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RunTask service method.</param>
            
            <returns>The response from the RunTask service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AccessDeniedException">
            You do not have authorization to perform the requested action.
            </exception>
            <exception cref="T:Amazon.ECS.Model.BlockedException">
            Your Amazon Web Services account has been blocked. For more information, contact <a
            href="http://aws.amazon.com/contact-us/"> Amazon Web Services Support</a>.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.PlatformTaskDefinitionIncompatibilityException">
            The specified platform version does not satisfy the task definition's required capabilities.
            </exception>
            <exception cref="T:Amazon.ECS.Model.PlatformUnknownException">
            The specified platform version does not exist.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UnsupportedFeatureException">
            The specified task is not supported in this Region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/RunTask">REST API Reference for RunTask Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.RunTaskAsync(Amazon.ECS.Model.RunTaskRequest,System.Threading.CancellationToken)">
            <summary>
            Starts a new task using the specified task definition.
            
             
            <para>
            You can allow Amazon ECS to place tasks for you, or you can customize how Amazon ECS
            places tasks using placement constraints and placement strategies. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/scheduling_tasks.html">Scheduling
            Tasks</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
             
            <para>
            Alternatively, you can use <a>StartTask</a> to use your own scheduler or place tasks
            manually on specific container instances.
            </para>
             
            <para>
            The Amazon ECS API follows an eventual consistency model, due to the distributed nature
            of the system supporting the API. This means that the result of an API command you
            run that affects your Amazon ECS resources might not be immediately visible to all
            subsequent commands you run. Keep this in mind when you carry out an API command that
            immediately follows a previous API command.
            </para>
             
            <para>
            To manage eventual consistency, you can do the following:
            </para>
             <ul> <li> 
            <para>
            Confirm the state of the resource before you run a command to modify it. Run the DescribeTasks
            command using an exponential backoff algorithm to ensure that you allow enough time
            for the previous command to propagate through the system. To do this, run the DescribeTasks
            command repeatedly, starting with a couple of seconds of wait time and increasing
            gradually up to five minutes of wait time.
            </para>
             </li> <li> 
            <para>
            Add wait time between subsequent commands, even if the DescribeTasks command returns
            an accurate response. Apply an exponential backoff algorithm starting with a couple
            of seconds of wait time, and increase gradually up to about five minutes of wait time.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RunTask service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RunTask service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AccessDeniedException">
            You do not have authorization to perform the requested action.
            </exception>
            <exception cref="T:Amazon.ECS.Model.BlockedException">
            Your Amazon Web Services account has been blocked. For more information, contact <a
            href="http://aws.amazon.com/contact-us/"> Amazon Web Services Support</a>.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.PlatformTaskDefinitionIncompatibilityException">
            The specified platform version does not satisfy the task definition's required capabilities.
            </exception>
            <exception cref="T:Amazon.ECS.Model.PlatformUnknownException">
            The specified platform version does not exist.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UnsupportedFeatureException">
            The specified task is not supported in this Region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/RunTask">REST API Reference for RunTask Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.StartTask(Amazon.ECS.Model.StartTaskRequest)">
            <summary>
            Starts a new task from the specified task definition on the specified container instance
            or instances.
            
             
            <para>
            Alternatively, you can use <a>RunTask</a> to place tasks for you. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/scheduling_tasks.html">Scheduling
            Tasks</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartTask service method.</param>
            
            <returns>The response from the StartTask service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/StartTask">REST API Reference for StartTask Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.StartTaskAsync(Amazon.ECS.Model.StartTaskRequest,System.Threading.CancellationToken)">
            <summary>
            Starts a new task from the specified task definition on the specified container instance
            or instances.
            
             
            <para>
            Alternatively, you can use <a>RunTask</a> to place tasks for you. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/scheduling_tasks.html">Scheduling
            Tasks</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartTask service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartTask service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/StartTask">REST API Reference for StartTask Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.StopTask(Amazon.ECS.Model.StopTaskRequest)">
            <summary>
            Stops a running task. Any tags associated with the task will be deleted.
            
             
            <para>
            When <a>StopTask</a> is called on a task, the equivalent of <code>docker stop</code>
            is issued to the containers running in the task. This results in a <code>SIGTERM</code>
            value and a default 30-second timeout, after which the <code>SIGKILL</code> value
            is sent and the containers are forcibly stopped. If the container handles the <code>SIGTERM</code>
            value gracefully and exits within 30 seconds from receiving it, no <code>SIGKILL</code>
            value is sent.
            </para>
             <note> 
            <para>
            The default 30-second timeout can be configured on the Amazon ECS container agent
            with the <code>ECS_CONTAINER_STOP_TIMEOUT</code> variable. For more information, see
            <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-config.html">Amazon
            ECS Container Agent Configuration</a> in the <i>Amazon Elastic Container Service Developer
            Guide</i>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StopTask service method.</param>
            
            <returns>The response from the StopTask service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/StopTask">REST API Reference for StopTask Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.StopTaskAsync(Amazon.ECS.Model.StopTaskRequest,System.Threading.CancellationToken)">
            <summary>
            Stops a running task. Any tags associated with the task will be deleted.
            
             
            <para>
            When <a>StopTask</a> is called on a task, the equivalent of <code>docker stop</code>
            is issued to the containers running in the task. This results in a <code>SIGTERM</code>
            value and a default 30-second timeout, after which the <code>SIGKILL</code> value
            is sent and the containers are forcibly stopped. If the container handles the <code>SIGTERM</code>
            value gracefully and exits within 30 seconds from receiving it, no <code>SIGKILL</code>
            value is sent.
            </para>
             <note> 
            <para>
            The default 30-second timeout can be configured on the Amazon ECS container agent
            with the <code>ECS_CONTAINER_STOP_TIMEOUT</code> variable. For more information, see
            <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-config.html">Amazon
            ECS Container Agent Configuration</a> in the <i>Amazon Elastic Container Service Developer
            Guide</i>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StopTask service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StopTask service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/StopTask">REST API Reference for StopTask Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.SubmitAttachmentStateChanges(Amazon.ECS.Model.SubmitAttachmentStateChangesRequest)">
            <summary>
            <note> 
            <para>
            This action is only used by the Amazon ECS agent, and it is not intended for use outside
            of the agent.
            </para>
             </note> 
            <para>
            Sent to acknowledge that an attachment changed states.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the SubmitAttachmentStateChanges service method.</param>
            
            <returns>The response from the SubmitAttachmentStateChanges service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AccessDeniedException">
            You do not have authorization to perform the requested action.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/SubmitAttachmentStateChanges">REST API Reference for SubmitAttachmentStateChanges Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.SubmitAttachmentStateChangesAsync(Amazon.ECS.Model.SubmitAttachmentStateChangesRequest,System.Threading.CancellationToken)">
            <summary>
            <note> 
            <para>
            This action is only used by the Amazon ECS agent, and it is not intended for use outside
            of the agent.
            </para>
             </note> 
            <para>
            Sent to acknowledge that an attachment changed states.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the SubmitAttachmentStateChanges service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the SubmitAttachmentStateChanges service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AccessDeniedException">
            You do not have authorization to perform the requested action.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/SubmitAttachmentStateChanges">REST API Reference for SubmitAttachmentStateChanges Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.TagResource(Amazon.ECS.Model.TagResourceRequest)">
            <summary>
            Associates the specified tags to a resource with the specified <code>resourceArn</code>.
            If existing tags on a resource are not specified in the request parameters, they are
            not changed. When a resource is deleted, the tags associated with that resource are
            deleted as well.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            
            <returns>The response from the TagResource service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.TagResourceAsync(Amazon.ECS.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Associates the specified tags to a resource with the specified <code>resourceArn</code>.
            If existing tags on a resource are not specified in the request parameters, they are
            not changed. When a resource is deleted, the tags associated with that resource are
            deleted as well.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.UntagResource(Amazon.ECS.Model.UntagResourceRequest)">
            <summary>
            Deletes specified tags from a resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            
            <returns>The response from the UntagResource service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.UntagResourceAsync(Amazon.ECS.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes specified tags from a resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.UpdateCapacityProvider(Amazon.ECS.Model.UpdateCapacityProviderRequest)">
            <summary>
            Modifies the parameters for a capacity provider.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateCapacityProvider service method.</param>
            
            <returns>The response from the UpdateCapacityProvider service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/UpdateCapacityProvider">REST API Reference for UpdateCapacityProvider Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.UpdateCapacityProviderAsync(Amazon.ECS.Model.UpdateCapacityProviderRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies the parameters for a capacity provider.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateCapacityProvider service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateCapacityProvider service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/UpdateCapacityProvider">REST API Reference for UpdateCapacityProvider Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.UpdateCluster(Amazon.ECS.Model.UpdateClusterRequest)">
            <summary>
            Updates the cluster.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateCluster service method.</param>
            
            <returns>The response from the UpdateCluster service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/UpdateCluster">REST API Reference for UpdateCluster Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.UpdateClusterAsync(Amazon.ECS.Model.UpdateClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the cluster.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateCluster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateCluster service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/UpdateCluster">REST API Reference for UpdateCluster Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.UpdateClusterSettings(Amazon.ECS.Model.UpdateClusterSettingsRequest)">
            <summary>
            Modifies the settings to use for a cluster.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateClusterSettings service method.</param>
            
            <returns>The response from the UpdateClusterSettings service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/UpdateClusterSettings">REST API Reference for UpdateClusterSettings Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.UpdateClusterSettingsAsync(Amazon.ECS.Model.UpdateClusterSettingsRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies the settings to use for a cluster.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateClusterSettings service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateClusterSettings service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/UpdateClusterSettings">REST API Reference for UpdateClusterSettings Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.UpdateContainerAgent(Amazon.ECS.Model.UpdateContainerAgentRequest)">
            <summary>
            Updates the Amazon ECS container agent on a specified container instance. Updating
            the Amazon ECS container agent does not interrupt running tasks or services on the
            container instance. The process for updating the agent differs depending on whether
            your container instance was launched with the Amazon ECS-optimized AMI or another
            operating system.
            
             <note> 
            <para>
            The <code>UpdateContainerAgent</code> API isn't supported for container instances
            using the Amazon ECS-optimized Amazon Linux 2 (arm64) AMI. To update the container
            agent, you can update the <code>ecs-init</code> package which will update the agent.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/agent-update-ecs-ami.html">Updating
            the Amazon ECS container agent</a> in the <i>Amazon Elastic Container Service Developer
            Guide</i>.
            </para>
             </note> 
            <para>
            The <code>UpdateContainerAgent</code> API requires an Amazon ECS-optimized AMI or
            Amazon Linux AMI with the <code>ecs-init</code> service installed and running. For
            help updating the Amazon ECS container agent on other operating systems, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-update.html#manually_update_agent">Manually
            updating the Amazon ECS container agent</a> in the <i>Amazon Elastic Container Service
            Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateContainerAgent service method.</param>
            
            <returns>The response from the UpdateContainerAgent service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.MissingVersionException">
            Amazon ECS is unable to determine the current version of the Amazon ECS container
            agent on the container instance and does not have enough information to proceed with
            an update. This could be because the agent running on the container instance is an
            older or custom version that does not use our version information.
            </exception>
            <exception cref="T:Amazon.ECS.Model.NoUpdateAvailableException">
            There is no update available for this Amazon ECS container agent. This could be because
            the agent is already running the latest version, or it is so old that there is no
            update path to the current version.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UpdateInProgressException">
            There is already a current Amazon ECS container agent update in progress on the specified
            container instance. If the container agent becomes disconnected while it is in a transitional
            stage, such as <code>PENDING</code> or <code>STAGING</code>, the update process can
            get stuck in that state. However, when the agent reconnects, it resumes where it stopped
            previously.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/UpdateContainerAgent">REST API Reference for UpdateContainerAgent Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.UpdateContainerAgentAsync(Amazon.ECS.Model.UpdateContainerAgentRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the Amazon ECS container agent on a specified container instance. Updating
            the Amazon ECS container agent does not interrupt running tasks or services on the
            container instance. The process for updating the agent differs depending on whether
            your container instance was launched with the Amazon ECS-optimized AMI or another
            operating system.
            
             <note> 
            <para>
            The <code>UpdateContainerAgent</code> API isn't supported for container instances
            using the Amazon ECS-optimized Amazon Linux 2 (arm64) AMI. To update the container
            agent, you can update the <code>ecs-init</code> package which will update the agent.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/agent-update-ecs-ami.html">Updating
            the Amazon ECS container agent</a> in the <i>Amazon Elastic Container Service Developer
            Guide</i>.
            </para>
             </note> 
            <para>
            The <code>UpdateContainerAgent</code> API requires an Amazon ECS-optimized AMI or
            Amazon Linux AMI with the <code>ecs-init</code> service installed and running. For
            help updating the Amazon ECS container agent on other operating systems, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-update.html#manually_update_agent">Manually
            updating the Amazon ECS container agent</a> in the <i>Amazon Elastic Container Service
            Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateContainerAgent service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateContainerAgent service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.MissingVersionException">
            Amazon ECS is unable to determine the current version of the Amazon ECS container
            agent on the container instance and does not have enough information to proceed with
            an update. This could be because the agent running on the container instance is an
            older or custom version that does not use our version information.
            </exception>
            <exception cref="T:Amazon.ECS.Model.NoUpdateAvailableException">
            There is no update available for this Amazon ECS container agent. This could be because
            the agent is already running the latest version, or it is so old that there is no
            update path to the current version.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UpdateInProgressException">
            There is already a current Amazon ECS container agent update in progress on the specified
            container instance. If the container agent becomes disconnected while it is in a transitional
            stage, such as <code>PENDING</code> or <code>STAGING</code>, the update process can
            get stuck in that state. However, when the agent reconnects, it resumes where it stopped
            previously.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/UpdateContainerAgent">REST API Reference for UpdateContainerAgent Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.UpdateContainerInstancesState(Amazon.ECS.Model.UpdateContainerInstancesStateRequest)">
            <summary>
            Modifies the status of an Amazon ECS container instance.
            
             
            <para>
            Once a container instance has reached an <code>ACTIVE</code> state, you can change
            the status of a container instance to <code>DRAINING</code> to manually remove an
            instance from a cluster, for example to perform system updates, update the Docker
            daemon, or scale down the cluster size.
            </para>
             <important> 
            <para>
            A container instance cannot be changed to <code>DRAINING</code> until it has reached
            an <code>ACTIVE</code> status. If the instance is in any other status, an error will
            be received.
            </para>
             </important> 
            <para>
            When you set a container instance to <code>DRAINING</code>, Amazon ECS prevents new
            tasks from being scheduled for placement on the container instance and replacement
            service tasks are started on other container instances in the cluster if the resources
            are available. Service tasks on the container instance that are in the <code>PENDING</code>
            state are stopped immediately.
            </para>
             
            <para>
            Service tasks on the container instance that are in the <code>RUNNING</code> state
            are stopped and replaced according to the service's deployment configuration parameters,
            <code>minimumHealthyPercent</code> and <code>maximumPercent</code>. You can change
            the deployment configuration of your service using <a>UpdateService</a>.
            </para>
             <ul> <li> 
            <para>
            If <code>minimumHealthyPercent</code> is below 100%, the scheduler can ignore <code>desiredCount</code>
            temporarily during task replacement. For example, <code>desiredCount</code> is four
            tasks, a minimum of 50% allows the scheduler to stop two existing tasks before starting
            two new tasks. If the minimum is 100%, the service scheduler can't remove existing
            tasks until the replacement tasks are considered healthy. Tasks for services that
            do not use a load balancer are considered healthy if they are in the <code>RUNNING</code>
            state. Tasks for services that use a load balancer are considered healthy if they
            are in the <code>RUNNING</code> state and the container instance they are hosted on
            is reported as healthy by the load balancer.
            </para>
             </li> <li> 
            <para>
            The <code>maximumPercent</code> parameter represents an upper limit on the number
            of running tasks during task replacement, which enables you to define the replacement
            batch size. For example, if <code>desiredCount</code> is four tasks, a maximum of
            200% starts four new tasks before stopping the four tasks to be drained, provided
            that the cluster resources required to do this are available. If the maximum is 100%,
            then replacement tasks can't start until the draining tasks have stopped.
            </para>
             </li> </ul> 
            <para>
            Any <code>PENDING</code> or <code>RUNNING</code> tasks that do not belong to a service
            are not affected. You must wait for them to finish or stop them manually.
            </para>
             
            <para>
            A container instance has completed draining when it has no more <code>RUNNING</code>
            tasks. You can verify this using <a>ListTasks</a>.
            </para>
             
            <para>
            When a container instance has been drained, you can set a container instance to <code>ACTIVE</code>
            status and once it has reached that status the Amazon ECS scheduler can begin scheduling
            tasks on the instance again.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateContainerInstancesState service method.</param>
            
            <returns>The response from the UpdateContainerInstancesState service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/UpdateContainerInstancesState">REST API Reference for UpdateContainerInstancesState Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.UpdateContainerInstancesStateAsync(Amazon.ECS.Model.UpdateContainerInstancesStateRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies the status of an Amazon ECS container instance.
            
             
            <para>
            Once a container instance has reached an <code>ACTIVE</code> state, you can change
            the status of a container instance to <code>DRAINING</code> to manually remove an
            instance from a cluster, for example to perform system updates, update the Docker
            daemon, or scale down the cluster size.
            </para>
             <important> 
            <para>
            A container instance cannot be changed to <code>DRAINING</code> until it has reached
            an <code>ACTIVE</code> status. If the instance is in any other status, an error will
            be received.
            </para>
             </important> 
            <para>
            When you set a container instance to <code>DRAINING</code>, Amazon ECS prevents new
            tasks from being scheduled for placement on the container instance and replacement
            service tasks are started on other container instances in the cluster if the resources
            are available. Service tasks on the container instance that are in the <code>PENDING</code>
            state are stopped immediately.
            </para>
             
            <para>
            Service tasks on the container instance that are in the <code>RUNNING</code> state
            are stopped and replaced according to the service's deployment configuration parameters,
            <code>minimumHealthyPercent</code> and <code>maximumPercent</code>. You can change
            the deployment configuration of your service using <a>UpdateService</a>.
            </para>
             <ul> <li> 
            <para>
            If <code>minimumHealthyPercent</code> is below 100%, the scheduler can ignore <code>desiredCount</code>
            temporarily during task replacement. For example, <code>desiredCount</code> is four
            tasks, a minimum of 50% allows the scheduler to stop two existing tasks before starting
            two new tasks. If the minimum is 100%, the service scheduler can't remove existing
            tasks until the replacement tasks are considered healthy. Tasks for services that
            do not use a load balancer are considered healthy if they are in the <code>RUNNING</code>
            state. Tasks for services that use a load balancer are considered healthy if they
            are in the <code>RUNNING</code> state and the container instance they are hosted on
            is reported as healthy by the load balancer.
            </para>
             </li> <li> 
            <para>
            The <code>maximumPercent</code> parameter represents an upper limit on the number
            of running tasks during task replacement, which enables you to define the replacement
            batch size. For example, if <code>desiredCount</code> is four tasks, a maximum of
            200% starts four new tasks before stopping the four tasks to be drained, provided
            that the cluster resources required to do this are available. If the maximum is 100%,
            then replacement tasks can't start until the draining tasks have stopped.
            </para>
             </li> </ul> 
            <para>
            Any <code>PENDING</code> or <code>RUNNING</code> tasks that do not belong to a service
            are not affected. You must wait for them to finish or stop them manually.
            </para>
             
            <para>
            A container instance has completed draining when it has no more <code>RUNNING</code>
            tasks. You can verify this using <a>ListTasks</a>.
            </para>
             
            <para>
            When a container instance has been drained, you can set a container instance to <code>ACTIVE</code>
            status and once it has reached that status the Amazon ECS scheduler can begin scheduling
            tasks on the instance again.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateContainerInstancesState service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateContainerInstancesState service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/UpdateContainerInstancesState">REST API Reference for UpdateContainerInstancesState Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.UpdateService(Amazon.ECS.Model.UpdateServiceRequest)">
            <summary>
            <important> 
            <para>
            Updating the task placement strategies and constraints on an Amazon ECS service remains
            in preview and is a Beta Service as defined by and subject to the Beta Service Participation
            Service Terms located at <a href="https://aws.amazon.com/service-terms">https://aws.amazon.com/service-terms</a>
            ("Beta Terms"). These Beta Terms apply to your participation in this preview.
            </para>
             </important> 
            <para>
            Modifies the parameters of a service.
            </para>
             
            <para>
            For services using the rolling update (<code>ECS</code>) deployment controller, the
            desired count, deployment configuration, network configuration, task placement constraints
            and strategies, or task definition used can be updated.
            </para>
             
            <para>
            For services using the blue/green (<code>CODE_DEPLOY</code>) deployment controller,
            only the desired count, deployment configuration, task placement constraints and strategies,
            and health check grace period can be updated using this API. If the network configuration,
            platform version, or task definition need to be updated, a new CodeDeploy deployment
            should be created. For more information, see <a href="https://docs.aws.amazon.com/codedeploy/latest/APIReference/API_CreateDeployment.html">CreateDeployment</a>
            in the <i>CodeDeploy API Reference</i>.
            </para>
             
            <para>
            For services using an external deployment controller, you can update only the desired
            count, task placement constraints and strategies, and health check grace period using
            this API. If the launch type, load balancer, network configuration, platform version,
            or task definition need to be updated, you should create a new task set. For more
            information, see <a>CreateTaskSet</a>.
            </para>
             
            <para>
            You can add to or subtract from the number of instantiations of a task definition
            in a service by specifying the cluster that the service is running in and a new <code>desiredCount</code>
            parameter.
            </para>
             
            <para>
            If you have updated the Docker image of your application, you can create a new task
            definition with that image and deploy it to your service. The service scheduler uses
            the minimum healthy percent and maximum percent parameters (in the service's deployment
            configuration) to determine the deployment strategy.
            </para>
             <note> 
            <para>
            If your updated Docker image uses the same tag as what is in the existing task definition
            for your service (for example, <code>my_image:latest</code>), you do not need to create
            a new revision of your task definition. You can update the service using the <code>forceNewDeployment</code>
            option. The new tasks launched by the deployment pull the current image/tag combination
            from your repository when they start.
            </para>
             </note> 
            <para>
            You can also update the deployment configuration of a service. When a deployment is
            triggered by updating the task definition of a service, the service scheduler uses
            the deployment configuration parameters, <code>minimumHealthyPercent</code> and <code>maximumPercent</code>,
            to determine the deployment strategy.
            </para>
             <ul> <li> 
            <para>
            If <code>minimumHealthyPercent</code> is below 100%, the scheduler can ignore <code>desiredCount</code>
            temporarily during a deployment. For example, if <code>desiredCount</code> is four
            tasks, a minimum of 50% allows the scheduler to stop two existing tasks before starting
            two new tasks. Tasks for services that do not use a load balancer are considered healthy
            if they are in the <code>RUNNING</code> state. Tasks for services that use a load
            balancer are considered healthy if they are in the <code>RUNNING</code> state and
            the container instance they are hosted on is reported as healthy by the load balancer.
            </para>
             </li> <li> 
            <para>
            The <code>maximumPercent</code> parameter represents an upper limit on the number
            of running tasks during a deployment, which enables you to define the deployment batch
            size. For example, if <code>desiredCount</code> is four tasks, a maximum of 200% starts
            four new tasks before stopping the four older tasks (provided that the cluster resources
            required to do this are available).
            </para>
             </li> </ul> 
            <para>
            When <a>UpdateService</a> stops a task during a deployment, the equivalent of <code>docker
            stop</code> is issued to the containers running in the task. This results in a <code>SIGTERM</code>
            and a 30-second timeout, after which <code>SIGKILL</code> is sent and the containers
            are forcibly stopped. If the container handles the <code>SIGTERM</code> gracefully
            and exits within 30 seconds from receiving it, no <code>SIGKILL</code> is sent.
            </para>
             
            <para>
            When the service scheduler launches new tasks, it determines task placement in your
            cluster with the following logic:
            </para>
             <ul> <li> 
            <para>
            Determine which of the container instances in your cluster can support your service's
            task definition (for example, they have the required CPU, memory, ports, and container
            instance attributes).
            </para>
             </li> <li> 
            <para>
            By default, the service scheduler attempts to balance tasks across Availability Zones
            in this manner (although you can choose a different placement strategy):
            </para>
             <ul> <li> 
            <para>
            Sort the valid container instances by the fewest number of running tasks for this
            service in the same Availability Zone as the instance. For example, if zone A has
            one running service task and zones B and C each have zero, valid container instances
            in either zone B or C are considered optimal for placement.
            </para>
             </li> <li> 
            <para>
            Place the new service task on a valid container instance in an optimal Availability
            Zone (based on the previous steps), favoring container instances with the fewest number
            of running tasks for this service.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            When the service scheduler stops running tasks, it attempts to maintain balance across
            the Availability Zones in your cluster using the following logic: 
            </para>
             <ul> <li> 
            <para>
            Sort the container instances by the largest number of running tasks for this service
            in the same Availability Zone as the instance. For example, if zone A has one running
            service task and zones B and C each have two, container instances in either zone B
            or C are considered optimal for termination.
            </para>
             </li> <li> 
            <para>
            Stop the task on a container instance in an optimal Availability Zone (based on the
            previous steps), favoring container instances with the largest number of running tasks
            for this service.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateService service method.</param>
            
            <returns>The response from the UpdateService service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AccessDeniedException">
            You do not have authorization to perform the requested action.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.PlatformTaskDefinitionIncompatibilityException">
            The specified platform version does not satisfy the task definition's required capabilities.
            </exception>
            <exception cref="T:Amazon.ECS.Model.PlatformUnknownException">
            The specified platform version does not exist.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotActiveException">
            The specified service is not active. You can't update a service that is inactive.
            If you have previously deleted a service, you can re-create it with <a>CreateService</a>.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotFoundException">
            The specified service could not be found. You can view your available services with
            <a>ListServices</a>. Amazon ECS services are cluster-specific and Region-specific.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/UpdateService">REST API Reference for UpdateService Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.UpdateServiceAsync(Amazon.ECS.Model.UpdateServiceRequest,System.Threading.CancellationToken)">
            <summary>
            <important> 
            <para>
            Updating the task placement strategies and constraints on an Amazon ECS service remains
            in preview and is a Beta Service as defined by and subject to the Beta Service Participation
            Service Terms located at <a href="https://aws.amazon.com/service-terms">https://aws.amazon.com/service-terms</a>
            ("Beta Terms"). These Beta Terms apply to your participation in this preview.
            </para>
             </important> 
            <para>
            Modifies the parameters of a service.
            </para>
             
            <para>
            For services using the rolling update (<code>ECS</code>) deployment controller, the
            desired count, deployment configuration, network configuration, task placement constraints
            and strategies, or task definition used can be updated.
            </para>
             
            <para>
            For services using the blue/green (<code>CODE_DEPLOY</code>) deployment controller,
            only the desired count, deployment configuration, task placement constraints and strategies,
            and health check grace period can be updated using this API. If the network configuration,
            platform version, or task definition need to be updated, a new CodeDeploy deployment
            should be created. For more information, see <a href="https://docs.aws.amazon.com/codedeploy/latest/APIReference/API_CreateDeployment.html">CreateDeployment</a>
            in the <i>CodeDeploy API Reference</i>.
            </para>
             
            <para>
            For services using an external deployment controller, you can update only the desired
            count, task placement constraints and strategies, and health check grace period using
            this API. If the launch type, load balancer, network configuration, platform version,
            or task definition need to be updated, you should create a new task set. For more
            information, see <a>CreateTaskSet</a>.
            </para>
             
            <para>
            You can add to or subtract from the number of instantiations of a task definition
            in a service by specifying the cluster that the service is running in and a new <code>desiredCount</code>
            parameter.
            </para>
             
            <para>
            If you have updated the Docker image of your application, you can create a new task
            definition with that image and deploy it to your service. The service scheduler uses
            the minimum healthy percent and maximum percent parameters (in the service's deployment
            configuration) to determine the deployment strategy.
            </para>
             <note> 
            <para>
            If your updated Docker image uses the same tag as what is in the existing task definition
            for your service (for example, <code>my_image:latest</code>), you do not need to create
            a new revision of your task definition. You can update the service using the <code>forceNewDeployment</code>
            option. The new tasks launched by the deployment pull the current image/tag combination
            from your repository when they start.
            </para>
             </note> 
            <para>
            You can also update the deployment configuration of a service. When a deployment is
            triggered by updating the task definition of a service, the service scheduler uses
            the deployment configuration parameters, <code>minimumHealthyPercent</code> and <code>maximumPercent</code>,
            to determine the deployment strategy.
            </para>
             <ul> <li> 
            <para>
            If <code>minimumHealthyPercent</code> is below 100%, the scheduler can ignore <code>desiredCount</code>
            temporarily during a deployment. For example, if <code>desiredCount</code> is four
            tasks, a minimum of 50% allows the scheduler to stop two existing tasks before starting
            two new tasks. Tasks for services that do not use a load balancer are considered healthy
            if they are in the <code>RUNNING</code> state. Tasks for services that use a load
            balancer are considered healthy if they are in the <code>RUNNING</code> state and
            the container instance they are hosted on is reported as healthy by the load balancer.
            </para>
             </li> <li> 
            <para>
            The <code>maximumPercent</code> parameter represents an upper limit on the number
            of running tasks during a deployment, which enables you to define the deployment batch
            size. For example, if <code>desiredCount</code> is four tasks, a maximum of 200% starts
            four new tasks before stopping the four older tasks (provided that the cluster resources
            required to do this are available).
            </para>
             </li> </ul> 
            <para>
            When <a>UpdateService</a> stops a task during a deployment, the equivalent of <code>docker
            stop</code> is issued to the containers running in the task. This results in a <code>SIGTERM</code>
            and a 30-second timeout, after which <code>SIGKILL</code> is sent and the containers
            are forcibly stopped. If the container handles the <code>SIGTERM</code> gracefully
            and exits within 30 seconds from receiving it, no <code>SIGKILL</code> is sent.
            </para>
             
            <para>
            When the service scheduler launches new tasks, it determines task placement in your
            cluster with the following logic:
            </para>
             <ul> <li> 
            <para>
            Determine which of the container instances in your cluster can support your service's
            task definition (for example, they have the required CPU, memory, ports, and container
            instance attributes).
            </para>
             </li> <li> 
            <para>
            By default, the service scheduler attempts to balance tasks across Availability Zones
            in this manner (although you can choose a different placement strategy):
            </para>
             <ul> <li> 
            <para>
            Sort the valid container instances by the fewest number of running tasks for this
            service in the same Availability Zone as the instance. For example, if zone A has
            one running service task and zones B and C each have zero, valid container instances
            in either zone B or C are considered optimal for placement.
            </para>
             </li> <li> 
            <para>
            Place the new service task on a valid container instance in an optimal Availability
            Zone (based on the previous steps), favoring container instances with the fewest number
            of running tasks for this service.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            When the service scheduler stops running tasks, it attempts to maintain balance across
            the Availability Zones in your cluster using the following logic: 
            </para>
             <ul> <li> 
            <para>
            Sort the container instances by the largest number of running tasks for this service
            in the same Availability Zone as the instance. For example, if zone A has one running
            service task and zones B and C each have two, container instances in either zone B
            or C are considered optimal for termination.
            </para>
             </li> <li> 
            <para>
            Stop the task on a container instance in an optimal Availability Zone (based on the
            previous steps), favoring container instances with the largest number of running tasks
            for this service.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateService service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateService service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AccessDeniedException">
            You do not have authorization to perform the requested action.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.PlatformTaskDefinitionIncompatibilityException">
            The specified platform version does not satisfy the task definition's required capabilities.
            </exception>
            <exception cref="T:Amazon.ECS.Model.PlatformUnknownException">
            The specified platform version does not exist.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotActiveException">
            The specified service is not active. You can't update a service that is inactive.
            If you have previously deleted a service, you can re-create it with <a>CreateService</a>.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotFoundException">
            The specified service could not be found. You can view your available services with
            <a>ListServices</a>. Amazon ECS services are cluster-specific and Region-specific.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/UpdateService">REST API Reference for UpdateService Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.UpdateServicePrimaryTaskSet(Amazon.ECS.Model.UpdateServicePrimaryTaskSetRequest)">
            <summary>
            Modifies which task set in a service is the primary task set. Any parameters that
            are updated on the primary task set in a service will transition to the service. This
            is used when a service uses the <code>EXTERNAL</code> deployment controller type.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-types.html">Amazon
            ECS Deployment Types</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateServicePrimaryTaskSet service method.</param>
            
            <returns>The response from the UpdateServicePrimaryTaskSet service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AccessDeniedException">
            You do not have authorization to perform the requested action.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotActiveException">
            The specified service is not active. You can't update a service that is inactive.
            If you have previously deleted a service, you can re-create it with <a>CreateService</a>.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotFoundException">
            The specified service could not be found. You can view your available services with
            <a>ListServices</a>. Amazon ECS services are cluster-specific and Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.TaskSetNotFoundException">
            The specified task set could not be found. You can view your available task sets with
            <a>DescribeTaskSets</a>. Task sets are specific to each cluster, service and Region.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UnsupportedFeatureException">
            The specified task is not supported in this Region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/UpdateServicePrimaryTaskSet">REST API Reference for UpdateServicePrimaryTaskSet Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.UpdateServicePrimaryTaskSetAsync(Amazon.ECS.Model.UpdateServicePrimaryTaskSetRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies which task set in a service is the primary task set. Any parameters that
            are updated on the primary task set in a service will transition to the service. This
            is used when a service uses the <code>EXTERNAL</code> deployment controller type.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-types.html">Amazon
            ECS Deployment Types</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateServicePrimaryTaskSet service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateServicePrimaryTaskSet service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AccessDeniedException">
            You do not have authorization to perform the requested action.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotActiveException">
            The specified service is not active. You can't update a service that is inactive.
            If you have previously deleted a service, you can re-create it with <a>CreateService</a>.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotFoundException">
            The specified service could not be found. You can view your available services with
            <a>ListServices</a>. Amazon ECS services are cluster-specific and Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.TaskSetNotFoundException">
            The specified task set could not be found. You can view your available task sets with
            <a>DescribeTaskSets</a>. Task sets are specific to each cluster, service and Region.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UnsupportedFeatureException">
            The specified task is not supported in this Region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/UpdateServicePrimaryTaskSet">REST API Reference for UpdateServicePrimaryTaskSet Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.UpdateTaskSet(Amazon.ECS.Model.UpdateTaskSetRequest)">
            <summary>
            Modifies a task set. This is used when a service uses the <code>EXTERNAL</code> deployment
            controller type. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-types.html">Amazon
            ECS Deployment Types</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateTaskSet service method.</param>
            
            <returns>The response from the UpdateTaskSet service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AccessDeniedException">
            You do not have authorization to perform the requested action.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotActiveException">
            The specified service is not active. You can't update a service that is inactive.
            If you have previously deleted a service, you can re-create it with <a>CreateService</a>.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotFoundException">
            The specified service could not be found. You can view your available services with
            <a>ListServices</a>. Amazon ECS services are cluster-specific and Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.TaskSetNotFoundException">
            The specified task set could not be found. You can view your available task sets with
            <a>DescribeTaskSets</a>. Task sets are specific to each cluster, service and Region.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UnsupportedFeatureException">
            The specified task is not supported in this Region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/UpdateTaskSet">REST API Reference for UpdateTaskSet Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.UpdateTaskSetAsync(Amazon.ECS.Model.UpdateTaskSetRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies a task set. This is used when a service uses the <code>EXTERNAL</code> deployment
            controller type. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-types.html">Amazon
            ECS Deployment Types</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateTaskSet service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateTaskSet service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AccessDeniedException">
            You do not have authorization to perform the requested action.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotActiveException">
            The specified service is not active. You can't update a service that is inactive.
            If you have previously deleted a service, you can re-create it with <a>CreateService</a>.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotFoundException">
            The specified service could not be found. You can view your available services with
            <a>ListServices</a>. Amazon ECS services are cluster-specific and Region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.TaskSetNotFoundException">
            The specified task set could not be found. You can view your available task sets with
            <a>DescribeTaskSets</a>. Task sets are specific to each cluster, service and Region.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UnsupportedFeatureException">
            The specified task is not supported in this Region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/UpdateTaskSet">REST API Reference for UpdateTaskSet Operation</seealso>
        </member>
    </members>
</doc>
