<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.EventBridge</name>
    </assembly>
    <members>
        <member name="T:Amazon.EventBridge.AmazonEventBridgeConfig">
            <summary>
            Configuration for accessing Amazon EventBridge service
            </summary>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.AmazonEventBridgeConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.AmazonEventBridgeConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.AmazonEventBridgeConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.AmazonEventBridgeException">
            <summary>
             Common exception for the EventBridge service.
             </summary>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonEventBridgeException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonEventBridgeException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonEventBridgeException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonEventBridgeException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonEventBridgeException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the AmazonEventBridgeException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.EventBridge.Internal.AmazonEventBridgeMetadata">
            <summary>
            Service metadata for  Amazon EventBridge service
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Internal.AmazonEventBridgeMetadata.ServiceId">
            <summary>
            Gets the value of the Service Id.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Internal.AmazonEventBridgeMetadata.OperationNameMapping">
            <summary>
            Gets the dictionary that gives mapping of renamed operations
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.ActivateEventSourceRequest">
            <summary>
            Container for the parameters to the ActivateEventSource operation.
            Activates a partner event source that has been deactivated. Once activated, your matching
            event bus will start receiving events from the event source.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ActivateEventSourceRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the partner event source to activate.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.ActivateEventSourceResponse">
            <summary>
            This is the response object from the ActivateEventSource operation.
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.ApiDestination">
            <summary>
            Contains details about an API destination.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ApiDestination.ApiDestinationArn">
            <summary>
            Gets and sets the property ApiDestinationArn. 
            <para>
            The ARN of the API destination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ApiDestination.ApiDestinationState">
            <summary>
            Gets and sets the property ApiDestinationState. 
            <para>
            The state of the API destination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ApiDestination.ConnectionArn">
            <summary>
            Gets and sets the property ConnectionArn. 
            <para>
            The ARN of the connection specified for the API destination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ApiDestination.CreationTime">
            <summary>
            Gets and sets the property CreationTime. 
            <para>
            A time stamp for the time that the API destination was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ApiDestination.HttpMethod">
            <summary>
            Gets and sets the property HttpMethod. 
            <para>
            The method to use to connect to the HTTP endpoint.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ApiDestination.InvocationEndpoint">
            <summary>
            Gets and sets the property InvocationEndpoint. 
            <para>
            The URL to the endpoint for the API destination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ApiDestination.InvocationRateLimitPerSecond">
            <summary>
            Gets and sets the property InvocationRateLimitPerSecond. 
            <para>
            The maximum number of invocations per second to send to the HTTP endpoint.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ApiDestination.LastModifiedTime">
            <summary>
            Gets and sets the property LastModifiedTime. 
            <para>
            A time stamp for the time that the API destination was last modified.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ApiDestination.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the API destination.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.Archive">
            <summary>
            An <code>Archive</code> object that contains details about an archive.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.Archive.ArchiveName">
            <summary>
            Gets and sets the property ArchiveName. 
            <para>
            The name of the archive.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.Archive.CreationTime">
            <summary>
            Gets and sets the property CreationTime. 
            <para>
            The time stamp for the time that the archive was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.Archive.EventCount">
            <summary>
            Gets and sets the property EventCount. 
            <para>
            The number of events in the archive.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.Archive.EventSourceArn">
            <summary>
            Gets and sets the property EventSourceArn. 
            <para>
            The ARN of the event bus associated with the archive. Only events from this event
            bus are sent to the archive.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.Archive.RetentionDays">
            <summary>
            Gets and sets the property RetentionDays. 
            <para>
            The number of days to retain events in the archive before they are deleted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.Archive.SizeBytes">
            <summary>
            Gets and sets the property SizeBytes. 
            <para>
            The size of the archive, in bytes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.Archive.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The current state of the archive.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.Archive.StateReason">
            <summary>
            Gets and sets the property StateReason. 
            <para>
            A description for the reason that the archive is in the current state.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.AwsVpcConfiguration">
            <summary>
            This structure specifies the VPC subnets and security groups for the task, and whether
            a public IP address is to be used. This structure is relevant only for ECS tasks that
            use the <code>awsvpc</code> network mode.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.AwsVpcConfiguration.AssignPublicIp">
            <summary>
            Gets and sets the property AssignPublicIp. 
            <para>
            Specifies whether the task's elastic network interface receives a public IP address.
            You can specify <code>ENABLED</code> only when <code>LaunchType</code> in <code>EcsParameters</code>
            is set to <code>FARGATE</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.AwsVpcConfiguration.SecurityGroups">
            <summary>
            Gets and sets the property SecurityGroups. 
            <para>
            Specifies the security groups associated with the task. These security groups must
            all be in the same VPC. You can specify as many as five security groups. If you do
            not specify a security group, the default security group for the VPC is used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.AwsVpcConfiguration.Subnets">
            <summary>
            Gets and sets the property Subnets. 
            <para>
            Specifies the subnets associated with the task. These subnets must all be in the same
            VPC. You can specify as many as 16 subnets.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.BatchArrayProperties">
            <summary>
            The array properties for the submitted job, such as the size of the array. The array
            size can be between 2 and 10,000. If you specify array properties for a job, it becomes
            an array job. This parameter is used only if the target is an Batch job.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.BatchArrayProperties.Size">
            <summary>
            Gets and sets the property Size. 
            <para>
            The size of the array, if this is an array batch job. Valid values are integers between
            2 and 10,000.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.BatchParameters">
            <summary>
            The custom parameters to be used when the target is an Batch job.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.BatchParameters.ArrayProperties">
            <summary>
            Gets and sets the property ArrayProperties. 
            <para>
            The array properties for the submitted job, such as the size of the array. The array
            size can be between 2 and 10,000. If you specify array properties for a job, it becomes
            an array job. This parameter is used only if the target is an Batch job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.BatchParameters.JobDefinition">
            <summary>
            Gets and sets the property JobDefinition. 
            <para>
            The ARN or name of the job definition to use if the event target is an Batch job.
            This job definition must already exist.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.BatchParameters.JobName">
            <summary>
            Gets and sets the property JobName. 
            <para>
            The name to use for this execution of the job, if the target is an Batch job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.BatchParameters.RetryStrategy">
            <summary>
            Gets and sets the property RetryStrategy. 
            <para>
            The retry strategy to use for failed jobs, if the target is an Batch job. The retry
            strategy is the number of times to retry the failed job execution. Valid values are
            1–10. When you specify a retry strategy here, it overrides the retry strategy defined
            in the job definition.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.BatchRetryStrategy">
            <summary>
            The retry strategy to use for failed jobs, if the target is an Batch job. If you specify
            a retry strategy here, it overrides the retry strategy defined in the job definition.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.BatchRetryStrategy.Attempts">
            <summary>
            Gets and sets the property Attempts. 
            <para>
            The number of times to attempt to retry, if the job fails. Valid values are 1–10.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.CancelReplayRequest">
            <summary>
            Container for the parameters to the CancelReplay operation.
            Cancels the specified replay.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.CancelReplayRequest.ReplayName">
            <summary>
            Gets and sets the property ReplayName. 
            <para>
            The name of the replay to cancel.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.CancelReplayResponse">
            <summary>
            This is the response object from the CancelReplay operation.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.CancelReplayResponse.ReplayArn">
            <summary>
            Gets and sets the property ReplayArn. 
            <para>
            The ARN of the replay to cancel.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.CancelReplayResponse.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The current state of the replay.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.CancelReplayResponse.StateReason">
            <summary>
            Gets and sets the property StateReason. 
            <para>
            The reason that the replay is in the current state.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.CapacityProviderStrategyItem">
            <summary>
            The details of a capacity provider strategy. To learn more, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_CapacityProviderStrategyItem.html">CapacityProviderStrategyItem</a>
            in the Amazon ECS API Reference.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.CapacityProviderStrategyItem.Base">
            <summary>
            Gets and sets the property Base. 
            <para>
            The base value designates how many tasks, at a minimum, to run on the specified capacity
            provider. Only one capacity provider in a capacity provider strategy can have a base
            defined. If no value is specified, the default value of 0 is used. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.CapacityProviderStrategyItem.CapacityProvider">
            <summary>
            Gets and sets the property CapacityProvider. 
            <para>
            The short name of the capacity provider.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.CapacityProviderStrategyItem.Weight">
            <summary>
            Gets and sets the property Weight. 
            <para>
            The weight value designates the relative percentage of the total number of tasks launched
            that should use the specified capacity provider. The weight value is taken into consideration
            after the base value, if defined, is satisfied.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            <summary>
            There is concurrent modification on a rule, target, archive, or replay.
            </summary>
        </member>
        <member name="M:Amazon.EventBridge.Model.ConcurrentModificationException.#ctor(System.String)">
            <summary>
            Constructs a new ConcurrentModificationException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.EventBridge.Model.ConcurrentModificationException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ConcurrentModificationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EventBridge.Model.ConcurrentModificationException.#ctor(System.Exception)">
            <summary>
            Construct instance of ConcurrentModificationException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EventBridge.Model.ConcurrentModificationException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConcurrentModificationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.EventBridge.Model.ConcurrentModificationException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConcurrentModificationException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.EventBridge.Model.ConcurrentModificationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ConcurrentModificationException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.EventBridge.Model.ConcurrentModificationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.EventBridge.Model.Condition">
            <summary>
            A JSON string which you can use to limit the event bus permissions you are granting
            to only accounts that fulfill the condition. Currently, the only supported condition
            is membership in a certain Amazon Web Services organization. The string must contain
            <code>Type</code>, <code>Key</code>, and <code>Value</code> fields. The <code>Value</code>
            field specifies the ID of the Amazon Web Services organization. Following is an example
            value for <code>Condition</code>:
            
             
            <para>
             <code>'{"Type" : "StringEquals", "Key": "aws:PrincipalOrgID", "Value": "o-1234567890"}'</code>
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.Condition.Key">
            <summary>
            Gets and sets the property Key. 
            <para>
            Specifies the key for the condition. Currently the only supported key is <code>aws:PrincipalOrgID</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.Condition.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            Specifies the type of condition. Currently the only supported value is <code>StringEquals</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.Condition.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            Specifies the value for the key. Currently, this must be the ID of the organization.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.Connection">
            <summary>
            Contains information about a connection.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.Connection.AuthorizationType">
            <summary>
            Gets and sets the property AuthorizationType. 
            <para>
            The authorization type specified for the connection.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.Connection.ConnectionArn">
            <summary>
            Gets and sets the property ConnectionArn. 
            <para>
            The ARN of the connection.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.Connection.ConnectionState">
            <summary>
            Gets and sets the property ConnectionState. 
            <para>
            The state of the connection.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.Connection.CreationTime">
            <summary>
            Gets and sets the property CreationTime. 
            <para>
            A time stamp for the time that the connection was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.Connection.LastAuthorizedTime">
            <summary>
            Gets and sets the property LastAuthorizedTime. 
            <para>
            A time stamp for the time that the connection was last authorized.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.Connection.LastModifiedTime">
            <summary>
            Gets and sets the property LastModifiedTime. 
            <para>
            A time stamp for the time that the connection was last modified.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.Connection.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the connection.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.Connection.StateReason">
            <summary>
            Gets and sets the property StateReason. 
            <para>
            The reason that the connection is in the connection state.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.ConnectionApiKeyAuthResponseParameters">
            <summary>
            Contains the authorization parameters for the connection if API Key is specified as
            the authorization type.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ConnectionApiKeyAuthResponseParameters.ApiKeyName">
            <summary>
            Gets and sets the property ApiKeyName. 
            <para>
            The name of the header to use for the <code>APIKeyValue</code> used for authorization.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.ConnectionAuthResponseParameters">
            <summary>
            Contains the authorization parameters to use for the connection.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ConnectionAuthResponseParameters.ApiKeyAuthParameters">
            <summary>
            Gets and sets the property ApiKeyAuthParameters. 
            <para>
            The API Key parameters to use for authorization.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ConnectionAuthResponseParameters.BasicAuthParameters">
            <summary>
            Gets and sets the property BasicAuthParameters. 
            <para>
            The authorization parameters for Basic authorization.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ConnectionAuthResponseParameters.InvocationHttpParameters">
            <summary>
            Gets and sets the property InvocationHttpParameters. 
            <para>
            Additional parameters for the connection that are passed through with every invocation
            to the HTTP endpoint.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ConnectionAuthResponseParameters.OAuthParameters">
            <summary>
            Gets and sets the property OAuthParameters. 
            <para>
            The OAuth parameters to use for authorization.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.ConnectionBasicAuthResponseParameters">
            <summary>
            Contains the authorization parameters for the connection if Basic is specified as
            the authorization type.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ConnectionBasicAuthResponseParameters.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The user name to use for Basic authorization.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.ConnectionBodyParameter">
            <summary>
            Additional parameter included in the body. You can include up to 100 additional body
            parameters per request. An event payload cannot exceed 64 KB.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ConnectionBodyParameter.IsValueSecret">
            <summary>
            Gets and sets the property IsValueSecret. 
            <para>
            Specified whether the value is secret.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ConnectionBodyParameter.Key">
            <summary>
            Gets and sets the property Key. 
            <para>
            The key for the parameter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ConnectionBodyParameter.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The value associated with the key.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.ConnectionHeaderParameter">
            <summary>
            Additional parameter included in the header. You can include up to 100 additional
            header parameters per request. An event payload cannot exceed 64 KB.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ConnectionHeaderParameter.IsValueSecret">
            <summary>
            Gets and sets the property IsValueSecret. 
            <para>
            Specified whether the value is a secret.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ConnectionHeaderParameter.Key">
            <summary>
            Gets and sets the property Key. 
            <para>
            The key for the parameter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ConnectionHeaderParameter.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The value associated with the key.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.ConnectionHttpParameters">
            <summary>
            Contains additional parameters for the connection.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ConnectionHttpParameters.BodyParameters">
            <summary>
            Gets and sets the property BodyParameters. 
            <para>
            Contains additional body string parameters for the connection.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ConnectionHttpParameters.HeaderParameters">
            <summary>
            Gets and sets the property HeaderParameters. 
            <para>
            Contains additional header parameters for the connection.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ConnectionHttpParameters.QueryStringParameters">
            <summary>
            Gets and sets the property QueryStringParameters. 
            <para>
            Contains additional query string parameters for the connection.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.ConnectionOAuthClientResponseParameters">
            <summary>
            Contains the client response parameters for the connection when OAuth is specified
            as the authorization type.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ConnectionOAuthClientResponseParameters.ClientID">
            <summary>
            Gets and sets the property ClientID. 
            <para>
            The client ID associated with the response to the connection request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.ConnectionOAuthResponseParameters">
            <summary>
            Contains the response parameters when OAuth is specified as the authorization type.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ConnectionOAuthResponseParameters.AuthorizationEndpoint">
            <summary>
            Gets and sets the property AuthorizationEndpoint. 
            <para>
            The URL to the HTTP endpoint that authorized the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ConnectionOAuthResponseParameters.ClientParameters">
            <summary>
            Gets and sets the property ClientParameters. 
            <para>
            A <code>ConnectionOAuthClientResponseParameters</code> object that contains details
            about the client parameters returned when OAuth is specified as the authorization
            type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ConnectionOAuthResponseParameters.HttpMethod">
            <summary>
            Gets and sets the property HttpMethod. 
            <para>
            The method used to connect to the HTTP endpoint.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ConnectionOAuthResponseParameters.OAuthHttpParameters">
            <summary>
            Gets and sets the property OAuthHttpParameters. 
            <para>
            The additional HTTP parameters used for the OAuth authorization request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.ConnectionQueryStringParameter">
            <summary>
            Additional query string parameter for the connection. You can include up to 100 additional
            query string parameters per request. Each additional parameter counts towards the
            event payload size, which cannot exceed 64 KB.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ConnectionQueryStringParameter.IsValueSecret">
            <summary>
            Gets and sets the property IsValueSecret. 
            <para>
            Specifies whether the value is secret.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ConnectionQueryStringParameter.Key">
            <summary>
            Gets and sets the property Key. 
            <para>
            The key for a query string parameter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ConnectionQueryStringParameter.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The value associated with the key for the query string parameter.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.CreateApiDestinationRequest">
            <summary>
            Container for the parameters to the CreateApiDestination operation.
            Creates an API destination, which is an HTTP invocation endpoint configured as a target
            for events.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.CreateApiDestinationRequest.ConnectionArn">
            <summary>
            Gets and sets the property ConnectionArn. 
            <para>
            The ARN of the connection to use for the API destination. The destination endpoint
            must support the authorization type specified for the connection.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.CreateApiDestinationRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description for the API destination to create.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.CreateApiDestinationRequest.HttpMethod">
            <summary>
            Gets and sets the property HttpMethod. 
            <para>
            The method to use for the request to the HTTP invocation endpoint.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.CreateApiDestinationRequest.InvocationEndpoint">
            <summary>
            Gets and sets the property InvocationEndpoint. 
            <para>
            The URL to the HTTP invocation endpoint for the API destination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.CreateApiDestinationRequest.InvocationRateLimitPerSecond">
            <summary>
            Gets and sets the property InvocationRateLimitPerSecond. 
            <para>
            The maximum number of requests per second to send to the HTTP invocation endpoint.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.CreateApiDestinationRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name for the API destination to create.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.CreateApiDestinationResponse">
            <summary>
            This is the response object from the CreateApiDestination operation.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.CreateApiDestinationResponse.ApiDestinationArn">
            <summary>
            Gets and sets the property ApiDestinationArn. 
            <para>
            The ARN of the API destination that was created by the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.CreateApiDestinationResponse.ApiDestinationState">
            <summary>
            Gets and sets the property ApiDestinationState. 
            <para>
            The state of the API destination that was created by the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.CreateApiDestinationResponse.CreationTime">
            <summary>
            Gets and sets the property CreationTime. 
            <para>
            A time stamp indicating the time that the API destination was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.CreateApiDestinationResponse.LastModifiedTime">
            <summary>
            Gets and sets the property LastModifiedTime. 
            <para>
            A time stamp indicating the time that the API destination was last modified.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.CreateArchiveRequest">
            <summary>
            Container for the parameters to the CreateArchive operation.
            Creates an archive of events with the specified settings. When you create an archive,
            incoming events might not immediately start being sent to the archive. Allow a short
            period of time for changes to take effect. If you do not specify a pattern to filter
            events sent to the archive, all events are sent to the archive except replayed events.
            Replayed events are not sent to an archive.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.CreateArchiveRequest.ArchiveName">
            <summary>
            Gets and sets the property ArchiveName. 
            <para>
            The name for the archive to create.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.CreateArchiveRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description for the archive.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.CreateArchiveRequest.EventPattern">
            <summary>
            Gets and sets the property EventPattern. 
            <para>
            An event pattern to use to filter events sent to the archive.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.CreateArchiveRequest.EventSourceArn">
            <summary>
            Gets and sets the property EventSourceArn. 
            <para>
            The ARN of the event bus that sends events to the archive.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.CreateArchiveRequest.RetentionDays">
            <summary>
            Gets and sets the property RetentionDays. 
            <para>
            The number of days to retain events for. Default value is 0. If set to 0, events are
            retained indefinitely
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.CreateArchiveResponse">
            <summary>
            This is the response object from the CreateArchive operation.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.CreateArchiveResponse.ArchiveArn">
            <summary>
            Gets and sets the property ArchiveArn. 
            <para>
            The ARN of the archive that was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.CreateArchiveResponse.CreationTime">
            <summary>
            Gets and sets the property CreationTime. 
            <para>
            The time at which the archive was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.CreateArchiveResponse.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The state of the archive that was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.CreateArchiveResponse.StateReason">
            <summary>
            Gets and sets the property StateReason. 
            <para>
            The reason that the archive is in the state.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.CreateConnectionApiKeyAuthRequestParameters">
            <summary>
            Contains the API key authorization parameters for the connection.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.CreateConnectionApiKeyAuthRequestParameters.ApiKeyName">
            <summary>
            Gets and sets the property ApiKeyName. 
            <para>
            The name of the API key to use for authorization.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.CreateConnectionApiKeyAuthRequestParameters.ApiKeyValue">
            <summary>
            Gets and sets the property ApiKeyValue. 
            <para>
            The value for the API key to use for authorization.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.CreateConnectionAuthRequestParameters">
            <summary>
            Contains the authorization parameters for the connection.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.CreateConnectionAuthRequestParameters.ApiKeyAuthParameters">
            <summary>
            Gets and sets the property ApiKeyAuthParameters. 
            <para>
            A <code>CreateConnectionApiKeyAuthRequestParameters</code> object that contains the
            API key authorization parameters to use for the connection.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.CreateConnectionAuthRequestParameters.BasicAuthParameters">
            <summary>
            Gets and sets the property BasicAuthParameters. 
            <para>
            A <code>CreateConnectionBasicAuthRequestParameters</code> object that contains the
            Basic authorization parameters to use for the connection.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.CreateConnectionAuthRequestParameters.InvocationHttpParameters">
            <summary>
            Gets and sets the property InvocationHttpParameters. 
            <para>
            A <code>ConnectionHttpParameters</code> object that contains the API key authorization
            parameters to use for the connection. Note that if you include additional parameters
            for the target of a rule via <code>HttpParameters</code>, including query strings,
            the parameters added for the connection take precedence.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.CreateConnectionAuthRequestParameters.OAuthParameters">
            <summary>
            Gets and sets the property OAuthParameters. 
            <para>
            A <code>CreateConnectionOAuthRequestParameters</code> object that contains the OAuth
            authorization parameters to use for the connection.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.CreateConnectionBasicAuthRequestParameters">
            <summary>
            Contains the Basic authorization parameters to use for the connection.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.CreateConnectionBasicAuthRequestParameters.Password">
            <summary>
            Gets and sets the property Password. 
            <para>
            The password associated with the user name to use for Basic authorization.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.CreateConnectionBasicAuthRequestParameters.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The user name to use for Basic authorization.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.CreateConnectionOAuthClientRequestParameters">
            <summary>
            Contains the Basic authorization parameters to use for the connection.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.CreateConnectionOAuthClientRequestParameters.ClientID">
            <summary>
            Gets and sets the property ClientID. 
            <para>
            The client ID to use for OAuth authorization for the connection.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.CreateConnectionOAuthClientRequestParameters.ClientSecret">
            <summary>
            Gets and sets the property ClientSecret. 
            <para>
            The client secret associated with the client ID to use for OAuth authorization for
            the connection.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.CreateConnectionOAuthRequestParameters">
            <summary>
            Contains the OAuth authorization parameters to use for the connection.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.CreateConnectionOAuthRequestParameters.AuthorizationEndpoint">
            <summary>
            Gets and sets the property AuthorizationEndpoint. 
            <para>
            The URL to the authorization endpoint when OAuth is specified as the authorization
            type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.CreateConnectionOAuthRequestParameters.ClientParameters">
            <summary>
            Gets and sets the property ClientParameters. 
            <para>
            A <code>CreateConnectionOAuthClientRequestParameters</code> object that contains the
            client parameters for OAuth authorization.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.CreateConnectionOAuthRequestParameters.HttpMethod">
            <summary>
            Gets and sets the property HttpMethod. 
            <para>
            The method to use for the authorization request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.CreateConnectionOAuthRequestParameters.OAuthHttpParameters">
            <summary>
            Gets and sets the property OAuthHttpParameters. 
            <para>
            A <code>ConnectionHttpParameters</code> object that contains details about the additional
            parameters to use for the connection.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.CreateConnectionRequest">
            <summary>
            Container for the parameters to the CreateConnection operation.
            Creates a connection. A connection defines the authorization type and credentials
            to use for authorization with an API destination HTTP endpoint.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.CreateConnectionRequest.AuthorizationType">
            <summary>
            Gets and sets the property AuthorizationType. 
            <para>
            The type of authorization to use for the connection.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.CreateConnectionRequest.AuthParameters">
            <summary>
            Gets and sets the property AuthParameters. 
            <para>
            A <code>CreateConnectionAuthRequestParameters</code> object that contains the authorization
            parameters to use to authorize with the endpoint. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.CreateConnectionRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description for the connection to create.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.CreateConnectionRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name for the connection to create.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.CreateConnectionResponse">
            <summary>
            This is the response object from the CreateConnection operation.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.CreateConnectionResponse.ConnectionArn">
            <summary>
            Gets and sets the property ConnectionArn. 
            <para>
            The ARN of the connection that was created by the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.CreateConnectionResponse.ConnectionState">
            <summary>
            Gets and sets the property ConnectionState. 
            <para>
            The state of the connection that was created by the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.CreateConnectionResponse.CreationTime">
            <summary>
            Gets and sets the property CreationTime. 
            <para>
            A time stamp for the time that the connection was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.CreateConnectionResponse.LastModifiedTime">
            <summary>
            Gets and sets the property LastModifiedTime. 
            <para>
            A time stamp for the time that the connection was last updated.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.CreateEventBusRequest">
            <summary>
            Container for the parameters to the CreateEventBus operation.
            Creates a new event bus within your account. This can be a custom event bus which
            you can use to receive events from your custom applications and services, or it can
            be a partner event bus which can be matched to a partner event source.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.CreateEventBusRequest.EventSourceName">
            <summary>
            Gets and sets the property EventSourceName. 
            <para>
            If you are creating a partner event bus, this specifies the partner event source that
            the new event bus will be matched with.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.CreateEventBusRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the new event bus. 
            </para>
             
            <para>
            Event bus names cannot contain the / character. You can't use the name <code>default</code>
            for a custom event bus, as this name is already used for your account's default event
            bus.
            </para>
             
            <para>
            If this is a partner event bus, the name must exactly match the name of the partner
            event source that this event bus is matched to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.CreateEventBusRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Tags to associate with the event bus.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.CreateEventBusResponse">
            <summary>
            This is the response object from the CreateEventBus operation.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.CreateEventBusResponse.EventBusArn">
            <summary>
            Gets and sets the property EventBusArn. 
            <para>
            The ARN of the new event bus.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.CreatePartnerEventSourceRequest">
            <summary>
            Container for the parameters to the CreatePartnerEventSource operation.
            Called by an SaaS partner to create a partner event source. This operation is not
            used by Amazon Web Services customers.
            
             
            <para>
            Each partner event source can be used by one Amazon Web Services account to create
            a matching partner event bus in that Amazon Web Services account. A SaaS partner must
            create one partner event source for each Amazon Web Services account that wants to
            receive those event types. 
            </para>
             
            <para>
            A partner event source creates events based on resources within the SaaS partner's
            service or application.
            </para>
             
            <para>
            An Amazon Web Services account that creates a partner event bus that matches the partner
            event source can use that event bus to receive events from the partner, and then process
            them using Amazon Web Services Events rules and targets.
            </para>
             
            <para>
            Partner event source names follow this format:
            </para>
             
            <para>
             <code> <i>partner_name</i>/<i>event_namespace</i>/<i>event_name</i> </code> 
            </para>
             
            <para>
             <i>partner_name</i> is determined during partner registration and identifies the
            partner to Amazon Web Services customers. <i>event_namespace</i> is determined by
            the partner and is a way for the partner to categorize their events. <i>event_name</i>
            is determined by the partner, and should uniquely identify an event-generating resource
            within the partner system. The combination of <i>event_namespace</i> and <i>event_name</i>
            should help Amazon Web Services customers decide whether to create an event bus to
            receive these events.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.CreatePartnerEventSourceRequest.Account">
            <summary>
            Gets and sets the property Account. 
            <para>
            The Amazon Web Services account ID that is permitted to create a matching partner
            event bus for this partner event source.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.CreatePartnerEventSourceRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the partner event source. This name must be unique and must be in the
            format <code> <i>partner_name</i>/<i>event_namespace</i>/<i>event_name</i> </code>.
            The Amazon Web Services account that wants to use this partner event source must create
            a partner event bus with a name that matches the name of the partner event source.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.CreatePartnerEventSourceResponse">
            <summary>
            This is the response object from the CreatePartnerEventSource operation.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.CreatePartnerEventSourceResponse.EventSourceArn">
            <summary>
            Gets and sets the property EventSourceArn. 
            <para>
            The ARN of the partner event source.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.DeactivateEventSourceRequest">
            <summary>
            Container for the parameters to the DeactivateEventSource operation.
            You can use this operation to temporarily stop receiving events from the specified
            partner event source. The matching event bus is not deleted. 
            
             
            <para>
            When you deactivate a partner event source, the source goes into PENDING state. If
            it remains in PENDING state for more than two weeks, it is deleted.
            </para>
             
            <para>
            To activate a deactivated partner event source, use <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_ActivateEventSource.html">ActivateEventSource</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DeactivateEventSourceRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the partner event source to deactivate.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.DeactivateEventSourceResponse">
            <summary>
            This is the response object from the DeactivateEventSource operation.
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.DeadLetterConfig">
            <summary>
            A <code>DeadLetterConfig</code> object that contains information about a dead-letter
            queue configuration.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DeadLetterConfig.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The ARN of the SQS queue specified as the target for the dead-letter queue.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.DeauthorizeConnectionRequest">
            <summary>
            Container for the parameters to the DeauthorizeConnection operation.
            Removes all authorization parameters from the connection. This lets you remove the
            secret from the connection so you can reuse it without having to create a new connection.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DeauthorizeConnectionRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the connection to remove authorization from.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.DeauthorizeConnectionResponse">
            <summary>
            This is the response object from the DeauthorizeConnection operation.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DeauthorizeConnectionResponse.ConnectionArn">
            <summary>
            Gets and sets the property ConnectionArn. 
            <para>
            The ARN of the connection that authorization was removed from.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DeauthorizeConnectionResponse.ConnectionState">
            <summary>
            Gets and sets the property ConnectionState. 
            <para>
            The state of the connection.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DeauthorizeConnectionResponse.CreationTime">
            <summary>
            Gets and sets the property CreationTime. 
            <para>
            A time stamp for the time that the connection was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DeauthorizeConnectionResponse.LastAuthorizedTime">
            <summary>
            Gets and sets the property LastAuthorizedTime. 
            <para>
            A time stamp for the time that the connection was last authorized.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DeauthorizeConnectionResponse.LastModifiedTime">
            <summary>
            Gets and sets the property LastModifiedTime. 
            <para>
            A time stamp for the time that the connection was last updated.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.DeleteApiDestinationRequest">
            <summary>
            Container for the parameters to the DeleteApiDestination operation.
            Deletes the specified API destination.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DeleteApiDestinationRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the destination to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.DeleteApiDestinationResponse">
            <summary>
            This is the response object from the DeleteApiDestination operation.
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.DeleteArchiveRequest">
            <summary>
            Container for the parameters to the DeleteArchive operation.
            Deletes the specified archive.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DeleteArchiveRequest.ArchiveName">
            <summary>
            Gets and sets the property ArchiveName. 
            <para>
            The name of the archive to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.DeleteArchiveResponse">
            <summary>
            This is the response object from the DeleteArchive operation.
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.DeleteConnectionRequest">
            <summary>
            Container for the parameters to the DeleteConnection operation.
            Deletes a connection.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DeleteConnectionRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the connection to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.DeleteConnectionResponse">
            <summary>
            This is the response object from the DeleteConnection operation.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DeleteConnectionResponse.ConnectionArn">
            <summary>
            Gets and sets the property ConnectionArn. 
            <para>
            The ARN of the connection that was deleted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DeleteConnectionResponse.ConnectionState">
            <summary>
            Gets and sets the property ConnectionState. 
            <para>
            The state of the connection before it was deleted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DeleteConnectionResponse.CreationTime">
            <summary>
            Gets and sets the property CreationTime. 
            <para>
            A time stamp for the time that the connection was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DeleteConnectionResponse.LastAuthorizedTime">
            <summary>
            Gets and sets the property LastAuthorizedTime. 
            <para>
            A time stamp for the time that the connection was last authorized before it wa deleted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DeleteConnectionResponse.LastModifiedTime">
            <summary>
            Gets and sets the property LastModifiedTime. 
            <para>
            A time stamp for the time that the connection was last modified before it was deleted.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.DeleteEventBusRequest">
            <summary>
            Container for the parameters to the DeleteEventBus operation.
            Deletes the specified custom event bus or partner event bus. All rules associated
            with this event bus need to be deleted. You can't delete your account's default event
            bus.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DeleteEventBusRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the event bus to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.DeleteEventBusResponse">
            <summary>
            This is the response object from the DeleteEventBus operation.
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.DeletePartnerEventSourceRequest">
            <summary>
            Container for the parameters to the DeletePartnerEventSource operation.
            This operation is used by SaaS partners to delete a partner event source. This operation
            is not used by Amazon Web Services customers.
            
             
            <para>
            When you delete an event source, the status of the corresponding partner event bus
            in the Amazon Web Services customer account becomes DELETED.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DeletePartnerEventSourceRequest.Account">
            <summary>
            Gets and sets the property Account. 
            <para>
            The Amazon Web Services account ID of the Amazon Web Services customer that the event
            source was created for.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DeletePartnerEventSourceRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the event source to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.DeletePartnerEventSourceResponse">
            <summary>
            This is the response object from the DeletePartnerEventSource operation.
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.DeleteRuleRequest">
            <summary>
            Container for the parameters to the DeleteRule operation.
            Deletes the specified rule.
            
             
            <para>
            Before you can delete the rule, you must remove all targets, using <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_RemoveTargets.html">RemoveTargets</a>.
            </para>
             
            <para>
            When you delete a rule, incoming events might continue to match to the deleted rule.
            Allow a short period of time for changes to take effect.
            </para>
             
            <para>
            If you call delete rule multiple times for the same rule, all calls will succeed.
            When you call delete rule for a non-existent custom eventbus, <code>ResourceNotFoundException</code>
            is returned.
            </para>
             
            <para>
            Managed rules are rules created and managed by another Amazon Web Services service
            on your behalf. These rules are created by those other Amazon Web Services services
            to support functionality in those services. You can delete these rules using the <code>Force</code>
            option, but you should do so only if you are sure the other service is not still using
            that rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DeleteRuleRequest.EventBusName">
            <summary>
            Gets and sets the property EventBusName. 
            <para>
            The name or ARN of the event bus associated with the rule. If you omit this, the default
            event bus is used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DeleteRuleRequest.Force">
            <summary>
            Gets and sets the property Force. 
            <para>
            If this is a managed rule, created by an Amazon Web Services service on your behalf,
            you must specify <code>Force</code> as <code>True</code> to delete the rule. This
            parameter is ignored for rules that are not managed rules. You can check whether a
            rule is a managed rule by using <code>DescribeRule</code> or <code>ListRules</code>
            and checking the <code>ManagedBy</code> field of the response.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DeleteRuleRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the rule.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.DeleteRuleResponse">
            <summary>
            This is the response object from the DeleteRule operation.
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.DescribeApiDestinationRequest">
            <summary>
            Container for the parameters to the DescribeApiDestination operation.
            Retrieves details about an API destination.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribeApiDestinationRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the API destination to retrieve.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.DescribeApiDestinationResponse">
            <summary>
            This is the response object from the DescribeApiDestination operation.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribeApiDestinationResponse.ApiDestinationArn">
            <summary>
            Gets and sets the property ApiDestinationArn. 
            <para>
            The ARN of the API destination retrieved.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribeApiDestinationResponse.ApiDestinationState">
            <summary>
            Gets and sets the property ApiDestinationState. 
            <para>
            The state of the API destination retrieved.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribeApiDestinationResponse.ConnectionArn">
            <summary>
            Gets and sets the property ConnectionArn. 
            <para>
            The ARN of the connection specified for the API destination retrieved.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribeApiDestinationResponse.CreationTime">
            <summary>
            Gets and sets the property CreationTime. 
            <para>
            A time stamp for the time that the API destination was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribeApiDestinationResponse.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The description for the API destination retrieved.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribeApiDestinationResponse.HttpMethod">
            <summary>
            Gets and sets the property HttpMethod. 
            <para>
            The method to use to connect to the HTTP endpoint.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribeApiDestinationResponse.InvocationEndpoint">
            <summary>
            Gets and sets the property InvocationEndpoint. 
            <para>
            The URL to use to connect to the HTTP endpoint.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribeApiDestinationResponse.InvocationRateLimitPerSecond">
            <summary>
            Gets and sets the property InvocationRateLimitPerSecond. 
            <para>
            The maximum number of invocations per second to specified for the API destination.
            Note that if you set the invocation rate maximum to a value lower the rate necessary
            to send all events received on to the destination HTTP endpoint, some events may not
            be delivered within the 24-hour retry window. If you plan to set the rate lower than
            the rate necessary to deliver all events, consider using a dead-letter queue to catch
            events that are not delivered within 24 hours.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribeApiDestinationResponse.LastModifiedTime">
            <summary>
            Gets and sets the property LastModifiedTime. 
            <para>
            A time stamp for the time that the API destination was last modified.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribeApiDestinationResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the API destination retrieved.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.DescribeArchiveRequest">
            <summary>
            Container for the parameters to the DescribeArchive operation.
            Retrieves details about an archive.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribeArchiveRequest.ArchiveName">
            <summary>
            Gets and sets the property ArchiveName. 
            <para>
            The name of the archive to retrieve.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.DescribeArchiveResponse">
            <summary>
            This is the response object from the DescribeArchive operation.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribeArchiveResponse.ArchiveArn">
            <summary>
            Gets and sets the property ArchiveArn. 
            <para>
            The ARN of the archive.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribeArchiveResponse.ArchiveName">
            <summary>
            Gets and sets the property ArchiveName. 
            <para>
            The name of the archive.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribeArchiveResponse.CreationTime">
            <summary>
            Gets and sets the property CreationTime. 
            <para>
            The time at which the archive was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribeArchiveResponse.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The description of the archive.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribeArchiveResponse.EventCount">
            <summary>
            Gets and sets the property EventCount. 
            <para>
            The number of events in the archive.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribeArchiveResponse.EventPattern">
            <summary>
            Gets and sets the property EventPattern. 
            <para>
            The event pattern used to filter events sent to the archive.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribeArchiveResponse.EventSourceArn">
            <summary>
            Gets and sets the property EventSourceArn. 
            <para>
            The ARN of the event source associated with the archive.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribeArchiveResponse.RetentionDays">
            <summary>
            Gets and sets the property RetentionDays. 
            <para>
            The number of days to retain events for in the archive.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribeArchiveResponse.SizeBytes">
            <summary>
            Gets and sets the property SizeBytes. 
            <para>
            The size of the archive in bytes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribeArchiveResponse.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The state of the archive.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribeArchiveResponse.StateReason">
            <summary>
            Gets and sets the property StateReason. 
            <para>
            The reason that the archive is in the state.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.DescribeConnectionRequest">
            <summary>
            Container for the parameters to the DescribeConnection operation.
            Retrieves details about a connection.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribeConnectionRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the connection to retrieve.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.DescribeConnectionResponse">
            <summary>
            This is the response object from the DescribeConnection operation.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribeConnectionResponse.AuthorizationType">
            <summary>
            Gets and sets the property AuthorizationType. 
            <para>
            The type of authorization specified for the connection.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribeConnectionResponse.AuthParameters">
            <summary>
            Gets and sets the property AuthParameters. 
            <para>
            The parameters to use for authorization for the connection.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribeConnectionResponse.ConnectionArn">
            <summary>
            Gets and sets the property ConnectionArn. 
            <para>
            The ARN of the connection retrieved.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribeConnectionResponse.ConnectionState">
            <summary>
            Gets and sets the property ConnectionState. 
            <para>
            The state of the connection retrieved.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribeConnectionResponse.CreationTime">
            <summary>
            Gets and sets the property CreationTime. 
            <para>
            A time stamp for the time that the connection was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribeConnectionResponse.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The description for the connection retrieved.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribeConnectionResponse.LastAuthorizedTime">
            <summary>
            Gets and sets the property LastAuthorizedTime. 
            <para>
            A time stamp for the time that the connection was last authorized.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribeConnectionResponse.LastModifiedTime">
            <summary>
            Gets and sets the property LastModifiedTime. 
            <para>
            A time stamp for the time that the connection was last modified.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribeConnectionResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the connection retrieved.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribeConnectionResponse.SecretArn">
            <summary>
            Gets and sets the property SecretArn. 
            <para>
            The ARN of the secret created from the authorization parameters specified for the
            connection.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribeConnectionResponse.StateReason">
            <summary>
            Gets and sets the property StateReason. 
            <para>
            The reason that the connection is in the current connection state.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.DescribeEventBusRequest">
            <summary>
            Container for the parameters to the DescribeEventBus operation.
            Displays details about an event bus in your account. This can include the external
            Amazon Web Services accounts that are permitted to write events to your default event
            bus, and the associated policy. For custom event buses and partner event buses, it
            displays the name, ARN, policy, state, and creation time.
            
             
            <para>
             To enable your account to receive events from other accounts on its default event
            bus, use <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_PutPermission.html">PutPermission</a>.
            </para>
             
            <para>
            For more information about partner event buses, see <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_CreateEventBus.html">CreateEventBus</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribeEventBusRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name or ARN of the event bus to show details for. If you omit this, the default
            event bus is displayed.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.DescribeEventBusResponse">
            <summary>
            This is the response object from the DescribeEventBus operation.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribeEventBusResponse.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The Amazon Resource Name (ARN) of the account permitted to write events to the current
            account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribeEventBusResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the event bus. Currently, this is always <code>default</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribeEventBusResponse.Policy">
            <summary>
            Gets and sets the property Policy. 
            <para>
            The policy that enables the external account to send events to your account.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.DescribeEventSourceRequest">
            <summary>
            Container for the parameters to the DescribeEventSource operation.
            This operation lists details about a partner event source that is shared with your
            account.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribeEventSourceRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the partner event source to display the details of.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.DescribeEventSourceResponse">
            <summary>
            This is the response object from the DescribeEventSource operation.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribeEventSourceResponse.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The ARN of the partner event source.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribeEventSourceResponse.CreatedBy">
            <summary>
            Gets and sets the property CreatedBy. 
            <para>
            The name of the SaaS partner that created the event source.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribeEventSourceResponse.CreationTime">
            <summary>
            Gets and sets the property CreationTime. 
            <para>
            The date and time that the event source was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribeEventSourceResponse.ExpirationTime">
            <summary>
            Gets and sets the property ExpirationTime. 
            <para>
            The date and time that the event source will expire if you do not create a matching
            event bus.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribeEventSourceResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the partner event source.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribeEventSourceResponse.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The state of the event source. If it is ACTIVE, you have already created a matching
            event bus for this event source, and that event bus is active. If it is PENDING, either
            you haven't yet created a matching event bus, or that event bus is deactivated. If
            it is DELETED, you have created a matching event bus, but the event source has since
            been deleted.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.DescribePartnerEventSourceRequest">
            <summary>
            Container for the parameters to the DescribePartnerEventSource operation.
            An SaaS partner can use this operation to list details about a partner event source
            that they have created. Amazon Web Services customers do not use this operation. Instead,
            Amazon Web Services customers can use <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_DescribeEventSource.html">DescribeEventSource</a>
            to see details about a partner event source that is shared with them.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribePartnerEventSourceRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the event source to display.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.DescribePartnerEventSourceResponse">
            <summary>
            This is the response object from the DescribePartnerEventSource operation.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribePartnerEventSourceResponse.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The ARN of the event source.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribePartnerEventSourceResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the event source.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.DescribeReplayRequest">
            <summary>
            Container for the parameters to the DescribeReplay operation.
            Retrieves details about a replay. Use <code>DescribeReplay</code> to determine the
            progress of a running replay. A replay processes events to replay based on the time
            in the event, and replays them using 1 minute intervals. If you use <code>StartReplay</code>
            and specify an <code>EventStartTime</code> and an <code>EventEndTime</code> that covers
            a 20 minute time range, the events are replayed from the first minute of that 20 minute
            range first. Then the events from the second minute are replayed. You can use <code>DescribeReplay</code>
            to determine the progress of a replay. The value returned for <code>EventLastReplayedTime</code>
            indicates the time within the specified time range associated with the last event
            replayed.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribeReplayRequest.ReplayName">
            <summary>
            Gets and sets the property ReplayName. 
            <para>
            The name of the replay to retrieve.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.DescribeReplayResponse">
            <summary>
            This is the response object from the DescribeReplay operation.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribeReplayResponse.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The description of the replay.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribeReplayResponse.Destination">
            <summary>
            Gets and sets the property Destination. 
            <para>
            A <code>ReplayDestination</code> object that contains details about the replay.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribeReplayResponse.EventEndTime">
            <summary>
            Gets and sets the property EventEndTime. 
            <para>
            The time stamp for the last event that was replayed from the archive.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribeReplayResponse.EventLastReplayedTime">
            <summary>
            Gets and sets the property EventLastReplayedTime. 
            <para>
            The time that the event was last replayed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribeReplayResponse.EventSourceArn">
            <summary>
            Gets and sets the property EventSourceArn. 
            <para>
            The ARN of the archive events were replayed from.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribeReplayResponse.EventStartTime">
            <summary>
            Gets and sets the property EventStartTime. 
            <para>
            The time stamp of the first event that was last replayed from the archive.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribeReplayResponse.ReplayArn">
            <summary>
            Gets and sets the property ReplayArn. 
            <para>
            The ARN of the replay.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribeReplayResponse.ReplayEndTime">
            <summary>
            Gets and sets the property ReplayEndTime. 
            <para>
            A time stamp for the time that the replay stopped.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribeReplayResponse.ReplayName">
            <summary>
            Gets and sets the property ReplayName. 
            <para>
            The name of the replay.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribeReplayResponse.ReplayStartTime">
            <summary>
            Gets and sets the property ReplayStartTime. 
            <para>
            A time stamp for the time that the replay started.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribeReplayResponse.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The current state of the replay.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribeReplayResponse.StateReason">
            <summary>
            Gets and sets the property StateReason. 
            <para>
            The reason that the replay is in the current state.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.DescribeRuleRequest">
            <summary>
            Container for the parameters to the DescribeRule operation.
            Describes the specified rule.
            
             
            <para>
            DescribeRule does not list the targets of a rule. To see the targets associated with
            a rule, use <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_ListTargetsByRule.html">ListTargetsByRule</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribeRuleRequest.EventBusName">
            <summary>
            Gets and sets the property EventBusName. 
            <para>
            The name or ARN of the event bus associated with the rule. If you omit this, the default
            event bus is used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribeRuleRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the rule.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.DescribeRuleResponse">
            <summary>
            This is the response object from the DescribeRule operation.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribeRuleResponse.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The Amazon Resource Name (ARN) of the rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribeRuleResponse.CreatedBy">
            <summary>
            Gets and sets the property CreatedBy. 
            <para>
            The account ID of the user that created the rule. If you use <code>PutRule</code>
            to put a rule on an event bus in another account, the other account is the owner of
            the rule, and the rule ARN includes the account ID for that account. However, the
            value for <code>CreatedBy</code> is the account ID as the account that created the
            rule in the other account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribeRuleResponse.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The description of the rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribeRuleResponse.EventBusName">
            <summary>
            Gets and sets the property EventBusName. 
            <para>
            The name of the event bus associated with the rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribeRuleResponse.EventPattern">
            <summary>
            Gets and sets the property EventPattern. 
            <para>
            The event pattern. For more information, see <a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html">Events
            and Event Patterns</a> in the <i>Amazon EventBridge User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribeRuleResponse.ManagedBy">
            <summary>
            Gets and sets the property ManagedBy. 
            <para>
            If this is a managed rule, created by an Amazon Web Services service on your behalf,
            this field displays the principal name of the Amazon Web Services service that created
            the rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribeRuleResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribeRuleResponse.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The Amazon Resource Name (ARN) of the IAM role associated with the rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribeRuleResponse.ScheduleExpression">
            <summary>
            Gets and sets the property ScheduleExpression. 
            <para>
            The scheduling expression. For example, "cron(0 20 * * ? *)", "rate(5 minutes)".
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DescribeRuleResponse.State">
            <summary>
            Gets and sets the property State. 
            <para>
            Specifies whether the rule is enabled or disabled.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.DisableRuleRequest">
            <summary>
            Container for the parameters to the DisableRule operation.
            Disables the specified rule. A disabled rule won't match any events, and won't self-trigger
            if it has a schedule expression.
            
             
            <para>
            When you disable a rule, incoming events might continue to match to the disabled rule.
            Allow a short period of time for changes to take effect.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DisableRuleRequest.EventBusName">
            <summary>
            Gets and sets the property EventBusName. 
            <para>
            The name or ARN of the event bus associated with the rule. If you omit this, the default
            event bus is used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.DisableRuleRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the rule.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.DisableRuleResponse">
            <summary>
            This is the response object from the DisableRule operation.
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.EcsParameters">
            <summary>
            The custom parameters to be used when the target is an Amazon ECS task.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.EcsParameters.CapacityProviderStrategy">
            <summary>
            Gets and sets the property CapacityProviderStrategy. 
            <para>
            The capacity provider strategy to use for the task.
            </para>
             
            <para>
            If a <code>capacityProviderStrategy</code> is specified, the <code>launchType</code>
            parameter must be omitted. If no <code>capacityProviderStrategy</code> or launchType
            is specified, the <code>defaultCapacityProviderStrategy</code> for the cluster is
            used. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.EcsParameters.EnableECSManagedTags">
            <summary>
            Gets and sets the property EnableECSManagedTags. 
            <para>
            Specifies whether to enable Amazon ECS managed tags for the task. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-using-tags.html">Tagging
            Your Amazon ECS Resources</a> in the Amazon Elastic Container Service Developer Guide.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.EcsParameters.EnableExecuteCommand">
            <summary>
            Gets and sets the property EnableExecuteCommand. 
            <para>
            Whether or not to enable the execute command functionality for the containers in this
            task. If true, this enables execute command functionality on all containers in the
            task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.EcsParameters.Group">
            <summary>
            Gets and sets the property Group. 
            <para>
            Specifies an ECS task group for the task. The maximum length is 255 characters.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.EcsParameters.LaunchType">
            <summary>
            Gets and sets the property LaunchType. 
            <para>
            Specifies the launch type on which your task is running. The launch type that you
            specify here must match one of the launch type (compatibilities) of the target task.
            The <code>FARGATE</code> value is supported only in the Regions where Fargate witt
            Amazon ECS is supported. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/AWS-Fargate.html">Fargate
            on Amazon ECS</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.EcsParameters.NetworkConfiguration">
            <summary>
            Gets and sets the property NetworkConfiguration. 
            <para>
            Use this structure if the Amazon ECS task uses the <code>awsvpc</code> network mode.
            This structure specifies the VPC subnets and security groups associated with the task,
            and whether a public IP address is to be used. This structure is required if <code>LaunchType</code>
            is <code>FARGATE</code> because the <code>awsvpc</code> mode is required for Fargate
            tasks.
            </para>
             
            <para>
            If you specify <code>NetworkConfiguration</code> when the target ECS task does not
            use the <code>awsvpc</code> network mode, the task fails.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.EcsParameters.PlacementConstraints">
            <summary>
            Gets and sets the property PlacementConstraints. 
            <para>
            An array of placement constraint objects to use for the task. You can specify up to
            10 constraints per task (including constraints in the task definition and those specified
            at runtime).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.EcsParameters.PlacementStrategy">
            <summary>
            Gets and sets the property PlacementStrategy. 
            <para>
            The placement strategy objects to use for the task. You can specify a maximum of five
            strategy rules per task. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.EcsParameters.PlatformVersion">
            <summary>
            Gets and sets the property PlatformVersion. 
            <para>
            Specifies the platform version for the task. Specify only the numeric portion of the
            platform version, such as <code>1.1.0</code>.
            </para>
             
            <para>
            This structure is used only if <code>LaunchType</code> is <code>FARGATE</code>. For
            more information about valid platform versions, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/platform_versions.html">Fargate
            Platform Versions</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.EcsParameters.PropagateTags">
            <summary>
            Gets and sets the property PropagateTags. 
            <para>
            Specifies whether to propagate the tags from the task definition to the task. If no
            value is specified, the tags are not propagated. Tags can only be propagated to the
            task during task creation. To add tags to a task after task creation, use the TagResource
            API action. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.EcsParameters.ReferenceId">
            <summary>
            Gets and sets the property ReferenceId. 
            <para>
            The reference ID to use for the task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.EcsParameters.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The metadata that you apply to the task to help you categorize and organize them.
            Each tag consists of a key and an optional value, both of which you define. To learn
            more, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_RunTask.html#ECS-RunTask-request-tags">RunTask</a>
            in the Amazon ECS API Reference.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.EcsParameters.TaskCount">
            <summary>
            Gets and sets the property TaskCount. 
            <para>
            The number of tasks to create based on <code>TaskDefinition</code>. The default is
            1.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.EcsParameters.TaskDefinitionArn">
            <summary>
            Gets and sets the property TaskDefinitionArn. 
            <para>
            The ARN of the task definition to use if the event target is an Amazon ECS task. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.EnableRuleRequest">
            <summary>
            Container for the parameters to the EnableRule operation.
            Enables the specified rule. If the rule does not exist, the operation fails.
            
             
            <para>
            When you enable a rule, incoming events might not immediately start matching to a
            newly enabled rule. Allow a short period of time for changes to take effect.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.EnableRuleRequest.EventBusName">
            <summary>
            Gets and sets the property EventBusName. 
            <para>
            The name or ARN of the event bus associated with the rule. If you omit this, the default
            event bus is used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.EnableRuleRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the rule.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.EnableRuleResponse">
            <summary>
            This is the response object from the EnableRule operation.
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.EventBus">
            <summary>
            An event bus receives events from a source and routes them to rules associated with
            that event bus. Your account's default event bus receives events from Amazon Web Services
            services. A custom event bus can receive events from your custom applications and
            services. A partner event bus receives events from an event source created by an SaaS
            partner. These events come from the partners services or applications.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.EventBus.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The ARN of the event bus.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.EventBus.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the event bus.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.EventBus.Policy">
            <summary>
            Gets and sets the property Policy. 
            <para>
            The permissions policy of the event bus, describing which other Amazon Web Services
            accounts can write events to this event bus.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.EventSource">
            <summary>
            A partner event source is created by an SaaS partner. If a customer creates a partner
            event bus that matches this event source, that Amazon Web Services account can receive
            events from the partner's applications or services.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.EventSource.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The ARN of the event source.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.EventSource.CreatedBy">
            <summary>
            Gets and sets the property CreatedBy. 
            <para>
            The name of the partner that created the event source.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.EventSource.CreationTime">
            <summary>
            Gets and sets the property CreationTime. 
            <para>
            The date and time the event source was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.EventSource.ExpirationTime">
            <summary>
            Gets and sets the property ExpirationTime. 
            <para>
            The date and time that the event source will expire, if the Amazon Web Services account
            doesn't create a matching event bus for it.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.EventSource.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the event source.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.EventSource.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The state of the event source. If it is ACTIVE, you have already created a matching
            event bus for this event source, and that event bus is active. If it is PENDING, either
            you haven't yet created a matching event bus, or that event bus is deactivated. If
            it is DELETED, you have created a matching event bus, but the event source has since
            been deleted.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.HttpParameters">
            <summary>
            These are custom parameter to be used when the target is an API Gateway REST APIs
            or EventBridge ApiDestinations. In the latter case, these are merged with any InvocationParameters
            specified on the Connection, with any values from the Connection taking precedence.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.HttpParameters.HeaderParameters">
            <summary>
            Gets and sets the property HeaderParameters. 
            <para>
            The headers that need to be sent as part of request invoking the API Gateway REST
            API or EventBridge ApiDestination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.HttpParameters.PathParameterValues">
            <summary>
            Gets and sets the property PathParameterValues. 
            <para>
            The path parameter values to be used to populate API Gateway REST API or EventBridge
            ApiDestination path wildcards ("*").
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.HttpParameters.QueryStringParameters">
            <summary>
            Gets and sets the property QueryStringParameters. 
            <para>
            The query string keys/values that need to be sent as part of request invoking the
            API Gateway REST API or EventBridge ApiDestination.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.IllegalStatusException">
            <summary>
            An error occurred because a replay can be canceled only when the state is Running
            or Starting.
            </summary>
        </member>
        <member name="M:Amazon.EventBridge.Model.IllegalStatusException.#ctor(System.String)">
            <summary>
            Constructs a new IllegalStatusException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.EventBridge.Model.IllegalStatusException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of IllegalStatusException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EventBridge.Model.IllegalStatusException.#ctor(System.Exception)">
            <summary>
            Construct instance of IllegalStatusException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EventBridge.Model.IllegalStatusException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of IllegalStatusException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.EventBridge.Model.IllegalStatusException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of IllegalStatusException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.EventBridge.Model.IllegalStatusException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the IllegalStatusException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.EventBridge.Model.IllegalStatusException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.EventBridge.Model.InputTransformer">
            <summary>
            Contains the parameters needed for you to provide custom input to a target based on
            one or more pieces of data extracted from the event.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.InputTransformer.InputPathsMap">
            <summary>
            Gets and sets the property InputPathsMap. 
            <para>
            Map of JSON paths to be extracted from the event. You can then insert these in the
            template in <code>InputTemplate</code> to produce the output you want to be sent to
            the target.
            </para>
             
            <para>
             <code>InputPathsMap</code> is an array key-value pairs, where each value is a valid
            JSON path. You can have as many as 100 key-value pairs. You must use JSON dot notation,
            not bracket notation.
            </para>
             
            <para>
            The keys cannot start with "Amazon Web Services." 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.InputTransformer.InputTemplate">
            <summary>
            Gets and sets the property InputTemplate. 
            <para>
            Input template where you specify placeholders that will be filled with the values
            of the keys from <code>InputPathsMap</code> to customize the data sent to the target.
            Enclose each <code>InputPathsMaps</code> value in brackets: &lt;<i>value</i>&gt; The
            InputTemplate must be valid JSON.
            </para>
             
            <para>
            If <code>InputTemplate</code> is a JSON object (surrounded by curly braces), the following
            restrictions apply:
            </para>
             <ul> <li> 
            <para>
            The placeholder cannot be used as an object key.
            </para>
             </li> </ul> 
            <para>
            The following example shows the syntax for using <code>InputPathsMap</code> and <code>InputTemplate</code>.
            </para>
             
            <para>
             <code> "InputTransformer":</code> 
            </para>
             
            <para>
             <code>{</code> 
            </para>
             
            <para>
             <code>"InputPathsMap": {"instance": "$.detail.instance","status": "$.detail.status"},</code>
            
            </para>
             
            <para>
             <code>"InputTemplate": "&lt;instance&gt; is in state &lt;status&gt;"</code> 
            </para>
             
            <para>
             <code>}</code> 
            </para>
             
            <para>
            To have the <code>InputTemplate</code> include quote marks within a JSON string, escape
            each quote marks with a slash, as in the following example:
            </para>
             
            <para>
             <code> "InputTransformer":</code> 
            </para>
             
            <para>
             <code>{</code> 
            </para>
             
            <para>
             <code>"InputPathsMap": {"instance": "$.detail.instance","status": "$.detail.status"},</code>
            
            </para>
             
            <para>
             <code>"InputTemplate": "&lt;instance&gt; is in state \"&lt;status&gt;\""</code> 
            </para>
             
            <para>
             <code>}</code> 
            </para>
             
            <para>
            The <code>InputTemplate</code> can also be valid JSON with varibles in quotes or out,
            as in the following example:
            </para>
             
            <para>
             <code> "InputTransformer":</code> 
            </para>
             
            <para>
             <code>{</code> 
            </para>
             
            <para>
             <code>"InputPathsMap": {"instance": "$.detail.instance","status": "$.detail.status"},</code>
            
            </para>
             
            <para>
             <code>"InputTemplate": '{"myInstance": &lt;instance&gt;,"myStatus": "&lt;instance&gt;
            is in state \"&lt;status&gt;\""}'</code> 
            </para>
             
            <para>
             <code>}</code> 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.InternalException">
            <summary>
            This exception occurs due to unexpected causes.
            </summary>
        </member>
        <member name="M:Amazon.EventBridge.Model.InternalException.#ctor(System.String)">
            <summary>
            Constructs a new InternalException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.EventBridge.Model.InternalException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InternalException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EventBridge.Model.InternalException.#ctor(System.Exception)">
            <summary>
            Construct instance of InternalException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EventBridge.Model.InternalException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.EventBridge.Model.InternalException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.EventBridge.Model.InternalException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InternalException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.EventBridge.Model.InternalException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.ActivateEventSourceRequestMarshaller">
            <summary>
            ActivateEventSource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ActivateEventSourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ActivateEventSourceRequestMarshaller.Marshall(Amazon.EventBridge.Model.ActivateEventSourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.ActivateEventSourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.ActivateEventSourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ActivateEventSource operation
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ActivateEventSourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ActivateEventSourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.ActivateEventSourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.ApiDestinationUnmarshaller">
            <summary>
            Response Unmarshaller for ApiDestination Object
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ApiDestinationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EventBridge#Model#ApiDestination,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ApiDestinationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.ApiDestinationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.ArchiveUnmarshaller">
            <summary>
            Response Unmarshaller for Archive Object
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ArchiveUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EventBridge#Model#Archive,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ArchiveUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.ArchiveUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.AwsVpcConfigurationMarshaller">
            <summary>
            AwsVpcConfiguration Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.AwsVpcConfigurationMarshaller.Marshall(Amazon.EventBridge.Model.AwsVpcConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EventBridge.Model.Internal.MarshallTransformations.AwsVpcConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.AwsVpcConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for AwsVpcConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.AwsVpcConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EventBridge#Model#AwsVpcConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.AwsVpcConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.AwsVpcConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.BatchArrayPropertiesMarshaller">
            <summary>
            BatchArrayProperties Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.BatchArrayPropertiesMarshaller.Marshall(Amazon.EventBridge.Model.BatchArrayProperties,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EventBridge.Model.Internal.MarshallTransformations.BatchArrayPropertiesMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.BatchArrayPropertiesUnmarshaller">
            <summary>
            Response Unmarshaller for BatchArrayProperties Object
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.BatchArrayPropertiesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EventBridge#Model#BatchArrayProperties,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.BatchArrayPropertiesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.BatchArrayPropertiesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.BatchParametersMarshaller">
            <summary>
            BatchParameters Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.BatchParametersMarshaller.Marshall(Amazon.EventBridge.Model.BatchParameters,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EventBridge.Model.Internal.MarshallTransformations.BatchParametersMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.BatchParametersUnmarshaller">
            <summary>
            Response Unmarshaller for BatchParameters Object
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.BatchParametersUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EventBridge#Model#BatchParameters,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.BatchParametersUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.BatchParametersUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.BatchRetryStrategyMarshaller">
            <summary>
            BatchRetryStrategy Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.BatchRetryStrategyMarshaller.Marshall(Amazon.EventBridge.Model.BatchRetryStrategy,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EventBridge.Model.Internal.MarshallTransformations.BatchRetryStrategyMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.BatchRetryStrategyUnmarshaller">
            <summary>
            Response Unmarshaller for BatchRetryStrategy Object
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.BatchRetryStrategyUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EventBridge#Model#BatchRetryStrategy,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.BatchRetryStrategyUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.BatchRetryStrategyUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.CancelReplayRequestMarshaller">
            <summary>
            CancelReplay Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.CancelReplayRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.CancelReplayRequestMarshaller.Marshall(Amazon.EventBridge.Model.CancelReplayRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.CancelReplayRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.CancelReplayResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CancelReplay operation
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.CancelReplayResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.CancelReplayResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.CancelReplayResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.CapacityProviderStrategyItemMarshaller">
            <summary>
            CapacityProviderStrategyItem Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.CapacityProviderStrategyItemMarshaller.Marshall(Amazon.EventBridge.Model.CapacityProviderStrategyItem,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EventBridge.Model.Internal.MarshallTransformations.CapacityProviderStrategyItemMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.CapacityProviderStrategyItemUnmarshaller">
            <summary>
            Response Unmarshaller for CapacityProviderStrategyItem Object
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.CapacityProviderStrategyItemUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EventBridge#Model#CapacityProviderStrategyItem,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.CapacityProviderStrategyItemUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.CapacityProviderStrategyItemUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.ConcurrentModificationExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ConcurrentModificationException Object
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ConcurrentModificationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ConcurrentModificationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.ConcurrentModificationExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.ConditionMarshaller">
            <summary>
            Condition Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ConditionMarshaller.Marshall(Amazon.EventBridge.Model.Condition,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EventBridge.Model.Internal.MarshallTransformations.ConditionMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.ConnectionApiKeyAuthResponseParametersUnmarshaller">
            <summary>
            Response Unmarshaller for ConnectionApiKeyAuthResponseParameters Object
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ConnectionApiKeyAuthResponseParametersUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EventBridge#Model#ConnectionApiKeyAuthResponseParameters,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ConnectionApiKeyAuthResponseParametersUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.ConnectionApiKeyAuthResponseParametersUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.ConnectionAuthResponseParametersUnmarshaller">
            <summary>
            Response Unmarshaller for ConnectionAuthResponseParameters Object
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ConnectionAuthResponseParametersUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EventBridge#Model#ConnectionAuthResponseParameters,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ConnectionAuthResponseParametersUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.ConnectionAuthResponseParametersUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.ConnectionBasicAuthResponseParametersUnmarshaller">
            <summary>
            Response Unmarshaller for ConnectionBasicAuthResponseParameters Object
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ConnectionBasicAuthResponseParametersUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EventBridge#Model#ConnectionBasicAuthResponseParameters,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ConnectionBasicAuthResponseParametersUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.ConnectionBasicAuthResponseParametersUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.ConnectionBodyParameterMarshaller">
            <summary>
            ConnectionBodyParameter Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ConnectionBodyParameterMarshaller.Marshall(Amazon.EventBridge.Model.ConnectionBodyParameter,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EventBridge.Model.Internal.MarshallTransformations.ConnectionBodyParameterMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.ConnectionBodyParameterUnmarshaller">
            <summary>
            Response Unmarshaller for ConnectionBodyParameter Object
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ConnectionBodyParameterUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EventBridge#Model#ConnectionBodyParameter,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ConnectionBodyParameterUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.ConnectionBodyParameterUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.ConnectionHeaderParameterMarshaller">
            <summary>
            ConnectionHeaderParameter Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ConnectionHeaderParameterMarshaller.Marshall(Amazon.EventBridge.Model.ConnectionHeaderParameter,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EventBridge.Model.Internal.MarshallTransformations.ConnectionHeaderParameterMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.ConnectionHeaderParameterUnmarshaller">
            <summary>
            Response Unmarshaller for ConnectionHeaderParameter Object
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ConnectionHeaderParameterUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EventBridge#Model#ConnectionHeaderParameter,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ConnectionHeaderParameterUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.ConnectionHeaderParameterUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.ConnectionHttpParametersMarshaller">
            <summary>
            ConnectionHttpParameters Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ConnectionHttpParametersMarshaller.Marshall(Amazon.EventBridge.Model.ConnectionHttpParameters,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EventBridge.Model.Internal.MarshallTransformations.ConnectionHttpParametersMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.ConnectionHttpParametersUnmarshaller">
            <summary>
            Response Unmarshaller for ConnectionHttpParameters Object
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ConnectionHttpParametersUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EventBridge#Model#ConnectionHttpParameters,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ConnectionHttpParametersUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.ConnectionHttpParametersUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.ConnectionOAuthClientResponseParametersUnmarshaller">
            <summary>
            Response Unmarshaller for ConnectionOAuthClientResponseParameters Object
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ConnectionOAuthClientResponseParametersUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EventBridge#Model#ConnectionOAuthClientResponseParameters,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ConnectionOAuthClientResponseParametersUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.ConnectionOAuthClientResponseParametersUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.ConnectionOAuthResponseParametersUnmarshaller">
            <summary>
            Response Unmarshaller for ConnectionOAuthResponseParameters Object
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ConnectionOAuthResponseParametersUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EventBridge#Model#ConnectionOAuthResponseParameters,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ConnectionOAuthResponseParametersUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.ConnectionOAuthResponseParametersUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.ConnectionQueryStringParameterMarshaller">
            <summary>
            ConnectionQueryStringParameter Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ConnectionQueryStringParameterMarshaller.Marshall(Amazon.EventBridge.Model.ConnectionQueryStringParameter,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EventBridge.Model.Internal.MarshallTransformations.ConnectionQueryStringParameterMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.ConnectionQueryStringParameterUnmarshaller">
            <summary>
            Response Unmarshaller for ConnectionQueryStringParameter Object
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ConnectionQueryStringParameterUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EventBridge#Model#ConnectionQueryStringParameter,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ConnectionQueryStringParameterUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.ConnectionQueryStringParameterUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.ConnectionUnmarshaller">
            <summary>
            Response Unmarshaller for Connection Object
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ConnectionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EventBridge#Model#Connection,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ConnectionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.ConnectionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.CreateApiDestinationRequestMarshaller">
            <summary>
            CreateApiDestination Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.CreateApiDestinationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.CreateApiDestinationRequestMarshaller.Marshall(Amazon.EventBridge.Model.CreateApiDestinationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.CreateApiDestinationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.CreateApiDestinationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateApiDestination operation
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.CreateApiDestinationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.CreateApiDestinationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.CreateApiDestinationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.CreateArchiveRequestMarshaller">
            <summary>
            CreateArchive Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.CreateArchiveRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.CreateArchiveRequestMarshaller.Marshall(Amazon.EventBridge.Model.CreateArchiveRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.CreateArchiveRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.CreateArchiveResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateArchive operation
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.CreateArchiveResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.CreateArchiveResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.CreateArchiveResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.CreateConnectionApiKeyAuthRequestParametersMarshaller">
            <summary>
            CreateConnectionApiKeyAuthRequestParameters Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.CreateConnectionApiKeyAuthRequestParametersMarshaller.Marshall(Amazon.EventBridge.Model.CreateConnectionApiKeyAuthRequestParameters,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EventBridge.Model.Internal.MarshallTransformations.CreateConnectionApiKeyAuthRequestParametersMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.CreateConnectionAuthRequestParametersMarshaller">
            <summary>
            CreateConnectionAuthRequestParameters Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.CreateConnectionAuthRequestParametersMarshaller.Marshall(Amazon.EventBridge.Model.CreateConnectionAuthRequestParameters,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EventBridge.Model.Internal.MarshallTransformations.CreateConnectionAuthRequestParametersMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.CreateConnectionBasicAuthRequestParametersMarshaller">
            <summary>
            CreateConnectionBasicAuthRequestParameters Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.CreateConnectionBasicAuthRequestParametersMarshaller.Marshall(Amazon.EventBridge.Model.CreateConnectionBasicAuthRequestParameters,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EventBridge.Model.Internal.MarshallTransformations.CreateConnectionBasicAuthRequestParametersMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.CreateConnectionOAuthClientRequestParametersMarshaller">
            <summary>
            CreateConnectionOAuthClientRequestParameters Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.CreateConnectionOAuthClientRequestParametersMarshaller.Marshall(Amazon.EventBridge.Model.CreateConnectionOAuthClientRequestParameters,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EventBridge.Model.Internal.MarshallTransformations.CreateConnectionOAuthClientRequestParametersMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.CreateConnectionOAuthRequestParametersMarshaller">
            <summary>
            CreateConnectionOAuthRequestParameters Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.CreateConnectionOAuthRequestParametersMarshaller.Marshall(Amazon.EventBridge.Model.CreateConnectionOAuthRequestParameters,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EventBridge.Model.Internal.MarshallTransformations.CreateConnectionOAuthRequestParametersMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.CreateConnectionRequestMarshaller">
            <summary>
            CreateConnection Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.CreateConnectionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.CreateConnectionRequestMarshaller.Marshall(Amazon.EventBridge.Model.CreateConnectionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.CreateConnectionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.CreateConnectionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateConnection operation
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.CreateConnectionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.CreateConnectionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.CreateConnectionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.CreateEventBusRequestMarshaller">
            <summary>
            CreateEventBus Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.CreateEventBusRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.CreateEventBusRequestMarshaller.Marshall(Amazon.EventBridge.Model.CreateEventBusRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.CreateEventBusRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.CreateEventBusResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateEventBus operation
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.CreateEventBusResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.CreateEventBusResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.CreateEventBusResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.CreatePartnerEventSourceRequestMarshaller">
            <summary>
            CreatePartnerEventSource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.CreatePartnerEventSourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.CreatePartnerEventSourceRequestMarshaller.Marshall(Amazon.EventBridge.Model.CreatePartnerEventSourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.CreatePartnerEventSourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.CreatePartnerEventSourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreatePartnerEventSource operation
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.CreatePartnerEventSourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.CreatePartnerEventSourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.CreatePartnerEventSourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.DeactivateEventSourceRequestMarshaller">
            <summary>
            DeactivateEventSource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.DeactivateEventSourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.DeactivateEventSourceRequestMarshaller.Marshall(Amazon.EventBridge.Model.DeactivateEventSourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.DeactivateEventSourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.DeactivateEventSourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeactivateEventSource operation
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.DeactivateEventSourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.DeactivateEventSourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.DeactivateEventSourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.DeadLetterConfigMarshaller">
            <summary>
            DeadLetterConfig Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.DeadLetterConfigMarshaller.Marshall(Amazon.EventBridge.Model.DeadLetterConfig,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EventBridge.Model.Internal.MarshallTransformations.DeadLetterConfigMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.DeadLetterConfigUnmarshaller">
            <summary>
            Response Unmarshaller for DeadLetterConfig Object
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.DeadLetterConfigUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EventBridge#Model#DeadLetterConfig,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.DeadLetterConfigUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.DeadLetterConfigUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.DeauthorizeConnectionRequestMarshaller">
            <summary>
            DeauthorizeConnection Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.DeauthorizeConnectionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.DeauthorizeConnectionRequestMarshaller.Marshall(Amazon.EventBridge.Model.DeauthorizeConnectionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.DeauthorizeConnectionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.DeauthorizeConnectionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeauthorizeConnection operation
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.DeauthorizeConnectionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.DeauthorizeConnectionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.DeauthorizeConnectionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.DeleteApiDestinationRequestMarshaller">
            <summary>
            DeleteApiDestination Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.DeleteApiDestinationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.DeleteApiDestinationRequestMarshaller.Marshall(Amazon.EventBridge.Model.DeleteApiDestinationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.DeleteApiDestinationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.DeleteApiDestinationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteApiDestination operation
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.DeleteApiDestinationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.DeleteApiDestinationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.DeleteApiDestinationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.DeleteArchiveRequestMarshaller">
            <summary>
            DeleteArchive Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.DeleteArchiveRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.DeleteArchiveRequestMarshaller.Marshall(Amazon.EventBridge.Model.DeleteArchiveRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.DeleteArchiveRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.DeleteArchiveResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteArchive operation
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.DeleteArchiveResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.DeleteArchiveResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.DeleteArchiveResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.DeleteConnectionRequestMarshaller">
            <summary>
            DeleteConnection Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.DeleteConnectionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.DeleteConnectionRequestMarshaller.Marshall(Amazon.EventBridge.Model.DeleteConnectionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.DeleteConnectionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.DeleteConnectionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteConnection operation
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.DeleteConnectionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.DeleteConnectionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.DeleteConnectionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.DeleteEventBusRequestMarshaller">
            <summary>
            DeleteEventBus Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.DeleteEventBusRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.DeleteEventBusRequestMarshaller.Marshall(Amazon.EventBridge.Model.DeleteEventBusRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.DeleteEventBusRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.DeleteEventBusResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteEventBus operation
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.DeleteEventBusResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.DeleteEventBusResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.DeleteEventBusResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.DeletePartnerEventSourceRequestMarshaller">
            <summary>
            DeletePartnerEventSource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.DeletePartnerEventSourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.DeletePartnerEventSourceRequestMarshaller.Marshall(Amazon.EventBridge.Model.DeletePartnerEventSourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.DeletePartnerEventSourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.DeletePartnerEventSourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeletePartnerEventSource operation
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.DeletePartnerEventSourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.DeletePartnerEventSourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.DeletePartnerEventSourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.DeleteRuleRequestMarshaller">
            <summary>
            DeleteRule Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.DeleteRuleRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.DeleteRuleRequestMarshaller.Marshall(Amazon.EventBridge.Model.DeleteRuleRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.DeleteRuleRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.DeleteRuleResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteRule operation
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.DeleteRuleResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.DeleteRuleResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.DeleteRuleResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.DescribeApiDestinationRequestMarshaller">
            <summary>
            DescribeApiDestination Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.DescribeApiDestinationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.DescribeApiDestinationRequestMarshaller.Marshall(Amazon.EventBridge.Model.DescribeApiDestinationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.DescribeApiDestinationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.DescribeApiDestinationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeApiDestination operation
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.DescribeApiDestinationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.DescribeApiDestinationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.DescribeApiDestinationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.DescribeArchiveRequestMarshaller">
            <summary>
            DescribeArchive Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.DescribeArchiveRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.DescribeArchiveRequestMarshaller.Marshall(Amazon.EventBridge.Model.DescribeArchiveRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.DescribeArchiveRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.DescribeArchiveResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeArchive operation
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.DescribeArchiveResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.DescribeArchiveResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.DescribeArchiveResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.DescribeConnectionRequestMarshaller">
            <summary>
            DescribeConnection Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.DescribeConnectionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.DescribeConnectionRequestMarshaller.Marshall(Amazon.EventBridge.Model.DescribeConnectionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.DescribeConnectionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.DescribeConnectionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeConnection operation
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.DescribeConnectionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.DescribeConnectionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.DescribeConnectionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.DescribeEventBusRequestMarshaller">
            <summary>
            DescribeEventBus Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.DescribeEventBusRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.DescribeEventBusRequestMarshaller.Marshall(Amazon.EventBridge.Model.DescribeEventBusRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.DescribeEventBusRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.DescribeEventBusResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeEventBus operation
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.DescribeEventBusResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.DescribeEventBusResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.DescribeEventBusResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.DescribeEventSourceRequestMarshaller">
            <summary>
            DescribeEventSource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.DescribeEventSourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.DescribeEventSourceRequestMarshaller.Marshall(Amazon.EventBridge.Model.DescribeEventSourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.DescribeEventSourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.DescribeEventSourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeEventSource operation
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.DescribeEventSourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.DescribeEventSourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.DescribeEventSourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.DescribePartnerEventSourceRequestMarshaller">
            <summary>
            DescribePartnerEventSource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.DescribePartnerEventSourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.DescribePartnerEventSourceRequestMarshaller.Marshall(Amazon.EventBridge.Model.DescribePartnerEventSourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.DescribePartnerEventSourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.DescribePartnerEventSourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribePartnerEventSource operation
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.DescribePartnerEventSourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.DescribePartnerEventSourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.DescribePartnerEventSourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.DescribeReplayRequestMarshaller">
            <summary>
            DescribeReplay Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.DescribeReplayRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.DescribeReplayRequestMarshaller.Marshall(Amazon.EventBridge.Model.DescribeReplayRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.DescribeReplayRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.DescribeReplayResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeReplay operation
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.DescribeReplayResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.DescribeReplayResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.DescribeReplayResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.DescribeRuleRequestMarshaller">
            <summary>
            DescribeRule Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.DescribeRuleRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.DescribeRuleRequestMarshaller.Marshall(Amazon.EventBridge.Model.DescribeRuleRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.DescribeRuleRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.DescribeRuleResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeRule operation
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.DescribeRuleResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.DescribeRuleResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.DescribeRuleResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.DisableRuleRequestMarshaller">
            <summary>
            DisableRule Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.DisableRuleRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.DisableRuleRequestMarshaller.Marshall(Amazon.EventBridge.Model.DisableRuleRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.DisableRuleRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.DisableRuleResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DisableRule operation
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.DisableRuleResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.DisableRuleResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.DisableRuleResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.EcsParametersMarshaller">
            <summary>
            EcsParameters Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.EcsParametersMarshaller.Marshall(Amazon.EventBridge.Model.EcsParameters,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EventBridge.Model.Internal.MarshallTransformations.EcsParametersMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.EcsParametersUnmarshaller">
            <summary>
            Response Unmarshaller for EcsParameters Object
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.EcsParametersUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EventBridge#Model#EcsParameters,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.EcsParametersUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.EcsParametersUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.EnableRuleRequestMarshaller">
            <summary>
            EnableRule Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.EnableRuleRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.EnableRuleRequestMarshaller.Marshall(Amazon.EventBridge.Model.EnableRuleRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.EnableRuleRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.EnableRuleResponseUnmarshaller">
            <summary>
            Response Unmarshaller for EnableRule operation
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.EnableRuleResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.EnableRuleResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.EnableRuleResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.EventBusUnmarshaller">
            <summary>
            Response Unmarshaller for EventBus Object
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.EventBusUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EventBridge#Model#EventBus,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.EventBusUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.EventBusUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.EventSourceUnmarshaller">
            <summary>
            Response Unmarshaller for EventSource Object
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.EventSourceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EventBridge#Model#EventSource,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.EventSourceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.EventSourceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.HttpParametersMarshaller">
            <summary>
            HttpParameters Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.HttpParametersMarshaller.Marshall(Amazon.EventBridge.Model.HttpParameters,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EventBridge.Model.Internal.MarshallTransformations.HttpParametersMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.HttpParametersUnmarshaller">
            <summary>
            Response Unmarshaller for HttpParameters Object
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.HttpParametersUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EventBridge#Model#HttpParameters,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.HttpParametersUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.HttpParametersUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.IllegalStatusExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for IllegalStatusException Object
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.IllegalStatusExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.IllegalStatusExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.IllegalStatusExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.InputTransformerMarshaller">
            <summary>
            InputTransformer Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.InputTransformerMarshaller.Marshall(Amazon.EventBridge.Model.InputTransformer,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EventBridge.Model.Internal.MarshallTransformations.InputTransformerMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.InputTransformerUnmarshaller">
            <summary>
            Response Unmarshaller for InputTransformer Object
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.InputTransformerUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EventBridge#Model#InputTransformer,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.InputTransformerUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.InputTransformerUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.InternalExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InternalException Object
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.InternalExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.InternalExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.InternalExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.InvalidEventPatternExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidEventPatternException Object
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.InvalidEventPatternExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.InvalidEventPatternExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.InvalidEventPatternExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.InvalidStateExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidStateException Object
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.InvalidStateExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.InvalidStateExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.InvalidStateExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.KinesisParametersMarshaller">
            <summary>
            KinesisParameters Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.KinesisParametersMarshaller.Marshall(Amazon.EventBridge.Model.KinesisParameters,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EventBridge.Model.Internal.MarshallTransformations.KinesisParametersMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.KinesisParametersUnmarshaller">
            <summary>
            Response Unmarshaller for KinesisParameters Object
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.KinesisParametersUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EventBridge#Model#KinesisParameters,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.KinesisParametersUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.KinesisParametersUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for LimitExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListApiDestinationsRequestMarshaller">
            <summary>
            ListApiDestinations Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListApiDestinationsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListApiDestinationsRequestMarshaller.Marshall(Amazon.EventBridge.Model.ListApiDestinationsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListApiDestinationsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListApiDestinationsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListApiDestinations operation
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListApiDestinationsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListApiDestinationsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListApiDestinationsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListArchivesRequestMarshaller">
            <summary>
            ListArchives Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListArchivesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListArchivesRequestMarshaller.Marshall(Amazon.EventBridge.Model.ListArchivesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListArchivesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListArchivesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListArchives operation
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListArchivesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListArchivesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListArchivesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListConnectionsRequestMarshaller">
            <summary>
            ListConnections Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListConnectionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListConnectionsRequestMarshaller.Marshall(Amazon.EventBridge.Model.ListConnectionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListConnectionsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListConnectionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListConnections operation
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListConnectionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListConnectionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListConnectionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListEventBusesRequestMarshaller">
            <summary>
            ListEventBuses Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListEventBusesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListEventBusesRequestMarshaller.Marshall(Amazon.EventBridge.Model.ListEventBusesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListEventBusesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListEventBusesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListEventBuses operation
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListEventBusesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListEventBusesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListEventBusesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListEventSourcesRequestMarshaller">
            <summary>
            ListEventSources Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListEventSourcesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListEventSourcesRequestMarshaller.Marshall(Amazon.EventBridge.Model.ListEventSourcesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListEventSourcesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListEventSourcesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListEventSources operation
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListEventSourcesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListEventSourcesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListEventSourcesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListPartnerEventSourceAccountsRequestMarshaller">
            <summary>
            ListPartnerEventSourceAccounts Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListPartnerEventSourceAccountsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListPartnerEventSourceAccountsRequestMarshaller.Marshall(Amazon.EventBridge.Model.ListPartnerEventSourceAccountsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListPartnerEventSourceAccountsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListPartnerEventSourceAccountsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListPartnerEventSourceAccounts operation
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListPartnerEventSourceAccountsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListPartnerEventSourceAccountsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListPartnerEventSourceAccountsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListPartnerEventSourcesRequestMarshaller">
            <summary>
            ListPartnerEventSources Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListPartnerEventSourcesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListPartnerEventSourcesRequestMarshaller.Marshall(Amazon.EventBridge.Model.ListPartnerEventSourcesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListPartnerEventSourcesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListPartnerEventSourcesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListPartnerEventSources operation
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListPartnerEventSourcesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListPartnerEventSourcesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListPartnerEventSourcesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListReplaysRequestMarshaller">
            <summary>
            ListReplays Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListReplaysRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListReplaysRequestMarshaller.Marshall(Amazon.EventBridge.Model.ListReplaysRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListReplaysRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListReplaysResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListReplays operation
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListReplaysResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListReplaysResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListReplaysResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListRuleNamesByTargetRequestMarshaller">
            <summary>
            ListRuleNamesByTarget Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListRuleNamesByTargetRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListRuleNamesByTargetRequestMarshaller.Marshall(Amazon.EventBridge.Model.ListRuleNamesByTargetRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListRuleNamesByTargetRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListRuleNamesByTargetResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListRuleNamesByTarget operation
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListRuleNamesByTargetResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListRuleNamesByTargetResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListRuleNamesByTargetResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListRulesRequestMarshaller">
            <summary>
            ListRules Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListRulesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListRulesRequestMarshaller.Marshall(Amazon.EventBridge.Model.ListRulesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListRulesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListRulesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListRules operation
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListRulesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListRulesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListRulesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller">
            <summary>
            ListTagsForResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.EventBridge.Model.ListTagsForResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListTagsForResource operation
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListTargetsByRuleRequestMarshaller">
            <summary>
            ListTargetsByRule Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListTargetsByRuleRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListTargetsByRuleRequestMarshaller.Marshall(Amazon.EventBridge.Model.ListTargetsByRuleRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListTargetsByRuleRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListTargetsByRuleResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListTargetsByRule operation
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListTargetsByRuleResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListTargetsByRuleResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.ListTargetsByRuleResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.ManagedRuleExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ManagedRuleException Object
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ManagedRuleExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ManagedRuleExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.ManagedRuleExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.NetworkConfigurationMarshaller">
            <summary>
            NetworkConfiguration Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.NetworkConfigurationMarshaller.Marshall(Amazon.EventBridge.Model.NetworkConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EventBridge.Model.Internal.MarshallTransformations.NetworkConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.NetworkConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for NetworkConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.NetworkConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EventBridge#Model#NetworkConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.NetworkConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.NetworkConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.OperationDisabledExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for OperationDisabledException Object
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.OperationDisabledExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.OperationDisabledExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.OperationDisabledExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.PartnerEventSourceAccountUnmarshaller">
            <summary>
            Response Unmarshaller for PartnerEventSourceAccount Object
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.PartnerEventSourceAccountUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EventBridge#Model#PartnerEventSourceAccount,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.PartnerEventSourceAccountUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.PartnerEventSourceAccountUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.PartnerEventSourceUnmarshaller">
            <summary>
            Response Unmarshaller for PartnerEventSource Object
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.PartnerEventSourceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EventBridge#Model#PartnerEventSource,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.PartnerEventSourceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.PartnerEventSourceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.PlacementConstraintMarshaller">
            <summary>
            PlacementConstraint Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.PlacementConstraintMarshaller.Marshall(Amazon.EventBridge.Model.PlacementConstraint,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EventBridge.Model.Internal.MarshallTransformations.PlacementConstraintMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.PlacementConstraintUnmarshaller">
            <summary>
            Response Unmarshaller for PlacementConstraint Object
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.PlacementConstraintUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EventBridge#Model#PlacementConstraint,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.PlacementConstraintUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.PlacementConstraintUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.PlacementStrategyMarshaller">
            <summary>
            PlacementStrategy Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.PlacementStrategyMarshaller.Marshall(Amazon.EventBridge.Model.PlacementStrategy,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EventBridge.Model.Internal.MarshallTransformations.PlacementStrategyMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.PlacementStrategyUnmarshaller">
            <summary>
            Response Unmarshaller for PlacementStrategy Object
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.PlacementStrategyUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EventBridge#Model#PlacementStrategy,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.PlacementStrategyUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.PlacementStrategyUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.PolicyLengthExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for PolicyLengthExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.PolicyLengthExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.PolicyLengthExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.PolicyLengthExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.PutEventsRequestEntryMarshaller">
            <summary>
            PutEventsRequestEntry Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.PutEventsRequestEntryMarshaller.Marshall(Amazon.EventBridge.Model.PutEventsRequestEntry,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EventBridge.Model.Internal.MarshallTransformations.PutEventsRequestEntryMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.PutEventsRequestMarshaller">
            <summary>
            PutEvents Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.PutEventsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.PutEventsRequestMarshaller.Marshall(Amazon.EventBridge.Model.PutEventsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.PutEventsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.PutEventsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutEvents operation
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.PutEventsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.PutEventsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.PutEventsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.PutEventsResultEntryUnmarshaller">
            <summary>
            Response Unmarshaller for PutEventsResultEntry Object
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.PutEventsResultEntryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EventBridge#Model#PutEventsResultEntry,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.PutEventsResultEntryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.PutEventsResultEntryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.PutPartnerEventsRequestEntryMarshaller">
            <summary>
            PutPartnerEventsRequestEntry Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.PutPartnerEventsRequestEntryMarshaller.Marshall(Amazon.EventBridge.Model.PutPartnerEventsRequestEntry,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EventBridge.Model.Internal.MarshallTransformations.PutPartnerEventsRequestEntryMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.PutPartnerEventsRequestMarshaller">
            <summary>
            PutPartnerEvents Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.PutPartnerEventsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.PutPartnerEventsRequestMarshaller.Marshall(Amazon.EventBridge.Model.PutPartnerEventsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.PutPartnerEventsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.PutPartnerEventsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutPartnerEvents operation
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.PutPartnerEventsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.PutPartnerEventsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.PutPartnerEventsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.PutPartnerEventsResultEntryUnmarshaller">
            <summary>
            Response Unmarshaller for PutPartnerEventsResultEntry Object
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.PutPartnerEventsResultEntryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EventBridge#Model#PutPartnerEventsResultEntry,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.PutPartnerEventsResultEntryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.PutPartnerEventsResultEntryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.PutPermissionRequestMarshaller">
            <summary>
            PutPermission Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.PutPermissionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.PutPermissionRequestMarshaller.Marshall(Amazon.EventBridge.Model.PutPermissionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.PutPermissionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.PutPermissionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutPermission operation
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.PutPermissionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.PutPermissionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.PutPermissionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.PutRuleRequestMarshaller">
            <summary>
            PutRule Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.PutRuleRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.PutRuleRequestMarshaller.Marshall(Amazon.EventBridge.Model.PutRuleRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.PutRuleRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.PutRuleResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutRule operation
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.PutRuleResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.PutRuleResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.PutRuleResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.PutTargetsRequestMarshaller">
            <summary>
            PutTargets Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.PutTargetsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.PutTargetsRequestMarshaller.Marshall(Amazon.EventBridge.Model.PutTargetsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.PutTargetsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.PutTargetsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutTargets operation
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.PutTargetsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.PutTargetsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.PutTargetsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.PutTargetsResultEntryUnmarshaller">
            <summary>
            Response Unmarshaller for PutTargetsResultEntry Object
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.PutTargetsResultEntryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EventBridge#Model#PutTargetsResultEntry,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.PutTargetsResultEntryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.PutTargetsResultEntryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.RedshiftDataParametersMarshaller">
            <summary>
            RedshiftDataParameters Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.RedshiftDataParametersMarshaller.Marshall(Amazon.EventBridge.Model.RedshiftDataParameters,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EventBridge.Model.Internal.MarshallTransformations.RedshiftDataParametersMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.RedshiftDataParametersUnmarshaller">
            <summary>
            Response Unmarshaller for RedshiftDataParameters Object
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.RedshiftDataParametersUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EventBridge#Model#RedshiftDataParameters,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.RedshiftDataParametersUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.RedshiftDataParametersUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.RemovePermissionRequestMarshaller">
            <summary>
            RemovePermission Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.RemovePermissionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.RemovePermissionRequestMarshaller.Marshall(Amazon.EventBridge.Model.RemovePermissionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.RemovePermissionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.RemovePermissionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RemovePermission operation
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.RemovePermissionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.RemovePermissionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.RemovePermissionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.RemoveTargetsRequestMarshaller">
            <summary>
            RemoveTargets Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.RemoveTargetsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.RemoveTargetsRequestMarshaller.Marshall(Amazon.EventBridge.Model.RemoveTargetsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.RemoveTargetsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.RemoveTargetsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RemoveTargets operation
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.RemoveTargetsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.RemoveTargetsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.RemoveTargetsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.RemoveTargetsResultEntryUnmarshaller">
            <summary>
            Response Unmarshaller for RemoveTargetsResultEntry Object
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.RemoveTargetsResultEntryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EventBridge#Model#RemoveTargetsResultEntry,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.RemoveTargetsResultEntryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.RemoveTargetsResultEntryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.ReplayDestinationMarshaller">
            <summary>
            ReplayDestination Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ReplayDestinationMarshaller.Marshall(Amazon.EventBridge.Model.ReplayDestination,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EventBridge.Model.Internal.MarshallTransformations.ReplayDestinationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.ReplayDestinationUnmarshaller">
            <summary>
            Response Unmarshaller for ReplayDestination Object
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ReplayDestinationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EventBridge#Model#ReplayDestination,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ReplayDestinationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.ReplayDestinationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.ReplayUnmarshaller">
            <summary>
            Response Unmarshaller for Replay Object
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ReplayUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EventBridge#Model#Replay,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ReplayUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.ReplayUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.ResourceAlreadyExistsExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceAlreadyExistsException Object
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ResourceAlreadyExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ResourceAlreadyExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.ResourceAlreadyExistsExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.RetryPolicyMarshaller">
            <summary>
            RetryPolicy Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.RetryPolicyMarshaller.Marshall(Amazon.EventBridge.Model.RetryPolicy,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EventBridge.Model.Internal.MarshallTransformations.RetryPolicyMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.RetryPolicyUnmarshaller">
            <summary>
            Response Unmarshaller for RetryPolicy Object
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.RetryPolicyUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EventBridge#Model#RetryPolicy,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.RetryPolicyUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.RetryPolicyUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.RuleUnmarshaller">
            <summary>
            Response Unmarshaller for Rule Object
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.RuleUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EventBridge#Model#Rule,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.RuleUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.RuleUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.RunCommandParametersMarshaller">
            <summary>
            RunCommandParameters Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.RunCommandParametersMarshaller.Marshall(Amazon.EventBridge.Model.RunCommandParameters,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EventBridge.Model.Internal.MarshallTransformations.RunCommandParametersMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.RunCommandParametersUnmarshaller">
            <summary>
            Response Unmarshaller for RunCommandParameters Object
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.RunCommandParametersUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EventBridge#Model#RunCommandParameters,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.RunCommandParametersUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.RunCommandParametersUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.RunCommandTargetMarshaller">
            <summary>
            RunCommandTarget Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.RunCommandTargetMarshaller.Marshall(Amazon.EventBridge.Model.RunCommandTarget,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EventBridge.Model.Internal.MarshallTransformations.RunCommandTargetMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.RunCommandTargetUnmarshaller">
            <summary>
            Response Unmarshaller for RunCommandTarget Object
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.RunCommandTargetUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EventBridge#Model#RunCommandTarget,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.RunCommandTargetUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.RunCommandTargetUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.SageMakerPipelineParameterMarshaller">
            <summary>
            SageMakerPipelineParameter Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.SageMakerPipelineParameterMarshaller.Marshall(Amazon.EventBridge.Model.SageMakerPipelineParameter,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EventBridge.Model.Internal.MarshallTransformations.SageMakerPipelineParameterMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.SageMakerPipelineParametersMarshaller">
            <summary>
            SageMakerPipelineParameters Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.SageMakerPipelineParametersMarshaller.Marshall(Amazon.EventBridge.Model.SageMakerPipelineParameters,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EventBridge.Model.Internal.MarshallTransformations.SageMakerPipelineParametersMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.SageMakerPipelineParametersUnmarshaller">
            <summary>
            Response Unmarshaller for SageMakerPipelineParameters Object
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.SageMakerPipelineParametersUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EventBridge#Model#SageMakerPipelineParameters,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.SageMakerPipelineParametersUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.SageMakerPipelineParametersUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.SageMakerPipelineParameterUnmarshaller">
            <summary>
            Response Unmarshaller for SageMakerPipelineParameter Object
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.SageMakerPipelineParameterUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EventBridge#Model#SageMakerPipelineParameter,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.SageMakerPipelineParameterUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.SageMakerPipelineParameterUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.SqsParametersMarshaller">
            <summary>
            SqsParameters Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.SqsParametersMarshaller.Marshall(Amazon.EventBridge.Model.SqsParameters,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EventBridge.Model.Internal.MarshallTransformations.SqsParametersMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.SqsParametersUnmarshaller">
            <summary>
            Response Unmarshaller for SqsParameters Object
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.SqsParametersUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EventBridge#Model#SqsParameters,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.SqsParametersUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.SqsParametersUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.StartReplayRequestMarshaller">
            <summary>
            StartReplay Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.StartReplayRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.StartReplayRequestMarshaller.Marshall(Amazon.EventBridge.Model.StartReplayRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.StartReplayRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.StartReplayResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StartReplay operation
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.StartReplayResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.StartReplayResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.StartReplayResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.TagMarshaller">
            <summary>
            Tag Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.TagMarshaller.Marshall(Amazon.EventBridge.Model.Tag,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EventBridge.Model.Internal.MarshallTransformations.TagMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller">
            <summary>
            TagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.EventBridge.Model.TagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for TagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.TagUnmarshaller">
            <summary>
            Response Unmarshaller for Tag Object
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.TagUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EventBridge#Model#Tag,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.TagUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.TagUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.TargetMarshaller">
            <summary>
            Target Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.TargetMarshaller.Marshall(Amazon.EventBridge.Model.Target,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EventBridge.Model.Internal.MarshallTransformations.TargetMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.TargetUnmarshaller">
            <summary>
            Response Unmarshaller for Target Object
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.TargetUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EventBridge#Model#Target,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.TargetUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.TargetUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.TestEventPatternRequestMarshaller">
            <summary>
            TestEventPattern Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.TestEventPatternRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.TestEventPatternRequestMarshaller.Marshall(Amazon.EventBridge.Model.TestEventPatternRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.TestEventPatternRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.TestEventPatternResponseUnmarshaller">
            <summary>
            Response Unmarshaller for TestEventPattern operation
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.TestEventPatternResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.TestEventPatternResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.TestEventPatternResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller">
            <summary>
            UntagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.EventBridge.Model.UntagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UntagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.UpdateApiDestinationRequestMarshaller">
            <summary>
            UpdateApiDestination Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.UpdateApiDestinationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.UpdateApiDestinationRequestMarshaller.Marshall(Amazon.EventBridge.Model.UpdateApiDestinationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.UpdateApiDestinationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.UpdateApiDestinationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateApiDestination operation
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.UpdateApiDestinationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.UpdateApiDestinationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.UpdateApiDestinationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.UpdateArchiveRequestMarshaller">
            <summary>
            UpdateArchive Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.UpdateArchiveRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.UpdateArchiveRequestMarshaller.Marshall(Amazon.EventBridge.Model.UpdateArchiveRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.UpdateArchiveRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.UpdateArchiveResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateArchive operation
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.UpdateArchiveResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.UpdateArchiveResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.UpdateArchiveResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.UpdateConnectionApiKeyAuthRequestParametersMarshaller">
            <summary>
            UpdateConnectionApiKeyAuthRequestParameters Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.UpdateConnectionApiKeyAuthRequestParametersMarshaller.Marshall(Amazon.EventBridge.Model.UpdateConnectionApiKeyAuthRequestParameters,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EventBridge.Model.Internal.MarshallTransformations.UpdateConnectionApiKeyAuthRequestParametersMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.UpdateConnectionAuthRequestParametersMarshaller">
            <summary>
            UpdateConnectionAuthRequestParameters Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.UpdateConnectionAuthRequestParametersMarshaller.Marshall(Amazon.EventBridge.Model.UpdateConnectionAuthRequestParameters,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EventBridge.Model.Internal.MarshallTransformations.UpdateConnectionAuthRequestParametersMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.UpdateConnectionBasicAuthRequestParametersMarshaller">
            <summary>
            UpdateConnectionBasicAuthRequestParameters Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.UpdateConnectionBasicAuthRequestParametersMarshaller.Marshall(Amazon.EventBridge.Model.UpdateConnectionBasicAuthRequestParameters,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EventBridge.Model.Internal.MarshallTransformations.UpdateConnectionBasicAuthRequestParametersMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.UpdateConnectionOAuthClientRequestParametersMarshaller">
            <summary>
            UpdateConnectionOAuthClientRequestParameters Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.UpdateConnectionOAuthClientRequestParametersMarshaller.Marshall(Amazon.EventBridge.Model.UpdateConnectionOAuthClientRequestParameters,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EventBridge.Model.Internal.MarshallTransformations.UpdateConnectionOAuthClientRequestParametersMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.UpdateConnectionOAuthRequestParametersMarshaller">
            <summary>
            UpdateConnectionOAuthRequestParameters Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.UpdateConnectionOAuthRequestParametersMarshaller.Marshall(Amazon.EventBridge.Model.UpdateConnectionOAuthRequestParameters,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EventBridge.Model.Internal.MarshallTransformations.UpdateConnectionOAuthRequestParametersMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.UpdateConnectionRequestMarshaller">
            <summary>
            UpdateConnection Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.UpdateConnectionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.UpdateConnectionRequestMarshaller.Marshall(Amazon.EventBridge.Model.UpdateConnectionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.UpdateConnectionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.Internal.MarshallTransformations.UpdateConnectionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateConnection operation
            </summary>  
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.UpdateConnectionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EventBridge.Model.Internal.MarshallTransformations.UpdateConnectionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EventBridge.Model.Internal.MarshallTransformations.UpdateConnectionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EventBridge.Model.InvalidEventPatternException">
            <summary>
            The event pattern is not valid.
            </summary>
        </member>
        <member name="M:Amazon.EventBridge.Model.InvalidEventPatternException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidEventPatternException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.EventBridge.Model.InvalidEventPatternException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidEventPatternException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EventBridge.Model.InvalidEventPatternException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidEventPatternException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EventBridge.Model.InvalidEventPatternException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidEventPatternException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.EventBridge.Model.InvalidEventPatternException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidEventPatternException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.EventBridge.Model.InvalidEventPatternException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidEventPatternException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.EventBridge.Model.InvalidEventPatternException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.EventBridge.Model.InvalidStateException">
            <summary>
            The specified state is not a valid state for an event source.
            </summary>
        </member>
        <member name="M:Amazon.EventBridge.Model.InvalidStateException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidStateException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.EventBridge.Model.InvalidStateException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EventBridge.Model.InvalidStateException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidStateException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EventBridge.Model.InvalidStateException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.EventBridge.Model.InvalidStateException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidStateException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.EventBridge.Model.InvalidStateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidStateException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.EventBridge.Model.InvalidStateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.EventBridge.Model.KinesisParameters">
            <summary>
            This object enables you to specify a JSON path to extract from the event and use as
            the partition key for the Amazon Kinesis data stream, so that you can control the
            shard to which the event goes. If you do not include this parameter, the default is
            to use the <code>eventId</code> as the partition key.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.KinesisParameters.PartitionKeyPath">
            <summary>
            Gets and sets the property PartitionKeyPath. 
            <para>
            The JSON path to be extracted from the event and used as the partition key. For more
            information, see <a href="https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html#partition-key">Amazon
            Kinesis Streams Key Concepts</a> in the <i>Amazon Kinesis Streams Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.LimitExceededException">
            <summary>
            The request failed because it attempted to create resource beyond the allowed service
            quota.
            </summary>
        </member>
        <member name="M:Amazon.EventBridge.Model.LimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new LimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.EventBridge.Model.LimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EventBridge.Model.LimitExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EventBridge.Model.LimitExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.EventBridge.Model.LimitExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.EventBridge.Model.LimitExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the LimitExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.EventBridge.Model.LimitExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.EventBridge.Model.ListApiDestinationsRequest">
            <summary>
            Container for the parameters to the ListApiDestinations operation.
            Retrieves a list of API destination in the account in the current Region.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ListApiDestinationsRequest.ConnectionArn">
            <summary>
            Gets and sets the property ConnectionArn. 
            <para>
            The ARN of the connection specified for the API destination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ListApiDestinationsRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            The maximum number of API destinations to include in the response.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ListApiDestinationsRequest.NamePrefix">
            <summary>
            Gets and sets the property NamePrefix. 
            <para>
            A name prefix to filter results returned. Only API destinations with a name that starts
            with the prefix are returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ListApiDestinationsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token returned by a previous call to retrieve the next set of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.ListApiDestinationsResponse">
            <summary>
            This is the response object from the ListApiDestinations operation.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ListApiDestinationsResponse.ApiDestinations">
            <summary>
            Gets and sets the property ApiDestinations. 
            <para>
            An array of <code>ApiDestination</code> objects that include information about an
            API destination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ListApiDestinationsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A token you can use in a subsequent request to retrieve the next set of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.ListArchivesRequest">
            <summary>
            Container for the parameters to the ListArchives operation.
            Lists your archives. You can either list all the archives or you can provide a prefix
            to match to the archive names. Filter parameters are exclusive.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ListArchivesRequest.EventSourceArn">
            <summary>
            Gets and sets the property EventSourceArn. 
            <para>
            The ARN of the event source associated with the archive.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ListArchivesRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            The maximum number of results to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ListArchivesRequest.NamePrefix">
            <summary>
            Gets and sets the property NamePrefix. 
            <para>
            A name prefix to filter the archives returned. Only archives with name that match
            the prefix are returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ListArchivesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token returned by a previous call to retrieve the next set of results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ListArchivesRequest.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The state of the archive.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.ListArchivesResponse">
            <summary>
            This is the response object from the ListArchives operation.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ListArchivesResponse.Archives">
            <summary>
            Gets and sets the property Archives. 
            <para>
            An array of <code>Archive</code> objects that include details about an archive.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ListArchivesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token returned by a previous call to retrieve the next set of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.ListConnectionsRequest">
            <summary>
            Container for the parameters to the ListConnections operation.
            Retrieves a list of connections from the account.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ListConnectionsRequest.ConnectionState">
            <summary>
            Gets and sets the property ConnectionState. 
            <para>
            The state of the connection.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ListConnectionsRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            The maximum number of connections to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ListConnectionsRequest.NamePrefix">
            <summary>
            Gets and sets the property NamePrefix. 
            <para>
            A name prefix to filter results returned. Only connections with a name that starts
            with the prefix are returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ListConnectionsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token returned by a previous call to retrieve the next set of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.ListConnectionsResponse">
            <summary>
            This is the response object from the ListConnections operation.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ListConnectionsResponse.Connections">
            <summary>
            Gets and sets the property Connections. 
            <para>
            An array of connections objects that include details about the connections.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ListConnectionsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A token you can use in a subsequent request to retrieve the next set of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.ListEventBusesRequest">
            <summary>
            Container for the parameters to the ListEventBuses operation.
            Lists all the event buses in your account, including the default event bus, custom
            event buses, and partner event buses.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ListEventBusesRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            Specifying this limits the number of results returned by this operation. The operation
            also returns a NextToken which you can use in a subsequent operation to retrieve the
            next set of results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ListEventBusesRequest.NamePrefix">
            <summary>
            Gets and sets the property NamePrefix. 
            <para>
            Specifying this limits the results to only those event buses with names that start
            with the specified prefix.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ListEventBusesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token returned by a previous call to retrieve the next set of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.ListEventBusesResponse">
            <summary>
            This is the response object from the ListEventBuses operation.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ListEventBusesResponse.EventBuses">
            <summary>
            Gets and sets the property EventBuses. 
            <para>
            This list of event buses.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ListEventBusesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A token you can use in a subsequent operation to retrieve the next set of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.ListEventSourcesRequest">
            <summary>
            Container for the parameters to the ListEventSources operation.
            You can use this to see all the partner event sources that have been shared with your
            Amazon Web Services account. For more information about partner event sources, see
            <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_CreateEventBus.html">CreateEventBus</a>.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ListEventSourcesRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            Specifying this limits the number of results returned by this operation. The operation
            also returns a NextToken which you can use in a subsequent operation to retrieve the
            next set of results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ListEventSourcesRequest.NamePrefix">
            <summary>
            Gets and sets the property NamePrefix. 
            <para>
            Specifying this limits the results to only those partner event sources with names
            that start with the specified prefix.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ListEventSourcesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token returned by a previous call to retrieve the next set of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.ListEventSourcesResponse">
            <summary>
            This is the response object from the ListEventSources operation.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ListEventSourcesResponse.EventSources">
            <summary>
            Gets and sets the property EventSources. 
            <para>
            The list of event sources.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ListEventSourcesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A token you can use in a subsequent operation to retrieve the next set of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.ListPartnerEventSourceAccountsRequest">
            <summary>
            Container for the parameters to the ListPartnerEventSourceAccounts operation.
            An SaaS partner can use this operation to display the Amazon Web Services account
            ID that a particular partner event source name is associated with. This operation
            is not used by Amazon Web Services customers.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ListPartnerEventSourceAccountsRequest.EventSourceName">
            <summary>
            Gets and sets the property EventSourceName. 
            <para>
            The name of the partner event source to display account information about.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ListPartnerEventSourceAccountsRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            Specifying this limits the number of results returned by this operation. The operation
            also returns a NextToken which you can use in a subsequent operation to retrieve the
            next set of results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ListPartnerEventSourceAccountsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token returned by a previous call to this operation. Specifying this retrieves
            the next set of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.ListPartnerEventSourceAccountsResponse">
            <summary>
            This is the response object from the ListPartnerEventSourceAccounts operation.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ListPartnerEventSourceAccountsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A token you can use in a subsequent operation to retrieve the next set of results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ListPartnerEventSourceAccountsResponse.PartnerEventSourceAccounts">
            <summary>
            Gets and sets the property PartnerEventSourceAccounts. 
            <para>
            The list of partner event sources returned by the operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.ListPartnerEventSourcesRequest">
            <summary>
            Container for the parameters to the ListPartnerEventSources operation.
            An SaaS partner can use this operation to list all the partner event source names
            that they have created. This operation is not used by Amazon Web Services customers.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ListPartnerEventSourcesRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            pecifying this limits the number of results returned by this operation. The operation
            also returns a NextToken which you can use in a subsequent operation to retrieve the
            next set of results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ListPartnerEventSourcesRequest.NamePrefix">
            <summary>
            Gets and sets the property NamePrefix. 
            <para>
            If you specify this, the results are limited to only those partner event sources that
            start with the string you specify.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ListPartnerEventSourcesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token returned by a previous call to this operation. Specifying this retrieves
            the next set of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.ListPartnerEventSourcesResponse">
            <summary>
            This is the response object from the ListPartnerEventSources operation.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ListPartnerEventSourcesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A token you can use in a subsequent operation to retrieve the next set of results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ListPartnerEventSourcesResponse.PartnerEventSources">
            <summary>
            Gets and sets the property PartnerEventSources. 
            <para>
            The list of partner event sources returned by the operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.ListReplaysRequest">
            <summary>
            Container for the parameters to the ListReplays operation.
            Lists your replays. You can either list all the replays or you can provide a prefix
            to match to the replay names. Filter parameters are exclusive.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ListReplaysRequest.EventSourceArn">
            <summary>
            Gets and sets the property EventSourceArn. 
            <para>
            The ARN of the archive from which the events are replayed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ListReplaysRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            The maximum number of replays to retrieve.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ListReplaysRequest.NamePrefix">
            <summary>
            Gets and sets the property NamePrefix. 
            <para>
            A name prefix to filter the replays returned. Only replays with name that match the
            prefix are returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ListReplaysRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token returned by a previous call to retrieve the next set of results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ListReplaysRequest.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The state of the replay.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.ListReplaysResponse">
            <summary>
            This is the response object from the ListReplays operation.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ListReplaysResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token returned by a previous call to retrieve the next set of results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ListReplaysResponse.Replays">
            <summary>
            Gets and sets the property Replays. 
            <para>
            An array of <code>Replay</code> objects that contain information about the replay.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.ListRuleNamesByTargetRequest">
            <summary>
            Container for the parameters to the ListRuleNamesByTarget operation.
            Lists the rules for the specified target. You can see which of the rules in Amazon
            EventBridge can invoke a specific target in your account.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ListRuleNamesByTargetRequest.EventBusName">
            <summary>
            Gets and sets the property EventBusName. 
            <para>
            The name or ARN of the event bus to list rules for. If you omit this, the default
            event bus is used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ListRuleNamesByTargetRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            The maximum number of results to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ListRuleNamesByTargetRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token returned by a previous call to retrieve the next set of results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ListRuleNamesByTargetRequest.TargetArn">
            <summary>
            Gets and sets the property TargetArn. 
            <para>
            The Amazon Resource Name (ARN) of the target resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.ListRuleNamesByTargetResponse">
            <summary>
            This is the response object from the ListRuleNamesByTarget operation.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ListRuleNamesByTargetResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Indicates whether there are additional results to retrieve. If there are no more results,
            the value is null.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ListRuleNamesByTargetResponse.RuleNames">
            <summary>
            Gets and sets the property RuleNames. 
            <para>
            The names of the rules that can invoke the given target.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.ListRulesRequest">
            <summary>
            Container for the parameters to the ListRules operation.
            Lists your Amazon EventBridge rules. You can either list all the rules or you can
            provide a prefix to match to the rule names.
            
             
            <para>
            ListRules does not list the targets of a rule. To see the targets associated with
            a rule, use <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_ListTargetsByRule.html">ListTargetsByRule</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ListRulesRequest.EventBusName">
            <summary>
            Gets and sets the property EventBusName. 
            <para>
            The name or ARN of the event bus to list the rules for. If you omit this, the default
            event bus is used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ListRulesRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            The maximum number of results to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ListRulesRequest.NamePrefix">
            <summary>
            Gets and sets the property NamePrefix. 
            <para>
            The prefix matching the rule name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ListRulesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token returned by a previous call to retrieve the next set of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.ListRulesResponse">
            <summary>
            This is the response object from the ListRules operation.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ListRulesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Indicates whether there are additional results to retrieve. If there are no more results,
            the value is null.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ListRulesResponse.Rules">
            <summary>
            Gets and sets the property Rules. 
            <para>
            The rules that match the specified criteria.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.ListTagsForResourceRequest">
            <summary>
            Container for the parameters to the ListTagsForResource operation.
            Displays the tags associated with an EventBridge resource. In EventBridge, rules and
            event buses can be tagged.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ListTagsForResourceRequest.ResourceARN">
            <summary>
            Gets and sets the property ResourceARN. 
            <para>
            The ARN of the EventBridge resource for which you want to view tags.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.ListTagsForResourceResponse">
            <summary>
            This is the response object from the ListTagsForResource operation.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ListTagsForResourceResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The list of tag keys and values associated with the resource you specified
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.ListTargetsByRuleRequest">
            <summary>
            Container for the parameters to the ListTargetsByRule operation.
            Lists the targets assigned to the specified rule.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ListTargetsByRuleRequest.EventBusName">
            <summary>
            Gets and sets the property EventBusName. 
            <para>
            The name or ARN of the event bus associated with the rule. If you omit this, the default
            event bus is used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ListTargetsByRuleRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            The maximum number of results to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ListTargetsByRuleRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token returned by a previous call to retrieve the next set of results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ListTargetsByRuleRequest.Rule">
            <summary>
            Gets and sets the property Rule. 
            <para>
            The name of the rule.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.ListTargetsByRuleResponse">
            <summary>
            This is the response object from the ListTargetsByRule operation.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ListTargetsByRuleResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Indicates whether there are additional results to retrieve. If there are no more results,
            the value is null.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ListTargetsByRuleResponse.Targets">
            <summary>
            Gets and sets the property Targets. 
            <para>
            The targets assigned to the rule.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.ManagedRuleException">
            <summary>
            This rule was created by an Amazon Web Services service on behalf of your account.
            It is managed by that service. If you see this error in response to <code>DeleteRule</code>
            or <code>RemoveTargets</code>, you can use the <code>Force</code> parameter in those
            calls to delete the rule or remove targets from the rule. You cannot modify these
            managed rules by using <code>DisableRule</code>, <code>EnableRule</code>, <code>PutTargets</code>,
            <code>PutRule</code>, <code>TagResource</code>, or <code>UntagResource</code>.
            </summary>
        </member>
        <member name="M:Amazon.EventBridge.Model.ManagedRuleException.#ctor(System.String)">
            <summary>
            Constructs a new ManagedRuleException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.EventBridge.Model.ManagedRuleException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ManagedRuleException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EventBridge.Model.ManagedRuleException.#ctor(System.Exception)">
            <summary>
            Construct instance of ManagedRuleException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EventBridge.Model.ManagedRuleException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ManagedRuleException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.EventBridge.Model.ManagedRuleException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ManagedRuleException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.EventBridge.Model.ManagedRuleException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ManagedRuleException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.EventBridge.Model.ManagedRuleException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.EventBridge.Model.NetworkConfiguration">
            <summary>
            This structure specifies the network configuration for an ECS task.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.NetworkConfiguration.AwsvpcConfiguration">
            <summary>
            Gets and sets the property AwsvpcConfiguration. 
            <para>
            Use this structure to specify the VPC subnets and security groups for the task, and
            whether a public IP address is to be used. This structure is relevant only for ECS
            tasks that use the <code>awsvpc</code> network mode.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.OperationDisabledException">
            <summary>
            The operation you are attempting is not available in this region.
            </summary>
        </member>
        <member name="M:Amazon.EventBridge.Model.OperationDisabledException.#ctor(System.String)">
            <summary>
            Constructs a new OperationDisabledException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.EventBridge.Model.OperationDisabledException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of OperationDisabledException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EventBridge.Model.OperationDisabledException.#ctor(System.Exception)">
            <summary>
            Construct instance of OperationDisabledException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EventBridge.Model.OperationDisabledException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of OperationDisabledException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.EventBridge.Model.OperationDisabledException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of OperationDisabledException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.EventBridge.Model.OperationDisabledException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the OperationDisabledException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.EventBridge.Model.OperationDisabledException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.EventBridge.Model.PartnerEventSource">
            <summary>
            A partner event source is created by an SaaS partner. If a customer creates a partner
            event bus that matches this event source, that Amazon Web Services account can receive
            events from the partner's applications or services.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.PartnerEventSource.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The ARN of the partner event source.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.PartnerEventSource.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the partner event source.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.PartnerEventSourceAccount">
            <summary>
            The Amazon Web Services account that a partner event source has been offered to.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.PartnerEventSourceAccount.Account">
            <summary>
            Gets and sets the property Account. 
            <para>
            The Amazon Web Services account ID that the partner event source was offered to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.PartnerEventSourceAccount.CreationTime">
            <summary>
            Gets and sets the property CreationTime. 
            <para>
            The date and time the event source was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.PartnerEventSourceAccount.ExpirationTime">
            <summary>
            Gets and sets the property ExpirationTime. 
            <para>
            The date and time that the event source will expire, if the Amazon Web Services account
            doesn't create a matching event bus for it.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.PartnerEventSourceAccount.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The state of the event source. If it is ACTIVE, you have already created a matching
            event bus for this event source, and that event bus is active. If it is PENDING, either
            you haven't yet created a matching event bus, or that event bus is deactivated. If
            it is DELETED, you have created a matching event bus, but the event source has since
            been deleted.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.PlacementConstraint">
            <summary>
            An object representing a constraint on task placement. To learn more, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-constraints.html">Task
            Placement Constraints</a> in the Amazon Elastic Container Service Developer Guide.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.PlacementConstraint.Expression">
            <summary>
            Gets and sets the property Expression. 
            <para>
            A cluster query language expression to apply to the constraint. You cannot specify
            an expression if the constraint type is <code>distinctInstance</code>. To learn more,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cluster-query-language.html">Cluster
            Query Language</a> in the Amazon Elastic Container Service Developer Guide. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.PlacementConstraint.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of constraint. Use distinctInstance to ensure that each task in a particular
            group is running on a different container instance. Use memberOf to restrict the selection
            to a group of valid candidates. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.PlacementStrategy">
            <summary>
            The task placement strategy for a task or service. To learn more, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-strategies.html">Task
            Placement Strategies</a> in the Amazon Elastic Container Service Service Developer
            Guide.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.PlacementStrategy.Field">
            <summary>
            Gets and sets the property Field. 
            <para>
            The field to apply the placement strategy against. For the spread placement strategy,
            valid values are instanceId (or host, which has the same effect), or any platform
            or custom attribute that is applied to a container instance, such as attribute:ecs.availability-zone.
            For the binpack placement strategy, valid values are cpu and memory. For the random
            placement strategy, this field is not used. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.PlacementStrategy.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of placement strategy. The random placement strategy randomly places tasks
            on available candidates. The spread placement strategy spreads placement across available
            candidates evenly based on the field parameter. The binpack strategy places tasks
            on available candidates that have the least available amount of the resource that
            is specified with the field parameter. For example, if you binpack on memory, a task
            is placed on the instance with the least amount of remaining memory (but still enough
            to run the task). 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.PolicyLengthExceededException">
            <summary>
            The event bus policy is too long. For more information, see the limits.
            </summary>
        </member>
        <member name="M:Amazon.EventBridge.Model.PolicyLengthExceededException.#ctor(System.String)">
            <summary>
            Constructs a new PolicyLengthExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.EventBridge.Model.PolicyLengthExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of PolicyLengthExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EventBridge.Model.PolicyLengthExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of PolicyLengthExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EventBridge.Model.PolicyLengthExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of PolicyLengthExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.EventBridge.Model.PolicyLengthExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of PolicyLengthExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.EventBridge.Model.PolicyLengthExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the PolicyLengthExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.EventBridge.Model.PolicyLengthExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.EventBridge.Model.PutEventsRequest">
            <summary>
            Container for the parameters to the PutEvents operation.
            Sends custom events to Amazon EventBridge so that they can be matched to rules.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.PutEventsRequest.Entries">
            <summary>
            Gets and sets the property Entries. 
            <para>
            The entry that defines an event in your system. You can specify several parameters
            for the entry such as the source and type of the event, resources associated with
            the event, and so on.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.PutEventsRequestEntry">
            <summary>
            Represents an event to be submitted.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.PutEventsRequestEntry.Detail">
            <summary>
            Gets and sets the property Detail. 
            <para>
            A valid JSON string. There is no other schema imposed. The JSON string may contain
            fields and nested subobjects.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.PutEventsRequestEntry.DetailType">
            <summary>
            Gets and sets the property DetailType. 
            <para>
            Free-form string used to decide what fields to expect in the event detail.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.PutEventsRequestEntry.EventBusName">
            <summary>
            Gets and sets the property EventBusName. 
            <para>
            The name or ARN of the event bus to receive the event. Only the rules that are associated
            with this event bus are used to match the event. If you omit this, the default event
            bus is used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.PutEventsRequestEntry.Resources">
            <summary>
            Gets and sets the property Resources. 
            <para>
            Amazon Web Services resources, identified by Amazon Resource Name (ARN), which the
            event primarily concerns. Any number, including zero, may be present.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.PutEventsRequestEntry.Source">
            <summary>
            Gets and sets the property Source. 
            <para>
            The source of the event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.PutEventsRequestEntry.Time">
            <summary>
            Gets and sets the property Time. 
            <para>
            The time stamp of the event, per <a href="https://www.rfc-editor.org/rfc/rfc3339.txt">RFC3339</a>.
            If no time stamp is provided, the time stamp of the <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_PutEvents.html">PutEvents</a>
            call is used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.PutEventsRequestEntry.TraceHeader">
            <summary>
            Gets and sets the property TraceHeader. 
            <para>
            An X-Ray trade header, which is an http header (X-Amzn-Trace-Id) that contains the
            trace-id associated with the event.
            </para>
             
            <para>
            To learn more about X-Ray trace headers, see <a href="https://docs.aws.amazon.com/xray/latest/devguide/xray-concepts.html#xray-concepts-tracingheader">Tracing
            header</a> in the X-Ray Developer Guide.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.PutEventsResponse">
            <summary>
            This is the response object from the PutEvents operation.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.PutEventsResponse.Entries">
            <summary>
            Gets and sets the property Entries. 
            <para>
            The successfully and unsuccessfully ingested events results. If the ingestion was
            successful, the entry has the event ID in it. Otherwise, you can use the error code
            and error message to identify the problem with the entry.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.PutEventsResponse.FailedEntryCount">
            <summary>
            Gets and sets the property FailedEntryCount. 
            <para>
            The number of failed entries.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.PutEventsResultEntry">
            <summary>
            Represents an event that failed to be submitted.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.PutEventsResultEntry.ErrorCode">
            <summary>
            Gets and sets the property ErrorCode. 
            <para>
            The error code that indicates why the event submission failed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.PutEventsResultEntry.ErrorMessage">
            <summary>
            Gets and sets the property ErrorMessage. 
            <para>
            The error message that explains why the event submission failed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.PutEventsResultEntry.EventId">
            <summary>
            Gets and sets the property EventId. 
            <para>
            The ID of the event.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.PutPartnerEventsRequest">
            <summary>
            Container for the parameters to the PutPartnerEvents operation.
            This is used by SaaS partners to write events to a customer's partner event bus. Amazon
            Web Services customers do not use this operation.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.PutPartnerEventsRequest.Entries">
            <summary>
            Gets and sets the property Entries. 
            <para>
            The list of events to write to the event bus.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.PutPartnerEventsRequestEntry">
            <summary>
            The details about an event generated by an SaaS partner.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.PutPartnerEventsRequestEntry.Detail">
            <summary>
            Gets and sets the property Detail. 
            <para>
            A valid JSON string. There is no other schema imposed. The JSON string may contain
            fields and nested subobjects.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.PutPartnerEventsRequestEntry.DetailType">
            <summary>
            Gets and sets the property DetailType. 
            <para>
            A free-form string used to decide what fields to expect in the event detail.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.PutPartnerEventsRequestEntry.Resources">
            <summary>
            Gets and sets the property Resources. 
            <para>
            Amazon Web Services resources, identified by Amazon Resource Name (ARN), which the
            event primarily concerns. Any number, including zero, may be present.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.PutPartnerEventsRequestEntry.Source">
            <summary>
            Gets and sets the property Source. 
            <para>
            The event source that is generating the entry.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.PutPartnerEventsRequestEntry.Time">
            <summary>
            Gets and sets the property Time. 
            <para>
            The date and time of the event.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.PutPartnerEventsResponse">
            <summary>
            This is the response object from the PutPartnerEvents operation.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.PutPartnerEventsResponse.Entries">
            <summary>
            Gets and sets the property Entries. 
            <para>
            The list of events from this operation that were successfully written to the partner
            event bus.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.PutPartnerEventsResponse.FailedEntryCount">
            <summary>
            Gets and sets the property FailedEntryCount. 
            <para>
            The number of events from this operation that could not be written to the partner
            event bus.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.PutPartnerEventsResultEntry">
            <summary>
            Represents an event that a partner tried to generate, but failed.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.PutPartnerEventsResultEntry.ErrorCode">
            <summary>
            Gets and sets the property ErrorCode. 
            <para>
            The error code that indicates why the event submission failed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.PutPartnerEventsResultEntry.ErrorMessage">
            <summary>
            Gets and sets the property ErrorMessage. 
            <para>
            The error message that explains why the event submission failed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.PutPartnerEventsResultEntry.EventId">
            <summary>
            Gets and sets the property EventId. 
            <para>
            The ID of the event.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.PutPermissionRequest">
            <summary>
            Container for the parameters to the PutPermission operation.
            Running <code>PutPermission</code> permits the specified Amazon Web Services account
            or Amazon Web Services organization to put events to the specified <i>event bus</i>.
            Amazon EventBridge (CloudWatch Events) rules in your account are triggered by these
            events arriving to an event bus in your account. 
            
             
            <para>
            For another account to send events to your account, that external account must have
            an EventBridge rule with your account's event bus as a target.
            </para>
             
            <para>
            To enable multiple Amazon Web Services accounts to put events to your event bus, run
            <code>PutPermission</code> once for each of these accounts. Or, if all the accounts
            are members of the same Amazon Web Services organization, you can run <code>PutPermission</code>
            once specifying <code>Principal</code> as "*" and specifying the Amazon Web Services
            organization ID in <code>Condition</code>, to grant permissions to all accounts in
            that organization.
            </para>
             
            <para>
            If you grant permissions using an organization, then accounts in that organization
            must specify a <code>RoleArn</code> with proper permissions when they use <code>PutTarget</code>
            to add your account's event bus as a target. For more information, see <a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-cross-account-event-delivery.html">Sending
            and Receiving Events Between Amazon Web Services Accounts</a> in the <i>Amazon EventBridge
            User Guide</i>.
            </para>
             
            <para>
            The permission policy on the event bus cannot exceed 10 KB in size.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.PutPermissionRequest.Action">
            <summary>
            Gets and sets the property Action. 
            <para>
            The action that you are enabling the other account to perform.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.PutPermissionRequest.Condition">
            <summary>
            Gets and sets the property Condition. 
            <para>
            This parameter enables you to limit the permission to accounts that fulfill a certain
            condition, such as being a member of a certain Amazon Web Services organization. For
            more information about Amazon Web Services Organizations, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_introduction.html">What
            Is Amazon Web Services Organizations</a> in the <i>Amazon Web Services Organizations
            User Guide</i>.
            </para>
             
            <para>
            If you specify <code>Condition</code> with an Amazon Web Services organization ID,
            and specify "*" as the value for <code>Principal</code>, you grant permission to all
            the accounts in the named organization.
            </para>
             
            <para>
            The <code>Condition</code> is a JSON string which must contain <code>Type</code>,
            <code>Key</code>, and <code>Value</code> fields.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.PutPermissionRequest.EventBusName">
            <summary>
            Gets and sets the property EventBusName. 
            <para>
            The name of the event bus associated with the rule. If you omit this, the default
            event bus is used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.PutPermissionRequest.Policy">
            <summary>
            Gets and sets the property Policy. 
            <para>
            A JSON string that describes the permission policy statement. You can include a <code>Policy</code>
            parameter in the request instead of using the <code>StatementId</code>, <code>Action</code>,
            <code>Principal</code>, or <code>Condition</code> parameters.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.PutPermissionRequest.Principal">
            <summary>
            Gets and sets the property Principal. 
            <para>
            The 12-digit Amazon Web Services account ID that you are permitting to put events
            to your default event bus. Specify "*" to permit any account to put events to your
            default event bus.
            </para>
             
            <para>
            If you specify "*" without specifying <code>Condition</code>, avoid creating rules
            that may match undesirable events. To create more secure rules, make sure that the
            event pattern for each rule contains an <code>account</code> field with a specific
            account ID from which to receive events. Rules with an account field do not match
            any events sent from other accounts.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.PutPermissionRequest.StatementId">
            <summary>
            Gets and sets the property StatementId. 
            <para>
            An identifier string for the external account that you are granting permissions to.
            If you later want to revoke the permission for this external account, specify this
            <code>StatementId</code> when you run <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_RemovePermission.html">RemovePermission</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.PutPermissionResponse">
            <summary>
            This is the response object from the PutPermission operation.
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.PutRuleRequest">
            <summary>
            Container for the parameters to the PutRule operation.
            Creates or updates the specified rule. Rules are enabled by default, or based on value
            of the state. You can disable a rule using <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_DisableRule.html">DisableRule</a>.
            
             
            <para>
            A single rule watches for events from a single event bus. Events generated by Amazon
            Web Services services go to your account's default event bus. Events generated by
            SaaS partner services or applications go to the matching partner event bus. If you
            have custom applications or services, you can specify whether their events go to your
            default event bus or a custom event bus that you have created. For more information,
            see <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_CreateEventBus.html">CreateEventBus</a>.
            </para>
             
            <para>
            If you are updating an existing rule, the rule is replaced with what you specify in
            this <code>PutRule</code> command. If you omit arguments in <code>PutRule</code>,
            the old values for those arguments are not kept. Instead, they are replaced with null
            values.
            </para>
             
            <para>
            When you create or update a rule, incoming events might not immediately start matching
            to new or updated rules. Allow a short period of time for changes to take effect.
            </para>
             
            <para>
            A rule must contain at least an EventPattern or ScheduleExpression. Rules with EventPatterns
            are triggered when a matching event is observed. Rules with ScheduleExpressions self-trigger
            based on the given schedule. A rule can have both an EventPattern and a ScheduleExpression,
            in which case the rule triggers on matching events as well as on a schedule.
            </para>
             
            <para>
            When you initially create a rule, you can optionally assign one or more tags to the
            rule. Tags can help you organize and categorize your resources. You can also use them
            to scope user permissions, by granting a user permission to access or change only
            rules with certain tag values. To use the <code>PutRule</code> operation and assign
            tags, you must have both the <code>events:PutRule</code> and <code>events:TagResource</code>
            permissions.
            </para>
             
            <para>
            If you are updating an existing rule, any tags you specify in the <code>PutRule</code>
            operation are ignored. To update the tags of an existing rule, use <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_TagResource.html">TagResource</a>
            and <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_UntagResource.html">UntagResource</a>.
            </para>
             
            <para>
            Most services in Amazon Web Services treat : or / as the same character in Amazon
            Resource Names (ARNs). However, EventBridge uses an exact match in event patterns
            and rules. Be sure to use the correct ARN characters when creating event patterns
            so that they match the ARN syntax in the event you want to match.
            </para>
             
            <para>
            In EventBridge, it is possible to create rules that lead to infinite loops, where
            a rule is fired repeatedly. For example, a rule might detect that ACLs have changed
            on an S3 bucket, and trigger software to change them to the desired state. If the
            rule is not written carefully, the subsequent change to the ACLs fires the rule again,
            creating an infinite loop.
            </para>
             
            <para>
            To prevent this, write the rules so that the triggered actions do not re-fire the
            same rule. For example, your rule could fire only if ACLs are found to be in a bad
            state, instead of after any change. 
            </para>
             
            <para>
            An infinite loop can quickly cause higher than expected charges. We recommend that
            you use budgeting, which alerts you when charges exceed your specified limit. For
            more information, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/budgets-managing-costs.html">Managing
            Your Costs with Budgets</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.PutRuleRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.PutRuleRequest.EventBusName">
            <summary>
            Gets and sets the property EventBusName. 
            <para>
            The name or ARN of the event bus to associate with this rule. If you omit this, the
            default event bus is used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.PutRuleRequest.EventPattern">
            <summary>
            Gets and sets the property EventPattern. 
            <para>
            The event pattern. For more information, see <a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html">Events
            and Event Patterns</a> in the <i>Amazon EventBridge User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.PutRuleRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the rule that you are creating or updating.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.PutRuleRequest.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The Amazon Resource Name (ARN) of the IAM role associated with the rule.
            </para>
             
            <para>
            If you're setting an event bus in another account as the target and that account granted
            permission to your account through an organization instead of directly by the account
            ID, you must specify a <code>RoleArn</code> with proper permissions in the <code>Target</code>
            structure, instead of here in this parameter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.PutRuleRequest.ScheduleExpression">
            <summary>
            Gets and sets the property ScheduleExpression. 
            <para>
            The scheduling expression. For example, "cron(0 20 * * ? *)" or "rate(5 minutes)".
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.PutRuleRequest.State">
            <summary>
            Gets and sets the property State. 
            <para>
            Indicates whether the rule is enabled or disabled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.PutRuleRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The list of key-value pairs to associate with the rule.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.PutRuleResponse">
            <summary>
            This is the response object from the PutRule operation.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.PutRuleResponse.RuleArn">
            <summary>
            Gets and sets the property RuleArn. 
            <para>
            The Amazon Resource Name (ARN) of the rule.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.PutTargetsRequest">
            <summary>
            Container for the parameters to the PutTargets operation.
            Adds the specified targets to the specified rule, or updates the targets if they are
            already associated with the rule.
            
             
            <para>
            Targets are the resources that are invoked when a rule is triggered.
            </para>
             
            <para>
            You can configure the following as targets for Events:
            </para>
             <ul> <li> 
            <para>
             <a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-api-destinations.html">API
            destination</a> 
            </para>
             </li> <li> 
            <para>
            Amazon API Gateway REST API endpoints
            </para>
             </li> <li> 
            <para>
            API Gateway
            </para>
             </li> <li> 
            <para>
            Batch job queue
            </para>
             </li> <li> 
            <para>
            CloudWatch Logs group
            </para>
             </li> <li> 
            <para>
            CodeBuild project
            </para>
             </li> <li> 
            <para>
            CodePipeline
            </para>
             </li> <li> 
            <para>
            Amazon EC2 <code>CreateSnapshot</code> API call
            </para>
             </li> <li> 
            <para>
            Amazon EC2 <code>RebootInstances</code> API call
            </para>
             </li> <li> 
            <para>
            Amazon EC2 <code>StopInstances</code> API call
            </para>
             </li> <li> 
            <para>
            Amazon EC2 <code>TerminateInstances</code> API call
            </para>
             </li> <li> 
            <para>
            Amazon ECS tasks
            </para>
             </li> <li> 
            <para>
            Event bus in a different Amazon Web Services account or Region.
            </para>
             
            <para>
            You can use an event bus in the US East (N. Virginia) us-east-1, US West (Oregon)
            us-west-2, or Europe (Ireland) eu-west-1 Regions as a target for a rule.
            </para>
             </li> <li> 
            <para>
            Firehose delivery stream (Kinesis Data Firehose)
            </para>
             </li> <li> 
            <para>
            Inspector assessment template (Amazon Inspector)
            </para>
             </li> <li> 
            <para>
            Kinesis stream (Kinesis Data Stream)
            </para>
             </li> <li> 
            <para>
            Lambda function
            </para>
             </li> <li> 
            <para>
            Redshift clusters (Data API statement execution)
            </para>
             </li> <li> 
            <para>
            Amazon SNS topic
            </para>
             </li> <li> 
            <para>
            Amazon SQS queues (includes FIFO queues
            </para>
             </li> <li> 
            <para>
            SSM Automation
            </para>
             </li> <li> 
            <para>
            SSM OpsItem
            </para>
             </li> <li> 
            <para>
            SSM Run Command
            </para>
             </li> <li> 
            <para>
            Step Functions state machines
            </para>
             </li> </ul> 
            <para>
            Creating rules with built-in targets is supported only in the Amazon Web Services
            Management Console. The built-in targets are <code>EC2 CreateSnapshot API call</code>,
            <code>EC2 RebootInstances API call</code>, <code>EC2 StopInstances API call</code>,
            and <code>EC2 TerminateInstances API call</code>. 
            </para>
             
            <para>
            For some target types, <code>PutTargets</code> provides target-specific parameters.
            If the target is a Kinesis data stream, you can optionally specify which shard the
            event goes to by using the <code>KinesisParameters</code> argument. To invoke a command
            on multiple EC2 instances with one rule, you can use the <code>RunCommandParameters</code>
            field.
            </para>
             
            <para>
            To be able to make API calls against the resources that you own, Amazon EventBridge
            needs the appropriate permissions. For Lambda and Amazon SNS resources, EventBridge
            relies on resource-based policies. For EC2 instances, Kinesis Data Streams, Step Functions
            state machines and API Gateway REST APIs, EventBridge relies on IAM roles that you
            specify in the <code>RoleARN</code> argument in <code>PutTargets</code>. For more
            information, see <a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/auth-and-access-control-eventbridge.html">Authentication
            and Access Control</a> in the <i>Amazon EventBridge User Guide</i>.
            </para>
             
            <para>
            If another Amazon Web Services account is in the same region and has granted you permission
            (using <code>PutPermission</code>), you can send events to that account. Set that
            account's event bus as a target of the rules in your account. To send the matched
            events to the other account, specify that account's event bus as the <code>Arn</code>
            value when you run <code>PutTargets</code>. If your account sends events to another
            account, your account is charged for each sent event. Each event sent to another account
            is charged as a custom event. The account receiving the event is not charged. For
            more information, see <a href="http://aws.amazon.com/eventbridge/pricing/">Amazon
            EventBridge Pricing</a>.
            </para>
             <note> 
            <para>
             <code>Input</code>, <code>InputPath</code>, and <code>InputTransformer</code> are
            not available with <code>PutTarget</code> if the target is an event bus of a different
            Amazon Web Services account.
            </para>
             </note> 
            <para>
            If you are setting the event bus of another account as the target, and that account
            granted permission to your account through an organization instead of directly by
            the account ID, then you must specify a <code>RoleArn</code> with proper permissions
            in the <code>Target</code> structure. For more information, see <a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-cross-account-event-delivery.html">Sending
            and Receiving Events Between Amazon Web Services Accounts</a> in the <i>Amazon EventBridge
            User Guide</i>.
            </para>
             
            <para>
            For more information about enabling cross-account events, see <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_PutPermission.html">PutPermission</a>.
            </para>
             
            <para>
             <b>Input</b>, <b>InputPath</b>, and <b>InputTransformer</b> are mutually exclusive
            and optional parameters of a target. When a rule is triggered due to a matched event:
            </para>
             <ul> <li> 
            <para>
            If none of the following arguments are specified for a target, then the entire event
            is passed to the target in JSON format (unless the target is Amazon EC2 Run Command
            or Amazon ECS task, in which case nothing from the event is passed to the target).
            </para>
             </li> <li> 
            <para>
            If <b>Input</b> is specified in the form of valid JSON, then the matched event is
            overridden with this constant.
            </para>
             </li> <li> 
            <para>
            If <b>InputPath</b> is specified in the form of JSONPath (for example, <code>$.detail</code>),
            then only the part of the event specified in the path is passed to the target (for
            example, only the detail part of the event is passed).
            </para>
             </li> <li> 
            <para>
            If <b>InputTransformer</b> is specified, then one or more specified JSONPaths are
            extracted from the event and used as values in a template that you specify as the
            input to the target.
            </para>
             </li> </ul> 
            <para>
            When you specify <code>InputPath</code> or <code>InputTransformer</code>, you must
            use JSON dot notation, not bracket notation.
            </para>
             
            <para>
            When you add targets to a rule and the associated rule triggers soon after, new or
            updated targets might not be immediately invoked. Allow a short period of time for
            changes to take effect.
            </para>
             
            <para>
            This action can partially fail if too many requests are made at the same time. If
            that happens, <code>FailedEntryCount</code> is non-zero in the response and each entry
            in <code>FailedEntries</code> provides the ID of the failed target and the error code.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.PutTargetsRequest.EventBusName">
            <summary>
            Gets and sets the property EventBusName. 
            <para>
            The name or ARN of the event bus associated with the rule. If you omit this, the default
            event bus is used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.PutTargetsRequest.Rule">
            <summary>
            Gets and sets the property Rule. 
            <para>
            The name of the rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.PutTargetsRequest.Targets">
            <summary>
            Gets and sets the property Targets. 
            <para>
            The targets to update or add to the rule.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.PutTargetsResponse">
            <summary>
            This is the response object from the PutTargets operation.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.PutTargetsResponse.FailedEntries">
            <summary>
            Gets and sets the property FailedEntries. 
            <para>
            The failed target entries.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.PutTargetsResponse.FailedEntryCount">
            <summary>
            Gets and sets the property FailedEntryCount. 
            <para>
            The number of failed entries.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.PutTargetsResultEntry">
            <summary>
            Represents a target that failed to be added to a rule.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.PutTargetsResultEntry.ErrorCode">
            <summary>
            Gets and sets the property ErrorCode. 
            <para>
            The error code that indicates why the target addition failed. If the value is <code>ConcurrentModificationException</code>,
            too many requests were made at the same time.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.PutTargetsResultEntry.ErrorMessage">
            <summary>
            Gets and sets the property ErrorMessage. 
            <para>
            The error message that explains why the target addition failed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.PutTargetsResultEntry.TargetId">
            <summary>
            Gets and sets the property TargetId. 
            <para>
            The ID of the target.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.RedshiftDataParameters">
            <summary>
            These are custom parameters to be used when the target is a Amazon Redshift cluster
            to invoke the Amazon Redshift Data API ExecuteStatement based on EventBridge events.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.RedshiftDataParameters.Database">
            <summary>
            Gets and sets the property Database. 
            <para>
            The name of the database. Required when authenticating using temporary credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.RedshiftDataParameters.DbUser">
            <summary>
            Gets and sets the property DbUser. 
            <para>
            The database user name. Required when authenticating using temporary credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.RedshiftDataParameters.SecretManagerArn">
            <summary>
            Gets and sets the property SecretManagerArn. 
            <para>
            The name or ARN of the secret that enables access to the database. Required when authenticating
            using Amazon Web Services Secrets Manager.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.RedshiftDataParameters.Sql">
            <summary>
            Gets and sets the property Sql. 
            <para>
            The SQL statement text to run.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.RedshiftDataParameters.StatementName">
            <summary>
            Gets and sets the property StatementName. 
            <para>
            The name of the SQL statement. You can name the SQL statement when you create it to
            identify the query.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.RedshiftDataParameters.WithEvent">
            <summary>
            Gets and sets the property WithEvent. 
            <para>
            Indicates whether to send an event back to EventBridge after the SQL statement runs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.RemovePermissionRequest">
            <summary>
            Container for the parameters to the RemovePermission operation.
            Revokes the permission of another Amazon Web Services account to be able to put events
            to the specified event bus. Specify the account to revoke by the <code>StatementId</code>
            value that you associated with the account when you granted it permission with <code>PutPermission</code>.
            You can find the <code>StatementId</code> by using <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_DescribeEventBus.html">DescribeEventBus</a>.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.RemovePermissionRequest.EventBusName">
            <summary>
            Gets and sets the property EventBusName. 
            <para>
            The name of the event bus to revoke permissions for. If you omit this, the default
            event bus is used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.RemovePermissionRequest.RemoveAllPermissions">
            <summary>
            Gets and sets the property RemoveAllPermissions. 
            <para>
            Specifies whether to remove all permissions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.RemovePermissionRequest.StatementId">
            <summary>
            Gets and sets the property StatementId. 
            <para>
            The statement ID corresponding to the account that is no longer allowed to put events
            to the default event bus.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.RemovePermissionResponse">
            <summary>
            This is the response object from the RemovePermission operation.
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.RemoveTargetsRequest">
            <summary>
            Container for the parameters to the RemoveTargets operation.
            Removes the specified targets from the specified rule. When the rule is triggered,
            those targets are no longer be invoked.
            
             
            <para>
            When you remove a target, when the associated rule triggers, removed targets might
            continue to be invoked. Allow a short period of time for changes to take effect.
            </para>
             
            <para>
            This action can partially fail if too many requests are made at the same time. If
            that happens, <code>FailedEntryCount</code> is non-zero in the response and each entry
            in <code>FailedEntries</code> provides the ID of the failed target and the error code.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.RemoveTargetsRequest.EventBusName">
            <summary>
            Gets and sets the property EventBusName. 
            <para>
            The name or ARN of the event bus associated with the rule. If you omit this, the default
            event bus is used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.RemoveTargetsRequest.Force">
            <summary>
            Gets and sets the property Force. 
            <para>
            If this is a managed rule, created by an Amazon Web Services service on your behalf,
            you must specify <code>Force</code> as <code>True</code> to remove targets. This parameter
            is ignored for rules that are not managed rules. You can check whether a rule is a
            managed rule by using <code>DescribeRule</code> or <code>ListRules</code> and checking
            the <code>ManagedBy</code> field of the response.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.RemoveTargetsRequest.Ids">
            <summary>
            Gets and sets the property Ids. 
            <para>
            The IDs of the targets to remove from the rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.RemoveTargetsRequest.Rule">
            <summary>
            Gets and sets the property Rule. 
            <para>
            The name of the rule.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.RemoveTargetsResponse">
            <summary>
            This is the response object from the RemoveTargets operation.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.RemoveTargetsResponse.FailedEntries">
            <summary>
            Gets and sets the property FailedEntries. 
            <para>
            The failed target entries.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.RemoveTargetsResponse.FailedEntryCount">
            <summary>
            Gets and sets the property FailedEntryCount. 
            <para>
            The number of failed entries.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.RemoveTargetsResultEntry">
            <summary>
            Represents a target that failed to be removed from a rule.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.RemoveTargetsResultEntry.ErrorCode">
            <summary>
            Gets and sets the property ErrorCode. 
            <para>
            The error code that indicates why the target removal failed. If the value is <code>ConcurrentModificationException</code>,
            too many requests were made at the same time.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.RemoveTargetsResultEntry.ErrorMessage">
            <summary>
            Gets and sets the property ErrorMessage. 
            <para>
            The error message that explains why the target removal failed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.RemoveTargetsResultEntry.TargetId">
            <summary>
            Gets and sets the property TargetId. 
            <para>
            The ID of the target.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.Replay">
            <summary>
            A <code>Replay</code> object that contains details about a replay.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.Replay.EventEndTime">
            <summary>
            Gets and sets the property EventEndTime. 
            <para>
            A time stamp for the time to start replaying events. Any event with a creation time
            prior to the <code>EventEndTime</code> specified is replayed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.Replay.EventLastReplayedTime">
            <summary>
            Gets and sets the property EventLastReplayedTime. 
            <para>
            A time stamp for the time that the last event was replayed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.Replay.EventSourceArn">
            <summary>
            Gets and sets the property EventSourceArn. 
            <para>
            The ARN of the archive to replay event from.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.Replay.EventStartTime">
            <summary>
            Gets and sets the property EventStartTime. 
            <para>
            A time stamp for the time to start replaying events. This is determined by the time
            in the event as described in <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_PutEventsRequestEntry.html#eventbridge-Type-PutEventsRequestEntry-Time">Time</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.Replay.ReplayEndTime">
            <summary>
            Gets and sets the property ReplayEndTime. 
            <para>
            A time stamp for the time that the replay completed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.Replay.ReplayName">
            <summary>
            Gets and sets the property ReplayName. 
            <para>
            The name of the replay.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.Replay.ReplayStartTime">
            <summary>
            Gets and sets the property ReplayStartTime. 
            <para>
            A time stamp for the time that the replay started.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.Replay.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The current state of the replay.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.Replay.StateReason">
            <summary>
            Gets and sets the property StateReason. 
            <para>
            A description of why the replay is in the current state.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.ReplayDestination">
            <summary>
            A <code>ReplayDestination</code> object that contains details about a replay.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ReplayDestination.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The ARN of the event bus to replay event to. You can replay events only to the event
            bus specified to create the archive.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.ReplayDestination.FilterArns">
            <summary>
            Gets and sets the property FilterArns. 
            <para>
            A list of ARNs for rules to replay events to.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.ResourceAlreadyExistsException">
            <summary>
            The resource you are trying to create already exists.
            </summary>
        </member>
        <member name="M:Amazon.EventBridge.Model.ResourceAlreadyExistsException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceAlreadyExistsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.EventBridge.Model.ResourceAlreadyExistsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EventBridge.Model.ResourceAlreadyExistsException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceAlreadyExistsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EventBridge.Model.ResourceAlreadyExistsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.EventBridge.Model.ResourceAlreadyExistsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.EventBridge.Model.ResourceAlreadyExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ResourceAlreadyExistsException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.EventBridge.Model.ResourceAlreadyExistsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            <summary>
            An entity that you specified does not exist.
            </summary>
        </member>
        <member name="M:Amazon.EventBridge.Model.ResourceNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.EventBridge.Model.ResourceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EventBridge.Model.ResourceNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EventBridge.Model.ResourceNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.EventBridge.Model.ResourceNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.EventBridge.Model.ResourceNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ResourceNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.EventBridge.Model.ResourceNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.EventBridge.Model.RetryPolicy">
            <summary>
            A <code>RetryPolicy</code> object that includes information about the retry policy
            settings.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.RetryPolicy.MaximumEventAgeInSeconds">
            <summary>
            Gets and sets the property MaximumEventAgeInSeconds. 
            <para>
            The maximum amount of time, in seconds, to continue to make retry attempts.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.RetryPolicy.MaximumRetryAttempts">
            <summary>
            Gets and sets the property MaximumRetryAttempts. 
            <para>
            The maximum number of retry attempts to make before the request fails. Retry attempts
            continue until either the maximum number of attempts is made or until the duration
            of the <code>MaximumEventAgeInSeconds</code> is met.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.Rule">
            <summary>
            Contains information about a rule in Amazon EventBridge.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.Rule.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The Amazon Resource Name (ARN) of the rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.Rule.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The description of the rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.Rule.EventBusName">
            <summary>
            Gets and sets the property EventBusName. 
            <para>
            The name or ARN of the event bus associated with the rule. If you omit this, the default
            event bus is used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.Rule.EventPattern">
            <summary>
            Gets and sets the property EventPattern. 
            <para>
            The event pattern of the rule. For more information, see <a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html">Events
            and Event Patterns</a> in the <i>Amazon EventBridge User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.Rule.ManagedBy">
            <summary>
            Gets and sets the property ManagedBy. 
            <para>
            If the rule was created on behalf of your account by an Amazon Web Services service,
            this field displays the principal name of the service that created the rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.Rule.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.Rule.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The Amazon Resource Name (ARN) of the role that is used for target invocation.
            </para>
             
            <para>
            If you're setting an event bus in another account as the target and that account granted
            permission to your account through an organization instead of directly by the account
            ID, you must specify a <code>RoleArn</code> with proper permissions in the <code>Target</code>
            structure, instead of here in this parameter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.Rule.ScheduleExpression">
            <summary>
            Gets and sets the property ScheduleExpression. 
            <para>
            The scheduling expression. For example, "cron(0 20 * * ? *)", "rate(5 minutes)". For
            more information, see <a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-create-rule-schedule.html">Creating
            an Amazon EventBridge rule that runs on a schedule</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.Rule.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The state of the rule.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.RunCommandParameters">
            <summary>
            This parameter contains the criteria (either InstanceIds or a tag) used to specify
            which EC2 instances are to be sent the command.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.RunCommandParameters.RunCommandTargets">
            <summary>
            Gets and sets the property RunCommandTargets. 
            <para>
            Currently, we support including only one RunCommandTarget block, which specifies either
            an array of InstanceIds or a tag.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.RunCommandTarget">
            <summary>
            Information about the EC2 instances that are to be sent the command, specified as
            key-value pairs. Each <code>RunCommandTarget</code> block can include only one key,
            but this key may specify multiple values.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.RunCommandTarget.Key">
            <summary>
            Gets and sets the property Key. 
            <para>
            Can be either <code>tag:</code> <i>tag-key</i> or <code>InstanceIds</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.RunCommandTarget.Values">
            <summary>
            Gets and sets the property Values. 
            <para>
            If <code>Key</code> is <code>tag:</code> <i>tag-key</i>, <code>Values</code> is a
            list of tag values. If <code>Key</code> is <code>InstanceIds</code>, <code>Values</code>
            is a list of Amazon EC2 instance IDs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.SageMakerPipelineParameter">
            <summary>
            Name/Value pair of a parameter to start execution of a SageMaker Model Building Pipeline.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.SageMakerPipelineParameter.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            Name of parameter to start execution of a SageMaker Model Building Pipeline.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.SageMakerPipelineParameter.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            Value of parameter to start execution of a SageMaker Model Building Pipeline.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.SageMakerPipelineParameters">
            <summary>
            These are custom parameters to use when the target is a SageMaker Model Building Pipeline
            that starts based on EventBridge events.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.SageMakerPipelineParameters.PipelineParameterList">
            <summary>
            Gets and sets the property PipelineParameterList. 
            <para>
            List of Parameter names and values for SageMaker Model Building Pipeline execution.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.SqsParameters">
            <summary>
            This structure includes the custom parameter to be used when the target is an SQS
            FIFO queue.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.SqsParameters.MessageGroupId">
            <summary>
            Gets and sets the property MessageGroupId. 
            <para>
            The FIFO message group ID to use as the target.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.StartReplayRequest">
            <summary>
            Container for the parameters to the StartReplay operation.
            Starts the specified replay. Events are not necessarily replayed in the exact same
            order that they were added to the archive. A replay processes events to replay based
            on the time in the event, and replays them using 1 minute intervals. If you specify
            an <code>EventStartTime</code> and an <code>EventEndTime</code> that covers a 20 minute
            time range, the events are replayed from the first minute of that 20 minute range
            first. Then the events from the second minute are replayed. You can use <code>DescribeReplay</code>
            to determine the progress of a replay. The value returned for <code>EventLastReplayedTime</code>
            indicates the time within the specified time range associated with the last event
            replayed.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.StartReplayRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description for the replay to start.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.StartReplayRequest.Destination">
            <summary>
            Gets and sets the property Destination. 
            <para>
            A <code>ReplayDestination</code> object that includes details about the destination
            for the replay.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.StartReplayRequest.EventEndTime">
            <summary>
            Gets and sets the property EventEndTime. 
            <para>
            A time stamp for the time to stop replaying events. Only events that occurred between
            the <code>EventStartTime</code> and <code>EventEndTime</code> are replayed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.StartReplayRequest.EventSourceArn">
            <summary>
            Gets and sets the property EventSourceArn. 
            <para>
            The ARN of the archive to replay events from.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.StartReplayRequest.EventStartTime">
            <summary>
            Gets and sets the property EventStartTime. 
            <para>
            A time stamp for the time to start replaying events. Only events that occurred between
            the <code>EventStartTime</code> and <code>EventEndTime</code> are replayed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.StartReplayRequest.ReplayName">
            <summary>
            Gets and sets the property ReplayName. 
            <para>
            The name of the replay to start.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.StartReplayResponse">
            <summary>
            This is the response object from the StartReplay operation.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.StartReplayResponse.ReplayArn">
            <summary>
            Gets and sets the property ReplayArn. 
            <para>
            The ARN of the replay.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.StartReplayResponse.ReplayStartTime">
            <summary>
            Gets and sets the property ReplayStartTime. 
            <para>
            The time at which the replay started.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.StartReplayResponse.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The state of the replay.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.StartReplayResponse.StateReason">
            <summary>
            Gets and sets the property StateReason. 
            <para>
            The reason that the replay is in the state.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.Tag">
            <summary>
            A key-value pair associated with an Amazon Web Services resource. In EventBridge,
            rules and event buses support tagging.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.Tag.Key">
            <summary>
            Gets and sets the property Key. 
            <para>
            A string you can use to assign a value. The combination of tag keys and values can
            help you organize and categorize your resources.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.Tag.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The value for the specified tag key.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.TagResourceRequest">
            <summary>
            Container for the parameters to the TagResource operation.
            Assigns one or more tags (key-value pairs) to the specified EventBridge resource.
            Tags can help you organize and categorize your resources. You can also use them to
            scope user permissions by granting a user permission to access or change only resources
            with certain tag values. In EventBridge, rules and event buses can be tagged.
            
             
            <para>
            Tags don't have any semantic meaning to Amazon Web Services and are interpreted strictly
            as strings of characters.
            </para>
             
            <para>
            You can use the <code>TagResource</code> action with a resource that already has tags.
            If you specify a new tag key, this tag is appended to the list of tags associated
            with the resource. If you specify a tag key that is already associated with the resource,
            the new tag value that you specify replaces the previous value for that tag.
            </para>
             
            <para>
            You can associate as many as 50 tags with a resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.TagResourceRequest.ResourceARN">
            <summary>
            Gets and sets the property ResourceARN. 
            <para>
            The ARN of the EventBridge resource that you're adding tags to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.TagResourceRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The list of key-value pairs to associate with the resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.TagResourceResponse">
            <summary>
            This is the response object from the TagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.Target">
            <summary>
            Targets are the resources to be invoked when a rule is triggered. For a complete list
            of services and resources that can be set as a target, see <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_PutTargets.html">PutTargets</a>.
            
             
            <para>
            If you are setting the event bus of another account as the target, and that account
            granted permission to your account through an organization instead of directly by
            the account ID, then you must specify a <code>RoleArn</code> with proper permissions
            in the <code>Target</code> structure. For more information, see <a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-cross-account-event-delivery.html">Sending
            and Receiving Events Between Amazon Web Services Accounts</a> in the <i>Amazon EventBridge
            User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.Target.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The Amazon Resource Name (ARN) of the target.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.Target.BatchParameters">
            <summary>
            Gets and sets the property BatchParameters. 
            <para>
            If the event target is an Batch job, this contains the job definition, job name, and
            other parameters. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/jobs.html">Jobs</a>
            in the <i>Batch User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.Target.DeadLetterConfig">
            <summary>
            Gets and sets the property DeadLetterConfig. 
            <para>
            The <code>DeadLetterConfig</code> that defines the target queue to send dead-letter
            queue events to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.Target.EcsParameters">
            <summary>
            Gets and sets the property EcsParameters. 
            <para>
            Contains the Amazon ECS task definition and task count to be used, if the event target
            is an Amazon ECS task. For more information about Amazon ECS tasks, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_defintions.html">Task
            Definitions </a> in the <i>Amazon EC2 Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.Target.HttpParameters">
            <summary>
            Gets and sets the property HttpParameters. 
            <para>
            Contains the HTTP parameters to use when the target is a API Gateway REST endpoint
            or EventBridge ApiDestination.
            </para>
             
            <para>
            If you specify an API Gateway REST API or EventBridge ApiDestination as a target,
            you can use this parameter to specify headers, path parameters, and query string keys/values
            as part of your target invoking request. If you're using ApiDestinations, the corresponding
            Connection can also have these values configured. In case of any conflicting keys,
            values from the Connection take precedence.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.Target.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            The ID of the target. We recommend using a memorable and unique string.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.Target.Input">
            <summary>
            Gets and sets the property Input. 
            <para>
            Valid JSON text passed to the target. In this case, nothing from the event itself
            is passed to the target. For more information, see <a href="http://www.rfc-editor.org/rfc/rfc7159.txt">The
            JavaScript Object Notation (JSON) Data Interchange Format</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.Target.InputPath">
            <summary>
            Gets and sets the property InputPath. 
            <para>
            The value of the JSONPath that is used for extracting part of the matched event when
            passing it to the target. You must use JSON dot notation, not bracket notation. For
            more information about JSON paths, see <a href="http://goessner.net/articles/JsonPath/">JSONPath</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.Target.InputTransformer">
            <summary>
            Gets and sets the property InputTransformer. 
            <para>
            Settings to enable you to provide custom input to a target based on certain event
            data. You can extract one or more key-value pairs from the event and then use that
            data to send customized input to the target.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.Target.KinesisParameters">
            <summary>
            Gets and sets the property KinesisParameters. 
            <para>
            The custom parameter you can use to control the shard assignment, when the target
            is a Kinesis data stream. If you do not include this parameter, the default is to
            use the <code>eventId</code> as the partition key.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.Target.RedshiftDataParameters">
            <summary>
            Gets and sets the property RedshiftDataParameters. 
            <para>
            Contains the Amazon Redshift Data API parameters to use when the target is a Amazon
            Redshift cluster.
            </para>
             
            <para>
            If you specify a Amazon Redshift Cluster as a Target, you can use this to specify
            parameters to invoke the Amazon Redshift Data API ExecuteStatement based on EventBridge
            events.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.Target.RetryPolicy">
            <summary>
            Gets and sets the property RetryPolicy. 
            <para>
            The <code>RetryPolicy</code> object that contains the retry policy configuration to
            use for the dead-letter queue.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.Target.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The Amazon Resource Name (ARN) of the IAM role to be used for this target when the
            rule is triggered. If one rule triggers multiple targets, you can use a different
            IAM role for each target.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.Target.RunCommandParameters">
            <summary>
            Gets and sets the property RunCommandParameters. 
            <para>
            Parameters used when you are using the rule to invoke Amazon EC2 Run Command.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.Target.SageMakerPipelineParameters">
            <summary>
            Gets and sets the property SageMakerPipelineParameters. 
            <para>
            Contains the SageMaker Model Building Pipeline parameters to start execution of a
            SageMaker Model Building Pipeline.
            </para>
             
            <para>
            If you specify a SageMaker Model Building Pipeline as a target, you can use this to
            specify parameters to start a pipeline execution based on EventBridge events.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.Target.SqsParameters">
            <summary>
            Gets and sets the property SqsParameters. 
            <para>
            Contains the message group ID to use when the target is a FIFO queue.
            </para>
             
            <para>
            If you specify an SQS FIFO queue as a target, the queue must have content-based deduplication
            enabled.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.TestEventPatternRequest">
            <summary>
            Container for the parameters to the TestEventPattern operation.
            Tests whether the specified event pattern matches the provided event.
            
             
            <para>
            Most services in Amazon Web Services treat : or / as the same character in Amazon
            Resource Names (ARNs). However, EventBridge uses an exact match in event patterns
            and rules. Be sure to use the correct ARN characters when creating event patterns
            so that they match the ARN syntax in the event you want to match.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.TestEventPatternRequest.Event">
            <summary>
            Gets and sets the property Event. 
            <para>
            The event, in JSON format, to test against the event pattern. The JSON must follow
            the format specified in <a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/aws-events.html">Amazon
            Web Services Events</a>, and the following fields are mandatory:
            </para>
             <ul> <li> 
            <para>
             <code>id</code> 
            </para>
             </li> <li> 
            <para>
             <code>account</code> 
            </para>
             </li> <li> 
            <para>
             <code>source</code> 
            </para>
             </li> <li> 
            <para>
             <code>time</code> 
            </para>
             </li> <li> 
            <para>
             <code>region</code> 
            </para>
             </li> <li> 
            <para>
             <code>resources</code> 
            </para>
             </li> <li> 
            <para>
             <code>detail-type</code> 
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.TestEventPatternRequest.EventPattern">
            <summary>
            Gets and sets the property EventPattern. 
            <para>
            The event pattern. For more information, see <a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html">Events
            and Event Patterns</a> in the <i>Amazon EventBridge User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.TestEventPatternResponse">
            <summary>
            This is the response object from the TestEventPattern operation.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.TestEventPatternResponse.Result">
            <summary>
            Gets and sets the property Result. 
            <para>
            Indicates whether the event matches the event pattern.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.UntagResourceRequest">
            <summary>
            Container for the parameters to the UntagResource operation.
            Removes one or more tags from the specified EventBridge resource. In Amazon EventBridge
            (CloudWatch Events), rules and event buses can be tagged.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.UntagResourceRequest.ResourceARN">
            <summary>
            Gets and sets the property ResourceARN. 
            <para>
            The ARN of the EventBridge resource from which you are removing tags.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.UntagResourceRequest.TagKeys">
            <summary>
            Gets and sets the property TagKeys. 
            <para>
            The list of tag keys to remove from the resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.UntagResourceResponse">
            <summary>
            This is the response object from the UntagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.UpdateApiDestinationRequest">
            <summary>
            Container for the parameters to the UpdateApiDestination operation.
            Updates an API destination.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.UpdateApiDestinationRequest.ConnectionArn">
            <summary>
            Gets and sets the property ConnectionArn. 
            <para>
            The ARN of the connection to use for the API destination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.UpdateApiDestinationRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The name of the API destination to update.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.UpdateApiDestinationRequest.HttpMethod">
            <summary>
            Gets and sets the property HttpMethod. 
            <para>
            The method to use for the API destination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.UpdateApiDestinationRequest.InvocationEndpoint">
            <summary>
            Gets and sets the property InvocationEndpoint. 
            <para>
            The URL to the endpoint to use for the API destination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.UpdateApiDestinationRequest.InvocationRateLimitPerSecond">
            <summary>
            Gets and sets the property InvocationRateLimitPerSecond. 
            <para>
            The maximum number of invocations per second to send to the API destination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.UpdateApiDestinationRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the API destination to update.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.UpdateApiDestinationResponse">
            <summary>
            This is the response object from the UpdateApiDestination operation.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.UpdateApiDestinationResponse.ApiDestinationArn">
            <summary>
            Gets and sets the property ApiDestinationArn. 
            <para>
            The ARN of the API destination that was updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.UpdateApiDestinationResponse.ApiDestinationState">
            <summary>
            Gets and sets the property ApiDestinationState. 
            <para>
            The state of the API destination that was updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.UpdateApiDestinationResponse.CreationTime">
            <summary>
            Gets and sets the property CreationTime. 
            <para>
            A time stamp for the time that the API destination was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.UpdateApiDestinationResponse.LastModifiedTime">
            <summary>
            Gets and sets the property LastModifiedTime. 
            <para>
            A time stamp for the time that the API destination was last modified.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.UpdateArchiveRequest">
            <summary>
            Container for the parameters to the UpdateArchive operation.
            Updates the specified archive.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.UpdateArchiveRequest.ArchiveName">
            <summary>
            Gets and sets the property ArchiveName. 
            <para>
            The name of the archive to update.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.UpdateArchiveRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The description for the archive.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.UpdateArchiveRequest.EventPattern">
            <summary>
            Gets and sets the property EventPattern. 
            <para>
            The event pattern to use to filter events sent to the archive.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.UpdateArchiveRequest.RetentionDays">
            <summary>
            Gets and sets the property RetentionDays. 
            <para>
            The number of days to retain events in the archive.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.UpdateArchiveResponse">
            <summary>
            This is the response object from the UpdateArchive operation.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.UpdateArchiveResponse.ArchiveArn">
            <summary>
            Gets and sets the property ArchiveArn. 
            <para>
            The ARN of the archive.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.UpdateArchiveResponse.CreationTime">
            <summary>
            Gets and sets the property CreationTime. 
            <para>
            The time at which the archive was updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.UpdateArchiveResponse.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The state of the archive.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.UpdateArchiveResponse.StateReason">
            <summary>
            Gets and sets the property StateReason. 
            <para>
            The reason that the archive is in the current state.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.UpdateConnectionApiKeyAuthRequestParameters">
            <summary>
            Contains the API key authorization parameters to use to update the connection.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.UpdateConnectionApiKeyAuthRequestParameters.ApiKeyName">
            <summary>
            Gets and sets the property ApiKeyName. 
            <para>
            The name of the API key to use for authorization.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.UpdateConnectionApiKeyAuthRequestParameters.ApiKeyValue">
            <summary>
            Gets and sets the property ApiKeyValue. 
            <para>
            The value associated with teh API key to use for authorization.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.UpdateConnectionAuthRequestParameters">
            <summary>
            Contains the additional parameters to use for the connection.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.UpdateConnectionAuthRequestParameters.ApiKeyAuthParameters">
            <summary>
            Gets and sets the property ApiKeyAuthParameters. 
            <para>
            A <code>UpdateConnectionApiKeyAuthRequestParameters</code> object that contains the
            authorization parameters for API key authorization.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.UpdateConnectionAuthRequestParameters.BasicAuthParameters">
            <summary>
            Gets and sets the property BasicAuthParameters. 
            <para>
            A <code>UpdateConnectionBasicAuthRequestParameters</code> object that contains the
            authorization parameters for Basic authorization.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.UpdateConnectionAuthRequestParameters.InvocationHttpParameters">
            <summary>
            Gets and sets the property InvocationHttpParameters. 
            <para>
            A <code>ConnectionHttpParameters</code> object that contains the additional parameters
            to use for the connection.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.UpdateConnectionAuthRequestParameters.OAuthParameters">
            <summary>
            Gets and sets the property OAuthParameters. 
            <para>
            A <code>UpdateConnectionOAuthRequestParameters</code> object that contains the authorization
            parameters for OAuth authorization.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.UpdateConnectionBasicAuthRequestParameters">
            <summary>
            Contains the Basic authorization parameters for the connection.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.UpdateConnectionBasicAuthRequestParameters.Password">
            <summary>
            Gets and sets the property Password. 
            <para>
            The password associated with the user name to use for Basic authorization.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.UpdateConnectionBasicAuthRequestParameters.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The user name to use for Basic authorization.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.UpdateConnectionOAuthClientRequestParameters">
            <summary>
            Contains the OAuth authorization parameters to use for the connection.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.UpdateConnectionOAuthClientRequestParameters.ClientID">
            <summary>
            Gets and sets the property ClientID. 
            <para>
            The client ID to use for OAuth authorization.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.UpdateConnectionOAuthClientRequestParameters.ClientSecret">
            <summary>
            Gets and sets the property ClientSecret. 
            <para>
            The client secret assciated with the client ID to use for OAuth authorization.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.UpdateConnectionOAuthRequestParameters">
            <summary>
            Contains the OAuth request parameters to use for the connection.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.UpdateConnectionOAuthRequestParameters.AuthorizationEndpoint">
            <summary>
            Gets and sets the property AuthorizationEndpoint. 
            <para>
            The URL to the authorization endpoint when OAuth is specified as the authorization
            type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.UpdateConnectionOAuthRequestParameters.ClientParameters">
            <summary>
            Gets and sets the property ClientParameters. 
            <para>
            A <code>UpdateConnectionOAuthClientRequestParameters</code> object that contains the
            client parameters to use for the connection when OAuth is specified as the authorization
            type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.UpdateConnectionOAuthRequestParameters.HttpMethod">
            <summary>
            Gets and sets the property HttpMethod. 
            <para>
            The method used to connect to the HTTP endpoint.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.UpdateConnectionOAuthRequestParameters.OAuthHttpParameters">
            <summary>
            Gets and sets the property OAuthHttpParameters. 
            <para>
            The additional HTTP parameters used for the OAuth authorization request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.UpdateConnectionRequest">
            <summary>
            Container for the parameters to the UpdateConnection operation.
            Updates settings for a connection.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.UpdateConnectionRequest.AuthorizationType">
            <summary>
            Gets and sets the property AuthorizationType. 
            <para>
            The type of authorization to use for the connection.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.UpdateConnectionRequest.AuthParameters">
            <summary>
            Gets and sets the property AuthParameters. 
            <para>
            The authorization parameters to use for the connection.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.UpdateConnectionRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description for the connection.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.UpdateConnectionRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the connection to update.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.Model.UpdateConnectionResponse">
            <summary>
            This is the response object from the UpdateConnection operation.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.UpdateConnectionResponse.ConnectionArn">
            <summary>
            Gets and sets the property ConnectionArn. 
            <para>
            The ARN of the connection that was updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.UpdateConnectionResponse.ConnectionState">
            <summary>
            Gets and sets the property ConnectionState. 
            <para>
            The state of the connection that was updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.UpdateConnectionResponse.CreationTime">
            <summary>
            Gets and sets the property CreationTime. 
            <para>
            A time stamp for the time that the connection was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.UpdateConnectionResponse.LastAuthorizedTime">
            <summary>
            Gets and sets the property LastAuthorizedTime. 
            <para>
            A time stamp for the time that the connection was last authorized.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.Model.UpdateConnectionResponse.LastModifiedTime">
            <summary>
            Gets and sets the property LastModifiedTime. 
            <para>
            A time stamp for the time that the connection was last modified.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.AmazonEventBridgeRequest">
            <summary>
            Base class for EventBridge operation requests.
            </summary>
        </member>
        <member name="T:Amazon.EventBridge.ApiDestinationHttpMethod">
            <summary>
            Constants used for properties of type ApiDestinationHttpMethod.
            </summary>
        </member>
        <member name="F:Amazon.EventBridge.ApiDestinationHttpMethod.DELETE">
            <summary>
            Constant DELETE for ApiDestinationHttpMethod
            </summary>
        </member>
        <member name="F:Amazon.EventBridge.ApiDestinationHttpMethod.GET">
            <summary>
            Constant GET for ApiDestinationHttpMethod
            </summary>
        </member>
        <member name="F:Amazon.EventBridge.ApiDestinationHttpMethod.HEAD">
            <summary>
            Constant HEAD for ApiDestinationHttpMethod
            </summary>
        </member>
        <member name="F:Amazon.EventBridge.ApiDestinationHttpMethod.OPTIONS">
            <summary>
            Constant OPTIONS for ApiDestinationHttpMethod
            </summary>
        </member>
        <member name="F:Amazon.EventBridge.ApiDestinationHttpMethod.PATCH">
            <summary>
            Constant PATCH for ApiDestinationHttpMethod
            </summary>
        </member>
        <member name="F:Amazon.EventBridge.ApiDestinationHttpMethod.POST">
            <summary>
            Constant POST for ApiDestinationHttpMethod
            </summary>
        </member>
        <member name="F:Amazon.EventBridge.ApiDestinationHttpMethod.PUT">
            <summary>
            Constant PUT for ApiDestinationHttpMethod
            </summary>
        </member>
        <member name="M:Amazon.EventBridge.ApiDestinationHttpMethod.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EventBridge.ApiDestinationHttpMethod.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EventBridge.ApiDestinationHttpMethod.op_Implicit(System.String)~Amazon.EventBridge.ApiDestinationHttpMethod">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EventBridge.ApiDestinationState">
            <summary>
            Constants used for properties of type ApiDestinationState.
            </summary>
        </member>
        <member name="F:Amazon.EventBridge.ApiDestinationState.ACTIVE">
            <summary>
            Constant ACTIVE for ApiDestinationState
            </summary>
        </member>
        <member name="F:Amazon.EventBridge.ApiDestinationState.INACTIVE">
            <summary>
            Constant INACTIVE for ApiDestinationState
            </summary>
        </member>
        <member name="M:Amazon.EventBridge.ApiDestinationState.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EventBridge.ApiDestinationState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EventBridge.ApiDestinationState.op_Implicit(System.String)~Amazon.EventBridge.ApiDestinationState">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EventBridge.ArchiveState">
            <summary>
            Constants used for properties of type ArchiveState.
            </summary>
        </member>
        <member name="F:Amazon.EventBridge.ArchiveState.CREATE_FAILED">
            <summary>
            Constant CREATE_FAILED for ArchiveState
            </summary>
        </member>
        <member name="F:Amazon.EventBridge.ArchiveState.CREATING">
            <summary>
            Constant CREATING for ArchiveState
            </summary>
        </member>
        <member name="F:Amazon.EventBridge.ArchiveState.DISABLED">
            <summary>
            Constant DISABLED for ArchiveState
            </summary>
        </member>
        <member name="F:Amazon.EventBridge.ArchiveState.ENABLED">
            <summary>
            Constant ENABLED for ArchiveState
            </summary>
        </member>
        <member name="F:Amazon.EventBridge.ArchiveState.UPDATE_FAILED">
            <summary>
            Constant UPDATE_FAILED for ArchiveState
            </summary>
        </member>
        <member name="F:Amazon.EventBridge.ArchiveState.UPDATING">
            <summary>
            Constant UPDATING for ArchiveState
            </summary>
        </member>
        <member name="M:Amazon.EventBridge.ArchiveState.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EventBridge.ArchiveState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EventBridge.ArchiveState.op_Implicit(System.String)~Amazon.EventBridge.ArchiveState">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EventBridge.AssignPublicIp">
            <summary>
            Constants used for properties of type AssignPublicIp.
            </summary>
        </member>
        <member name="F:Amazon.EventBridge.AssignPublicIp.DISABLED">
            <summary>
            Constant DISABLED for AssignPublicIp
            </summary>
        </member>
        <member name="F:Amazon.EventBridge.AssignPublicIp.ENABLED">
            <summary>
            Constant ENABLED for AssignPublicIp
            </summary>
        </member>
        <member name="M:Amazon.EventBridge.AssignPublicIp.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EventBridge.AssignPublicIp.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EventBridge.AssignPublicIp.op_Implicit(System.String)~Amazon.EventBridge.AssignPublicIp">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EventBridge.ConnectionAuthorizationType">
            <summary>
            Constants used for properties of type ConnectionAuthorizationType.
            </summary>
        </member>
        <member name="F:Amazon.EventBridge.ConnectionAuthorizationType.API_KEY">
            <summary>
            Constant API_KEY for ConnectionAuthorizationType
            </summary>
        </member>
        <member name="F:Amazon.EventBridge.ConnectionAuthorizationType.BASIC">
            <summary>
            Constant BASIC for ConnectionAuthorizationType
            </summary>
        </member>
        <member name="F:Amazon.EventBridge.ConnectionAuthorizationType.OAUTH_CLIENT_CREDENTIALS">
            <summary>
            Constant OAUTH_CLIENT_CREDENTIALS for ConnectionAuthorizationType
            </summary>
        </member>
        <member name="M:Amazon.EventBridge.ConnectionAuthorizationType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EventBridge.ConnectionAuthorizationType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EventBridge.ConnectionAuthorizationType.op_Implicit(System.String)~Amazon.EventBridge.ConnectionAuthorizationType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EventBridge.ConnectionOAuthHttpMethod">
            <summary>
            Constants used for properties of type ConnectionOAuthHttpMethod.
            </summary>
        </member>
        <member name="F:Amazon.EventBridge.ConnectionOAuthHttpMethod.GET">
            <summary>
            Constant GET for ConnectionOAuthHttpMethod
            </summary>
        </member>
        <member name="F:Amazon.EventBridge.ConnectionOAuthHttpMethod.POST">
            <summary>
            Constant POST for ConnectionOAuthHttpMethod
            </summary>
        </member>
        <member name="F:Amazon.EventBridge.ConnectionOAuthHttpMethod.PUT">
            <summary>
            Constant PUT for ConnectionOAuthHttpMethod
            </summary>
        </member>
        <member name="M:Amazon.EventBridge.ConnectionOAuthHttpMethod.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EventBridge.ConnectionOAuthHttpMethod.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EventBridge.ConnectionOAuthHttpMethod.op_Implicit(System.String)~Amazon.EventBridge.ConnectionOAuthHttpMethod">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EventBridge.ConnectionState">
            <summary>
            Constants used for properties of type ConnectionState.
            </summary>
        </member>
        <member name="F:Amazon.EventBridge.ConnectionState.AUTHORIZED">
            <summary>
            Constant AUTHORIZED for ConnectionState
            </summary>
        </member>
        <member name="F:Amazon.EventBridge.ConnectionState.AUTHORIZING">
            <summary>
            Constant AUTHORIZING for ConnectionState
            </summary>
        </member>
        <member name="F:Amazon.EventBridge.ConnectionState.CREATING">
            <summary>
            Constant CREATING for ConnectionState
            </summary>
        </member>
        <member name="F:Amazon.EventBridge.ConnectionState.DEAUTHORIZED">
            <summary>
            Constant DEAUTHORIZED for ConnectionState
            </summary>
        </member>
        <member name="F:Amazon.EventBridge.ConnectionState.DEAUTHORIZING">
            <summary>
            Constant DEAUTHORIZING for ConnectionState
            </summary>
        </member>
        <member name="F:Amazon.EventBridge.ConnectionState.DELETING">
            <summary>
            Constant DELETING for ConnectionState
            </summary>
        </member>
        <member name="F:Amazon.EventBridge.ConnectionState.UPDATING">
            <summary>
            Constant UPDATING for ConnectionState
            </summary>
        </member>
        <member name="M:Amazon.EventBridge.ConnectionState.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EventBridge.ConnectionState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EventBridge.ConnectionState.op_Implicit(System.String)~Amazon.EventBridge.ConnectionState">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EventBridge.EventSourceState">
            <summary>
            Constants used for properties of type EventSourceState.
            </summary>
        </member>
        <member name="F:Amazon.EventBridge.EventSourceState.ACTIVE">
            <summary>
            Constant ACTIVE for EventSourceState
            </summary>
        </member>
        <member name="F:Amazon.EventBridge.EventSourceState.DELETED">
            <summary>
            Constant DELETED for EventSourceState
            </summary>
        </member>
        <member name="F:Amazon.EventBridge.EventSourceState.PENDING">
            <summary>
            Constant PENDING for EventSourceState
            </summary>
        </member>
        <member name="M:Amazon.EventBridge.EventSourceState.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EventBridge.EventSourceState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EventBridge.EventSourceState.op_Implicit(System.String)~Amazon.EventBridge.EventSourceState">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EventBridge.LaunchType">
            <summary>
            Constants used for properties of type LaunchType.
            </summary>
        </member>
        <member name="F:Amazon.EventBridge.LaunchType.EC2">
            <summary>
            Constant EC2 for LaunchType
            </summary>
        </member>
        <member name="F:Amazon.EventBridge.LaunchType.EXTERNAL">
            <summary>
            Constant EXTERNAL for LaunchType
            </summary>
        </member>
        <member name="F:Amazon.EventBridge.LaunchType.FARGATE">
            <summary>
            Constant FARGATE for LaunchType
            </summary>
        </member>
        <member name="M:Amazon.EventBridge.LaunchType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EventBridge.LaunchType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EventBridge.LaunchType.op_Implicit(System.String)~Amazon.EventBridge.LaunchType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EventBridge.PlacementConstraintType">
            <summary>
            Constants used for properties of type PlacementConstraintType.
            </summary>
        </member>
        <member name="F:Amazon.EventBridge.PlacementConstraintType.DistinctInstance">
            <summary>
            Constant DistinctInstance for PlacementConstraintType
            </summary>
        </member>
        <member name="F:Amazon.EventBridge.PlacementConstraintType.MemberOf">
            <summary>
            Constant MemberOf for PlacementConstraintType
            </summary>
        </member>
        <member name="M:Amazon.EventBridge.PlacementConstraintType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EventBridge.PlacementConstraintType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EventBridge.PlacementConstraintType.op_Implicit(System.String)~Amazon.EventBridge.PlacementConstraintType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EventBridge.PlacementStrategyType">
            <summary>
            Constants used for properties of type PlacementStrategyType.
            </summary>
        </member>
        <member name="F:Amazon.EventBridge.PlacementStrategyType.Binpack">
            <summary>
            Constant Binpack for PlacementStrategyType
            </summary>
        </member>
        <member name="F:Amazon.EventBridge.PlacementStrategyType.Random">
            <summary>
            Constant Random for PlacementStrategyType
            </summary>
        </member>
        <member name="F:Amazon.EventBridge.PlacementStrategyType.Spread">
            <summary>
            Constant Spread for PlacementStrategyType
            </summary>
        </member>
        <member name="M:Amazon.EventBridge.PlacementStrategyType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EventBridge.PlacementStrategyType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EventBridge.PlacementStrategyType.op_Implicit(System.String)~Amazon.EventBridge.PlacementStrategyType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EventBridge.PropagateTags">
            <summary>
            Constants used for properties of type PropagateTags.
            </summary>
        </member>
        <member name="F:Amazon.EventBridge.PropagateTags.TASK_DEFINITION">
            <summary>
            Constant TASK_DEFINITION for PropagateTags
            </summary>
        </member>
        <member name="M:Amazon.EventBridge.PropagateTags.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EventBridge.PropagateTags.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EventBridge.PropagateTags.op_Implicit(System.String)~Amazon.EventBridge.PropagateTags">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EventBridge.ReplayState">
            <summary>
            Constants used for properties of type ReplayState.
            </summary>
        </member>
        <member name="F:Amazon.EventBridge.ReplayState.CANCELLED">
            <summary>
            Constant CANCELLED for ReplayState
            </summary>
        </member>
        <member name="F:Amazon.EventBridge.ReplayState.CANCELLING">
            <summary>
            Constant CANCELLING for ReplayState
            </summary>
        </member>
        <member name="F:Amazon.EventBridge.ReplayState.COMPLETED">
            <summary>
            Constant COMPLETED for ReplayState
            </summary>
        </member>
        <member name="F:Amazon.EventBridge.ReplayState.FAILED">
            <summary>
            Constant FAILED for ReplayState
            </summary>
        </member>
        <member name="F:Amazon.EventBridge.ReplayState.RUNNING">
            <summary>
            Constant RUNNING for ReplayState
            </summary>
        </member>
        <member name="F:Amazon.EventBridge.ReplayState.STARTING">
            <summary>
            Constant STARTING for ReplayState
            </summary>
        </member>
        <member name="M:Amazon.EventBridge.ReplayState.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EventBridge.ReplayState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EventBridge.ReplayState.op_Implicit(System.String)~Amazon.EventBridge.ReplayState">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EventBridge.RuleState">
            <summary>
            Constants used for properties of type RuleState.
            </summary>
        </member>
        <member name="F:Amazon.EventBridge.RuleState.DISABLED">
            <summary>
            Constant DISABLED for RuleState
            </summary>
        </member>
        <member name="F:Amazon.EventBridge.RuleState.ENABLED">
            <summary>
            Constant ENABLED for RuleState
            </summary>
        </member>
        <member name="M:Amazon.EventBridge.RuleState.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EventBridge.RuleState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EventBridge.RuleState.op_Implicit(System.String)~Amazon.EventBridge.RuleState">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EventBridge.AmazonEventBridgeClient">
             <summary>
             Implementation for accessing EventBridge
            
             Amazon EventBridge helps you to respond to state changes in your Amazon Web Services
             resources. When your resources change state, they automatically send events to an
             event stream. You can create rules that match selected events in the stream and route
             them to targets to take action. You can also use rules to take action on a predetermined
             schedule. For example, you can configure rules to:
             
              <ul> <li> 
             <para>
             Automatically invoke an Lambda function to update DNS entries when an event notifies
             you that Amazon EC2 instance enters the running state.
             </para>
              </li> <li> 
             <para>
             Direct specific API records from CloudTrail to an Amazon Kinesis data stream for detailed
             analysis of potential security or availability risks.
             </para>
              </li> <li> 
             <para>
             Periodically invoke a built-in target to create a snapshot of an Amazon EBS volume.
             </para>
              </li> </ul> 
             <para>
             For more information about the features of Amazon EventBridge, see the <a href="https://docs.aws.amazon.com/eventbridge/latest/userguide">Amazon
             EventBridge User Guide</a>.
             </para>
             </summary>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.#ctor">
             <summary>
             Constructs AmazonEventBridgeClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonEventBridgeClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.#ctor(Amazon.EventBridge.AmazonEventBridgeConfig)">
             <summary>
             Constructs AmazonEventBridgeClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonEventBridgeClient Configuration Object</param>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonEventBridgeClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonEventBridgeClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.EventBridge.AmazonEventBridgeConfig)">
            <summary>
            Constructs AmazonEventBridgeClient with AWS Credentials and an
            AmazonEventBridgeClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonEventBridgeClient Configuration Object</param>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonEventBridgeClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonEventBridgeClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.#ctor(System.String,System.String,Amazon.EventBridge.AmazonEventBridgeConfig)">
            <summary>
            Constructs AmazonEventBridgeClient with AWS Access Key ID, AWS Secret Key and an
            AmazonEventBridgeClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonEventBridgeClient Configuration Object</param>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonEventBridgeClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonEventBridgeClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.#ctor(System.String,System.String,System.String,Amazon.EventBridge.AmazonEventBridgeConfig)">
            <summary>
            Constructs AmazonEventBridgeClient with AWS Access Key ID, AWS Secret Key and an
            AmazonEventBridgeClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonEventBridgeClient Configuration Object</param>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="P:Amazon.EventBridge.AmazonEventBridgeClient.ServiceMetadata">
            <summary>
            Capture metadata for the service.
            </summary>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.ActivateEventSource(Amazon.EventBridge.Model.ActivateEventSourceRequest)">
            <summary>
            Activates a partner event source that has been deactivated. Once activated, your matching
            event bus will start receiving events from the event source.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ActivateEventSource service method.</param>
            
            <returns>The response from the ActivateEventSource service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InvalidStateException">
            The specified state is not a valid state for an event source.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.OperationDisabledException">
            The operation you are attempting is not available in this region.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/ActivateEventSource">REST API Reference for ActivateEventSource Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.ActivateEventSourceAsync(Amazon.EventBridge.Model.ActivateEventSourceRequest,System.Threading.CancellationToken)">
            <summary>
            Activates a partner event source that has been deactivated. Once activated, your matching
            event bus will start receiving events from the event source.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ActivateEventSource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ActivateEventSource service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InvalidStateException">
            The specified state is not a valid state for an event source.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.OperationDisabledException">
            The operation you are attempting is not available in this region.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/ActivateEventSource">REST API Reference for ActivateEventSource Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.CancelReplay(Amazon.EventBridge.Model.CancelReplayRequest)">
            <summary>
            Cancels the specified replay.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CancelReplay service method.</param>
            
            <returns>The response from the CancelReplay service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.IllegalStatusException">
            An error occurred because a replay can be canceled only when the state is Running
            or Starting.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/CancelReplay">REST API Reference for CancelReplay Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.CancelReplayAsync(Amazon.EventBridge.Model.CancelReplayRequest,System.Threading.CancellationToken)">
            <summary>
            Cancels the specified replay.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CancelReplay service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CancelReplay service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.IllegalStatusException">
            An error occurred because a replay can be canceled only when the state is Running
            or Starting.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/CancelReplay">REST API Reference for CancelReplay Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.CreateApiDestination(Amazon.EventBridge.Model.CreateApiDestinationRequest)">
            <summary>
            Creates an API destination, which is an HTTP invocation endpoint configured as a target
            for events.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateApiDestination service method.</param>
            
            <returns>The response from the CreateApiDestination service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.LimitExceededException">
            The request failed because it attempted to create resource beyond the allowed service
            quota.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceAlreadyExistsException">
            The resource you are trying to create already exists.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/CreateApiDestination">REST API Reference for CreateApiDestination Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.CreateApiDestinationAsync(Amazon.EventBridge.Model.CreateApiDestinationRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an API destination, which is an HTTP invocation endpoint configured as a target
            for events.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateApiDestination service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateApiDestination service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.LimitExceededException">
            The request failed because it attempted to create resource beyond the allowed service
            quota.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceAlreadyExistsException">
            The resource you are trying to create already exists.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/CreateApiDestination">REST API Reference for CreateApiDestination Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.CreateArchive(Amazon.EventBridge.Model.CreateArchiveRequest)">
            <summary>
            Creates an archive of events with the specified settings. When you create an archive,
            incoming events might not immediately start being sent to the archive. Allow a short
            period of time for changes to take effect. If you do not specify a pattern to filter
            events sent to the archive, all events are sent to the archive except replayed events.
            Replayed events are not sent to an archive.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateArchive service method.</param>
            
            <returns>The response from the CreateArchive service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InvalidEventPatternException">
            The event pattern is not valid.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.LimitExceededException">
            The request failed because it attempted to create resource beyond the allowed service
            quota.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceAlreadyExistsException">
            The resource you are trying to create already exists.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/CreateArchive">REST API Reference for CreateArchive Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.CreateArchiveAsync(Amazon.EventBridge.Model.CreateArchiveRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an archive of events with the specified settings. When you create an archive,
            incoming events might not immediately start being sent to the archive. Allow a short
            period of time for changes to take effect. If you do not specify a pattern to filter
            events sent to the archive, all events are sent to the archive except replayed events.
            Replayed events are not sent to an archive.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateArchive service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateArchive service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InvalidEventPatternException">
            The event pattern is not valid.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.LimitExceededException">
            The request failed because it attempted to create resource beyond the allowed service
            quota.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceAlreadyExistsException">
            The resource you are trying to create already exists.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/CreateArchive">REST API Reference for CreateArchive Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.CreateConnection(Amazon.EventBridge.Model.CreateConnectionRequest)">
            <summary>
            Creates a connection. A connection defines the authorization type and credentials
            to use for authorization with an API destination HTTP endpoint.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateConnection service method.</param>
            
            <returns>The response from the CreateConnection service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.LimitExceededException">
            The request failed because it attempted to create resource beyond the allowed service
            quota.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceAlreadyExistsException">
            The resource you are trying to create already exists.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/CreateConnection">REST API Reference for CreateConnection Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.CreateConnectionAsync(Amazon.EventBridge.Model.CreateConnectionRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a connection. A connection defines the authorization type and credentials
            to use for authorization with an API destination HTTP endpoint.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateConnection service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateConnection service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.LimitExceededException">
            The request failed because it attempted to create resource beyond the allowed service
            quota.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceAlreadyExistsException">
            The resource you are trying to create already exists.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/CreateConnection">REST API Reference for CreateConnection Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.CreateEventBus(Amazon.EventBridge.Model.CreateEventBusRequest)">
            <summary>
            Creates a new event bus within your account. This can be a custom event bus which
            you can use to receive events from your custom applications and services, or it can
            be a partner event bus which can be matched to a partner event source.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateEventBus service method.</param>
            
            <returns>The response from the CreateEventBus service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InvalidStateException">
            The specified state is not a valid state for an event source.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.LimitExceededException">
            The request failed because it attempted to create resource beyond the allowed service
            quota.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.OperationDisabledException">
            The operation you are attempting is not available in this region.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceAlreadyExistsException">
            The resource you are trying to create already exists.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/CreateEventBus">REST API Reference for CreateEventBus Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.CreateEventBusAsync(Amazon.EventBridge.Model.CreateEventBusRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new event bus within your account. This can be a custom event bus which
            you can use to receive events from your custom applications and services, or it can
            be a partner event bus which can be matched to a partner event source.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateEventBus service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateEventBus service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InvalidStateException">
            The specified state is not a valid state for an event source.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.LimitExceededException">
            The request failed because it attempted to create resource beyond the allowed service
            quota.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.OperationDisabledException">
            The operation you are attempting is not available in this region.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceAlreadyExistsException">
            The resource you are trying to create already exists.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/CreateEventBus">REST API Reference for CreateEventBus Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.CreatePartnerEventSource(Amazon.EventBridge.Model.CreatePartnerEventSourceRequest)">
            <summary>
            Called by an SaaS partner to create a partner event source. This operation is not
            used by Amazon Web Services customers.
            
             
            <para>
            Each partner event source can be used by one Amazon Web Services account to create
            a matching partner event bus in that Amazon Web Services account. A SaaS partner must
            create one partner event source for each Amazon Web Services account that wants to
            receive those event types. 
            </para>
             
            <para>
            A partner event source creates events based on resources within the SaaS partner's
            service or application.
            </para>
             
            <para>
            An Amazon Web Services account that creates a partner event bus that matches the partner
            event source can use that event bus to receive events from the partner, and then process
            them using Amazon Web Services Events rules and targets.
            </para>
             
            <para>
            Partner event source names follow this format:
            </para>
             
            <para>
             <code> <i>partner_name</i>/<i>event_namespace</i>/<i>event_name</i> </code> 
            </para>
             
            <para>
             <i>partner_name</i> is determined during partner registration and identifies the
            partner to Amazon Web Services customers. <i>event_namespace</i> is determined by
            the partner and is a way for the partner to categorize their events. <i>event_name</i>
            is determined by the partner, and should uniquely identify an event-generating resource
            within the partner system. The combination of <i>event_namespace</i> and <i>event_name</i>
            should help Amazon Web Services customers decide whether to create an event bus to
            receive these events.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreatePartnerEventSource service method.</param>
            
            <returns>The response from the CreatePartnerEventSource service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.LimitExceededException">
            The request failed because it attempted to create resource beyond the allowed service
            quota.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.OperationDisabledException">
            The operation you are attempting is not available in this region.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceAlreadyExistsException">
            The resource you are trying to create already exists.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/CreatePartnerEventSource">REST API Reference for CreatePartnerEventSource Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.CreatePartnerEventSourceAsync(Amazon.EventBridge.Model.CreatePartnerEventSourceRequest,System.Threading.CancellationToken)">
            <summary>
            Called by an SaaS partner to create a partner event source. This operation is not
            used by Amazon Web Services customers.
            
             
            <para>
            Each partner event source can be used by one Amazon Web Services account to create
            a matching partner event bus in that Amazon Web Services account. A SaaS partner must
            create one partner event source for each Amazon Web Services account that wants to
            receive those event types. 
            </para>
             
            <para>
            A partner event source creates events based on resources within the SaaS partner's
            service or application.
            </para>
             
            <para>
            An Amazon Web Services account that creates a partner event bus that matches the partner
            event source can use that event bus to receive events from the partner, and then process
            them using Amazon Web Services Events rules and targets.
            </para>
             
            <para>
            Partner event source names follow this format:
            </para>
             
            <para>
             <code> <i>partner_name</i>/<i>event_namespace</i>/<i>event_name</i> </code> 
            </para>
             
            <para>
             <i>partner_name</i> is determined during partner registration and identifies the
            partner to Amazon Web Services customers. <i>event_namespace</i> is determined by
            the partner and is a way for the partner to categorize their events. <i>event_name</i>
            is determined by the partner, and should uniquely identify an event-generating resource
            within the partner system. The combination of <i>event_namespace</i> and <i>event_name</i>
            should help Amazon Web Services customers decide whether to create an event bus to
            receive these events.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreatePartnerEventSource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreatePartnerEventSource service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.LimitExceededException">
            The request failed because it attempted to create resource beyond the allowed service
            quota.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.OperationDisabledException">
            The operation you are attempting is not available in this region.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceAlreadyExistsException">
            The resource you are trying to create already exists.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/CreatePartnerEventSource">REST API Reference for CreatePartnerEventSource Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.DeactivateEventSource(Amazon.EventBridge.Model.DeactivateEventSourceRequest)">
            <summary>
            You can use this operation to temporarily stop receiving events from the specified
            partner event source. The matching event bus is not deleted. 
            
             
            <para>
            When you deactivate a partner event source, the source goes into PENDING state. If
            it remains in PENDING state for more than two weeks, it is deleted.
            </para>
             
            <para>
            To activate a deactivated partner event source, use <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_ActivateEventSource.html">ActivateEventSource</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeactivateEventSource service method.</param>
            
            <returns>The response from the DeactivateEventSource service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InvalidStateException">
            The specified state is not a valid state for an event source.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.OperationDisabledException">
            The operation you are attempting is not available in this region.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/DeactivateEventSource">REST API Reference for DeactivateEventSource Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.DeactivateEventSourceAsync(Amazon.EventBridge.Model.DeactivateEventSourceRequest,System.Threading.CancellationToken)">
            <summary>
            You can use this operation to temporarily stop receiving events from the specified
            partner event source. The matching event bus is not deleted. 
            
             
            <para>
            When you deactivate a partner event source, the source goes into PENDING state. If
            it remains in PENDING state for more than two weeks, it is deleted.
            </para>
             
            <para>
            To activate a deactivated partner event source, use <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_ActivateEventSource.html">ActivateEventSource</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeactivateEventSource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeactivateEventSource service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InvalidStateException">
            The specified state is not a valid state for an event source.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.OperationDisabledException">
            The operation you are attempting is not available in this region.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/DeactivateEventSource">REST API Reference for DeactivateEventSource Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.DeauthorizeConnection(Amazon.EventBridge.Model.DeauthorizeConnectionRequest)">
            <summary>
            Removes all authorization parameters from the connection. This lets you remove the
            secret from the connection so you can reuse it without having to create a new connection.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeauthorizeConnection service method.</param>
            
            <returns>The response from the DeauthorizeConnection service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/DeauthorizeConnection">REST API Reference for DeauthorizeConnection Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.DeauthorizeConnectionAsync(Amazon.EventBridge.Model.DeauthorizeConnectionRequest,System.Threading.CancellationToken)">
            <summary>
            Removes all authorization parameters from the connection. This lets you remove the
            secret from the connection so you can reuse it without having to create a new connection.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeauthorizeConnection service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeauthorizeConnection service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/DeauthorizeConnection">REST API Reference for DeauthorizeConnection Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.DeleteApiDestination(Amazon.EventBridge.Model.DeleteApiDestinationRequest)">
            <summary>
            Deletes the specified API destination.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteApiDestination service method.</param>
            
            <returns>The response from the DeleteApiDestination service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/DeleteApiDestination">REST API Reference for DeleteApiDestination Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.DeleteApiDestinationAsync(Amazon.EventBridge.Model.DeleteApiDestinationRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified API destination.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteApiDestination service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteApiDestination service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/DeleteApiDestination">REST API Reference for DeleteApiDestination Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.DeleteArchive(Amazon.EventBridge.Model.DeleteArchiveRequest)">
            <summary>
            Deletes the specified archive.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteArchive service method.</param>
            
            <returns>The response from the DeleteArchive service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/DeleteArchive">REST API Reference for DeleteArchive Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.DeleteArchiveAsync(Amazon.EventBridge.Model.DeleteArchiveRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified archive.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteArchive service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteArchive service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/DeleteArchive">REST API Reference for DeleteArchive Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.DeleteConnection(Amazon.EventBridge.Model.DeleteConnectionRequest)">
            <summary>
            Deletes a connection.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteConnection service method.</param>
            
            <returns>The response from the DeleteConnection service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/DeleteConnection">REST API Reference for DeleteConnection Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.DeleteConnectionAsync(Amazon.EventBridge.Model.DeleteConnectionRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a connection.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteConnection service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteConnection service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/DeleteConnection">REST API Reference for DeleteConnection Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.DeleteEventBus(Amazon.EventBridge.Model.DeleteEventBusRequest)">
            <summary>
            Deletes the specified custom event bus or partner event bus. All rules associated
            with this event bus need to be deleted. You can't delete your account's default event
            bus.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteEventBus service method.</param>
            
            <returns>The response from the DeleteEventBus service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/DeleteEventBus">REST API Reference for DeleteEventBus Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.DeleteEventBusAsync(Amazon.EventBridge.Model.DeleteEventBusRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified custom event bus or partner event bus. All rules associated
            with this event bus need to be deleted. You can't delete your account's default event
            bus.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteEventBus service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteEventBus service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/DeleteEventBus">REST API Reference for DeleteEventBus Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.DeletePartnerEventSource(Amazon.EventBridge.Model.DeletePartnerEventSourceRequest)">
            <summary>
            This operation is used by SaaS partners to delete a partner event source. This operation
            is not used by Amazon Web Services customers.
            
             
            <para>
            When you delete an event source, the status of the corresponding partner event bus
            in the Amazon Web Services customer account becomes DELETED.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeletePartnerEventSource service method.</param>
            
            <returns>The response from the DeletePartnerEventSource service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.OperationDisabledException">
            The operation you are attempting is not available in this region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/DeletePartnerEventSource">REST API Reference for DeletePartnerEventSource Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.DeletePartnerEventSourceAsync(Amazon.EventBridge.Model.DeletePartnerEventSourceRequest,System.Threading.CancellationToken)">
            <summary>
            This operation is used by SaaS partners to delete a partner event source. This operation
            is not used by Amazon Web Services customers.
            
             
            <para>
            When you delete an event source, the status of the corresponding partner event bus
            in the Amazon Web Services customer account becomes DELETED.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeletePartnerEventSource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeletePartnerEventSource service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.OperationDisabledException">
            The operation you are attempting is not available in this region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/DeletePartnerEventSource">REST API Reference for DeletePartnerEventSource Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.DeleteRule(Amazon.EventBridge.Model.DeleteRuleRequest)">
            <summary>
            Deletes the specified rule.
            
             
            <para>
            Before you can delete the rule, you must remove all targets, using <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_RemoveTargets.html">RemoveTargets</a>.
            </para>
             
            <para>
            When you delete a rule, incoming events might continue to match to the deleted rule.
            Allow a short period of time for changes to take effect.
            </para>
             
            <para>
            If you call delete rule multiple times for the same rule, all calls will succeed.
            When you call delete rule for a non-existent custom eventbus, <code>ResourceNotFoundException</code>
            is returned.
            </para>
             
            <para>
            Managed rules are rules created and managed by another Amazon Web Services service
            on your behalf. These rules are created by those other Amazon Web Services services
            to support functionality in those services. You can delete these rules using the <code>Force</code>
            option, but you should do so only if you are sure the other service is not still using
            that rule.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteRule service method.</param>
            
            <returns>The response from the DeleteRule service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ManagedRuleException">
            This rule was created by an Amazon Web Services service on behalf of your account.
            It is managed by that service. If you see this error in response to <code>DeleteRule</code>
            or <code>RemoveTargets</code>, you can use the <code>Force</code> parameter in those
            calls to delete the rule or remove targets from the rule. You cannot modify these
            managed rules by using <code>DisableRule</code>, <code>EnableRule</code>, <code>PutTargets</code>,
            <code>PutRule</code>, <code>TagResource</code>, or <code>UntagResource</code>.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/DeleteRule">REST API Reference for DeleteRule Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.DeleteRuleAsync(Amazon.EventBridge.Model.DeleteRuleRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified rule.
            
             
            <para>
            Before you can delete the rule, you must remove all targets, using <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_RemoveTargets.html">RemoveTargets</a>.
            </para>
             
            <para>
            When you delete a rule, incoming events might continue to match to the deleted rule.
            Allow a short period of time for changes to take effect.
            </para>
             
            <para>
            If you call delete rule multiple times for the same rule, all calls will succeed.
            When you call delete rule for a non-existent custom eventbus, <code>ResourceNotFoundException</code>
            is returned.
            </para>
             
            <para>
            Managed rules are rules created and managed by another Amazon Web Services service
            on your behalf. These rules are created by those other Amazon Web Services services
            to support functionality in those services. You can delete these rules using the <code>Force</code>
            option, but you should do so only if you are sure the other service is not still using
            that rule.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteRule service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteRule service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ManagedRuleException">
            This rule was created by an Amazon Web Services service on behalf of your account.
            It is managed by that service. If you see this error in response to <code>DeleteRule</code>
            or <code>RemoveTargets</code>, you can use the <code>Force</code> parameter in those
            calls to delete the rule or remove targets from the rule. You cannot modify these
            managed rules by using <code>DisableRule</code>, <code>EnableRule</code>, <code>PutTargets</code>,
            <code>PutRule</code>, <code>TagResource</code>, or <code>UntagResource</code>.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/DeleteRule">REST API Reference for DeleteRule Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.DescribeApiDestination(Amazon.EventBridge.Model.DescribeApiDestinationRequest)">
            <summary>
            Retrieves details about an API destination.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeApiDestination service method.</param>
            
            <returns>The response from the DescribeApiDestination service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/DescribeApiDestination">REST API Reference for DescribeApiDestination Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.DescribeApiDestinationAsync(Amazon.EventBridge.Model.DescribeApiDestinationRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves details about an API destination.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeApiDestination service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeApiDestination service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/DescribeApiDestination">REST API Reference for DescribeApiDestination Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.DescribeArchive(Amazon.EventBridge.Model.DescribeArchiveRequest)">
            <summary>
            Retrieves details about an archive.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeArchive service method.</param>
            
            <returns>The response from the DescribeArchive service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceAlreadyExistsException">
            The resource you are trying to create already exists.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/DescribeArchive">REST API Reference for DescribeArchive Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.DescribeArchiveAsync(Amazon.EventBridge.Model.DescribeArchiveRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves details about an archive.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeArchive service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeArchive service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceAlreadyExistsException">
            The resource you are trying to create already exists.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/DescribeArchive">REST API Reference for DescribeArchive Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.DescribeConnection(Amazon.EventBridge.Model.DescribeConnectionRequest)">
            <summary>
            Retrieves details about a connection.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeConnection service method.</param>
            
            <returns>The response from the DescribeConnection service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/DescribeConnection">REST API Reference for DescribeConnection Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.DescribeConnectionAsync(Amazon.EventBridge.Model.DescribeConnectionRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves details about a connection.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeConnection service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeConnection service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/DescribeConnection">REST API Reference for DescribeConnection Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.DescribeEventBus(Amazon.EventBridge.Model.DescribeEventBusRequest)">
            <summary>
            Displays details about an event bus in your account. This can include the external
            Amazon Web Services accounts that are permitted to write events to your default event
            bus, and the associated policy. For custom event buses and partner event buses, it
            displays the name, ARN, policy, state, and creation time.
            
             
            <para>
             To enable your account to receive events from other accounts on its default event
            bus, use <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_PutPermission.html">PutPermission</a>.
            </para>
             
            <para>
            For more information about partner event buses, see <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_CreateEventBus.html">CreateEventBus</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeEventBus service method.</param>
            
            <returns>The response from the DescribeEventBus service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/DescribeEventBus">REST API Reference for DescribeEventBus Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.DescribeEventBusAsync(Amazon.EventBridge.Model.DescribeEventBusRequest,System.Threading.CancellationToken)">
            <summary>
            Displays details about an event bus in your account. This can include the external
            Amazon Web Services accounts that are permitted to write events to your default event
            bus, and the associated policy. For custom event buses and partner event buses, it
            displays the name, ARN, policy, state, and creation time.
            
             
            <para>
             To enable your account to receive events from other accounts on its default event
            bus, use <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_PutPermission.html">PutPermission</a>.
            </para>
             
            <para>
            For more information about partner event buses, see <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_CreateEventBus.html">CreateEventBus</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeEventBus service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeEventBus service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/DescribeEventBus">REST API Reference for DescribeEventBus Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.DescribeEventSource(Amazon.EventBridge.Model.DescribeEventSourceRequest)">
            <summary>
            This operation lists details about a partner event source that is shared with your
            account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeEventSource service method.</param>
            
            <returns>The response from the DescribeEventSource service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.OperationDisabledException">
            The operation you are attempting is not available in this region.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/DescribeEventSource">REST API Reference for DescribeEventSource Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.DescribeEventSourceAsync(Amazon.EventBridge.Model.DescribeEventSourceRequest,System.Threading.CancellationToken)">
            <summary>
            This operation lists details about a partner event source that is shared with your
            account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeEventSource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeEventSource service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.OperationDisabledException">
            The operation you are attempting is not available in this region.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/DescribeEventSource">REST API Reference for DescribeEventSource Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.DescribePartnerEventSource(Amazon.EventBridge.Model.DescribePartnerEventSourceRequest)">
            <summary>
            An SaaS partner can use this operation to list details about a partner event source
            that they have created. Amazon Web Services customers do not use this operation. Instead,
            Amazon Web Services customers can use <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_DescribeEventSource.html">DescribeEventSource</a>
            to see details about a partner event source that is shared with them.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribePartnerEventSource service method.</param>
            
            <returns>The response from the DescribePartnerEventSource service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.OperationDisabledException">
            The operation you are attempting is not available in this region.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/DescribePartnerEventSource">REST API Reference for DescribePartnerEventSource Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.DescribePartnerEventSourceAsync(Amazon.EventBridge.Model.DescribePartnerEventSourceRequest,System.Threading.CancellationToken)">
            <summary>
            An SaaS partner can use this operation to list details about a partner event source
            that they have created. Amazon Web Services customers do not use this operation. Instead,
            Amazon Web Services customers can use <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_DescribeEventSource.html">DescribeEventSource</a>
            to see details about a partner event source that is shared with them.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribePartnerEventSource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribePartnerEventSource service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.OperationDisabledException">
            The operation you are attempting is not available in this region.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/DescribePartnerEventSource">REST API Reference for DescribePartnerEventSource Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.DescribeReplay(Amazon.EventBridge.Model.DescribeReplayRequest)">
            <summary>
            Retrieves details about a replay. Use <code>DescribeReplay</code> to determine the
            progress of a running replay. A replay processes events to replay based on the time
            in the event, and replays them using 1 minute intervals. If you use <code>StartReplay</code>
            and specify an <code>EventStartTime</code> and an <code>EventEndTime</code> that covers
            a 20 minute time range, the events are replayed from the first minute of that 20 minute
            range first. Then the events from the second minute are replayed. You can use <code>DescribeReplay</code>
            to determine the progress of a replay. The value returned for <code>EventLastReplayedTime</code>
            indicates the time within the specified time range associated with the last event
            replayed.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeReplay service method.</param>
            
            <returns>The response from the DescribeReplay service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/DescribeReplay">REST API Reference for DescribeReplay Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.DescribeReplayAsync(Amazon.EventBridge.Model.DescribeReplayRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves details about a replay. Use <code>DescribeReplay</code> to determine the
            progress of a running replay. A replay processes events to replay based on the time
            in the event, and replays them using 1 minute intervals. If you use <code>StartReplay</code>
            and specify an <code>EventStartTime</code> and an <code>EventEndTime</code> that covers
            a 20 minute time range, the events are replayed from the first minute of that 20 minute
            range first. Then the events from the second minute are replayed. You can use <code>DescribeReplay</code>
            to determine the progress of a replay. The value returned for <code>EventLastReplayedTime</code>
            indicates the time within the specified time range associated with the last event
            replayed.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeReplay service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeReplay service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/DescribeReplay">REST API Reference for DescribeReplay Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.DescribeRule(Amazon.EventBridge.Model.DescribeRuleRequest)">
            <summary>
            Describes the specified rule.
            
             
            <para>
            DescribeRule does not list the targets of a rule. To see the targets associated with
            a rule, use <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_ListTargetsByRule.html">ListTargetsByRule</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeRule service method.</param>
            
            <returns>The response from the DescribeRule service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/DescribeRule">REST API Reference for DescribeRule Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.DescribeRuleAsync(Amazon.EventBridge.Model.DescribeRuleRequest,System.Threading.CancellationToken)">
            <summary>
            Describes the specified rule.
            
             
            <para>
            DescribeRule does not list the targets of a rule. To see the targets associated with
            a rule, use <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_ListTargetsByRule.html">ListTargetsByRule</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeRule service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeRule service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/DescribeRule">REST API Reference for DescribeRule Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.DisableRule(Amazon.EventBridge.Model.DisableRuleRequest)">
            <summary>
            Disables the specified rule. A disabled rule won't match any events, and won't self-trigger
            if it has a schedule expression.
            
             
            <para>
            When you disable a rule, incoming events might continue to match to the disabled rule.
            Allow a short period of time for changes to take effect.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DisableRule service method.</param>
            
            <returns>The response from the DisableRule service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ManagedRuleException">
            This rule was created by an Amazon Web Services service on behalf of your account.
            It is managed by that service. If you see this error in response to <code>DeleteRule</code>
            or <code>RemoveTargets</code>, you can use the <code>Force</code> parameter in those
            calls to delete the rule or remove targets from the rule. You cannot modify these
            managed rules by using <code>DisableRule</code>, <code>EnableRule</code>, <code>PutTargets</code>,
            <code>PutRule</code>, <code>TagResource</code>, or <code>UntagResource</code>.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/DisableRule">REST API Reference for DisableRule Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.DisableRuleAsync(Amazon.EventBridge.Model.DisableRuleRequest,System.Threading.CancellationToken)">
            <summary>
            Disables the specified rule. A disabled rule won't match any events, and won't self-trigger
            if it has a schedule expression.
            
             
            <para>
            When you disable a rule, incoming events might continue to match to the disabled rule.
            Allow a short period of time for changes to take effect.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DisableRule service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DisableRule service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ManagedRuleException">
            This rule was created by an Amazon Web Services service on behalf of your account.
            It is managed by that service. If you see this error in response to <code>DeleteRule</code>
            or <code>RemoveTargets</code>, you can use the <code>Force</code> parameter in those
            calls to delete the rule or remove targets from the rule. You cannot modify these
            managed rules by using <code>DisableRule</code>, <code>EnableRule</code>, <code>PutTargets</code>,
            <code>PutRule</code>, <code>TagResource</code>, or <code>UntagResource</code>.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/DisableRule">REST API Reference for DisableRule Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.EnableRule(Amazon.EventBridge.Model.EnableRuleRequest)">
            <summary>
            Enables the specified rule. If the rule does not exist, the operation fails.
            
             
            <para>
            When you enable a rule, incoming events might not immediately start matching to a
            newly enabled rule. Allow a short period of time for changes to take effect.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the EnableRule service method.</param>
            
            <returns>The response from the EnableRule service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ManagedRuleException">
            This rule was created by an Amazon Web Services service on behalf of your account.
            It is managed by that service. If you see this error in response to <code>DeleteRule</code>
            or <code>RemoveTargets</code>, you can use the <code>Force</code> parameter in those
            calls to delete the rule or remove targets from the rule. You cannot modify these
            managed rules by using <code>DisableRule</code>, <code>EnableRule</code>, <code>PutTargets</code>,
            <code>PutRule</code>, <code>TagResource</code>, or <code>UntagResource</code>.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/EnableRule">REST API Reference for EnableRule Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.EnableRuleAsync(Amazon.EventBridge.Model.EnableRuleRequest,System.Threading.CancellationToken)">
            <summary>
            Enables the specified rule. If the rule does not exist, the operation fails.
            
             
            <para>
            When you enable a rule, incoming events might not immediately start matching to a
            newly enabled rule. Allow a short period of time for changes to take effect.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the EnableRule service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the EnableRule service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ManagedRuleException">
            This rule was created by an Amazon Web Services service on behalf of your account.
            It is managed by that service. If you see this error in response to <code>DeleteRule</code>
            or <code>RemoveTargets</code>, you can use the <code>Force</code> parameter in those
            calls to delete the rule or remove targets from the rule. You cannot modify these
            managed rules by using <code>DisableRule</code>, <code>EnableRule</code>, <code>PutTargets</code>,
            <code>PutRule</code>, <code>TagResource</code>, or <code>UntagResource</code>.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/EnableRule">REST API Reference for EnableRule Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.ListApiDestinations(Amazon.EventBridge.Model.ListApiDestinationsRequest)">
            <summary>
            Retrieves a list of API destination in the account in the current Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListApiDestinations service method.</param>
            
            <returns>The response from the ListApiDestinations service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/ListApiDestinations">REST API Reference for ListApiDestinations Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.ListApiDestinationsAsync(Amazon.EventBridge.Model.ListApiDestinationsRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of API destination in the account in the current Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListApiDestinations service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListApiDestinations service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/ListApiDestinations">REST API Reference for ListApiDestinations Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.ListArchives(Amazon.EventBridge.Model.ListArchivesRequest)">
            <summary>
            Lists your archives. You can either list all the archives or you can provide a prefix
            to match to the archive names. Filter parameters are exclusive.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListArchives service method.</param>
            
            <returns>The response from the ListArchives service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/ListArchives">REST API Reference for ListArchives Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.ListArchivesAsync(Amazon.EventBridge.Model.ListArchivesRequest,System.Threading.CancellationToken)">
            <summary>
            Lists your archives. You can either list all the archives or you can provide a prefix
            to match to the archive names. Filter parameters are exclusive.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListArchives service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListArchives service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/ListArchives">REST API Reference for ListArchives Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.ListConnections(Amazon.EventBridge.Model.ListConnectionsRequest)">
            <summary>
            Retrieves a list of connections from the account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListConnections service method.</param>
            
            <returns>The response from the ListConnections service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/ListConnections">REST API Reference for ListConnections Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.ListConnectionsAsync(Amazon.EventBridge.Model.ListConnectionsRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of connections from the account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListConnections service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListConnections service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/ListConnections">REST API Reference for ListConnections Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.ListEventBuses(Amazon.EventBridge.Model.ListEventBusesRequest)">
            <summary>
            Lists all the event buses in your account, including the default event bus, custom
            event buses, and partner event buses.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListEventBuses service method.</param>
            
            <returns>The response from the ListEventBuses service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/ListEventBuses">REST API Reference for ListEventBuses Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.ListEventBusesAsync(Amazon.EventBridge.Model.ListEventBusesRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all the event buses in your account, including the default event bus, custom
            event buses, and partner event buses.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListEventBuses service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListEventBuses service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/ListEventBuses">REST API Reference for ListEventBuses Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.ListEventSources(Amazon.EventBridge.Model.ListEventSourcesRequest)">
            <summary>
            You can use this to see all the partner event sources that have been shared with your
            Amazon Web Services account. For more information about partner event sources, see
            <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_CreateEventBus.html">CreateEventBus</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListEventSources service method.</param>
            
            <returns>The response from the ListEventSources service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.OperationDisabledException">
            The operation you are attempting is not available in this region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/ListEventSources">REST API Reference for ListEventSources Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.ListEventSourcesAsync(Amazon.EventBridge.Model.ListEventSourcesRequest,System.Threading.CancellationToken)">
            <summary>
            You can use this to see all the partner event sources that have been shared with your
            Amazon Web Services account. For more information about partner event sources, see
            <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_CreateEventBus.html">CreateEventBus</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListEventSources service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListEventSources service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.OperationDisabledException">
            The operation you are attempting is not available in this region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/ListEventSources">REST API Reference for ListEventSources Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.ListPartnerEventSourceAccounts(Amazon.EventBridge.Model.ListPartnerEventSourceAccountsRequest)">
            <summary>
            An SaaS partner can use this operation to display the Amazon Web Services account
            ID that a particular partner event source name is associated with. This operation
            is not used by Amazon Web Services customers.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListPartnerEventSourceAccounts service method.</param>
            
            <returns>The response from the ListPartnerEventSourceAccounts service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.OperationDisabledException">
            The operation you are attempting is not available in this region.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/ListPartnerEventSourceAccounts">REST API Reference for ListPartnerEventSourceAccounts Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.ListPartnerEventSourceAccountsAsync(Amazon.EventBridge.Model.ListPartnerEventSourceAccountsRequest,System.Threading.CancellationToken)">
            <summary>
            An SaaS partner can use this operation to display the Amazon Web Services account
            ID that a particular partner event source name is associated with. This operation
            is not used by Amazon Web Services customers.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListPartnerEventSourceAccounts service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListPartnerEventSourceAccounts service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.OperationDisabledException">
            The operation you are attempting is not available in this region.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/ListPartnerEventSourceAccounts">REST API Reference for ListPartnerEventSourceAccounts Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.ListPartnerEventSources(Amazon.EventBridge.Model.ListPartnerEventSourcesRequest)">
            <summary>
            An SaaS partner can use this operation to list all the partner event source names
            that they have created. This operation is not used by Amazon Web Services customers.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListPartnerEventSources service method.</param>
            
            <returns>The response from the ListPartnerEventSources service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.OperationDisabledException">
            The operation you are attempting is not available in this region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/ListPartnerEventSources">REST API Reference for ListPartnerEventSources Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.ListPartnerEventSourcesAsync(Amazon.EventBridge.Model.ListPartnerEventSourcesRequest,System.Threading.CancellationToken)">
            <summary>
            An SaaS partner can use this operation to list all the partner event source names
            that they have created. This operation is not used by Amazon Web Services customers.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListPartnerEventSources service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListPartnerEventSources service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.OperationDisabledException">
            The operation you are attempting is not available in this region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/ListPartnerEventSources">REST API Reference for ListPartnerEventSources Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.ListReplays(Amazon.EventBridge.Model.ListReplaysRequest)">
            <summary>
            Lists your replays. You can either list all the replays or you can provide a prefix
            to match to the replay names. Filter parameters are exclusive.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListReplays service method.</param>
            
            <returns>The response from the ListReplays service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/ListReplays">REST API Reference for ListReplays Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.ListReplaysAsync(Amazon.EventBridge.Model.ListReplaysRequest,System.Threading.CancellationToken)">
            <summary>
            Lists your replays. You can either list all the replays or you can provide a prefix
            to match to the replay names. Filter parameters are exclusive.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListReplays service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListReplays service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/ListReplays">REST API Reference for ListReplays Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.ListRuleNamesByTarget(Amazon.EventBridge.Model.ListRuleNamesByTargetRequest)">
            <summary>
            Lists the rules for the specified target. You can see which of the rules in Amazon
            EventBridge can invoke a specific target in your account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListRuleNamesByTarget service method.</param>
            
            <returns>The response from the ListRuleNamesByTarget service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/ListRuleNamesByTarget">REST API Reference for ListRuleNamesByTarget Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.ListRuleNamesByTargetAsync(Amazon.EventBridge.Model.ListRuleNamesByTargetRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the rules for the specified target. You can see which of the rules in Amazon
            EventBridge can invoke a specific target in your account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListRuleNamesByTarget service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListRuleNamesByTarget service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/ListRuleNamesByTarget">REST API Reference for ListRuleNamesByTarget Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.ListRules(Amazon.EventBridge.Model.ListRulesRequest)">
            <summary>
            Lists your Amazon EventBridge rules. You can either list all the rules or you can
            provide a prefix to match to the rule names.
            
             
            <para>
            ListRules does not list the targets of a rule. To see the targets associated with
            a rule, use <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_ListTargetsByRule.html">ListTargetsByRule</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListRules service method.</param>
            
            <returns>The response from the ListRules service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/ListRules">REST API Reference for ListRules Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.ListRulesAsync(Amazon.EventBridge.Model.ListRulesRequest,System.Threading.CancellationToken)">
            <summary>
            Lists your Amazon EventBridge rules. You can either list all the rules or you can
            provide a prefix to match to the rule names.
            
             
            <para>
            ListRules does not list the targets of a rule. To see the targets associated with
            a rule, use <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_ListTargetsByRule.html">ListTargetsByRule</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListRules service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListRules service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/ListRules">REST API Reference for ListRules Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.ListTagsForResource(Amazon.EventBridge.Model.ListTagsForResourceRequest)">
            <summary>
            Displays the tags associated with an EventBridge resource. In EventBridge, rules and
            event buses can be tagged.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            
            <returns>The response from the ListTagsForResource service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.ListTagsForResourceAsync(Amazon.EventBridge.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Displays the tags associated with an EventBridge resource. In EventBridge, rules and
            event buses can be tagged.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.ListTargetsByRule(Amazon.EventBridge.Model.ListTargetsByRuleRequest)">
            <summary>
            Lists the targets assigned to the specified rule.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTargetsByRule service method.</param>
            
            <returns>The response from the ListTargetsByRule service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/ListTargetsByRule">REST API Reference for ListTargetsByRule Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.ListTargetsByRuleAsync(Amazon.EventBridge.Model.ListTargetsByRuleRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the targets assigned to the specified rule.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTargetsByRule service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTargetsByRule service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/ListTargetsByRule">REST API Reference for ListTargetsByRule Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.PutEvents(Amazon.EventBridge.Model.PutEventsRequest)">
            <summary>
            Sends custom events to Amazon EventBridge so that they can be matched to rules.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutEvents service method.</param>
            
            <returns>The response from the PutEvents service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/PutEvents">REST API Reference for PutEvents Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.PutEventsAsync(Amazon.EventBridge.Model.PutEventsRequest,System.Threading.CancellationToken)">
            <summary>
            Sends custom events to Amazon EventBridge so that they can be matched to rules.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutEvents service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutEvents service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/PutEvents">REST API Reference for PutEvents Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.PutPartnerEvents(Amazon.EventBridge.Model.PutPartnerEventsRequest)">
            <summary>
            This is used by SaaS partners to write events to a customer's partner event bus. Amazon
            Web Services customers do not use this operation.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutPartnerEvents service method.</param>
            
            <returns>The response from the PutPartnerEvents service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.OperationDisabledException">
            The operation you are attempting is not available in this region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/PutPartnerEvents">REST API Reference for PutPartnerEvents Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.PutPartnerEventsAsync(Amazon.EventBridge.Model.PutPartnerEventsRequest,System.Threading.CancellationToken)">
            <summary>
            This is used by SaaS partners to write events to a customer's partner event bus. Amazon
            Web Services customers do not use this operation.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutPartnerEvents service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutPartnerEvents service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.OperationDisabledException">
            The operation you are attempting is not available in this region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/PutPartnerEvents">REST API Reference for PutPartnerEvents Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.PutPermission(Amazon.EventBridge.Model.PutPermissionRequest)">
            <summary>
            Running <code>PutPermission</code> permits the specified Amazon Web Services account
            or Amazon Web Services organization to put events to the specified <i>event bus</i>.
            Amazon EventBridge (CloudWatch Events) rules in your account are triggered by these
            events arriving to an event bus in your account. 
            
             
            <para>
            For another account to send events to your account, that external account must have
            an EventBridge rule with your account's event bus as a target.
            </para>
             
            <para>
            To enable multiple Amazon Web Services accounts to put events to your event bus, run
            <code>PutPermission</code> once for each of these accounts. Or, if all the accounts
            are members of the same Amazon Web Services organization, you can run <code>PutPermission</code>
            once specifying <code>Principal</code> as "*" and specifying the Amazon Web Services
            organization ID in <code>Condition</code>, to grant permissions to all accounts in
            that organization.
            </para>
             
            <para>
            If you grant permissions using an organization, then accounts in that organization
            must specify a <code>RoleArn</code> with proper permissions when they use <code>PutTarget</code>
            to add your account's event bus as a target. For more information, see <a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-cross-account-event-delivery.html">Sending
            and Receiving Events Between Amazon Web Services Accounts</a> in the <i>Amazon EventBridge
            User Guide</i>.
            </para>
             
            <para>
            The permission policy on the event bus cannot exceed 10 KB in size.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutPermission service method.</param>
            
            <returns>The response from the PutPermission service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.OperationDisabledException">
            The operation you are attempting is not available in this region.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.PolicyLengthExceededException">
            The event bus policy is too long. For more information, see the limits.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/PutPermission">REST API Reference for PutPermission Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.PutPermissionAsync(Amazon.EventBridge.Model.PutPermissionRequest,System.Threading.CancellationToken)">
            <summary>
            Running <code>PutPermission</code> permits the specified Amazon Web Services account
            or Amazon Web Services organization to put events to the specified <i>event bus</i>.
            Amazon EventBridge (CloudWatch Events) rules in your account are triggered by these
            events arriving to an event bus in your account. 
            
             
            <para>
            For another account to send events to your account, that external account must have
            an EventBridge rule with your account's event bus as a target.
            </para>
             
            <para>
            To enable multiple Amazon Web Services accounts to put events to your event bus, run
            <code>PutPermission</code> once for each of these accounts. Or, if all the accounts
            are members of the same Amazon Web Services organization, you can run <code>PutPermission</code>
            once specifying <code>Principal</code> as "*" and specifying the Amazon Web Services
            organization ID in <code>Condition</code>, to grant permissions to all accounts in
            that organization.
            </para>
             
            <para>
            If you grant permissions using an organization, then accounts in that organization
            must specify a <code>RoleArn</code> with proper permissions when they use <code>PutTarget</code>
            to add your account's event bus as a target. For more information, see <a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-cross-account-event-delivery.html">Sending
            and Receiving Events Between Amazon Web Services Accounts</a> in the <i>Amazon EventBridge
            User Guide</i>.
            </para>
             
            <para>
            The permission policy on the event bus cannot exceed 10 KB in size.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutPermission service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutPermission service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.OperationDisabledException">
            The operation you are attempting is not available in this region.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.PolicyLengthExceededException">
            The event bus policy is too long. For more information, see the limits.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/PutPermission">REST API Reference for PutPermission Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.PutRule(Amazon.EventBridge.Model.PutRuleRequest)">
            <summary>
            Creates or updates the specified rule. Rules are enabled by default, or based on value
            of the state. You can disable a rule using <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_DisableRule.html">DisableRule</a>.
            
             
            <para>
            A single rule watches for events from a single event bus. Events generated by Amazon
            Web Services services go to your account's default event bus. Events generated by
            SaaS partner services or applications go to the matching partner event bus. If you
            have custom applications or services, you can specify whether their events go to your
            default event bus or a custom event bus that you have created. For more information,
            see <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_CreateEventBus.html">CreateEventBus</a>.
            </para>
             
            <para>
            If you are updating an existing rule, the rule is replaced with what you specify in
            this <code>PutRule</code> command. If you omit arguments in <code>PutRule</code>,
            the old values for those arguments are not kept. Instead, they are replaced with null
            values.
            </para>
             
            <para>
            When you create or update a rule, incoming events might not immediately start matching
            to new or updated rules. Allow a short period of time for changes to take effect.
            </para>
             
            <para>
            A rule must contain at least an EventPattern or ScheduleExpression. Rules with EventPatterns
            are triggered when a matching event is observed. Rules with ScheduleExpressions self-trigger
            based on the given schedule. A rule can have both an EventPattern and a ScheduleExpression,
            in which case the rule triggers on matching events as well as on a schedule.
            </para>
             
            <para>
            When you initially create a rule, you can optionally assign one or more tags to the
            rule. Tags can help you organize and categorize your resources. You can also use them
            to scope user permissions, by granting a user permission to access or change only
            rules with certain tag values. To use the <code>PutRule</code> operation and assign
            tags, you must have both the <code>events:PutRule</code> and <code>events:TagResource</code>
            permissions.
            </para>
             
            <para>
            If you are updating an existing rule, any tags you specify in the <code>PutRule</code>
            operation are ignored. To update the tags of an existing rule, use <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_TagResource.html">TagResource</a>
            and <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_UntagResource.html">UntagResource</a>.
            </para>
             
            <para>
            Most services in Amazon Web Services treat : or / as the same character in Amazon
            Resource Names (ARNs). However, EventBridge uses an exact match in event patterns
            and rules. Be sure to use the correct ARN characters when creating event patterns
            so that they match the ARN syntax in the event you want to match.
            </para>
             
            <para>
            In EventBridge, it is possible to create rules that lead to infinite loops, where
            a rule is fired repeatedly. For example, a rule might detect that ACLs have changed
            on an S3 bucket, and trigger software to change them to the desired state. If the
            rule is not written carefully, the subsequent change to the ACLs fires the rule again,
            creating an infinite loop.
            </para>
             
            <para>
            To prevent this, write the rules so that the triggered actions do not re-fire the
            same rule. For example, your rule could fire only if ACLs are found to be in a bad
            state, instead of after any change. 
            </para>
             
            <para>
            An infinite loop can quickly cause higher than expected charges. We recommend that
            you use budgeting, which alerts you when charges exceed your specified limit. For
            more information, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/budgets-managing-costs.html">Managing
            Your Costs with Budgets</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutRule service method.</param>
            
            <returns>The response from the PutRule service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InvalidEventPatternException">
            The event pattern is not valid.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.LimitExceededException">
            The request failed because it attempted to create resource beyond the allowed service
            quota.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ManagedRuleException">
            This rule was created by an Amazon Web Services service on behalf of your account.
            It is managed by that service. If you see this error in response to <code>DeleteRule</code>
            or <code>RemoveTargets</code>, you can use the <code>Force</code> parameter in those
            calls to delete the rule or remove targets from the rule. You cannot modify these
            managed rules by using <code>DisableRule</code>, <code>EnableRule</code>, <code>PutTargets</code>,
            <code>PutRule</code>, <code>TagResource</code>, or <code>UntagResource</code>.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/PutRule">REST API Reference for PutRule Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.PutRuleAsync(Amazon.EventBridge.Model.PutRuleRequest,System.Threading.CancellationToken)">
            <summary>
            Creates or updates the specified rule. Rules are enabled by default, or based on value
            of the state. You can disable a rule using <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_DisableRule.html">DisableRule</a>.
            
             
            <para>
            A single rule watches for events from a single event bus. Events generated by Amazon
            Web Services services go to your account's default event bus. Events generated by
            SaaS partner services or applications go to the matching partner event bus. If you
            have custom applications or services, you can specify whether their events go to your
            default event bus or a custom event bus that you have created. For more information,
            see <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_CreateEventBus.html">CreateEventBus</a>.
            </para>
             
            <para>
            If you are updating an existing rule, the rule is replaced with what you specify in
            this <code>PutRule</code> command. If you omit arguments in <code>PutRule</code>,
            the old values for those arguments are not kept. Instead, they are replaced with null
            values.
            </para>
             
            <para>
            When you create or update a rule, incoming events might not immediately start matching
            to new or updated rules. Allow a short period of time for changes to take effect.
            </para>
             
            <para>
            A rule must contain at least an EventPattern or ScheduleExpression. Rules with EventPatterns
            are triggered when a matching event is observed. Rules with ScheduleExpressions self-trigger
            based on the given schedule. A rule can have both an EventPattern and a ScheduleExpression,
            in which case the rule triggers on matching events as well as on a schedule.
            </para>
             
            <para>
            When you initially create a rule, you can optionally assign one or more tags to the
            rule. Tags can help you organize and categorize your resources. You can also use them
            to scope user permissions, by granting a user permission to access or change only
            rules with certain tag values. To use the <code>PutRule</code> operation and assign
            tags, you must have both the <code>events:PutRule</code> and <code>events:TagResource</code>
            permissions.
            </para>
             
            <para>
            If you are updating an existing rule, any tags you specify in the <code>PutRule</code>
            operation are ignored. To update the tags of an existing rule, use <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_TagResource.html">TagResource</a>
            and <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_UntagResource.html">UntagResource</a>.
            </para>
             
            <para>
            Most services in Amazon Web Services treat : or / as the same character in Amazon
            Resource Names (ARNs). However, EventBridge uses an exact match in event patterns
            and rules. Be sure to use the correct ARN characters when creating event patterns
            so that they match the ARN syntax in the event you want to match.
            </para>
             
            <para>
            In EventBridge, it is possible to create rules that lead to infinite loops, where
            a rule is fired repeatedly. For example, a rule might detect that ACLs have changed
            on an S3 bucket, and trigger software to change them to the desired state. If the
            rule is not written carefully, the subsequent change to the ACLs fires the rule again,
            creating an infinite loop.
            </para>
             
            <para>
            To prevent this, write the rules so that the triggered actions do not re-fire the
            same rule. For example, your rule could fire only if ACLs are found to be in a bad
            state, instead of after any change. 
            </para>
             
            <para>
            An infinite loop can quickly cause higher than expected charges. We recommend that
            you use budgeting, which alerts you when charges exceed your specified limit. For
            more information, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/budgets-managing-costs.html">Managing
            Your Costs with Budgets</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutRule service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutRule service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InvalidEventPatternException">
            The event pattern is not valid.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.LimitExceededException">
            The request failed because it attempted to create resource beyond the allowed service
            quota.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ManagedRuleException">
            This rule was created by an Amazon Web Services service on behalf of your account.
            It is managed by that service. If you see this error in response to <code>DeleteRule</code>
            or <code>RemoveTargets</code>, you can use the <code>Force</code> parameter in those
            calls to delete the rule or remove targets from the rule. You cannot modify these
            managed rules by using <code>DisableRule</code>, <code>EnableRule</code>, <code>PutTargets</code>,
            <code>PutRule</code>, <code>TagResource</code>, or <code>UntagResource</code>.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/PutRule">REST API Reference for PutRule Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.PutTargets(Amazon.EventBridge.Model.PutTargetsRequest)">
            <summary>
            Adds the specified targets to the specified rule, or updates the targets if they are
            already associated with the rule.
            
             
            <para>
            Targets are the resources that are invoked when a rule is triggered.
            </para>
             
            <para>
            You can configure the following as targets for Events:
            </para>
             <ul> <li> 
            <para>
             <a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-api-destinations.html">API
            destination</a> 
            </para>
             </li> <li> 
            <para>
            Amazon API Gateway REST API endpoints
            </para>
             </li> <li> 
            <para>
            API Gateway
            </para>
             </li> <li> 
            <para>
            Batch job queue
            </para>
             </li> <li> 
            <para>
            CloudWatch Logs group
            </para>
             </li> <li> 
            <para>
            CodeBuild project
            </para>
             </li> <li> 
            <para>
            CodePipeline
            </para>
             </li> <li> 
            <para>
            Amazon EC2 <code>CreateSnapshot</code> API call
            </para>
             </li> <li> 
            <para>
            Amazon EC2 <code>RebootInstances</code> API call
            </para>
             </li> <li> 
            <para>
            Amazon EC2 <code>StopInstances</code> API call
            </para>
             </li> <li> 
            <para>
            Amazon EC2 <code>TerminateInstances</code> API call
            </para>
             </li> <li> 
            <para>
            Amazon ECS tasks
            </para>
             </li> <li> 
            <para>
            Event bus in a different Amazon Web Services account or Region.
            </para>
             
            <para>
            You can use an event bus in the US East (N. Virginia) us-east-1, US West (Oregon)
            us-west-2, or Europe (Ireland) eu-west-1 Regions as a target for a rule.
            </para>
             </li> <li> 
            <para>
            Firehose delivery stream (Kinesis Data Firehose)
            </para>
             </li> <li> 
            <para>
            Inspector assessment template (Amazon Inspector)
            </para>
             </li> <li> 
            <para>
            Kinesis stream (Kinesis Data Stream)
            </para>
             </li> <li> 
            <para>
            Lambda function
            </para>
             </li> <li> 
            <para>
            Redshift clusters (Data API statement execution)
            </para>
             </li> <li> 
            <para>
            Amazon SNS topic
            </para>
             </li> <li> 
            <para>
            Amazon SQS queues (includes FIFO queues
            </para>
             </li> <li> 
            <para>
            SSM Automation
            </para>
             </li> <li> 
            <para>
            SSM OpsItem
            </para>
             </li> <li> 
            <para>
            SSM Run Command
            </para>
             </li> <li> 
            <para>
            Step Functions state machines
            </para>
             </li> </ul> 
            <para>
            Creating rules with built-in targets is supported only in the Amazon Web Services
            Management Console. The built-in targets are <code>EC2 CreateSnapshot API call</code>,
            <code>EC2 RebootInstances API call</code>, <code>EC2 StopInstances API call</code>,
            and <code>EC2 TerminateInstances API call</code>. 
            </para>
             
            <para>
            For some target types, <code>PutTargets</code> provides target-specific parameters.
            If the target is a Kinesis data stream, you can optionally specify which shard the
            event goes to by using the <code>KinesisParameters</code> argument. To invoke a command
            on multiple EC2 instances with one rule, you can use the <code>RunCommandParameters</code>
            field.
            </para>
             
            <para>
            To be able to make API calls against the resources that you own, Amazon EventBridge
            needs the appropriate permissions. For Lambda and Amazon SNS resources, EventBridge
            relies on resource-based policies. For EC2 instances, Kinesis Data Streams, Step Functions
            state machines and API Gateway REST APIs, EventBridge relies on IAM roles that you
            specify in the <code>RoleARN</code> argument in <code>PutTargets</code>. For more
            information, see <a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/auth-and-access-control-eventbridge.html">Authentication
            and Access Control</a> in the <i>Amazon EventBridge User Guide</i>.
            </para>
             
            <para>
            If another Amazon Web Services account is in the same region and has granted you permission
            (using <code>PutPermission</code>), you can send events to that account. Set that
            account's event bus as a target of the rules in your account. To send the matched
            events to the other account, specify that account's event bus as the <code>Arn</code>
            value when you run <code>PutTargets</code>. If your account sends events to another
            account, your account is charged for each sent event. Each event sent to another account
            is charged as a custom event. The account receiving the event is not charged. For
            more information, see <a href="http://aws.amazon.com/eventbridge/pricing/">Amazon
            EventBridge Pricing</a>.
            </para>
             <note> 
            <para>
             <code>Input</code>, <code>InputPath</code>, and <code>InputTransformer</code> are
            not available with <code>PutTarget</code> if the target is an event bus of a different
            Amazon Web Services account.
            </para>
             </note> 
            <para>
            If you are setting the event bus of another account as the target, and that account
            granted permission to your account through an organization instead of directly by
            the account ID, then you must specify a <code>RoleArn</code> with proper permissions
            in the <code>Target</code> structure. For more information, see <a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-cross-account-event-delivery.html">Sending
            and Receiving Events Between Amazon Web Services Accounts</a> in the <i>Amazon EventBridge
            User Guide</i>.
            </para>
             
            <para>
            For more information about enabling cross-account events, see <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_PutPermission.html">PutPermission</a>.
            </para>
             
            <para>
             <b>Input</b>, <b>InputPath</b>, and <b>InputTransformer</b> are mutually exclusive
            and optional parameters of a target. When a rule is triggered due to a matched event:
            </para>
             <ul> <li> 
            <para>
            If none of the following arguments are specified for a target, then the entire event
            is passed to the target in JSON format (unless the target is Amazon EC2 Run Command
            or Amazon ECS task, in which case nothing from the event is passed to the target).
            </para>
             </li> <li> 
            <para>
            If <b>Input</b> is specified in the form of valid JSON, then the matched event is
            overridden with this constant.
            </para>
             </li> <li> 
            <para>
            If <b>InputPath</b> is specified in the form of JSONPath (for example, <code>$.detail</code>),
            then only the part of the event specified in the path is passed to the target (for
            example, only the detail part of the event is passed).
            </para>
             </li> <li> 
            <para>
            If <b>InputTransformer</b> is specified, then one or more specified JSONPaths are
            extracted from the event and used as values in a template that you specify as the
            input to the target.
            </para>
             </li> </ul> 
            <para>
            When you specify <code>InputPath</code> or <code>InputTransformer</code>, you must
            use JSON dot notation, not bracket notation.
            </para>
             
            <para>
            When you add targets to a rule and the associated rule triggers soon after, new or
            updated targets might not be immediately invoked. Allow a short period of time for
            changes to take effect.
            </para>
             
            <para>
            This action can partially fail if too many requests are made at the same time. If
            that happens, <code>FailedEntryCount</code> is non-zero in the response and each entry
            in <code>FailedEntries</code> provides the ID of the failed target and the error code.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutTargets service method.</param>
            
            <returns>The response from the PutTargets service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.LimitExceededException">
            The request failed because it attempted to create resource beyond the allowed service
            quota.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ManagedRuleException">
            This rule was created by an Amazon Web Services service on behalf of your account.
            It is managed by that service. If you see this error in response to <code>DeleteRule</code>
            or <code>RemoveTargets</code>, you can use the <code>Force</code> parameter in those
            calls to delete the rule or remove targets from the rule. You cannot modify these
            managed rules by using <code>DisableRule</code>, <code>EnableRule</code>, <code>PutTargets</code>,
            <code>PutRule</code>, <code>TagResource</code>, or <code>UntagResource</code>.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/PutTargets">REST API Reference for PutTargets Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.PutTargetsAsync(Amazon.EventBridge.Model.PutTargetsRequest,System.Threading.CancellationToken)">
            <summary>
            Adds the specified targets to the specified rule, or updates the targets if they are
            already associated with the rule.
            
             
            <para>
            Targets are the resources that are invoked when a rule is triggered.
            </para>
             
            <para>
            You can configure the following as targets for Events:
            </para>
             <ul> <li> 
            <para>
             <a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-api-destinations.html">API
            destination</a> 
            </para>
             </li> <li> 
            <para>
            Amazon API Gateway REST API endpoints
            </para>
             </li> <li> 
            <para>
            API Gateway
            </para>
             </li> <li> 
            <para>
            Batch job queue
            </para>
             </li> <li> 
            <para>
            CloudWatch Logs group
            </para>
             </li> <li> 
            <para>
            CodeBuild project
            </para>
             </li> <li> 
            <para>
            CodePipeline
            </para>
             </li> <li> 
            <para>
            Amazon EC2 <code>CreateSnapshot</code> API call
            </para>
             </li> <li> 
            <para>
            Amazon EC2 <code>RebootInstances</code> API call
            </para>
             </li> <li> 
            <para>
            Amazon EC2 <code>StopInstances</code> API call
            </para>
             </li> <li> 
            <para>
            Amazon EC2 <code>TerminateInstances</code> API call
            </para>
             </li> <li> 
            <para>
            Amazon ECS tasks
            </para>
             </li> <li> 
            <para>
            Event bus in a different Amazon Web Services account or Region.
            </para>
             
            <para>
            You can use an event bus in the US East (N. Virginia) us-east-1, US West (Oregon)
            us-west-2, or Europe (Ireland) eu-west-1 Regions as a target for a rule.
            </para>
             </li> <li> 
            <para>
            Firehose delivery stream (Kinesis Data Firehose)
            </para>
             </li> <li> 
            <para>
            Inspector assessment template (Amazon Inspector)
            </para>
             </li> <li> 
            <para>
            Kinesis stream (Kinesis Data Stream)
            </para>
             </li> <li> 
            <para>
            Lambda function
            </para>
             </li> <li> 
            <para>
            Redshift clusters (Data API statement execution)
            </para>
             </li> <li> 
            <para>
            Amazon SNS topic
            </para>
             </li> <li> 
            <para>
            Amazon SQS queues (includes FIFO queues
            </para>
             </li> <li> 
            <para>
            SSM Automation
            </para>
             </li> <li> 
            <para>
            SSM OpsItem
            </para>
             </li> <li> 
            <para>
            SSM Run Command
            </para>
             </li> <li> 
            <para>
            Step Functions state machines
            </para>
             </li> </ul> 
            <para>
            Creating rules with built-in targets is supported only in the Amazon Web Services
            Management Console. The built-in targets are <code>EC2 CreateSnapshot API call</code>,
            <code>EC2 RebootInstances API call</code>, <code>EC2 StopInstances API call</code>,
            and <code>EC2 TerminateInstances API call</code>. 
            </para>
             
            <para>
            For some target types, <code>PutTargets</code> provides target-specific parameters.
            If the target is a Kinesis data stream, you can optionally specify which shard the
            event goes to by using the <code>KinesisParameters</code> argument. To invoke a command
            on multiple EC2 instances with one rule, you can use the <code>RunCommandParameters</code>
            field.
            </para>
             
            <para>
            To be able to make API calls against the resources that you own, Amazon EventBridge
            needs the appropriate permissions. For Lambda and Amazon SNS resources, EventBridge
            relies on resource-based policies. For EC2 instances, Kinesis Data Streams, Step Functions
            state machines and API Gateway REST APIs, EventBridge relies on IAM roles that you
            specify in the <code>RoleARN</code> argument in <code>PutTargets</code>. For more
            information, see <a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/auth-and-access-control-eventbridge.html">Authentication
            and Access Control</a> in the <i>Amazon EventBridge User Guide</i>.
            </para>
             
            <para>
            If another Amazon Web Services account is in the same region and has granted you permission
            (using <code>PutPermission</code>), you can send events to that account. Set that
            account's event bus as a target of the rules in your account. To send the matched
            events to the other account, specify that account's event bus as the <code>Arn</code>
            value when you run <code>PutTargets</code>. If your account sends events to another
            account, your account is charged for each sent event. Each event sent to another account
            is charged as a custom event. The account receiving the event is not charged. For
            more information, see <a href="http://aws.amazon.com/eventbridge/pricing/">Amazon
            EventBridge Pricing</a>.
            </para>
             <note> 
            <para>
             <code>Input</code>, <code>InputPath</code>, and <code>InputTransformer</code> are
            not available with <code>PutTarget</code> if the target is an event bus of a different
            Amazon Web Services account.
            </para>
             </note> 
            <para>
            If you are setting the event bus of another account as the target, and that account
            granted permission to your account through an organization instead of directly by
            the account ID, then you must specify a <code>RoleArn</code> with proper permissions
            in the <code>Target</code> structure. For more information, see <a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-cross-account-event-delivery.html">Sending
            and Receiving Events Between Amazon Web Services Accounts</a> in the <i>Amazon EventBridge
            User Guide</i>.
            </para>
             
            <para>
            For more information about enabling cross-account events, see <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_PutPermission.html">PutPermission</a>.
            </para>
             
            <para>
             <b>Input</b>, <b>InputPath</b>, and <b>InputTransformer</b> are mutually exclusive
            and optional parameters of a target. When a rule is triggered due to a matched event:
            </para>
             <ul> <li> 
            <para>
            If none of the following arguments are specified for a target, then the entire event
            is passed to the target in JSON format (unless the target is Amazon EC2 Run Command
            or Amazon ECS task, in which case nothing from the event is passed to the target).
            </para>
             </li> <li> 
            <para>
            If <b>Input</b> is specified in the form of valid JSON, then the matched event is
            overridden with this constant.
            </para>
             </li> <li> 
            <para>
            If <b>InputPath</b> is specified in the form of JSONPath (for example, <code>$.detail</code>),
            then only the part of the event specified in the path is passed to the target (for
            example, only the detail part of the event is passed).
            </para>
             </li> <li> 
            <para>
            If <b>InputTransformer</b> is specified, then one or more specified JSONPaths are
            extracted from the event and used as values in a template that you specify as the
            input to the target.
            </para>
             </li> </ul> 
            <para>
            When you specify <code>InputPath</code> or <code>InputTransformer</code>, you must
            use JSON dot notation, not bracket notation.
            </para>
             
            <para>
            When you add targets to a rule and the associated rule triggers soon after, new or
            updated targets might not be immediately invoked. Allow a short period of time for
            changes to take effect.
            </para>
             
            <para>
            This action can partially fail if too many requests are made at the same time. If
            that happens, <code>FailedEntryCount</code> is non-zero in the response and each entry
            in <code>FailedEntries</code> provides the ID of the failed target and the error code.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutTargets service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutTargets service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.LimitExceededException">
            The request failed because it attempted to create resource beyond the allowed service
            quota.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ManagedRuleException">
            This rule was created by an Amazon Web Services service on behalf of your account.
            It is managed by that service. If you see this error in response to <code>DeleteRule</code>
            or <code>RemoveTargets</code>, you can use the <code>Force</code> parameter in those
            calls to delete the rule or remove targets from the rule. You cannot modify these
            managed rules by using <code>DisableRule</code>, <code>EnableRule</code>, <code>PutTargets</code>,
            <code>PutRule</code>, <code>TagResource</code>, or <code>UntagResource</code>.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/PutTargets">REST API Reference for PutTargets Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.RemovePermission(Amazon.EventBridge.Model.RemovePermissionRequest)">
            <summary>
            Revokes the permission of another Amazon Web Services account to be able to put events
            to the specified event bus. Specify the account to revoke by the <code>StatementId</code>
            value that you associated with the account when you granted it permission with <code>PutPermission</code>.
            You can find the <code>StatementId</code> by using <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_DescribeEventBus.html">DescribeEventBus</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RemovePermission service method.</param>
            
            <returns>The response from the RemovePermission service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.OperationDisabledException">
            The operation you are attempting is not available in this region.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/RemovePermission">REST API Reference for RemovePermission Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.RemovePermissionAsync(Amazon.EventBridge.Model.RemovePermissionRequest,System.Threading.CancellationToken)">
            <summary>
            Revokes the permission of another Amazon Web Services account to be able to put events
            to the specified event bus. Specify the account to revoke by the <code>StatementId</code>
            value that you associated with the account when you granted it permission with <code>PutPermission</code>.
            You can find the <code>StatementId</code> by using <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_DescribeEventBus.html">DescribeEventBus</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RemovePermission service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RemovePermission service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.OperationDisabledException">
            The operation you are attempting is not available in this region.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/RemovePermission">REST API Reference for RemovePermission Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.RemoveTargets(Amazon.EventBridge.Model.RemoveTargetsRequest)">
            <summary>
            Removes the specified targets from the specified rule. When the rule is triggered,
            those targets are no longer be invoked.
            
             
            <para>
            When you remove a target, when the associated rule triggers, removed targets might
            continue to be invoked. Allow a short period of time for changes to take effect.
            </para>
             
            <para>
            This action can partially fail if too many requests are made at the same time. If
            that happens, <code>FailedEntryCount</code> is non-zero in the response and each entry
            in <code>FailedEntries</code> provides the ID of the failed target and the error code.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RemoveTargets service method.</param>
            
            <returns>The response from the RemoveTargets service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ManagedRuleException">
            This rule was created by an Amazon Web Services service on behalf of your account.
            It is managed by that service. If you see this error in response to <code>DeleteRule</code>
            or <code>RemoveTargets</code>, you can use the <code>Force</code> parameter in those
            calls to delete the rule or remove targets from the rule. You cannot modify these
            managed rules by using <code>DisableRule</code>, <code>EnableRule</code>, <code>PutTargets</code>,
            <code>PutRule</code>, <code>TagResource</code>, or <code>UntagResource</code>.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/RemoveTargets">REST API Reference for RemoveTargets Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.RemoveTargetsAsync(Amazon.EventBridge.Model.RemoveTargetsRequest,System.Threading.CancellationToken)">
            <summary>
            Removes the specified targets from the specified rule. When the rule is triggered,
            those targets are no longer be invoked.
            
             
            <para>
            When you remove a target, when the associated rule triggers, removed targets might
            continue to be invoked. Allow a short period of time for changes to take effect.
            </para>
             
            <para>
            This action can partially fail if too many requests are made at the same time. If
            that happens, <code>FailedEntryCount</code> is non-zero in the response and each entry
            in <code>FailedEntries</code> provides the ID of the failed target and the error code.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RemoveTargets service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RemoveTargets service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ManagedRuleException">
            This rule was created by an Amazon Web Services service on behalf of your account.
            It is managed by that service. If you see this error in response to <code>DeleteRule</code>
            or <code>RemoveTargets</code>, you can use the <code>Force</code> parameter in those
            calls to delete the rule or remove targets from the rule. You cannot modify these
            managed rules by using <code>DisableRule</code>, <code>EnableRule</code>, <code>PutTargets</code>,
            <code>PutRule</code>, <code>TagResource</code>, or <code>UntagResource</code>.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/RemoveTargets">REST API Reference for RemoveTargets Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.StartReplay(Amazon.EventBridge.Model.StartReplayRequest)">
            <summary>
            Starts the specified replay. Events are not necessarily replayed in the exact same
            order that they were added to the archive. A replay processes events to replay based
            on the time in the event, and replays them using 1 minute intervals. If you specify
            an <code>EventStartTime</code> and an <code>EventEndTime</code> that covers a 20 minute
            time range, the events are replayed from the first minute of that 20 minute range
            first. Then the events from the second minute are replayed. You can use <code>DescribeReplay</code>
            to determine the progress of a replay. The value returned for <code>EventLastReplayedTime</code>
            indicates the time within the specified time range associated with the last event
            replayed.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartReplay service method.</param>
            
            <returns>The response from the StartReplay service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InvalidEventPatternException">
            The event pattern is not valid.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.LimitExceededException">
            The request failed because it attempted to create resource beyond the allowed service
            quota.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceAlreadyExistsException">
            The resource you are trying to create already exists.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/StartReplay">REST API Reference for StartReplay Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.StartReplayAsync(Amazon.EventBridge.Model.StartReplayRequest,System.Threading.CancellationToken)">
            <summary>
            Starts the specified replay. Events are not necessarily replayed in the exact same
            order that they were added to the archive. A replay processes events to replay based
            on the time in the event, and replays them using 1 minute intervals. If you specify
            an <code>EventStartTime</code> and an <code>EventEndTime</code> that covers a 20 minute
            time range, the events are replayed from the first minute of that 20 minute range
            first. Then the events from the second minute are replayed. You can use <code>DescribeReplay</code>
            to determine the progress of a replay. The value returned for <code>EventLastReplayedTime</code>
            indicates the time within the specified time range associated with the last event
            replayed.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartReplay service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartReplay service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InvalidEventPatternException">
            The event pattern is not valid.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.LimitExceededException">
            The request failed because it attempted to create resource beyond the allowed service
            quota.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceAlreadyExistsException">
            The resource you are trying to create already exists.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/StartReplay">REST API Reference for StartReplay Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.TagResource(Amazon.EventBridge.Model.TagResourceRequest)">
            <summary>
            Assigns one or more tags (key-value pairs) to the specified EventBridge resource.
            Tags can help you organize and categorize your resources. You can also use them to
            scope user permissions by granting a user permission to access or change only resources
            with certain tag values. In EventBridge, rules and event buses can be tagged.
            
             
            <para>
            Tags don't have any semantic meaning to Amazon Web Services and are interpreted strictly
            as strings of characters.
            </para>
             
            <para>
            You can use the <code>TagResource</code> action with a resource that already has tags.
            If you specify a new tag key, this tag is appended to the list of tags associated
            with the resource. If you specify a tag key that is already associated with the resource,
            the new tag value that you specify replaces the previous value for that tag.
            </para>
             
            <para>
            You can associate as many as 50 tags with a resource.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            
            <returns>The response from the TagResource service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ManagedRuleException">
            This rule was created by an Amazon Web Services service on behalf of your account.
            It is managed by that service. If you see this error in response to <code>DeleteRule</code>
            or <code>RemoveTargets</code>, you can use the <code>Force</code> parameter in those
            calls to delete the rule or remove targets from the rule. You cannot modify these
            managed rules by using <code>DisableRule</code>, <code>EnableRule</code>, <code>PutTargets</code>,
            <code>PutRule</code>, <code>TagResource</code>, or <code>UntagResource</code>.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.TagResourceAsync(Amazon.EventBridge.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Assigns one or more tags (key-value pairs) to the specified EventBridge resource.
            Tags can help you organize and categorize your resources. You can also use them to
            scope user permissions by granting a user permission to access or change only resources
            with certain tag values. In EventBridge, rules and event buses can be tagged.
            
             
            <para>
            Tags don't have any semantic meaning to Amazon Web Services and are interpreted strictly
            as strings of characters.
            </para>
             
            <para>
            You can use the <code>TagResource</code> action with a resource that already has tags.
            If you specify a new tag key, this tag is appended to the list of tags associated
            with the resource. If you specify a tag key that is already associated with the resource,
            the new tag value that you specify replaces the previous value for that tag.
            </para>
             
            <para>
            You can associate as many as 50 tags with a resource.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ManagedRuleException">
            This rule was created by an Amazon Web Services service on behalf of your account.
            It is managed by that service. If you see this error in response to <code>DeleteRule</code>
            or <code>RemoveTargets</code>, you can use the <code>Force</code> parameter in those
            calls to delete the rule or remove targets from the rule. You cannot modify these
            managed rules by using <code>DisableRule</code>, <code>EnableRule</code>, <code>PutTargets</code>,
            <code>PutRule</code>, <code>TagResource</code>, or <code>UntagResource</code>.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.TestEventPattern(Amazon.EventBridge.Model.TestEventPatternRequest)">
            <summary>
            Tests whether the specified event pattern matches the provided event.
            
             
            <para>
            Most services in Amazon Web Services treat : or / as the same character in Amazon
            Resource Names (ARNs). However, EventBridge uses an exact match in event patterns
            and rules. Be sure to use the correct ARN characters when creating event patterns
            so that they match the ARN syntax in the event you want to match.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the TestEventPattern service method.</param>
            
            <returns>The response from the TestEventPattern service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InvalidEventPatternException">
            The event pattern is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/TestEventPattern">REST API Reference for TestEventPattern Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.TestEventPatternAsync(Amazon.EventBridge.Model.TestEventPatternRequest,System.Threading.CancellationToken)">
            <summary>
            Tests whether the specified event pattern matches the provided event.
            
             
            <para>
            Most services in Amazon Web Services treat : or / as the same character in Amazon
            Resource Names (ARNs). However, EventBridge uses an exact match in event patterns
            and rules. Be sure to use the correct ARN characters when creating event patterns
            so that they match the ARN syntax in the event you want to match.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the TestEventPattern service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TestEventPattern service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InvalidEventPatternException">
            The event pattern is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/TestEventPattern">REST API Reference for TestEventPattern Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.UntagResource(Amazon.EventBridge.Model.UntagResourceRequest)">
            <summary>
            Removes one or more tags from the specified EventBridge resource. In Amazon EventBridge
            (CloudWatch Events), rules and event buses can be tagged.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            
            <returns>The response from the UntagResource service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ManagedRuleException">
            This rule was created by an Amazon Web Services service on behalf of your account.
            It is managed by that service. If you see this error in response to <code>DeleteRule</code>
            or <code>RemoveTargets</code>, you can use the <code>Force</code> parameter in those
            calls to delete the rule or remove targets from the rule. You cannot modify these
            managed rules by using <code>DisableRule</code>, <code>EnableRule</code>, <code>PutTargets</code>,
            <code>PutRule</code>, <code>TagResource</code>, or <code>UntagResource</code>.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.UntagResourceAsync(Amazon.EventBridge.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Removes one or more tags from the specified EventBridge resource. In Amazon EventBridge
            (CloudWatch Events), rules and event buses can be tagged.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ManagedRuleException">
            This rule was created by an Amazon Web Services service on behalf of your account.
            It is managed by that service. If you see this error in response to <code>DeleteRule</code>
            or <code>RemoveTargets</code>, you can use the <code>Force</code> parameter in those
            calls to delete the rule or remove targets from the rule. You cannot modify these
            managed rules by using <code>DisableRule</code>, <code>EnableRule</code>, <code>PutTargets</code>,
            <code>PutRule</code>, <code>TagResource</code>, or <code>UntagResource</code>.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.UpdateApiDestination(Amazon.EventBridge.Model.UpdateApiDestinationRequest)">
            <summary>
            Updates an API destination.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateApiDestination service method.</param>
            
            <returns>The response from the UpdateApiDestination service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.LimitExceededException">
            The request failed because it attempted to create resource beyond the allowed service
            quota.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/UpdateApiDestination">REST API Reference for UpdateApiDestination Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.UpdateApiDestinationAsync(Amazon.EventBridge.Model.UpdateApiDestinationRequest,System.Threading.CancellationToken)">
            <summary>
            Updates an API destination.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateApiDestination service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateApiDestination service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.LimitExceededException">
            The request failed because it attempted to create resource beyond the allowed service
            quota.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/UpdateApiDestination">REST API Reference for UpdateApiDestination Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.UpdateArchive(Amazon.EventBridge.Model.UpdateArchiveRequest)">
            <summary>
            Updates the specified archive.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateArchive service method.</param>
            
            <returns>The response from the UpdateArchive service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InvalidEventPatternException">
            The event pattern is not valid.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.LimitExceededException">
            The request failed because it attempted to create resource beyond the allowed service
            quota.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/UpdateArchive">REST API Reference for UpdateArchive Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.UpdateArchiveAsync(Amazon.EventBridge.Model.UpdateArchiveRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the specified archive.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateArchive service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateArchive service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InvalidEventPatternException">
            The event pattern is not valid.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.LimitExceededException">
            The request failed because it attempted to create resource beyond the allowed service
            quota.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/UpdateArchive">REST API Reference for UpdateArchive Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.UpdateConnection(Amazon.EventBridge.Model.UpdateConnectionRequest)">
            <summary>
            Updates settings for a connection.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateConnection service method.</param>
            
            <returns>The response from the UpdateConnection service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.LimitExceededException">
            The request failed because it attempted to create resource beyond the allowed service
            quota.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/UpdateConnection">REST API Reference for UpdateConnection Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.AmazonEventBridgeClient.UpdateConnectionAsync(Amazon.EventBridge.Model.UpdateConnectionRequest,System.Threading.CancellationToken)">
            <summary>
            Updates settings for a connection.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateConnection service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateConnection service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.LimitExceededException">
            The request failed because it attempted to create resource beyond the allowed service
            quota.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/UpdateConnection">REST API Reference for UpdateConnection Operation</seealso>
        </member>
        <member name="T:Amazon.EventBridge.IAmazonEventBridge">
             <summary>
             Interface for accessing EventBridge
            
             Amazon EventBridge helps you to respond to state changes in your Amazon Web Services
             resources. When your resources change state, they automatically send events to an
             event stream. You can create rules that match selected events in the stream and route
             them to targets to take action. You can also use rules to take action on a predetermined
             schedule. For example, you can configure rules to:
             
              <ul> <li> 
             <para>
             Automatically invoke an Lambda function to update DNS entries when an event notifies
             you that Amazon EC2 instance enters the running state.
             </para>
              </li> <li> 
             <para>
             Direct specific API records from CloudTrail to an Amazon Kinesis data stream for detailed
             analysis of potential security or availability risks.
             </para>
              </li> <li> 
             <para>
             Periodically invoke a built-in target to create a snapshot of an Amazon EBS volume.
             </para>
              </li> </ul> 
             <para>
             For more information about the features of Amazon EventBridge, see the <a href="https://docs.aws.amazon.com/eventbridge/latest/userguide">Amazon
             EventBridge User Guide</a>.
             </para>
             </summary>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.ActivateEventSource(Amazon.EventBridge.Model.ActivateEventSourceRequest)">
            <summary>
            Activates a partner event source that has been deactivated. Once activated, your matching
            event bus will start receiving events from the event source.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ActivateEventSource service method.</param>
            
            <returns>The response from the ActivateEventSource service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InvalidStateException">
            The specified state is not a valid state for an event source.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.OperationDisabledException">
            The operation you are attempting is not available in this region.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/ActivateEventSource">REST API Reference for ActivateEventSource Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.ActivateEventSourceAsync(Amazon.EventBridge.Model.ActivateEventSourceRequest,System.Threading.CancellationToken)">
            <summary>
            Activates a partner event source that has been deactivated. Once activated, your matching
            event bus will start receiving events from the event source.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ActivateEventSource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ActivateEventSource service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InvalidStateException">
            The specified state is not a valid state for an event source.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.OperationDisabledException">
            The operation you are attempting is not available in this region.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/ActivateEventSource">REST API Reference for ActivateEventSource Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.CancelReplay(Amazon.EventBridge.Model.CancelReplayRequest)">
            <summary>
            Cancels the specified replay.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CancelReplay service method.</param>
            
            <returns>The response from the CancelReplay service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.IllegalStatusException">
            An error occurred because a replay can be canceled only when the state is Running
            or Starting.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/CancelReplay">REST API Reference for CancelReplay Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.CancelReplayAsync(Amazon.EventBridge.Model.CancelReplayRequest,System.Threading.CancellationToken)">
            <summary>
            Cancels the specified replay.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CancelReplay service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CancelReplay service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.IllegalStatusException">
            An error occurred because a replay can be canceled only when the state is Running
            or Starting.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/CancelReplay">REST API Reference for CancelReplay Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.CreateApiDestination(Amazon.EventBridge.Model.CreateApiDestinationRequest)">
            <summary>
            Creates an API destination, which is an HTTP invocation endpoint configured as a target
            for events.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateApiDestination service method.</param>
            
            <returns>The response from the CreateApiDestination service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.LimitExceededException">
            The request failed because it attempted to create resource beyond the allowed service
            quota.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceAlreadyExistsException">
            The resource you are trying to create already exists.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/CreateApiDestination">REST API Reference for CreateApiDestination Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.CreateApiDestinationAsync(Amazon.EventBridge.Model.CreateApiDestinationRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an API destination, which is an HTTP invocation endpoint configured as a target
            for events.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateApiDestination service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateApiDestination service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.LimitExceededException">
            The request failed because it attempted to create resource beyond the allowed service
            quota.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceAlreadyExistsException">
            The resource you are trying to create already exists.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/CreateApiDestination">REST API Reference for CreateApiDestination Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.CreateArchive(Amazon.EventBridge.Model.CreateArchiveRequest)">
            <summary>
            Creates an archive of events with the specified settings. When you create an archive,
            incoming events might not immediately start being sent to the archive. Allow a short
            period of time for changes to take effect. If you do not specify a pattern to filter
            events sent to the archive, all events are sent to the archive except replayed events.
            Replayed events are not sent to an archive.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateArchive service method.</param>
            
            <returns>The response from the CreateArchive service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InvalidEventPatternException">
            The event pattern is not valid.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.LimitExceededException">
            The request failed because it attempted to create resource beyond the allowed service
            quota.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceAlreadyExistsException">
            The resource you are trying to create already exists.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/CreateArchive">REST API Reference for CreateArchive Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.CreateArchiveAsync(Amazon.EventBridge.Model.CreateArchiveRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an archive of events with the specified settings. When you create an archive,
            incoming events might not immediately start being sent to the archive. Allow a short
            period of time for changes to take effect. If you do not specify a pattern to filter
            events sent to the archive, all events are sent to the archive except replayed events.
            Replayed events are not sent to an archive.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateArchive service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateArchive service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InvalidEventPatternException">
            The event pattern is not valid.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.LimitExceededException">
            The request failed because it attempted to create resource beyond the allowed service
            quota.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceAlreadyExistsException">
            The resource you are trying to create already exists.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/CreateArchive">REST API Reference for CreateArchive Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.CreateConnection(Amazon.EventBridge.Model.CreateConnectionRequest)">
            <summary>
            Creates a connection. A connection defines the authorization type and credentials
            to use for authorization with an API destination HTTP endpoint.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateConnection service method.</param>
            
            <returns>The response from the CreateConnection service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.LimitExceededException">
            The request failed because it attempted to create resource beyond the allowed service
            quota.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceAlreadyExistsException">
            The resource you are trying to create already exists.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/CreateConnection">REST API Reference for CreateConnection Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.CreateConnectionAsync(Amazon.EventBridge.Model.CreateConnectionRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a connection. A connection defines the authorization type and credentials
            to use for authorization with an API destination HTTP endpoint.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateConnection service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateConnection service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.LimitExceededException">
            The request failed because it attempted to create resource beyond the allowed service
            quota.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceAlreadyExistsException">
            The resource you are trying to create already exists.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/CreateConnection">REST API Reference for CreateConnection Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.CreateEventBus(Amazon.EventBridge.Model.CreateEventBusRequest)">
            <summary>
            Creates a new event bus within your account. This can be a custom event bus which
            you can use to receive events from your custom applications and services, or it can
            be a partner event bus which can be matched to a partner event source.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateEventBus service method.</param>
            
            <returns>The response from the CreateEventBus service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InvalidStateException">
            The specified state is not a valid state for an event source.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.LimitExceededException">
            The request failed because it attempted to create resource beyond the allowed service
            quota.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.OperationDisabledException">
            The operation you are attempting is not available in this region.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceAlreadyExistsException">
            The resource you are trying to create already exists.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/CreateEventBus">REST API Reference for CreateEventBus Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.CreateEventBusAsync(Amazon.EventBridge.Model.CreateEventBusRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new event bus within your account. This can be a custom event bus which
            you can use to receive events from your custom applications and services, or it can
            be a partner event bus which can be matched to a partner event source.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateEventBus service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateEventBus service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InvalidStateException">
            The specified state is not a valid state for an event source.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.LimitExceededException">
            The request failed because it attempted to create resource beyond the allowed service
            quota.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.OperationDisabledException">
            The operation you are attempting is not available in this region.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceAlreadyExistsException">
            The resource you are trying to create already exists.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/CreateEventBus">REST API Reference for CreateEventBus Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.CreatePartnerEventSource(Amazon.EventBridge.Model.CreatePartnerEventSourceRequest)">
            <summary>
            Called by an SaaS partner to create a partner event source. This operation is not
            used by Amazon Web Services customers.
            
             
            <para>
            Each partner event source can be used by one Amazon Web Services account to create
            a matching partner event bus in that Amazon Web Services account. A SaaS partner must
            create one partner event source for each Amazon Web Services account that wants to
            receive those event types. 
            </para>
             
            <para>
            A partner event source creates events based on resources within the SaaS partner's
            service or application.
            </para>
             
            <para>
            An Amazon Web Services account that creates a partner event bus that matches the partner
            event source can use that event bus to receive events from the partner, and then process
            them using Amazon Web Services Events rules and targets.
            </para>
             
            <para>
            Partner event source names follow this format:
            </para>
             
            <para>
             <code> <i>partner_name</i>/<i>event_namespace</i>/<i>event_name</i> </code> 
            </para>
             
            <para>
             <i>partner_name</i> is determined during partner registration and identifies the
            partner to Amazon Web Services customers. <i>event_namespace</i> is determined by
            the partner and is a way for the partner to categorize their events. <i>event_name</i>
            is determined by the partner, and should uniquely identify an event-generating resource
            within the partner system. The combination of <i>event_namespace</i> and <i>event_name</i>
            should help Amazon Web Services customers decide whether to create an event bus to
            receive these events.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreatePartnerEventSource service method.</param>
            
            <returns>The response from the CreatePartnerEventSource service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.LimitExceededException">
            The request failed because it attempted to create resource beyond the allowed service
            quota.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.OperationDisabledException">
            The operation you are attempting is not available in this region.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceAlreadyExistsException">
            The resource you are trying to create already exists.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/CreatePartnerEventSource">REST API Reference for CreatePartnerEventSource Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.CreatePartnerEventSourceAsync(Amazon.EventBridge.Model.CreatePartnerEventSourceRequest,System.Threading.CancellationToken)">
            <summary>
            Called by an SaaS partner to create a partner event source. This operation is not
            used by Amazon Web Services customers.
            
             
            <para>
            Each partner event source can be used by one Amazon Web Services account to create
            a matching partner event bus in that Amazon Web Services account. A SaaS partner must
            create one partner event source for each Amazon Web Services account that wants to
            receive those event types. 
            </para>
             
            <para>
            A partner event source creates events based on resources within the SaaS partner's
            service or application.
            </para>
             
            <para>
            An Amazon Web Services account that creates a partner event bus that matches the partner
            event source can use that event bus to receive events from the partner, and then process
            them using Amazon Web Services Events rules and targets.
            </para>
             
            <para>
            Partner event source names follow this format:
            </para>
             
            <para>
             <code> <i>partner_name</i>/<i>event_namespace</i>/<i>event_name</i> </code> 
            </para>
             
            <para>
             <i>partner_name</i> is determined during partner registration and identifies the
            partner to Amazon Web Services customers. <i>event_namespace</i> is determined by
            the partner and is a way for the partner to categorize their events. <i>event_name</i>
            is determined by the partner, and should uniquely identify an event-generating resource
            within the partner system. The combination of <i>event_namespace</i> and <i>event_name</i>
            should help Amazon Web Services customers decide whether to create an event bus to
            receive these events.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreatePartnerEventSource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreatePartnerEventSource service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.LimitExceededException">
            The request failed because it attempted to create resource beyond the allowed service
            quota.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.OperationDisabledException">
            The operation you are attempting is not available in this region.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceAlreadyExistsException">
            The resource you are trying to create already exists.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/CreatePartnerEventSource">REST API Reference for CreatePartnerEventSource Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.DeactivateEventSource(Amazon.EventBridge.Model.DeactivateEventSourceRequest)">
            <summary>
            You can use this operation to temporarily stop receiving events from the specified
            partner event source. The matching event bus is not deleted. 
            
             
            <para>
            When you deactivate a partner event source, the source goes into PENDING state. If
            it remains in PENDING state for more than two weeks, it is deleted.
            </para>
             
            <para>
            To activate a deactivated partner event source, use <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_ActivateEventSource.html">ActivateEventSource</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeactivateEventSource service method.</param>
            
            <returns>The response from the DeactivateEventSource service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InvalidStateException">
            The specified state is not a valid state for an event source.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.OperationDisabledException">
            The operation you are attempting is not available in this region.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/DeactivateEventSource">REST API Reference for DeactivateEventSource Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.DeactivateEventSourceAsync(Amazon.EventBridge.Model.DeactivateEventSourceRequest,System.Threading.CancellationToken)">
            <summary>
            You can use this operation to temporarily stop receiving events from the specified
            partner event source. The matching event bus is not deleted. 
            
             
            <para>
            When you deactivate a partner event source, the source goes into PENDING state. If
            it remains in PENDING state for more than two weeks, it is deleted.
            </para>
             
            <para>
            To activate a deactivated partner event source, use <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_ActivateEventSource.html">ActivateEventSource</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeactivateEventSource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeactivateEventSource service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InvalidStateException">
            The specified state is not a valid state for an event source.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.OperationDisabledException">
            The operation you are attempting is not available in this region.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/DeactivateEventSource">REST API Reference for DeactivateEventSource Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.DeauthorizeConnection(Amazon.EventBridge.Model.DeauthorizeConnectionRequest)">
            <summary>
            Removes all authorization parameters from the connection. This lets you remove the
            secret from the connection so you can reuse it without having to create a new connection.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeauthorizeConnection service method.</param>
            
            <returns>The response from the DeauthorizeConnection service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/DeauthorizeConnection">REST API Reference for DeauthorizeConnection Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.DeauthorizeConnectionAsync(Amazon.EventBridge.Model.DeauthorizeConnectionRequest,System.Threading.CancellationToken)">
            <summary>
            Removes all authorization parameters from the connection. This lets you remove the
            secret from the connection so you can reuse it without having to create a new connection.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeauthorizeConnection service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeauthorizeConnection service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/DeauthorizeConnection">REST API Reference for DeauthorizeConnection Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.DeleteApiDestination(Amazon.EventBridge.Model.DeleteApiDestinationRequest)">
            <summary>
            Deletes the specified API destination.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteApiDestination service method.</param>
            
            <returns>The response from the DeleteApiDestination service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/DeleteApiDestination">REST API Reference for DeleteApiDestination Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.DeleteApiDestinationAsync(Amazon.EventBridge.Model.DeleteApiDestinationRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified API destination.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteApiDestination service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteApiDestination service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/DeleteApiDestination">REST API Reference for DeleteApiDestination Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.DeleteArchive(Amazon.EventBridge.Model.DeleteArchiveRequest)">
            <summary>
            Deletes the specified archive.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteArchive service method.</param>
            
            <returns>The response from the DeleteArchive service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/DeleteArchive">REST API Reference for DeleteArchive Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.DeleteArchiveAsync(Amazon.EventBridge.Model.DeleteArchiveRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified archive.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteArchive service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteArchive service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/DeleteArchive">REST API Reference for DeleteArchive Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.DeleteConnection(Amazon.EventBridge.Model.DeleteConnectionRequest)">
            <summary>
            Deletes a connection.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteConnection service method.</param>
            
            <returns>The response from the DeleteConnection service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/DeleteConnection">REST API Reference for DeleteConnection Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.DeleteConnectionAsync(Amazon.EventBridge.Model.DeleteConnectionRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a connection.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteConnection service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteConnection service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/DeleteConnection">REST API Reference for DeleteConnection Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.DeleteEventBus(Amazon.EventBridge.Model.DeleteEventBusRequest)">
            <summary>
            Deletes the specified custom event bus or partner event bus. All rules associated
            with this event bus need to be deleted. You can't delete your account's default event
            bus.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteEventBus service method.</param>
            
            <returns>The response from the DeleteEventBus service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/DeleteEventBus">REST API Reference for DeleteEventBus Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.DeleteEventBusAsync(Amazon.EventBridge.Model.DeleteEventBusRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified custom event bus or partner event bus. All rules associated
            with this event bus need to be deleted. You can't delete your account's default event
            bus.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteEventBus service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteEventBus service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/DeleteEventBus">REST API Reference for DeleteEventBus Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.DeletePartnerEventSource(Amazon.EventBridge.Model.DeletePartnerEventSourceRequest)">
            <summary>
            This operation is used by SaaS partners to delete a partner event source. This operation
            is not used by Amazon Web Services customers.
            
             
            <para>
            When you delete an event source, the status of the corresponding partner event bus
            in the Amazon Web Services customer account becomes DELETED.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeletePartnerEventSource service method.</param>
            
            <returns>The response from the DeletePartnerEventSource service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.OperationDisabledException">
            The operation you are attempting is not available in this region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/DeletePartnerEventSource">REST API Reference for DeletePartnerEventSource Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.DeletePartnerEventSourceAsync(Amazon.EventBridge.Model.DeletePartnerEventSourceRequest,System.Threading.CancellationToken)">
            <summary>
            This operation is used by SaaS partners to delete a partner event source. This operation
            is not used by Amazon Web Services customers.
            
             
            <para>
            When you delete an event source, the status of the corresponding partner event bus
            in the Amazon Web Services customer account becomes DELETED.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeletePartnerEventSource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeletePartnerEventSource service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.OperationDisabledException">
            The operation you are attempting is not available in this region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/DeletePartnerEventSource">REST API Reference for DeletePartnerEventSource Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.DeleteRule(Amazon.EventBridge.Model.DeleteRuleRequest)">
            <summary>
            Deletes the specified rule.
            
             
            <para>
            Before you can delete the rule, you must remove all targets, using <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_RemoveTargets.html">RemoveTargets</a>.
            </para>
             
            <para>
            When you delete a rule, incoming events might continue to match to the deleted rule.
            Allow a short period of time for changes to take effect.
            </para>
             
            <para>
            If you call delete rule multiple times for the same rule, all calls will succeed.
            When you call delete rule for a non-existent custom eventbus, <code>ResourceNotFoundException</code>
            is returned.
            </para>
             
            <para>
            Managed rules are rules created and managed by another Amazon Web Services service
            on your behalf. These rules are created by those other Amazon Web Services services
            to support functionality in those services. You can delete these rules using the <code>Force</code>
            option, but you should do so only if you are sure the other service is not still using
            that rule.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteRule service method.</param>
            
            <returns>The response from the DeleteRule service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ManagedRuleException">
            This rule was created by an Amazon Web Services service on behalf of your account.
            It is managed by that service. If you see this error in response to <code>DeleteRule</code>
            or <code>RemoveTargets</code>, you can use the <code>Force</code> parameter in those
            calls to delete the rule or remove targets from the rule. You cannot modify these
            managed rules by using <code>DisableRule</code>, <code>EnableRule</code>, <code>PutTargets</code>,
            <code>PutRule</code>, <code>TagResource</code>, or <code>UntagResource</code>.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/DeleteRule">REST API Reference for DeleteRule Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.DeleteRuleAsync(Amazon.EventBridge.Model.DeleteRuleRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified rule.
            
             
            <para>
            Before you can delete the rule, you must remove all targets, using <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_RemoveTargets.html">RemoveTargets</a>.
            </para>
             
            <para>
            When you delete a rule, incoming events might continue to match to the deleted rule.
            Allow a short period of time for changes to take effect.
            </para>
             
            <para>
            If you call delete rule multiple times for the same rule, all calls will succeed.
            When you call delete rule for a non-existent custom eventbus, <code>ResourceNotFoundException</code>
            is returned.
            </para>
             
            <para>
            Managed rules are rules created and managed by another Amazon Web Services service
            on your behalf. These rules are created by those other Amazon Web Services services
            to support functionality in those services. You can delete these rules using the <code>Force</code>
            option, but you should do so only if you are sure the other service is not still using
            that rule.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteRule service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteRule service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ManagedRuleException">
            This rule was created by an Amazon Web Services service on behalf of your account.
            It is managed by that service. If you see this error in response to <code>DeleteRule</code>
            or <code>RemoveTargets</code>, you can use the <code>Force</code> parameter in those
            calls to delete the rule or remove targets from the rule. You cannot modify these
            managed rules by using <code>DisableRule</code>, <code>EnableRule</code>, <code>PutTargets</code>,
            <code>PutRule</code>, <code>TagResource</code>, or <code>UntagResource</code>.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/DeleteRule">REST API Reference for DeleteRule Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.DescribeApiDestination(Amazon.EventBridge.Model.DescribeApiDestinationRequest)">
            <summary>
            Retrieves details about an API destination.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeApiDestination service method.</param>
            
            <returns>The response from the DescribeApiDestination service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/DescribeApiDestination">REST API Reference for DescribeApiDestination Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.DescribeApiDestinationAsync(Amazon.EventBridge.Model.DescribeApiDestinationRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves details about an API destination.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeApiDestination service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeApiDestination service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/DescribeApiDestination">REST API Reference for DescribeApiDestination Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.DescribeArchive(Amazon.EventBridge.Model.DescribeArchiveRequest)">
            <summary>
            Retrieves details about an archive.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeArchive service method.</param>
            
            <returns>The response from the DescribeArchive service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceAlreadyExistsException">
            The resource you are trying to create already exists.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/DescribeArchive">REST API Reference for DescribeArchive Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.DescribeArchiveAsync(Amazon.EventBridge.Model.DescribeArchiveRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves details about an archive.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeArchive service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeArchive service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceAlreadyExistsException">
            The resource you are trying to create already exists.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/DescribeArchive">REST API Reference for DescribeArchive Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.DescribeConnection(Amazon.EventBridge.Model.DescribeConnectionRequest)">
            <summary>
            Retrieves details about a connection.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeConnection service method.</param>
            
            <returns>The response from the DescribeConnection service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/DescribeConnection">REST API Reference for DescribeConnection Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.DescribeConnectionAsync(Amazon.EventBridge.Model.DescribeConnectionRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves details about a connection.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeConnection service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeConnection service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/DescribeConnection">REST API Reference for DescribeConnection Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.DescribeEventBus(Amazon.EventBridge.Model.DescribeEventBusRequest)">
            <summary>
            Displays details about an event bus in your account. This can include the external
            Amazon Web Services accounts that are permitted to write events to your default event
            bus, and the associated policy. For custom event buses and partner event buses, it
            displays the name, ARN, policy, state, and creation time.
            
             
            <para>
             To enable your account to receive events from other accounts on its default event
            bus, use <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_PutPermission.html">PutPermission</a>.
            </para>
             
            <para>
            For more information about partner event buses, see <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_CreateEventBus.html">CreateEventBus</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeEventBus service method.</param>
            
            <returns>The response from the DescribeEventBus service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/DescribeEventBus">REST API Reference for DescribeEventBus Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.DescribeEventBusAsync(Amazon.EventBridge.Model.DescribeEventBusRequest,System.Threading.CancellationToken)">
            <summary>
            Displays details about an event bus in your account. This can include the external
            Amazon Web Services accounts that are permitted to write events to your default event
            bus, and the associated policy. For custom event buses and partner event buses, it
            displays the name, ARN, policy, state, and creation time.
            
             
            <para>
             To enable your account to receive events from other accounts on its default event
            bus, use <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_PutPermission.html">PutPermission</a>.
            </para>
             
            <para>
            For more information about partner event buses, see <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_CreateEventBus.html">CreateEventBus</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeEventBus service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeEventBus service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/DescribeEventBus">REST API Reference for DescribeEventBus Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.DescribeEventSource(Amazon.EventBridge.Model.DescribeEventSourceRequest)">
            <summary>
            This operation lists details about a partner event source that is shared with your
            account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeEventSource service method.</param>
            
            <returns>The response from the DescribeEventSource service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.OperationDisabledException">
            The operation you are attempting is not available in this region.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/DescribeEventSource">REST API Reference for DescribeEventSource Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.DescribeEventSourceAsync(Amazon.EventBridge.Model.DescribeEventSourceRequest,System.Threading.CancellationToken)">
            <summary>
            This operation lists details about a partner event source that is shared with your
            account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeEventSource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeEventSource service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.OperationDisabledException">
            The operation you are attempting is not available in this region.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/DescribeEventSource">REST API Reference for DescribeEventSource Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.DescribePartnerEventSource(Amazon.EventBridge.Model.DescribePartnerEventSourceRequest)">
            <summary>
            An SaaS partner can use this operation to list details about a partner event source
            that they have created. Amazon Web Services customers do not use this operation. Instead,
            Amazon Web Services customers can use <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_DescribeEventSource.html">DescribeEventSource</a>
            to see details about a partner event source that is shared with them.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribePartnerEventSource service method.</param>
            
            <returns>The response from the DescribePartnerEventSource service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.OperationDisabledException">
            The operation you are attempting is not available in this region.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/DescribePartnerEventSource">REST API Reference for DescribePartnerEventSource Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.DescribePartnerEventSourceAsync(Amazon.EventBridge.Model.DescribePartnerEventSourceRequest,System.Threading.CancellationToken)">
            <summary>
            An SaaS partner can use this operation to list details about a partner event source
            that they have created. Amazon Web Services customers do not use this operation. Instead,
            Amazon Web Services customers can use <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_DescribeEventSource.html">DescribeEventSource</a>
            to see details about a partner event source that is shared with them.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribePartnerEventSource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribePartnerEventSource service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.OperationDisabledException">
            The operation you are attempting is not available in this region.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/DescribePartnerEventSource">REST API Reference for DescribePartnerEventSource Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.DescribeReplay(Amazon.EventBridge.Model.DescribeReplayRequest)">
            <summary>
            Retrieves details about a replay. Use <code>DescribeReplay</code> to determine the
            progress of a running replay. A replay processes events to replay based on the time
            in the event, and replays them using 1 minute intervals. If you use <code>StartReplay</code>
            and specify an <code>EventStartTime</code> and an <code>EventEndTime</code> that covers
            a 20 minute time range, the events are replayed from the first minute of that 20 minute
            range first. Then the events from the second minute are replayed. You can use <code>DescribeReplay</code>
            to determine the progress of a replay. The value returned for <code>EventLastReplayedTime</code>
            indicates the time within the specified time range associated with the last event
            replayed.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeReplay service method.</param>
            
            <returns>The response from the DescribeReplay service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/DescribeReplay">REST API Reference for DescribeReplay Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.DescribeReplayAsync(Amazon.EventBridge.Model.DescribeReplayRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves details about a replay. Use <code>DescribeReplay</code> to determine the
            progress of a running replay. A replay processes events to replay based on the time
            in the event, and replays them using 1 minute intervals. If you use <code>StartReplay</code>
            and specify an <code>EventStartTime</code> and an <code>EventEndTime</code> that covers
            a 20 minute time range, the events are replayed from the first minute of that 20 minute
            range first. Then the events from the second minute are replayed. You can use <code>DescribeReplay</code>
            to determine the progress of a replay. The value returned for <code>EventLastReplayedTime</code>
            indicates the time within the specified time range associated with the last event
            replayed.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeReplay service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeReplay service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/DescribeReplay">REST API Reference for DescribeReplay Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.DescribeRule(Amazon.EventBridge.Model.DescribeRuleRequest)">
            <summary>
            Describes the specified rule.
            
             
            <para>
            DescribeRule does not list the targets of a rule. To see the targets associated with
            a rule, use <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_ListTargetsByRule.html">ListTargetsByRule</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeRule service method.</param>
            
            <returns>The response from the DescribeRule service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/DescribeRule">REST API Reference for DescribeRule Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.DescribeRuleAsync(Amazon.EventBridge.Model.DescribeRuleRequest,System.Threading.CancellationToken)">
            <summary>
            Describes the specified rule.
            
             
            <para>
            DescribeRule does not list the targets of a rule. To see the targets associated with
            a rule, use <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_ListTargetsByRule.html">ListTargetsByRule</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeRule service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeRule service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/DescribeRule">REST API Reference for DescribeRule Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.DisableRule(Amazon.EventBridge.Model.DisableRuleRequest)">
            <summary>
            Disables the specified rule. A disabled rule won't match any events, and won't self-trigger
            if it has a schedule expression.
            
             
            <para>
            When you disable a rule, incoming events might continue to match to the disabled rule.
            Allow a short period of time for changes to take effect.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DisableRule service method.</param>
            
            <returns>The response from the DisableRule service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ManagedRuleException">
            This rule was created by an Amazon Web Services service on behalf of your account.
            It is managed by that service. If you see this error in response to <code>DeleteRule</code>
            or <code>RemoveTargets</code>, you can use the <code>Force</code> parameter in those
            calls to delete the rule or remove targets from the rule. You cannot modify these
            managed rules by using <code>DisableRule</code>, <code>EnableRule</code>, <code>PutTargets</code>,
            <code>PutRule</code>, <code>TagResource</code>, or <code>UntagResource</code>.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/DisableRule">REST API Reference for DisableRule Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.DisableRuleAsync(Amazon.EventBridge.Model.DisableRuleRequest,System.Threading.CancellationToken)">
            <summary>
            Disables the specified rule. A disabled rule won't match any events, and won't self-trigger
            if it has a schedule expression.
            
             
            <para>
            When you disable a rule, incoming events might continue to match to the disabled rule.
            Allow a short period of time for changes to take effect.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DisableRule service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DisableRule service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ManagedRuleException">
            This rule was created by an Amazon Web Services service on behalf of your account.
            It is managed by that service. If you see this error in response to <code>DeleteRule</code>
            or <code>RemoveTargets</code>, you can use the <code>Force</code> parameter in those
            calls to delete the rule or remove targets from the rule. You cannot modify these
            managed rules by using <code>DisableRule</code>, <code>EnableRule</code>, <code>PutTargets</code>,
            <code>PutRule</code>, <code>TagResource</code>, or <code>UntagResource</code>.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/DisableRule">REST API Reference for DisableRule Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.EnableRule(Amazon.EventBridge.Model.EnableRuleRequest)">
            <summary>
            Enables the specified rule. If the rule does not exist, the operation fails.
            
             
            <para>
            When you enable a rule, incoming events might not immediately start matching to a
            newly enabled rule. Allow a short period of time for changes to take effect.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the EnableRule service method.</param>
            
            <returns>The response from the EnableRule service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ManagedRuleException">
            This rule was created by an Amazon Web Services service on behalf of your account.
            It is managed by that service. If you see this error in response to <code>DeleteRule</code>
            or <code>RemoveTargets</code>, you can use the <code>Force</code> parameter in those
            calls to delete the rule or remove targets from the rule. You cannot modify these
            managed rules by using <code>DisableRule</code>, <code>EnableRule</code>, <code>PutTargets</code>,
            <code>PutRule</code>, <code>TagResource</code>, or <code>UntagResource</code>.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/EnableRule">REST API Reference for EnableRule Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.EnableRuleAsync(Amazon.EventBridge.Model.EnableRuleRequest,System.Threading.CancellationToken)">
            <summary>
            Enables the specified rule. If the rule does not exist, the operation fails.
            
             
            <para>
            When you enable a rule, incoming events might not immediately start matching to a
            newly enabled rule. Allow a short period of time for changes to take effect.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the EnableRule service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the EnableRule service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ManagedRuleException">
            This rule was created by an Amazon Web Services service on behalf of your account.
            It is managed by that service. If you see this error in response to <code>DeleteRule</code>
            or <code>RemoveTargets</code>, you can use the <code>Force</code> parameter in those
            calls to delete the rule or remove targets from the rule. You cannot modify these
            managed rules by using <code>DisableRule</code>, <code>EnableRule</code>, <code>PutTargets</code>,
            <code>PutRule</code>, <code>TagResource</code>, or <code>UntagResource</code>.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/EnableRule">REST API Reference for EnableRule Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.ListApiDestinations(Amazon.EventBridge.Model.ListApiDestinationsRequest)">
            <summary>
            Retrieves a list of API destination in the account in the current Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListApiDestinations service method.</param>
            
            <returns>The response from the ListApiDestinations service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/ListApiDestinations">REST API Reference for ListApiDestinations Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.ListApiDestinationsAsync(Amazon.EventBridge.Model.ListApiDestinationsRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of API destination in the account in the current Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListApiDestinations service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListApiDestinations service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/ListApiDestinations">REST API Reference for ListApiDestinations Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.ListArchives(Amazon.EventBridge.Model.ListArchivesRequest)">
            <summary>
            Lists your archives. You can either list all the archives or you can provide a prefix
            to match to the archive names. Filter parameters are exclusive.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListArchives service method.</param>
            
            <returns>The response from the ListArchives service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/ListArchives">REST API Reference for ListArchives Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.ListArchivesAsync(Amazon.EventBridge.Model.ListArchivesRequest,System.Threading.CancellationToken)">
            <summary>
            Lists your archives. You can either list all the archives or you can provide a prefix
            to match to the archive names. Filter parameters are exclusive.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListArchives service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListArchives service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/ListArchives">REST API Reference for ListArchives Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.ListConnections(Amazon.EventBridge.Model.ListConnectionsRequest)">
            <summary>
            Retrieves a list of connections from the account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListConnections service method.</param>
            
            <returns>The response from the ListConnections service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/ListConnections">REST API Reference for ListConnections Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.ListConnectionsAsync(Amazon.EventBridge.Model.ListConnectionsRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of connections from the account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListConnections service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListConnections service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/ListConnections">REST API Reference for ListConnections Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.ListEventBuses(Amazon.EventBridge.Model.ListEventBusesRequest)">
            <summary>
            Lists all the event buses in your account, including the default event bus, custom
            event buses, and partner event buses.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListEventBuses service method.</param>
            
            <returns>The response from the ListEventBuses service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/ListEventBuses">REST API Reference for ListEventBuses Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.ListEventBusesAsync(Amazon.EventBridge.Model.ListEventBusesRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all the event buses in your account, including the default event bus, custom
            event buses, and partner event buses.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListEventBuses service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListEventBuses service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/ListEventBuses">REST API Reference for ListEventBuses Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.ListEventSources(Amazon.EventBridge.Model.ListEventSourcesRequest)">
            <summary>
            You can use this to see all the partner event sources that have been shared with your
            Amazon Web Services account. For more information about partner event sources, see
            <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_CreateEventBus.html">CreateEventBus</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListEventSources service method.</param>
            
            <returns>The response from the ListEventSources service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.OperationDisabledException">
            The operation you are attempting is not available in this region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/ListEventSources">REST API Reference for ListEventSources Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.ListEventSourcesAsync(Amazon.EventBridge.Model.ListEventSourcesRequest,System.Threading.CancellationToken)">
            <summary>
            You can use this to see all the partner event sources that have been shared with your
            Amazon Web Services account. For more information about partner event sources, see
            <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_CreateEventBus.html">CreateEventBus</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListEventSources service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListEventSources service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.OperationDisabledException">
            The operation you are attempting is not available in this region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/ListEventSources">REST API Reference for ListEventSources Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.ListPartnerEventSourceAccounts(Amazon.EventBridge.Model.ListPartnerEventSourceAccountsRequest)">
            <summary>
            An SaaS partner can use this operation to display the Amazon Web Services account
            ID that a particular partner event source name is associated with. This operation
            is not used by Amazon Web Services customers.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListPartnerEventSourceAccounts service method.</param>
            
            <returns>The response from the ListPartnerEventSourceAccounts service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.OperationDisabledException">
            The operation you are attempting is not available in this region.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/ListPartnerEventSourceAccounts">REST API Reference for ListPartnerEventSourceAccounts Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.ListPartnerEventSourceAccountsAsync(Amazon.EventBridge.Model.ListPartnerEventSourceAccountsRequest,System.Threading.CancellationToken)">
            <summary>
            An SaaS partner can use this operation to display the Amazon Web Services account
            ID that a particular partner event source name is associated with. This operation
            is not used by Amazon Web Services customers.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListPartnerEventSourceAccounts service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListPartnerEventSourceAccounts service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.OperationDisabledException">
            The operation you are attempting is not available in this region.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/ListPartnerEventSourceAccounts">REST API Reference for ListPartnerEventSourceAccounts Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.ListPartnerEventSources(Amazon.EventBridge.Model.ListPartnerEventSourcesRequest)">
            <summary>
            An SaaS partner can use this operation to list all the partner event source names
            that they have created. This operation is not used by Amazon Web Services customers.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListPartnerEventSources service method.</param>
            
            <returns>The response from the ListPartnerEventSources service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.OperationDisabledException">
            The operation you are attempting is not available in this region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/ListPartnerEventSources">REST API Reference for ListPartnerEventSources Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.ListPartnerEventSourcesAsync(Amazon.EventBridge.Model.ListPartnerEventSourcesRequest,System.Threading.CancellationToken)">
            <summary>
            An SaaS partner can use this operation to list all the partner event source names
            that they have created. This operation is not used by Amazon Web Services customers.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListPartnerEventSources service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListPartnerEventSources service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.OperationDisabledException">
            The operation you are attempting is not available in this region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/ListPartnerEventSources">REST API Reference for ListPartnerEventSources Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.ListReplays(Amazon.EventBridge.Model.ListReplaysRequest)">
            <summary>
            Lists your replays. You can either list all the replays or you can provide a prefix
            to match to the replay names. Filter parameters are exclusive.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListReplays service method.</param>
            
            <returns>The response from the ListReplays service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/ListReplays">REST API Reference for ListReplays Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.ListReplaysAsync(Amazon.EventBridge.Model.ListReplaysRequest,System.Threading.CancellationToken)">
            <summary>
            Lists your replays. You can either list all the replays or you can provide a prefix
            to match to the replay names. Filter parameters are exclusive.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListReplays service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListReplays service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/ListReplays">REST API Reference for ListReplays Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.ListRuleNamesByTarget(Amazon.EventBridge.Model.ListRuleNamesByTargetRequest)">
            <summary>
            Lists the rules for the specified target. You can see which of the rules in Amazon
            EventBridge can invoke a specific target in your account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListRuleNamesByTarget service method.</param>
            
            <returns>The response from the ListRuleNamesByTarget service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/ListRuleNamesByTarget">REST API Reference for ListRuleNamesByTarget Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.ListRuleNamesByTargetAsync(Amazon.EventBridge.Model.ListRuleNamesByTargetRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the rules for the specified target. You can see which of the rules in Amazon
            EventBridge can invoke a specific target in your account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListRuleNamesByTarget service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListRuleNamesByTarget service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/ListRuleNamesByTarget">REST API Reference for ListRuleNamesByTarget Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.ListRules(Amazon.EventBridge.Model.ListRulesRequest)">
            <summary>
            Lists your Amazon EventBridge rules. You can either list all the rules or you can
            provide a prefix to match to the rule names.
            
             
            <para>
            ListRules does not list the targets of a rule. To see the targets associated with
            a rule, use <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_ListTargetsByRule.html">ListTargetsByRule</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListRules service method.</param>
            
            <returns>The response from the ListRules service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/ListRules">REST API Reference for ListRules Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.ListRulesAsync(Amazon.EventBridge.Model.ListRulesRequest,System.Threading.CancellationToken)">
            <summary>
            Lists your Amazon EventBridge rules. You can either list all the rules or you can
            provide a prefix to match to the rule names.
            
             
            <para>
            ListRules does not list the targets of a rule. To see the targets associated with
            a rule, use <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_ListTargetsByRule.html">ListTargetsByRule</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListRules service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListRules service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/ListRules">REST API Reference for ListRules Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.ListTagsForResource(Amazon.EventBridge.Model.ListTagsForResourceRequest)">
            <summary>
            Displays the tags associated with an EventBridge resource. In EventBridge, rules and
            event buses can be tagged.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            
            <returns>The response from the ListTagsForResource service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.ListTagsForResourceAsync(Amazon.EventBridge.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Displays the tags associated with an EventBridge resource. In EventBridge, rules and
            event buses can be tagged.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.ListTargetsByRule(Amazon.EventBridge.Model.ListTargetsByRuleRequest)">
            <summary>
            Lists the targets assigned to the specified rule.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTargetsByRule service method.</param>
            
            <returns>The response from the ListTargetsByRule service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/ListTargetsByRule">REST API Reference for ListTargetsByRule Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.ListTargetsByRuleAsync(Amazon.EventBridge.Model.ListTargetsByRuleRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the targets assigned to the specified rule.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTargetsByRule service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTargetsByRule service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/ListTargetsByRule">REST API Reference for ListTargetsByRule Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.PutEvents(Amazon.EventBridge.Model.PutEventsRequest)">
            <summary>
            Sends custom events to Amazon EventBridge so that they can be matched to rules.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutEvents service method.</param>
            
            <returns>The response from the PutEvents service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/PutEvents">REST API Reference for PutEvents Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.PutEventsAsync(Amazon.EventBridge.Model.PutEventsRequest,System.Threading.CancellationToken)">
            <summary>
            Sends custom events to Amazon EventBridge so that they can be matched to rules.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutEvents service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutEvents service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/PutEvents">REST API Reference for PutEvents Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.PutPartnerEvents(Amazon.EventBridge.Model.PutPartnerEventsRequest)">
            <summary>
            This is used by SaaS partners to write events to a customer's partner event bus. Amazon
            Web Services customers do not use this operation.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutPartnerEvents service method.</param>
            
            <returns>The response from the PutPartnerEvents service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.OperationDisabledException">
            The operation you are attempting is not available in this region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/PutPartnerEvents">REST API Reference for PutPartnerEvents Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.PutPartnerEventsAsync(Amazon.EventBridge.Model.PutPartnerEventsRequest,System.Threading.CancellationToken)">
            <summary>
            This is used by SaaS partners to write events to a customer's partner event bus. Amazon
            Web Services customers do not use this operation.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutPartnerEvents service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutPartnerEvents service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.OperationDisabledException">
            The operation you are attempting is not available in this region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/PutPartnerEvents">REST API Reference for PutPartnerEvents Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.PutPermission(Amazon.EventBridge.Model.PutPermissionRequest)">
            <summary>
            Running <code>PutPermission</code> permits the specified Amazon Web Services account
            or Amazon Web Services organization to put events to the specified <i>event bus</i>.
            Amazon EventBridge (CloudWatch Events) rules in your account are triggered by these
            events arriving to an event bus in your account. 
            
             
            <para>
            For another account to send events to your account, that external account must have
            an EventBridge rule with your account's event bus as a target.
            </para>
             
            <para>
            To enable multiple Amazon Web Services accounts to put events to your event bus, run
            <code>PutPermission</code> once for each of these accounts. Or, if all the accounts
            are members of the same Amazon Web Services organization, you can run <code>PutPermission</code>
            once specifying <code>Principal</code> as "*" and specifying the Amazon Web Services
            organization ID in <code>Condition</code>, to grant permissions to all accounts in
            that organization.
            </para>
             
            <para>
            If you grant permissions using an organization, then accounts in that organization
            must specify a <code>RoleArn</code> with proper permissions when they use <code>PutTarget</code>
            to add your account's event bus as a target. For more information, see <a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-cross-account-event-delivery.html">Sending
            and Receiving Events Between Amazon Web Services Accounts</a> in the <i>Amazon EventBridge
            User Guide</i>.
            </para>
             
            <para>
            The permission policy on the event bus cannot exceed 10 KB in size.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutPermission service method.</param>
            
            <returns>The response from the PutPermission service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.OperationDisabledException">
            The operation you are attempting is not available in this region.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.PolicyLengthExceededException">
            The event bus policy is too long. For more information, see the limits.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/PutPermission">REST API Reference for PutPermission Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.PutPermissionAsync(Amazon.EventBridge.Model.PutPermissionRequest,System.Threading.CancellationToken)">
            <summary>
            Running <code>PutPermission</code> permits the specified Amazon Web Services account
            or Amazon Web Services organization to put events to the specified <i>event bus</i>.
            Amazon EventBridge (CloudWatch Events) rules in your account are triggered by these
            events arriving to an event bus in your account. 
            
             
            <para>
            For another account to send events to your account, that external account must have
            an EventBridge rule with your account's event bus as a target.
            </para>
             
            <para>
            To enable multiple Amazon Web Services accounts to put events to your event bus, run
            <code>PutPermission</code> once for each of these accounts. Or, if all the accounts
            are members of the same Amazon Web Services organization, you can run <code>PutPermission</code>
            once specifying <code>Principal</code> as "*" and specifying the Amazon Web Services
            organization ID in <code>Condition</code>, to grant permissions to all accounts in
            that organization.
            </para>
             
            <para>
            If you grant permissions using an organization, then accounts in that organization
            must specify a <code>RoleArn</code> with proper permissions when they use <code>PutTarget</code>
            to add your account's event bus as a target. For more information, see <a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-cross-account-event-delivery.html">Sending
            and Receiving Events Between Amazon Web Services Accounts</a> in the <i>Amazon EventBridge
            User Guide</i>.
            </para>
             
            <para>
            The permission policy on the event bus cannot exceed 10 KB in size.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutPermission service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutPermission service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.OperationDisabledException">
            The operation you are attempting is not available in this region.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.PolicyLengthExceededException">
            The event bus policy is too long. For more information, see the limits.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/PutPermission">REST API Reference for PutPermission Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.PutRule(Amazon.EventBridge.Model.PutRuleRequest)">
            <summary>
            Creates or updates the specified rule. Rules are enabled by default, or based on value
            of the state. You can disable a rule using <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_DisableRule.html">DisableRule</a>.
            
             
            <para>
            A single rule watches for events from a single event bus. Events generated by Amazon
            Web Services services go to your account's default event bus. Events generated by
            SaaS partner services or applications go to the matching partner event bus. If you
            have custom applications or services, you can specify whether their events go to your
            default event bus or a custom event bus that you have created. For more information,
            see <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_CreateEventBus.html">CreateEventBus</a>.
            </para>
             
            <para>
            If you are updating an existing rule, the rule is replaced with what you specify in
            this <code>PutRule</code> command. If you omit arguments in <code>PutRule</code>,
            the old values for those arguments are not kept. Instead, they are replaced with null
            values.
            </para>
             
            <para>
            When you create or update a rule, incoming events might not immediately start matching
            to new or updated rules. Allow a short period of time for changes to take effect.
            </para>
             
            <para>
            A rule must contain at least an EventPattern or ScheduleExpression. Rules with EventPatterns
            are triggered when a matching event is observed. Rules with ScheduleExpressions self-trigger
            based on the given schedule. A rule can have both an EventPattern and a ScheduleExpression,
            in which case the rule triggers on matching events as well as on a schedule.
            </para>
             
            <para>
            When you initially create a rule, you can optionally assign one or more tags to the
            rule. Tags can help you organize and categorize your resources. You can also use them
            to scope user permissions, by granting a user permission to access or change only
            rules with certain tag values. To use the <code>PutRule</code> operation and assign
            tags, you must have both the <code>events:PutRule</code> and <code>events:TagResource</code>
            permissions.
            </para>
             
            <para>
            If you are updating an existing rule, any tags you specify in the <code>PutRule</code>
            operation are ignored. To update the tags of an existing rule, use <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_TagResource.html">TagResource</a>
            and <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_UntagResource.html">UntagResource</a>.
            </para>
             
            <para>
            Most services in Amazon Web Services treat : or / as the same character in Amazon
            Resource Names (ARNs). However, EventBridge uses an exact match in event patterns
            and rules. Be sure to use the correct ARN characters when creating event patterns
            so that they match the ARN syntax in the event you want to match.
            </para>
             
            <para>
            In EventBridge, it is possible to create rules that lead to infinite loops, where
            a rule is fired repeatedly. For example, a rule might detect that ACLs have changed
            on an S3 bucket, and trigger software to change them to the desired state. If the
            rule is not written carefully, the subsequent change to the ACLs fires the rule again,
            creating an infinite loop.
            </para>
             
            <para>
            To prevent this, write the rules so that the triggered actions do not re-fire the
            same rule. For example, your rule could fire only if ACLs are found to be in a bad
            state, instead of after any change. 
            </para>
             
            <para>
            An infinite loop can quickly cause higher than expected charges. We recommend that
            you use budgeting, which alerts you when charges exceed your specified limit. For
            more information, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/budgets-managing-costs.html">Managing
            Your Costs with Budgets</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutRule service method.</param>
            
            <returns>The response from the PutRule service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InvalidEventPatternException">
            The event pattern is not valid.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.LimitExceededException">
            The request failed because it attempted to create resource beyond the allowed service
            quota.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ManagedRuleException">
            This rule was created by an Amazon Web Services service on behalf of your account.
            It is managed by that service. If you see this error in response to <code>DeleteRule</code>
            or <code>RemoveTargets</code>, you can use the <code>Force</code> parameter in those
            calls to delete the rule or remove targets from the rule. You cannot modify these
            managed rules by using <code>DisableRule</code>, <code>EnableRule</code>, <code>PutTargets</code>,
            <code>PutRule</code>, <code>TagResource</code>, or <code>UntagResource</code>.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/PutRule">REST API Reference for PutRule Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.PutRuleAsync(Amazon.EventBridge.Model.PutRuleRequest,System.Threading.CancellationToken)">
            <summary>
            Creates or updates the specified rule. Rules are enabled by default, or based on value
            of the state. You can disable a rule using <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_DisableRule.html">DisableRule</a>.
            
             
            <para>
            A single rule watches for events from a single event bus. Events generated by Amazon
            Web Services services go to your account's default event bus. Events generated by
            SaaS partner services or applications go to the matching partner event bus. If you
            have custom applications or services, you can specify whether their events go to your
            default event bus or a custom event bus that you have created. For more information,
            see <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_CreateEventBus.html">CreateEventBus</a>.
            </para>
             
            <para>
            If you are updating an existing rule, the rule is replaced with what you specify in
            this <code>PutRule</code> command. If you omit arguments in <code>PutRule</code>,
            the old values for those arguments are not kept. Instead, they are replaced with null
            values.
            </para>
             
            <para>
            When you create or update a rule, incoming events might not immediately start matching
            to new or updated rules. Allow a short period of time for changes to take effect.
            </para>
             
            <para>
            A rule must contain at least an EventPattern or ScheduleExpression. Rules with EventPatterns
            are triggered when a matching event is observed. Rules with ScheduleExpressions self-trigger
            based on the given schedule. A rule can have both an EventPattern and a ScheduleExpression,
            in which case the rule triggers on matching events as well as on a schedule.
            </para>
             
            <para>
            When you initially create a rule, you can optionally assign one or more tags to the
            rule. Tags can help you organize and categorize your resources. You can also use them
            to scope user permissions, by granting a user permission to access or change only
            rules with certain tag values. To use the <code>PutRule</code> operation and assign
            tags, you must have both the <code>events:PutRule</code> and <code>events:TagResource</code>
            permissions.
            </para>
             
            <para>
            If you are updating an existing rule, any tags you specify in the <code>PutRule</code>
            operation are ignored. To update the tags of an existing rule, use <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_TagResource.html">TagResource</a>
            and <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_UntagResource.html">UntagResource</a>.
            </para>
             
            <para>
            Most services in Amazon Web Services treat : or / as the same character in Amazon
            Resource Names (ARNs). However, EventBridge uses an exact match in event patterns
            and rules. Be sure to use the correct ARN characters when creating event patterns
            so that they match the ARN syntax in the event you want to match.
            </para>
             
            <para>
            In EventBridge, it is possible to create rules that lead to infinite loops, where
            a rule is fired repeatedly. For example, a rule might detect that ACLs have changed
            on an S3 bucket, and trigger software to change them to the desired state. If the
            rule is not written carefully, the subsequent change to the ACLs fires the rule again,
            creating an infinite loop.
            </para>
             
            <para>
            To prevent this, write the rules so that the triggered actions do not re-fire the
            same rule. For example, your rule could fire only if ACLs are found to be in a bad
            state, instead of after any change. 
            </para>
             
            <para>
            An infinite loop can quickly cause higher than expected charges. We recommend that
            you use budgeting, which alerts you when charges exceed your specified limit. For
            more information, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/budgets-managing-costs.html">Managing
            Your Costs with Budgets</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutRule service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutRule service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InvalidEventPatternException">
            The event pattern is not valid.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.LimitExceededException">
            The request failed because it attempted to create resource beyond the allowed service
            quota.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ManagedRuleException">
            This rule was created by an Amazon Web Services service on behalf of your account.
            It is managed by that service. If you see this error in response to <code>DeleteRule</code>
            or <code>RemoveTargets</code>, you can use the <code>Force</code> parameter in those
            calls to delete the rule or remove targets from the rule. You cannot modify these
            managed rules by using <code>DisableRule</code>, <code>EnableRule</code>, <code>PutTargets</code>,
            <code>PutRule</code>, <code>TagResource</code>, or <code>UntagResource</code>.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/PutRule">REST API Reference for PutRule Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.PutTargets(Amazon.EventBridge.Model.PutTargetsRequest)">
            <summary>
            Adds the specified targets to the specified rule, or updates the targets if they are
            already associated with the rule.
            
             
            <para>
            Targets are the resources that are invoked when a rule is triggered.
            </para>
             
            <para>
            You can configure the following as targets for Events:
            </para>
             <ul> <li> 
            <para>
             <a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-api-destinations.html">API
            destination</a> 
            </para>
             </li> <li> 
            <para>
            Amazon API Gateway REST API endpoints
            </para>
             </li> <li> 
            <para>
            API Gateway
            </para>
             </li> <li> 
            <para>
            Batch job queue
            </para>
             </li> <li> 
            <para>
            CloudWatch Logs group
            </para>
             </li> <li> 
            <para>
            CodeBuild project
            </para>
             </li> <li> 
            <para>
            CodePipeline
            </para>
             </li> <li> 
            <para>
            Amazon EC2 <code>CreateSnapshot</code> API call
            </para>
             </li> <li> 
            <para>
            Amazon EC2 <code>RebootInstances</code> API call
            </para>
             </li> <li> 
            <para>
            Amazon EC2 <code>StopInstances</code> API call
            </para>
             </li> <li> 
            <para>
            Amazon EC2 <code>TerminateInstances</code> API call
            </para>
             </li> <li> 
            <para>
            Amazon ECS tasks
            </para>
             </li> <li> 
            <para>
            Event bus in a different Amazon Web Services account or Region.
            </para>
             
            <para>
            You can use an event bus in the US East (N. Virginia) us-east-1, US West (Oregon)
            us-west-2, or Europe (Ireland) eu-west-1 Regions as a target for a rule.
            </para>
             </li> <li> 
            <para>
            Firehose delivery stream (Kinesis Data Firehose)
            </para>
             </li> <li> 
            <para>
            Inspector assessment template (Amazon Inspector)
            </para>
             </li> <li> 
            <para>
            Kinesis stream (Kinesis Data Stream)
            </para>
             </li> <li> 
            <para>
            Lambda function
            </para>
             </li> <li> 
            <para>
            Redshift clusters (Data API statement execution)
            </para>
             </li> <li> 
            <para>
            Amazon SNS topic
            </para>
             </li> <li> 
            <para>
            Amazon SQS queues (includes FIFO queues
            </para>
             </li> <li> 
            <para>
            SSM Automation
            </para>
             </li> <li> 
            <para>
            SSM OpsItem
            </para>
             </li> <li> 
            <para>
            SSM Run Command
            </para>
             </li> <li> 
            <para>
            Step Functions state machines
            </para>
             </li> </ul> 
            <para>
            Creating rules with built-in targets is supported only in the Amazon Web Services
            Management Console. The built-in targets are <code>EC2 CreateSnapshot API call</code>,
            <code>EC2 RebootInstances API call</code>, <code>EC2 StopInstances API call</code>,
            and <code>EC2 TerminateInstances API call</code>. 
            </para>
             
            <para>
            For some target types, <code>PutTargets</code> provides target-specific parameters.
            If the target is a Kinesis data stream, you can optionally specify which shard the
            event goes to by using the <code>KinesisParameters</code> argument. To invoke a command
            on multiple EC2 instances with one rule, you can use the <code>RunCommandParameters</code>
            field.
            </para>
             
            <para>
            To be able to make API calls against the resources that you own, Amazon EventBridge
            needs the appropriate permissions. For Lambda and Amazon SNS resources, EventBridge
            relies on resource-based policies. For EC2 instances, Kinesis Data Streams, Step Functions
            state machines and API Gateway REST APIs, EventBridge relies on IAM roles that you
            specify in the <code>RoleARN</code> argument in <code>PutTargets</code>. For more
            information, see <a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/auth-and-access-control-eventbridge.html">Authentication
            and Access Control</a> in the <i>Amazon EventBridge User Guide</i>.
            </para>
             
            <para>
            If another Amazon Web Services account is in the same region and has granted you permission
            (using <code>PutPermission</code>), you can send events to that account. Set that
            account's event bus as a target of the rules in your account. To send the matched
            events to the other account, specify that account's event bus as the <code>Arn</code>
            value when you run <code>PutTargets</code>. If your account sends events to another
            account, your account is charged for each sent event. Each event sent to another account
            is charged as a custom event. The account receiving the event is not charged. For
            more information, see <a href="http://aws.amazon.com/eventbridge/pricing/">Amazon
            EventBridge Pricing</a>.
            </para>
             <note> 
            <para>
             <code>Input</code>, <code>InputPath</code>, and <code>InputTransformer</code> are
            not available with <code>PutTarget</code> if the target is an event bus of a different
            Amazon Web Services account.
            </para>
             </note> 
            <para>
            If you are setting the event bus of another account as the target, and that account
            granted permission to your account through an organization instead of directly by
            the account ID, then you must specify a <code>RoleArn</code> with proper permissions
            in the <code>Target</code> structure. For more information, see <a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-cross-account-event-delivery.html">Sending
            and Receiving Events Between Amazon Web Services Accounts</a> in the <i>Amazon EventBridge
            User Guide</i>.
            </para>
             
            <para>
            For more information about enabling cross-account events, see <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_PutPermission.html">PutPermission</a>.
            </para>
             
            <para>
             <b>Input</b>, <b>InputPath</b>, and <b>InputTransformer</b> are mutually exclusive
            and optional parameters of a target. When a rule is triggered due to a matched event:
            </para>
             <ul> <li> 
            <para>
            If none of the following arguments are specified for a target, then the entire event
            is passed to the target in JSON format (unless the target is Amazon EC2 Run Command
            or Amazon ECS task, in which case nothing from the event is passed to the target).
            </para>
             </li> <li> 
            <para>
            If <b>Input</b> is specified in the form of valid JSON, then the matched event is
            overridden with this constant.
            </para>
             </li> <li> 
            <para>
            If <b>InputPath</b> is specified in the form of JSONPath (for example, <code>$.detail</code>),
            then only the part of the event specified in the path is passed to the target (for
            example, only the detail part of the event is passed).
            </para>
             </li> <li> 
            <para>
            If <b>InputTransformer</b> is specified, then one or more specified JSONPaths are
            extracted from the event and used as values in a template that you specify as the
            input to the target.
            </para>
             </li> </ul> 
            <para>
            When you specify <code>InputPath</code> or <code>InputTransformer</code>, you must
            use JSON dot notation, not bracket notation.
            </para>
             
            <para>
            When you add targets to a rule and the associated rule triggers soon after, new or
            updated targets might not be immediately invoked. Allow a short period of time for
            changes to take effect.
            </para>
             
            <para>
            This action can partially fail if too many requests are made at the same time. If
            that happens, <code>FailedEntryCount</code> is non-zero in the response and each entry
            in <code>FailedEntries</code> provides the ID of the failed target and the error code.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutTargets service method.</param>
            
            <returns>The response from the PutTargets service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.LimitExceededException">
            The request failed because it attempted to create resource beyond the allowed service
            quota.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ManagedRuleException">
            This rule was created by an Amazon Web Services service on behalf of your account.
            It is managed by that service. If you see this error in response to <code>DeleteRule</code>
            or <code>RemoveTargets</code>, you can use the <code>Force</code> parameter in those
            calls to delete the rule or remove targets from the rule. You cannot modify these
            managed rules by using <code>DisableRule</code>, <code>EnableRule</code>, <code>PutTargets</code>,
            <code>PutRule</code>, <code>TagResource</code>, or <code>UntagResource</code>.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/PutTargets">REST API Reference for PutTargets Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.PutTargetsAsync(Amazon.EventBridge.Model.PutTargetsRequest,System.Threading.CancellationToken)">
            <summary>
            Adds the specified targets to the specified rule, or updates the targets if they are
            already associated with the rule.
            
             
            <para>
            Targets are the resources that are invoked when a rule is triggered.
            </para>
             
            <para>
            You can configure the following as targets for Events:
            </para>
             <ul> <li> 
            <para>
             <a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-api-destinations.html">API
            destination</a> 
            </para>
             </li> <li> 
            <para>
            Amazon API Gateway REST API endpoints
            </para>
             </li> <li> 
            <para>
            API Gateway
            </para>
             </li> <li> 
            <para>
            Batch job queue
            </para>
             </li> <li> 
            <para>
            CloudWatch Logs group
            </para>
             </li> <li> 
            <para>
            CodeBuild project
            </para>
             </li> <li> 
            <para>
            CodePipeline
            </para>
             </li> <li> 
            <para>
            Amazon EC2 <code>CreateSnapshot</code> API call
            </para>
             </li> <li> 
            <para>
            Amazon EC2 <code>RebootInstances</code> API call
            </para>
             </li> <li> 
            <para>
            Amazon EC2 <code>StopInstances</code> API call
            </para>
             </li> <li> 
            <para>
            Amazon EC2 <code>TerminateInstances</code> API call
            </para>
             </li> <li> 
            <para>
            Amazon ECS tasks
            </para>
             </li> <li> 
            <para>
            Event bus in a different Amazon Web Services account or Region.
            </para>
             
            <para>
            You can use an event bus in the US East (N. Virginia) us-east-1, US West (Oregon)
            us-west-2, or Europe (Ireland) eu-west-1 Regions as a target for a rule.
            </para>
             </li> <li> 
            <para>
            Firehose delivery stream (Kinesis Data Firehose)
            </para>
             </li> <li> 
            <para>
            Inspector assessment template (Amazon Inspector)
            </para>
             </li> <li> 
            <para>
            Kinesis stream (Kinesis Data Stream)
            </para>
             </li> <li> 
            <para>
            Lambda function
            </para>
             </li> <li> 
            <para>
            Redshift clusters (Data API statement execution)
            </para>
             </li> <li> 
            <para>
            Amazon SNS topic
            </para>
             </li> <li> 
            <para>
            Amazon SQS queues (includes FIFO queues
            </para>
             </li> <li> 
            <para>
            SSM Automation
            </para>
             </li> <li> 
            <para>
            SSM OpsItem
            </para>
             </li> <li> 
            <para>
            SSM Run Command
            </para>
             </li> <li> 
            <para>
            Step Functions state machines
            </para>
             </li> </ul> 
            <para>
            Creating rules with built-in targets is supported only in the Amazon Web Services
            Management Console. The built-in targets are <code>EC2 CreateSnapshot API call</code>,
            <code>EC2 RebootInstances API call</code>, <code>EC2 StopInstances API call</code>,
            and <code>EC2 TerminateInstances API call</code>. 
            </para>
             
            <para>
            For some target types, <code>PutTargets</code> provides target-specific parameters.
            If the target is a Kinesis data stream, you can optionally specify which shard the
            event goes to by using the <code>KinesisParameters</code> argument. To invoke a command
            on multiple EC2 instances with one rule, you can use the <code>RunCommandParameters</code>
            field.
            </para>
             
            <para>
            To be able to make API calls against the resources that you own, Amazon EventBridge
            needs the appropriate permissions. For Lambda and Amazon SNS resources, EventBridge
            relies on resource-based policies. For EC2 instances, Kinesis Data Streams, Step Functions
            state machines and API Gateway REST APIs, EventBridge relies on IAM roles that you
            specify in the <code>RoleARN</code> argument in <code>PutTargets</code>. For more
            information, see <a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/auth-and-access-control-eventbridge.html">Authentication
            and Access Control</a> in the <i>Amazon EventBridge User Guide</i>.
            </para>
             
            <para>
            If another Amazon Web Services account is in the same region and has granted you permission
            (using <code>PutPermission</code>), you can send events to that account. Set that
            account's event bus as a target of the rules in your account. To send the matched
            events to the other account, specify that account's event bus as the <code>Arn</code>
            value when you run <code>PutTargets</code>. If your account sends events to another
            account, your account is charged for each sent event. Each event sent to another account
            is charged as a custom event. The account receiving the event is not charged. For
            more information, see <a href="http://aws.amazon.com/eventbridge/pricing/">Amazon
            EventBridge Pricing</a>.
            </para>
             <note> 
            <para>
             <code>Input</code>, <code>InputPath</code>, and <code>InputTransformer</code> are
            not available with <code>PutTarget</code> if the target is an event bus of a different
            Amazon Web Services account.
            </para>
             </note> 
            <para>
            If you are setting the event bus of another account as the target, and that account
            granted permission to your account through an organization instead of directly by
            the account ID, then you must specify a <code>RoleArn</code> with proper permissions
            in the <code>Target</code> structure. For more information, see <a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-cross-account-event-delivery.html">Sending
            and Receiving Events Between Amazon Web Services Accounts</a> in the <i>Amazon EventBridge
            User Guide</i>.
            </para>
             
            <para>
            For more information about enabling cross-account events, see <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_PutPermission.html">PutPermission</a>.
            </para>
             
            <para>
             <b>Input</b>, <b>InputPath</b>, and <b>InputTransformer</b> are mutually exclusive
            and optional parameters of a target. When a rule is triggered due to a matched event:
            </para>
             <ul> <li> 
            <para>
            If none of the following arguments are specified for a target, then the entire event
            is passed to the target in JSON format (unless the target is Amazon EC2 Run Command
            or Amazon ECS task, in which case nothing from the event is passed to the target).
            </para>
             </li> <li> 
            <para>
            If <b>Input</b> is specified in the form of valid JSON, then the matched event is
            overridden with this constant.
            </para>
             </li> <li> 
            <para>
            If <b>InputPath</b> is specified in the form of JSONPath (for example, <code>$.detail</code>),
            then only the part of the event specified in the path is passed to the target (for
            example, only the detail part of the event is passed).
            </para>
             </li> <li> 
            <para>
            If <b>InputTransformer</b> is specified, then one or more specified JSONPaths are
            extracted from the event and used as values in a template that you specify as the
            input to the target.
            </para>
             </li> </ul> 
            <para>
            When you specify <code>InputPath</code> or <code>InputTransformer</code>, you must
            use JSON dot notation, not bracket notation.
            </para>
             
            <para>
            When you add targets to a rule and the associated rule triggers soon after, new or
            updated targets might not be immediately invoked. Allow a short period of time for
            changes to take effect.
            </para>
             
            <para>
            This action can partially fail if too many requests are made at the same time. If
            that happens, <code>FailedEntryCount</code> is non-zero in the response and each entry
            in <code>FailedEntries</code> provides the ID of the failed target and the error code.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutTargets service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutTargets service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.LimitExceededException">
            The request failed because it attempted to create resource beyond the allowed service
            quota.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ManagedRuleException">
            This rule was created by an Amazon Web Services service on behalf of your account.
            It is managed by that service. If you see this error in response to <code>DeleteRule</code>
            or <code>RemoveTargets</code>, you can use the <code>Force</code> parameter in those
            calls to delete the rule or remove targets from the rule. You cannot modify these
            managed rules by using <code>DisableRule</code>, <code>EnableRule</code>, <code>PutTargets</code>,
            <code>PutRule</code>, <code>TagResource</code>, or <code>UntagResource</code>.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/PutTargets">REST API Reference for PutTargets Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.RemovePermission(Amazon.EventBridge.Model.RemovePermissionRequest)">
            <summary>
            Revokes the permission of another Amazon Web Services account to be able to put events
            to the specified event bus. Specify the account to revoke by the <code>StatementId</code>
            value that you associated with the account when you granted it permission with <code>PutPermission</code>.
            You can find the <code>StatementId</code> by using <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_DescribeEventBus.html">DescribeEventBus</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RemovePermission service method.</param>
            
            <returns>The response from the RemovePermission service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.OperationDisabledException">
            The operation you are attempting is not available in this region.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/RemovePermission">REST API Reference for RemovePermission Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.RemovePermissionAsync(Amazon.EventBridge.Model.RemovePermissionRequest,System.Threading.CancellationToken)">
            <summary>
            Revokes the permission of another Amazon Web Services account to be able to put events
            to the specified event bus. Specify the account to revoke by the <code>StatementId</code>
            value that you associated with the account when you granted it permission with <code>PutPermission</code>.
            You can find the <code>StatementId</code> by using <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_DescribeEventBus.html">DescribeEventBus</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RemovePermission service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RemovePermission service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.OperationDisabledException">
            The operation you are attempting is not available in this region.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/RemovePermission">REST API Reference for RemovePermission Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.RemoveTargets(Amazon.EventBridge.Model.RemoveTargetsRequest)">
            <summary>
            Removes the specified targets from the specified rule. When the rule is triggered,
            those targets are no longer be invoked.
            
             
            <para>
            When you remove a target, when the associated rule triggers, removed targets might
            continue to be invoked. Allow a short period of time for changes to take effect.
            </para>
             
            <para>
            This action can partially fail if too many requests are made at the same time. If
            that happens, <code>FailedEntryCount</code> is non-zero in the response and each entry
            in <code>FailedEntries</code> provides the ID of the failed target and the error code.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RemoveTargets service method.</param>
            
            <returns>The response from the RemoveTargets service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ManagedRuleException">
            This rule was created by an Amazon Web Services service on behalf of your account.
            It is managed by that service. If you see this error in response to <code>DeleteRule</code>
            or <code>RemoveTargets</code>, you can use the <code>Force</code> parameter in those
            calls to delete the rule or remove targets from the rule. You cannot modify these
            managed rules by using <code>DisableRule</code>, <code>EnableRule</code>, <code>PutTargets</code>,
            <code>PutRule</code>, <code>TagResource</code>, or <code>UntagResource</code>.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/RemoveTargets">REST API Reference for RemoveTargets Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.RemoveTargetsAsync(Amazon.EventBridge.Model.RemoveTargetsRequest,System.Threading.CancellationToken)">
            <summary>
            Removes the specified targets from the specified rule. When the rule is triggered,
            those targets are no longer be invoked.
            
             
            <para>
            When you remove a target, when the associated rule triggers, removed targets might
            continue to be invoked. Allow a short period of time for changes to take effect.
            </para>
             
            <para>
            This action can partially fail if too many requests are made at the same time. If
            that happens, <code>FailedEntryCount</code> is non-zero in the response and each entry
            in <code>FailedEntries</code> provides the ID of the failed target and the error code.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RemoveTargets service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RemoveTargets service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ManagedRuleException">
            This rule was created by an Amazon Web Services service on behalf of your account.
            It is managed by that service. If you see this error in response to <code>DeleteRule</code>
            or <code>RemoveTargets</code>, you can use the <code>Force</code> parameter in those
            calls to delete the rule or remove targets from the rule. You cannot modify these
            managed rules by using <code>DisableRule</code>, <code>EnableRule</code>, <code>PutTargets</code>,
            <code>PutRule</code>, <code>TagResource</code>, or <code>UntagResource</code>.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/RemoveTargets">REST API Reference for RemoveTargets Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.StartReplay(Amazon.EventBridge.Model.StartReplayRequest)">
            <summary>
            Starts the specified replay. Events are not necessarily replayed in the exact same
            order that they were added to the archive. A replay processes events to replay based
            on the time in the event, and replays them using 1 minute intervals. If you specify
            an <code>EventStartTime</code> and an <code>EventEndTime</code> that covers a 20 minute
            time range, the events are replayed from the first minute of that 20 minute range
            first. Then the events from the second minute are replayed. You can use <code>DescribeReplay</code>
            to determine the progress of a replay. The value returned for <code>EventLastReplayedTime</code>
            indicates the time within the specified time range associated with the last event
            replayed.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartReplay service method.</param>
            
            <returns>The response from the StartReplay service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InvalidEventPatternException">
            The event pattern is not valid.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.LimitExceededException">
            The request failed because it attempted to create resource beyond the allowed service
            quota.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceAlreadyExistsException">
            The resource you are trying to create already exists.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/StartReplay">REST API Reference for StartReplay Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.StartReplayAsync(Amazon.EventBridge.Model.StartReplayRequest,System.Threading.CancellationToken)">
            <summary>
            Starts the specified replay. Events are not necessarily replayed in the exact same
            order that they were added to the archive. A replay processes events to replay based
            on the time in the event, and replays them using 1 minute intervals. If you specify
            an <code>EventStartTime</code> and an <code>EventEndTime</code> that covers a 20 minute
            time range, the events are replayed from the first minute of that 20 minute range
            first. Then the events from the second minute are replayed. You can use <code>DescribeReplay</code>
            to determine the progress of a replay. The value returned for <code>EventLastReplayedTime</code>
            indicates the time within the specified time range associated with the last event
            replayed.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartReplay service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartReplay service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InvalidEventPatternException">
            The event pattern is not valid.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.LimitExceededException">
            The request failed because it attempted to create resource beyond the allowed service
            quota.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceAlreadyExistsException">
            The resource you are trying to create already exists.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/StartReplay">REST API Reference for StartReplay Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.TagResource(Amazon.EventBridge.Model.TagResourceRequest)">
            <summary>
            Assigns one or more tags (key-value pairs) to the specified EventBridge resource.
            Tags can help you organize and categorize your resources. You can also use them to
            scope user permissions by granting a user permission to access or change only resources
            with certain tag values. In EventBridge, rules and event buses can be tagged.
            
             
            <para>
            Tags don't have any semantic meaning to Amazon Web Services and are interpreted strictly
            as strings of characters.
            </para>
             
            <para>
            You can use the <code>TagResource</code> action with a resource that already has tags.
            If you specify a new tag key, this tag is appended to the list of tags associated
            with the resource. If you specify a tag key that is already associated with the resource,
            the new tag value that you specify replaces the previous value for that tag.
            </para>
             
            <para>
            You can associate as many as 50 tags with a resource.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            
            <returns>The response from the TagResource service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ManagedRuleException">
            This rule was created by an Amazon Web Services service on behalf of your account.
            It is managed by that service. If you see this error in response to <code>DeleteRule</code>
            or <code>RemoveTargets</code>, you can use the <code>Force</code> parameter in those
            calls to delete the rule or remove targets from the rule. You cannot modify these
            managed rules by using <code>DisableRule</code>, <code>EnableRule</code>, <code>PutTargets</code>,
            <code>PutRule</code>, <code>TagResource</code>, or <code>UntagResource</code>.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.TagResourceAsync(Amazon.EventBridge.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Assigns one or more tags (key-value pairs) to the specified EventBridge resource.
            Tags can help you organize and categorize your resources. You can also use them to
            scope user permissions by granting a user permission to access or change only resources
            with certain tag values. In EventBridge, rules and event buses can be tagged.
            
             
            <para>
            Tags don't have any semantic meaning to Amazon Web Services and are interpreted strictly
            as strings of characters.
            </para>
             
            <para>
            You can use the <code>TagResource</code> action with a resource that already has tags.
            If you specify a new tag key, this tag is appended to the list of tags associated
            with the resource. If you specify a tag key that is already associated with the resource,
            the new tag value that you specify replaces the previous value for that tag.
            </para>
             
            <para>
            You can associate as many as 50 tags with a resource.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ManagedRuleException">
            This rule was created by an Amazon Web Services service on behalf of your account.
            It is managed by that service. If you see this error in response to <code>DeleteRule</code>
            or <code>RemoveTargets</code>, you can use the <code>Force</code> parameter in those
            calls to delete the rule or remove targets from the rule. You cannot modify these
            managed rules by using <code>DisableRule</code>, <code>EnableRule</code>, <code>PutTargets</code>,
            <code>PutRule</code>, <code>TagResource</code>, or <code>UntagResource</code>.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.TestEventPattern(Amazon.EventBridge.Model.TestEventPatternRequest)">
            <summary>
            Tests whether the specified event pattern matches the provided event.
            
             
            <para>
            Most services in Amazon Web Services treat : or / as the same character in Amazon
            Resource Names (ARNs). However, EventBridge uses an exact match in event patterns
            and rules. Be sure to use the correct ARN characters when creating event patterns
            so that they match the ARN syntax in the event you want to match.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the TestEventPattern service method.</param>
            
            <returns>The response from the TestEventPattern service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InvalidEventPatternException">
            The event pattern is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/TestEventPattern">REST API Reference for TestEventPattern Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.TestEventPatternAsync(Amazon.EventBridge.Model.TestEventPatternRequest,System.Threading.CancellationToken)">
            <summary>
            Tests whether the specified event pattern matches the provided event.
            
             
            <para>
            Most services in Amazon Web Services treat : or / as the same character in Amazon
            Resource Names (ARNs). However, EventBridge uses an exact match in event patterns
            and rules. Be sure to use the correct ARN characters when creating event patterns
            so that they match the ARN syntax in the event you want to match.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the TestEventPattern service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TestEventPattern service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InvalidEventPatternException">
            The event pattern is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/TestEventPattern">REST API Reference for TestEventPattern Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.UntagResource(Amazon.EventBridge.Model.UntagResourceRequest)">
            <summary>
            Removes one or more tags from the specified EventBridge resource. In Amazon EventBridge
            (CloudWatch Events), rules and event buses can be tagged.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            
            <returns>The response from the UntagResource service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ManagedRuleException">
            This rule was created by an Amazon Web Services service on behalf of your account.
            It is managed by that service. If you see this error in response to <code>DeleteRule</code>
            or <code>RemoveTargets</code>, you can use the <code>Force</code> parameter in those
            calls to delete the rule or remove targets from the rule. You cannot modify these
            managed rules by using <code>DisableRule</code>, <code>EnableRule</code>, <code>PutTargets</code>,
            <code>PutRule</code>, <code>TagResource</code>, or <code>UntagResource</code>.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.UntagResourceAsync(Amazon.EventBridge.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Removes one or more tags from the specified EventBridge resource. In Amazon EventBridge
            (CloudWatch Events), rules and event buses can be tagged.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ManagedRuleException">
            This rule was created by an Amazon Web Services service on behalf of your account.
            It is managed by that service. If you see this error in response to <code>DeleteRule</code>
            or <code>RemoveTargets</code>, you can use the <code>Force</code> parameter in those
            calls to delete the rule or remove targets from the rule. You cannot modify these
            managed rules by using <code>DisableRule</code>, <code>EnableRule</code>, <code>PutTargets</code>,
            <code>PutRule</code>, <code>TagResource</code>, or <code>UntagResource</code>.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.UpdateApiDestination(Amazon.EventBridge.Model.UpdateApiDestinationRequest)">
            <summary>
            Updates an API destination.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateApiDestination service method.</param>
            
            <returns>The response from the UpdateApiDestination service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.LimitExceededException">
            The request failed because it attempted to create resource beyond the allowed service
            quota.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/UpdateApiDestination">REST API Reference for UpdateApiDestination Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.UpdateApiDestinationAsync(Amazon.EventBridge.Model.UpdateApiDestinationRequest,System.Threading.CancellationToken)">
            <summary>
            Updates an API destination.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateApiDestination service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateApiDestination service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.LimitExceededException">
            The request failed because it attempted to create resource beyond the allowed service
            quota.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/UpdateApiDestination">REST API Reference for UpdateApiDestination Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.UpdateArchive(Amazon.EventBridge.Model.UpdateArchiveRequest)">
            <summary>
            Updates the specified archive.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateArchive service method.</param>
            
            <returns>The response from the UpdateArchive service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InvalidEventPatternException">
            The event pattern is not valid.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.LimitExceededException">
            The request failed because it attempted to create resource beyond the allowed service
            quota.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/UpdateArchive">REST API Reference for UpdateArchive Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.UpdateArchiveAsync(Amazon.EventBridge.Model.UpdateArchiveRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the specified archive.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateArchive service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateArchive service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InvalidEventPatternException">
            The event pattern is not valid.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.LimitExceededException">
            The request failed because it attempted to create resource beyond the allowed service
            quota.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/UpdateArchive">REST API Reference for UpdateArchive Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.UpdateConnection(Amazon.EventBridge.Model.UpdateConnectionRequest)">
            <summary>
            Updates settings for a connection.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateConnection service method.</param>
            
            <returns>The response from the UpdateConnection service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.LimitExceededException">
            The request failed because it attempted to create resource beyond the allowed service
            quota.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/UpdateConnection">REST API Reference for UpdateConnection Operation</seealso>
        </member>
        <member name="M:Amazon.EventBridge.IAmazonEventBridge.UpdateConnectionAsync(Amazon.EventBridge.Model.UpdateConnectionRequest,System.Threading.CancellationToken)">
            <summary>
            Updates settings for a connection.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateConnection service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateConnection service method, as returned by EventBridge.</returns>
            <exception cref="T:Amazon.EventBridge.Model.ConcurrentModificationException">
            There is concurrent modification on a rule, target, archive, or replay.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.LimitExceededException">
            The request failed because it attempted to create resource beyond the allowed service
            quota.
            </exception>
            <exception cref="T:Amazon.EventBridge.Model.ResourceNotFoundException">
            An entity that you specified does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/UpdateConnection">REST API Reference for UpdateConnection Operation</seealso>
        </member>
    </members>
</doc>
