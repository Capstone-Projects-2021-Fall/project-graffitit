<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.LookoutEquipment</name>
    </assembly>
    <members>
        <member name="T:Amazon.LookoutEquipment.AmazonLookoutEquipmentConfig">
            <summary>
            Configuration for accessing Amazon LookoutEquipment service
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.AmazonLookoutEquipmentConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.AmazonLookoutEquipmentConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.AmazonLookoutEquipmentConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.AmazonLookoutEquipmentException">
            <summary>
             Common exception for the LookoutEquipment service.
             </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonLookoutEquipmentException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonLookoutEquipmentException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonLookoutEquipmentException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonLookoutEquipmentException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonLookoutEquipmentException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the AmazonLookoutEquipmentException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.LookoutEquipment.Internal.AmazonLookoutEquipmentMetadata">
            <summary>
            Service metadata for  Amazon LookoutEquipment service
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Internal.AmazonLookoutEquipmentMetadata.ServiceId">
            <summary>
            Gets the value of the Service Id.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Internal.AmazonLookoutEquipmentMetadata.OperationNameMapping">
            <summary>
            Gets the dictionary that gives mapping of renamed operations
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            <summary>
            The request could not be completed because you do not have access to the resource.
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.AccessDeniedException.#ctor(System.String)">
            <summary>
            Constructs a new AccessDeniedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.AccessDeniedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.AccessDeniedException.#ctor(System.Exception)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.AccessDeniedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.AccessDeniedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.AccessDeniedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the AccessDeniedException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.AccessDeniedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.ConflictException">
            <summary>
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ConflictException.#ctor(System.String)">
            <summary>
            Constructs a new ConflictException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ConflictException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ConflictException.#ctor(System.Exception)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ConflictException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ConflictException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ConflictException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ConflictException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ConflictException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.CreateDatasetRequest">
            <summary>
            Container for the parameters to the CreateDataset operation.
            Creates a container for a collection of data being ingested for analysis. The dataset
            contains the metadata describing where the data is and what the data actually looks
            like. In other words, it contains the location of the data source, the data schema,
            and other information. A dataset also contains any tags associated with the ingested
            data.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateDatasetRequest.ClientToken">
            <summary>
            Gets and sets the property ClientToken. 
            <para>
             A unique identifier for the request. If you do not set the client request token,
            Amazon Lookout for Equipment generates one. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateDatasetRequest.DatasetName">
            <summary>
            Gets and sets the property DatasetName. 
            <para>
            The name of the dataset being created. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateDatasetRequest.DatasetSchema">
            <summary>
            Gets and sets the property DatasetSchema. 
            <para>
            A JSON description of the data that is in each time series dataset, including names,
            column names, and data types. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateDatasetRequest.ServerSideKmsKeyId">
            <summary>
            Gets and sets the property ServerSideKmsKeyId. 
            <para>
            Provides the identifier of the KMS key used to encrypt dataset data by Amazon Lookout
            for Equipment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateDatasetRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Any tags associated with the ingested data described in the dataset. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.CreateDatasetResponse">
            <summary>
            This is the response object from the CreateDataset operation.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateDatasetResponse.DatasetArn">
            <summary>
            Gets and sets the property DatasetArn. 
            <para>
             The Amazon Resource Name (ARN) of the dataset being created. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateDatasetResponse.DatasetName">
            <summary>
            Gets and sets the property DatasetName. 
            <para>
            The name of the dataset being created. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateDatasetResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Indicates the status of the <code>CreateDataset</code> operation. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.CreateInferenceSchedulerRequest">
            <summary>
            Container for the parameters to the CreateInferenceScheduler operation.
            Creates a scheduled inference. Scheduling an inference is setting up a continuous
            real-time inference plan to analyze new measurement data. When setting up the schedule,
            you provide an S3 bucket location for the input data, assign it a delimiter between
            separate entries in the data, set an offset delay if desired, and set the frequency
            of inferencing. You must also provide an S3 bucket location for the output data.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateInferenceSchedulerRequest.ClientToken">
            <summary>
            Gets and sets the property ClientToken. 
            <para>
             A unique identifier for the request. If you do not set the client request token,
            Amazon Lookout for Equipment generates one. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateInferenceSchedulerRequest.DataDelayOffsetInMinutes">
            <summary>
            Gets and sets the property DataDelayOffsetInMinutes. 
            <para>
            A period of time (in minutes) by which inference on the data is delayed after the
            data starts. For instance, if you select an offset delay time of five minutes, inference
            will not begin on the data until the first data measurement after the five minute
            mark. For example, if five minutes is selected, the inference scheduler will wake
            up at the configured frequency with the additional five minute delay time to check
            the customer S3 bucket. The customer can upload data at the same frequency and they
            don't need to stop and restart the scheduler when uploading new data. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateInferenceSchedulerRequest.DataInputConfiguration">
            <summary>
            Gets and sets the property DataInputConfiguration. 
            <para>
            Specifies configuration information for the input data for the inference scheduler,
            including delimiter, format, and dataset location. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateInferenceSchedulerRequest.DataOutputConfiguration">
            <summary>
            Gets and sets the property DataOutputConfiguration. 
            <para>
            Specifies configuration information for the output results for the inference scheduler,
            including the S3 location for the output. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateInferenceSchedulerRequest.DataUploadFrequency">
            <summary>
            Gets and sets the property DataUploadFrequency. 
            <para>
             How often data is uploaded to the source S3 bucket for the input data. The value
            chosen is the length of time between data uploads. For instance, if you select 5 minutes,
            Amazon Lookout for Equipment will upload the real-time data to the source bucket once
            every 5 minutes. This frequency also determines how often Amazon Lookout for Equipment
            starts a scheduled inference on your data. In this example, it starts once every 5
            minutes. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateInferenceSchedulerRequest.InferenceSchedulerName">
            <summary>
            Gets and sets the property InferenceSchedulerName. 
            <para>
            The name of the inference scheduler being created. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateInferenceSchedulerRequest.ModelName">
            <summary>
            Gets and sets the property ModelName. 
            <para>
            The name of the previously trained ML model being used to create the inference scheduler.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateInferenceSchedulerRequest.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The Amazon Resource Name (ARN) of a role with permission to access the data source
            being used for the inference. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateInferenceSchedulerRequest.ServerSideKmsKeyId">
            <summary>
            Gets and sets the property ServerSideKmsKeyId. 
            <para>
            Provides the identifier of the KMS key used to encrypt inference scheduler data by
            Amazon Lookout for Equipment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateInferenceSchedulerRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Any tags associated with the inference scheduler. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.CreateInferenceSchedulerResponse">
            <summary>
            This is the response object from the CreateInferenceScheduler operation.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateInferenceSchedulerResponse.InferenceSchedulerArn">
            <summary>
            Gets and sets the property InferenceSchedulerArn. 
            <para>
            The Amazon Resource Name (ARN) of the inference scheduler being created. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateInferenceSchedulerResponse.InferenceSchedulerName">
            <summary>
            Gets and sets the property InferenceSchedulerName. 
            <para>
            The name of inference scheduler being created. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateInferenceSchedulerResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Indicates the status of the <code>CreateInferenceScheduler</code> operation. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.CreateModelRequest">
            <summary>
            Container for the parameters to the CreateModel operation.
            Creates an ML model for data inference. 
            
             
            <para>
            A machine-learning (ML) model is a mathematical model that finds patterns in your
            data. In Amazon Lookout for Equipment, the model learns the patterns of normal behavior
            and detects abnormal behavior that could be potential equipment failure (or maintenance
            events). The models are made by analyzing normal data and abnormalities in machine
            behavior that have already occurred.
            </para>
             
            <para>
            Your model is trained using a portion of the data from your dataset and uses that
            data to learn patterns of normal behavior and abnormal patterns that lead to equipment
            failure. Another portion of the data is used to evaluate the model's accuracy. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateModelRequest.ClientToken">
            <summary>
            Gets and sets the property ClientToken. 
            <para>
            A unique identifier for the request. If you do not set the client request token, Amazon
            Lookout for Equipment generates one. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateModelRequest.DataPreProcessingConfiguration">
            <summary>
            Gets and sets the property DataPreProcessingConfiguration. 
            <para>
            The configuration is the <code>TargetSamplingRate</code>, which is the sampling rate
            of the data after post processing by Amazon Lookout for Equipment. For example, if
            you provide data that has been collected at a 1 second level and you want the system
            to resample the data at a 1 minute rate before training, the <code>TargetSamplingRate</code>
            is 1 minute.
            </para>
             
            <para>
            When providing a value for the <code>TargetSamplingRate</code>, you must attach the
            prefix "PT" to the rate you want. The value for a 1 second rate is therefore <i>PT1S</i>,
            the value for a 15 minute rate is <i>PT15M</i>, and the value for a 1 hour rate is
            <i>PT1H</i> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateModelRequest.DatasetName">
            <summary>
            Gets and sets the property DatasetName. 
            <para>
            The name of the dataset for the ML model being created. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateModelRequest.DatasetSchema">
            <summary>
            Gets and sets the property DatasetSchema. 
            <para>
            The data schema for the ML model being created. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateModelRequest.EvaluationDataEndTime">
            <summary>
            Gets and sets the property EvaluationDataEndTime. 
            <para>
             Indicates the time reference in the dataset that should be used to end the subset
            of evaluation data for the ML model. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateModelRequest.EvaluationDataStartTime">
            <summary>
            Gets and sets the property EvaluationDataStartTime. 
            <para>
            Indicates the time reference in the dataset that should be used to begin the subset
            of evaluation data for the ML model. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateModelRequest.LabelsInputConfiguration">
            <summary>
            Gets and sets the property LabelsInputConfiguration. 
            <para>
            The input configuration for the labels being used for the ML model that's being created.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateModelRequest.ModelName">
            <summary>
            Gets and sets the property ModelName. 
            <para>
            The name for the ML model to be created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateModelRequest.OffCondition">
            <summary>
            Gets and sets the property OffCondition. 
            <para>
            Indicates that the asset associated with this sensor has been shut off. As long as
            this condition is met, Lookout for Equipment will not use data from this asset for
            training, evaluation, or inference.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateModelRequest.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
             The Amazon Resource Name (ARN) of a role with permission to access the data source
            being used to create the ML model. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateModelRequest.ServerSideKmsKeyId">
            <summary>
            Gets and sets the property ServerSideKmsKeyId. 
            <para>
            Provides the identifier of the KMS key used to encrypt model data by Amazon Lookout
            for Equipment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateModelRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
             Any tags associated with the ML model being created. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateModelRequest.TrainingDataEndTime">
            <summary>
            Gets and sets the property TrainingDataEndTime. 
            <para>
            Indicates the time reference in the dataset that should be used to end the subset
            of training data for the ML model. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateModelRequest.TrainingDataStartTime">
            <summary>
            Gets and sets the property TrainingDataStartTime. 
            <para>
            Indicates the time reference in the dataset that should be used to begin the subset
            of training data for the ML model. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.CreateModelResponse">
            <summary>
            This is the response object from the CreateModel operation.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateModelResponse.ModelArn">
            <summary>
            Gets and sets the property ModelArn. 
            <para>
            The Amazon Resource Name (ARN) of the model being created. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.CreateModelResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Indicates the status of the <code>CreateModel</code> operation. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.DataIngestionJobSummary">
            <summary>
            Provides information about a specified data ingestion job, including dataset information,
            data ingestion configuration, and status.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DataIngestionJobSummary.DatasetArn">
            <summary>
            Gets and sets the property DatasetArn. 
            <para>
            The Amazon Resource Name (ARN) of the dataset used in the data ingestion job. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DataIngestionJobSummary.DatasetName">
            <summary>
            Gets and sets the property DatasetName. 
            <para>
            The name of the dataset used for the data ingestion job. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DataIngestionJobSummary.IngestionInputConfiguration">
            <summary>
            Gets and sets the property IngestionInputConfiguration. 
            <para>
             Specifies information for the input data for the data inference job, including data
            S3 location parameters. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DataIngestionJobSummary.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            Indicates the job ID of the data ingestion job. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DataIngestionJobSummary.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Indicates the status of the data ingestion job. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.DataPreProcessingConfiguration">
            <summary>
            The configuration is the <code>TargetSamplingRate</code>, which is the sampling rate
            of the data after post processing by Amazon Lookout for Equipment. For example, if
            you provide data that has been collected at a 1 second level and you want the system
            to resample the data at a 1 minute rate before training, the <code>TargetSamplingRate</code>
            is 1 minute.
            
             
            <para>
            When providing a value for the <code>TargetSamplingRate</code>, you must attach the
            prefix "PT" to the rate you want. The value for a 1 second rate is therefore <i>PT1S</i>,
            the value for a 15 minute rate is <i>PT15M</i>, and the value for a 1 hour rate is
            <i>PT1H</i> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DataPreProcessingConfiguration.TargetSamplingRate">
            <summary>
            Gets and sets the property TargetSamplingRate. 
            <para>
            The sampling rate of the data after post processing by Amazon Lookout for Equipment.
            For example, if you provide data that has been collected at a 1 second level and you
            want the system to resample the data at a 1 minute rate before training, the <code>TargetSamplingRate</code>
            is 1 minute.
            </para>
             
            <para>
            When providing a value for the <code>TargetSamplingRate</code>, you must attach the
            prefix "PT" to the rate you want. The value for a 1 second rate is therefore <i>PT1S</i>,
            the value for a 15 minute rate is <i>PT15M</i>, and the value for a 1 hour rate is
            <i>PT1H</i> 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.DatasetSchema">
            <summary>
            Provides information about the data schema used with the given dataset.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DatasetSchema.InlineDataSchema">
            <summary>
            Gets and sets the property InlineDataSchema. 
            <para>
             
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.DatasetSummary">
            <summary>
            Contains information about the specific data set, including name, ARN, and status.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DatasetSummary.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The time at which the dataset was created in Amazon Lookout for Equipment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DatasetSummary.DatasetArn">
            <summary>
            Gets and sets the property DatasetArn. 
            <para>
            The Amazon Resource Name (ARN) of the specified dataset. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DatasetSummary.DatasetName">
            <summary>
            Gets and sets the property DatasetName. 
            <para>
            The name of the dataset. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DatasetSummary.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Indicates the status of the dataset. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.DeleteDatasetRequest">
            <summary>
            Container for the parameters to the DeleteDataset operation.
            Deletes a dataset and associated artifacts. The operation will check to see if any
            inference scheduler or data ingestion job is currently using the dataset, and if there
            isn't, the dataset, its metadata, and any associated data stored in S3 will be deleted.
            This does not affect any models that used this dataset for training and evaluation,
            but does prevent it from being used in the future.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DeleteDatasetRequest.DatasetName">
            <summary>
            Gets and sets the property DatasetName. 
            <para>
            The name of the dataset to be deleted. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.DeleteDatasetResponse">
            <summary>
            This is the response object from the DeleteDataset operation.
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.DeleteInferenceSchedulerRequest">
            <summary>
            Container for the parameters to the DeleteInferenceScheduler operation.
            Deletes an inference scheduler that has been set up. Already processed output results
            are not affected.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DeleteInferenceSchedulerRequest.InferenceSchedulerName">
            <summary>
            Gets and sets the property InferenceSchedulerName. 
            <para>
            The name of the inference scheduler to be deleted. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.DeleteInferenceSchedulerResponse">
            <summary>
            This is the response object from the DeleteInferenceScheduler operation.
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.DeleteModelRequest">
            <summary>
            Container for the parameters to the DeleteModel operation.
            Deletes an ML model currently available for Amazon Lookout for Equipment. This will
            prevent it from being used with an inference scheduler, even one that is already set
            up.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DeleteModelRequest.ModelName">
            <summary>
            Gets and sets the property ModelName. 
            <para>
            The name of the ML model to be deleted. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.DeleteModelResponse">
            <summary>
            This is the response object from the DeleteModel operation.
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.DescribeDataIngestionJobRequest">
            <summary>
            Container for the parameters to the DescribeDataIngestionJob operation.
            Provides information on a specific data ingestion job such as creation time, dataset
            ARN, status, and so on.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeDataIngestionJobRequest.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            The job ID of the data ingestion job. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.DescribeDataIngestionJobResponse">
            <summary>
            This is the response object from the DescribeDataIngestionJob operation.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeDataIngestionJobResponse.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The time at which the data ingestion job was created. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeDataIngestionJobResponse.DatasetArn">
            <summary>
            Gets and sets the property DatasetArn. 
            <para>
            The Amazon Resource Name (ARN) of the dataset being used in the data ingestion job.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeDataIngestionJobResponse.FailedReason">
            <summary>
            Gets and sets the property FailedReason. 
            <para>
            Specifies the reason for failure when a data ingestion job has failed. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeDataIngestionJobResponse.IngestionInputConfiguration">
            <summary>
            Gets and sets the property IngestionInputConfiguration. 
            <para>
            Specifies the S3 location configuration for the data input for the data ingestion
            job. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeDataIngestionJobResponse.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            Indicates the job ID of the data ingestion job. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeDataIngestionJobResponse.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The Amazon Resource Name (ARN) of an IAM role with permission to access the data source
            being ingested. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeDataIngestionJobResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Indicates the status of the <code>DataIngestionJob</code> operation. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.DescribeDatasetRequest">
            <summary>
            Container for the parameters to the DescribeDataset operation.
            Provides a JSON description of the data that is in each time series dataset, including
            names, column names, and data types.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeDatasetRequest.DatasetName">
            <summary>
            Gets and sets the property DatasetName. 
            <para>
            The name of the dataset to be described. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.DescribeDatasetResponse">
            <summary>
            This is the response object from the DescribeDataset operation.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeDatasetResponse.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            Specifies the time the dataset was created in Amazon Lookout for Equipment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeDatasetResponse.DatasetArn">
            <summary>
            Gets and sets the property DatasetArn. 
            <para>
            The Amazon Resource Name (ARN) of the dataset being described. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeDatasetResponse.DatasetName">
            <summary>
            Gets and sets the property DatasetName. 
            <para>
            The name of the dataset being described. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeDatasetResponse.IngestionInputConfiguration">
            <summary>
            Gets and sets the property IngestionInputConfiguration. 
            <para>
            Specifies the S3 location configuration for the data input for the data ingestion
            job. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeDatasetResponse.LastUpdatedAt">
            <summary>
            Gets and sets the property LastUpdatedAt. 
            <para>
            Specifies the time the dataset was last updated, if it was. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeDatasetResponse.Schema">
            <summary>
            Gets and sets the property Schema. 
            <para>
            A JSON description of the data that is in each time series dataset, including names,
            column names, and data types. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeDatasetResponse.ServerSideKmsKeyId">
            <summary>
            Gets and sets the property ServerSideKmsKeyId. 
            <para>
            Provides the identifier of the KMS key used to encrypt dataset data by Amazon Lookout
            for Equipment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeDatasetResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Indicates the status of the dataset. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.DescribeInferenceSchedulerRequest">
            <summary>
            Container for the parameters to the DescribeInferenceScheduler operation.
            Specifies information about the inference scheduler being used, including name, model,
            status, and associated metadata
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeInferenceSchedulerRequest.InferenceSchedulerName">
            <summary>
            Gets and sets the property InferenceSchedulerName. 
            <para>
            The name of the inference scheduler being described. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.DescribeInferenceSchedulerResponse">
            <summary>
            This is the response object from the DescribeInferenceScheduler operation.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeInferenceSchedulerResponse.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            Specifies the time at which the inference scheduler was created. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeInferenceSchedulerResponse.DataDelayOffsetInMinutes">
            <summary>
            Gets and sets the property DataDelayOffsetInMinutes. 
            <para>
             A period of time (in minutes) by which inference on the data is delayed after the
            data starts. For instance, if you select an offset delay time of five minutes, inference
            will not begin on the data until the first data measurement after the five minute
            mark. For example, if five minutes is selected, the inference scheduler will wake
            up at the configured frequency with the additional five minute delay time to check
            the customer S3 bucket. The customer can upload data at the same frequency and they
            don't need to stop and restart the scheduler when uploading new data.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeInferenceSchedulerResponse.DataInputConfiguration">
            <summary>
            Gets and sets the property DataInputConfiguration. 
            <para>
             Specifies configuration information for the input data for the inference scheduler,
            including delimiter, format, and dataset location. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeInferenceSchedulerResponse.DataOutputConfiguration">
            <summary>
            Gets and sets the property DataOutputConfiguration. 
            <para>
             Specifies information for the output results for the inference scheduler, including
            the output S3 location. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeInferenceSchedulerResponse.DataUploadFrequency">
            <summary>
            Gets and sets the property DataUploadFrequency. 
            <para>
            Specifies how often data is uploaded to the source S3 bucket for the input data. This
            value is the length of time between data uploads. For instance, if you select 5 minutes,
            Amazon Lookout for Equipment will upload the real-time data to the source bucket once
            every 5 minutes. This frequency also determines how often Amazon Lookout for Equipment
            starts a scheduled inference on your data. In this example, it starts once every 5
            minutes. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeInferenceSchedulerResponse.InferenceSchedulerArn">
            <summary>
            Gets and sets the property InferenceSchedulerArn. 
            <para>
            The Amazon Resource Name (ARN) of the inference scheduler being described. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeInferenceSchedulerResponse.InferenceSchedulerName">
            <summary>
            Gets and sets the property InferenceSchedulerName. 
            <para>
            The name of the inference scheduler being described. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeInferenceSchedulerResponse.ModelArn">
            <summary>
            Gets and sets the property ModelArn. 
            <para>
            The Amazon Resource Name (ARN) of the ML model of the inference scheduler being described.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeInferenceSchedulerResponse.ModelName">
            <summary>
            Gets and sets the property ModelName. 
            <para>
            The name of the ML model of the inference scheduler being described. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeInferenceSchedulerResponse.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
             The Amazon Resource Name (ARN) of a role with permission to access the data source
            for the inference scheduler being described. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeInferenceSchedulerResponse.ServerSideKmsKeyId">
            <summary>
            Gets and sets the property ServerSideKmsKeyId. 
            <para>
            Provides the identifier of the KMS key used to encrypt inference scheduler data by
            Amazon Lookout for Equipment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeInferenceSchedulerResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Indicates the status of the inference scheduler. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeInferenceSchedulerResponse.UpdatedAt">
            <summary>
            Gets and sets the property UpdatedAt. 
            <para>
            Specifies the time at which the inference scheduler was last updated, if it was. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.DescribeModelRequest">
            <summary>
            Container for the parameters to the DescribeModel operation.
            Provides a JSON containing the overall information about a specific ML model, including
            model name and ARN, dataset, training and evaluation information, status, and so on.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelRequest.ModelName">
            <summary>
            Gets and sets the property ModelName. 
            <para>
            The name of the ML model to be described. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.DescribeModelResponse">
            <summary>
            This is the response object from the DescribeModel operation.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelResponse.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            Indicates the time and date at which the ML model was created. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelResponse.DataPreProcessingConfiguration">
            <summary>
            Gets and sets the property DataPreProcessingConfiguration. 
            <para>
            The configuration is the <code>TargetSamplingRate</code>, which is the sampling rate
            of the data after post processing by Amazon Lookout for Equipment. For example, if
            you provide data that has been collected at a 1 second level and you want the system
            to resample the data at a 1 minute rate before training, the <code>TargetSamplingRate</code>
            is 1 minute.
            </para>
             
            <para>
            When providing a value for the <code>TargetSamplingRate</code>, you must attach the
            prefix "PT" to the rate you want. The value for a 1 second rate is therefore <i>PT1S</i>,
            the value for a 15 minute rate is <i>PT15M</i>, and the value for a 1 hour rate is
            <i>PT1H</i> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelResponse.DatasetArn">
            <summary>
            Gets and sets the property DatasetArn. 
            <para>
            The Amazon Resouce Name (ARN) of the dataset used to create the ML model being described.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelResponse.DatasetName">
            <summary>
            Gets and sets the property DatasetName. 
            <para>
            The name of the dataset being used by the ML being described. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelResponse.EvaluationDataEndTime">
            <summary>
            Gets and sets the property EvaluationDataEndTime. 
            <para>
             Indicates the time reference in the dataset that was used to end the subset of evaluation
            data for the ML model. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelResponse.EvaluationDataStartTime">
            <summary>
            Gets and sets the property EvaluationDataStartTime. 
            <para>
             Indicates the time reference in the dataset that was used to begin the subset of
            evaluation data for the ML model. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelResponse.FailedReason">
            <summary>
            Gets and sets the property FailedReason. 
            <para>
            If the training of the ML model failed, this indicates the reason for that failure.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelResponse.LabelsInputConfiguration">
            <summary>
            Gets and sets the property LabelsInputConfiguration. 
            <para>
            Specifies configuration information about the labels input, including its S3 location.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelResponse.LastUpdatedTime">
            <summary>
            Gets and sets the property LastUpdatedTime. 
            <para>
            Indicates the last time the ML model was updated. The type of update is not specified.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelResponse.ModelArn">
            <summary>
            Gets and sets the property ModelArn. 
            <para>
            The Amazon Resource Name (ARN) of the ML model being described. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelResponse.ModelMetrics">
            <summary>
            Gets and sets the property ModelMetrics. 
            <para>
            The Model Metrics show an aggregated summary of the model's performance within the
            evaluation time range. This is the JSON content of the metrics created when evaluating
            the model. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelResponse.ModelName">
            <summary>
            Gets and sets the property ModelName. 
            <para>
            The name of the ML model being described. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelResponse.OffCondition">
            <summary>
            Gets and sets the property OffCondition. 
            <para>
            Indicates that the asset associated with this sensor has been shut off. As long as
            this condition is met, Lookout for Equipment will not use data from this asset for
            training, evaluation, or inference.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelResponse.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
             The Amazon Resource Name (ARN) of a role with permission to access the data source
            for the ML model being described. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelResponse.Schema">
            <summary>
            Gets and sets the property Schema. 
            <para>
            A JSON description of the data that is in each time series dataset, including names,
            column names, and data types. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelResponse.ServerSideKmsKeyId">
            <summary>
            Gets and sets the property ServerSideKmsKeyId. 
            <para>
            Provides the identifier of the KMS key used to encrypt model data by Amazon Lookout
            for Equipment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Specifies the current status of the model being described. Status describes the status
            of the most recent action of the model. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelResponse.TrainingDataEndTime">
            <summary>
            Gets and sets the property TrainingDataEndTime. 
            <para>
             Indicates the time reference in the dataset that was used to end the subset of training
            data for the ML model. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelResponse.TrainingDataStartTime">
            <summary>
            Gets and sets the property TrainingDataStartTime. 
            <para>
             Indicates the time reference in the dataset that was used to begin the subset of
            training data for the ML model. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelResponse.TrainingExecutionEndTime">
            <summary>
            Gets and sets the property TrainingExecutionEndTime. 
            <para>
            Indicates the time at which the training of the ML model was completed. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.DescribeModelResponse.TrainingExecutionStartTime">
            <summary>
            Gets and sets the property TrainingExecutionStartTime. 
            <para>
            Indicates the time at which the training of the ML model began. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.InferenceExecutionSummary">
            <summary>
            Contains information about the specific inference execution, including input and output
            data configuration, inference scheduling information, status, and so on.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InferenceExecutionSummary.CustomerResultObject">
            <summary>
            Gets and sets the property CustomerResultObject. 
            <para>
             
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InferenceExecutionSummary.DataEndTime">
            <summary>
            Gets and sets the property DataEndTime. 
            <para>
            Indicates the time reference in the dataset at which the inference execution stopped.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InferenceExecutionSummary.DataInputConfiguration">
            <summary>
            Gets and sets the property DataInputConfiguration. 
            <para>
             Specifies configuration information for the input data for the inference scheduler,
            including delimiter, format, and dataset location. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InferenceExecutionSummary.DataOutputConfiguration">
            <summary>
            Gets and sets the property DataOutputConfiguration. 
            <para>
             Specifies configuration information for the output results from for the inference
            execution, including the output S3 location. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InferenceExecutionSummary.DataStartTime">
            <summary>
            Gets and sets the property DataStartTime. 
            <para>
            Indicates the time reference in the dataset at which the inference execution began.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InferenceExecutionSummary.FailedReason">
            <summary>
            Gets and sets the property FailedReason. 
            <para>
             Specifies the reason for failure when an inference execution has failed. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InferenceExecutionSummary.InferenceSchedulerArn">
            <summary>
            Gets and sets the property InferenceSchedulerArn. 
            <para>
             The Amazon Resource Name (ARN) of the inference scheduler being used for the inference
            execution. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InferenceExecutionSummary.InferenceSchedulerName">
            <summary>
            Gets and sets the property InferenceSchedulerName. 
            <para>
            The name of the inference scheduler being used for the inference execution. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InferenceExecutionSummary.ModelArn">
            <summary>
            Gets and sets the property ModelArn. 
            <para>
            The Amazon Resource Name (ARN) of the ML model used for the inference execution. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InferenceExecutionSummary.ModelName">
            <summary>
            Gets and sets the property ModelName. 
            <para>
            The name of the ML model being used for the inference execution. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InferenceExecutionSummary.ScheduledStartTime">
            <summary>
            Gets and sets the property ScheduledStartTime. 
            <para>
            Indicates the start time at which the inference scheduler began the specific inference
            execution. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InferenceExecutionSummary.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Indicates the status of the inference execution. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.InferenceInputConfiguration">
            <summary>
            Specifies configuration information for the input data for the inference, including
            S3 location of input data..
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InferenceInputConfiguration.InferenceInputNameConfiguration">
            <summary>
            Gets and sets the property InferenceInputNameConfiguration. 
            <para>
            Specifies configuration information for the input data for the inference, including
            timestamp format and delimiter. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InferenceInputConfiguration.InputTimeZoneOffset">
            <summary>
            Gets and sets the property InputTimeZoneOffset. 
            <para>
            Indicates the difference between your time zone and Greenwich Mean Time (GMT). 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InferenceInputConfiguration.S3InputConfiguration">
            <summary>
            Gets and sets the property S3InputConfiguration. 
            <para>
             Specifies configuration information for the input data for the inference, including
            S3 location of input data.. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.InferenceInputNameConfiguration">
            <summary>
            Specifies configuration information for the input data for the inference, including
            timestamp format and delimiter.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InferenceInputNameConfiguration.ComponentTimestampDelimiter">
            <summary>
            Gets and sets the property ComponentTimestampDelimiter. 
            <para>
            Indicates the delimiter character used between items in the data. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InferenceInputNameConfiguration.TimestampFormat">
            <summary>
            Gets and sets the property TimestampFormat. 
            <para>
            The format of the timestamp, whether Epoch time, or standard, with or without hyphens
            (-). 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.InferenceOutputConfiguration">
            <summary>
            Specifies configuration information for the output results from for the inference,
            including KMS key ID and output S3 location.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InferenceOutputConfiguration.KmsKeyId">
            <summary>
            Gets and sets the property KmsKeyId. 
            <para>
            The ID number for the AWS KMS key used to encrypt the inference output. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InferenceOutputConfiguration.S3OutputConfiguration">
            <summary>
            Gets and sets the property S3OutputConfiguration. 
            <para>
             Specifies configuration information for the output results from for the inference,
            output S3 location. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.InferenceS3InputConfiguration">
            <summary>
            Specifies configuration information for the input data for the inference, including
            input data S3 location.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InferenceS3InputConfiguration.Bucket">
            <summary>
            Gets and sets the property Bucket. 
            <para>
            The bucket containing the input dataset for the inference. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InferenceS3InputConfiguration.Prefix">
            <summary>
            Gets and sets the property Prefix. 
            <para>
            The prefix for the S3 bucket used for the input data for the inference. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.InferenceS3OutputConfiguration">
            <summary>
            Specifies configuration information for the output results from the inference, including
            output S3 location.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InferenceS3OutputConfiguration.Bucket">
            <summary>
            Gets and sets the property Bucket. 
            <para>
             The bucket containing the output results from the inference 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InferenceS3OutputConfiguration.Prefix">
            <summary>
            Gets and sets the property Prefix. 
            <para>
             The prefix for the S3 bucket used for the output results from the inference. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.InferenceSchedulerSummary">
            <summary>
            Contains information about the specific inference scheduler, including data delay
            offset, model name and ARN, status, and so on.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InferenceSchedulerSummary.DataDelayOffsetInMinutes">
            <summary>
            Gets and sets the property DataDelayOffsetInMinutes. 
            <para>
            A period of time (in minutes) by which inference on the data is delayed after the
            data starts. For instance, if an offset delay time of five minutes was selected, inference
            will not begin on the data until the first data measurement after the five minute
            mark. For example, if five minutes is selected, the inference scheduler will wake
            up at the configured frequency with the additional five minute delay time to check
            the customer S3 bucket. The customer can upload data at the same frequency and they
            don't need to stop and restart the scheduler when uploading new data. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InferenceSchedulerSummary.DataUploadFrequency">
            <summary>
            Gets and sets the property DataUploadFrequency. 
            <para>
            How often data is uploaded to the source S3 bucket for the input data. This value
            is the length of time between data uploads. For instance, if you select 5 minutes,
            Amazon Lookout for Equipment will upload the real-time data to the source bucket once
            every 5 minutes. This frequency also determines how often Amazon Lookout for Equipment
            starts a scheduled inference on your data. In this example, it starts once every 5
            minutes. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InferenceSchedulerSummary.InferenceSchedulerArn">
            <summary>
            Gets and sets the property InferenceSchedulerArn. 
            <para>
             The Amazon Resource Name (ARN) of the inference scheduler. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InferenceSchedulerSummary.InferenceSchedulerName">
            <summary>
            Gets and sets the property InferenceSchedulerName. 
            <para>
            The name of the inference scheduler. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InferenceSchedulerSummary.ModelArn">
            <summary>
            Gets and sets the property ModelArn. 
            <para>
             The Amazon Resource Name (ARN) of the ML model used by the inference scheduler. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InferenceSchedulerSummary.ModelName">
            <summary>
            Gets and sets the property ModelName. 
            <para>
            The name of the ML model used for the inference scheduler. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.InferenceSchedulerSummary.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Indicates the status of the inference scheduler. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.IngestionInputConfiguration">
            <summary>
            Specifies configuration information for the input data for the data ingestion job,
            including input data S3 location.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.IngestionInputConfiguration.S3InputConfiguration">
            <summary>
            Gets and sets the property S3InputConfiguration. 
            <para>
            The location information for the S3 bucket used for input data for the data ingestion.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.IngestionS3InputConfiguration">
            <summary>
            Specifies S3 configuration information for the input data for the data ingestion
            job.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.IngestionS3InputConfiguration.Bucket">
            <summary>
            Gets and sets the property Bucket. 
            <para>
            The name of the S3 bucket used for the input data for the data ingestion. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.IngestionS3InputConfiguration.Prefix">
            <summary>
            Gets and sets the property Prefix. 
            <para>
            The prefix for the S3 location being used for the input data for the data ingestion.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.InternalServerException">
            <summary>
            Processing of the request has failed because of an unknown error, exception or failure.
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.InternalServerException.#ctor(System.String)">
            <summary>
            Constructs a new InternalServerException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.InternalServerException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.InternalServerException.#ctor(System.Exception)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.InternalServerException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.InternalServerException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.InternalServerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InternalServerException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.InternalServerException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for AccessDeniedException Object
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ConflictException Object
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CreateDatasetRequestMarshaller">
            <summary>
            CreateDataset Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CreateDatasetRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CreateDatasetRequestMarshaller.Marshall(Amazon.LookoutEquipment.Model.CreateDatasetRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CreateDatasetRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CreateDatasetResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateDataset operation
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CreateDatasetResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CreateDatasetResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CreateDatasetResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CreateInferenceSchedulerRequestMarshaller">
            <summary>
            CreateInferenceScheduler Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CreateInferenceSchedulerRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CreateInferenceSchedulerRequestMarshaller.Marshall(Amazon.LookoutEquipment.Model.CreateInferenceSchedulerRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CreateInferenceSchedulerRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CreateInferenceSchedulerResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateInferenceScheduler operation
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CreateInferenceSchedulerResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CreateInferenceSchedulerResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CreateInferenceSchedulerResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CreateModelRequestMarshaller">
            <summary>
            CreateModel Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CreateModelRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CreateModelRequestMarshaller.Marshall(Amazon.LookoutEquipment.Model.CreateModelRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CreateModelRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CreateModelResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateModel operation
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CreateModelResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CreateModelResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.CreateModelResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DataIngestionJobSummaryUnmarshaller">
            <summary>
            Response Unmarshaller for DataIngestionJobSummary Object
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DataIngestionJobSummaryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LookoutEquipment#Model#DataIngestionJobSummary,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DataIngestionJobSummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DataIngestionJobSummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DataPreProcessingConfigurationMarshaller">
            <summary>
            DataPreProcessingConfiguration Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DataPreProcessingConfigurationMarshaller.Marshall(Amazon.LookoutEquipment.Model.DataPreProcessingConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DataPreProcessingConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DataPreProcessingConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for DataPreProcessingConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DataPreProcessingConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LookoutEquipment#Model#DataPreProcessingConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DataPreProcessingConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DataPreProcessingConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DatasetSchemaMarshaller">
            <summary>
            DatasetSchema Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DatasetSchemaMarshaller.Marshall(Amazon.LookoutEquipment.Model.DatasetSchema,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DatasetSchemaMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DatasetSummaryUnmarshaller">
            <summary>
            Response Unmarshaller for DatasetSummary Object
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DatasetSummaryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LookoutEquipment#Model#DatasetSummary,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DatasetSummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DatasetSummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteDatasetRequestMarshaller">
            <summary>
            DeleteDataset Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteDatasetRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteDatasetRequestMarshaller.Marshall(Amazon.LookoutEquipment.Model.DeleteDatasetRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteDatasetRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteDatasetResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteDataset operation
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteDatasetResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteDatasetResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteDatasetResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteInferenceSchedulerRequestMarshaller">
            <summary>
            DeleteInferenceScheduler Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteInferenceSchedulerRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteInferenceSchedulerRequestMarshaller.Marshall(Amazon.LookoutEquipment.Model.DeleteInferenceSchedulerRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteInferenceSchedulerRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteInferenceSchedulerResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteInferenceScheduler operation
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteInferenceSchedulerResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteInferenceSchedulerResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteInferenceSchedulerResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteModelRequestMarshaller">
            <summary>
            DeleteModel Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteModelRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteModelRequestMarshaller.Marshall(Amazon.LookoutEquipment.Model.DeleteModelRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteModelRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteModelResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteModel operation
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteModelResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteModelResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DeleteModelResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeDataIngestionJobRequestMarshaller">
            <summary>
            DescribeDataIngestionJob Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeDataIngestionJobRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeDataIngestionJobRequestMarshaller.Marshall(Amazon.LookoutEquipment.Model.DescribeDataIngestionJobRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeDataIngestionJobRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeDataIngestionJobResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeDataIngestionJob operation
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeDataIngestionJobResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeDataIngestionJobResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeDataIngestionJobResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeDatasetRequestMarshaller">
            <summary>
            DescribeDataset Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeDatasetRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeDatasetRequestMarshaller.Marshall(Amazon.LookoutEquipment.Model.DescribeDatasetRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeDatasetRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeDatasetResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeDataset operation
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeDatasetResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeDatasetResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeDatasetResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeInferenceSchedulerRequestMarshaller">
            <summary>
            DescribeInferenceScheduler Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeInferenceSchedulerRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeInferenceSchedulerRequestMarshaller.Marshall(Amazon.LookoutEquipment.Model.DescribeInferenceSchedulerRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeInferenceSchedulerRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeInferenceSchedulerResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeInferenceScheduler operation
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeInferenceSchedulerResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeInferenceSchedulerResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeInferenceSchedulerResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeModelRequestMarshaller">
            <summary>
            DescribeModel Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeModelRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeModelRequestMarshaller.Marshall(Amazon.LookoutEquipment.Model.DescribeModelRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeModelRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeModelResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeModel operation
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeModelResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeModelResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.DescribeModelResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceExecutionSummaryUnmarshaller">
            <summary>
            Response Unmarshaller for InferenceExecutionSummary Object
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceExecutionSummaryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LookoutEquipment#Model#InferenceExecutionSummary,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceExecutionSummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceExecutionSummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceInputConfigurationMarshaller">
            <summary>
            InferenceInputConfiguration Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceInputConfigurationMarshaller.Marshall(Amazon.LookoutEquipment.Model.InferenceInputConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceInputConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceInputConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for InferenceInputConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceInputConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LookoutEquipment#Model#InferenceInputConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceInputConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceInputConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceInputNameConfigurationMarshaller">
            <summary>
            InferenceInputNameConfiguration Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceInputNameConfigurationMarshaller.Marshall(Amazon.LookoutEquipment.Model.InferenceInputNameConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceInputNameConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceInputNameConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for InferenceInputNameConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceInputNameConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LookoutEquipment#Model#InferenceInputNameConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceInputNameConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceInputNameConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceOutputConfigurationMarshaller">
            <summary>
            InferenceOutputConfiguration Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceOutputConfigurationMarshaller.Marshall(Amazon.LookoutEquipment.Model.InferenceOutputConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceOutputConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceOutputConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for InferenceOutputConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceOutputConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LookoutEquipment#Model#InferenceOutputConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceOutputConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceOutputConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceS3InputConfigurationMarshaller">
            <summary>
            InferenceS3InputConfiguration Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceS3InputConfigurationMarshaller.Marshall(Amazon.LookoutEquipment.Model.InferenceS3InputConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceS3InputConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceS3InputConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for InferenceS3InputConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceS3InputConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LookoutEquipment#Model#InferenceS3InputConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceS3InputConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceS3InputConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceS3OutputConfigurationMarshaller">
            <summary>
            InferenceS3OutputConfiguration Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceS3OutputConfigurationMarshaller.Marshall(Amazon.LookoutEquipment.Model.InferenceS3OutputConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceS3OutputConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceS3OutputConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for InferenceS3OutputConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceS3OutputConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LookoutEquipment#Model#InferenceS3OutputConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceS3OutputConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceS3OutputConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceSchedulerSummaryUnmarshaller">
            <summary>
            Response Unmarshaller for InferenceSchedulerSummary Object
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceSchedulerSummaryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LookoutEquipment#Model#InferenceSchedulerSummary,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceSchedulerSummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InferenceSchedulerSummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.IngestionInputConfigurationMarshaller">
            <summary>
            IngestionInputConfiguration Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.IngestionInputConfigurationMarshaller.Marshall(Amazon.LookoutEquipment.Model.IngestionInputConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.IngestionInputConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.IngestionInputConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for IngestionInputConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.IngestionInputConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LookoutEquipment#Model#IngestionInputConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.IngestionInputConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.IngestionInputConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.IngestionS3InputConfigurationMarshaller">
            <summary>
            IngestionS3InputConfiguration Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.IngestionS3InputConfigurationMarshaller.Marshall(Amazon.LookoutEquipment.Model.IngestionS3InputConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.IngestionS3InputConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.IngestionS3InputConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for IngestionS3InputConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.IngestionS3InputConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LookoutEquipment#Model#IngestionS3InputConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.IngestionS3InputConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.IngestionS3InputConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InternalServerException Object
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.LabelsInputConfigurationMarshaller">
            <summary>
            LabelsInputConfiguration Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.LabelsInputConfigurationMarshaller.Marshall(Amazon.LookoutEquipment.Model.LabelsInputConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.LabelsInputConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.LabelsInputConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for LabelsInputConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.LabelsInputConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LookoutEquipment#Model#LabelsInputConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.LabelsInputConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.LabelsInputConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.LabelsS3InputConfigurationMarshaller">
            <summary>
            LabelsS3InputConfiguration Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.LabelsS3InputConfigurationMarshaller.Marshall(Amazon.LookoutEquipment.Model.LabelsS3InputConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.LabelsS3InputConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.LabelsS3InputConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for LabelsS3InputConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.LabelsS3InputConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LookoutEquipment#Model#LabelsS3InputConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.LabelsS3InputConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.LabelsS3InputConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListDataIngestionJobsRequestMarshaller">
            <summary>
            ListDataIngestionJobs Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListDataIngestionJobsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListDataIngestionJobsRequestMarshaller.Marshall(Amazon.LookoutEquipment.Model.ListDataIngestionJobsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListDataIngestionJobsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListDataIngestionJobsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListDataIngestionJobs operation
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListDataIngestionJobsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListDataIngestionJobsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListDataIngestionJobsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListDatasetsRequestMarshaller">
            <summary>
            ListDatasets Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListDatasetsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListDatasetsRequestMarshaller.Marshall(Amazon.LookoutEquipment.Model.ListDatasetsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListDatasetsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListDatasetsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListDatasets operation
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListDatasetsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListDatasetsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListDatasetsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListInferenceExecutionsRequestMarshaller">
            <summary>
            ListInferenceExecutions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListInferenceExecutionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListInferenceExecutionsRequestMarshaller.Marshall(Amazon.LookoutEquipment.Model.ListInferenceExecutionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListInferenceExecutionsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListInferenceExecutionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListInferenceExecutions operation
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListInferenceExecutionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListInferenceExecutionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListInferenceExecutionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListInferenceSchedulersRequestMarshaller">
            <summary>
            ListInferenceSchedulers Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListInferenceSchedulersRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListInferenceSchedulersRequestMarshaller.Marshall(Amazon.LookoutEquipment.Model.ListInferenceSchedulersRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListInferenceSchedulersRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListInferenceSchedulersResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListInferenceSchedulers operation
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListInferenceSchedulersResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListInferenceSchedulersResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListInferenceSchedulersResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListModelsRequestMarshaller">
            <summary>
            ListModels Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListModelsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListModelsRequestMarshaller.Marshall(Amazon.LookoutEquipment.Model.ListModelsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListModelsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListModelsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListModels operation
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListModelsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListModelsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListModelsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller">
            <summary>
            ListTagsForResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.LookoutEquipment.Model.ListTagsForResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListTagsForResource operation
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ModelSummaryUnmarshaller">
            <summary>
            Response Unmarshaller for ModelSummary Object
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ModelSummaryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LookoutEquipment#Model#ModelSummary,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ModelSummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ModelSummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.S3ObjectUnmarshaller">
            <summary>
            Response Unmarshaller for S3Object Object
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.S3ObjectUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LookoutEquipment#Model#S3Object,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.S3ObjectUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.S3ObjectUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ServiceQuotaExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.StartDataIngestionJobRequestMarshaller">
            <summary>
            StartDataIngestionJob Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.StartDataIngestionJobRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.StartDataIngestionJobRequestMarshaller.Marshall(Amazon.LookoutEquipment.Model.StartDataIngestionJobRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.StartDataIngestionJobRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.StartDataIngestionJobResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StartDataIngestionJob operation
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.StartDataIngestionJobResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.StartDataIngestionJobResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.StartDataIngestionJobResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.StartInferenceSchedulerRequestMarshaller">
            <summary>
            StartInferenceScheduler Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.StartInferenceSchedulerRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.StartInferenceSchedulerRequestMarshaller.Marshall(Amazon.LookoutEquipment.Model.StartInferenceSchedulerRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.StartInferenceSchedulerRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.StartInferenceSchedulerResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StartInferenceScheduler operation
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.StartInferenceSchedulerResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.StartInferenceSchedulerResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.StartInferenceSchedulerResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.StopInferenceSchedulerRequestMarshaller">
            <summary>
            StopInferenceScheduler Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.StopInferenceSchedulerRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.StopInferenceSchedulerRequestMarshaller.Marshall(Amazon.LookoutEquipment.Model.StopInferenceSchedulerRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.StopInferenceSchedulerRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.StopInferenceSchedulerResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StopInferenceScheduler operation
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.StopInferenceSchedulerResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.StopInferenceSchedulerResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.StopInferenceSchedulerResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.TagMarshaller">
            <summary>
            Tag Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.TagMarshaller.Marshall(Amazon.LookoutEquipment.Model.Tag,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.TagMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller">
            <summary>
            TagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.LookoutEquipment.Model.TagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for TagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.TagUnmarshaller">
            <summary>
            Response Unmarshaller for Tag Object
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.TagUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LookoutEquipment#Model#Tag,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.TagUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.TagUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ThrottlingException Object
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller">
            <summary>
            UntagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.LookoutEquipment.Model.UntagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UntagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.UpdateInferenceSchedulerRequestMarshaller">
            <summary>
            UpdateInferenceScheduler Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.UpdateInferenceSchedulerRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.UpdateInferenceSchedulerRequestMarshaller.Marshall(Amazon.LookoutEquipment.Model.UpdateInferenceSchedulerRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.UpdateInferenceSchedulerRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.UpdateInferenceSchedulerResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateInferenceScheduler operation
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.UpdateInferenceSchedulerResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.UpdateInferenceSchedulerResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.UpdateInferenceSchedulerResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ValidationException Object
            </summary>  
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.LabelsInputConfiguration">
            <summary>
            Contains the configuration information for the S3 location being used to hold label
            data.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.LabelsInputConfiguration.S3InputConfiguration">
            <summary>
            Gets and sets the property S3InputConfiguration. 
            <para>
            Contains location information for the S3 location being used for label data. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.LabelsS3InputConfiguration">
            <summary>
            The location information (prefix and bucket name) for the s3 location being used for
            label data.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.LabelsS3InputConfiguration.Bucket">
            <summary>
            Gets and sets the property Bucket. 
            <para>
            The name of the S3 bucket holding the label data. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.LabelsS3InputConfiguration.Prefix">
            <summary>
            Gets and sets the property Prefix. 
            <para>
             The prefix for the S3 bucket used for the label data. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.ListDataIngestionJobsRequest">
            <summary>
            Container for the parameters to the ListDataIngestionJobs operation.
            Provides a list of all data ingestion jobs, including dataset name and ARN, S3 location
            of the input data, status, and so on.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListDataIngestionJobsRequest.DatasetName">
            <summary>
            Gets and sets the property DatasetName. 
            <para>
            The name of the dataset being used for the data ingestion job. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListDataIngestionJobsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
             Specifies the maximum number of data ingestion jobs to list. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListDataIngestionJobsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
             An opaque pagination token indicating where to continue the listing of data ingestion
            jobs. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListDataIngestionJobsRequest.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Indicates the status of the data ingestion job. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.ListDataIngestionJobsResponse">
            <summary>
            This is the response object from the ListDataIngestionJobs operation.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListDataIngestionJobsResponse.DataIngestionJobSummaries">
            <summary>
            Gets and sets the property DataIngestionJobSummaries. 
            <para>
            Specifies information about the specific data ingestion job, including dataset name
            and status. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListDataIngestionJobsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
             An opaque pagination token indicating where to continue the listing of data ingestion
            jobs. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.ListDatasetsRequest">
            <summary>
            Container for the parameters to the ListDatasets operation.
            Lists all datasets currently available in your account, filtering on the dataset name.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListDatasetsRequest.DatasetNameBeginsWith">
            <summary>
            Gets and sets the property DatasetNameBeginsWith. 
            <para>
            The beginning of the name of the datasets to be listed. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListDatasetsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
             Specifies the maximum number of datasets to list. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListDatasetsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
             An opaque pagination token indicating where to continue the listing of datasets.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.ListDatasetsResponse">
            <summary>
            This is the response object from the ListDatasets operation.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListDatasetsResponse.DatasetSummaries">
            <summary>
            Gets and sets the property DatasetSummaries. 
            <para>
            Provides information about the specified dataset, including creation time, dataset
            ARN, and status. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListDatasetsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
             An opaque pagination token indicating where to continue the listing of datasets.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.ListInferenceExecutionsRequest">
            <summary>
            Container for the parameters to the ListInferenceExecutions operation.
            Lists all inference executions that have been performed by the specified inference
            scheduler.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListInferenceExecutionsRequest.DataEndTimeBefore">
            <summary>
            Gets and sets the property DataEndTimeBefore. 
            <para>
            The time reference in the inferenced dataset before which Amazon Lookout for Equipment
            stopped the inference execution. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListInferenceExecutionsRequest.DataStartTimeAfter">
            <summary>
            Gets and sets the property DataStartTimeAfter. 
            <para>
            The time reference in the inferenced dataset after which Amazon Lookout for Equipment
            started the inference execution. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListInferenceExecutionsRequest.InferenceSchedulerName">
            <summary>
            Gets and sets the property InferenceSchedulerName. 
            <para>
            The name of the inference scheduler for the inference execution listed. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListInferenceExecutionsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Specifies the maximum number of inference executions to list. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListInferenceExecutionsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An opaque pagination token indicating where to continue the listing of inference executions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListInferenceExecutionsRequest.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the inference execution. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.ListInferenceExecutionsResponse">
            <summary>
            This is the response object from the ListInferenceExecutions operation.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListInferenceExecutionsResponse.InferenceExecutionSummaries">
            <summary>
            Gets and sets the property InferenceExecutionSummaries. 
            <para>
            Provides an array of information about the individual inference executions returned
            from the <code>ListInferenceExecutions</code> operation, including model used, inference
            scheduler, data configuration, and so on. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListInferenceExecutionsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
             An opaque pagination token indicating where to continue the listing of inference
            executions. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.ListInferenceSchedulersRequest">
            <summary>
            Container for the parameters to the ListInferenceSchedulers operation.
            Retrieves a list of all inference schedulers currently available for your account.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListInferenceSchedulersRequest.InferenceSchedulerNameBeginsWith">
            <summary>
            Gets and sets the property InferenceSchedulerNameBeginsWith. 
            <para>
            The beginning of the name of the inference schedulers to be listed. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListInferenceSchedulersRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
             Specifies the maximum number of inference schedulers to list. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListInferenceSchedulersRequest.ModelName">
            <summary>
            Gets and sets the property ModelName. 
            <para>
            The name of the ML model used by the inference scheduler to be listed. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListInferenceSchedulersRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
             An opaque pagination token indicating where to continue the listing of inference
            schedulers. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.ListInferenceSchedulersResponse">
            <summary>
            This is the response object from the ListInferenceSchedulers operation.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListInferenceSchedulersResponse.InferenceSchedulerSummaries">
            <summary>
            Gets and sets the property InferenceSchedulerSummaries. 
            <para>
            Provides information about the specified inference scheduler, including data upload
            frequency, model name and ARN, and status. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListInferenceSchedulersResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
             An opaque pagination token indicating where to continue the listing of inference
            schedulers. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.ListModelsRequest">
            <summary>
            Container for the parameters to the ListModels operation.
            Generates a list of all models in the account, including model name and ARN, dataset,
            and status.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListModelsRequest.DatasetNameBeginsWith">
            <summary>
            Gets and sets the property DatasetNameBeginsWith. 
            <para>
            The beginning of the name of the dataset of the ML models to be listed. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListModelsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
             Specifies the maximum number of ML models to list. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListModelsRequest.ModelNameBeginsWith">
            <summary>
            Gets and sets the property ModelNameBeginsWith. 
            <para>
            The beginning of the name of the ML models being listed. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListModelsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
             An opaque pagination token indicating where to continue the listing of ML models.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListModelsRequest.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the ML model. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.ListModelsResponse">
            <summary>
            This is the response object from the ListModels operation.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListModelsResponse.ModelSummaries">
            <summary>
            Gets and sets the property ModelSummaries. 
            <para>
            Provides information on the specified model, including created time, model and dataset
            ARNs, and status. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListModelsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
             An opaque pagination token indicating where to continue the listing of ML models.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.ListTagsForResourceRequest">
            <summary>
            Container for the parameters to the ListTagsForResource operation.
            Lists all the tags for a specified resource, including key and value.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListTagsForResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The Amazon Resource Name (ARN) of the resource (such as the dataset or model) that
            is the focus of the <code>ListTagsForResource</code> operation. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.ListTagsForResourceResponse">
            <summary>
            This is the response object from the ListTagsForResource operation.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListTagsForResourceResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
             Any tags associated with the resource. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.ModelSummary">
            <summary>
            Provides information about the specified ML model, including dataset and model names
            and ARNs, as well as status.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ModelSummary.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The time at which the specific model was created. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ModelSummary.DatasetArn">
            <summary>
            Gets and sets the property DatasetArn. 
            <para>
             The Amazon Resource Name (ARN) of the dataset used to create the model. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ModelSummary.DatasetName">
            <summary>
            Gets and sets the property DatasetName. 
            <para>
            The name of the dataset being used for the ML model. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ModelSummary.ModelArn">
            <summary>
            Gets and sets the property ModelArn. 
            <para>
             The Amazon Resource Name (ARN) of the ML model. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ModelSummary.ModelName">
            <summary>
            Gets and sets the property ModelName. 
            <para>
            The name of the ML model. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ModelSummary.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Indicates the status of the ML model. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            <summary>
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ResourceNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ResourceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ResourceNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ResourceNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ResourceNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ResourceNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ResourceNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ResourceNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.S3Object">
            <summary>
            Contains information about an S3 bucket.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.S3Object.Bucket">
            <summary>
            Gets and sets the property Bucket. 
            <para>
            The name of the specific S3 bucket. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.S3Object.Key">
            <summary>
            Gets and sets the property Key. 
            <para>
            The AWS Key Management Service (AWS KMS) key being used to encrypt the S3 object.
            Without this key, data in the bucket is not accessible. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.ServiceQuotaExceededException">
            <summary>
            Resource limitations have been exceeded.
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ServiceQuotaExceededException.#ctor(System.String)">
            <summary>
            Constructs a new ServiceQuotaExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ServiceQuotaExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ServiceQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ServiceQuotaExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of ServiceQuotaExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ServiceQuotaExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ServiceQuotaExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ServiceQuotaExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ServiceQuotaExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ServiceQuotaExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.StartDataIngestionJobRequest">
            <summary>
            Container for the parameters to the StartDataIngestionJob operation.
            Starts a data ingestion job. Amazon Lookout for Equipment returns the job status.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.StartDataIngestionJobRequest.ClientToken">
            <summary>
            Gets and sets the property ClientToken. 
            <para>
             A unique identifier for the request. If you do not set the client request token,
            Amazon Lookout for Equipment generates one. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.StartDataIngestionJobRequest.DatasetName">
            <summary>
            Gets and sets the property DatasetName. 
            <para>
            The name of the dataset being used by the data ingestion job. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.StartDataIngestionJobRequest.IngestionInputConfiguration">
            <summary>
            Gets and sets the property IngestionInputConfiguration. 
            <para>
             Specifies information for the input data for the data ingestion job, including dataset
            S3 location. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.StartDataIngestionJobRequest.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
             The Amazon Resource Name (ARN) of a role with permission to access the data source
            for the data ingestion job. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.StartDataIngestionJobResponse">
            <summary>
            This is the response object from the StartDataIngestionJob operation.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.StartDataIngestionJobResponse.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            Indicates the job ID of the data ingestion job. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.StartDataIngestionJobResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Indicates the status of the <code>StartDataIngestionJob</code> operation. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.StartInferenceSchedulerRequest">
            <summary>
            Container for the parameters to the StartInferenceScheduler operation.
            Starts an inference scheduler.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.StartInferenceSchedulerRequest.InferenceSchedulerName">
            <summary>
            Gets and sets the property InferenceSchedulerName. 
            <para>
            The name of the inference scheduler to be started. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.StartInferenceSchedulerResponse">
            <summary>
            This is the response object from the StartInferenceScheduler operation.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.StartInferenceSchedulerResponse.InferenceSchedulerArn">
            <summary>
            Gets and sets the property InferenceSchedulerArn. 
            <para>
            The Amazon Resource Name (ARN) of the inference scheduler being started. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.StartInferenceSchedulerResponse.InferenceSchedulerName">
            <summary>
            Gets and sets the property InferenceSchedulerName. 
            <para>
            The name of the inference scheduler being started. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.StartInferenceSchedulerResponse.ModelArn">
            <summary>
            Gets and sets the property ModelArn. 
            <para>
            The Amazon Resource Name (ARN) of the ML model being used by the inference scheduler.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.StartInferenceSchedulerResponse.ModelName">
            <summary>
            Gets and sets the property ModelName. 
            <para>
            The name of the ML model being used by the inference scheduler. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.StartInferenceSchedulerResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Indicates the status of the inference scheduler. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.StopInferenceSchedulerRequest">
            <summary>
            Container for the parameters to the StopInferenceScheduler operation.
            Stops an inference scheduler.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.StopInferenceSchedulerRequest.InferenceSchedulerName">
            <summary>
            Gets and sets the property InferenceSchedulerName. 
            <para>
            The name of the inference scheduler to be stopped. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.StopInferenceSchedulerResponse">
            <summary>
            This is the response object from the StopInferenceScheduler operation.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.StopInferenceSchedulerResponse.InferenceSchedulerArn">
            <summary>
            Gets and sets the property InferenceSchedulerArn. 
            <para>
            The Amazon Resource Name (ARN) of the inference schedule being stopped. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.StopInferenceSchedulerResponse.InferenceSchedulerName">
            <summary>
            Gets and sets the property InferenceSchedulerName. 
            <para>
            The name of the inference scheduler being stopped. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.StopInferenceSchedulerResponse.ModelArn">
            <summary>
            Gets and sets the property ModelArn. 
            <para>
            The Amazon Resource Name (ARN) of the ML model used by the inference scheduler being
            stopped. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.StopInferenceSchedulerResponse.ModelName">
            <summary>
            Gets and sets the property ModelName. 
            <para>
            The name of the ML model used by the inference scheduler being stopped. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.StopInferenceSchedulerResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Indicates the status of the inference scheduler. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.Tag">
            <summary>
            A tag is a key-value pair that can be added to a resource as metadata.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Tag.Key">
            <summary>
            Gets and sets the property Key. 
            <para>
            The key for the specified tag. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.Tag.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The value for the specified tag. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.TagResourceRequest">
            <summary>
            Container for the parameters to the TagResource operation.
            Associates a given tag to a resource in your account. A tag is a key-value pair which
            can be added to an Amazon Lookout for Equipment resource as metadata. Tags can be
            used for organizing your resources as well as helping you to search and filter by
            tag. Multiple tags can be added to a resource, either when you create it, or later.
            Up to 50 tags can be associated with each resource.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.TagResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The Amazon Resource Name (ARN) of the specific resource to which the tag should be
            associated. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.TagResourceRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tag or tags to be associated with a specific resource. Both the tag key and value
            are specified. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.TagResourceResponse">
            <summary>
            This is the response object from the TagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            <summary>
            The request was denied due to request throttling.
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ThrottlingException.#ctor(System.String)">
            <summary>
            Constructs a new ThrottlingException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ThrottlingException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ThrottlingException.#ctor(System.Exception)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ThrottlingException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ThrottlingException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ThrottlingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ThrottlingException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ThrottlingException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.UntagResourceRequest">
            <summary>
            Container for the parameters to the UntagResource operation.
            Removes a specific tag from a given resource. The tag is specified by its key.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.UntagResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The Amazon Resource Name (ARN) of the resource to which the tag is currently associated.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.UntagResourceRequest.TagKeys">
            <summary>
            Gets and sets the property TagKeys. 
            <para>
            Specifies the key of the tag to be removed from a specified resource. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.UntagResourceResponse">
            <summary>
            This is the response object from the UntagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.UpdateInferenceSchedulerRequest">
            <summary>
            Container for the parameters to the UpdateInferenceScheduler operation.
            Updates an inference scheduler.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.UpdateInferenceSchedulerRequest.DataDelayOffsetInMinutes">
            <summary>
            Gets and sets the property DataDelayOffsetInMinutes. 
            <para>
             A period of time (in minutes) by which inference on the data is delayed after the
            data starts. For instance, if you select an offset delay time of five minutes, inference
            will not begin on the data until the first data measurement after the five minute
            mark. For example, if five minutes is selected, the inference scheduler will wake
            up at the configured frequency with the additional five minute delay time to check
            the customer S3 bucket. The customer can upload data at the same frequency and they
            don't need to stop and restart the scheduler when uploading new data.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.UpdateInferenceSchedulerRequest.DataInputConfiguration">
            <summary>
            Gets and sets the property DataInputConfiguration. 
            <para>
             Specifies information for the input data for the inference scheduler, including delimiter,
            format, and dataset location. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.UpdateInferenceSchedulerRequest.DataOutputConfiguration">
            <summary>
            Gets and sets the property DataOutputConfiguration. 
            <para>
             Specifies information for the output results from the inference scheduler, including
            the output S3 location. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.UpdateInferenceSchedulerRequest.DataUploadFrequency">
            <summary>
            Gets and sets the property DataUploadFrequency. 
            <para>
            How often data is uploaded to the source S3 bucket for the input data. The value chosen
            is the length of time between data uploads. For instance, if you select 5 minutes,
            Amazon Lookout for Equipment will upload the real-time data to the source bucket once
            every 5 minutes. This frequency also determines how often Amazon Lookout for Equipment
            starts a scheduled inference on your data. In this example, it starts once every 5
            minutes. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.UpdateInferenceSchedulerRequest.InferenceSchedulerName">
            <summary>
            Gets and sets the property InferenceSchedulerName. 
            <para>
            The name of the inference scheduler to be updated. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.UpdateInferenceSchedulerRequest.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
             The Amazon Resource Name (ARN) of a role with permission to access the data source
            for the inference scheduler. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.UpdateInferenceSchedulerResponse">
            <summary>
            This is the response object from the UpdateInferenceScheduler operation.
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.ValidationException">
            <summary>
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ValidationException.#ctor(System.String)">
            <summary>
            Constructs a new ValidationException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ValidationException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ValidationException.#ctor(System.Exception)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ValidationException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ValidationException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ValidationException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ValidationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.IListDataIngestionJobsPaginator">
             <summary>
             Paginator for the ListDataIngestionJobs operation
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.IListDataIngestionJobsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.IListDatasetsPaginator">
             <summary>
             Paginator for the ListDatasets operation
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.IListDatasetsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.IListInferenceExecutionsPaginator">
             <summary>
             Paginator for the ListInferenceExecutions operation
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.IListInferenceExecutionsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.IListInferenceSchedulersPaginator">
             <summary>
             Paginator for the ListInferenceSchedulers operation
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.IListInferenceSchedulersPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.IListModelsPaginator">
             <summary>
             Paginator for the ListModels operation
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.IListModelsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.ILookoutEquipmentPaginatorFactory">
             <summary>
             Paginators for the LookoutEquipment service
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ILookoutEquipmentPaginatorFactory.ListDataIngestionJobs(Amazon.LookoutEquipment.Model.ListDataIngestionJobsRequest)">
             <summary>
             Paginator for ListDataIngestionJobs operation
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ILookoutEquipmentPaginatorFactory.ListDatasets(Amazon.LookoutEquipment.Model.ListDatasetsRequest)">
             <summary>
             Paginator for ListDatasets operation
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ILookoutEquipmentPaginatorFactory.ListInferenceExecutions(Amazon.LookoutEquipment.Model.ListInferenceExecutionsRequest)">
             <summary>
             Paginator for ListInferenceExecutions operation
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ILookoutEquipmentPaginatorFactory.ListInferenceSchedulers(Amazon.LookoutEquipment.Model.ListInferenceSchedulersRequest)">
             <summary>
             Paginator for ListInferenceSchedulers operation
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.ILookoutEquipmentPaginatorFactory.ListModels(Amazon.LookoutEquipment.Model.ListModelsRequest)">
             <summary>
             Paginator for ListModels operation
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.ListDataIngestionJobsPaginator">
            <summary>
            Base class for ListDataIngestionJobs paginators.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListDataIngestionJobsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.ListDatasetsPaginator">
            <summary>
            Base class for ListDatasets paginators.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListDatasetsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.ListInferenceExecutionsPaginator">
            <summary>
            Base class for ListInferenceExecutions paginators.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListInferenceExecutionsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.ListInferenceSchedulersPaginator">
            <summary>
            Base class for ListInferenceSchedulers paginators.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListInferenceSchedulersPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.ListModelsPaginator">
            <summary>
            Base class for ListModels paginators.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.Model.ListModelsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.Model.LookoutEquipmentPaginatorFactory">
             <summary>
             Paginators for the LookoutEquipment service
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.LookoutEquipmentPaginatorFactory.ListDataIngestionJobs(Amazon.LookoutEquipment.Model.ListDataIngestionJobsRequest)">
             <summary>
             Paginator for ListDataIngestionJobs operation
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.LookoutEquipmentPaginatorFactory.ListDatasets(Amazon.LookoutEquipment.Model.ListDatasetsRequest)">
             <summary>
             Paginator for ListDatasets operation
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.LookoutEquipmentPaginatorFactory.ListInferenceExecutions(Amazon.LookoutEquipment.Model.ListInferenceExecutionsRequest)">
             <summary>
             Paginator for ListInferenceExecutions operation
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.LookoutEquipmentPaginatorFactory.ListInferenceSchedulers(Amazon.LookoutEquipment.Model.ListInferenceSchedulersRequest)">
             <summary>
             Paginator for ListInferenceSchedulers operation
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.Model.LookoutEquipmentPaginatorFactory.ListModels(Amazon.LookoutEquipment.Model.ListModelsRequest)">
             <summary>
             Paginator for ListModels operation
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.AmazonLookoutEquipmentRequest">
            <summary>
            Base class for LookoutEquipment operation requests.
            </summary>
        </member>
        <member name="T:Amazon.LookoutEquipment.DatasetStatus">
            <summary>
            Constants used for properties of type DatasetStatus.
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.DatasetStatus.ACTIVE">
            <summary>
            Constant ACTIVE for DatasetStatus
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.DatasetStatus.CREATED">
            <summary>
            Constant CREATED for DatasetStatus
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.DatasetStatus.INGESTION_IN_PROGRESS">
            <summary>
            Constant INGESTION_IN_PROGRESS for DatasetStatus
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.DatasetStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.DatasetStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.DatasetStatus.op_Implicit(System.String)~Amazon.LookoutEquipment.DatasetStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LookoutEquipment.DataUploadFrequency">
            <summary>
            Constants used for properties of type DataUploadFrequency.
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.DataUploadFrequency.PT10M">
            <summary>
            Constant PT10M for DataUploadFrequency
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.DataUploadFrequency.PT15M">
            <summary>
            Constant PT15M for DataUploadFrequency
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.DataUploadFrequency.PT1H">
            <summary>
            Constant PT1H for DataUploadFrequency
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.DataUploadFrequency.PT30M">
            <summary>
            Constant PT30M for DataUploadFrequency
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.DataUploadFrequency.PT5M">
            <summary>
            Constant PT5M for DataUploadFrequency
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.DataUploadFrequency.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.DataUploadFrequency.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.DataUploadFrequency.op_Implicit(System.String)~Amazon.LookoutEquipment.DataUploadFrequency">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LookoutEquipment.InferenceExecutionStatus">
            <summary>
            Constants used for properties of type InferenceExecutionStatus.
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.InferenceExecutionStatus.FAILED">
            <summary>
            Constant FAILED for InferenceExecutionStatus
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.InferenceExecutionStatus.IN_PROGRESS">
            <summary>
            Constant IN_PROGRESS for InferenceExecutionStatus
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.InferenceExecutionStatus.SUCCESS">
            <summary>
            Constant SUCCESS for InferenceExecutionStatus
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.InferenceExecutionStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.InferenceExecutionStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.InferenceExecutionStatus.op_Implicit(System.String)~Amazon.LookoutEquipment.InferenceExecutionStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LookoutEquipment.InferenceSchedulerStatus">
            <summary>
            Constants used for properties of type InferenceSchedulerStatus.
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.InferenceSchedulerStatus.PENDING">
            <summary>
            Constant PENDING for InferenceSchedulerStatus
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.InferenceSchedulerStatus.RUNNING">
            <summary>
            Constant RUNNING for InferenceSchedulerStatus
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.InferenceSchedulerStatus.STOPPED">
            <summary>
            Constant STOPPED for InferenceSchedulerStatus
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.InferenceSchedulerStatus.STOPPING">
            <summary>
            Constant STOPPING for InferenceSchedulerStatus
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.InferenceSchedulerStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.InferenceSchedulerStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.InferenceSchedulerStatus.op_Implicit(System.String)~Amazon.LookoutEquipment.InferenceSchedulerStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LookoutEquipment.IngestionJobStatus">
            <summary>
            Constants used for properties of type IngestionJobStatus.
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.IngestionJobStatus.FAILED">
            <summary>
            Constant FAILED for IngestionJobStatus
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.IngestionJobStatus.IN_PROGRESS">
            <summary>
            Constant IN_PROGRESS for IngestionJobStatus
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.IngestionJobStatus.SUCCESS">
            <summary>
            Constant SUCCESS for IngestionJobStatus
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.IngestionJobStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.IngestionJobStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.IngestionJobStatus.op_Implicit(System.String)~Amazon.LookoutEquipment.IngestionJobStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LookoutEquipment.ModelStatus">
            <summary>
            Constants used for properties of type ModelStatus.
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.ModelStatus.FAILED">
            <summary>
            Constant FAILED for ModelStatus
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.ModelStatus.IN_PROGRESS">
            <summary>
            Constant IN_PROGRESS for ModelStatus
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.ModelStatus.SUCCESS">
            <summary>
            Constant SUCCESS for ModelStatus
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.ModelStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.ModelStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.ModelStatus.op_Implicit(System.String)~Amazon.LookoutEquipment.ModelStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LookoutEquipment.TargetSamplingRate">
            <summary>
            Constants used for properties of type TargetSamplingRate.
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.TargetSamplingRate.PT10M">
            <summary>
            Constant PT10M for TargetSamplingRate
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.TargetSamplingRate.PT10S">
            <summary>
            Constant PT10S for TargetSamplingRate
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.TargetSamplingRate.PT15M">
            <summary>
            Constant PT15M for TargetSamplingRate
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.TargetSamplingRate.PT15S">
            <summary>
            Constant PT15S for TargetSamplingRate
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.TargetSamplingRate.PT1H">
            <summary>
            Constant PT1H for TargetSamplingRate
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.TargetSamplingRate.PT1M">
            <summary>
            Constant PT1M for TargetSamplingRate
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.TargetSamplingRate.PT1S">
            <summary>
            Constant PT1S for TargetSamplingRate
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.TargetSamplingRate.PT30M">
            <summary>
            Constant PT30M for TargetSamplingRate
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.TargetSamplingRate.PT30S">
            <summary>
            Constant PT30S for TargetSamplingRate
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.TargetSamplingRate.PT5M">
            <summary>
            Constant PT5M for TargetSamplingRate
            </summary>
        </member>
        <member name="F:Amazon.LookoutEquipment.TargetSamplingRate.PT5S">
            <summary>
            Constant PT5S for TargetSamplingRate
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.TargetSamplingRate.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.TargetSamplingRate.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LookoutEquipment.TargetSamplingRate.op_Implicit(System.String)~Amazon.LookoutEquipment.TargetSamplingRate">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient">
             <summary>
             Implementation for accessing LookoutEquipment
            
             Amazon Lookout for Equipment is a machine learning service that uses advanced analytics
             to identify anomalies in machines from sensor data for use in predictive maintenance.
             </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.#ctor">
             <summary>
             Constructs AmazonLookoutEquipmentClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonLookoutEquipmentClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.#ctor(Amazon.LookoutEquipment.AmazonLookoutEquipmentConfig)">
             <summary>
             Constructs AmazonLookoutEquipmentClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonLookoutEquipmentClient Configuration Object</param>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonLookoutEquipmentClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonLookoutEquipmentClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.LookoutEquipment.AmazonLookoutEquipmentConfig)">
            <summary>
            Constructs AmazonLookoutEquipmentClient with AWS Credentials and an
            AmazonLookoutEquipmentClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonLookoutEquipmentClient Configuration Object</param>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonLookoutEquipmentClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonLookoutEquipmentClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.#ctor(System.String,System.String,Amazon.LookoutEquipment.AmazonLookoutEquipmentConfig)">
            <summary>
            Constructs AmazonLookoutEquipmentClient with AWS Access Key ID, AWS Secret Key and an
            AmazonLookoutEquipmentClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonLookoutEquipmentClient Configuration Object</param>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonLookoutEquipmentClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonLookoutEquipmentClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.#ctor(System.String,System.String,System.String,Amazon.LookoutEquipment.AmazonLookoutEquipmentConfig)">
            <summary>
            Constructs AmazonLookoutEquipmentClient with AWS Access Key ID, AWS Secret Key and an
            AmazonLookoutEquipmentClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonLookoutEquipmentClient Configuration Object</param>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.ServiceMetadata">
            <summary>
            Capture metadata for the service.
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.CreateDataset(Amazon.LookoutEquipment.Model.CreateDatasetRequest)">
            <summary>
            Creates a container for a collection of data being ingested for analysis. The dataset
            contains the metadata describing where the data is and what the data actually looks
            like. In other words, it contains the location of the data source, the data schema,
            and other information. A dataset also contains any tags associated with the ingested
            data.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDataset service method.</param>
            
            <returns>The response from the CreateDataset service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ServiceQuotaExceededException">
            Resource limitations have been exceeded.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/CreateDataset">REST API Reference for CreateDataset Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.CreateDatasetAsync(Amazon.LookoutEquipment.Model.CreateDatasetRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a container for a collection of data being ingested for analysis. The dataset
            contains the metadata describing where the data is and what the data actually looks
            like. In other words, it contains the location of the data source, the data schema,
            and other information. A dataset also contains any tags associated with the ingested
            data.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDataset service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateDataset service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ServiceQuotaExceededException">
            Resource limitations have been exceeded.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/CreateDataset">REST API Reference for CreateDataset Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.CreateInferenceScheduler(Amazon.LookoutEquipment.Model.CreateInferenceSchedulerRequest)">
            <summary>
            Creates a scheduled inference. Scheduling an inference is setting up a continuous
            real-time inference plan to analyze new measurement data. When setting up the schedule,
            you provide an S3 bucket location for the input data, assign it a delimiter between
            separate entries in the data, set an offset delay if desired, and set the frequency
            of inferencing. You must also provide an S3 bucket location for the output data.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateInferenceScheduler service method.</param>
            
            <returns>The response from the CreateInferenceScheduler service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ServiceQuotaExceededException">
            Resource limitations have been exceeded.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/CreateInferenceScheduler">REST API Reference for CreateInferenceScheduler Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.CreateInferenceSchedulerAsync(Amazon.LookoutEquipment.Model.CreateInferenceSchedulerRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a scheduled inference. Scheduling an inference is setting up a continuous
            real-time inference plan to analyze new measurement data. When setting up the schedule,
            you provide an S3 bucket location for the input data, assign it a delimiter between
            separate entries in the data, set an offset delay if desired, and set the frequency
            of inferencing. You must also provide an S3 bucket location for the output data.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateInferenceScheduler service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateInferenceScheduler service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ServiceQuotaExceededException">
            Resource limitations have been exceeded.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/CreateInferenceScheduler">REST API Reference for CreateInferenceScheduler Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.CreateModel(Amazon.LookoutEquipment.Model.CreateModelRequest)">
            <summary>
            Creates an ML model for data inference. 
            
             
            <para>
            A machine-learning (ML) model is a mathematical model that finds patterns in your
            data. In Amazon Lookout for Equipment, the model learns the patterns of normal behavior
            and detects abnormal behavior that could be potential equipment failure (or maintenance
            events). The models are made by analyzing normal data and abnormalities in machine
            behavior that have already occurred.
            </para>
             
            <para>
            Your model is trained using a portion of the data from your dataset and uses that
            data to learn patterns of normal behavior and abnormal patterns that lead to equipment
            failure. Another portion of the data is used to evaluate the model's accuracy. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateModel service method.</param>
            
            <returns>The response from the CreateModel service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ServiceQuotaExceededException">
            Resource limitations have been exceeded.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/CreateModel">REST API Reference for CreateModel Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.CreateModelAsync(Amazon.LookoutEquipment.Model.CreateModelRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an ML model for data inference. 
            
             
            <para>
            A machine-learning (ML) model is a mathematical model that finds patterns in your
            data. In Amazon Lookout for Equipment, the model learns the patterns of normal behavior
            and detects abnormal behavior that could be potential equipment failure (or maintenance
            events). The models are made by analyzing normal data and abnormalities in machine
            behavior that have already occurred.
            </para>
             
            <para>
            Your model is trained using a portion of the data from your dataset and uses that
            data to learn patterns of normal behavior and abnormal patterns that lead to equipment
            failure. Another portion of the data is used to evaluate the model's accuracy. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateModel service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateModel service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ServiceQuotaExceededException">
            Resource limitations have been exceeded.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/CreateModel">REST API Reference for CreateModel Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.DeleteDataset(Amazon.LookoutEquipment.Model.DeleteDatasetRequest)">
            <summary>
            Deletes a dataset and associated artifacts. The operation will check to see if any
            inference scheduler or data ingestion job is currently using the dataset, and if there
            isn't, the dataset, its metadata, and any associated data stored in S3 will be deleted.
            This does not affect any models that used this dataset for training and evaluation,
            but does prevent it from being used in the future.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDataset service method.</param>
            
            <returns>The response from the DeleteDataset service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/DeleteDataset">REST API Reference for DeleteDataset Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.DeleteDatasetAsync(Amazon.LookoutEquipment.Model.DeleteDatasetRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a dataset and associated artifacts. The operation will check to see if any
            inference scheduler or data ingestion job is currently using the dataset, and if there
            isn't, the dataset, its metadata, and any associated data stored in S3 will be deleted.
            This does not affect any models that used this dataset for training and evaluation,
            but does prevent it from being used in the future.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDataset service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteDataset service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/DeleteDataset">REST API Reference for DeleteDataset Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.DeleteInferenceScheduler(Amazon.LookoutEquipment.Model.DeleteInferenceSchedulerRequest)">
            <summary>
            Deletes an inference scheduler that has been set up. Already processed output results
            are not affected.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteInferenceScheduler service method.</param>
            
            <returns>The response from the DeleteInferenceScheduler service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/DeleteInferenceScheduler">REST API Reference for DeleteInferenceScheduler Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.DeleteInferenceSchedulerAsync(Amazon.LookoutEquipment.Model.DeleteInferenceSchedulerRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes an inference scheduler that has been set up. Already processed output results
            are not affected.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteInferenceScheduler service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteInferenceScheduler service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/DeleteInferenceScheduler">REST API Reference for DeleteInferenceScheduler Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.DeleteModel(Amazon.LookoutEquipment.Model.DeleteModelRequest)">
            <summary>
            Deletes an ML model currently available for Amazon Lookout for Equipment. This will
            prevent it from being used with an inference scheduler, even one that is already set
            up.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteModel service method.</param>
            
            <returns>The response from the DeleteModel service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/DeleteModel">REST API Reference for DeleteModel Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.DeleteModelAsync(Amazon.LookoutEquipment.Model.DeleteModelRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes an ML model currently available for Amazon Lookout for Equipment. This will
            prevent it from being used with an inference scheduler, even one that is already set
            up.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteModel service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteModel service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/DeleteModel">REST API Reference for DeleteModel Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.DescribeDataIngestionJob(Amazon.LookoutEquipment.Model.DescribeDataIngestionJobRequest)">
            <summary>
            Provides information on a specific data ingestion job such as creation time, dataset
            ARN, status, and so on.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDataIngestionJob service method.</param>
            
            <returns>The response from the DescribeDataIngestionJob service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/DescribeDataIngestionJob">REST API Reference for DescribeDataIngestionJob Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.DescribeDataIngestionJobAsync(Amazon.LookoutEquipment.Model.DescribeDataIngestionJobRequest,System.Threading.CancellationToken)">
            <summary>
            Provides information on a specific data ingestion job such as creation time, dataset
            ARN, status, and so on.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDataIngestionJob service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeDataIngestionJob service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/DescribeDataIngestionJob">REST API Reference for DescribeDataIngestionJob Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.DescribeDataset(Amazon.LookoutEquipment.Model.DescribeDatasetRequest)">
            <summary>
            Provides a JSON description of the data that is in each time series dataset, including
            names, column names, and data types.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDataset service method.</param>
            
            <returns>The response from the DescribeDataset service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/DescribeDataset">REST API Reference for DescribeDataset Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.DescribeDatasetAsync(Amazon.LookoutEquipment.Model.DescribeDatasetRequest,System.Threading.CancellationToken)">
            <summary>
            Provides a JSON description of the data that is in each time series dataset, including
            names, column names, and data types.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDataset service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeDataset service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/DescribeDataset">REST API Reference for DescribeDataset Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.DescribeInferenceScheduler(Amazon.LookoutEquipment.Model.DescribeInferenceSchedulerRequest)">
            <summary>
            Specifies information about the inference scheduler being used, including name, model,
            status, and associated metadata
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeInferenceScheduler service method.</param>
            
            <returns>The response from the DescribeInferenceScheduler service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/DescribeInferenceScheduler">REST API Reference for DescribeInferenceScheduler Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.DescribeInferenceSchedulerAsync(Amazon.LookoutEquipment.Model.DescribeInferenceSchedulerRequest,System.Threading.CancellationToken)">
            <summary>
            Specifies information about the inference scheduler being used, including name, model,
            status, and associated metadata
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeInferenceScheduler service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeInferenceScheduler service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/DescribeInferenceScheduler">REST API Reference for DescribeInferenceScheduler Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.DescribeModel(Amazon.LookoutEquipment.Model.DescribeModelRequest)">
            <summary>
            Provides a JSON containing the overall information about a specific ML model, including
            model name and ARN, dataset, training and evaluation information, status, and so on.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeModel service method.</param>
            
            <returns>The response from the DescribeModel service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/DescribeModel">REST API Reference for DescribeModel Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.DescribeModelAsync(Amazon.LookoutEquipment.Model.DescribeModelRequest,System.Threading.CancellationToken)">
            <summary>
            Provides a JSON containing the overall information about a specific ML model, including
            model name and ARN, dataset, training and evaluation information, status, and so on.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeModel service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeModel service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/DescribeModel">REST API Reference for DescribeModel Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.ListDataIngestionJobs(Amazon.LookoutEquipment.Model.ListDataIngestionJobsRequest)">
            <summary>
            Provides a list of all data ingestion jobs, including dataset name and ARN, S3 location
            of the input data, status, and so on.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListDataIngestionJobs service method.</param>
            
            <returns>The response from the ListDataIngestionJobs service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/ListDataIngestionJobs">REST API Reference for ListDataIngestionJobs Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.ListDataIngestionJobsAsync(Amazon.LookoutEquipment.Model.ListDataIngestionJobsRequest,System.Threading.CancellationToken)">
            <summary>
            Provides a list of all data ingestion jobs, including dataset name and ARN, S3 location
            of the input data, status, and so on.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListDataIngestionJobs service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListDataIngestionJobs service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/ListDataIngestionJobs">REST API Reference for ListDataIngestionJobs Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.ListDatasets(Amazon.LookoutEquipment.Model.ListDatasetsRequest)">
            <summary>
            Lists all datasets currently available in your account, filtering on the dataset name.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListDatasets service method.</param>
            
            <returns>The response from the ListDatasets service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/ListDatasets">REST API Reference for ListDatasets Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.ListDatasetsAsync(Amazon.LookoutEquipment.Model.ListDatasetsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all datasets currently available in your account, filtering on the dataset name.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListDatasets service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListDatasets service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/ListDatasets">REST API Reference for ListDatasets Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.ListInferenceExecutions(Amazon.LookoutEquipment.Model.ListInferenceExecutionsRequest)">
            <summary>
            Lists all inference executions that have been performed by the specified inference
            scheduler.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListInferenceExecutions service method.</param>
            
            <returns>The response from the ListInferenceExecutions service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/ListInferenceExecutions">REST API Reference for ListInferenceExecutions Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.ListInferenceExecutionsAsync(Amazon.LookoutEquipment.Model.ListInferenceExecutionsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all inference executions that have been performed by the specified inference
            scheduler.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListInferenceExecutions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListInferenceExecutions service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/ListInferenceExecutions">REST API Reference for ListInferenceExecutions Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.ListInferenceSchedulers(Amazon.LookoutEquipment.Model.ListInferenceSchedulersRequest)">
            <summary>
            Retrieves a list of all inference schedulers currently available for your account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListInferenceSchedulers service method.</param>
            
            <returns>The response from the ListInferenceSchedulers service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/ListInferenceSchedulers">REST API Reference for ListInferenceSchedulers Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.ListInferenceSchedulersAsync(Amazon.LookoutEquipment.Model.ListInferenceSchedulersRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of all inference schedulers currently available for your account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListInferenceSchedulers service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListInferenceSchedulers service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/ListInferenceSchedulers">REST API Reference for ListInferenceSchedulers Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.ListModels(Amazon.LookoutEquipment.Model.ListModelsRequest)">
            <summary>
            Generates a list of all models in the account, including model name and ARN, dataset,
            and status.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListModels service method.</param>
            
            <returns>The response from the ListModels service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/ListModels">REST API Reference for ListModels Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.ListModelsAsync(Amazon.LookoutEquipment.Model.ListModelsRequest,System.Threading.CancellationToken)">
            <summary>
            Generates a list of all models in the account, including model name and ARN, dataset,
            and status.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListModels service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListModels service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/ListModels">REST API Reference for ListModels Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.ListTagsForResource(Amazon.LookoutEquipment.Model.ListTagsForResourceRequest)">
            <summary>
            Lists all the tags for a specified resource, including key and value.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            
            <returns>The response from the ListTagsForResource service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.ListTagsForResourceAsync(Amazon.LookoutEquipment.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all the tags for a specified resource, including key and value.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.StartDataIngestionJob(Amazon.LookoutEquipment.Model.StartDataIngestionJobRequest)">
            <summary>
            Starts a data ingestion job. Amazon Lookout for Equipment returns the job status.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartDataIngestionJob service method.</param>
            
            <returns>The response from the StartDataIngestionJob service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ServiceQuotaExceededException">
            Resource limitations have been exceeded.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/StartDataIngestionJob">REST API Reference for StartDataIngestionJob Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.StartDataIngestionJobAsync(Amazon.LookoutEquipment.Model.StartDataIngestionJobRequest,System.Threading.CancellationToken)">
            <summary>
            Starts a data ingestion job. Amazon Lookout for Equipment returns the job status.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartDataIngestionJob service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartDataIngestionJob service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ServiceQuotaExceededException">
            Resource limitations have been exceeded.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/StartDataIngestionJob">REST API Reference for StartDataIngestionJob Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.StartInferenceScheduler(Amazon.LookoutEquipment.Model.StartInferenceSchedulerRequest)">
            <summary>
            Starts an inference scheduler.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartInferenceScheduler service method.</param>
            
            <returns>The response from the StartInferenceScheduler service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/StartInferenceScheduler">REST API Reference for StartInferenceScheduler Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.StartInferenceSchedulerAsync(Amazon.LookoutEquipment.Model.StartInferenceSchedulerRequest,System.Threading.CancellationToken)">
            <summary>
            Starts an inference scheduler.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartInferenceScheduler service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartInferenceScheduler service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/StartInferenceScheduler">REST API Reference for StartInferenceScheduler Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.StopInferenceScheduler(Amazon.LookoutEquipment.Model.StopInferenceSchedulerRequest)">
            <summary>
            Stops an inference scheduler.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StopInferenceScheduler service method.</param>
            
            <returns>The response from the StopInferenceScheduler service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/StopInferenceScheduler">REST API Reference for StopInferenceScheduler Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.StopInferenceSchedulerAsync(Amazon.LookoutEquipment.Model.StopInferenceSchedulerRequest,System.Threading.CancellationToken)">
            <summary>
            Stops an inference scheduler.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StopInferenceScheduler service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StopInferenceScheduler service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/StopInferenceScheduler">REST API Reference for StopInferenceScheduler Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.TagResource(Amazon.LookoutEquipment.Model.TagResourceRequest)">
            <summary>
            Associates a given tag to a resource in your account. A tag is a key-value pair which
            can be added to an Amazon Lookout for Equipment resource as metadata. Tags can be
            used for organizing your resources as well as helping you to search and filter by
            tag. Multiple tags can be added to a resource, either when you create it, or later.
            Up to 50 tags can be associated with each resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            
            <returns>The response from the TagResource service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ServiceQuotaExceededException">
            Resource limitations have been exceeded.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.TagResourceAsync(Amazon.LookoutEquipment.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Associates a given tag to a resource in your account. A tag is a key-value pair which
            can be added to an Amazon Lookout for Equipment resource as metadata. Tags can be
            used for organizing your resources as well as helping you to search and filter by
            tag. Multiple tags can be added to a resource, either when you create it, or later.
            Up to 50 tags can be associated with each resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ServiceQuotaExceededException">
            Resource limitations have been exceeded.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.UntagResource(Amazon.LookoutEquipment.Model.UntagResourceRequest)">
            <summary>
            Removes a specific tag from a given resource. The tag is specified by its key.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            
            <returns>The response from the UntagResource service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.UntagResourceAsync(Amazon.LookoutEquipment.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Removes a specific tag from a given resource. The tag is specified by its key.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.UpdateInferenceScheduler(Amazon.LookoutEquipment.Model.UpdateInferenceSchedulerRequest)">
            <summary>
            Updates an inference scheduler.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateInferenceScheduler service method.</param>
            
            <returns>The response from the UpdateInferenceScheduler service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/UpdateInferenceScheduler">REST API Reference for UpdateInferenceScheduler Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.AmazonLookoutEquipmentClient.UpdateInferenceSchedulerAsync(Amazon.LookoutEquipment.Model.UpdateInferenceSchedulerRequest,System.Threading.CancellationToken)">
            <summary>
            Updates an inference scheduler.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateInferenceScheduler service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateInferenceScheduler service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/UpdateInferenceScheduler">REST API Reference for UpdateInferenceScheduler Operation</seealso>
        </member>
        <member name="T:Amazon.LookoutEquipment.IAmazonLookoutEquipment">
             <summary>
             Interface for accessing LookoutEquipment
            
             Amazon Lookout for Equipment is a machine learning service that uses advanced analytics
             to identify anomalies in machines from sensor data for use in predictive maintenance.
             </summary>
        </member>
        <member name="P:Amazon.LookoutEquipment.IAmazonLookoutEquipment.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.CreateDataset(Amazon.LookoutEquipment.Model.CreateDatasetRequest)">
            <summary>
            Creates a container for a collection of data being ingested for analysis. The dataset
            contains the metadata describing where the data is and what the data actually looks
            like. In other words, it contains the location of the data source, the data schema,
            and other information. A dataset also contains any tags associated with the ingested
            data.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDataset service method.</param>
            
            <returns>The response from the CreateDataset service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ServiceQuotaExceededException">
            Resource limitations have been exceeded.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/CreateDataset">REST API Reference for CreateDataset Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.CreateDatasetAsync(Amazon.LookoutEquipment.Model.CreateDatasetRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a container for a collection of data being ingested for analysis. The dataset
            contains the metadata describing where the data is and what the data actually looks
            like. In other words, it contains the location of the data source, the data schema,
            and other information. A dataset also contains any tags associated with the ingested
            data.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDataset service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateDataset service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ServiceQuotaExceededException">
            Resource limitations have been exceeded.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/CreateDataset">REST API Reference for CreateDataset Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.CreateInferenceScheduler(Amazon.LookoutEquipment.Model.CreateInferenceSchedulerRequest)">
            <summary>
            Creates a scheduled inference. Scheduling an inference is setting up a continuous
            real-time inference plan to analyze new measurement data. When setting up the schedule,
            you provide an S3 bucket location for the input data, assign it a delimiter between
            separate entries in the data, set an offset delay if desired, and set the frequency
            of inferencing. You must also provide an S3 bucket location for the output data.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateInferenceScheduler service method.</param>
            
            <returns>The response from the CreateInferenceScheduler service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ServiceQuotaExceededException">
            Resource limitations have been exceeded.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/CreateInferenceScheduler">REST API Reference for CreateInferenceScheduler Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.CreateInferenceSchedulerAsync(Amazon.LookoutEquipment.Model.CreateInferenceSchedulerRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a scheduled inference. Scheduling an inference is setting up a continuous
            real-time inference plan to analyze new measurement data. When setting up the schedule,
            you provide an S3 bucket location for the input data, assign it a delimiter between
            separate entries in the data, set an offset delay if desired, and set the frequency
            of inferencing. You must also provide an S3 bucket location for the output data.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateInferenceScheduler service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateInferenceScheduler service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ServiceQuotaExceededException">
            Resource limitations have been exceeded.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/CreateInferenceScheduler">REST API Reference for CreateInferenceScheduler Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.CreateModel(Amazon.LookoutEquipment.Model.CreateModelRequest)">
            <summary>
            Creates an ML model for data inference. 
            
             
            <para>
            A machine-learning (ML) model is a mathematical model that finds patterns in your
            data. In Amazon Lookout for Equipment, the model learns the patterns of normal behavior
            and detects abnormal behavior that could be potential equipment failure (or maintenance
            events). The models are made by analyzing normal data and abnormalities in machine
            behavior that have already occurred.
            </para>
             
            <para>
            Your model is trained using a portion of the data from your dataset and uses that
            data to learn patterns of normal behavior and abnormal patterns that lead to equipment
            failure. Another portion of the data is used to evaluate the model's accuracy. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateModel service method.</param>
            
            <returns>The response from the CreateModel service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ServiceQuotaExceededException">
            Resource limitations have been exceeded.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/CreateModel">REST API Reference for CreateModel Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.CreateModelAsync(Amazon.LookoutEquipment.Model.CreateModelRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an ML model for data inference. 
            
             
            <para>
            A machine-learning (ML) model is a mathematical model that finds patterns in your
            data. In Amazon Lookout for Equipment, the model learns the patterns of normal behavior
            and detects abnormal behavior that could be potential equipment failure (or maintenance
            events). The models are made by analyzing normal data and abnormalities in machine
            behavior that have already occurred.
            </para>
             
            <para>
            Your model is trained using a portion of the data from your dataset and uses that
            data to learn patterns of normal behavior and abnormal patterns that lead to equipment
            failure. Another portion of the data is used to evaluate the model's accuracy. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateModel service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateModel service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ServiceQuotaExceededException">
            Resource limitations have been exceeded.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/CreateModel">REST API Reference for CreateModel Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.DeleteDataset(Amazon.LookoutEquipment.Model.DeleteDatasetRequest)">
            <summary>
            Deletes a dataset and associated artifacts. The operation will check to see if any
            inference scheduler or data ingestion job is currently using the dataset, and if there
            isn't, the dataset, its metadata, and any associated data stored in S3 will be deleted.
            This does not affect any models that used this dataset for training and evaluation,
            but does prevent it from being used in the future.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDataset service method.</param>
            
            <returns>The response from the DeleteDataset service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/DeleteDataset">REST API Reference for DeleteDataset Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.DeleteDatasetAsync(Amazon.LookoutEquipment.Model.DeleteDatasetRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a dataset and associated artifacts. The operation will check to see if any
            inference scheduler or data ingestion job is currently using the dataset, and if there
            isn't, the dataset, its metadata, and any associated data stored in S3 will be deleted.
            This does not affect any models that used this dataset for training and evaluation,
            but does prevent it from being used in the future.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDataset service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteDataset service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/DeleteDataset">REST API Reference for DeleteDataset Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.DeleteInferenceScheduler(Amazon.LookoutEquipment.Model.DeleteInferenceSchedulerRequest)">
            <summary>
            Deletes an inference scheduler that has been set up. Already processed output results
            are not affected.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteInferenceScheduler service method.</param>
            
            <returns>The response from the DeleteInferenceScheduler service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/DeleteInferenceScheduler">REST API Reference for DeleteInferenceScheduler Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.DeleteInferenceSchedulerAsync(Amazon.LookoutEquipment.Model.DeleteInferenceSchedulerRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes an inference scheduler that has been set up. Already processed output results
            are not affected.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteInferenceScheduler service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteInferenceScheduler service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/DeleteInferenceScheduler">REST API Reference for DeleteInferenceScheduler Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.DeleteModel(Amazon.LookoutEquipment.Model.DeleteModelRequest)">
            <summary>
            Deletes an ML model currently available for Amazon Lookout for Equipment. This will
            prevent it from being used with an inference scheduler, even one that is already set
            up.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteModel service method.</param>
            
            <returns>The response from the DeleteModel service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/DeleteModel">REST API Reference for DeleteModel Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.DeleteModelAsync(Amazon.LookoutEquipment.Model.DeleteModelRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes an ML model currently available for Amazon Lookout for Equipment. This will
            prevent it from being used with an inference scheduler, even one that is already set
            up.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteModel service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteModel service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/DeleteModel">REST API Reference for DeleteModel Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.DescribeDataIngestionJob(Amazon.LookoutEquipment.Model.DescribeDataIngestionJobRequest)">
            <summary>
            Provides information on a specific data ingestion job such as creation time, dataset
            ARN, status, and so on.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDataIngestionJob service method.</param>
            
            <returns>The response from the DescribeDataIngestionJob service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/DescribeDataIngestionJob">REST API Reference for DescribeDataIngestionJob Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.DescribeDataIngestionJobAsync(Amazon.LookoutEquipment.Model.DescribeDataIngestionJobRequest,System.Threading.CancellationToken)">
            <summary>
            Provides information on a specific data ingestion job such as creation time, dataset
            ARN, status, and so on.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDataIngestionJob service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeDataIngestionJob service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/DescribeDataIngestionJob">REST API Reference for DescribeDataIngestionJob Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.DescribeDataset(Amazon.LookoutEquipment.Model.DescribeDatasetRequest)">
            <summary>
            Provides a JSON description of the data that is in each time series dataset, including
            names, column names, and data types.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDataset service method.</param>
            
            <returns>The response from the DescribeDataset service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/DescribeDataset">REST API Reference for DescribeDataset Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.DescribeDatasetAsync(Amazon.LookoutEquipment.Model.DescribeDatasetRequest,System.Threading.CancellationToken)">
            <summary>
            Provides a JSON description of the data that is in each time series dataset, including
            names, column names, and data types.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDataset service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeDataset service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/DescribeDataset">REST API Reference for DescribeDataset Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.DescribeInferenceScheduler(Amazon.LookoutEquipment.Model.DescribeInferenceSchedulerRequest)">
            <summary>
            Specifies information about the inference scheduler being used, including name, model,
            status, and associated metadata
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeInferenceScheduler service method.</param>
            
            <returns>The response from the DescribeInferenceScheduler service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/DescribeInferenceScheduler">REST API Reference for DescribeInferenceScheduler Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.DescribeInferenceSchedulerAsync(Amazon.LookoutEquipment.Model.DescribeInferenceSchedulerRequest,System.Threading.CancellationToken)">
            <summary>
            Specifies information about the inference scheduler being used, including name, model,
            status, and associated metadata
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeInferenceScheduler service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeInferenceScheduler service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/DescribeInferenceScheduler">REST API Reference for DescribeInferenceScheduler Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.DescribeModel(Amazon.LookoutEquipment.Model.DescribeModelRequest)">
            <summary>
            Provides a JSON containing the overall information about a specific ML model, including
            model name and ARN, dataset, training and evaluation information, status, and so on.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeModel service method.</param>
            
            <returns>The response from the DescribeModel service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/DescribeModel">REST API Reference for DescribeModel Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.DescribeModelAsync(Amazon.LookoutEquipment.Model.DescribeModelRequest,System.Threading.CancellationToken)">
            <summary>
            Provides a JSON containing the overall information about a specific ML model, including
            model name and ARN, dataset, training and evaluation information, status, and so on.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeModel service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeModel service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/DescribeModel">REST API Reference for DescribeModel Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.ListDataIngestionJobs(Amazon.LookoutEquipment.Model.ListDataIngestionJobsRequest)">
            <summary>
            Provides a list of all data ingestion jobs, including dataset name and ARN, S3 location
            of the input data, status, and so on.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListDataIngestionJobs service method.</param>
            
            <returns>The response from the ListDataIngestionJobs service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/ListDataIngestionJobs">REST API Reference for ListDataIngestionJobs Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.ListDataIngestionJobsAsync(Amazon.LookoutEquipment.Model.ListDataIngestionJobsRequest,System.Threading.CancellationToken)">
            <summary>
            Provides a list of all data ingestion jobs, including dataset name and ARN, S3 location
            of the input data, status, and so on.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListDataIngestionJobs service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListDataIngestionJobs service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/ListDataIngestionJobs">REST API Reference for ListDataIngestionJobs Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.ListDatasets(Amazon.LookoutEquipment.Model.ListDatasetsRequest)">
            <summary>
            Lists all datasets currently available in your account, filtering on the dataset name.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListDatasets service method.</param>
            
            <returns>The response from the ListDatasets service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/ListDatasets">REST API Reference for ListDatasets Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.ListDatasetsAsync(Amazon.LookoutEquipment.Model.ListDatasetsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all datasets currently available in your account, filtering on the dataset name.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListDatasets service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListDatasets service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/ListDatasets">REST API Reference for ListDatasets Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.ListInferenceExecutions(Amazon.LookoutEquipment.Model.ListInferenceExecutionsRequest)">
            <summary>
            Lists all inference executions that have been performed by the specified inference
            scheduler.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListInferenceExecutions service method.</param>
            
            <returns>The response from the ListInferenceExecutions service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/ListInferenceExecutions">REST API Reference for ListInferenceExecutions Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.ListInferenceExecutionsAsync(Amazon.LookoutEquipment.Model.ListInferenceExecutionsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all inference executions that have been performed by the specified inference
            scheduler.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListInferenceExecutions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListInferenceExecutions service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/ListInferenceExecutions">REST API Reference for ListInferenceExecutions Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.ListInferenceSchedulers(Amazon.LookoutEquipment.Model.ListInferenceSchedulersRequest)">
            <summary>
            Retrieves a list of all inference schedulers currently available for your account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListInferenceSchedulers service method.</param>
            
            <returns>The response from the ListInferenceSchedulers service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/ListInferenceSchedulers">REST API Reference for ListInferenceSchedulers Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.ListInferenceSchedulersAsync(Amazon.LookoutEquipment.Model.ListInferenceSchedulersRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of all inference schedulers currently available for your account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListInferenceSchedulers service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListInferenceSchedulers service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/ListInferenceSchedulers">REST API Reference for ListInferenceSchedulers Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.ListModels(Amazon.LookoutEquipment.Model.ListModelsRequest)">
            <summary>
            Generates a list of all models in the account, including model name and ARN, dataset,
            and status.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListModels service method.</param>
            
            <returns>The response from the ListModels service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/ListModels">REST API Reference for ListModels Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.ListModelsAsync(Amazon.LookoutEquipment.Model.ListModelsRequest,System.Threading.CancellationToken)">
            <summary>
            Generates a list of all models in the account, including model name and ARN, dataset,
            and status.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListModels service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListModels service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/ListModels">REST API Reference for ListModels Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.ListTagsForResource(Amazon.LookoutEquipment.Model.ListTagsForResourceRequest)">
            <summary>
            Lists all the tags for a specified resource, including key and value.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            
            <returns>The response from the ListTagsForResource service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.ListTagsForResourceAsync(Amazon.LookoutEquipment.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all the tags for a specified resource, including key and value.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.StartDataIngestionJob(Amazon.LookoutEquipment.Model.StartDataIngestionJobRequest)">
            <summary>
            Starts a data ingestion job. Amazon Lookout for Equipment returns the job status.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartDataIngestionJob service method.</param>
            
            <returns>The response from the StartDataIngestionJob service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ServiceQuotaExceededException">
            Resource limitations have been exceeded.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/StartDataIngestionJob">REST API Reference for StartDataIngestionJob Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.StartDataIngestionJobAsync(Amazon.LookoutEquipment.Model.StartDataIngestionJobRequest,System.Threading.CancellationToken)">
            <summary>
            Starts a data ingestion job. Amazon Lookout for Equipment returns the job status.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartDataIngestionJob service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartDataIngestionJob service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ServiceQuotaExceededException">
            Resource limitations have been exceeded.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/StartDataIngestionJob">REST API Reference for StartDataIngestionJob Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.StartInferenceScheduler(Amazon.LookoutEquipment.Model.StartInferenceSchedulerRequest)">
            <summary>
            Starts an inference scheduler.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartInferenceScheduler service method.</param>
            
            <returns>The response from the StartInferenceScheduler service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/StartInferenceScheduler">REST API Reference for StartInferenceScheduler Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.StartInferenceSchedulerAsync(Amazon.LookoutEquipment.Model.StartInferenceSchedulerRequest,System.Threading.CancellationToken)">
            <summary>
            Starts an inference scheduler.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartInferenceScheduler service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartInferenceScheduler service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/StartInferenceScheduler">REST API Reference for StartInferenceScheduler Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.StopInferenceScheduler(Amazon.LookoutEquipment.Model.StopInferenceSchedulerRequest)">
            <summary>
            Stops an inference scheduler.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StopInferenceScheduler service method.</param>
            
            <returns>The response from the StopInferenceScheduler service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/StopInferenceScheduler">REST API Reference for StopInferenceScheduler Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.StopInferenceSchedulerAsync(Amazon.LookoutEquipment.Model.StopInferenceSchedulerRequest,System.Threading.CancellationToken)">
            <summary>
            Stops an inference scheduler.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StopInferenceScheduler service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StopInferenceScheduler service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/StopInferenceScheduler">REST API Reference for StopInferenceScheduler Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.TagResource(Amazon.LookoutEquipment.Model.TagResourceRequest)">
            <summary>
            Associates a given tag to a resource in your account. A tag is a key-value pair which
            can be added to an Amazon Lookout for Equipment resource as metadata. Tags can be
            used for organizing your resources as well as helping you to search and filter by
            tag. Multiple tags can be added to a resource, either when you create it, or later.
            Up to 50 tags can be associated with each resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            
            <returns>The response from the TagResource service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ServiceQuotaExceededException">
            Resource limitations have been exceeded.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.TagResourceAsync(Amazon.LookoutEquipment.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Associates a given tag to a resource in your account. A tag is a key-value pair which
            can be added to an Amazon Lookout for Equipment resource as metadata. Tags can be
            used for organizing your resources as well as helping you to search and filter by
            tag. Multiple tags can be added to a resource, either when you create it, or later.
            Up to 50 tags can be associated with each resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ServiceQuotaExceededException">
            Resource limitations have been exceeded.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.UntagResource(Amazon.LookoutEquipment.Model.UntagResourceRequest)">
            <summary>
            Removes a specific tag from a given resource. The tag is specified by its key.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            
            <returns>The response from the UntagResource service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.UntagResourceAsync(Amazon.LookoutEquipment.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Removes a specific tag from a given resource. The tag is specified by its key.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.UpdateInferenceScheduler(Amazon.LookoutEquipment.Model.UpdateInferenceSchedulerRequest)">
            <summary>
            Updates an inference scheduler.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateInferenceScheduler service method.</param>
            
            <returns>The response from the UpdateInferenceScheduler service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/UpdateInferenceScheduler">REST API Reference for UpdateInferenceScheduler Operation</seealso>
        </member>
        <member name="M:Amazon.LookoutEquipment.IAmazonLookoutEquipment.UpdateInferenceSchedulerAsync(Amazon.LookoutEquipment.Model.UpdateInferenceSchedulerRequest,System.Threading.CancellationToken)">
            <summary>
            Updates an inference scheduler.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateInferenceScheduler service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateInferenceScheduler service method, as returned by LookoutEquipment.</returns>
            <exception cref="T:Amazon.LookoutEquipment.Model.AccessDeniedException">
            The request could not be completed because you do not have access to the resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ConflictException">
            The request could not be completed due to a conflict with the current state of the
            target resource.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.InternalServerException">
            Processing of the request has failed because of an unknown error, exception or failure.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ResourceNotFoundException">
            The resource requested could not be found. Verify the resource ID and retry your
            request.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.LookoutEquipment.Model.ValidationException">
            The input fails to satisfy constraints specified by Amazon Lookout for Equipment
            or a related AWS service that's being utilized.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lookoutequipment-2020-12-15/UpdateInferenceScheduler">REST API Reference for UpdateInferenceScheduler Operation</seealso>
        </member>
    </members>
</doc>
