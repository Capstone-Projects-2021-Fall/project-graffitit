<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.SnowDeviceManagement</name>
    </assembly>
    <members>
        <member name="T:Amazon.SnowDeviceManagement.AmazonSnowDeviceManagementConfig">
            <summary>
            Configuration for accessing Amazon SnowDeviceManagement service
            </summary>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.AmazonSnowDeviceManagementConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.AmazonSnowDeviceManagementConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.AmazonSnowDeviceManagementConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.AmazonSnowDeviceManagementConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.SnowDeviceManagement.AmazonSnowDeviceManagementException">
            <summary>
             Common exception for the SnowDeviceManagement service.
             </summary>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.AmazonSnowDeviceManagementException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonSnowDeviceManagementException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.AmazonSnowDeviceManagementException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonSnowDeviceManagementException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.AmazonSnowDeviceManagementException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonSnowDeviceManagementException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.AmazonSnowDeviceManagementException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonSnowDeviceManagementException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.AmazonSnowDeviceManagementException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonSnowDeviceManagementException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.AmazonSnowDeviceManagementException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the AmazonSnowDeviceManagementException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Internal.AmazonSnowDeviceManagementMetadata">
            <summary>
            Service metadata for  Amazon SnowDeviceManagement service
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Internal.AmazonSnowDeviceManagementMetadata.ServiceId">
            <summary>
            Gets the value of the Service Id.
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Internal.AmazonSnowDeviceManagementMetadata.OperationNameMapping">
            <summary>
            Gets the dictionary that gives mapping of renamed operations
            </summary>
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.AccessDeniedException">
            <summary>
            You don't have sufficient access to perform this action.
            </summary>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.AccessDeniedException.#ctor(System.String)">
            <summary>
            Constructs a new AccessDeniedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.AccessDeniedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.AccessDeniedException.#ctor(System.Exception)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.AccessDeniedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.AccessDeniedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.AccessDeniedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the AccessDeniedException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.AccessDeniedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.CancelTaskRequest">
            <summary>
            Container for the parameters to the CancelTask operation.
            Sends a cancel request for a specified task. You can cancel a task only if it's still
            in a <code>QUEUED</code> state. Tasks that are already running can't be cancelled.
            
             <note> 
            <para>
            A task might still run if it's processed from the queue before the <code>CancelTask</code>
            operation changes the task's state.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.CancelTaskRequest.TaskId">
            <summary>
            Gets and sets the property TaskId. 
            <para>
            The ID of the task that you are attempting to cancel. You can retrieve a task ID by
            using the <code>ListTasks</code> operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.CancelTaskResponse">
            <summary>
            This is the response object from the CancelTask operation.
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.CancelTaskResponse.TaskId">
            <summary>
            Gets and sets the property TaskId. 
            <para>
            The ID of the task that you are attempting to cancel.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.Capacity">
            <summary>
            The physical capacity of the Amazon Web Services Snow Family device.
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.Capacity.Available">
            <summary>
            Gets and sets the property Available. 
            <para>
            The amount of capacity available for use on the device.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.Capacity.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the type of capacity, such as memory.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.Capacity.Total">
            <summary>
            Gets and sets the property Total. 
            <para>
            The total capacity on the device.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.Capacity.Unit">
            <summary>
            Gets and sets the property Unit. 
            <para>
            The unit of measure for the type of capacity.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.Capacity.Used">
            <summary>
            Gets and sets the property Used. 
            <para>
            The amount of capacity used on the device.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.Command">
            <summary>
            The command given to the device to execute.
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.Command.Reboot">
            <summary>
            Gets and sets the property Reboot. 
            <para>
            Reboots the device.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.Command.Unlock">
            <summary>
            Gets and sets the property Unlock. 
            <para>
            Unlocks the device.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.CpuOptions">
            <summary>
            The options for how a device's CPU is configured.
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.CpuOptions.CoreCount">
            <summary>
            Gets and sets the property CoreCount. 
            <para>
            The number of cores that the CPU can use.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.CpuOptions.ThreadsPerCore">
            <summary>
            Gets and sets the property ThreadsPerCore. 
            <para>
            The number of threads per core in the CPU.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.CreateTaskRequest">
            <summary>
            Container for the parameters to the CreateTask operation.
            Instructs one or more devices to start a task, such as unlocking or rebooting.
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.CreateTaskRequest.ClientToken">
            <summary>
            Gets and sets the property ClientToken. 
            <para>
            A token ensuring that the action is called only once with the specified details.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.CreateTaskRequest.Command">
            <summary>
            Gets and sets the property Command. 
            <para>
            The task to be performed. Only one task is executed on a device at a time.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.CreateTaskRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the task and its targets.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.CreateTaskRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Optional metadata that you assign to a resource. You can use tags to categorize a
            resource in different ways, such as by purpose, owner, or environment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.CreateTaskRequest.Targets">
            <summary>
            Gets and sets the property Targets. 
            <para>
            A list of managed device IDs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.CreateTaskResponse">
            <summary>
            This is the response object from the CreateTask operation.
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.CreateTaskResponse.TaskArn">
            <summary>
            Gets and sets the property TaskArn. 
            <para>
            The Amazon Resource Name (ARN) of the task that you created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.CreateTaskResponse.TaskId">
            <summary>
            Gets and sets the property TaskId. 
            <para>
            The ID of the task that you created.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.DescribeDeviceEc2InstancesRequest">
            <summary>
            Container for the parameters to the DescribeDeviceEc2Instances operation.
            Checks the current state of the Amazon EC2 instances. The output is similar to <code>describeDevice</code>,
            but the results are sourced from the device cache in the Amazon Web Services Cloud
            and include a subset of the available fields.
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.DescribeDeviceEc2InstancesRequest.InstanceIds">
            <summary>
            Gets and sets the property InstanceIds. 
            <para>
            A list of instance IDs associated with the managed device.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.DescribeDeviceEc2InstancesRequest.ManagedDeviceId">
            <summary>
            Gets and sets the property ManagedDeviceId. 
            <para>
            The ID of the managed device.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.DescribeDeviceEc2InstancesResponse">
            <summary>
            This is the response object from the DescribeDeviceEc2Instances operation.
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.DescribeDeviceEc2InstancesResponse.Instances">
            <summary>
            Gets and sets the property Instances. 
            <para>
            A list of structures containing information about each instance. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.DescribeDeviceRequest">
            <summary>
            Container for the parameters to the DescribeDevice operation.
            Checks device-specific information, such as the device type, software version, IP
            addresses, and lock status.
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.DescribeDeviceRequest.ManagedDeviceId">
            <summary>
            Gets and sets the property ManagedDeviceId. 
            <para>
            The ID of the device that you are checking the information of.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.DescribeDeviceResponse">
            <summary>
            This is the response object from the DescribeDevice operation.
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.DescribeDeviceResponse.AssociatedWithJob">
            <summary>
            Gets and sets the property AssociatedWithJob. 
            <para>
            The ID of the job used when ordering the device.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.DescribeDeviceResponse.DeviceCapacities">
            <summary>
            Gets and sets the property DeviceCapacities. 
            <para>
            The hardware specifications of the device. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.DescribeDeviceResponse.DeviceState">
            <summary>
            Gets and sets the property DeviceState. 
            <para>
            The current state of the device.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.DescribeDeviceResponse.DeviceType">
            <summary>
            Gets and sets the property DeviceType. 
            <para>
            The type of Amazon Web Services Snow Family device.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.DescribeDeviceResponse.LastReachedOutAt">
            <summary>
            Gets and sets the property LastReachedOutAt. 
            <para>
            When the device last contacted the Amazon Web Services Cloud. Indicates that the device
            is online.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.DescribeDeviceResponse.LastUpdatedAt">
            <summary>
            Gets and sets the property LastUpdatedAt. 
            <para>
            When the device last pushed an update to the Amazon Web Services Cloud. Indicates
            when the device cache was refreshed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.DescribeDeviceResponse.ManagedDeviceArn">
            <summary>
            Gets and sets the property ManagedDeviceArn. 
            <para>
            The Amazon Resource Name (ARN) of the device.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.DescribeDeviceResponse.ManagedDeviceId">
            <summary>
            Gets and sets the property ManagedDeviceId. 
            <para>
            The ID of the device that you checked the information for.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.DescribeDeviceResponse.PhysicalNetworkInterfaces">
            <summary>
            Gets and sets the property PhysicalNetworkInterfaces. 
            <para>
            The network interfaces available on the device.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.DescribeDeviceResponse.Software">
            <summary>
            Gets and sets the property Software. 
            <para>
            The software installed on the device.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.DescribeDeviceResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Optional metadata that you assign to a resource. You can use tags to categorize a
            resource in different ways, such as by purpose, owner, or environment. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.DescribeExecutionRequest">
            <summary>
            Container for the parameters to the DescribeExecution operation.
            Checks the status of a remote task running on one or more target devices.
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.DescribeExecutionRequest.ManagedDeviceId">
            <summary>
            Gets and sets the property ManagedDeviceId. 
            <para>
            The ID of the managed device.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.DescribeExecutionRequest.TaskId">
            <summary>
            Gets and sets the property TaskId. 
            <para>
            The ID of the task that the action is describing.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.DescribeExecutionResponse">
            <summary>
            This is the response object from the DescribeExecution operation.
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.DescribeExecutionResponse.ExecutionId">
            <summary>
            Gets and sets the property ExecutionId. 
            <para>
            The ID of the execution.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.DescribeExecutionResponse.LastUpdatedAt">
            <summary>
            Gets and sets the property LastUpdatedAt. 
            <para>
            When the status of the execution was last updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.DescribeExecutionResponse.ManagedDeviceId">
            <summary>
            Gets and sets the property ManagedDeviceId. 
            <para>
            The ID of the managed device that the task is being executed on.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.DescribeExecutionResponse.StartedAt">
            <summary>
            Gets and sets the property StartedAt. 
            <para>
            When the execution began.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.DescribeExecutionResponse.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The current state of the execution.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.DescribeExecutionResponse.TaskId">
            <summary>
            Gets and sets the property TaskId. 
            <para>
            The ID of the task being executed on the device.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.DescribeTaskRequest">
            <summary>
            Container for the parameters to the DescribeTask operation.
            Checks the metadata for a given task on a device.
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.DescribeTaskRequest.TaskId">
            <summary>
            Gets and sets the property TaskId. 
            <para>
            The ID of the task to be described.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.DescribeTaskResponse">
            <summary>
            This is the response object from the DescribeTask operation.
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.DescribeTaskResponse.CompletedAt">
            <summary>
            Gets and sets the property CompletedAt. 
            <para>
            When the task was completed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.DescribeTaskResponse.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            When the <code>CreateTask</code> operation was called.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.DescribeTaskResponse.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The description provided of the task and managed devices.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.DescribeTaskResponse.LastUpdatedAt">
            <summary>
            Gets and sets the property LastUpdatedAt. 
            <para>
            When the state of the task was last updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.DescribeTaskResponse.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The current state of the task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.DescribeTaskResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Optional metadata that you assign to a resource. You can use tags to categorize a
            resource in different ways, such as by purpose, owner, or environment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.DescribeTaskResponse.Targets">
            <summary>
            Gets and sets the property Targets. 
            <para>
            The managed devices that the task was sent to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.DescribeTaskResponse.TaskArn">
            <summary>
            Gets and sets the property TaskArn. 
            <para>
            The Amazon Resource Name (ARN) of the task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.DescribeTaskResponse.TaskId">
            <summary>
            Gets and sets the property TaskId. 
            <para>
            The ID of the task.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.DeviceSummary">
            <summary>
            Identifying information about the device.
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.DeviceSummary.AssociatedWithJob">
            <summary>
            Gets and sets the property AssociatedWithJob. 
            <para>
            The ID of the job used to order the device.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.DeviceSummary.ManagedDeviceArn">
            <summary>
            Gets and sets the property ManagedDeviceArn. 
            <para>
            The Amazon Resource Name (ARN) of the device.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.DeviceSummary.ManagedDeviceId">
            <summary>
            Gets and sets the property ManagedDeviceId. 
            <para>
            The ID of the device.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.DeviceSummary.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Optional metadata that you assign to a resource. You can use tags to categorize a
            resource in different ways, such as by purpose, owner, or environment.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.EbsInstanceBlockDevice">
            <summary>
            Describes a parameter used to set up an Amazon Elastic Block Store (Amazon EBS) volume
            in a block device mapping.
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.EbsInstanceBlockDevice.AttachTime">
            <summary>
            Gets and sets the property AttachTime. 
            <para>
            When the attachment was initiated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.EbsInstanceBlockDevice.DeleteOnTermination">
            <summary>
            Gets and sets the property DeleteOnTermination. 
            <para>
            A value that indicates whether the volume is deleted on instance termination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.EbsInstanceBlockDevice.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The attachment state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.EbsInstanceBlockDevice.VolumeId">
            <summary>
            Gets and sets the property VolumeId. 
            <para>
            The ID of the Amazon EBS volume.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.ExecutionSummary">
            <summary>
            The summary of a task execution on a specified device.
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.ExecutionSummary.ExecutionId">
            <summary>
            Gets and sets the property ExecutionId. 
            <para>
            The ID of the execution.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.ExecutionSummary.ManagedDeviceId">
            <summary>
            Gets and sets the property ManagedDeviceId. 
            <para>
            The ID of the managed device that the task is being executed on.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.ExecutionSummary.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The state of the execution.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.ExecutionSummary.TaskId">
            <summary>
            Gets and sets the property TaskId. 
            <para>
            The ID of the task.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.Instance">
            <summary>
            The description of an instance. Currently, Amazon EC2 instances are the only supported
            instance type.
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.Instance.AmiLaunchIndex">
            <summary>
            Gets and sets the property AmiLaunchIndex. 
            <para>
            The Amazon Machine Image (AMI) launch index, which you can use to find this instance
            in the launch group. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.Instance.BlockDeviceMappings">
            <summary>
            Gets and sets the property BlockDeviceMappings. 
            <para>
            Any block device mapping entries for the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.Instance.CpuOptions">
            <summary>
            Gets and sets the property CpuOptions. 
            <para>
            The CPU options for the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.Instance.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            When the instance was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.Instance.ImageId">
            <summary>
            Gets and sets the property ImageId. 
            <para>
            The ID of the AMI used to launch the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.Instance.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.Instance.InstanceType">
            <summary>
            Gets and sets the property InstanceType. 
            <para>
            The instance type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.Instance.PrivateIpAddress">
            <summary>
            Gets and sets the property PrivateIpAddress. 
            <para>
            The private IPv4 address assigned to the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.Instance.PublicIpAddress">
            <summary>
            Gets and sets the property PublicIpAddress. 
            <para>
            The public IPv4 address assigned to the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.Instance.RootDeviceName">
            <summary>
            Gets and sets the property RootDeviceName. 
            <para>
            The device name of the root device volume (for example, <code>/dev/sda1</code>). 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.Instance.SecurityGroups">
            <summary>
            Gets and sets the property SecurityGroups. 
            <para>
            The security groups for the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.Instance.State">
            <summary>
            Gets and sets the property State.
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.Instance.UpdatedAt">
            <summary>
            Gets and sets the property UpdatedAt. 
            <para>
            When the instance was last updated.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.InstanceBlockDeviceMapping">
            <summary>
            The description of a block device mapping.
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.InstanceBlockDeviceMapping.DeviceName">
            <summary>
            Gets and sets the property DeviceName. 
            <para>
            The block device name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.InstanceBlockDeviceMapping.Ebs">
            <summary>
            Gets and sets the property Ebs. 
            <para>
            The parameters used to automatically set up Amazon Elastic Block Store (Amazon EBS)
            volumes when the instance is launched. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.InstanceState">
            <summary>
            The description of the current state of an instance.
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.InstanceState.Code">
            <summary>
            Gets and sets the property Code. 
            <para>
            The state of the instance as a 16-bit unsigned integer. 
            </para>
             
            <para>
            The high byte is all of the bits between 2^8 and (2^16)-1, which equals decimal values
            between 256 and 65,535. These numerical values are used for internal purposes and
            should be ignored. 
            </para>
             
            <para>
            The low byte is all of the bits between 2^0 and (2^8)-1, which equals decimal values
            between 0 and 255. 
            </para>
             
            <para>
            The valid values for the instance state code are all in the range of the low byte.
            These values are: 
            </para>
             <ul> <li> 
            <para>
             <code>0</code> : <code>pending</code> 
            </para>
             </li> <li> 
            <para>
             <code>16</code> : <code>running</code> 
            </para>
             </li> <li> 
            <para>
             <code>32</code> : <code>shutting-down</code> 
            </para>
             </li> <li> 
            <para>
             <code>48</code> : <code>terminated</code> 
            </para>
             </li> <li> 
            <para>
             <code>64</code> : <code>stopping</code> 
            </para>
             </li> <li> 
            <para>
             <code>80</code> : <code>stopped</code> 
            </para>
             </li> </ul> 
            <para>
            You can ignore the high byte value by zeroing out all of the bits above 2^8 or 256
            in decimal. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.InstanceState.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The current state of the instance.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.InstanceSummary">
            <summary>
            The details about the instance.
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.InstanceSummary.Instance">
            <summary>
            Gets and sets the property Instance. 
            <para>
            A structure containing details about the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.InstanceSummary.LastUpdatedAt">
            <summary>
            Gets and sets the property LastUpdatedAt. 
            <para>
            When the instance summary was last updated.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.InternalServerException">
            <summary>
            An unexpected error occurred while processing the request.
            </summary>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.InternalServerException.#ctor(System.String)">
            <summary>
            Constructs a new InternalServerException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.InternalServerException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.InternalServerException.#ctor(System.Exception)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.InternalServerException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.InternalServerException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.InternalServerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InternalServerException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.InternalServerException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.InternalServerException.Retryable">
            <summary>
            Flag indicating if the exception is retryable and the associated retry
            details. A null value indicates that the exception is not retryable.
            </summary>
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for AccessDeniedException Object
            </summary>  
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.CancelTaskRequestMarshaller">
            <summary>
            CancelTask Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.CancelTaskRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.CancelTaskRequestMarshaller.Marshall(Amazon.SnowDeviceManagement.Model.CancelTaskRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.CancelTaskRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.CancelTaskResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CancelTask operation
            </summary>  
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.CancelTaskResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.CancelTaskResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.CancelTaskResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.CapacityUnmarshaller">
            <summary>
            Response Unmarshaller for Capacity Object
            </summary>  
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.CapacityUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SnowDeviceManagement#Model#Capacity,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.CapacityUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.CapacityUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.CommandMarshaller">
            <summary>
            Command Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.CommandMarshaller.Marshall(Amazon.SnowDeviceManagement.Model.Command,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.CommandMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.CpuOptionsUnmarshaller">
            <summary>
            Response Unmarshaller for CpuOptions Object
            </summary>  
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.CpuOptionsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SnowDeviceManagement#Model#CpuOptions,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.CpuOptionsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.CpuOptionsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.CreateTaskRequestMarshaller">
            <summary>
            CreateTask Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.CreateTaskRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.CreateTaskRequestMarshaller.Marshall(Amazon.SnowDeviceManagement.Model.CreateTaskRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.CreateTaskRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.CreateTaskResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateTask operation
            </summary>  
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.CreateTaskResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.CreateTaskResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.CreateTaskResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.DescribeDeviceEc2InstancesRequestMarshaller">
            <summary>
            DescribeDeviceEc2Instances Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.DescribeDeviceEc2InstancesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.DescribeDeviceEc2InstancesRequestMarshaller.Marshall(Amazon.SnowDeviceManagement.Model.DescribeDeviceEc2InstancesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.DescribeDeviceEc2InstancesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.DescribeDeviceEc2InstancesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeDeviceEc2Instances operation
            </summary>  
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.DescribeDeviceEc2InstancesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.DescribeDeviceEc2InstancesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.DescribeDeviceEc2InstancesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.DescribeDeviceRequestMarshaller">
            <summary>
            DescribeDevice Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.DescribeDeviceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.DescribeDeviceRequestMarshaller.Marshall(Amazon.SnowDeviceManagement.Model.DescribeDeviceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.DescribeDeviceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.DescribeDeviceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeDevice operation
            </summary>  
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.DescribeDeviceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.DescribeDeviceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.DescribeDeviceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.DescribeExecutionRequestMarshaller">
            <summary>
            DescribeExecution Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.DescribeExecutionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.DescribeExecutionRequestMarshaller.Marshall(Amazon.SnowDeviceManagement.Model.DescribeExecutionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.DescribeExecutionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.DescribeExecutionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeExecution operation
            </summary>  
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.DescribeExecutionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.DescribeExecutionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.DescribeExecutionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.DescribeTaskRequestMarshaller">
            <summary>
            DescribeTask Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.DescribeTaskRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.DescribeTaskRequestMarshaller.Marshall(Amazon.SnowDeviceManagement.Model.DescribeTaskRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.DescribeTaskRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.DescribeTaskResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeTask operation
            </summary>  
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.DescribeTaskResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.DescribeTaskResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.DescribeTaskResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.DeviceSummaryUnmarshaller">
            <summary>
            Response Unmarshaller for DeviceSummary Object
            </summary>  
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.DeviceSummaryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SnowDeviceManagement#Model#DeviceSummary,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.DeviceSummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.DeviceSummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.EbsInstanceBlockDeviceUnmarshaller">
            <summary>
            Response Unmarshaller for EbsInstanceBlockDevice Object
            </summary>  
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.EbsInstanceBlockDeviceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SnowDeviceManagement#Model#EbsInstanceBlockDevice,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.EbsInstanceBlockDeviceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.EbsInstanceBlockDeviceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.ExecutionSummaryUnmarshaller">
            <summary>
            Response Unmarshaller for ExecutionSummary Object
            </summary>  
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.ExecutionSummaryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SnowDeviceManagement#Model#ExecutionSummary,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.ExecutionSummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.ExecutionSummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.InstanceBlockDeviceMappingUnmarshaller">
            <summary>
            Response Unmarshaller for InstanceBlockDeviceMapping Object
            </summary>  
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.InstanceBlockDeviceMappingUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SnowDeviceManagement#Model#InstanceBlockDeviceMapping,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.InstanceBlockDeviceMappingUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.InstanceBlockDeviceMappingUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.InstanceStateUnmarshaller">
            <summary>
            Response Unmarshaller for InstanceState Object
            </summary>  
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.InstanceStateUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SnowDeviceManagement#Model#InstanceState,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.InstanceStateUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.InstanceStateUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.InstanceSummaryUnmarshaller">
            <summary>
            Response Unmarshaller for InstanceSummary Object
            </summary>  
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.InstanceSummaryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SnowDeviceManagement#Model#InstanceSummary,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.InstanceSummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.InstanceSummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.InstanceUnmarshaller">
            <summary>
            Response Unmarshaller for Instance Object
            </summary>  
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.InstanceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SnowDeviceManagement#Model#Instance,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.InstanceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.InstanceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InternalServerException Object
            </summary>  
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.ListDeviceResourcesRequestMarshaller">
            <summary>
            ListDeviceResources Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.ListDeviceResourcesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.ListDeviceResourcesRequestMarshaller.Marshall(Amazon.SnowDeviceManagement.Model.ListDeviceResourcesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.ListDeviceResourcesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.ListDeviceResourcesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListDeviceResources operation
            </summary>  
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.ListDeviceResourcesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.ListDeviceResourcesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.ListDeviceResourcesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.ListDevicesRequestMarshaller">
            <summary>
            ListDevices Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.ListDevicesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.ListDevicesRequestMarshaller.Marshall(Amazon.SnowDeviceManagement.Model.ListDevicesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.ListDevicesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.ListDevicesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListDevices operation
            </summary>  
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.ListDevicesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.ListDevicesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.ListDevicesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.ListExecutionsRequestMarshaller">
            <summary>
            ListExecutions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.ListExecutionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.ListExecutionsRequestMarshaller.Marshall(Amazon.SnowDeviceManagement.Model.ListExecutionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.ListExecutionsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.ListExecutionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListExecutions operation
            </summary>  
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.ListExecutionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.ListExecutionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.ListExecutionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller">
            <summary>
            ListTagsForResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.SnowDeviceManagement.Model.ListTagsForResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListTagsForResource operation
            </summary>  
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.ListTasksRequestMarshaller">
            <summary>
            ListTasks Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.ListTasksRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.ListTasksRequestMarshaller.Marshall(Amazon.SnowDeviceManagement.Model.ListTasksRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.ListTasksRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.ListTasksResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListTasks operation
            </summary>  
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.ListTasksResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.ListTasksResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.ListTasksResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.PhysicalNetworkInterfaceUnmarshaller">
            <summary>
            Response Unmarshaller for PhysicalNetworkInterface Object
            </summary>  
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.PhysicalNetworkInterfaceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SnowDeviceManagement#Model#PhysicalNetworkInterface,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.PhysicalNetworkInterfaceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.PhysicalNetworkInterfaceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.RebootMarshaller">
            <summary>
            Reboot Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.RebootMarshaller.Marshall(Amazon.SnowDeviceManagement.Model.Reboot,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.RebootMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.ResourceSummaryUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceSummary Object
            </summary>  
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.ResourceSummaryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SnowDeviceManagement#Model#ResourceSummary,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.ResourceSummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.ResourceSummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.SecurityGroupIdentifierUnmarshaller">
            <summary>
            Response Unmarshaller for SecurityGroupIdentifier Object
            </summary>  
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.SecurityGroupIdentifierUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SnowDeviceManagement#Model#SecurityGroupIdentifier,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.SecurityGroupIdentifierUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.SecurityGroupIdentifierUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ServiceQuotaExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.SoftwareInformationUnmarshaller">
            <summary>
            Response Unmarshaller for SoftwareInformation Object
            </summary>  
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.SoftwareInformationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SnowDeviceManagement#Model#SoftwareInformation,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.SoftwareInformationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.SoftwareInformationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller">
            <summary>
            TagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.SnowDeviceManagement.Model.TagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for TagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.TaskSummaryUnmarshaller">
            <summary>
            Response Unmarshaller for TaskSummary Object
            </summary>  
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.TaskSummaryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SnowDeviceManagement#Model#TaskSummary,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.TaskSummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.TaskSummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ThrottlingException Object
            </summary>  
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.UnlockMarshaller">
            <summary>
            Unlock Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.UnlockMarshaller.Marshall(Amazon.SnowDeviceManagement.Model.Unlock,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.UnlockMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller">
            <summary>
            UntagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.SnowDeviceManagement.Model.UntagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UntagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ValidationException Object
            </summary>  
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.ListDeviceResourcesRequest">
            <summary>
            Container for the parameters to the ListDeviceResources operation.
            Returns a list of the Amazon Web Services resources available for a device. Currently,
            Amazon EC2 instances are the only supported resource type.
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.ListDeviceResourcesRequest.ManagedDeviceId">
            <summary>
            Gets and sets the property ManagedDeviceId. 
            <para>
            The ID of the managed device that you are listing the resources of.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.ListDeviceResourcesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of resources per page.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.ListDeviceResourcesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A pagination token to continue to the next page of results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.ListDeviceResourcesRequest.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            A structure used to filter the results by type of resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.ListDeviceResourcesResponse">
            <summary>
            This is the response object from the ListDeviceResources operation.
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.ListDeviceResourcesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A pagination token to continue to the next page of results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.ListDeviceResourcesResponse.Resources">
            <summary>
            Gets and sets the property Resources. 
            <para>
            A structure defining the resource's type, Amazon Resource Name (ARN), and ID.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.ListDevicesRequest">
            <summary>
            Container for the parameters to the ListDevices operation.
            Returns a list of all devices on your Amazon Web Services account that have Amazon
            Web Services Snow Device Management enabled in the Amazon Web Services Region where
            the command is run.
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.ListDevicesRequest.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            The ID of the job used to order the device.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.ListDevicesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of devices to list per page.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.ListDevicesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A pagination token to continue to the next page of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.ListDevicesResponse">
            <summary>
            This is the response object from the ListDevices operation.
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.ListDevicesResponse.Devices">
            <summary>
            Gets and sets the property Devices. 
            <para>
            A list of device structures that contain information about the device.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.ListDevicesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A pagination token to continue to the next page of devices.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.ListExecutionsRequest">
            <summary>
            Container for the parameters to the ListExecutions operation.
            Returns the status of tasks for one or more target devices.
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.ListExecutionsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of tasks to list per page.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.ListExecutionsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A pagination token to continue to the next page of tasks.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.ListExecutionsRequest.State">
            <summary>
            Gets and sets the property State. 
            <para>
            A structure used to filter the tasks by their current state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.ListExecutionsRequest.TaskId">
            <summary>
            Gets and sets the property TaskId. 
            <para>
            The ID of the task.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.ListExecutionsResponse">
            <summary>
            This is the response object from the ListExecutions operation.
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.ListExecutionsResponse.Executions">
            <summary>
            Gets and sets the property Executions. 
            <para>
            A list of executions. Each execution contains the task ID, the device that the task
            is executing on, the execution ID, and the status of the execution.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.ListExecutionsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A pagination token to continue to the next page of executions.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.ListTagsForResourceRequest">
            <summary>
            Container for the parameters to the ListTagsForResource operation.
            Returns a list of tags for a managed device or task.
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.ListTagsForResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The Amazon Resource Name (ARN) of the device or task.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.ListTagsForResourceResponse">
            <summary>
            This is the response object from the ListTagsForResource operation.
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.ListTagsForResourceResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The list of tags for the device or task.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.ListTasksRequest">
            <summary>
            Container for the parameters to the ListTasks operation.
            Returns a list of tasks that can be filtered by state.
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.ListTasksRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of tasks per page.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.ListTasksRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A pagination token to continue to the next page of tasks.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.ListTasksRequest.State">
            <summary>
            Gets and sets the property State. 
            <para>
            A structure used to filter the list of tasks.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.ListTasksResponse">
            <summary>
            This is the response object from the ListTasks operation.
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.ListTasksResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A pagination token to continue to the next page of tasks.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.ListTasksResponse.Tasks">
            <summary>
            Gets and sets the property Tasks. 
            <para>
            A list of task structures containing details about each task.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.PhysicalNetworkInterface">
            <summary>
            The details about the physical network interface for the device.
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.PhysicalNetworkInterface.DefaultGateway">
            <summary>
            Gets and sets the property DefaultGateway. 
            <para>
            The default gateway of the device.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.PhysicalNetworkInterface.IpAddress">
            <summary>
            Gets and sets the property IpAddress. 
            <para>
            The IP address of the device.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.PhysicalNetworkInterface.IpAddressAssignment">
            <summary>
            Gets and sets the property IpAddressAssignment. 
            <para>
            A value that describes whether the IP address is dynamic or persistent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.PhysicalNetworkInterface.MacAddress">
            <summary>
            Gets and sets the property MacAddress. 
            <para>
            The MAC address of the device.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.PhysicalNetworkInterface.Netmask">
            <summary>
            Gets and sets the property Netmask. 
            <para>
            The netmask used to divide the IP address into subnets.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.PhysicalNetworkInterface.PhysicalConnectorType">
            <summary>
            Gets and sets the property PhysicalConnectorType. 
            <para>
            The physical connector type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.PhysicalNetworkInterface.PhysicalNetworkInterfaceId">
            <summary>
            Gets and sets the property PhysicalNetworkInterfaceId. 
            <para>
            The physical network interface ID.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.Reboot">
            <summary>
            A structure used to reboot the device.
            </summary>
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.ResourceNotFoundException">
            <summary>
            The request references a resource that doesn't exist.
            </summary>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.ResourceNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.ResourceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.ResourceNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.ResourceNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.ResourceNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.ResourceNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ResourceNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.ResourceNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.ResourceSummary">
            <summary>
            A summary of a resource available on the device.
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.ResourceSummary.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The Amazon Resource Name (ARN) of the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.ResourceSummary.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            The ID of the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.ResourceSummary.ResourceType">
            <summary>
            Gets and sets the property ResourceType. 
            <para>
            The resource type.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.SecurityGroupIdentifier">
            <summary>
            Information about the device's security group.
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.SecurityGroupIdentifier.GroupId">
            <summary>
            Gets and sets the property GroupId. 
            <para>
            The security group ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.SecurityGroupIdentifier.GroupName">
            <summary>
            Gets and sets the property GroupName. 
            <para>
            The security group name.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.ServiceQuotaExceededException">
            <summary>
            The request would cause a service quota to be exceeded.
            </summary>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.ServiceQuotaExceededException.#ctor(System.String)">
            <summary>
            Constructs a new ServiceQuotaExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.ServiceQuotaExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ServiceQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.ServiceQuotaExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of ServiceQuotaExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.ServiceQuotaExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.ServiceQuotaExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.ServiceQuotaExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ServiceQuotaExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.ServiceQuotaExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.SoftwareInformation">
            <summary>
            Information about the software on the device.
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.SoftwareInformation.InstalledVersion">
            <summary>
            Gets and sets the property InstalledVersion. 
            <para>
            The version of the software currently installed on the device.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.SoftwareInformation.InstallingVersion">
            <summary>
            Gets and sets the property InstallingVersion. 
            <para>
            The version of the software being installed on the device.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.SoftwareInformation.InstallState">
            <summary>
            Gets and sets the property InstallState. 
            <para>
            The state of the software that is installed or that is being installed on the device.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.TagResourceRequest">
            <summary>
            Container for the parameters to the TagResource operation.
            Adds or replaces tags on a device or task.
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.TagResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The Amazon Resource Name (ARN) of the device or task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.TagResourceRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Optional metadata that you assign to a resource. You can use tags to categorize a
            resource in different ways, such as by purpose, owner, or environment.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.TagResourceResponse">
            <summary>
            This is the response object from the TagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.TaskSummary">
            <summary>
            Information about the task assigned to one or many devices.
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.TaskSummary.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The state of the task assigned to one or many devices.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.TaskSummary.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Optional metadata that you assign to a resource. You can use tags to categorize a
            resource in different ways, such as by purpose, owner, or environment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.TaskSummary.TaskArn">
            <summary>
            Gets and sets the property TaskArn. 
            <para>
            The Amazon Resource Name (ARN) of the task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.TaskSummary.TaskId">
            <summary>
            Gets and sets the property TaskId. 
            <para>
            The task ID.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.ThrottlingException">
            <summary>
            The request was denied due to request throttling.
            </summary>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.ThrottlingException.#ctor(System.String)">
            <summary>
            Constructs a new ThrottlingException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.ThrottlingException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.ThrottlingException.#ctor(System.Exception)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.ThrottlingException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.ThrottlingException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.ThrottlingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ThrottlingException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.ThrottlingException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.ThrottlingException.Retryable">
            <summary>
            Flag indicating if the exception is retryable and the associated retry
            details. A null value indicates that the exception is not retryable.
            </summary>
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.Unlock">
            <summary>
            A structure used to unlock a device.
            </summary>
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.UntagResourceRequest">
            <summary>
            Container for the parameters to the UntagResource operation.
            Removes a tag from a device or task.
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.UntagResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The Amazon Resource Name (ARN) of the device or task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.UntagResourceRequest.TagKeys">
            <summary>
            Gets and sets the property TagKeys. 
            <para>
            Optional metadata that you assign to a resource. You can use tags to categorize a
            resource in different ways, such as by purpose, owner, or environment.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.UntagResourceResponse">
            <summary>
            This is the response object from the UntagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.ValidationException">
            <summary>
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
            </summary>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.ValidationException.#ctor(System.String)">
            <summary>
            Constructs a new ValidationException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.ValidationException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.ValidationException.#ctor(System.Exception)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.ValidationException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.ValidationException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.ValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ValidationException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.ValidationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.IListDeviceResourcesPaginator">
             <summary>
             Paginator for the ListDeviceResources operation
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.IListDeviceResourcesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.IListDeviceResourcesPaginator.Resources">
            <summary>
            Enumerable containing all of the Resources
            </summary>
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.IListDevicesPaginator">
             <summary>
             Paginator for the ListDevices operation
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.IListDevicesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.IListDevicesPaginator.Devices">
            <summary>
            Enumerable containing all of the Devices
            </summary>
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.IListExecutionsPaginator">
             <summary>
             Paginator for the ListExecutions operation
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.IListExecutionsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.IListExecutionsPaginator.Executions">
            <summary>
            Enumerable containing all of the Executions
            </summary>
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.IListTasksPaginator">
             <summary>
             Paginator for the ListTasks operation
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.IListTasksPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.IListTasksPaginator.Tasks">
            <summary>
            Enumerable containing all of the Tasks
            </summary>
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.ISnowDeviceManagementPaginatorFactory">
             <summary>
             Paginators for the SnowDeviceManagement service
            </summary>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.ISnowDeviceManagementPaginatorFactory.ListDeviceResources(Amazon.SnowDeviceManagement.Model.ListDeviceResourcesRequest)">
             <summary>
             Paginator for ListDeviceResources operation
            </summary>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.ISnowDeviceManagementPaginatorFactory.ListDevices(Amazon.SnowDeviceManagement.Model.ListDevicesRequest)">
             <summary>
             Paginator for ListDevices operation
            </summary>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.ISnowDeviceManagementPaginatorFactory.ListExecutions(Amazon.SnowDeviceManagement.Model.ListExecutionsRequest)">
             <summary>
             Paginator for ListExecutions operation
            </summary>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.ISnowDeviceManagementPaginatorFactory.ListTasks(Amazon.SnowDeviceManagement.Model.ListTasksRequest)">
             <summary>
             Paginator for ListTasks operation
            </summary>
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.ListDeviceResourcesPaginator">
            <summary>
            Base class for ListDeviceResources paginators.
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.ListDeviceResourcesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.ListDeviceResourcesPaginator.Resources">
            <summary>
            Enumerable containing all of the Resources
            </summary>
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.ListDevicesPaginator">
            <summary>
            Base class for ListDevices paginators.
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.ListDevicesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.ListDevicesPaginator.Devices">
            <summary>
            Enumerable containing all of the Devices
            </summary>
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.ListExecutionsPaginator">
            <summary>
            Base class for ListExecutions paginators.
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.ListExecutionsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.ListExecutionsPaginator.Executions">
            <summary>
            Enumerable containing all of the Executions
            </summary>
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.ListTasksPaginator">
            <summary>
            Base class for ListTasks paginators.
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.ListTasksPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.Model.ListTasksPaginator.Tasks">
            <summary>
            Enumerable containing all of the Tasks
            </summary>
        </member>
        <member name="T:Amazon.SnowDeviceManagement.Model.SnowDeviceManagementPaginatorFactory">
             <summary>
             Paginators for the SnowDeviceManagement service
            </summary>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.SnowDeviceManagementPaginatorFactory.ListDeviceResources(Amazon.SnowDeviceManagement.Model.ListDeviceResourcesRequest)">
             <summary>
             Paginator for ListDeviceResources operation
            </summary>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.SnowDeviceManagementPaginatorFactory.ListDevices(Amazon.SnowDeviceManagement.Model.ListDevicesRequest)">
             <summary>
             Paginator for ListDevices operation
            </summary>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.SnowDeviceManagementPaginatorFactory.ListExecutions(Amazon.SnowDeviceManagement.Model.ListExecutionsRequest)">
             <summary>
             Paginator for ListExecutions operation
            </summary>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.Model.SnowDeviceManagementPaginatorFactory.ListTasks(Amazon.SnowDeviceManagement.Model.ListTasksRequest)">
             <summary>
             Paginator for ListTasks operation
            </summary>
        </member>
        <member name="T:Amazon.SnowDeviceManagement.AmazonSnowDeviceManagementRequest">
            <summary>
            Base class for SnowDeviceManagement operation requests.
            </summary>
        </member>
        <member name="T:Amazon.SnowDeviceManagement.AttachmentStatus">
            <summary>
            Constants used for properties of type AttachmentStatus.
            </summary>
        </member>
        <member name="F:Amazon.SnowDeviceManagement.AttachmentStatus.ATTACHED">
            <summary>
            Constant ATTACHED for AttachmentStatus
            </summary>
        </member>
        <member name="F:Amazon.SnowDeviceManagement.AttachmentStatus.ATTACHING">
            <summary>
            Constant ATTACHING for AttachmentStatus
            </summary>
        </member>
        <member name="F:Amazon.SnowDeviceManagement.AttachmentStatus.DETACHED">
            <summary>
            Constant DETACHED for AttachmentStatus
            </summary>
        </member>
        <member name="F:Amazon.SnowDeviceManagement.AttachmentStatus.DETACHING">
            <summary>
            Constant DETACHING for AttachmentStatus
            </summary>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.AttachmentStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.AttachmentStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.AttachmentStatus.op_Implicit(System.String)~Amazon.SnowDeviceManagement.AttachmentStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SnowDeviceManagement.ExecutionState">
            <summary>
            Constants used for properties of type ExecutionState.
            </summary>
        </member>
        <member name="F:Amazon.SnowDeviceManagement.ExecutionState.CANCELED">
            <summary>
            Constant CANCELED for ExecutionState
            </summary>
        </member>
        <member name="F:Amazon.SnowDeviceManagement.ExecutionState.FAILED">
            <summary>
            Constant FAILED for ExecutionState
            </summary>
        </member>
        <member name="F:Amazon.SnowDeviceManagement.ExecutionState.IN_PROGRESS">
            <summary>
            Constant IN_PROGRESS for ExecutionState
            </summary>
        </member>
        <member name="F:Amazon.SnowDeviceManagement.ExecutionState.QUEUED">
            <summary>
            Constant QUEUED for ExecutionState
            </summary>
        </member>
        <member name="F:Amazon.SnowDeviceManagement.ExecutionState.REJECTED">
            <summary>
            Constant REJECTED for ExecutionState
            </summary>
        </member>
        <member name="F:Amazon.SnowDeviceManagement.ExecutionState.SUCCEEDED">
            <summary>
            Constant SUCCEEDED for ExecutionState
            </summary>
        </member>
        <member name="F:Amazon.SnowDeviceManagement.ExecutionState.TIMED_OUT">
            <summary>
            Constant TIMED_OUT for ExecutionState
            </summary>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.ExecutionState.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.ExecutionState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.ExecutionState.op_Implicit(System.String)~Amazon.SnowDeviceManagement.ExecutionState">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SnowDeviceManagement.InstanceStateName">
            <summary>
            Constants used for properties of type InstanceStateName.
            </summary>
        </member>
        <member name="F:Amazon.SnowDeviceManagement.InstanceStateName.PENDING">
            <summary>
            Constant PENDING for InstanceStateName
            </summary>
        </member>
        <member name="F:Amazon.SnowDeviceManagement.InstanceStateName.RUNNING">
            <summary>
            Constant RUNNING for InstanceStateName
            </summary>
        </member>
        <member name="F:Amazon.SnowDeviceManagement.InstanceStateName.SHUTTING_DOWN">
            <summary>
            Constant SHUTTING_DOWN for InstanceStateName
            </summary>
        </member>
        <member name="F:Amazon.SnowDeviceManagement.InstanceStateName.STOPPED">
            <summary>
            Constant STOPPED for InstanceStateName
            </summary>
        </member>
        <member name="F:Amazon.SnowDeviceManagement.InstanceStateName.STOPPING">
            <summary>
            Constant STOPPING for InstanceStateName
            </summary>
        </member>
        <member name="F:Amazon.SnowDeviceManagement.InstanceStateName.TERMINATED">
            <summary>
            Constant TERMINATED for InstanceStateName
            </summary>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.InstanceStateName.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.InstanceStateName.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.InstanceStateName.op_Implicit(System.String)~Amazon.SnowDeviceManagement.InstanceStateName">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SnowDeviceManagement.IpAddressAssignment">
            <summary>
            Constants used for properties of type IpAddressAssignment.
            </summary>
        </member>
        <member name="F:Amazon.SnowDeviceManagement.IpAddressAssignment.DHCP">
            <summary>
            Constant DHCP for IpAddressAssignment
            </summary>
        </member>
        <member name="F:Amazon.SnowDeviceManagement.IpAddressAssignment.STATIC">
            <summary>
            Constant STATIC for IpAddressAssignment
            </summary>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.IpAddressAssignment.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.IpAddressAssignment.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.IpAddressAssignment.op_Implicit(System.String)~Amazon.SnowDeviceManagement.IpAddressAssignment">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SnowDeviceManagement.PhysicalConnectorType">
            <summary>
            Constants used for properties of type PhysicalConnectorType.
            </summary>
        </member>
        <member name="F:Amazon.SnowDeviceManagement.PhysicalConnectorType.QSFP">
            <summary>
            Constant QSFP for PhysicalConnectorType
            </summary>
        </member>
        <member name="F:Amazon.SnowDeviceManagement.PhysicalConnectorType.RJ45">
            <summary>
            Constant RJ45 for PhysicalConnectorType
            </summary>
        </member>
        <member name="F:Amazon.SnowDeviceManagement.PhysicalConnectorType.RJ45_2">
            <summary>
            Constant RJ45_2 for PhysicalConnectorType
            </summary>
        </member>
        <member name="F:Amazon.SnowDeviceManagement.PhysicalConnectorType.SFP_PLUS">
            <summary>
            Constant SFP_PLUS for PhysicalConnectorType
            </summary>
        </member>
        <member name="F:Amazon.SnowDeviceManagement.PhysicalConnectorType.WIFI">
            <summary>
            Constant WIFI for PhysicalConnectorType
            </summary>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.PhysicalConnectorType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.PhysicalConnectorType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.PhysicalConnectorType.op_Implicit(System.String)~Amazon.SnowDeviceManagement.PhysicalConnectorType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SnowDeviceManagement.TaskState">
            <summary>
            Constants used for properties of type TaskState.
            </summary>
        </member>
        <member name="F:Amazon.SnowDeviceManagement.TaskState.CANCELED">
            <summary>
            Constant CANCELED for TaskState
            </summary>
        </member>
        <member name="F:Amazon.SnowDeviceManagement.TaskState.COMPLETED">
            <summary>
            Constant COMPLETED for TaskState
            </summary>
        </member>
        <member name="F:Amazon.SnowDeviceManagement.TaskState.IN_PROGRESS">
            <summary>
            Constant IN_PROGRESS for TaskState
            </summary>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.TaskState.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.TaskState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.TaskState.op_Implicit(System.String)~Amazon.SnowDeviceManagement.TaskState">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SnowDeviceManagement.UnlockState">
            <summary>
            Constants used for properties of type UnlockState.
            </summary>
        </member>
        <member name="F:Amazon.SnowDeviceManagement.UnlockState.LOCKED">
            <summary>
            Constant LOCKED for UnlockState
            </summary>
        </member>
        <member name="F:Amazon.SnowDeviceManagement.UnlockState.UNLOCKED">
            <summary>
            Constant UNLOCKED for UnlockState
            </summary>
        </member>
        <member name="F:Amazon.SnowDeviceManagement.UnlockState.UNLOCKING">
            <summary>
            Constant UNLOCKING for UnlockState
            </summary>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.UnlockState.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.UnlockState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.UnlockState.op_Implicit(System.String)~Amazon.SnowDeviceManagement.UnlockState">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SnowDeviceManagement.AmazonSnowDeviceManagementClient">
             <summary>
             Implementation for accessing SnowDeviceManagement
            
             Amazon Web Services Snow Device Management documentation.
             </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.AmazonSnowDeviceManagementClient.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.AmazonSnowDeviceManagementClient.#ctor">
             <summary>
             Constructs AmazonSnowDeviceManagementClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.AmazonSnowDeviceManagementClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonSnowDeviceManagementClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.AmazonSnowDeviceManagementClient.#ctor(Amazon.SnowDeviceManagement.AmazonSnowDeviceManagementConfig)">
             <summary>
             Constructs AmazonSnowDeviceManagementClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonSnowDeviceManagementClient Configuration Object</param>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.AmazonSnowDeviceManagementClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonSnowDeviceManagementClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.AmazonSnowDeviceManagementClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonSnowDeviceManagementClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.AmazonSnowDeviceManagementClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.SnowDeviceManagement.AmazonSnowDeviceManagementConfig)">
            <summary>
            Constructs AmazonSnowDeviceManagementClient with AWS Credentials and an
            AmazonSnowDeviceManagementClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonSnowDeviceManagementClient Configuration Object</param>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.AmazonSnowDeviceManagementClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonSnowDeviceManagementClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.AmazonSnowDeviceManagementClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonSnowDeviceManagementClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.AmazonSnowDeviceManagementClient.#ctor(System.String,System.String,Amazon.SnowDeviceManagement.AmazonSnowDeviceManagementConfig)">
            <summary>
            Constructs AmazonSnowDeviceManagementClient with AWS Access Key ID, AWS Secret Key and an
            AmazonSnowDeviceManagementClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonSnowDeviceManagementClient Configuration Object</param>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.AmazonSnowDeviceManagementClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonSnowDeviceManagementClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.AmazonSnowDeviceManagementClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonSnowDeviceManagementClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.AmazonSnowDeviceManagementClient.#ctor(System.String,System.String,System.String,Amazon.SnowDeviceManagement.AmazonSnowDeviceManagementConfig)">
            <summary>
            Constructs AmazonSnowDeviceManagementClient with AWS Access Key ID, AWS Secret Key and an
            AmazonSnowDeviceManagementClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonSnowDeviceManagementClient Configuration Object</param>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.AmazonSnowDeviceManagementClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.AmazonSnowDeviceManagementClient.ServiceMetadata">
            <summary>
            Capture metadata for the service.
            </summary>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.AmazonSnowDeviceManagementClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.AmazonSnowDeviceManagementClient.CancelTask(Amazon.SnowDeviceManagement.Model.CancelTaskRequest)">
            <summary>
            Sends a cancel request for a specified task. You can cancel a task only if it's still
            in a <code>QUEUED</code> state. Tasks that are already running can't be cancelled.
            
             <note> 
            <para>
            A task might still run if it's processed from the queue before the <code>CancelTask</code>
            operation changes the task's state.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CancelTask service method.</param>
            
            <returns>The response from the CancelTask service method, as returned by SnowDeviceManagement.</returns>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.InternalServerException">
            An unexpected error occurred while processing the request.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ResourceNotFoundException">
            The request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ValidationException">
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/snow-device-management-2021-08-04/CancelTask">REST API Reference for CancelTask Operation</seealso>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.AmazonSnowDeviceManagementClient.CancelTaskAsync(Amazon.SnowDeviceManagement.Model.CancelTaskRequest,System.Threading.CancellationToken)">
            <summary>
            Sends a cancel request for a specified task. You can cancel a task only if it's still
            in a <code>QUEUED</code> state. Tasks that are already running can't be cancelled.
            
             <note> 
            <para>
            A task might still run if it's processed from the queue before the <code>CancelTask</code>
            operation changes the task's state.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CancelTask service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CancelTask service method, as returned by SnowDeviceManagement.</returns>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.InternalServerException">
            An unexpected error occurred while processing the request.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ResourceNotFoundException">
            The request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ValidationException">
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/snow-device-management-2021-08-04/CancelTask">REST API Reference for CancelTask Operation</seealso>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.AmazonSnowDeviceManagementClient.CreateTask(Amazon.SnowDeviceManagement.Model.CreateTaskRequest)">
            <summary>
            Instructs one or more devices to start a task, such as unlocking or rebooting.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateTask service method.</param>
            
            <returns>The response from the CreateTask service method, as returned by SnowDeviceManagement.</returns>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.InternalServerException">
            An unexpected error occurred while processing the request.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ResourceNotFoundException">
            The request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ServiceQuotaExceededException">
            The request would cause a service quota to be exceeded.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ValidationException">
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/snow-device-management-2021-08-04/CreateTask">REST API Reference for CreateTask Operation</seealso>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.AmazonSnowDeviceManagementClient.CreateTaskAsync(Amazon.SnowDeviceManagement.Model.CreateTaskRequest,System.Threading.CancellationToken)">
            <summary>
            Instructs one or more devices to start a task, such as unlocking or rebooting.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateTask service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateTask service method, as returned by SnowDeviceManagement.</returns>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.InternalServerException">
            An unexpected error occurred while processing the request.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ResourceNotFoundException">
            The request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ServiceQuotaExceededException">
            The request would cause a service quota to be exceeded.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ValidationException">
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/snow-device-management-2021-08-04/CreateTask">REST API Reference for CreateTask Operation</seealso>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.AmazonSnowDeviceManagementClient.DescribeDevice(Amazon.SnowDeviceManagement.Model.DescribeDeviceRequest)">
            <summary>
            Checks device-specific information, such as the device type, software version, IP
            addresses, and lock status.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDevice service method.</param>
            
            <returns>The response from the DescribeDevice service method, as returned by SnowDeviceManagement.</returns>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.InternalServerException">
            An unexpected error occurred while processing the request.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ResourceNotFoundException">
            The request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ValidationException">
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/snow-device-management-2021-08-04/DescribeDevice">REST API Reference for DescribeDevice Operation</seealso>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.AmazonSnowDeviceManagementClient.DescribeDeviceAsync(Amazon.SnowDeviceManagement.Model.DescribeDeviceRequest,System.Threading.CancellationToken)">
            <summary>
            Checks device-specific information, such as the device type, software version, IP
            addresses, and lock status.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDevice service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeDevice service method, as returned by SnowDeviceManagement.</returns>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.InternalServerException">
            An unexpected error occurred while processing the request.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ResourceNotFoundException">
            The request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ValidationException">
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/snow-device-management-2021-08-04/DescribeDevice">REST API Reference for DescribeDevice Operation</seealso>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.AmazonSnowDeviceManagementClient.DescribeDeviceEc2Instances(Amazon.SnowDeviceManagement.Model.DescribeDeviceEc2InstancesRequest)">
            <summary>
            Checks the current state of the Amazon EC2 instances. The output is similar to <code>describeDevice</code>,
            but the results are sourced from the device cache in the Amazon Web Services Cloud
            and include a subset of the available fields.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDeviceEc2Instances service method.</param>
            
            <returns>The response from the DescribeDeviceEc2Instances service method, as returned by SnowDeviceManagement.</returns>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.InternalServerException">
            An unexpected error occurred while processing the request.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ResourceNotFoundException">
            The request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ValidationException">
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/snow-device-management-2021-08-04/DescribeDeviceEc2Instances">REST API Reference for DescribeDeviceEc2Instances Operation</seealso>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.AmazonSnowDeviceManagementClient.DescribeDeviceEc2InstancesAsync(Amazon.SnowDeviceManagement.Model.DescribeDeviceEc2InstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Checks the current state of the Amazon EC2 instances. The output is similar to <code>describeDevice</code>,
            but the results are sourced from the device cache in the Amazon Web Services Cloud
            and include a subset of the available fields.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDeviceEc2Instances service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeDeviceEc2Instances service method, as returned by SnowDeviceManagement.</returns>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.InternalServerException">
            An unexpected error occurred while processing the request.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ResourceNotFoundException">
            The request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ValidationException">
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/snow-device-management-2021-08-04/DescribeDeviceEc2Instances">REST API Reference for DescribeDeviceEc2Instances Operation</seealso>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.AmazonSnowDeviceManagementClient.DescribeExecution(Amazon.SnowDeviceManagement.Model.DescribeExecutionRequest)">
            <summary>
            Checks the status of a remote task running on one or more target devices.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeExecution service method.</param>
            
            <returns>The response from the DescribeExecution service method, as returned by SnowDeviceManagement.</returns>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.InternalServerException">
            An unexpected error occurred while processing the request.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ResourceNotFoundException">
            The request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ValidationException">
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/snow-device-management-2021-08-04/DescribeExecution">REST API Reference for DescribeExecution Operation</seealso>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.AmazonSnowDeviceManagementClient.DescribeExecutionAsync(Amazon.SnowDeviceManagement.Model.DescribeExecutionRequest,System.Threading.CancellationToken)">
            <summary>
            Checks the status of a remote task running on one or more target devices.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeExecution service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeExecution service method, as returned by SnowDeviceManagement.</returns>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.InternalServerException">
            An unexpected error occurred while processing the request.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ResourceNotFoundException">
            The request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ValidationException">
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/snow-device-management-2021-08-04/DescribeExecution">REST API Reference for DescribeExecution Operation</seealso>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.AmazonSnowDeviceManagementClient.DescribeTask(Amazon.SnowDeviceManagement.Model.DescribeTaskRequest)">
            <summary>
            Checks the metadata for a given task on a device.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeTask service method.</param>
            
            <returns>The response from the DescribeTask service method, as returned by SnowDeviceManagement.</returns>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.InternalServerException">
            An unexpected error occurred while processing the request.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ResourceNotFoundException">
            The request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ValidationException">
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/snow-device-management-2021-08-04/DescribeTask">REST API Reference for DescribeTask Operation</seealso>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.AmazonSnowDeviceManagementClient.DescribeTaskAsync(Amazon.SnowDeviceManagement.Model.DescribeTaskRequest,System.Threading.CancellationToken)">
            <summary>
            Checks the metadata for a given task on a device.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeTask service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeTask service method, as returned by SnowDeviceManagement.</returns>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.InternalServerException">
            An unexpected error occurred while processing the request.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ResourceNotFoundException">
            The request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ValidationException">
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/snow-device-management-2021-08-04/DescribeTask">REST API Reference for DescribeTask Operation</seealso>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.AmazonSnowDeviceManagementClient.ListDeviceResources(Amazon.SnowDeviceManagement.Model.ListDeviceResourcesRequest)">
            <summary>
            Returns a list of the Amazon Web Services resources available for a device. Currently,
            Amazon EC2 instances are the only supported resource type.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListDeviceResources service method.</param>
            
            <returns>The response from the ListDeviceResources service method, as returned by SnowDeviceManagement.</returns>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.InternalServerException">
            An unexpected error occurred while processing the request.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ResourceNotFoundException">
            The request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ValidationException">
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/snow-device-management-2021-08-04/ListDeviceResources">REST API Reference for ListDeviceResources Operation</seealso>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.AmazonSnowDeviceManagementClient.ListDeviceResourcesAsync(Amazon.SnowDeviceManagement.Model.ListDeviceResourcesRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of the Amazon Web Services resources available for a device. Currently,
            Amazon EC2 instances are the only supported resource type.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListDeviceResources service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListDeviceResources service method, as returned by SnowDeviceManagement.</returns>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.InternalServerException">
            An unexpected error occurred while processing the request.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ResourceNotFoundException">
            The request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ValidationException">
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/snow-device-management-2021-08-04/ListDeviceResources">REST API Reference for ListDeviceResources Operation</seealso>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.AmazonSnowDeviceManagementClient.ListDevices(Amazon.SnowDeviceManagement.Model.ListDevicesRequest)">
            <summary>
            Returns a list of all devices on your Amazon Web Services account that have Amazon
            Web Services Snow Device Management enabled in the Amazon Web Services Region where
            the command is run.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListDevices service method.</param>
            
            <returns>The response from the ListDevices service method, as returned by SnowDeviceManagement.</returns>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.InternalServerException">
            An unexpected error occurred while processing the request.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ValidationException">
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/snow-device-management-2021-08-04/ListDevices">REST API Reference for ListDevices Operation</seealso>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.AmazonSnowDeviceManagementClient.ListDevicesAsync(Amazon.SnowDeviceManagement.Model.ListDevicesRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of all devices on your Amazon Web Services account that have Amazon
            Web Services Snow Device Management enabled in the Amazon Web Services Region where
            the command is run.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListDevices service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListDevices service method, as returned by SnowDeviceManagement.</returns>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.InternalServerException">
            An unexpected error occurred while processing the request.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ValidationException">
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/snow-device-management-2021-08-04/ListDevices">REST API Reference for ListDevices Operation</seealso>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.AmazonSnowDeviceManagementClient.ListExecutions(Amazon.SnowDeviceManagement.Model.ListExecutionsRequest)">
            <summary>
            Returns the status of tasks for one or more target devices.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListExecutions service method.</param>
            
            <returns>The response from the ListExecutions service method, as returned by SnowDeviceManagement.</returns>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.InternalServerException">
            An unexpected error occurred while processing the request.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ResourceNotFoundException">
            The request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ValidationException">
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/snow-device-management-2021-08-04/ListExecutions">REST API Reference for ListExecutions Operation</seealso>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.AmazonSnowDeviceManagementClient.ListExecutionsAsync(Amazon.SnowDeviceManagement.Model.ListExecutionsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the status of tasks for one or more target devices.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListExecutions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListExecutions service method, as returned by SnowDeviceManagement.</returns>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.InternalServerException">
            An unexpected error occurred while processing the request.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ResourceNotFoundException">
            The request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ValidationException">
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/snow-device-management-2021-08-04/ListExecutions">REST API Reference for ListExecutions Operation</seealso>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.AmazonSnowDeviceManagementClient.ListTagsForResource(Amazon.SnowDeviceManagement.Model.ListTagsForResourceRequest)">
            <summary>
            Returns a list of tags for a managed device or task.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            
            <returns>The response from the ListTagsForResource service method, as returned by SnowDeviceManagement.</returns>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.InternalServerException">
            An unexpected error occurred while processing the request.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ResourceNotFoundException">
            The request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ValidationException">
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/snow-device-management-2021-08-04/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.AmazonSnowDeviceManagementClient.ListTagsForResourceAsync(Amazon.SnowDeviceManagement.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of tags for a managed device or task.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by SnowDeviceManagement.</returns>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.InternalServerException">
            An unexpected error occurred while processing the request.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ResourceNotFoundException">
            The request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ValidationException">
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/snow-device-management-2021-08-04/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.AmazonSnowDeviceManagementClient.ListTasks(Amazon.SnowDeviceManagement.Model.ListTasksRequest)">
            <summary>
            Returns a list of tasks that can be filtered by state.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTasks service method.</param>
            
            <returns>The response from the ListTasks service method, as returned by SnowDeviceManagement.</returns>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.InternalServerException">
            An unexpected error occurred while processing the request.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ValidationException">
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/snow-device-management-2021-08-04/ListTasks">REST API Reference for ListTasks Operation</seealso>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.AmazonSnowDeviceManagementClient.ListTasksAsync(Amazon.SnowDeviceManagement.Model.ListTasksRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of tasks that can be filtered by state.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTasks service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTasks service method, as returned by SnowDeviceManagement.</returns>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.InternalServerException">
            An unexpected error occurred while processing the request.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ValidationException">
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/snow-device-management-2021-08-04/ListTasks">REST API Reference for ListTasks Operation</seealso>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.AmazonSnowDeviceManagementClient.TagResource(Amazon.SnowDeviceManagement.Model.TagResourceRequest)">
            <summary>
            Adds or replaces tags on a device or task.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            
            <returns>The response from the TagResource service method, as returned by SnowDeviceManagement.</returns>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.InternalServerException">
            An unexpected error occurred while processing the request.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ResourceNotFoundException">
            The request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ValidationException">
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/snow-device-management-2021-08-04/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.AmazonSnowDeviceManagementClient.TagResourceAsync(Amazon.SnowDeviceManagement.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Adds or replaces tags on a device or task.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by SnowDeviceManagement.</returns>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.InternalServerException">
            An unexpected error occurred while processing the request.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ResourceNotFoundException">
            The request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ValidationException">
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/snow-device-management-2021-08-04/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.AmazonSnowDeviceManagementClient.UntagResource(Amazon.SnowDeviceManagement.Model.UntagResourceRequest)">
            <summary>
            Removes a tag from a device or task.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            
            <returns>The response from the UntagResource service method, as returned by SnowDeviceManagement.</returns>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.InternalServerException">
            An unexpected error occurred while processing the request.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ResourceNotFoundException">
            The request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ValidationException">
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/snow-device-management-2021-08-04/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.AmazonSnowDeviceManagementClient.UntagResourceAsync(Amazon.SnowDeviceManagement.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Removes a tag from a device or task.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by SnowDeviceManagement.</returns>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.InternalServerException">
            An unexpected error occurred while processing the request.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ResourceNotFoundException">
            The request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ValidationException">
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/snow-device-management-2021-08-04/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="T:Amazon.SnowDeviceManagement.IAmazonSnowDeviceManagement">
             <summary>
             Interface for accessing SnowDeviceManagement
            
             Amazon Web Services Snow Device Management documentation.
             </summary>
        </member>
        <member name="P:Amazon.SnowDeviceManagement.IAmazonSnowDeviceManagement.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.IAmazonSnowDeviceManagement.CancelTask(Amazon.SnowDeviceManagement.Model.CancelTaskRequest)">
            <summary>
            Sends a cancel request for a specified task. You can cancel a task only if it's still
            in a <code>QUEUED</code> state. Tasks that are already running can't be cancelled.
            
             <note> 
            <para>
            A task might still run if it's processed from the queue before the <code>CancelTask</code>
            operation changes the task's state.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CancelTask service method.</param>
            
            <returns>The response from the CancelTask service method, as returned by SnowDeviceManagement.</returns>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.InternalServerException">
            An unexpected error occurred while processing the request.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ResourceNotFoundException">
            The request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ValidationException">
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/snow-device-management-2021-08-04/CancelTask">REST API Reference for CancelTask Operation</seealso>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.IAmazonSnowDeviceManagement.CancelTaskAsync(Amazon.SnowDeviceManagement.Model.CancelTaskRequest,System.Threading.CancellationToken)">
            <summary>
            Sends a cancel request for a specified task. You can cancel a task only if it's still
            in a <code>QUEUED</code> state. Tasks that are already running can't be cancelled.
            
             <note> 
            <para>
            A task might still run if it's processed from the queue before the <code>CancelTask</code>
            operation changes the task's state.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CancelTask service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CancelTask service method, as returned by SnowDeviceManagement.</returns>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.InternalServerException">
            An unexpected error occurred while processing the request.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ResourceNotFoundException">
            The request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ValidationException">
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/snow-device-management-2021-08-04/CancelTask">REST API Reference for CancelTask Operation</seealso>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.IAmazonSnowDeviceManagement.CreateTask(Amazon.SnowDeviceManagement.Model.CreateTaskRequest)">
            <summary>
            Instructs one or more devices to start a task, such as unlocking or rebooting.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateTask service method.</param>
            
            <returns>The response from the CreateTask service method, as returned by SnowDeviceManagement.</returns>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.InternalServerException">
            An unexpected error occurred while processing the request.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ResourceNotFoundException">
            The request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ServiceQuotaExceededException">
            The request would cause a service quota to be exceeded.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ValidationException">
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/snow-device-management-2021-08-04/CreateTask">REST API Reference for CreateTask Operation</seealso>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.IAmazonSnowDeviceManagement.CreateTaskAsync(Amazon.SnowDeviceManagement.Model.CreateTaskRequest,System.Threading.CancellationToken)">
            <summary>
            Instructs one or more devices to start a task, such as unlocking or rebooting.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateTask service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateTask service method, as returned by SnowDeviceManagement.</returns>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.InternalServerException">
            An unexpected error occurred while processing the request.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ResourceNotFoundException">
            The request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ServiceQuotaExceededException">
            The request would cause a service quota to be exceeded.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ValidationException">
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/snow-device-management-2021-08-04/CreateTask">REST API Reference for CreateTask Operation</seealso>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.IAmazonSnowDeviceManagement.DescribeDevice(Amazon.SnowDeviceManagement.Model.DescribeDeviceRequest)">
            <summary>
            Checks device-specific information, such as the device type, software version, IP
            addresses, and lock status.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDevice service method.</param>
            
            <returns>The response from the DescribeDevice service method, as returned by SnowDeviceManagement.</returns>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.InternalServerException">
            An unexpected error occurred while processing the request.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ResourceNotFoundException">
            The request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ValidationException">
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/snow-device-management-2021-08-04/DescribeDevice">REST API Reference for DescribeDevice Operation</seealso>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.IAmazonSnowDeviceManagement.DescribeDeviceAsync(Amazon.SnowDeviceManagement.Model.DescribeDeviceRequest,System.Threading.CancellationToken)">
            <summary>
            Checks device-specific information, such as the device type, software version, IP
            addresses, and lock status.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDevice service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeDevice service method, as returned by SnowDeviceManagement.</returns>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.InternalServerException">
            An unexpected error occurred while processing the request.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ResourceNotFoundException">
            The request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ValidationException">
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/snow-device-management-2021-08-04/DescribeDevice">REST API Reference for DescribeDevice Operation</seealso>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.IAmazonSnowDeviceManagement.DescribeDeviceEc2Instances(Amazon.SnowDeviceManagement.Model.DescribeDeviceEc2InstancesRequest)">
            <summary>
            Checks the current state of the Amazon EC2 instances. The output is similar to <code>describeDevice</code>,
            but the results are sourced from the device cache in the Amazon Web Services Cloud
            and include a subset of the available fields.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDeviceEc2Instances service method.</param>
            
            <returns>The response from the DescribeDeviceEc2Instances service method, as returned by SnowDeviceManagement.</returns>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.InternalServerException">
            An unexpected error occurred while processing the request.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ResourceNotFoundException">
            The request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ValidationException">
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/snow-device-management-2021-08-04/DescribeDeviceEc2Instances">REST API Reference for DescribeDeviceEc2Instances Operation</seealso>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.IAmazonSnowDeviceManagement.DescribeDeviceEc2InstancesAsync(Amazon.SnowDeviceManagement.Model.DescribeDeviceEc2InstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Checks the current state of the Amazon EC2 instances. The output is similar to <code>describeDevice</code>,
            but the results are sourced from the device cache in the Amazon Web Services Cloud
            and include a subset of the available fields.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDeviceEc2Instances service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeDeviceEc2Instances service method, as returned by SnowDeviceManagement.</returns>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.InternalServerException">
            An unexpected error occurred while processing the request.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ResourceNotFoundException">
            The request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ValidationException">
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/snow-device-management-2021-08-04/DescribeDeviceEc2Instances">REST API Reference for DescribeDeviceEc2Instances Operation</seealso>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.IAmazonSnowDeviceManagement.DescribeExecution(Amazon.SnowDeviceManagement.Model.DescribeExecutionRequest)">
            <summary>
            Checks the status of a remote task running on one or more target devices.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeExecution service method.</param>
            
            <returns>The response from the DescribeExecution service method, as returned by SnowDeviceManagement.</returns>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.InternalServerException">
            An unexpected error occurred while processing the request.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ResourceNotFoundException">
            The request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ValidationException">
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/snow-device-management-2021-08-04/DescribeExecution">REST API Reference for DescribeExecution Operation</seealso>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.IAmazonSnowDeviceManagement.DescribeExecutionAsync(Amazon.SnowDeviceManagement.Model.DescribeExecutionRequest,System.Threading.CancellationToken)">
            <summary>
            Checks the status of a remote task running on one or more target devices.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeExecution service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeExecution service method, as returned by SnowDeviceManagement.</returns>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.InternalServerException">
            An unexpected error occurred while processing the request.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ResourceNotFoundException">
            The request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ValidationException">
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/snow-device-management-2021-08-04/DescribeExecution">REST API Reference for DescribeExecution Operation</seealso>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.IAmazonSnowDeviceManagement.DescribeTask(Amazon.SnowDeviceManagement.Model.DescribeTaskRequest)">
            <summary>
            Checks the metadata for a given task on a device.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeTask service method.</param>
            
            <returns>The response from the DescribeTask service method, as returned by SnowDeviceManagement.</returns>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.InternalServerException">
            An unexpected error occurred while processing the request.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ResourceNotFoundException">
            The request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ValidationException">
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/snow-device-management-2021-08-04/DescribeTask">REST API Reference for DescribeTask Operation</seealso>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.IAmazonSnowDeviceManagement.DescribeTaskAsync(Amazon.SnowDeviceManagement.Model.DescribeTaskRequest,System.Threading.CancellationToken)">
            <summary>
            Checks the metadata for a given task on a device.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeTask service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeTask service method, as returned by SnowDeviceManagement.</returns>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.InternalServerException">
            An unexpected error occurred while processing the request.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ResourceNotFoundException">
            The request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ValidationException">
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/snow-device-management-2021-08-04/DescribeTask">REST API Reference for DescribeTask Operation</seealso>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.IAmazonSnowDeviceManagement.ListDeviceResources(Amazon.SnowDeviceManagement.Model.ListDeviceResourcesRequest)">
            <summary>
            Returns a list of the Amazon Web Services resources available for a device. Currently,
            Amazon EC2 instances are the only supported resource type.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListDeviceResources service method.</param>
            
            <returns>The response from the ListDeviceResources service method, as returned by SnowDeviceManagement.</returns>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.InternalServerException">
            An unexpected error occurred while processing the request.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ResourceNotFoundException">
            The request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ValidationException">
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/snow-device-management-2021-08-04/ListDeviceResources">REST API Reference for ListDeviceResources Operation</seealso>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.IAmazonSnowDeviceManagement.ListDeviceResourcesAsync(Amazon.SnowDeviceManagement.Model.ListDeviceResourcesRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of the Amazon Web Services resources available for a device. Currently,
            Amazon EC2 instances are the only supported resource type.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListDeviceResources service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListDeviceResources service method, as returned by SnowDeviceManagement.</returns>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.InternalServerException">
            An unexpected error occurred while processing the request.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ResourceNotFoundException">
            The request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ValidationException">
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/snow-device-management-2021-08-04/ListDeviceResources">REST API Reference for ListDeviceResources Operation</seealso>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.IAmazonSnowDeviceManagement.ListDevices(Amazon.SnowDeviceManagement.Model.ListDevicesRequest)">
            <summary>
            Returns a list of all devices on your Amazon Web Services account that have Amazon
            Web Services Snow Device Management enabled in the Amazon Web Services Region where
            the command is run.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListDevices service method.</param>
            
            <returns>The response from the ListDevices service method, as returned by SnowDeviceManagement.</returns>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.InternalServerException">
            An unexpected error occurred while processing the request.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ValidationException">
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/snow-device-management-2021-08-04/ListDevices">REST API Reference for ListDevices Operation</seealso>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.IAmazonSnowDeviceManagement.ListDevicesAsync(Amazon.SnowDeviceManagement.Model.ListDevicesRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of all devices on your Amazon Web Services account that have Amazon
            Web Services Snow Device Management enabled in the Amazon Web Services Region where
            the command is run.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListDevices service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListDevices service method, as returned by SnowDeviceManagement.</returns>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.InternalServerException">
            An unexpected error occurred while processing the request.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ValidationException">
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/snow-device-management-2021-08-04/ListDevices">REST API Reference for ListDevices Operation</seealso>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.IAmazonSnowDeviceManagement.ListExecutions(Amazon.SnowDeviceManagement.Model.ListExecutionsRequest)">
            <summary>
            Returns the status of tasks for one or more target devices.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListExecutions service method.</param>
            
            <returns>The response from the ListExecutions service method, as returned by SnowDeviceManagement.</returns>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.InternalServerException">
            An unexpected error occurred while processing the request.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ResourceNotFoundException">
            The request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ValidationException">
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/snow-device-management-2021-08-04/ListExecutions">REST API Reference for ListExecutions Operation</seealso>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.IAmazonSnowDeviceManagement.ListExecutionsAsync(Amazon.SnowDeviceManagement.Model.ListExecutionsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the status of tasks for one or more target devices.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListExecutions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListExecutions service method, as returned by SnowDeviceManagement.</returns>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.InternalServerException">
            An unexpected error occurred while processing the request.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ResourceNotFoundException">
            The request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ValidationException">
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/snow-device-management-2021-08-04/ListExecutions">REST API Reference for ListExecutions Operation</seealso>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.IAmazonSnowDeviceManagement.ListTagsForResource(Amazon.SnowDeviceManagement.Model.ListTagsForResourceRequest)">
            <summary>
            Returns a list of tags for a managed device or task.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            
            <returns>The response from the ListTagsForResource service method, as returned by SnowDeviceManagement.</returns>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.InternalServerException">
            An unexpected error occurred while processing the request.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ResourceNotFoundException">
            The request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ValidationException">
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/snow-device-management-2021-08-04/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.IAmazonSnowDeviceManagement.ListTagsForResourceAsync(Amazon.SnowDeviceManagement.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of tags for a managed device or task.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by SnowDeviceManagement.</returns>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.InternalServerException">
            An unexpected error occurred while processing the request.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ResourceNotFoundException">
            The request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ValidationException">
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/snow-device-management-2021-08-04/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.IAmazonSnowDeviceManagement.ListTasks(Amazon.SnowDeviceManagement.Model.ListTasksRequest)">
            <summary>
            Returns a list of tasks that can be filtered by state.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTasks service method.</param>
            
            <returns>The response from the ListTasks service method, as returned by SnowDeviceManagement.</returns>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.InternalServerException">
            An unexpected error occurred while processing the request.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ValidationException">
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/snow-device-management-2021-08-04/ListTasks">REST API Reference for ListTasks Operation</seealso>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.IAmazonSnowDeviceManagement.ListTasksAsync(Amazon.SnowDeviceManagement.Model.ListTasksRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of tasks that can be filtered by state.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTasks service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTasks service method, as returned by SnowDeviceManagement.</returns>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.AccessDeniedException">
            You don't have sufficient access to perform this action.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.InternalServerException">
            An unexpected error occurred while processing the request.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ThrottlingException">
            The request was denied due to request throttling.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ValidationException">
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/snow-device-management-2021-08-04/ListTasks">REST API Reference for ListTasks Operation</seealso>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.IAmazonSnowDeviceManagement.TagResource(Amazon.SnowDeviceManagement.Model.TagResourceRequest)">
            <summary>
            Adds or replaces tags on a device or task.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            
            <returns>The response from the TagResource service method, as returned by SnowDeviceManagement.</returns>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.InternalServerException">
            An unexpected error occurred while processing the request.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ResourceNotFoundException">
            The request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ValidationException">
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/snow-device-management-2021-08-04/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.IAmazonSnowDeviceManagement.TagResourceAsync(Amazon.SnowDeviceManagement.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Adds or replaces tags on a device or task.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by SnowDeviceManagement.</returns>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.InternalServerException">
            An unexpected error occurred while processing the request.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ResourceNotFoundException">
            The request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ValidationException">
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/snow-device-management-2021-08-04/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.IAmazonSnowDeviceManagement.UntagResource(Amazon.SnowDeviceManagement.Model.UntagResourceRequest)">
            <summary>
            Removes a tag from a device or task.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            
            <returns>The response from the UntagResource service method, as returned by SnowDeviceManagement.</returns>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.InternalServerException">
            An unexpected error occurred while processing the request.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ResourceNotFoundException">
            The request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ValidationException">
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/snow-device-management-2021-08-04/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.SnowDeviceManagement.IAmazonSnowDeviceManagement.UntagResourceAsync(Amazon.SnowDeviceManagement.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Removes a tag from a device or task.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by SnowDeviceManagement.</returns>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.InternalServerException">
            An unexpected error occurred while processing the request.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ResourceNotFoundException">
            The request references a resource that doesn't exist.
            </exception>
            <exception cref="T:Amazon.SnowDeviceManagement.Model.ValidationException">
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/snow-device-management-2021-08-04/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
    </members>
</doc>
