<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.GreengrassV2</name>
    </assembly>
    <members>
        <member name="T:Amazon.GreengrassV2.AmazonGreengrassV2Config">
            <summary>
            Configuration for accessing Amazon GreengrassV2 service
            </summary>
        </member>
        <member name="M:Amazon.GreengrassV2.AmazonGreengrassV2Config.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.AmazonGreengrassV2Config.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.AmazonGreengrassV2Config.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.AmazonGreengrassV2Config.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.AmazonGreengrassV2Exception">
            <summary>
             Common exception for the GreengrassV2 service.
             </summary>
        </member>
        <member name="M:Amazon.GreengrassV2.AmazonGreengrassV2Exception.#ctor(System.String)">
            <summary>
            Construct instance of AmazonGreengrassV2Exception
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.GreengrassV2.AmazonGreengrassV2Exception.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonGreengrassV2Exception
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.GreengrassV2.AmazonGreengrassV2Exception.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonGreengrassV2Exception
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.GreengrassV2.AmazonGreengrassV2Exception.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonGreengrassV2Exception
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.GreengrassV2.AmazonGreengrassV2Exception.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonGreengrassV2Exception
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.GreengrassV2.AmazonGreengrassV2Exception.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the AmazonGreengrassV2Exception class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.GreengrassV2.Internal.AmazonGreengrassV2Metadata">
            <summary>
            Service metadata for  Amazon GreengrassV2 service
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Internal.AmazonGreengrassV2Metadata.ServiceId">
            <summary>
            Gets the value of the Service Id.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Internal.AmazonGreengrassV2Metadata.OperationNameMapping">
            <summary>
            Gets the dictionary that gives mapping of renamed operations
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            <summary>
            You don't have permission to perform the action.
            </summary>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.AccessDeniedException.#ctor(System.String)">
            <summary>
            Constructs a new AccessDeniedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.AccessDeniedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.AccessDeniedException.#ctor(System.Exception)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.AccessDeniedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.AccessDeniedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.AccessDeniedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the AccessDeniedException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.AccessDeniedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.AssociateClientDeviceWithCoreDeviceEntry">
            <summary>
            Contains a request to associate a client device with a core device. The <a href="https://docs.aws.amazon.com/greengrass/v2/APIReference/API_BatchAssociateClientDeviceWithCoreDevice.html">BatchAssociateClientDeviceWithCoreDevice</a>
            operation consumes a list of these requests.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.AssociateClientDeviceWithCoreDeviceEntry.ThingName">
            <summary>
            Gets and sets the property ThingName. 
            <para>
            The name of the IoT thing that represents the client device to associate.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.AssociateClientDeviceWithCoreDeviceErrorEntry">
            <summary>
            Contains an error that occurs from a request to associate a client device with a core
            device. The <a href="https://docs.aws.amazon.com/greengrass/v2/APIReference/API_BatchAssociateClientDeviceWithCoreDevice.html">BatchAssociateClientDeviceWithCoreDevice</a>
            operation returns a list of these errors.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.AssociateClientDeviceWithCoreDeviceErrorEntry.Code">
            <summary>
            Gets and sets the property Code. 
            <para>
            The error code for the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.AssociateClientDeviceWithCoreDeviceErrorEntry.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            A message that provides additional information about the error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.AssociateClientDeviceWithCoreDeviceErrorEntry.ThingName">
            <summary>
            Gets and sets the property ThingName. 
            <para>
            The name of the IoT thing whose associate request failed.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.AssociatedClientDevice">
            <summary>
            Contains information about a client device that is associated to a core device for
            cloud discovery.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.AssociatedClientDevice.AssociationTimestamp">
            <summary>
            Gets and sets the property AssociationTimestamp. 
            <para>
            The time that the client device was associated, expressed in ISO 8601 format.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.AssociatedClientDevice.ThingName">
            <summary>
            Gets and sets the property ThingName. 
            <para>
            The name of the IoT thing that represents the associated client device.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.BatchAssociateClientDeviceWithCoreDeviceRequest">
            <summary>
            Container for the parameters to the BatchAssociateClientDeviceWithCoreDevice operation.
            Associate a list of client devices with a core device. Use this API operation to specify
            which client devices can discover a core device through cloud discovery. With cloud
            discovery, client devices connect to IoT Greengrass to retrieve associated core devices'
            connectivity information and certificates. For more information, see <a href="https://docs.aws.amazon.com/greengrass/v2/developerguide/configure-cloud-discovery.html">Configure
            cloud discovery</a> in the <i>IoT Greengrass V2 Developer Guide</i>.
            
             <note> 
            <para>
            Client devices are local IoT devices that connect to and communicate with an IoT Greengrass
            core device over MQTT. You can connect client devices to a core device to sync MQTT
            messages and data to Amazon Web Services IoT Core and interact with client devices
            in Greengrass components. For more information, see <a href="https://docs.aws.amazon.com/greengrass/v2/developerguide/interact-with-local-iot-devices.html">Interact
            with local IoT devices</a> in the <i>IoT Greengrass V2 Developer Guide</i>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.BatchAssociateClientDeviceWithCoreDeviceRequest.CoreDeviceThingName">
            <summary>
            Gets and sets the property CoreDeviceThingName. 
            <para>
            The name of the core device. This is also the name of the IoT thing.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.BatchAssociateClientDeviceWithCoreDeviceRequest.Entries">
            <summary>
            Gets and sets the property Entries. 
            <para>
            The list of client devices to associate.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.BatchAssociateClientDeviceWithCoreDeviceResponse">
            <summary>
            This is the response object from the BatchAssociateClientDeviceWithCoreDevice operation.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.BatchAssociateClientDeviceWithCoreDeviceResponse.ErrorEntries">
            <summary>
            Gets and sets the property ErrorEntries. 
            <para>
            The list of any errors for the entries in the request. Each error entry contains the
            name of the IoT thing that failed to associate.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.BatchDisassociateClientDeviceFromCoreDeviceRequest">
            <summary>
            Container for the parameters to the BatchDisassociateClientDeviceFromCoreDevice operation.
            Disassociate a list of client devices from a core device. After you disassociate a
            client device from a core device, the client device won't be able to use cloud discovery
            to retrieve the core device's connectivity information and certificates.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.BatchDisassociateClientDeviceFromCoreDeviceRequest.CoreDeviceThingName">
            <summary>
            Gets and sets the property CoreDeviceThingName. 
            <para>
            The name of the core device. This is also the name of the IoT thing.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.BatchDisassociateClientDeviceFromCoreDeviceRequest.Entries">
            <summary>
            Gets and sets the property Entries. 
            <para>
            The list of client devices to disassociate.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.BatchDisassociateClientDeviceFromCoreDeviceResponse">
            <summary>
            This is the response object from the BatchDisassociateClientDeviceFromCoreDevice operation.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.BatchDisassociateClientDeviceFromCoreDeviceResponse.ErrorEntries">
            <summary>
            Gets and sets the property ErrorEntries. 
            <para>
            The list of errors (if any) for the entries in the request. Each error entry contains
            the name of the IoT thing that failed to disassociate.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.CancelDeploymentRequest">
            <summary>
            Container for the parameters to the CancelDeployment operation.
            Cancels a deployment. This operation cancels the deployment for devices that haven't
            yet received it. If a device already received the deployment, this operation doesn't
            change anything for that device.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.CancelDeploymentRequest.DeploymentId">
            <summary>
            Gets and sets the property DeploymentId. 
            <para>
            The ID of the deployment.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.CancelDeploymentResponse">
            <summary>
            This is the response object from the CancelDeployment operation.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.CancelDeploymentResponse.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            A message that communicates if the cancel was successful.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.CloudComponentStatus">
            <summary>
            Contains the status of a component in the IoT Greengrass service.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.CloudComponentStatus.ComponentState">
            <summary>
            Gets and sets the property ComponentState. 
            <para>
            The state of the component.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.CloudComponentStatus.Errors">
            <summary>
            Gets and sets the property Errors. 
            <para>
            A dictionary of errors that communicate why the component is in an error state. For
            example, if IoT Greengrass can't access an artifact for the component, then <code>errors</code>
            contains the artifact's URI as a key, and the error message as the value for that
            key.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.CloudComponentStatus.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            A message that communicates details, such as errors, about the status of the component.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Component">
            <summary>
            Contains information about a component.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Component.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a>
            of the component version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Component.ComponentName">
            <summary>
            Gets and sets the property ComponentName. 
            <para>
            The name of the component.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Component.LatestVersion">
            <summary>
            Gets and sets the property LatestVersion. 
            <para>
            The latest version of the component and its details.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.ComponentCandidate">
            <summary>
            Contains information about a component that is a candidate to deploy to a Greengrass
            core device.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ComponentCandidate.ComponentName">
            <summary>
            Gets and sets the property ComponentName. 
            <para>
            The name of the component.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ComponentCandidate.ComponentVersion">
            <summary>
            Gets and sets the property ComponentVersion. 
            <para>
            The version of the component.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ComponentCandidate.VersionRequirements">
            <summary>
            Gets and sets the property VersionRequirements. 
            <para>
            The version requirements for the component's dependencies. Greengrass core devices
            get the version requirements from component recipes.
            </para>
             
            <para>
            IoT Greengrass V2 uses semantic version constraints. For more information, see <a
            href="https://semver.org/">Semantic Versioning</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.ComponentConfigurationUpdate">
            <summary>
            Contains information about a deployment's update to a component's configuration on
            Greengrass core devices. For more information, see <a href="https://docs.aws.amazon.com/greengrass/v2/developerguide/update-component-configurations.html">Update
            component configurations</a> in the <i>IoT Greengrass V2 Developer Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ComponentConfigurationUpdate.Merge">
            <summary>
            Gets and sets the property Merge. 
            <para>
            A serialized JSON string that contains the configuration object to merge to target
            devices. The core device merges this configuration with the component's existing configuration.
            If this is the first time a component deploys on a device, the core device merges
            this configuration with the component's default configuration. This means that the
            core device keeps it's existing configuration for keys and values that you don't specify
            in this object. For more information, see <a href="https://docs.aws.amazon.com/greengrass/v2/developerguide/update-component-configurations.html#merge-configuration-update">Merge
            configuration updates</a> in the <i>IoT Greengrass V2 Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ComponentConfigurationUpdate.Reset">
            <summary>
            Gets and sets the property Reset. 
            <para>
            The list of configuration nodes to reset to default values on target devices. Use
            JSON pointers to specify each node to reset. JSON pointers start with a forward slash
            (<code>/</code>) and use forward slashes to separate the key for each level in the
            object. For more information, see the <a href="https://tools.ietf.org/html/rfc6901">JSON
            pointer specification</a> and <a href="https://docs.aws.amazon.com/greengrass/v2/developerguide/update-component-configurations.html#reset-configuration-update">Reset
            configuration updates</a> in the <i>IoT Greengrass V2 Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.ComponentDependencyRequirement">
            <summary>
            Contains information about a component dependency for a Lambda function component.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ComponentDependencyRequirement.DependencyType">
            <summary>
            Gets and sets the property DependencyType. 
            <para>
            The type of this dependency. Choose from the following options:
            </para>
             <ul> <li> 
            <para>
             <code>SOFT</code> – The component doesn't restart if the dependency changes state.
            </para>
             </li> <li> 
            <para>
             <code>HARD</code> – The component restarts if the dependency changes state.
            </para>
             </li> </ul> 
            <para>
            Default: <code>HARD</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ComponentDependencyRequirement.VersionRequirement">
            <summary>
            Gets and sets the property VersionRequirement. 
            <para>
            The component version requirement for the component dependency.
            </para>
             
            <para>
            IoT Greengrass V2 uses semantic version constraints. For more information, see <a
            href="https://semver.org/">Semantic Versioning</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.ComponentDeploymentSpecification">
            <summary>
            Contains information about a component to deploy.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ComponentDeploymentSpecification.ComponentVersion">
            <summary>
            Gets and sets the property ComponentVersion. 
            <para>
            The version of the component.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ComponentDeploymentSpecification.ConfigurationUpdate">
            <summary>
            Gets and sets the property ConfigurationUpdate. 
            <para>
            The configuration updates to deploy for the component. You can define <i>reset</i>
            updates and <i>merge</i> updates. A reset updates the keys that you specify to the
            default configuration for the component. A merge updates the core device's component
            configuration with the keys and values that you specify. The IoT Greengrass Core software
            applies reset updates before it applies merge updates. For more information, see <a
            href="https://docs.aws.amazon.com/greengrass/v2/developerguide/update-component-configurations.html">Update
            component configurations</a> in the <i>IoT Greengrass V2 Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ComponentDeploymentSpecification.RunWith">
            <summary>
            Gets and sets the property RunWith. 
            <para>
            The system user and group that the IoT Greengrass Core software uses to run component
            processes on the core device. If you omit this parameter, the IoT Greengrass Core
            software uses the system user and group that you configure for the core device. For
            more information, see <a href="https://docs.aws.amazon.com/greengrass/v2/developerguide/configure-greengrass-core-v2.html#configure-component-user">Configure
            the user and group that run components</a> in the <i>IoT Greengrass V2 Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.ComponentLatestVersion">
            <summary>
            Contains information about the latest version of a component.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ComponentLatestVersion.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a>
            of the component version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ComponentLatestVersion.ComponentVersion">
            <summary>
            Gets and sets the property ComponentVersion. 
            <para>
            The version of the component.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ComponentLatestVersion.CreationTimestamp">
            <summary>
            Gets and sets the property CreationTimestamp. 
            <para>
            The time at which the component was created, expressed in ISO 8601 format.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ComponentLatestVersion.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The description of the component version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ComponentLatestVersion.Platforms">
            <summary>
            Gets and sets the property Platforms. 
            <para>
            The platforms that the component version supports.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ComponentLatestVersion.Publisher">
            <summary>
            Gets and sets the property Publisher. 
            <para>
            The publisher of the component version.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.ComponentPlatform">
            <summary>
            Contains information about a platform that a component supports.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ComponentPlatform.Attributes">
            <summary>
            Gets and sets the property Attributes. 
            <para>
            A dictionary of attributes for the platform. The IoT Greengrass Core software defines
            the <code>os</code> and <code>platform</code> by default. You can specify additional
            platform attributes for a core device when you deploy the Greengrass nucleus component.
            For more information, see the <a href="https://docs.aws.amazon.com/greengrass/v2/developerguide/greengrass-nucleus-component.html">Greengrass
            nucleus component</a> in the <i>IoT Greengrass V2 Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ComponentPlatform.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The friendly name of the platform. This name helps you identify the platform.
            </para>
             
            <para>
            If you omit this parameter, IoT Greengrass creates a friendly name from the <code>os</code>
            and <code>architecture</code> of the platform.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.ComponentRunWith">
            <summary>
            Contains information system user and group that the IoT Greengrass Core software uses
            to run component processes on the core device. For more information, see <a href="https://docs.aws.amazon.com/greengrass/v2/developerguide/configure-greengrass-core-v2.html#configure-component-user">Configure
            the user and group that run components</a> in the <i>IoT Greengrass V2 Developer Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ComponentRunWith.PosixUser">
            <summary>
            Gets and sets the property PosixUser. 
            <para>
            The POSIX system user and (optional) group to use to run this component. Specify the
            user and group separated by a colon (<code>:</code>) in the following format: <code>user:group</code>.
            The group is optional. If you don't specify a group, the IoT Greengrass Core software
            uses the primary user for the group.
            </para>
             
            <para>
            If you omit this parameter, the IoT Greengrass Core software uses the default system
            user and group that you configure on the Greengrass nucleus component. For more information,
            see <a href="https://docs.aws.amazon.com/greengrass/v2/developerguide/configure-greengrass-core-v2.html#configure-component-user">Configure
            the user and group that run components</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ComponentRunWith.SystemResourceLimits">
            <summary>
            Gets and sets the property SystemResourceLimits. 
            <para>
            The system resource limits to apply to this component's process on the core device.
            </para>
             
            <para>
            If you omit this parameter, the IoT Greengrass Core software uses the default system
            resource limits that you configure on the Greengrass nucleus component. For more information,
            see <a href="https://docs.aws.amazon.com/greengrass/v2/developerguide/configure-greengrass-core-v2.html#configure-component-system-resource-limits">Configure
            system resource limits for components</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.ComponentVersionListItem">
            <summary>
            Contains information about a component version in a list.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ComponentVersionListItem.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a>
            of the component version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ComponentVersionListItem.ComponentName">
            <summary>
            Gets and sets the property ComponentName. 
            <para>
            The name of the component.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ComponentVersionListItem.ComponentVersion">
            <summary>
            Gets and sets the property ComponentVersion. 
            <para>
            The version of the component.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.ConflictException">
            <summary>
            Your request has conflicting operations. This can occur if you're trying to perform
            more than one operation on the same resource at the same time.
            </summary>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.ConflictException.#ctor(System.String)">
            <summary>
            Constructs a new ConflictException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.ConflictException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.ConflictException.#ctor(System.Exception)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.ConflictException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.ConflictException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.ConflictException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ConflictException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.ConflictException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ConflictException.ResourceId">
            <summary>
            Gets and sets the property ResourceId. 
            <para>
            The ID of the resource that conflicts with the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ConflictException.ResourceType">
            <summary>
            Gets and sets the property ResourceType. 
            <para>
            The type of the resource that conflicts with the request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.CoreDevice">
            <summary>
            Contains information about a Greengrass core device, which is an IoT thing that runs
            the IoT Greengrass Core software.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.CoreDevice.CoreDeviceThingName">
            <summary>
            Gets and sets the property CoreDeviceThingName. 
            <para>
            The name of the core device. This is also the name of the IoT thing.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.CoreDevice.LastStatusUpdateTimestamp">
            <summary>
            Gets and sets the property LastStatusUpdateTimestamp. 
            <para>
            The time at which the core device's status last updated, expressed in ISO 8601 format.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.CoreDevice.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the core device. Core devices can have the following statuses:
            </para>
             <ul> <li> 
            <para>
             <code>HEALTHY</code> – The IoT Greengrass Core software and all components run on
            the core device without issue.
            </para>
             </li> <li> 
            <para>
             <code>UNHEALTHY</code> – The IoT Greengrass Core software or a component is in a
            failed state on the core device.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.CreateComponentVersionRequest">
            <summary>
            Container for the parameters to the CreateComponentVersion operation.
            Creates a component. Components are software that run on Greengrass core devices.
            After you develop and test a component on your core device, you can use this operation
            to upload your component to IoT Greengrass. Then, you can deploy the component to
            other core devices.
            
             
            <para>
            You can use this operation to do the following:
            </para>
             <ul> <li> 
            <para>
             <b>Create components from recipes</b> 
            </para>
             
            <para>
            Create a component from a recipe, which is a file that defines the component's metadata,
            parameters, dependencies, lifecycle, artifacts, and platform capability. For more
            information, see <a href="https://docs.aws.amazon.com/greengrass/v2/developerguide/component-recipe-reference.html">IoT
            Greengrass component recipe reference</a> in the <i>IoT Greengrass V2 Developer Guide</i>.
            </para>
             
            <para>
            To create a component from a recipe, specify <code>inlineRecipe</code> when you call
            this operation.
            </para>
             </li> <li> 
            <para>
             <b>Create components from Lambda functions</b> 
            </para>
             
            <para>
            Create a component from an Lambda function that runs on IoT Greengrass. This creates
            a recipe and artifacts from the Lambda function's deployment package. You can use
            this operation to migrate Lambda functions from IoT Greengrass V1 to IoT Greengrass
            V2.
            </para>
             
            <para>
            This function only accepts Lambda functions that use the following runtimes:
            </para>
             <ul> <li> 
            <para>
            Python 2.7 – <code>python2.7</code> 
            </para>
             </li> <li> 
            <para>
            Python 3.7 – <code>python3.7</code> 
            </para>
             </li> <li> 
            <para>
            Python 3.8 – <code>python3.8</code> 
            </para>
             </li> <li> 
            <para>
            Java 8 – <code>java8</code> 
            </para>
             </li> <li> 
            <para>
            Node.js 10 – <code>nodejs10.x</code> 
            </para>
             </li> <li> 
            <para>
            Node.js 12 – <code>nodejs12.x</code> 
            </para>
             </li> </ul> 
            <para>
            To create a component from a Lambda function, specify <code>lambdaFunction</code>
            when you call this operation.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.CreateComponentVersionRequest.ClientToken">
            <summary>
            Gets and sets the property ClientToken. 
            <para>
            A unique, case-sensitive identifier that you can provide to ensure that the request
            is idempotent. Idempotency means that the request is successfully processed only once,
            even if you send the request multiple times. When a request succeeds, and you specify
            the same client token for subsequent successful requests, the IoT Greengrass V2 service
            returns the successful response that it caches from the previous request. IoT Greengrass
            V2 caches successful responses for idempotent requests for up to 8 hours.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.CreateComponentVersionRequest.InlineRecipe">
            <summary>
            Gets and sets the property InlineRecipe. 
            <para>
            The recipe to use to create the component. The recipe defines the component's metadata,
            parameters, dependencies, lifecycle, artifacts, and platform compatibility.
            </para>
             
            <para>
            You must specify either <code>inlineRecipe</code> or <code>lambdaFunction</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.CreateComponentVersionRequest.LambdaFunction">
            <summary>
            Gets and sets the property LambdaFunction. 
            <para>
            The parameters to create a component from a Lambda function.
            </para>
             
            <para>
            You must specify either <code>inlineRecipe</code> or <code>lambdaFunction</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.CreateComponentVersionRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            A list of key-value pairs that contain metadata for the resource. For more information,
            see <a href="https://docs.aws.amazon.com/greengrass/v2/developerguide/tag-resources.html">Tag
            your resources</a> in the <i>IoT Greengrass V2 Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.CreateComponentVersionResponse">
            <summary>
            This is the response object from the CreateComponentVersion operation.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.CreateComponentVersionResponse.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a>
            of the component version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.CreateComponentVersionResponse.ComponentName">
            <summary>
            Gets and sets the property ComponentName. 
            <para>
            The name of the component.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.CreateComponentVersionResponse.ComponentVersion">
            <summary>
            Gets and sets the property ComponentVersion. 
            <para>
            The version of the component.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.CreateComponentVersionResponse.CreationTimestamp">
            <summary>
            Gets and sets the property CreationTimestamp. 
            <para>
            The time at which the component was created, expressed in ISO 8601 format.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.CreateComponentVersionResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the component version in IoT Greengrass V2. This status is different
            from the status of the component on a core device.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.CreateDeploymentRequest">
            <summary>
            Container for the parameters to the CreateDeployment operation.
            Creates a continuous deployment for a target, which is a Greengrass core device or
            group of core devices. When you add a new core device to a group of core devices that
            has a deployment, IoT Greengrass deploys that group's deployment to the new device.
            
             
            <para>
            You can define one deployment for each target. When you create a new deployment for
            a target that has an existing deployment, you replace the previous deployment. IoT
            Greengrass applies the new deployment to the target devices.
            </para>
             
            <para>
            Every deployment has a revision number that indicates how many deployment revisions
            you define for a target. Use this operation to create a new revision of an existing
            deployment. This operation returns the revision number of the new deployment when
            you create it.
            </para>
             
            <para>
            For more information, see the <a href="https://docs.aws.amazon.com/greengrass/v2/developerguide/create-deployments.html">Create
            deployments</a> in the <i>IoT Greengrass V2 Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.CreateDeploymentRequest.ClientToken">
            <summary>
            Gets and sets the property ClientToken. 
            <para>
            A unique, case-sensitive identifier that you can provide to ensure that the request
            is idempotent. Idempotency means that the request is successfully processed only once,
            even if you send the request multiple times. When a request succeeds, and you specify
            the same client token for subsequent successful requests, the IoT Greengrass V2 service
            returns the successful response that it caches from the previous request. IoT Greengrass
            V2 caches successful responses for idempotent requests for up to 8 hours.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.CreateDeploymentRequest.Components">
            <summary>
            Gets and sets the property Components. 
            <para>
            The components to deploy. This is a dictionary, where each key is the name of a component,
            and each key's value is the version and configuration to deploy for that component.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.CreateDeploymentRequest.DeploymentName">
            <summary>
            Gets and sets the property DeploymentName. 
            <para>
            The name of the deployment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.CreateDeploymentRequest.DeploymentPolicies">
            <summary>
            Gets and sets the property DeploymentPolicies. 
            <para>
            The deployment policies for the deployment. These policies define how the deployment
            updates components and handles failure.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.CreateDeploymentRequest.IotJobConfiguration">
            <summary>
            Gets and sets the property IotJobConfiguration. 
            <para>
            The job configuration for the deployment configuration. The job configuration specifies
            the rollout, timeout, and stop configurations for the deployment configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.CreateDeploymentRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            A list of key-value pairs that contain metadata for the resource. For more information,
            see <a href="https://docs.aws.amazon.com/greengrass/v2/developerguide/tag-resources.html">Tag
            your resources</a> in the <i>IoT Greengrass V2 Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.CreateDeploymentRequest.TargetArn">
            <summary>
            Gets and sets the property TargetArn. 
            <para>
            The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a>
            of the target IoT thing or thing group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.CreateDeploymentResponse">
            <summary>
            This is the response object from the CreateDeployment operation.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.CreateDeploymentResponse.DeploymentId">
            <summary>
            Gets and sets the property DeploymentId. 
            <para>
            The ID of the deployment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.CreateDeploymentResponse.IotJobArn">
            <summary>
            Gets and sets the property IotJobArn. 
            <para>
            The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a>
            of the IoT job that applies the deployment to target devices.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.CreateDeploymentResponse.IotJobId">
            <summary>
            Gets and sets the property IotJobId. 
            <para>
            The ID of the IoT job that applies the deployment to target devices.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.DeleteComponentRequest">
            <summary>
            Container for the parameters to the DeleteComponent operation.
            Deletes a version of a component from IoT Greengrass.
            
             <note> 
            <para>
            This operation deletes the component's recipe and artifacts. As a result, deployments
            that refer to this component version will fail. If you have deployments that use this
            component version, you can remove the component from the deployment or update the
            deployment to use a valid version.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.DeleteComponentRequest.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a>
            of the component version.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.DeleteComponentResponse">
            <summary>
            This is the response object from the DeleteComponent operation.
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.DeleteCoreDeviceRequest">
            <summary>
            Container for the parameters to the DeleteCoreDevice operation.
            Deletes a Greengrass core device, which is an IoT thing. This operation removes the
            core device from the list of core devices. This operation doesn't delete the IoT thing.
            For more information about how to delete the IoT thing, see <a href="https://docs.aws.amazon.com/iot/latest/apireference/API_DeleteThing.html">DeleteThing</a>
            in the <i>IoT API Reference</i>.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.DeleteCoreDeviceRequest.CoreDeviceThingName">
            <summary>
            Gets and sets the property CoreDeviceThingName. 
            <para>
            The name of the core device. This is also the name of the IoT thing.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.DeleteCoreDeviceResponse">
            <summary>
            This is the response object from the DeleteCoreDevice operation.
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Deployment">
            <summary>
            Contains information about a deployment.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Deployment.CreationTimestamp">
            <summary>
            Gets and sets the property CreationTimestamp. 
            <para>
            The time at which the deployment was created, expressed in ISO 8601 format.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Deployment.DeploymentId">
            <summary>
            Gets and sets the property DeploymentId. 
            <para>
            The ID of the deployment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Deployment.DeploymentName">
            <summary>
            Gets and sets the property DeploymentName. 
            <para>
            The name of the deployment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Deployment.DeploymentStatus">
            <summary>
            Gets and sets the property DeploymentStatus. 
            <para>
            The status of the deployment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Deployment.IsLatestForTarget">
            <summary>
            Gets and sets the property IsLatestForTarget. 
            <para>
            Whether or not the deployment is the latest revision for its target.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Deployment.RevisionId">
            <summary>
            Gets and sets the property RevisionId. 
            <para>
            The revision number of the deployment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Deployment.TargetArn">
            <summary>
            Gets and sets the property TargetArn. 
            <para>
            The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a>
            of the target IoT thing or thing group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.DeploymentComponentUpdatePolicy">
            <summary>
            Contains information about a deployment's policy that defines when components are
            safe to update.
            
             
            <para>
            Each component on a device can report whether or not it's ready to update. After a
            component and its dependencies are ready, they can apply the update in the deployment.
            You can configure whether or not the deployment notifies components of an update and
            waits for a response. You specify the amount of time each component has to respond
            to the update notification.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.DeploymentComponentUpdatePolicy.Action">
            <summary>
            Gets and sets the property Action. 
            <para>
            Whether or not to notify components and wait for components to become safe to update.
            Choose from the following options:
            </para>
             <ul> <li> 
            <para>
             <code>NOTIFY_COMPONENTS</code> – The deployment notifies each component before it
            stops and updates that component. Components can use the <a href="https://docs.aws.amazon.com/greengrass/v2/developerguide/interprocess-communication.html#ipc-operation-subscribetocomponentupdates">SubscribeToComponentUpdates</a>
            IPC operation to receive these notifications. Then, components can respond with the
            <a href="https://docs.aws.amazon.com/greengrass/v2/developerguide/interprocess-communication.html#ipc-operation-defercomponentupdate">DeferComponentUpdate</a>
            IPC operation. For more information, see <a href="https://docs.aws.amazon.com/greengrass/v2/developerguide/create-deployments.html">Create
            deployments</a> in the <i>IoT Greengrass V2 Developer Guide</i>.
            </para>
             </li> <li> 
            <para>
             <code>SKIP_NOTIFY_COMPONENTS</code> – The deployment doesn't notify components or
            wait for them to be safe to update.
            </para>
             </li> </ul> 
            <para>
            Default: <code>NOTIFY_COMPONENTS</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.DeploymentComponentUpdatePolicy.TimeoutInSeconds">
            <summary>
            Gets and sets the property TimeoutInSeconds. 
            <para>
            The amount of time in seconds that each component on a device has to report that it's
            safe to update. If the component waits for longer than this timeout, then the deployment
            proceeds on the device.
            </para>
             
            <para>
            Default: <code>60</code> 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.DeploymentConfigurationValidationPolicy">
            <summary>
            Contains information about how long a component on a core device can validate its
            configuration updates before it times out. Components can use the <a href="https://docs.aws.amazon.com/greengrass/v2/developerguide/interprocess-communication.html#ipc-operation-subscribetovalidateconfigurationupdates">SubscribeToValidateConfigurationUpdates</a>
            IPC operation to receive notifications when a deployment specifies a configuration
            update. Then, components can respond with the <a href="https://docs.aws.amazon.com/greengrass/v2/developerguide/interprocess-communication.html#ipc-operation-sendconfigurationvalidityreport">SendConfigurationValidityReport</a>
            IPC operation. For more information, see <a href="https://docs.aws.amazon.com/greengrass/v2/developerguide/create-deployments.html">Create
            deployments</a> in the <i>IoT Greengrass V2 Developer Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.DeploymentConfigurationValidationPolicy.TimeoutInSeconds">
            <summary>
            Gets and sets the property TimeoutInSeconds. 
            <para>
            The amount of time in seconds that a component can validate its configuration updates.
            If the validation time exceeds this timeout, then the deployment proceeds for the
            device.
            </para>
             
            <para>
            Default: <code>30</code> 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.DeploymentIoTJobConfiguration">
            <summary>
            Contains information about an IoT job configuration.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.DeploymentIoTJobConfiguration.AbortConfig">
            <summary>
            Gets and sets the property AbortConfig. 
            <para>
            The stop configuration for the job. This configuration defines when and how to stop
            a job rollout.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.DeploymentIoTJobConfiguration.JobExecutionsRolloutConfig">
            <summary>
            Gets and sets the property JobExecutionsRolloutConfig. 
            <para>
            The rollout configuration for the job. This configuration defines the rate at which
            the job rolls out to the fleet of target devices.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.DeploymentIoTJobConfiguration.TimeoutConfig">
            <summary>
            Gets and sets the property TimeoutConfig. 
            <para>
            The timeout configuration for the job. This configuration defines the amount of time
            each device has to complete the job.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.DeploymentPolicies">
            <summary>
            Contains information about policies that define how a deployment updates components
            and handles failure.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.DeploymentPolicies.ComponentUpdatePolicy">
            <summary>
            Gets and sets the property ComponentUpdatePolicy. 
            <para>
            The component update policy for the configuration deployment. This policy defines
            when it's safe to deploy the configuration to devices.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.DeploymentPolicies.ConfigurationValidationPolicy">
            <summary>
            Gets and sets the property ConfigurationValidationPolicy. 
            <para>
            The configuration validation policy for the configuration deployment. This policy
            defines how long each component has to validate its configure updates.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.DeploymentPolicies.FailureHandlingPolicy">
            <summary>
            Gets and sets the property FailureHandlingPolicy. 
            <para>
            The failure handling policy for the configuration deployment. This policy defines
            what to do if the deployment fails.
            </para>
             
            <para>
            Default: <code>ROLLBACK</code> 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.DescribeComponentRequest">
            <summary>
            Container for the parameters to the DescribeComponent operation.
            Retrieves metadata for a version of a component.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.DescribeComponentRequest.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a>
            of the component version.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.DescribeComponentResponse">
            <summary>
            This is the response object from the DescribeComponent operation.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.DescribeComponentResponse.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a>
            of the component version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.DescribeComponentResponse.ComponentName">
            <summary>
            Gets and sets the property ComponentName. 
            <para>
            The name of the component.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.DescribeComponentResponse.ComponentVersion">
            <summary>
            Gets and sets the property ComponentVersion. 
            <para>
            The version of the component.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.DescribeComponentResponse.CreationTimestamp">
            <summary>
            Gets and sets the property CreationTimestamp. 
            <para>
            The time at which the component was created, expressed in ISO 8601 format.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.DescribeComponentResponse.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The description of the component version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.DescribeComponentResponse.Platforms">
            <summary>
            Gets and sets the property Platforms. 
            <para>
            The platforms that the component version supports.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.DescribeComponentResponse.Publisher">
            <summary>
            Gets and sets the property Publisher. 
            <para>
            The publisher of the component version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.DescribeComponentResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the component version in IoT Greengrass V2. This status is different
            from the status of the component on a core device.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.DescribeComponentResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            A list of key-value pairs that contain metadata for the resource. For more information,
            see <a href="https://docs.aws.amazon.com/greengrass/v2/developerguide/tag-resources.html">Tag
            your resources</a> in the <i>IoT Greengrass V2 Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.DisassociateClientDeviceFromCoreDeviceEntry">
            <summary>
            Contains a request to disassociate a client device from a core device. The <a href="https://docs.aws.amazon.com/greengrass/v2/APIReference/API_BatchDisassociateClientDeviceWithCoreDevice.html">BatchDisassociateClientDeviceWithCoreDevice</a>
            operation consumes a list of these requests.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.DisassociateClientDeviceFromCoreDeviceEntry.ThingName">
            <summary>
            Gets and sets the property ThingName. 
            <para>
            The name of the IoT thing that represents the client device to disassociate.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.DisassociateClientDeviceFromCoreDeviceErrorEntry">
            <summary>
            Contains an error that occurs from a request to disassociate a client device from
            a core device. The <a href="https://docs.aws.amazon.com/greengrass/v2/APIReference/API_BatchDisassociateClientDeviceWithCoreDevice.html">BatchDisassociateClientDeviceWithCoreDevice</a>
            operation returns a list of these errors.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.DisassociateClientDeviceFromCoreDeviceErrorEntry.Code">
            <summary>
            Gets and sets the property Code. 
            <para>
            The error code for the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.DisassociateClientDeviceFromCoreDeviceErrorEntry.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            A message that provides additional information about the error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.DisassociateClientDeviceFromCoreDeviceErrorEntry.ThingName">
            <summary>
            Gets and sets the property ThingName. 
            <para>
            The name of the IoT thing whose disassociate request failed.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.EffectiveDeployment">
            <summary>
            Contains information about a deployment job that IoT Greengrass sends to a Greengrass
            core device.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.EffectiveDeployment.CoreDeviceExecutionStatus">
            <summary>
            Gets and sets the property CoreDeviceExecutionStatus. 
            <para>
            The status of the deployment job on the Greengrass core device.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.EffectiveDeployment.CreationTimestamp">
            <summary>
            Gets and sets the property CreationTimestamp. 
            <para>
            The time at which the deployment was created, expressed in ISO 8601 format.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.EffectiveDeployment.DeploymentId">
            <summary>
            Gets and sets the property DeploymentId. 
            <para>
            The ID of the deployment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.EffectiveDeployment.DeploymentName">
            <summary>
            Gets and sets the property DeploymentName. 
            <para>
            The name of the deployment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.EffectiveDeployment.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The description of the deployment job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.EffectiveDeployment.IotJobArn">
            <summary>
            Gets and sets the property IotJobArn. 
            <para>
            The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a>
            of the IoT job that applies the deployment to target devices.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.EffectiveDeployment.IotJobId">
            <summary>
            Gets and sets the property IotJobId. 
            <para>
            The ID of the IoT job that applies the deployment to target devices.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.EffectiveDeployment.ModifiedTimestamp">
            <summary>
            Gets and sets the property ModifiedTimestamp. 
            <para>
            The time at which the deployment job was last modified, expressed in ISO 8601 format.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.EffectiveDeployment.Reason">
            <summary>
            Gets and sets the property Reason. 
            <para>
            The reason code for the update, if the job was updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.EffectiveDeployment.TargetArn">
            <summary>
            Gets and sets the property TargetArn. 
            <para>
            The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a>
            of the target IoT thing or thing group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.GetComponentRequest">
            <summary>
            Container for the parameters to the GetComponent operation.
            Gets the recipe for a version of a component. Core devices can call this operation
            to identify the artifacts and requirements to install a component.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.GetComponentRequest.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a>
            of the component version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.GetComponentRequest.RecipeOutputFormat">
            <summary>
            Gets and sets the property RecipeOutputFormat. 
            <para>
            The format of the recipe.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.GetComponentResponse">
            <summary>
            This is the response object from the GetComponent operation.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.GetComponentResponse.Recipe">
            <summary>
            Gets and sets the property Recipe. 
            <para>
            The recipe of the component version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.GetComponentResponse.RecipeOutputFormat">
            <summary>
            Gets and sets the property RecipeOutputFormat. 
            <para>
            The format of the recipe.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.GetComponentResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            A list of key-value pairs that contain metadata for the resource. For more information,
            see <a href="https://docs.aws.amazon.com/greengrass/v2/developerguide/tag-resources.html">Tag
            your resources</a> in the <i>IoT Greengrass V2 Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.GetComponentVersionArtifactRequest">
            <summary>
            Container for the parameters to the GetComponentVersionArtifact operation.
            Gets the pre-signed URL to download a public component artifact. Core devices call
            this operation to identify the URL that they can use to download an artifact to install.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.GetComponentVersionArtifactRequest.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a>
            of the component version. Specify the ARN of a public component version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.GetComponentVersionArtifactRequest.ArtifactName">
            <summary>
            Gets and sets the property ArtifactName. 
            <para>
            The name of the artifact.
            </para>
             
            <para>
            You can use the <a href="https://docs.aws.amazon.com/greengrass/v2/APIReference/API_GetComponent.html">GetComponent</a>
            operation to download the component recipe, which includes the URI of the artifact.
            The artifact name is the section of the URI after the scheme. For example, in the
            artifact URI <code>greengrass:SomeArtifact.zip</code>, the artifact name is <code>SomeArtifact.zip</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.GetComponentVersionArtifactResponse">
            <summary>
            This is the response object from the GetComponentVersionArtifact operation.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.GetComponentVersionArtifactResponse.PreSignedUrl">
            <summary>
            Gets and sets the property PreSignedUrl. 
            <para>
            The URL of the artifact.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.GetCoreDeviceRequest">
            <summary>
            Container for the parameters to the GetCoreDevice operation.
            Retrieves metadata for a Greengrass core device.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.GetCoreDeviceRequest.CoreDeviceThingName">
            <summary>
            Gets and sets the property CoreDeviceThingName. 
            <para>
            The name of the core device. This is also the name of the IoT thing.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.GetCoreDeviceResponse">
            <summary>
            This is the response object from the GetCoreDevice operation.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.GetCoreDeviceResponse.Architecture">
            <summary>
            Gets and sets the property Architecture. 
            <para>
            The computer architecture of the core device.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.GetCoreDeviceResponse.CoreDeviceThingName">
            <summary>
            Gets and sets the property CoreDeviceThingName. 
            <para>
            The name of the core device. This is also the name of the IoT thing.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.GetCoreDeviceResponse.CoreVersion">
            <summary>
            Gets and sets the property CoreVersion. 
            <para>
            The version of the IoT Greengrass Core software that the core device runs. This version
            is equivalent to the version of the Greengrass nucleus component that runs on the
            core device. For more information, see the <a href="https://docs.aws.amazon.com/greengrass/v2/developerguide/greengrass-nucleus-component.html">Greengrass
            nucleus component</a> in the <i>IoT Greengrass V2 Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.GetCoreDeviceResponse.LastStatusUpdateTimestamp">
            <summary>
            Gets and sets the property LastStatusUpdateTimestamp. 
            <para>
            The time at which the core device's status last updated, expressed in ISO 8601 format.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.GetCoreDeviceResponse.Platform">
            <summary>
            Gets and sets the property Platform. 
            <para>
            The operating system platform that the core device runs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.GetCoreDeviceResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the core device. The core device status can be:
            </para>
             <ul> <li> 
            <para>
             <code>HEALTHY</code> – The IoT Greengrass Core software and all components run on
            the core device without issue.
            </para>
             </li> <li> 
            <para>
             <code>UNHEALTHY</code> – The IoT Greengrass Core software or a component is in a
            failed state on the core device.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.GetCoreDeviceResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            A list of key-value pairs that contain metadata for the resource. For more information,
            see <a href="https://docs.aws.amazon.com/greengrass/v2/developerguide/tag-resources.html">Tag
            your resources</a> in the <i>IoT Greengrass V2 Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.GetDeploymentRequest">
            <summary>
            Container for the parameters to the GetDeployment operation.
            Gets a deployment. Deployments define the components that run on Greengrass core devices.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.GetDeploymentRequest.DeploymentId">
            <summary>
            Gets and sets the property DeploymentId. 
            <para>
            The ID of the deployment.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.GetDeploymentResponse">
            <summary>
            This is the response object from the GetDeployment operation.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.GetDeploymentResponse.Components">
            <summary>
            Gets and sets the property Components. 
            <para>
            The components to deploy. This is a dictionary, where each key is the name of a component,
            and each key's value is the version and configuration to deploy for that component.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.GetDeploymentResponse.CreationTimestamp">
            <summary>
            Gets and sets the property CreationTimestamp. 
            <para>
            The time at which the deployment was created, expressed in ISO 8601 format.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.GetDeploymentResponse.DeploymentId">
            <summary>
            Gets and sets the property DeploymentId. 
            <para>
            The ID of the deployment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.GetDeploymentResponse.DeploymentName">
            <summary>
            Gets and sets the property DeploymentName. 
            <para>
            The name of the deployment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.GetDeploymentResponse.DeploymentPolicies">
            <summary>
            Gets and sets the property DeploymentPolicies. 
            <para>
            The deployment policies for the deployment. These policies define how the deployment
            updates components and handles failure.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.GetDeploymentResponse.DeploymentStatus">
            <summary>
            Gets and sets the property DeploymentStatus. 
            <para>
            The status of the deployment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.GetDeploymentResponse.IotJobArn">
            <summary>
            Gets and sets the property IotJobArn. 
            <para>
            The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a>
            of the IoT job that applies the deployment to target devices.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.GetDeploymentResponse.IotJobConfiguration">
            <summary>
            Gets and sets the property IotJobConfiguration. 
            <para>
            The job configuration for the deployment configuration. The job configuration specifies
            the rollout, timeout, and stop configurations for the deployment configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.GetDeploymentResponse.IotJobId">
            <summary>
            Gets and sets the property IotJobId. 
            <para>
            The ID of the IoT job that applies the deployment to target devices.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.GetDeploymentResponse.IsLatestForTarget">
            <summary>
            Gets and sets the property IsLatestForTarget. 
            <para>
            Whether or not the deployment is the latest revision for its target.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.GetDeploymentResponse.RevisionId">
            <summary>
            Gets and sets the property RevisionId. 
            <para>
            The revision number of the deployment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.GetDeploymentResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            A list of key-value pairs that contain metadata for the resource. For more information,
            see <a href="https://docs.aws.amazon.com/greengrass/v2/developerguide/tag-resources.html">Tag
            your resources</a> in the <i>IoT Greengrass V2 Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.GetDeploymentResponse.TargetArn">
            <summary>
            Gets and sets the property TargetArn. 
            <para>
            The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a>
            of the target IoT thing or thing group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.InstalledComponent">
            <summary>
            Contains information about a component on a Greengrass core device.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.InstalledComponent.ComponentName">
            <summary>
            Gets and sets the property ComponentName. 
            <para>
            The name of the component.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.InstalledComponent.ComponentVersion">
            <summary>
            Gets and sets the property ComponentVersion. 
            <para>
            The version of the component.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.InstalledComponent.IsRoot">
            <summary>
            Gets and sets the property IsRoot. 
            <para>
            Whether or not the component is a root component.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.InstalledComponent.LifecycleState">
            <summary>
            Gets and sets the property LifecycleState. 
            <para>
            The lifecycle state of the component.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.InstalledComponent.LifecycleStateDetails">
            <summary>
            Gets and sets the property LifecycleStateDetails. 
            <para>
            The details about the lifecycle state of the component.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.InternalServerException">
            <summary>
            IoT Greengrass can't process your request right now. Try again later.
            </summary>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.InternalServerException.#ctor(System.String)">
            <summary>
            Constructs a new InternalServerException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.InternalServerException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.InternalServerException.#ctor(System.Exception)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.InternalServerException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.InternalServerException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.InternalServerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InternalServerException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.InternalServerException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.InternalServerException.RetryAfterSeconds">
            <summary>
            Gets and sets the property RetryAfterSeconds. 
            <para>
            The amount of time to wait before you retry the request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for AccessDeniedException Object
            </summary>  
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.AssociateClientDeviceWithCoreDeviceEntryMarshaller">
            <summary>
            AssociateClientDeviceWithCoreDeviceEntry Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.AssociateClientDeviceWithCoreDeviceEntryMarshaller.Marshall(Amazon.GreengrassV2.Model.AssociateClientDeviceWithCoreDeviceEntry,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.AssociateClientDeviceWithCoreDeviceEntryMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.AssociateClientDeviceWithCoreDeviceErrorEntryUnmarshaller">
            <summary>
            Response Unmarshaller for AssociateClientDeviceWithCoreDeviceErrorEntry Object
            </summary>  
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.AssociateClientDeviceWithCoreDeviceErrorEntryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#GreengrassV2#Model#AssociateClientDeviceWithCoreDeviceErrorEntry,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.AssociateClientDeviceWithCoreDeviceErrorEntryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.AssociateClientDeviceWithCoreDeviceErrorEntryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.AssociatedClientDeviceUnmarshaller">
            <summary>
            Response Unmarshaller for AssociatedClientDevice Object
            </summary>  
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.AssociatedClientDeviceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#GreengrassV2#Model#AssociatedClientDevice,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.AssociatedClientDeviceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.AssociatedClientDeviceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.BatchAssociateClientDeviceWithCoreDeviceRequestMarshaller">
            <summary>
            BatchAssociateClientDeviceWithCoreDevice Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.BatchAssociateClientDeviceWithCoreDeviceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.BatchAssociateClientDeviceWithCoreDeviceRequestMarshaller.Marshall(Amazon.GreengrassV2.Model.BatchAssociateClientDeviceWithCoreDeviceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.BatchAssociateClientDeviceWithCoreDeviceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.BatchAssociateClientDeviceWithCoreDeviceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for BatchAssociateClientDeviceWithCoreDevice operation
            </summary>  
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.BatchAssociateClientDeviceWithCoreDeviceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.BatchAssociateClientDeviceWithCoreDeviceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.BatchAssociateClientDeviceWithCoreDeviceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.BatchDisassociateClientDeviceFromCoreDeviceRequestMarshaller">
            <summary>
            BatchDisassociateClientDeviceFromCoreDevice Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.BatchDisassociateClientDeviceFromCoreDeviceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.BatchDisassociateClientDeviceFromCoreDeviceRequestMarshaller.Marshall(Amazon.GreengrassV2.Model.BatchDisassociateClientDeviceFromCoreDeviceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.BatchDisassociateClientDeviceFromCoreDeviceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.BatchDisassociateClientDeviceFromCoreDeviceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for BatchDisassociateClientDeviceFromCoreDevice operation
            </summary>  
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.BatchDisassociateClientDeviceFromCoreDeviceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.BatchDisassociateClientDeviceFromCoreDeviceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.BatchDisassociateClientDeviceFromCoreDeviceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.CancelDeploymentRequestMarshaller">
            <summary>
            CancelDeployment Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.CancelDeploymentRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.CancelDeploymentRequestMarshaller.Marshall(Amazon.GreengrassV2.Model.CancelDeploymentRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.CancelDeploymentRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.CancelDeploymentResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CancelDeployment operation
            </summary>  
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.CancelDeploymentResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.CancelDeploymentResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.CancelDeploymentResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.CloudComponentStatusUnmarshaller">
            <summary>
            Response Unmarshaller for CloudComponentStatus Object
            </summary>  
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.CloudComponentStatusUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#GreengrassV2#Model#CloudComponentStatus,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.CloudComponentStatusUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.CloudComponentStatusUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ComponentCandidateMarshaller">
            <summary>
            ComponentCandidate Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ComponentCandidateMarshaller.Marshall(Amazon.GreengrassV2.Model.ComponentCandidate,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ComponentCandidateMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ComponentConfigurationUpdateMarshaller">
            <summary>
            ComponentConfigurationUpdate Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ComponentConfigurationUpdateMarshaller.Marshall(Amazon.GreengrassV2.Model.ComponentConfigurationUpdate,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ComponentConfigurationUpdateMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ComponentConfigurationUpdateUnmarshaller">
            <summary>
            Response Unmarshaller for ComponentConfigurationUpdate Object
            </summary>  
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ComponentConfigurationUpdateUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#GreengrassV2#Model#ComponentConfigurationUpdate,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ComponentConfigurationUpdateUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ComponentConfigurationUpdateUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ComponentDependencyRequirementMarshaller">
            <summary>
            ComponentDependencyRequirement Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ComponentDependencyRequirementMarshaller.Marshall(Amazon.GreengrassV2.Model.ComponentDependencyRequirement,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ComponentDependencyRequirementMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ComponentDeploymentSpecificationMarshaller">
            <summary>
            ComponentDeploymentSpecification Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ComponentDeploymentSpecificationMarshaller.Marshall(Amazon.GreengrassV2.Model.ComponentDeploymentSpecification,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ComponentDeploymentSpecificationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ComponentDeploymentSpecificationUnmarshaller">
            <summary>
            Response Unmarshaller for ComponentDeploymentSpecification Object
            </summary>  
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ComponentDeploymentSpecificationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#GreengrassV2#Model#ComponentDeploymentSpecification,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ComponentDeploymentSpecificationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ComponentDeploymentSpecificationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ComponentLatestVersionUnmarshaller">
            <summary>
            Response Unmarshaller for ComponentLatestVersion Object
            </summary>  
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ComponentLatestVersionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#GreengrassV2#Model#ComponentLatestVersion,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ComponentLatestVersionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ComponentLatestVersionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ComponentPlatformMarshaller">
            <summary>
            ComponentPlatform Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ComponentPlatformMarshaller.Marshall(Amazon.GreengrassV2.Model.ComponentPlatform,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ComponentPlatformMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ComponentPlatformUnmarshaller">
            <summary>
            Response Unmarshaller for ComponentPlatform Object
            </summary>  
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ComponentPlatformUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#GreengrassV2#Model#ComponentPlatform,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ComponentPlatformUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ComponentPlatformUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ComponentRunWithMarshaller">
            <summary>
            ComponentRunWith Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ComponentRunWithMarshaller.Marshall(Amazon.GreengrassV2.Model.ComponentRunWith,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ComponentRunWithMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ComponentRunWithUnmarshaller">
            <summary>
            Response Unmarshaller for ComponentRunWith Object
            </summary>  
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ComponentRunWithUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#GreengrassV2#Model#ComponentRunWith,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ComponentRunWithUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ComponentRunWithUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ComponentUnmarshaller">
            <summary>
            Response Unmarshaller for Component Object
            </summary>  
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ComponentUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#GreengrassV2#Model#Component,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ComponentUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ComponentUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ComponentVersionListItemUnmarshaller">
            <summary>
            Response Unmarshaller for ComponentVersionListItem Object
            </summary>  
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ComponentVersionListItemUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#GreengrassV2#Model#ComponentVersionListItem,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ComponentVersionListItemUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ComponentVersionListItemUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ConflictException Object
            </summary>  
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.CoreDeviceUnmarshaller">
            <summary>
            Response Unmarshaller for CoreDevice Object
            </summary>  
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.CoreDeviceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#GreengrassV2#Model#CoreDevice,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.CoreDeviceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.CoreDeviceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.CreateComponentVersionRequestMarshaller">
            <summary>
            CreateComponentVersion Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.CreateComponentVersionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.CreateComponentVersionRequestMarshaller.Marshall(Amazon.GreengrassV2.Model.CreateComponentVersionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.CreateComponentVersionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.CreateComponentVersionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateComponentVersion operation
            </summary>  
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.CreateComponentVersionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.CreateComponentVersionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.CreateComponentVersionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.CreateDeploymentRequestMarshaller">
            <summary>
            CreateDeployment Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.CreateDeploymentRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.CreateDeploymentRequestMarshaller.Marshall(Amazon.GreengrassV2.Model.CreateDeploymentRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.CreateDeploymentRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.CreateDeploymentResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateDeployment operation
            </summary>  
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.CreateDeploymentResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.CreateDeploymentResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.CreateDeploymentResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.DeleteComponentRequestMarshaller">
            <summary>
            DeleteComponent Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.DeleteComponentRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.DeleteComponentRequestMarshaller.Marshall(Amazon.GreengrassV2.Model.DeleteComponentRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.DeleteComponentRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.DeleteComponentResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteComponent operation
            </summary>  
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.DeleteComponentResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.DeleteComponentResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.DeleteComponentResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.DeleteCoreDeviceRequestMarshaller">
            <summary>
            DeleteCoreDevice Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.DeleteCoreDeviceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.DeleteCoreDeviceRequestMarshaller.Marshall(Amazon.GreengrassV2.Model.DeleteCoreDeviceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.DeleteCoreDeviceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.DeleteCoreDeviceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteCoreDevice operation
            </summary>  
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.DeleteCoreDeviceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.DeleteCoreDeviceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.DeleteCoreDeviceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.DeploymentComponentUpdatePolicyMarshaller">
            <summary>
            DeploymentComponentUpdatePolicy Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.DeploymentComponentUpdatePolicyMarshaller.Marshall(Amazon.GreengrassV2.Model.DeploymentComponentUpdatePolicy,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.DeploymentComponentUpdatePolicyMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.DeploymentComponentUpdatePolicyUnmarshaller">
            <summary>
            Response Unmarshaller for DeploymentComponentUpdatePolicy Object
            </summary>  
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.DeploymentComponentUpdatePolicyUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#GreengrassV2#Model#DeploymentComponentUpdatePolicy,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.DeploymentComponentUpdatePolicyUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.DeploymentComponentUpdatePolicyUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.DeploymentConfigurationValidationPolicyMarshaller">
            <summary>
            DeploymentConfigurationValidationPolicy Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.DeploymentConfigurationValidationPolicyMarshaller.Marshall(Amazon.GreengrassV2.Model.DeploymentConfigurationValidationPolicy,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.DeploymentConfigurationValidationPolicyMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.DeploymentConfigurationValidationPolicyUnmarshaller">
            <summary>
            Response Unmarshaller for DeploymentConfigurationValidationPolicy Object
            </summary>  
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.DeploymentConfigurationValidationPolicyUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#GreengrassV2#Model#DeploymentConfigurationValidationPolicy,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.DeploymentConfigurationValidationPolicyUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.DeploymentConfigurationValidationPolicyUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.DeploymentIoTJobConfigurationMarshaller">
            <summary>
            DeploymentIoTJobConfiguration Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.DeploymentIoTJobConfigurationMarshaller.Marshall(Amazon.GreengrassV2.Model.DeploymentIoTJobConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.DeploymentIoTJobConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.DeploymentIoTJobConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for DeploymentIoTJobConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.DeploymentIoTJobConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#GreengrassV2#Model#DeploymentIoTJobConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.DeploymentIoTJobConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.DeploymentIoTJobConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.DeploymentPoliciesMarshaller">
            <summary>
            DeploymentPolicies Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.DeploymentPoliciesMarshaller.Marshall(Amazon.GreengrassV2.Model.DeploymentPolicies,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.DeploymentPoliciesMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.DeploymentPoliciesUnmarshaller">
            <summary>
            Response Unmarshaller for DeploymentPolicies Object
            </summary>  
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.DeploymentPoliciesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#GreengrassV2#Model#DeploymentPolicies,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.DeploymentPoliciesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.DeploymentPoliciesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.DeploymentUnmarshaller">
            <summary>
            Response Unmarshaller for Deployment Object
            </summary>  
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.DeploymentUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#GreengrassV2#Model#Deployment,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.DeploymentUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.DeploymentUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.DescribeComponentRequestMarshaller">
            <summary>
            DescribeComponent Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.DescribeComponentRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.DescribeComponentRequestMarshaller.Marshall(Amazon.GreengrassV2.Model.DescribeComponentRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.DescribeComponentRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.DescribeComponentResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeComponent operation
            </summary>  
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.DescribeComponentResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.DescribeComponentResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.DescribeComponentResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.DisassociateClientDeviceFromCoreDeviceEntryMarshaller">
            <summary>
            DisassociateClientDeviceFromCoreDeviceEntry Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.DisassociateClientDeviceFromCoreDeviceEntryMarshaller.Marshall(Amazon.GreengrassV2.Model.DisassociateClientDeviceFromCoreDeviceEntry,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.DisassociateClientDeviceFromCoreDeviceEntryMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.DisassociateClientDeviceFromCoreDeviceErrorEntryUnmarshaller">
            <summary>
            Response Unmarshaller for DisassociateClientDeviceFromCoreDeviceErrorEntry Object
            </summary>  
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.DisassociateClientDeviceFromCoreDeviceErrorEntryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#GreengrassV2#Model#DisassociateClientDeviceFromCoreDeviceErrorEntry,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.DisassociateClientDeviceFromCoreDeviceErrorEntryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.DisassociateClientDeviceFromCoreDeviceErrorEntryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.EffectiveDeploymentUnmarshaller">
            <summary>
            Response Unmarshaller for EffectiveDeployment Object
            </summary>  
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.EffectiveDeploymentUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#GreengrassV2#Model#EffectiveDeployment,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.EffectiveDeploymentUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.EffectiveDeploymentUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.GetComponentRequestMarshaller">
            <summary>
            GetComponent Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.GetComponentRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.GetComponentRequestMarshaller.Marshall(Amazon.GreengrassV2.Model.GetComponentRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.GetComponentRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.GetComponentResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetComponent operation
            </summary>  
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.GetComponentResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.GetComponentResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.GetComponentResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.GetComponentVersionArtifactRequestMarshaller">
            <summary>
            GetComponentVersionArtifact Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.GetComponentVersionArtifactRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.GetComponentVersionArtifactRequestMarshaller.Marshall(Amazon.GreengrassV2.Model.GetComponentVersionArtifactRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.GetComponentVersionArtifactRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.GetComponentVersionArtifactResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetComponentVersionArtifact operation
            </summary>  
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.GetComponentVersionArtifactResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.GetComponentVersionArtifactResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.GetComponentVersionArtifactResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.GetCoreDeviceRequestMarshaller">
            <summary>
            GetCoreDevice Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.GetCoreDeviceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.GetCoreDeviceRequestMarshaller.Marshall(Amazon.GreengrassV2.Model.GetCoreDeviceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.GetCoreDeviceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.GetCoreDeviceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetCoreDevice operation
            </summary>  
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.GetCoreDeviceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.GetCoreDeviceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.GetCoreDeviceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.GetDeploymentRequestMarshaller">
            <summary>
            GetDeployment Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.GetDeploymentRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.GetDeploymentRequestMarshaller.Marshall(Amazon.GreengrassV2.Model.GetDeploymentRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.GetDeploymentRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.GetDeploymentResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetDeployment operation
            </summary>  
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.GetDeploymentResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.GetDeploymentResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.GetDeploymentResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.InstalledComponentUnmarshaller">
            <summary>
            Response Unmarshaller for InstalledComponent Object
            </summary>  
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.InstalledComponentUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#GreengrassV2#Model#InstalledComponent,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.InstalledComponentUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.InstalledComponentUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InternalServerException Object
            </summary>  
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.IoTJobAbortConfigMarshaller">
            <summary>
            IoTJobAbortConfig Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.IoTJobAbortConfigMarshaller.Marshall(Amazon.GreengrassV2.Model.IoTJobAbortConfig,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.IoTJobAbortConfigMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.IoTJobAbortConfigUnmarshaller">
            <summary>
            Response Unmarshaller for IoTJobAbortConfig Object
            </summary>  
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.IoTJobAbortConfigUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#GreengrassV2#Model#IoTJobAbortConfig,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.IoTJobAbortConfigUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.IoTJobAbortConfigUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.IoTJobAbortCriteriaMarshaller">
            <summary>
            IoTJobAbortCriteria Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.IoTJobAbortCriteriaMarshaller.Marshall(Amazon.GreengrassV2.Model.IoTJobAbortCriteria,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.IoTJobAbortCriteriaMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.IoTJobAbortCriteriaUnmarshaller">
            <summary>
            Response Unmarshaller for IoTJobAbortCriteria Object
            </summary>  
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.IoTJobAbortCriteriaUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#GreengrassV2#Model#IoTJobAbortCriteria,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.IoTJobAbortCriteriaUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.IoTJobAbortCriteriaUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.IoTJobExecutionsRolloutConfigMarshaller">
            <summary>
            IoTJobExecutionsRolloutConfig Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.IoTJobExecutionsRolloutConfigMarshaller.Marshall(Amazon.GreengrassV2.Model.IoTJobExecutionsRolloutConfig,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.IoTJobExecutionsRolloutConfigMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.IoTJobExecutionsRolloutConfigUnmarshaller">
            <summary>
            Response Unmarshaller for IoTJobExecutionsRolloutConfig Object
            </summary>  
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.IoTJobExecutionsRolloutConfigUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#GreengrassV2#Model#IoTJobExecutionsRolloutConfig,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.IoTJobExecutionsRolloutConfigUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.IoTJobExecutionsRolloutConfigUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.IoTJobExponentialRolloutRateMarshaller">
            <summary>
            IoTJobExponentialRolloutRate Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.IoTJobExponentialRolloutRateMarshaller.Marshall(Amazon.GreengrassV2.Model.IoTJobExponentialRolloutRate,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.IoTJobExponentialRolloutRateMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.IoTJobExponentialRolloutRateUnmarshaller">
            <summary>
            Response Unmarshaller for IoTJobExponentialRolloutRate Object
            </summary>  
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.IoTJobExponentialRolloutRateUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#GreengrassV2#Model#IoTJobExponentialRolloutRate,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.IoTJobExponentialRolloutRateUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.IoTJobExponentialRolloutRateUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.IoTJobRateIncreaseCriteriaMarshaller">
            <summary>
            IoTJobRateIncreaseCriteria Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.IoTJobRateIncreaseCriteriaMarshaller.Marshall(Amazon.GreengrassV2.Model.IoTJobRateIncreaseCriteria,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.IoTJobRateIncreaseCriteriaMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.IoTJobRateIncreaseCriteriaUnmarshaller">
            <summary>
            Response Unmarshaller for IoTJobRateIncreaseCriteria Object
            </summary>  
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.IoTJobRateIncreaseCriteriaUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#GreengrassV2#Model#IoTJobRateIncreaseCriteria,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.IoTJobRateIncreaseCriteriaUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.IoTJobRateIncreaseCriteriaUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.IoTJobTimeoutConfigMarshaller">
            <summary>
            IoTJobTimeoutConfig Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.IoTJobTimeoutConfigMarshaller.Marshall(Amazon.GreengrassV2.Model.IoTJobTimeoutConfig,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.IoTJobTimeoutConfigMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.IoTJobTimeoutConfigUnmarshaller">
            <summary>
            Response Unmarshaller for IoTJobTimeoutConfig Object
            </summary>  
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.IoTJobTimeoutConfigUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#GreengrassV2#Model#IoTJobTimeoutConfig,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.IoTJobTimeoutConfigUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.IoTJobTimeoutConfigUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.LambdaContainerParamsMarshaller">
            <summary>
            LambdaContainerParams Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.LambdaContainerParamsMarshaller.Marshall(Amazon.GreengrassV2.Model.LambdaContainerParams,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.LambdaContainerParamsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.LambdaDeviceMountMarshaller">
            <summary>
            LambdaDeviceMount Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.LambdaDeviceMountMarshaller.Marshall(Amazon.GreengrassV2.Model.LambdaDeviceMount,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.LambdaDeviceMountMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.LambdaEventSourceMarshaller">
            <summary>
            LambdaEventSource Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.LambdaEventSourceMarshaller.Marshall(Amazon.GreengrassV2.Model.LambdaEventSource,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.LambdaEventSourceMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.LambdaExecutionParametersMarshaller">
            <summary>
            LambdaExecutionParameters Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.LambdaExecutionParametersMarshaller.Marshall(Amazon.GreengrassV2.Model.LambdaExecutionParameters,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.LambdaExecutionParametersMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.LambdaFunctionRecipeSourceMarshaller">
            <summary>
            LambdaFunctionRecipeSource Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.LambdaFunctionRecipeSourceMarshaller.Marshall(Amazon.GreengrassV2.Model.LambdaFunctionRecipeSource,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.LambdaFunctionRecipeSourceMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.LambdaLinuxProcessParamsMarshaller">
            <summary>
            LambdaLinuxProcessParams Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.LambdaLinuxProcessParamsMarshaller.Marshall(Amazon.GreengrassV2.Model.LambdaLinuxProcessParams,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.LambdaLinuxProcessParamsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.LambdaVolumeMountMarshaller">
            <summary>
            LambdaVolumeMount Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.LambdaVolumeMountMarshaller.Marshall(Amazon.GreengrassV2.Model.LambdaVolumeMount,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.LambdaVolumeMountMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ListClientDevicesAssociatedWithCoreDeviceRequestMarshaller">
            <summary>
            ListClientDevicesAssociatedWithCoreDevice Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ListClientDevicesAssociatedWithCoreDeviceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ListClientDevicesAssociatedWithCoreDeviceRequestMarshaller.Marshall(Amazon.GreengrassV2.Model.ListClientDevicesAssociatedWithCoreDeviceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ListClientDevicesAssociatedWithCoreDeviceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ListClientDevicesAssociatedWithCoreDeviceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListClientDevicesAssociatedWithCoreDevice operation
            </summary>  
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ListClientDevicesAssociatedWithCoreDeviceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ListClientDevicesAssociatedWithCoreDeviceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ListClientDevicesAssociatedWithCoreDeviceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ListComponentsRequestMarshaller">
            <summary>
            ListComponents Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ListComponentsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ListComponentsRequestMarshaller.Marshall(Amazon.GreengrassV2.Model.ListComponentsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ListComponentsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ListComponentsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListComponents operation
            </summary>  
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ListComponentsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ListComponentsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ListComponentsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ListComponentVersionsRequestMarshaller">
            <summary>
            ListComponentVersions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ListComponentVersionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ListComponentVersionsRequestMarshaller.Marshall(Amazon.GreengrassV2.Model.ListComponentVersionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ListComponentVersionsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ListComponentVersionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListComponentVersions operation
            </summary>  
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ListComponentVersionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ListComponentVersionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ListComponentVersionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ListCoreDevicesRequestMarshaller">
            <summary>
            ListCoreDevices Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ListCoreDevicesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ListCoreDevicesRequestMarshaller.Marshall(Amazon.GreengrassV2.Model.ListCoreDevicesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ListCoreDevicesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ListCoreDevicesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListCoreDevices operation
            </summary>  
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ListCoreDevicesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ListCoreDevicesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ListCoreDevicesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ListDeploymentsRequestMarshaller">
            <summary>
            ListDeployments Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ListDeploymentsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ListDeploymentsRequestMarshaller.Marshall(Amazon.GreengrassV2.Model.ListDeploymentsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ListDeploymentsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ListDeploymentsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListDeployments operation
            </summary>  
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ListDeploymentsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ListDeploymentsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ListDeploymentsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ListEffectiveDeploymentsRequestMarshaller">
            <summary>
            ListEffectiveDeployments Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ListEffectiveDeploymentsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ListEffectiveDeploymentsRequestMarshaller.Marshall(Amazon.GreengrassV2.Model.ListEffectiveDeploymentsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ListEffectiveDeploymentsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ListEffectiveDeploymentsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListEffectiveDeployments operation
            </summary>  
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ListEffectiveDeploymentsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ListEffectiveDeploymentsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ListEffectiveDeploymentsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ListInstalledComponentsRequestMarshaller">
            <summary>
            ListInstalledComponents Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ListInstalledComponentsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ListInstalledComponentsRequestMarshaller.Marshall(Amazon.GreengrassV2.Model.ListInstalledComponentsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ListInstalledComponentsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ListInstalledComponentsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListInstalledComponents operation
            </summary>  
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ListInstalledComponentsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ListInstalledComponentsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ListInstalledComponentsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller">
            <summary>
            ListTagsForResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.GreengrassV2.Model.ListTagsForResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListTagsForResource operation
            </summary>  
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.RequestAlreadyInProgressExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for RequestAlreadyInProgressException Object
            </summary>  
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.RequestAlreadyInProgressExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.RequestAlreadyInProgressExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.RequestAlreadyInProgressExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ResolveComponentCandidatesRequestMarshaller">
            <summary>
            ResolveComponentCandidates Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ResolveComponentCandidatesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ResolveComponentCandidatesRequestMarshaller.Marshall(Amazon.GreengrassV2.Model.ResolveComponentCandidatesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ResolveComponentCandidatesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ResolveComponentCandidatesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ResolveComponentCandidates operation
            </summary>  
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ResolveComponentCandidatesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ResolveComponentCandidatesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ResolveComponentCandidatesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ResolvedComponentVersionUnmarshaller">
            <summary>
            Response Unmarshaller for ResolvedComponentVersion Object
            </summary>  
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ResolvedComponentVersionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#GreengrassV2#Model#ResolvedComponentVersion,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ResolvedComponentVersionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ResolvedComponentVersionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ServiceQuotaExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.SystemResourceLimitsMarshaller">
            <summary>
            SystemResourceLimits Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.SystemResourceLimitsMarshaller.Marshall(Amazon.GreengrassV2.Model.SystemResourceLimits,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.SystemResourceLimitsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.SystemResourceLimitsUnmarshaller">
            <summary>
            Response Unmarshaller for SystemResourceLimits Object
            </summary>  
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.SystemResourceLimitsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#GreengrassV2#Model#SystemResourceLimits,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.SystemResourceLimitsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.SystemResourceLimitsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller">
            <summary>
            TagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.GreengrassV2.Model.TagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for TagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ThrottlingException Object
            </summary>  
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller">
            <summary>
            UntagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.GreengrassV2.Model.UntagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UntagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ValidationExceptionFieldUnmarshaller">
            <summary>
            Response Unmarshaller for ValidationExceptionField Object
            </summary>  
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ValidationExceptionFieldUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#GreengrassV2#Model#ValidationExceptionField,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ValidationExceptionFieldUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ValidationExceptionFieldUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ValidationException Object
            </summary>  
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.GreengrassV2.Model.IoTJobAbortConfig">
            <summary>
            Contains a list of criteria that define when and how to cancel a configuration deployment.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.IoTJobAbortConfig.CriteriaList">
            <summary>
            Gets and sets the property CriteriaList. 
            <para>
            The list of criteria that define when and how to cancel the configuration deployment.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.IoTJobAbortCriteria">
            <summary>
            Contains criteria that define when and how to cancel a job.
            
             
            <para>
            The deployment stops if the following conditions are true:
            </para>
             <ol> <li> 
            <para>
            The number of things that receive the deployment exceeds the <code>minNumberOfExecutedThings</code>.
            </para>
             </li> <li> 
            <para>
            The percentage of failures with type <code>failureType</code> exceeds the <code>thresholdPercentage</code>.
            </para>
             </li> </ol>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.IoTJobAbortCriteria.Action">
            <summary>
            Gets and sets the property Action. 
            <para>
            The action to perform when the criteria are met.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.IoTJobAbortCriteria.FailureType">
            <summary>
            Gets and sets the property FailureType. 
            <para>
            The type of job deployment failure that can cancel a job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.IoTJobAbortCriteria.MinNumberOfExecutedThings">
            <summary>
            Gets and sets the property MinNumberOfExecutedThings. 
            <para>
            The minimum number of things that receive the configuration before the job can cancel.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.IoTJobAbortCriteria.ThresholdPercentage">
            <summary>
            Gets and sets the property ThresholdPercentage. 
            <para>
            The minimum percentage of <code>failureType</code> failures that occur before the
            job can cancel.
            </para>
             
            <para>
            This parameter supports up to two digits after the decimal (for example, you can specify
            <code>10.9</code> or <code>10.99</code>, but not <code>10.999</code>).
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.IoTJobExecutionsRolloutConfig">
            <summary>
            Contains information about the rollout configuration for a job. This configuration
            defines the rate at which the job deploys a configuration to a fleet of target devices.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.IoTJobExecutionsRolloutConfig.ExponentialRate">
            <summary>
            Gets and sets the property ExponentialRate. 
            <para>
            The exponential rate to increase the job rollout rate.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.IoTJobExecutionsRolloutConfig.MaximumPerMinute">
            <summary>
            Gets and sets the property MaximumPerMinute. 
            <para>
            The maximum number of devices that receive a pending job notification, per minute.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.IoTJobExponentialRolloutRate">
            <summary>
            Contains information about an exponential rollout rate for a configuration deployment
            job.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.IoTJobExponentialRolloutRate.BaseRatePerMinute">
            <summary>
            Gets and sets the property BaseRatePerMinute. 
            <para>
            The minimum number of devices that receive a pending job notification, per minute,
            when the job starts. This parameter defines the initial rollout rate of the job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.IoTJobExponentialRolloutRate.IncrementFactor">
            <summary>
            Gets and sets the property IncrementFactor. 
            <para>
            The exponential factor to increase the rollout rate for the job.
            </para>
             
            <para>
            This parameter supports up to one digit after the decimal (for example, you can specify
            <code>1.5</code>, but not <code>1.55</code>).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.IoTJobExponentialRolloutRate.RateIncreaseCriteria">
            <summary>
            Gets and sets the property RateIncreaseCriteria. 
            <para>
            The criteria to increase the rollout rate for the job.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.IoTJobRateIncreaseCriteria">
            <summary>
            Contains information about criteria to meet before a job increases its rollout rate.
            Specify either <code>numberOfNotifiedThings</code> or <code>numberOfSucceededThings</code>.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.IoTJobRateIncreaseCriteria.NumberOfNotifiedThings">
            <summary>
            Gets and sets the property NumberOfNotifiedThings. 
            <para>
            The number of devices to receive the job notification before the rollout rate increases.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.IoTJobRateIncreaseCriteria.NumberOfSucceededThings">
            <summary>
            Gets and sets the property NumberOfSucceededThings. 
            <para>
            The number of devices to successfully run the configuration job before the rollout
            rate increases.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.IoTJobTimeoutConfig">
            <summary>
            Contains information about the timeout configuration for a job.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.IoTJobTimeoutConfig.InProgressTimeoutInMinutes">
            <summary>
            Gets and sets the property InProgressTimeoutInMinutes. 
            <para>
            The amount of time, in minutes, that devices have to complete the job. The timer starts
            when the job status is set to <code>IN_PROGRESS</code>. If the job status doesn't
            change to a terminal state before the time expires, then the job status is set to
            <code>TIMED_OUT</code>.
            </para>
             
            <para>
            The timeout interval must be between 1 minute and 7 days (10080 minutes).
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.LambdaContainerParams">
            <summary>
            Contains information about a container in which Lambda functions run on Greengrass
            core devices.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.LambdaContainerParams.Devices">
            <summary>
            Gets and sets the property Devices. 
            <para>
            The list of system devices that the container can access.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.LambdaContainerParams.MemorySizeInKB">
            <summary>
            Gets and sets the property MemorySizeInKB. 
            <para>
            The memory size of the container, expressed in kilobytes.
            </para>
             
            <para>
            Default: <code>16384</code> (16 MB)
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.LambdaContainerParams.MountROSysfs">
            <summary>
            Gets and sets the property MountROSysfs. 
            <para>
            Whether or not the container can read information from the device's <code>/sys</code>
            folder.
            </para>
             
            <para>
            Default: <code>false</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.LambdaContainerParams.Volumes">
            <summary>
            Gets and sets the property Volumes. 
            <para>
            The list of volumes that the container can access.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.LambdaDeviceMount">
            <summary>
            Contains information about a device that Linux processes in a container can access.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.LambdaDeviceMount.AddGroupOwner">
            <summary>
            Gets and sets the property AddGroupOwner. 
            <para>
            Whether or not to add the component's system user as an owner of the device.
            </para>
             
            <para>
            Default: <code>false</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.LambdaDeviceMount.Path">
            <summary>
            Gets and sets the property Path. 
            <para>
            The mount path for the device in the file system.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.LambdaDeviceMount.Permission">
            <summary>
            Gets and sets the property Permission. 
            <para>
            The permission to access the device: read/only (<code>ro</code>) or read/write (<code>rw</code>).
            </para>
             
            <para>
            Default: <code>ro</code> 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.LambdaEventSource">
            <summary>
            Contains information about an event source for an Lambda function. The event source
            defines the topics on which this Lambda function subscribes to receive messages that
            run the function.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.LambdaEventSource.Topic">
            <summary>
            Gets and sets the property Topic. 
            <para>
            The topic to which to subscribe to receive event messages.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.LambdaEventSource.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of event source. Choose from the following options:
            </para>
             <ul> <li> 
            <para>
             <code>PUB_SUB</code> – Subscribe to local publish/subscribe messages. This event
            source type doesn't support MQTT wildcards (<code>+</code> and <code>#</code>) in
            the event source topic.
            </para>
             </li> <li> 
            <para>
             <code>IOT_CORE</code> – Subscribe to Amazon Web Services IoT Core MQTT messages.
            This event source type supports MQTT wildcards (<code>+</code> and <code>#</code>)
            in the event source topic.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.LambdaExecutionParameters">
            <summary>
            Contains parameters for a Lambda function that runs on IoT Greengrass.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.LambdaExecutionParameters.EnvironmentVariables">
            <summary>
            Gets and sets the property EnvironmentVariables. 
            <para>
            The map of environment variables that are available to the Lambda function when it
            runs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.LambdaExecutionParameters.EventSources">
            <summary>
            Gets and sets the property EventSources. 
            <para>
            The list of event sources to which to subscribe to receive work messages. The Lambda
            function runs when it receives a message from an event source. You can subscribe this
            function to local publish/subscribe messages and Amazon Web Services IoT Core MQTT
            messages.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.LambdaExecutionParameters.ExecArgs">
            <summary>
            Gets and sets the property ExecArgs. 
            <para>
            The list of arguments to pass to the Lambda function when it runs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.LambdaExecutionParameters.InputPayloadEncodingType">
            <summary>
            Gets and sets the property InputPayloadEncodingType. 
            <para>
            The encoding type that the Lambda function supports.
            </para>
             
            <para>
            Default: <code>json</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.LambdaExecutionParameters.LinuxProcessParams">
            <summary>
            Gets and sets the property LinuxProcessParams. 
            <para>
            The parameters for the Linux process that contains the Lambda function.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.LambdaExecutionParameters.MaxIdleTimeInSeconds">
            <summary>
            Gets and sets the property MaxIdleTimeInSeconds. 
            <para>
            The maximum amount of time in seconds that a non-pinned Lambda function can idle before
            the IoT Greengrass Core software stops its process.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.LambdaExecutionParameters.MaxInstancesCount">
            <summary>
            Gets and sets the property MaxInstancesCount. 
            <para>
            The maximum number of instances that a non-pinned Lambda function can run at the same
            time.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.LambdaExecutionParameters.MaxQueueSize">
            <summary>
            Gets and sets the property MaxQueueSize. 
            <para>
            The maximum size of the message queue for the Lambda function component. The IoT Greengrass
            core stores messages in a FIFO (first-in-first-out) queue until it can run the Lambda
            function to consume each message.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.LambdaExecutionParameters.Pinned">
            <summary>
            Gets and sets the property Pinned. 
            <para>
            Whether or not the Lambda function is pinned, or long-lived.
            </para>
             <ul> <li> 
            <para>
            A pinned Lambda function starts when IoT Greengrass starts and keeps running in its
            own container.
            </para>
             </li> <li> 
            <para>
            A non-pinned Lambda function starts only when it receives a work item and exists after
            it idles for <code>maxIdleTimeInSeconds</code>. If the function has multiple work
            items, the IoT Greengrass Core software creates multiple instances of the function.
            </para>
             </li> </ul> 
            <para>
            Default: <code>true</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.LambdaExecutionParameters.StatusTimeoutInSeconds">
            <summary>
            Gets and sets the property StatusTimeoutInSeconds. 
            <para>
            The interval in seconds at which a pinned (also known as long-lived) Lambda function
            component sends status updates to the Lambda manager component.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.LambdaExecutionParameters.TimeoutInSeconds">
            <summary>
            Gets and sets the property TimeoutInSeconds. 
            <para>
            The maximum amount of time in seconds that the Lambda function can process a work
            item.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.LambdaFunctionRecipeSource">
            <summary>
            Contains information about an Lambda function to import to create a component.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.LambdaFunctionRecipeSource.ComponentDependencies">
            <summary>
            Gets and sets the property ComponentDependencies. 
            <para>
            The component versions on which this Lambda function component depends.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.LambdaFunctionRecipeSource.ComponentLambdaParameters">
            <summary>
            Gets and sets the property ComponentLambdaParameters. 
            <para>
            The system and runtime parameters for the Lambda function as it runs on the Greengrass
            core device.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.LambdaFunctionRecipeSource.ComponentName">
            <summary>
            Gets and sets the property ComponentName. 
            <para>
            The name of the component.
            </para>
             
            <para>
            Defaults to the name of the Lambda function.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.LambdaFunctionRecipeSource.ComponentPlatforms">
            <summary>
            Gets and sets the property ComponentPlatforms. 
            <para>
            The platforms that the component version supports.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.LambdaFunctionRecipeSource.ComponentVersion">
            <summary>
            Gets and sets the property ComponentVersion. 
            <para>
            The version of the component.
            </para>
             
            <para>
            Defaults to the version of the Lambda function as a semantic version. For example,
            if your function version is <code>3</code>, the component version becomes <code>3.0.0</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.LambdaFunctionRecipeSource.LambdaArn">
            <summary>
            Gets and sets the property LambdaArn. 
            <para>
            The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a>
            of the Lambda function. The ARN must include the version of the function to import.
            You can't use version aliases like <code>$LATEST</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.LambdaLinuxProcessParams">
            <summary>
            Contains parameters for a Linux process that contains an Lambda function.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.LambdaLinuxProcessParams.ContainerParams">
            <summary>
            Gets and sets the property ContainerParams. 
            <para>
            The parameters for the container in which the Lambda function runs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.LambdaLinuxProcessParams.IsolationMode">
            <summary>
            Gets and sets the property IsolationMode. 
            <para>
            The isolation mode for the process that contains the Lambda function. The process
            can run in an isolated runtime environment inside the IoT Greengrass container, or
            as a regular process outside any container.
            </para>
             
            <para>
            Default: <code>GreengrassContainer</code> 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.LambdaVolumeMount">
            <summary>
            Contains information about a volume that Linux processes in a container can access.
            When you define a volume, the IoT Greengrass Core software mounts the source files
            to the destination inside the container.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.LambdaVolumeMount.AddGroupOwner">
            <summary>
            Gets and sets the property AddGroupOwner. 
            <para>
            Whether or not to add the IoT Greengrass user group as an owner of the volume.
            </para>
             
            <para>
            Default: <code>false</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.LambdaVolumeMount.DestinationPath">
            <summary>
            Gets and sets the property DestinationPath. 
            <para>
            The path to the logical volume in the file system.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.LambdaVolumeMount.Permission">
            <summary>
            Gets and sets the property Permission. 
            <para>
            The permission to access the volume: read/only (<code>ro</code>) or read/write (<code>rw</code>).
            </para>
             
            <para>
            Default: <code>ro</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.LambdaVolumeMount.SourcePath">
            <summary>
            Gets and sets the property SourcePath. 
            <para>
            The path to the physical volume in the file system.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.ListClientDevicesAssociatedWithCoreDeviceRequest">
            <summary>
            Container for the parameters to the ListClientDevicesAssociatedWithCoreDevice operation.
            Retrieves a paginated list of client devices that are associated with a core device.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ListClientDevicesAssociatedWithCoreDeviceRequest.CoreDeviceThingName">
            <summary>
            Gets and sets the property CoreDeviceThingName. 
            <para>
            The name of the core device. This is also the name of the IoT thing.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ListClientDevicesAssociatedWithCoreDeviceRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to be returned per paginated request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ListClientDevicesAssociatedWithCoreDeviceRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token to be used for the next set of paginated results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.ListClientDevicesAssociatedWithCoreDeviceResponse">
            <summary>
            This is the response object from the ListClientDevicesAssociatedWithCoreDevice operation.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ListClientDevicesAssociatedWithCoreDeviceResponse.AssociatedClientDevices">
            <summary>
            Gets and sets the property AssociatedClientDevices. 
            <para>
            A list that describes the client devices that are associated with the core device.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ListClientDevicesAssociatedWithCoreDeviceResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token for the next set of results, or null if there are no additional results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.ListComponentsRequest">
            <summary>
            Container for the parameters to the ListComponents operation.
            Retrieves a paginated list of component summaries. This list includes components that
            you have permission to view.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ListComponentsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to be returned per paginated request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ListComponentsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token to be used for the next set of paginated results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ListComponentsRequest.Scope">
            <summary>
            Gets and sets the property Scope. 
            <para>
            The scope of the components to list.
            </para>
             
            <para>
            Default: <code>PRIVATE</code> 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.ListComponentsResponse">
            <summary>
            This is the response object from the ListComponents operation.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ListComponentsResponse.Components">
            <summary>
            Gets and sets the property Components. 
            <para>
            A list that summarizes each component.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ListComponentsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token for the next set of results, or null if there are no additional results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.ListComponentVersionsRequest">
            <summary>
            Container for the parameters to the ListComponentVersions operation.
            Retrieves a paginated list of all versions for a component. Greater versions are listed
            first.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ListComponentVersionsRequest.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a>
            of the component version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ListComponentVersionsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to be returned per paginated request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ListComponentVersionsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token to be used for the next set of paginated results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.ListComponentVersionsResponse">
            <summary>
            This is the response object from the ListComponentVersions operation.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ListComponentVersionsResponse.ComponentVersions">
            <summary>
            Gets and sets the property ComponentVersions. 
            <para>
            A list of versions that exist for the component.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ListComponentVersionsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token for the next set of results, or null if there are no additional results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.ListCoreDevicesRequest">
            <summary>
            Container for the parameters to the ListCoreDevices operation.
            Retrieves a paginated list of Greengrass core devices.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ListCoreDevicesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to be returned per paginated request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ListCoreDevicesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token to be used for the next set of paginated results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ListCoreDevicesRequest.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The core device status by which to filter. If you specify this parameter, the list
            includes only core devices that have this status. Choose one of the following options:
            </para>
             <ul> <li> 
            <para>
             <code>HEALTHY</code> – The IoT Greengrass Core software and all components run on
            the core device without issue.
            </para>
             </li> <li> 
            <para>
             <code>UNHEALTHY</code> – The IoT Greengrass Core software or a component is in a
            failed state on the core device.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ListCoreDevicesRequest.ThingGroupArn">
            <summary>
            Gets and sets the property ThingGroupArn. 
            <para>
            The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a>
            of the IoT thing group by which to filter. If you specify this parameter, the list
            includes only core devices that are members of this thing group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.ListCoreDevicesResponse">
            <summary>
            This is the response object from the ListCoreDevices operation.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ListCoreDevicesResponse.CoreDevices">
            <summary>
            Gets and sets the property CoreDevices. 
            <para>
            A list that summarizes each core device.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ListCoreDevicesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token for the next set of results, or null if there are no additional results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.ListDeploymentsRequest">
            <summary>
            Container for the parameters to the ListDeployments operation.
            Retrieves a paginated list of deployments.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ListDeploymentsRequest.HistoryFilter">
            <summary>
            Gets and sets the property HistoryFilter. 
            <para>
            The filter for the list of deployments. Choose one of the following options:
            </para>
             <ul> <li> 
            <para>
             <code>ALL</code> – The list includes all deployments.
            </para>
             </li> <li> 
            <para>
             <code>LATEST_ONLY</code> – The list includes only the latest revision of each deployment.
            </para>
             </li> </ul> 
            <para>
            Default: <code>LATEST_ONLY</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ListDeploymentsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to be returned per paginated request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ListDeploymentsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token to be used for the next set of paginated results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ListDeploymentsRequest.TargetArn">
            <summary>
            Gets and sets the property TargetArn. 
            <para>
            The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a>
            of the target IoT thing or thing group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.ListDeploymentsResponse">
            <summary>
            This is the response object from the ListDeployments operation.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ListDeploymentsResponse.Deployments">
            <summary>
            Gets and sets the property Deployments. 
            <para>
            A list that summarizes each deployment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ListDeploymentsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token for the next set of results, or null if there are no additional results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.ListEffectiveDeploymentsRequest">
            <summary>
            Container for the parameters to the ListEffectiveDeployments operation.
            Retrieves a paginated list of deployment jobs that IoT Greengrass sends to Greengrass
            core devices.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ListEffectiveDeploymentsRequest.CoreDeviceThingName">
            <summary>
            Gets and sets the property CoreDeviceThingName. 
            <para>
            The name of the core device. This is also the name of the IoT thing.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ListEffectiveDeploymentsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to be returned per paginated request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ListEffectiveDeploymentsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token to be used for the next set of paginated results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.ListEffectiveDeploymentsResponse">
            <summary>
            This is the response object from the ListEffectiveDeployments operation.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ListEffectiveDeploymentsResponse.EffectiveDeployments">
            <summary>
            Gets and sets the property EffectiveDeployments. 
            <para>
            A list that summarizes each deployment on the core device.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ListEffectiveDeploymentsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token for the next set of results, or null if there are no additional results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.ListInstalledComponentsRequest">
            <summary>
            Container for the parameters to the ListInstalledComponents operation.
            Retrieves a paginated list of the components that a Greengrass core device runs.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ListInstalledComponentsRequest.CoreDeviceThingName">
            <summary>
            Gets and sets the property CoreDeviceThingName. 
            <para>
            The name of the core device. This is also the name of the IoT thing.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ListInstalledComponentsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to be returned per paginated request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ListInstalledComponentsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token to be used for the next set of paginated results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.ListInstalledComponentsResponse">
            <summary>
            This is the response object from the ListInstalledComponents operation.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ListInstalledComponentsResponse.InstalledComponents">
            <summary>
            Gets and sets the property InstalledComponents. 
            <para>
            A list that summarizes each component on the core device.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ListInstalledComponentsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token for the next set of results, or null if there are no additional results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.ListTagsForResourceRequest">
            <summary>
            Container for the parameters to the ListTagsForResource operation.
            Retrieves the list of tags for an IoT Greengrass resource.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ListTagsForResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a>
            of the resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.ListTagsForResourceResponse">
            <summary>
            This is the response object from the ListTagsForResource operation.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ListTagsForResourceResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            A list of key-value pairs that contain metadata for the resource. For more information,
            see <a href="https://docs.aws.amazon.com/greengrass/v2/developerguide/tag-resources.html">Tag
            your resources</a> in the <i>IoT Greengrass V2 Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.RequestAlreadyInProgressException">
            <summary>
            The request is already in progress. This exception occurs when you use a client token
            for multiple requests while IoT Greengrass is still processing an earlier request
            that uses the same client token.
            </summary>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.RequestAlreadyInProgressException.#ctor(System.String)">
            <summary>
            Constructs a new RequestAlreadyInProgressException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.RequestAlreadyInProgressException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of RequestAlreadyInProgressException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.RequestAlreadyInProgressException.#ctor(System.Exception)">
            <summary>
            Construct instance of RequestAlreadyInProgressException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.RequestAlreadyInProgressException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of RequestAlreadyInProgressException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.RequestAlreadyInProgressException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of RequestAlreadyInProgressException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.RequestAlreadyInProgressException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the RequestAlreadyInProgressException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.RequestAlreadyInProgressException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.ResolveComponentCandidatesRequest">
            <summary>
            Container for the parameters to the ResolveComponentCandidates operation.
            Retrieves a list of components that meet the component, version, and platform requirements
            of a deployment. Greengrass core devices call this operation when they receive a deployment
            to identify the components to install.
            
             
            <para>
            This operation identifies components that meet all dependency requirements for a deployment.
            If the requirements conflict, then this operation returns an error and the deployment
            fails. For example, this occurs if component <code>A</code> requires version <code>&gt;2.0.0</code>
            and component <code>B</code> requires version <code>&lt;2.0.0</code> of a component
            dependency.
            </para>
             
            <para>
            When you specify the component candidates to resolve, IoT Greengrass compares each
            component's digest from the core device with the component's digest in the Amazon
            Web Services Cloud. If the digests don't match, then IoT Greengrass specifies to use
            the version from the Amazon Web Services Cloud.
            </para>
             <important> 
            <para>
            To use this operation, you must use the data plane API endpoint and authenticate with
            an IoT device certificate. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/greengrass.html">IoT
            Greengrass endpoints and quotas</a>.
            </para>
             </important>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ResolveComponentCandidatesRequest.ComponentCandidates">
            <summary>
            Gets and sets the property ComponentCandidates. 
            <para>
            The list of components to resolve.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ResolveComponentCandidatesRequest.Platform">
            <summary>
            Gets and sets the property Platform. 
            <para>
            The platform to use to resolve compatible components.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.ResolveComponentCandidatesResponse">
            <summary>
            This is the response object from the ResolveComponentCandidates operation.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ResolveComponentCandidatesResponse.ResolvedComponentVersions">
            <summary>
            Gets and sets the property ResolvedComponentVersions. 
            <para>
            A list of components that meet the requirements that you specify in the request. This
            list includes each component's recipe that you can use to install the component.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.ResolvedComponentVersion">
            <summary>
            Contains information about a component version that is compatible to run on a Greengrass
            core device.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ResolvedComponentVersion.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a>
            of the component version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ResolvedComponentVersion.ComponentName">
            <summary>
            Gets and sets the property ComponentName. 
            <para>
            The name of the component.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ResolvedComponentVersion.ComponentVersion">
            <summary>
            Gets and sets the property ComponentVersion. 
            <para>
            The version of the component.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ResolvedComponentVersion.Recipe">
            <summary>
            Gets and sets the property Recipe. 
            <para>
            The recipe of the component version.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            <summary>
            The requested resource can't be found.
            </summary>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.ResourceNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.ResourceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.ResourceNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.ResourceNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.ResourceNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.ResourceNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ResourceNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.ResourceNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ResourceNotFoundException.ResourceId">
            <summary>
            Gets and sets the property ResourceId. 
            <para>
            The ID of the resource that isn't found.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ResourceNotFoundException.ResourceType">
            <summary>
            Gets and sets the property ResourceType. 
            <para>
            The type of the resource that isn't found.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.ServiceQuotaExceededException">
            <summary>
            Your request exceeds a service quota. For example, you might have the maximum number
            of components that you can create.
            </summary>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.ServiceQuotaExceededException.#ctor(System.String)">
            <summary>
            Constructs a new ServiceQuotaExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.ServiceQuotaExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ServiceQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.ServiceQuotaExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of ServiceQuotaExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.ServiceQuotaExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.ServiceQuotaExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.ServiceQuotaExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ServiceQuotaExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.ServiceQuotaExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ServiceQuotaExceededException.QuotaCode">
            <summary>
            Gets and sets the property QuotaCode. 
            <para>
            The code for the quota in <a href="https://docs.aws.amazon.com/servicequotas/latest/userguide/intro.html">Service
            Quotas</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ServiceQuotaExceededException.ResourceId">
            <summary>
            Gets and sets the property ResourceId. 
            <para>
            The ID of the resource that exceeds the service quota.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ServiceQuotaExceededException.ResourceType">
            <summary>
            Gets and sets the property ResourceType. 
            <para>
            The type of the resource that exceeds the service quota.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ServiceQuotaExceededException.ServiceCode">
            <summary>
            Gets and sets the property ServiceCode. 
            <para>
            The code for the service in <a href="https://docs.aws.amazon.com/servicequotas/latest/userguide/intro.html">Service
            Quotas</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.SystemResourceLimits">
            <summary>
            Contains information about system resource limits that the IoT Greengrass Core software
            applies to a component's processes. For more information, see <a href="https://docs.aws.amazon.com/greengrass/v2/developerguide/configure-greengrass-core-v2.html#configure-component-system-resource-limits">Configure
            system resource limits for components</a>.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.SystemResourceLimits.Cpus">
            <summary>
            Gets and sets the property Cpus. 
            <para>
            The maximum amount of CPU time that a component's processes can use on the core device.
            A core device's total CPU time is equivalent to the device's number of CPU cores.
            For example, on a core device with 4 CPU cores, you can set this value to <code>2</code>
            to limit the component's processes to 50 percent usage of each CPU core. On a device
            with 1 CPU core, you can set this value to <code>0.25</code> to limit the component's
            processes to 25 percent usage of the CPU. If you set this value to a number greater
            than the number of CPU cores, the IoT Greengrass Core software doesn't limit the component's
            CPU usage.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.SystemResourceLimits.Memory">
            <summary>
            Gets and sets the property Memory. 
            <para>
            The maximum amount of RAM, expressed in kilobytes, that a component's processes can
            use on the core device.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.TagResourceRequest">
            <summary>
            Container for the parameters to the TagResource operation.
            Adds tags to an IoT Greengrass resource. If a tag already exists for the resource,
            this operation updates the tag's value.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.TagResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a>
            of the resource to tag.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.TagResourceRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            A list of key-value pairs that contain metadata for the resource. For more information,
            see <a href="https://docs.aws.amazon.com/greengrass/v2/developerguide/tag-resources.html">Tag
            your resources</a> in the <i>IoT Greengrass V2 Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.TagResourceResponse">
            <summary>
            This is the response object from the TagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.ThrottlingException">
            <summary>
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </summary>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.ThrottlingException.#ctor(System.String)">
            <summary>
            Constructs a new ThrottlingException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.ThrottlingException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.ThrottlingException.#ctor(System.Exception)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.ThrottlingException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.ThrottlingException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.ThrottlingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ThrottlingException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.ThrottlingException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ThrottlingException.QuotaCode">
            <summary>
            Gets and sets the property QuotaCode. 
            <para>
            The code for the quota in <a href="https://docs.aws.amazon.com/servicequotas/latest/userguide/intro.html">Service
            Quotas</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ThrottlingException.RetryAfterSeconds">
            <summary>
            Gets and sets the property RetryAfterSeconds. 
            <para>
            The amount of time to wait before you retry the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ThrottlingException.ServiceCode">
            <summary>
            Gets and sets the property ServiceCode. 
            <para>
            The code for the service in <a href="https://docs.aws.amazon.com/servicequotas/latest/userguide/intro.html">Service
            Quotas</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.UntagResourceRequest">
            <summary>
            Container for the parameters to the UntagResource operation.
            Removes a tag from an IoT Greengrass resource.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.UntagResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a>
            of the resource to untag.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.UntagResourceRequest.TagKeys">
            <summary>
            Gets and sets the property TagKeys. 
            <para>
            A list of keys for tags to remove from the resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.UntagResourceResponse">
            <summary>
            This is the response object from the UntagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.ValidationException">
            <summary>
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </summary>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.ValidationException.#ctor(System.String)">
            <summary>
            Constructs a new ValidationException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.ValidationException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.ValidationException.#ctor(System.Exception)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.ValidationException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.ValidationException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.ValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ValidationException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.ValidationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ValidationException.Fields">
            <summary>
            Gets and sets the property Fields. 
            <para>
            The list of fields that failed to validate.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ValidationException.Reason">
            <summary>
            Gets and sets the property Reason. 
            <para>
            The reason for the validation exception.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.ValidationExceptionField">
            <summary>
            Contains information about a validation exception field.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ValidationExceptionField.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            The message of the exception field.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ValidationExceptionField.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the exception field.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.GreengrassV2PaginatorFactory">
             <summary>
             Paginators for the GreengrassV2 service
            </summary>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.GreengrassV2PaginatorFactory.ListClientDevicesAssociatedWithCoreDevice(Amazon.GreengrassV2.Model.ListClientDevicesAssociatedWithCoreDeviceRequest)">
             <summary>
             Paginator for ListClientDevicesAssociatedWithCoreDevice operation
            </summary>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.GreengrassV2PaginatorFactory.ListComponents(Amazon.GreengrassV2.Model.ListComponentsRequest)">
             <summary>
             Paginator for ListComponents operation
            </summary>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.GreengrassV2PaginatorFactory.ListComponentVersions(Amazon.GreengrassV2.Model.ListComponentVersionsRequest)">
             <summary>
             Paginator for ListComponentVersions operation
            </summary>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.GreengrassV2PaginatorFactory.ListCoreDevices(Amazon.GreengrassV2.Model.ListCoreDevicesRequest)">
             <summary>
             Paginator for ListCoreDevices operation
            </summary>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.GreengrassV2PaginatorFactory.ListDeployments(Amazon.GreengrassV2.Model.ListDeploymentsRequest)">
             <summary>
             Paginator for ListDeployments operation
            </summary>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.GreengrassV2PaginatorFactory.ListEffectiveDeployments(Amazon.GreengrassV2.Model.ListEffectiveDeploymentsRequest)">
             <summary>
             Paginator for ListEffectiveDeployments operation
            </summary>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.GreengrassV2PaginatorFactory.ListInstalledComponents(Amazon.GreengrassV2.Model.ListInstalledComponentsRequest)">
             <summary>
             Paginator for ListInstalledComponents operation
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.IGreengrassV2PaginatorFactory">
             <summary>
             Paginators for the GreengrassV2 service
            </summary>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.IGreengrassV2PaginatorFactory.ListClientDevicesAssociatedWithCoreDevice(Amazon.GreengrassV2.Model.ListClientDevicesAssociatedWithCoreDeviceRequest)">
             <summary>
             Paginator for ListClientDevicesAssociatedWithCoreDevice operation
            </summary>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.IGreengrassV2PaginatorFactory.ListComponents(Amazon.GreengrassV2.Model.ListComponentsRequest)">
             <summary>
             Paginator for ListComponents operation
            </summary>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.IGreengrassV2PaginatorFactory.ListComponentVersions(Amazon.GreengrassV2.Model.ListComponentVersionsRequest)">
             <summary>
             Paginator for ListComponentVersions operation
            </summary>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.IGreengrassV2PaginatorFactory.ListCoreDevices(Amazon.GreengrassV2.Model.ListCoreDevicesRequest)">
             <summary>
             Paginator for ListCoreDevices operation
            </summary>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.IGreengrassV2PaginatorFactory.ListDeployments(Amazon.GreengrassV2.Model.ListDeploymentsRequest)">
             <summary>
             Paginator for ListDeployments operation
            </summary>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.IGreengrassV2PaginatorFactory.ListEffectiveDeployments(Amazon.GreengrassV2.Model.ListEffectiveDeploymentsRequest)">
             <summary>
             Paginator for ListEffectiveDeployments operation
            </summary>
        </member>
        <member name="M:Amazon.GreengrassV2.Model.IGreengrassV2PaginatorFactory.ListInstalledComponents(Amazon.GreengrassV2.Model.ListInstalledComponentsRequest)">
             <summary>
             Paginator for ListInstalledComponents operation
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.IListClientDevicesAssociatedWithCoreDevicePaginator">
             <summary>
             Paginator for the ListClientDevicesAssociatedWithCoreDevice operation
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.IListClientDevicesAssociatedWithCoreDevicePaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.IListClientDevicesAssociatedWithCoreDevicePaginator.AssociatedClientDevices">
            <summary>
            Enumerable containing all of the AssociatedClientDevices
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.IListComponentsPaginator">
             <summary>
             Paginator for the ListComponents operation
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.IListComponentsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.IListComponentsPaginator.Components">
            <summary>
            Enumerable containing all of the Components
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.IListComponentVersionsPaginator">
             <summary>
             Paginator for the ListComponentVersions operation
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.IListComponentVersionsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.IListComponentVersionsPaginator.ComponentVersions">
            <summary>
            Enumerable containing all of the ComponentVersions
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.IListCoreDevicesPaginator">
             <summary>
             Paginator for the ListCoreDevices operation
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.IListCoreDevicesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.IListCoreDevicesPaginator.CoreDevices">
            <summary>
            Enumerable containing all of the CoreDevices
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.IListDeploymentsPaginator">
             <summary>
             Paginator for the ListDeployments operation
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.IListDeploymentsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.IListDeploymentsPaginator.Deployments">
            <summary>
            Enumerable containing all of the Deployments
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.IListEffectiveDeploymentsPaginator">
             <summary>
             Paginator for the ListEffectiveDeployments operation
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.IListEffectiveDeploymentsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.IListEffectiveDeploymentsPaginator.EffectiveDeployments">
            <summary>
            Enumerable containing all of the EffectiveDeployments
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.IListInstalledComponentsPaginator">
             <summary>
             Paginator for the ListInstalledComponents operation
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.IListInstalledComponentsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.IListInstalledComponentsPaginator.InstalledComponents">
            <summary>
            Enumerable containing all of the InstalledComponents
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.ListClientDevicesAssociatedWithCoreDevicePaginator">
            <summary>
            Base class for ListClientDevicesAssociatedWithCoreDevice paginators.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ListClientDevicesAssociatedWithCoreDevicePaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ListClientDevicesAssociatedWithCoreDevicePaginator.AssociatedClientDevices">
            <summary>
            Enumerable containing all of the AssociatedClientDevices
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.ListComponentsPaginator">
            <summary>
            Base class for ListComponents paginators.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ListComponentsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ListComponentsPaginator.Components">
            <summary>
            Enumerable containing all of the Components
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.ListComponentVersionsPaginator">
            <summary>
            Base class for ListComponentVersions paginators.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ListComponentVersionsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ListComponentVersionsPaginator.ComponentVersions">
            <summary>
            Enumerable containing all of the ComponentVersions
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.ListCoreDevicesPaginator">
            <summary>
            Base class for ListCoreDevices paginators.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ListCoreDevicesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ListCoreDevicesPaginator.CoreDevices">
            <summary>
            Enumerable containing all of the CoreDevices
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.ListDeploymentsPaginator">
            <summary>
            Base class for ListDeployments paginators.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ListDeploymentsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ListDeploymentsPaginator.Deployments">
            <summary>
            Enumerable containing all of the Deployments
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.ListEffectiveDeploymentsPaginator">
            <summary>
            Base class for ListEffectiveDeployments paginators.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ListEffectiveDeploymentsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ListEffectiveDeploymentsPaginator.EffectiveDeployments">
            <summary>
            Enumerable containing all of the EffectiveDeployments
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.Model.ListInstalledComponentsPaginator">
            <summary>
            Base class for ListInstalledComponents paginators.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ListInstalledComponentsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.Model.ListInstalledComponentsPaginator.InstalledComponents">
            <summary>
            Enumerable containing all of the InstalledComponents
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.AmazonGreengrassV2Request">
            <summary>
            Base class for GreengrassV2 operation requests.
            </summary>
        </member>
        <member name="T:Amazon.GreengrassV2.CloudComponentState">
            <summary>
            Constants used for properties of type CloudComponentState.
            </summary>
        </member>
        <member name="F:Amazon.GreengrassV2.CloudComponentState.DEPLOYABLE">
            <summary>
            Constant DEPLOYABLE for CloudComponentState
            </summary>
        </member>
        <member name="F:Amazon.GreengrassV2.CloudComponentState.DEPRECATED">
            <summary>
            Constant DEPRECATED for CloudComponentState
            </summary>
        </member>
        <member name="F:Amazon.GreengrassV2.CloudComponentState.FAILED">
            <summary>
            Constant FAILED for CloudComponentState
            </summary>
        </member>
        <member name="F:Amazon.GreengrassV2.CloudComponentState.INITIATED">
            <summary>
            Constant INITIATED for CloudComponentState
            </summary>
        </member>
        <member name="F:Amazon.GreengrassV2.CloudComponentState.REQUESTED">
            <summary>
            Constant REQUESTED for CloudComponentState
            </summary>
        </member>
        <member name="M:Amazon.GreengrassV2.CloudComponentState.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.GreengrassV2.CloudComponentState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.GreengrassV2.CloudComponentState.op_Implicit(System.String)~Amazon.GreengrassV2.CloudComponentState">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.GreengrassV2.ComponentDependencyType">
            <summary>
            Constants used for properties of type ComponentDependencyType.
            </summary>
        </member>
        <member name="F:Amazon.GreengrassV2.ComponentDependencyType.HARD">
            <summary>
            Constant HARD for ComponentDependencyType
            </summary>
        </member>
        <member name="F:Amazon.GreengrassV2.ComponentDependencyType.SOFT">
            <summary>
            Constant SOFT for ComponentDependencyType
            </summary>
        </member>
        <member name="M:Amazon.GreengrassV2.ComponentDependencyType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.GreengrassV2.ComponentDependencyType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.GreengrassV2.ComponentDependencyType.op_Implicit(System.String)~Amazon.GreengrassV2.ComponentDependencyType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.GreengrassV2.ComponentVisibilityScope">
            <summary>
            Constants used for properties of type ComponentVisibilityScope.
            </summary>
        </member>
        <member name="F:Amazon.GreengrassV2.ComponentVisibilityScope.PRIVATE">
            <summary>
            Constant PRIVATE for ComponentVisibilityScope
            </summary>
        </member>
        <member name="F:Amazon.GreengrassV2.ComponentVisibilityScope.PUBLIC">
            <summary>
            Constant PUBLIC for ComponentVisibilityScope
            </summary>
        </member>
        <member name="M:Amazon.GreengrassV2.ComponentVisibilityScope.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.GreengrassV2.ComponentVisibilityScope.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.GreengrassV2.ComponentVisibilityScope.op_Implicit(System.String)~Amazon.GreengrassV2.ComponentVisibilityScope">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.GreengrassV2.CoreDeviceStatus">
            <summary>
            Constants used for properties of type CoreDeviceStatus.
            </summary>
        </member>
        <member name="F:Amazon.GreengrassV2.CoreDeviceStatus.HEALTHY">
            <summary>
            Constant HEALTHY for CoreDeviceStatus
            </summary>
        </member>
        <member name="F:Amazon.GreengrassV2.CoreDeviceStatus.UNHEALTHY">
            <summary>
            Constant UNHEALTHY for CoreDeviceStatus
            </summary>
        </member>
        <member name="M:Amazon.GreengrassV2.CoreDeviceStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.GreengrassV2.CoreDeviceStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.GreengrassV2.CoreDeviceStatus.op_Implicit(System.String)~Amazon.GreengrassV2.CoreDeviceStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.GreengrassV2.DeploymentComponentUpdatePolicyAction">
            <summary>
            Constants used for properties of type DeploymentComponentUpdatePolicyAction.
            </summary>
        </member>
        <member name="F:Amazon.GreengrassV2.DeploymentComponentUpdatePolicyAction.NOTIFY_COMPONENTS">
            <summary>
            Constant NOTIFY_COMPONENTS for DeploymentComponentUpdatePolicyAction
            </summary>
        </member>
        <member name="F:Amazon.GreengrassV2.DeploymentComponentUpdatePolicyAction.SKIP_NOTIFY_COMPONENTS">
            <summary>
            Constant SKIP_NOTIFY_COMPONENTS for DeploymentComponentUpdatePolicyAction
            </summary>
        </member>
        <member name="M:Amazon.GreengrassV2.DeploymentComponentUpdatePolicyAction.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.GreengrassV2.DeploymentComponentUpdatePolicyAction.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.GreengrassV2.DeploymentComponentUpdatePolicyAction.op_Implicit(System.String)~Amazon.GreengrassV2.DeploymentComponentUpdatePolicyAction">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.GreengrassV2.DeploymentFailureHandlingPolicy">
            <summary>
            Constants used for properties of type DeploymentFailureHandlingPolicy.
            </summary>
        </member>
        <member name="F:Amazon.GreengrassV2.DeploymentFailureHandlingPolicy.DO_NOTHING">
            <summary>
            Constant DO_NOTHING for DeploymentFailureHandlingPolicy
            </summary>
        </member>
        <member name="F:Amazon.GreengrassV2.DeploymentFailureHandlingPolicy.ROLLBACK">
            <summary>
            Constant ROLLBACK for DeploymentFailureHandlingPolicy
            </summary>
        </member>
        <member name="M:Amazon.GreengrassV2.DeploymentFailureHandlingPolicy.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.GreengrassV2.DeploymentFailureHandlingPolicy.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.GreengrassV2.DeploymentFailureHandlingPolicy.op_Implicit(System.String)~Amazon.GreengrassV2.DeploymentFailureHandlingPolicy">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.GreengrassV2.DeploymentHistoryFilter">
            <summary>
            Constants used for properties of type DeploymentHistoryFilter.
            </summary>
        </member>
        <member name="F:Amazon.GreengrassV2.DeploymentHistoryFilter.ALL">
            <summary>
            Constant ALL for DeploymentHistoryFilter
            </summary>
        </member>
        <member name="F:Amazon.GreengrassV2.DeploymentHistoryFilter.LATEST_ONLY">
            <summary>
            Constant LATEST_ONLY for DeploymentHistoryFilter
            </summary>
        </member>
        <member name="M:Amazon.GreengrassV2.DeploymentHistoryFilter.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.GreengrassV2.DeploymentHistoryFilter.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.GreengrassV2.DeploymentHistoryFilter.op_Implicit(System.String)~Amazon.GreengrassV2.DeploymentHistoryFilter">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.GreengrassV2.DeploymentStatus">
            <summary>
            Constants used for properties of type DeploymentStatus.
            </summary>
        </member>
        <member name="F:Amazon.GreengrassV2.DeploymentStatus.ACTIVE">
            <summary>
            Constant ACTIVE for DeploymentStatus
            </summary>
        </member>
        <member name="F:Amazon.GreengrassV2.DeploymentStatus.CANCELED">
            <summary>
            Constant CANCELED for DeploymentStatus
            </summary>
        </member>
        <member name="F:Amazon.GreengrassV2.DeploymentStatus.COMPLETED">
            <summary>
            Constant COMPLETED for DeploymentStatus
            </summary>
        </member>
        <member name="F:Amazon.GreengrassV2.DeploymentStatus.FAILED">
            <summary>
            Constant FAILED for DeploymentStatus
            </summary>
        </member>
        <member name="F:Amazon.GreengrassV2.DeploymentStatus.INACTIVE">
            <summary>
            Constant INACTIVE for DeploymentStatus
            </summary>
        </member>
        <member name="M:Amazon.GreengrassV2.DeploymentStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.GreengrassV2.DeploymentStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.GreengrassV2.DeploymentStatus.op_Implicit(System.String)~Amazon.GreengrassV2.DeploymentStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.GreengrassV2.EffectiveDeploymentExecutionStatus">
            <summary>
            Constants used for properties of type EffectiveDeploymentExecutionStatus.
            </summary>
        </member>
        <member name="F:Amazon.GreengrassV2.EffectiveDeploymentExecutionStatus.CANCELED">
            <summary>
            Constant CANCELED for EffectiveDeploymentExecutionStatus
            </summary>
        </member>
        <member name="F:Amazon.GreengrassV2.EffectiveDeploymentExecutionStatus.COMPLETED">
            <summary>
            Constant COMPLETED for EffectiveDeploymentExecutionStatus
            </summary>
        </member>
        <member name="F:Amazon.GreengrassV2.EffectiveDeploymentExecutionStatus.FAILED">
            <summary>
            Constant FAILED for EffectiveDeploymentExecutionStatus
            </summary>
        </member>
        <member name="F:Amazon.GreengrassV2.EffectiveDeploymentExecutionStatus.IN_PROGRESS">
            <summary>
            Constant IN_PROGRESS for EffectiveDeploymentExecutionStatus
            </summary>
        </member>
        <member name="F:Amazon.GreengrassV2.EffectiveDeploymentExecutionStatus.QUEUED">
            <summary>
            Constant QUEUED for EffectiveDeploymentExecutionStatus
            </summary>
        </member>
        <member name="F:Amazon.GreengrassV2.EffectiveDeploymentExecutionStatus.REJECTED">
            <summary>
            Constant REJECTED for EffectiveDeploymentExecutionStatus
            </summary>
        </member>
        <member name="F:Amazon.GreengrassV2.EffectiveDeploymentExecutionStatus.TIMED_OUT">
            <summary>
            Constant TIMED_OUT for EffectiveDeploymentExecutionStatus
            </summary>
        </member>
        <member name="M:Amazon.GreengrassV2.EffectiveDeploymentExecutionStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.GreengrassV2.EffectiveDeploymentExecutionStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.GreengrassV2.EffectiveDeploymentExecutionStatus.op_Implicit(System.String)~Amazon.GreengrassV2.EffectiveDeploymentExecutionStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.GreengrassV2.InstalledComponentLifecycleState">
            <summary>
            Constants used for properties of type InstalledComponentLifecycleState.
            </summary>
        </member>
        <member name="F:Amazon.GreengrassV2.InstalledComponentLifecycleState.BROKEN">
            <summary>
            Constant BROKEN for InstalledComponentLifecycleState
            </summary>
        </member>
        <member name="F:Amazon.GreengrassV2.InstalledComponentLifecycleState.ERRORED">
            <summary>
            Constant ERRORED for InstalledComponentLifecycleState
            </summary>
        </member>
        <member name="F:Amazon.GreengrassV2.InstalledComponentLifecycleState.FINISHED">
            <summary>
            Constant FINISHED for InstalledComponentLifecycleState
            </summary>
        </member>
        <member name="F:Amazon.GreengrassV2.InstalledComponentLifecycleState.INSTALLED">
            <summary>
            Constant INSTALLED for InstalledComponentLifecycleState
            </summary>
        </member>
        <member name="F:Amazon.GreengrassV2.InstalledComponentLifecycleState.NEW">
            <summary>
            Constant NEW for InstalledComponentLifecycleState
            </summary>
        </member>
        <member name="F:Amazon.GreengrassV2.InstalledComponentLifecycleState.RUNNING">
            <summary>
            Constant RUNNING for InstalledComponentLifecycleState
            </summary>
        </member>
        <member name="F:Amazon.GreengrassV2.InstalledComponentLifecycleState.STARTING">
            <summary>
            Constant STARTING for InstalledComponentLifecycleState
            </summary>
        </member>
        <member name="F:Amazon.GreengrassV2.InstalledComponentLifecycleState.STOPPING">
            <summary>
            Constant STOPPING for InstalledComponentLifecycleState
            </summary>
        </member>
        <member name="M:Amazon.GreengrassV2.InstalledComponentLifecycleState.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.GreengrassV2.InstalledComponentLifecycleState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.GreengrassV2.InstalledComponentLifecycleState.op_Implicit(System.String)~Amazon.GreengrassV2.InstalledComponentLifecycleState">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.GreengrassV2.IoTJobAbortAction">
            <summary>
            Constants used for properties of type IoTJobAbortAction.
            </summary>
        </member>
        <member name="F:Amazon.GreengrassV2.IoTJobAbortAction.CANCEL">
            <summary>
            Constant CANCEL for IoTJobAbortAction
            </summary>
        </member>
        <member name="M:Amazon.GreengrassV2.IoTJobAbortAction.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.GreengrassV2.IoTJobAbortAction.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.GreengrassV2.IoTJobAbortAction.op_Implicit(System.String)~Amazon.GreengrassV2.IoTJobAbortAction">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.GreengrassV2.IoTJobExecutionFailureType">
            <summary>
            Constants used for properties of type IoTJobExecutionFailureType.
            </summary>
        </member>
        <member name="F:Amazon.GreengrassV2.IoTJobExecutionFailureType.ALL">
            <summary>
            Constant ALL for IoTJobExecutionFailureType
            </summary>
        </member>
        <member name="F:Amazon.GreengrassV2.IoTJobExecutionFailureType.FAILED">
            <summary>
            Constant FAILED for IoTJobExecutionFailureType
            </summary>
        </member>
        <member name="F:Amazon.GreengrassV2.IoTJobExecutionFailureType.REJECTED">
            <summary>
            Constant REJECTED for IoTJobExecutionFailureType
            </summary>
        </member>
        <member name="F:Amazon.GreengrassV2.IoTJobExecutionFailureType.TIMED_OUT">
            <summary>
            Constant TIMED_OUT for IoTJobExecutionFailureType
            </summary>
        </member>
        <member name="M:Amazon.GreengrassV2.IoTJobExecutionFailureType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.GreengrassV2.IoTJobExecutionFailureType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.GreengrassV2.IoTJobExecutionFailureType.op_Implicit(System.String)~Amazon.GreengrassV2.IoTJobExecutionFailureType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.GreengrassV2.LambdaEventSourceType">
            <summary>
            Constants used for properties of type LambdaEventSourceType.
            </summary>
        </member>
        <member name="F:Amazon.GreengrassV2.LambdaEventSourceType.IOT_CORE">
            <summary>
            Constant IOT_CORE for LambdaEventSourceType
            </summary>
        </member>
        <member name="F:Amazon.GreengrassV2.LambdaEventSourceType.PUB_SUB">
            <summary>
            Constant PUB_SUB for LambdaEventSourceType
            </summary>
        </member>
        <member name="M:Amazon.GreengrassV2.LambdaEventSourceType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.GreengrassV2.LambdaEventSourceType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.GreengrassV2.LambdaEventSourceType.op_Implicit(System.String)~Amazon.GreengrassV2.LambdaEventSourceType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.GreengrassV2.LambdaFilesystemPermission">
            <summary>
            Constants used for properties of type LambdaFilesystemPermission.
            </summary>
        </member>
        <member name="F:Amazon.GreengrassV2.LambdaFilesystemPermission.Ro">
            <summary>
            Constant Ro for LambdaFilesystemPermission
            </summary>
        </member>
        <member name="F:Amazon.GreengrassV2.LambdaFilesystemPermission.Rw">
            <summary>
            Constant Rw for LambdaFilesystemPermission
            </summary>
        </member>
        <member name="M:Amazon.GreengrassV2.LambdaFilesystemPermission.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.GreengrassV2.LambdaFilesystemPermission.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.GreengrassV2.LambdaFilesystemPermission.op_Implicit(System.String)~Amazon.GreengrassV2.LambdaFilesystemPermission">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.GreengrassV2.LambdaInputPayloadEncodingType">
            <summary>
            Constants used for properties of type LambdaInputPayloadEncodingType.
            </summary>
        </member>
        <member name="F:Amazon.GreengrassV2.LambdaInputPayloadEncodingType.Binary">
            <summary>
            Constant Binary for LambdaInputPayloadEncodingType
            </summary>
        </member>
        <member name="F:Amazon.GreengrassV2.LambdaInputPayloadEncodingType.Json">
            <summary>
            Constant Json for LambdaInputPayloadEncodingType
            </summary>
        </member>
        <member name="M:Amazon.GreengrassV2.LambdaInputPayloadEncodingType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.GreengrassV2.LambdaInputPayloadEncodingType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.GreengrassV2.LambdaInputPayloadEncodingType.op_Implicit(System.String)~Amazon.GreengrassV2.LambdaInputPayloadEncodingType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.GreengrassV2.LambdaIsolationMode">
            <summary>
            Constants used for properties of type LambdaIsolationMode.
            </summary>
        </member>
        <member name="F:Amazon.GreengrassV2.LambdaIsolationMode.GreengrassContainer">
            <summary>
            Constant GreengrassContainer for LambdaIsolationMode
            </summary>
        </member>
        <member name="F:Amazon.GreengrassV2.LambdaIsolationMode.NoContainer">
            <summary>
            Constant NoContainer for LambdaIsolationMode
            </summary>
        </member>
        <member name="M:Amazon.GreengrassV2.LambdaIsolationMode.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.GreengrassV2.LambdaIsolationMode.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.GreengrassV2.LambdaIsolationMode.op_Implicit(System.String)~Amazon.GreengrassV2.LambdaIsolationMode">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.GreengrassV2.RecipeOutputFormat">
            <summary>
            Constants used for properties of type RecipeOutputFormat.
            </summary>
        </member>
        <member name="F:Amazon.GreengrassV2.RecipeOutputFormat.JSON">
            <summary>
            Constant JSON for RecipeOutputFormat
            </summary>
        </member>
        <member name="F:Amazon.GreengrassV2.RecipeOutputFormat.YAML">
            <summary>
            Constant YAML for RecipeOutputFormat
            </summary>
        </member>
        <member name="M:Amazon.GreengrassV2.RecipeOutputFormat.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.GreengrassV2.RecipeOutputFormat.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.GreengrassV2.RecipeOutputFormat.op_Implicit(System.String)~Amazon.GreengrassV2.RecipeOutputFormat">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.GreengrassV2.ValidationExceptionReason">
            <summary>
            Constants used for properties of type ValidationExceptionReason.
            </summary>
        </member>
        <member name="F:Amazon.GreengrassV2.ValidationExceptionReason.CANNOT_PARSE">
            <summary>
            Constant CANNOT_PARSE for ValidationExceptionReason
            </summary>
        </member>
        <member name="F:Amazon.GreengrassV2.ValidationExceptionReason.FIELD_VALIDATION_FAILED">
            <summary>
            Constant FIELD_VALIDATION_FAILED for ValidationExceptionReason
            </summary>
        </member>
        <member name="F:Amazon.GreengrassV2.ValidationExceptionReason.OTHER">
            <summary>
            Constant OTHER for ValidationExceptionReason
            </summary>
        </member>
        <member name="F:Amazon.GreengrassV2.ValidationExceptionReason.UNKNOWN_OPERATION">
            <summary>
            Constant UNKNOWN_OPERATION for ValidationExceptionReason
            </summary>
        </member>
        <member name="M:Amazon.GreengrassV2.ValidationExceptionReason.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.GreengrassV2.ValidationExceptionReason.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.GreengrassV2.ValidationExceptionReason.op_Implicit(System.String)~Amazon.GreengrassV2.ValidationExceptionReason">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.GreengrassV2.AmazonGreengrassV2Client">
             <summary>
             Implementation for accessing GreengrassV2
            
             IoT Greengrass brings local compute, messaging, data management, sync, and ML inference
             capabilities to edge devices. This enables devices to collect and analyze data closer
             to the source of information, react autonomously to local events, and communicate
             securely with each other on local networks. Local devices can also communicate securely
             with Amazon Web Services IoT Core and export IoT data to the Amazon Web Services Cloud.
             IoT Greengrass developers can use Lambda functions and components to create and deploy
             applications to fleets of edge devices for local operation.
             
              
             <para>
             IoT Greengrass Version 2 provides a new major version of the IoT Greengrass Core software,
             new APIs, and a new console. Use this API reference to learn how to use the IoT Greengrass
             V2 API operations to manage components, manage deployments, and core devices.
             </para>
              
             <para>
             For more information, see <a href="https://docs.aws.amazon.com/greengrass/v2/developerguide/what-is-iot-greengrass.html">What
             is IoT Greengrass?</a> in the <i>IoT Greengrass V2 Developer Guide</i>.
             </para>
             </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.AmazonGreengrassV2Client.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.GreengrassV2.AmazonGreengrassV2Client.#ctor">
             <summary>
             Constructs AmazonGreengrassV2Client with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.GreengrassV2.AmazonGreengrassV2Client.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonGreengrassV2Client with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.GreengrassV2.AmazonGreengrassV2Client.#ctor(Amazon.GreengrassV2.AmazonGreengrassV2Config)">
             <summary>
             Constructs AmazonGreengrassV2Client with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonGreengrassV2Client Configuration Object</param>
        </member>
        <member name="M:Amazon.GreengrassV2.AmazonGreengrassV2Client.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonGreengrassV2Client with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.GreengrassV2.AmazonGreengrassV2Client.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonGreengrassV2Client with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.GreengrassV2.AmazonGreengrassV2Client.#ctor(Amazon.Runtime.AWSCredentials,Amazon.GreengrassV2.AmazonGreengrassV2Config)">
            <summary>
            Constructs AmazonGreengrassV2Client with AWS Credentials and an
            AmazonGreengrassV2Client Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonGreengrassV2Client Configuration Object</param>
        </member>
        <member name="M:Amazon.GreengrassV2.AmazonGreengrassV2Client.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonGreengrassV2Client with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.GreengrassV2.AmazonGreengrassV2Client.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonGreengrassV2Client with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.GreengrassV2.AmazonGreengrassV2Client.#ctor(System.String,System.String,Amazon.GreengrassV2.AmazonGreengrassV2Config)">
            <summary>
            Constructs AmazonGreengrassV2Client with AWS Access Key ID, AWS Secret Key and an
            AmazonGreengrassV2Client Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonGreengrassV2Client Configuration Object</param>
        </member>
        <member name="M:Amazon.GreengrassV2.AmazonGreengrassV2Client.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonGreengrassV2Client with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.GreengrassV2.AmazonGreengrassV2Client.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonGreengrassV2Client with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.GreengrassV2.AmazonGreengrassV2Client.#ctor(System.String,System.String,System.String,Amazon.GreengrassV2.AmazonGreengrassV2Config)">
            <summary>
            Constructs AmazonGreengrassV2Client with AWS Access Key ID, AWS Secret Key and an
            AmazonGreengrassV2Client Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonGreengrassV2Client Configuration Object</param>
        </member>
        <member name="M:Amazon.GreengrassV2.AmazonGreengrassV2Client.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.AmazonGreengrassV2Client.ServiceMetadata">
            <summary>
            Capture metadata for the service.
            </summary>
        </member>
        <member name="M:Amazon.GreengrassV2.AmazonGreengrassV2Client.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.GreengrassV2.AmazonGreengrassV2Client.BatchAssociateClientDeviceWithCoreDevice(Amazon.GreengrassV2.Model.BatchAssociateClientDeviceWithCoreDeviceRequest)">
            <summary>
            Associate a list of client devices with a core device. Use this API operation to specify
            which client devices can discover a core device through cloud discovery. With cloud
            discovery, client devices connect to IoT Greengrass to retrieve associated core devices'
            connectivity information and certificates. For more information, see <a href="https://docs.aws.amazon.com/greengrass/v2/developerguide/configure-cloud-discovery.html">Configure
            cloud discovery</a> in the <i>IoT Greengrass V2 Developer Guide</i>.
            
             <note> 
            <para>
            Client devices are local IoT devices that connect to and communicate with an IoT Greengrass
            core device over MQTT. You can connect client devices to a core device to sync MQTT
            messages and data to Amazon Web Services IoT Core and interact with client devices
            in Greengrass components. For more information, see <a href="https://docs.aws.amazon.com/greengrass/v2/developerguide/interact-with-local-iot-devices.html">Interact
            with local IoT devices</a> in the <i>IoT Greengrass V2 Developer Guide</i>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the BatchAssociateClientDeviceWithCoreDevice service method.</param>
            
            <returns>The response from the BatchAssociateClientDeviceWithCoreDevice service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/BatchAssociateClientDeviceWithCoreDevice">REST API Reference for BatchAssociateClientDeviceWithCoreDevice Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.AmazonGreengrassV2Client.BatchAssociateClientDeviceWithCoreDeviceAsync(Amazon.GreengrassV2.Model.BatchAssociateClientDeviceWithCoreDeviceRequest,System.Threading.CancellationToken)">
            <summary>
            Associate a list of client devices with a core device. Use this API operation to specify
            which client devices can discover a core device through cloud discovery. With cloud
            discovery, client devices connect to IoT Greengrass to retrieve associated core devices'
            connectivity information and certificates. For more information, see <a href="https://docs.aws.amazon.com/greengrass/v2/developerguide/configure-cloud-discovery.html">Configure
            cloud discovery</a> in the <i>IoT Greengrass V2 Developer Guide</i>.
            
             <note> 
            <para>
            Client devices are local IoT devices that connect to and communicate with an IoT Greengrass
            core device over MQTT. You can connect client devices to a core device to sync MQTT
            messages and data to Amazon Web Services IoT Core and interact with client devices
            in Greengrass components. For more information, see <a href="https://docs.aws.amazon.com/greengrass/v2/developerguide/interact-with-local-iot-devices.html">Interact
            with local IoT devices</a> in the <i>IoT Greengrass V2 Developer Guide</i>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the BatchAssociateClientDeviceWithCoreDevice service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the BatchAssociateClientDeviceWithCoreDevice service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/BatchAssociateClientDeviceWithCoreDevice">REST API Reference for BatchAssociateClientDeviceWithCoreDevice Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.AmazonGreengrassV2Client.BatchDisassociateClientDeviceFromCoreDevice(Amazon.GreengrassV2.Model.BatchDisassociateClientDeviceFromCoreDeviceRequest)">
            <summary>
            Disassociate a list of client devices from a core device. After you disassociate a
            client device from a core device, the client device won't be able to use cloud discovery
            to retrieve the core device's connectivity information and certificates.
            </summary>
            <param name="request">Container for the necessary parameters to execute the BatchDisassociateClientDeviceFromCoreDevice service method.</param>
            
            <returns>The response from the BatchDisassociateClientDeviceFromCoreDevice service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/BatchDisassociateClientDeviceFromCoreDevice">REST API Reference for BatchDisassociateClientDeviceFromCoreDevice Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.AmazonGreengrassV2Client.BatchDisassociateClientDeviceFromCoreDeviceAsync(Amazon.GreengrassV2.Model.BatchDisassociateClientDeviceFromCoreDeviceRequest,System.Threading.CancellationToken)">
            <summary>
            Disassociate a list of client devices from a core device. After you disassociate a
            client device from a core device, the client device won't be able to use cloud discovery
            to retrieve the core device's connectivity information and certificates.
            </summary>
            <param name="request">Container for the necessary parameters to execute the BatchDisassociateClientDeviceFromCoreDevice service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the BatchDisassociateClientDeviceFromCoreDevice service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/BatchDisassociateClientDeviceFromCoreDevice">REST API Reference for BatchDisassociateClientDeviceFromCoreDevice Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.AmazonGreengrassV2Client.CancelDeployment(Amazon.GreengrassV2.Model.CancelDeploymentRequest)">
            <summary>
            Cancels a deployment. This operation cancels the deployment for devices that haven't
            yet received it. If a device already received the deployment, this operation doesn't
            change anything for that device.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CancelDeployment service method.</param>
            
            <returns>The response from the CancelDeployment service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ConflictException">
            Your request has conflicting operations. This can occur if you're trying to perform
            more than one operation on the same resource at the same time.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/CancelDeployment">REST API Reference for CancelDeployment Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.AmazonGreengrassV2Client.CancelDeploymentAsync(Amazon.GreengrassV2.Model.CancelDeploymentRequest,System.Threading.CancellationToken)">
            <summary>
            Cancels a deployment. This operation cancels the deployment for devices that haven't
            yet received it. If a device already received the deployment, this operation doesn't
            change anything for that device.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CancelDeployment service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CancelDeployment service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ConflictException">
            Your request has conflicting operations. This can occur if you're trying to perform
            more than one operation on the same resource at the same time.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/CancelDeployment">REST API Reference for CancelDeployment Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.AmazonGreengrassV2Client.CreateComponentVersion(Amazon.GreengrassV2.Model.CreateComponentVersionRequest)">
            <summary>
            Creates a component. Components are software that run on Greengrass core devices.
            After you develop and test a component on your core device, you can use this operation
            to upload your component to IoT Greengrass. Then, you can deploy the component to
            other core devices.
            
             
            <para>
            You can use this operation to do the following:
            </para>
             <ul> <li> 
            <para>
             <b>Create components from recipes</b> 
            </para>
             
            <para>
            Create a component from a recipe, which is a file that defines the component's metadata,
            parameters, dependencies, lifecycle, artifacts, and platform capability. For more
            information, see <a href="https://docs.aws.amazon.com/greengrass/v2/developerguide/component-recipe-reference.html">IoT
            Greengrass component recipe reference</a> in the <i>IoT Greengrass V2 Developer Guide</i>.
            </para>
             
            <para>
            To create a component from a recipe, specify <code>inlineRecipe</code> when you call
            this operation.
            </para>
             </li> <li> 
            <para>
             <b>Create components from Lambda functions</b> 
            </para>
             
            <para>
            Create a component from an Lambda function that runs on IoT Greengrass. This creates
            a recipe and artifacts from the Lambda function's deployment package. You can use
            this operation to migrate Lambda functions from IoT Greengrass V1 to IoT Greengrass
            V2.
            </para>
             
            <para>
            This function only accepts Lambda functions that use the following runtimes:
            </para>
             <ul> <li> 
            <para>
            Python 2.7 – <code>python2.7</code> 
            </para>
             </li> <li> 
            <para>
            Python 3.7 – <code>python3.7</code> 
            </para>
             </li> <li> 
            <para>
            Python 3.8 – <code>python3.8</code> 
            </para>
             </li> <li> 
            <para>
            Java 8 – <code>java8</code> 
            </para>
             </li> <li> 
            <para>
            Node.js 10 – <code>nodejs10.x</code> 
            </para>
             </li> <li> 
            <para>
            Node.js 12 – <code>nodejs12.x</code> 
            </para>
             </li> </ul> 
            <para>
            To create a component from a Lambda function, specify <code>lambdaFunction</code>
            when you call this operation.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateComponentVersion service method.</param>
            
            <returns>The response from the CreateComponentVersion service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ConflictException">
            Your request has conflicting operations. This can occur if you're trying to perform
            more than one operation on the same resource at the same time.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.RequestAlreadyInProgressException">
            The request is already in progress. This exception occurs when you use a client token
            for multiple requests while IoT Greengrass is still processing an earlier request
            that uses the same client token.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ServiceQuotaExceededException">
            Your request exceeds a service quota. For example, you might have the maximum number
            of components that you can create.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/CreateComponentVersion">REST API Reference for CreateComponentVersion Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.AmazonGreengrassV2Client.CreateComponentVersionAsync(Amazon.GreengrassV2.Model.CreateComponentVersionRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a component. Components are software that run on Greengrass core devices.
            After you develop and test a component on your core device, you can use this operation
            to upload your component to IoT Greengrass. Then, you can deploy the component to
            other core devices.
            
             
            <para>
            You can use this operation to do the following:
            </para>
             <ul> <li> 
            <para>
             <b>Create components from recipes</b> 
            </para>
             
            <para>
            Create a component from a recipe, which is a file that defines the component's metadata,
            parameters, dependencies, lifecycle, artifacts, and platform capability. For more
            information, see <a href="https://docs.aws.amazon.com/greengrass/v2/developerguide/component-recipe-reference.html">IoT
            Greengrass component recipe reference</a> in the <i>IoT Greengrass V2 Developer Guide</i>.
            </para>
             
            <para>
            To create a component from a recipe, specify <code>inlineRecipe</code> when you call
            this operation.
            </para>
             </li> <li> 
            <para>
             <b>Create components from Lambda functions</b> 
            </para>
             
            <para>
            Create a component from an Lambda function that runs on IoT Greengrass. This creates
            a recipe and artifacts from the Lambda function's deployment package. You can use
            this operation to migrate Lambda functions from IoT Greengrass V1 to IoT Greengrass
            V2.
            </para>
             
            <para>
            This function only accepts Lambda functions that use the following runtimes:
            </para>
             <ul> <li> 
            <para>
            Python 2.7 – <code>python2.7</code> 
            </para>
             </li> <li> 
            <para>
            Python 3.7 – <code>python3.7</code> 
            </para>
             </li> <li> 
            <para>
            Python 3.8 – <code>python3.8</code> 
            </para>
             </li> <li> 
            <para>
            Java 8 – <code>java8</code> 
            </para>
             </li> <li> 
            <para>
            Node.js 10 – <code>nodejs10.x</code> 
            </para>
             </li> <li> 
            <para>
            Node.js 12 – <code>nodejs12.x</code> 
            </para>
             </li> </ul> 
            <para>
            To create a component from a Lambda function, specify <code>lambdaFunction</code>
            when you call this operation.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateComponentVersion service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateComponentVersion service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ConflictException">
            Your request has conflicting operations. This can occur if you're trying to perform
            more than one operation on the same resource at the same time.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.RequestAlreadyInProgressException">
            The request is already in progress. This exception occurs when you use a client token
            for multiple requests while IoT Greengrass is still processing an earlier request
            that uses the same client token.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ServiceQuotaExceededException">
            Your request exceeds a service quota. For example, you might have the maximum number
            of components that you can create.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/CreateComponentVersion">REST API Reference for CreateComponentVersion Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.AmazonGreengrassV2Client.CreateDeployment(Amazon.GreengrassV2.Model.CreateDeploymentRequest)">
            <summary>
            Creates a continuous deployment for a target, which is a Greengrass core device or
            group of core devices. When you add a new core device to a group of core devices that
            has a deployment, IoT Greengrass deploys that group's deployment to the new device.
            
             
            <para>
            You can define one deployment for each target. When you create a new deployment for
            a target that has an existing deployment, you replace the previous deployment. IoT
            Greengrass applies the new deployment to the target devices.
            </para>
             
            <para>
            Every deployment has a revision number that indicates how many deployment revisions
            you define for a target. Use this operation to create a new revision of an existing
            deployment. This operation returns the revision number of the new deployment when
            you create it.
            </para>
             
            <para>
            For more information, see the <a href="https://docs.aws.amazon.com/greengrass/v2/developerguide/create-deployments.html">Create
            deployments</a> in the <i>IoT Greengrass V2 Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDeployment service method.</param>
            
            <returns>The response from the CreateDeployment service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.RequestAlreadyInProgressException">
            The request is already in progress. This exception occurs when you use a client token
            for multiple requests while IoT Greengrass is still processing an earlier request
            that uses the same client token.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/CreateDeployment">REST API Reference for CreateDeployment Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.AmazonGreengrassV2Client.CreateDeploymentAsync(Amazon.GreengrassV2.Model.CreateDeploymentRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a continuous deployment for a target, which is a Greengrass core device or
            group of core devices. When you add a new core device to a group of core devices that
            has a deployment, IoT Greengrass deploys that group's deployment to the new device.
            
             
            <para>
            You can define one deployment for each target. When you create a new deployment for
            a target that has an existing deployment, you replace the previous deployment. IoT
            Greengrass applies the new deployment to the target devices.
            </para>
             
            <para>
            Every deployment has a revision number that indicates how many deployment revisions
            you define for a target. Use this operation to create a new revision of an existing
            deployment. This operation returns the revision number of the new deployment when
            you create it.
            </para>
             
            <para>
            For more information, see the <a href="https://docs.aws.amazon.com/greengrass/v2/developerguide/create-deployments.html">Create
            deployments</a> in the <i>IoT Greengrass V2 Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDeployment service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateDeployment service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.RequestAlreadyInProgressException">
            The request is already in progress. This exception occurs when you use a client token
            for multiple requests while IoT Greengrass is still processing an earlier request
            that uses the same client token.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/CreateDeployment">REST API Reference for CreateDeployment Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.AmazonGreengrassV2Client.DeleteComponent(Amazon.GreengrassV2.Model.DeleteComponentRequest)">
            <summary>
            Deletes a version of a component from IoT Greengrass.
            
             <note> 
            <para>
            This operation deletes the component's recipe and artifacts. As a result, deployments
            that refer to this component version will fail. If you have deployments that use this
            component version, you can remove the component from the deployment or update the
            deployment to use a valid version.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteComponent service method.</param>
            
            <returns>The response from the DeleteComponent service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ConflictException">
            Your request has conflicting operations. This can occur if you're trying to perform
            more than one operation on the same resource at the same time.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/DeleteComponent">REST API Reference for DeleteComponent Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.AmazonGreengrassV2Client.DeleteComponentAsync(Amazon.GreengrassV2.Model.DeleteComponentRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a version of a component from IoT Greengrass.
            
             <note> 
            <para>
            This operation deletes the component's recipe and artifacts. As a result, deployments
            that refer to this component version will fail. If you have deployments that use this
            component version, you can remove the component from the deployment or update the
            deployment to use a valid version.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteComponent service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteComponent service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ConflictException">
            Your request has conflicting operations. This can occur if you're trying to perform
            more than one operation on the same resource at the same time.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/DeleteComponent">REST API Reference for DeleteComponent Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.AmazonGreengrassV2Client.DeleteCoreDevice(Amazon.GreengrassV2.Model.DeleteCoreDeviceRequest)">
            <summary>
            Deletes a Greengrass core device, which is an IoT thing. This operation removes the
            core device from the list of core devices. This operation doesn't delete the IoT thing.
            For more information about how to delete the IoT thing, see <a href="https://docs.aws.amazon.com/iot/latest/apireference/API_DeleteThing.html">DeleteThing</a>
            in the <i>IoT API Reference</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteCoreDevice service method.</param>
            
            <returns>The response from the DeleteCoreDevice service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ConflictException">
            Your request has conflicting operations. This can occur if you're trying to perform
            more than one operation on the same resource at the same time.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/DeleteCoreDevice">REST API Reference for DeleteCoreDevice Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.AmazonGreengrassV2Client.DeleteCoreDeviceAsync(Amazon.GreengrassV2.Model.DeleteCoreDeviceRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a Greengrass core device, which is an IoT thing. This operation removes the
            core device from the list of core devices. This operation doesn't delete the IoT thing.
            For more information about how to delete the IoT thing, see <a href="https://docs.aws.amazon.com/iot/latest/apireference/API_DeleteThing.html">DeleteThing</a>
            in the <i>IoT API Reference</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteCoreDevice service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteCoreDevice service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ConflictException">
            Your request has conflicting operations. This can occur if you're trying to perform
            more than one operation on the same resource at the same time.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/DeleteCoreDevice">REST API Reference for DeleteCoreDevice Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.AmazonGreengrassV2Client.DescribeComponent(Amazon.GreengrassV2.Model.DescribeComponentRequest)">
            <summary>
            Retrieves metadata for a version of a component.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeComponent service method.</param>
            
            <returns>The response from the DescribeComponent service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/DescribeComponent">REST API Reference for DescribeComponent Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.AmazonGreengrassV2Client.DescribeComponentAsync(Amazon.GreengrassV2.Model.DescribeComponentRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves metadata for a version of a component.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeComponent service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeComponent service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/DescribeComponent">REST API Reference for DescribeComponent Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.AmazonGreengrassV2Client.GetComponent(Amazon.GreengrassV2.Model.GetComponentRequest)">
            <summary>
            Gets the recipe for a version of a component. Core devices can call this operation
            to identify the artifacts and requirements to install a component.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetComponent service method.</param>
            
            <returns>The response from the GetComponent service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/GetComponent">REST API Reference for GetComponent Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.AmazonGreengrassV2Client.GetComponentAsync(Amazon.GreengrassV2.Model.GetComponentRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the recipe for a version of a component. Core devices can call this operation
            to identify the artifacts and requirements to install a component.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetComponent service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetComponent service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/GetComponent">REST API Reference for GetComponent Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.AmazonGreengrassV2Client.GetComponentVersionArtifact(Amazon.GreengrassV2.Model.GetComponentVersionArtifactRequest)">
            <summary>
            Gets the pre-signed URL to download a public component artifact. Core devices call
            this operation to identify the URL that they can use to download an artifact to install.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetComponentVersionArtifact service method.</param>
            
            <returns>The response from the GetComponentVersionArtifact service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/GetComponentVersionArtifact">REST API Reference for GetComponentVersionArtifact Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.AmazonGreengrassV2Client.GetComponentVersionArtifactAsync(Amazon.GreengrassV2.Model.GetComponentVersionArtifactRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the pre-signed URL to download a public component artifact. Core devices call
            this operation to identify the URL that they can use to download an artifact to install.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetComponentVersionArtifact service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetComponentVersionArtifact service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/GetComponentVersionArtifact">REST API Reference for GetComponentVersionArtifact Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.AmazonGreengrassV2Client.GetCoreDevice(Amazon.GreengrassV2.Model.GetCoreDeviceRequest)">
            <summary>
            Retrieves metadata for a Greengrass core device.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetCoreDevice service method.</param>
            
            <returns>The response from the GetCoreDevice service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/GetCoreDevice">REST API Reference for GetCoreDevice Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.AmazonGreengrassV2Client.GetCoreDeviceAsync(Amazon.GreengrassV2.Model.GetCoreDeviceRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves metadata for a Greengrass core device.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetCoreDevice service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetCoreDevice service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/GetCoreDevice">REST API Reference for GetCoreDevice Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.AmazonGreengrassV2Client.GetDeployment(Amazon.GreengrassV2.Model.GetDeploymentRequest)">
            <summary>
            Gets a deployment. Deployments define the components that run on Greengrass core devices.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetDeployment service method.</param>
            
            <returns>The response from the GetDeployment service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/GetDeployment">REST API Reference for GetDeployment Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.AmazonGreengrassV2Client.GetDeploymentAsync(Amazon.GreengrassV2.Model.GetDeploymentRequest,System.Threading.CancellationToken)">
            <summary>
            Gets a deployment. Deployments define the components that run on Greengrass core devices.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetDeployment service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetDeployment service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/GetDeployment">REST API Reference for GetDeployment Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.AmazonGreengrassV2Client.ListClientDevicesAssociatedWithCoreDevice(Amazon.GreengrassV2.Model.ListClientDevicesAssociatedWithCoreDeviceRequest)">
            <summary>
            Retrieves a paginated list of client devices that are associated with a core device.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListClientDevicesAssociatedWithCoreDevice service method.</param>
            
            <returns>The response from the ListClientDevicesAssociatedWithCoreDevice service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/ListClientDevicesAssociatedWithCoreDevice">REST API Reference for ListClientDevicesAssociatedWithCoreDevice Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.AmazonGreengrassV2Client.ListClientDevicesAssociatedWithCoreDeviceAsync(Amazon.GreengrassV2.Model.ListClientDevicesAssociatedWithCoreDeviceRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves a paginated list of client devices that are associated with a core device.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListClientDevicesAssociatedWithCoreDevice service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListClientDevicesAssociatedWithCoreDevice service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/ListClientDevicesAssociatedWithCoreDevice">REST API Reference for ListClientDevicesAssociatedWithCoreDevice Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.AmazonGreengrassV2Client.ListComponents(Amazon.GreengrassV2.Model.ListComponentsRequest)">
            <summary>
            Retrieves a paginated list of component summaries. This list includes components that
            you have permission to view.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListComponents service method.</param>
            
            <returns>The response from the ListComponents service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/ListComponents">REST API Reference for ListComponents Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.AmazonGreengrassV2Client.ListComponentsAsync(Amazon.GreengrassV2.Model.ListComponentsRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves a paginated list of component summaries. This list includes components that
            you have permission to view.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListComponents service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListComponents service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/ListComponents">REST API Reference for ListComponents Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.AmazonGreengrassV2Client.ListComponentVersions(Amazon.GreengrassV2.Model.ListComponentVersionsRequest)">
            <summary>
            Retrieves a paginated list of all versions for a component. Greater versions are listed
            first.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListComponentVersions service method.</param>
            
            <returns>The response from the ListComponentVersions service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/ListComponentVersions">REST API Reference for ListComponentVersions Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.AmazonGreengrassV2Client.ListComponentVersionsAsync(Amazon.GreengrassV2.Model.ListComponentVersionsRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves a paginated list of all versions for a component. Greater versions are listed
            first.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListComponentVersions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListComponentVersions service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/ListComponentVersions">REST API Reference for ListComponentVersions Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.AmazonGreengrassV2Client.ListCoreDevices(Amazon.GreengrassV2.Model.ListCoreDevicesRequest)">
            <summary>
            Retrieves a paginated list of Greengrass core devices.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListCoreDevices service method.</param>
            
            <returns>The response from the ListCoreDevices service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/ListCoreDevices">REST API Reference for ListCoreDevices Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.AmazonGreengrassV2Client.ListCoreDevicesAsync(Amazon.GreengrassV2.Model.ListCoreDevicesRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves a paginated list of Greengrass core devices.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListCoreDevices service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListCoreDevices service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/ListCoreDevices">REST API Reference for ListCoreDevices Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.AmazonGreengrassV2Client.ListDeployments(Amazon.GreengrassV2.Model.ListDeploymentsRequest)">
            <summary>
            Retrieves a paginated list of deployments.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListDeployments service method.</param>
            
            <returns>The response from the ListDeployments service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/ListDeployments">REST API Reference for ListDeployments Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.AmazonGreengrassV2Client.ListDeploymentsAsync(Amazon.GreengrassV2.Model.ListDeploymentsRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves a paginated list of deployments.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListDeployments service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListDeployments service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/ListDeployments">REST API Reference for ListDeployments Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.AmazonGreengrassV2Client.ListEffectiveDeployments(Amazon.GreengrassV2.Model.ListEffectiveDeploymentsRequest)">
            <summary>
            Retrieves a paginated list of deployment jobs that IoT Greengrass sends to Greengrass
            core devices.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListEffectiveDeployments service method.</param>
            
            <returns>The response from the ListEffectiveDeployments service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/ListEffectiveDeployments">REST API Reference for ListEffectiveDeployments Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.AmazonGreengrassV2Client.ListEffectiveDeploymentsAsync(Amazon.GreengrassV2.Model.ListEffectiveDeploymentsRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves a paginated list of deployment jobs that IoT Greengrass sends to Greengrass
            core devices.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListEffectiveDeployments service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListEffectiveDeployments service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/ListEffectiveDeployments">REST API Reference for ListEffectiveDeployments Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.AmazonGreengrassV2Client.ListInstalledComponents(Amazon.GreengrassV2.Model.ListInstalledComponentsRequest)">
            <summary>
            Retrieves a paginated list of the components that a Greengrass core device runs.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListInstalledComponents service method.</param>
            
            <returns>The response from the ListInstalledComponents service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/ListInstalledComponents">REST API Reference for ListInstalledComponents Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.AmazonGreengrassV2Client.ListInstalledComponentsAsync(Amazon.GreengrassV2.Model.ListInstalledComponentsRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves a paginated list of the components that a Greengrass core device runs.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListInstalledComponents service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListInstalledComponents service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/ListInstalledComponents">REST API Reference for ListInstalledComponents Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.AmazonGreengrassV2Client.ListTagsForResource(Amazon.GreengrassV2.Model.ListTagsForResourceRequest)">
            <summary>
            Retrieves the list of tags for an IoT Greengrass resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            
            <returns>The response from the ListTagsForResource service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.AmazonGreengrassV2Client.ListTagsForResourceAsync(Amazon.GreengrassV2.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the list of tags for an IoT Greengrass resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.AmazonGreengrassV2Client.ResolveComponentCandidates(Amazon.GreengrassV2.Model.ResolveComponentCandidatesRequest)">
            <summary>
            Retrieves a list of components that meet the component, version, and platform requirements
            of a deployment. Greengrass core devices call this operation when they receive a deployment
            to identify the components to install.
            
             
            <para>
            This operation identifies components that meet all dependency requirements for a deployment.
            If the requirements conflict, then this operation returns an error and the deployment
            fails. For example, this occurs if component <code>A</code> requires version <code>&gt;2.0.0</code>
            and component <code>B</code> requires version <code>&lt;2.0.0</code> of a component
            dependency.
            </para>
             
            <para>
            When you specify the component candidates to resolve, IoT Greengrass compares each
            component's digest from the core device with the component's digest in the Amazon
            Web Services Cloud. If the digests don't match, then IoT Greengrass specifies to use
            the version from the Amazon Web Services Cloud.
            </para>
             <important> 
            <para>
            To use this operation, you must use the data plane API endpoint and authenticate with
            an IoT device certificate. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/greengrass.html">IoT
            Greengrass endpoints and quotas</a>.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ResolveComponentCandidates service method.</param>
            
            <returns>The response from the ResolveComponentCandidates service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ConflictException">
            Your request has conflicting operations. This can occur if you're trying to perform
            more than one operation on the same resource at the same time.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/ResolveComponentCandidates">REST API Reference for ResolveComponentCandidates Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.AmazonGreengrassV2Client.ResolveComponentCandidatesAsync(Amazon.GreengrassV2.Model.ResolveComponentCandidatesRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of components that meet the component, version, and platform requirements
            of a deployment. Greengrass core devices call this operation when they receive a deployment
            to identify the components to install.
            
             
            <para>
            This operation identifies components that meet all dependency requirements for a deployment.
            If the requirements conflict, then this operation returns an error and the deployment
            fails. For example, this occurs if component <code>A</code> requires version <code>&gt;2.0.0</code>
            and component <code>B</code> requires version <code>&lt;2.0.0</code> of a component
            dependency.
            </para>
             
            <para>
            When you specify the component candidates to resolve, IoT Greengrass compares each
            component's digest from the core device with the component's digest in the Amazon
            Web Services Cloud. If the digests don't match, then IoT Greengrass specifies to use
            the version from the Amazon Web Services Cloud.
            </para>
             <important> 
            <para>
            To use this operation, you must use the data plane API endpoint and authenticate with
            an IoT device certificate. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/greengrass.html">IoT
            Greengrass endpoints and quotas</a>.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ResolveComponentCandidates service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ResolveComponentCandidates service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ConflictException">
            Your request has conflicting operations. This can occur if you're trying to perform
            more than one operation on the same resource at the same time.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/ResolveComponentCandidates">REST API Reference for ResolveComponentCandidates Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.AmazonGreengrassV2Client.TagResource(Amazon.GreengrassV2.Model.TagResourceRequest)">
            <summary>
            Adds tags to an IoT Greengrass resource. If a tag already exists for the resource,
            this operation updates the tag's value.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            
            <returns>The response from the TagResource service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.AmazonGreengrassV2Client.TagResourceAsync(Amazon.GreengrassV2.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Adds tags to an IoT Greengrass resource. If a tag already exists for the resource,
            this operation updates the tag's value.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.AmazonGreengrassV2Client.UntagResource(Amazon.GreengrassV2.Model.UntagResourceRequest)">
            <summary>
            Removes a tag from an IoT Greengrass resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            
            <returns>The response from the UntagResource service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.AmazonGreengrassV2Client.UntagResourceAsync(Amazon.GreengrassV2.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Removes a tag from an IoT Greengrass resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="T:Amazon.GreengrassV2.IAmazonGreengrassV2">
             <summary>
             Interface for accessing GreengrassV2
            
             IoT Greengrass brings local compute, messaging, data management, sync, and ML inference
             capabilities to edge devices. This enables devices to collect and analyze data closer
             to the source of information, react autonomously to local events, and communicate
             securely with each other on local networks. Local devices can also communicate securely
             with Amazon Web Services IoT Core and export IoT data to the Amazon Web Services Cloud.
             IoT Greengrass developers can use Lambda functions and components to create and deploy
             applications to fleets of edge devices for local operation.
             
              
             <para>
             IoT Greengrass Version 2 provides a new major version of the IoT Greengrass Core software,
             new APIs, and a new console. Use this API reference to learn how to use the IoT Greengrass
             V2 API operations to manage components, manage deployments, and core devices.
             </para>
              
             <para>
             For more information, see <a href="https://docs.aws.amazon.com/greengrass/v2/developerguide/what-is-iot-greengrass.html">What
             is IoT Greengrass?</a> in the <i>IoT Greengrass V2 Developer Guide</i>.
             </para>
             </summary>
        </member>
        <member name="P:Amazon.GreengrassV2.IAmazonGreengrassV2.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.GreengrassV2.IAmazonGreengrassV2.BatchAssociateClientDeviceWithCoreDevice(Amazon.GreengrassV2.Model.BatchAssociateClientDeviceWithCoreDeviceRequest)">
            <summary>
            Associate a list of client devices with a core device. Use this API operation to specify
            which client devices can discover a core device through cloud discovery. With cloud
            discovery, client devices connect to IoT Greengrass to retrieve associated core devices'
            connectivity information and certificates. For more information, see <a href="https://docs.aws.amazon.com/greengrass/v2/developerguide/configure-cloud-discovery.html">Configure
            cloud discovery</a> in the <i>IoT Greengrass V2 Developer Guide</i>.
            
             <note> 
            <para>
            Client devices are local IoT devices that connect to and communicate with an IoT Greengrass
            core device over MQTT. You can connect client devices to a core device to sync MQTT
            messages and data to Amazon Web Services IoT Core and interact with client devices
            in Greengrass components. For more information, see <a href="https://docs.aws.amazon.com/greengrass/v2/developerguide/interact-with-local-iot-devices.html">Interact
            with local IoT devices</a> in the <i>IoT Greengrass V2 Developer Guide</i>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the BatchAssociateClientDeviceWithCoreDevice service method.</param>
            
            <returns>The response from the BatchAssociateClientDeviceWithCoreDevice service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/BatchAssociateClientDeviceWithCoreDevice">REST API Reference for BatchAssociateClientDeviceWithCoreDevice Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.IAmazonGreengrassV2.BatchAssociateClientDeviceWithCoreDeviceAsync(Amazon.GreengrassV2.Model.BatchAssociateClientDeviceWithCoreDeviceRequest,System.Threading.CancellationToken)">
            <summary>
            Associate a list of client devices with a core device. Use this API operation to specify
            which client devices can discover a core device through cloud discovery. With cloud
            discovery, client devices connect to IoT Greengrass to retrieve associated core devices'
            connectivity information and certificates. For more information, see <a href="https://docs.aws.amazon.com/greengrass/v2/developerguide/configure-cloud-discovery.html">Configure
            cloud discovery</a> in the <i>IoT Greengrass V2 Developer Guide</i>.
            
             <note> 
            <para>
            Client devices are local IoT devices that connect to and communicate with an IoT Greengrass
            core device over MQTT. You can connect client devices to a core device to sync MQTT
            messages and data to Amazon Web Services IoT Core and interact with client devices
            in Greengrass components. For more information, see <a href="https://docs.aws.amazon.com/greengrass/v2/developerguide/interact-with-local-iot-devices.html">Interact
            with local IoT devices</a> in the <i>IoT Greengrass V2 Developer Guide</i>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the BatchAssociateClientDeviceWithCoreDevice service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the BatchAssociateClientDeviceWithCoreDevice service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/BatchAssociateClientDeviceWithCoreDevice">REST API Reference for BatchAssociateClientDeviceWithCoreDevice Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.IAmazonGreengrassV2.BatchDisassociateClientDeviceFromCoreDevice(Amazon.GreengrassV2.Model.BatchDisassociateClientDeviceFromCoreDeviceRequest)">
            <summary>
            Disassociate a list of client devices from a core device. After you disassociate a
            client device from a core device, the client device won't be able to use cloud discovery
            to retrieve the core device's connectivity information and certificates.
            </summary>
            <param name="request">Container for the necessary parameters to execute the BatchDisassociateClientDeviceFromCoreDevice service method.</param>
            
            <returns>The response from the BatchDisassociateClientDeviceFromCoreDevice service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/BatchDisassociateClientDeviceFromCoreDevice">REST API Reference for BatchDisassociateClientDeviceFromCoreDevice Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.IAmazonGreengrassV2.BatchDisassociateClientDeviceFromCoreDeviceAsync(Amazon.GreengrassV2.Model.BatchDisassociateClientDeviceFromCoreDeviceRequest,System.Threading.CancellationToken)">
            <summary>
            Disassociate a list of client devices from a core device. After you disassociate a
            client device from a core device, the client device won't be able to use cloud discovery
            to retrieve the core device's connectivity information and certificates.
            </summary>
            <param name="request">Container for the necessary parameters to execute the BatchDisassociateClientDeviceFromCoreDevice service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the BatchDisassociateClientDeviceFromCoreDevice service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/BatchDisassociateClientDeviceFromCoreDevice">REST API Reference for BatchDisassociateClientDeviceFromCoreDevice Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.IAmazonGreengrassV2.CancelDeployment(Amazon.GreengrassV2.Model.CancelDeploymentRequest)">
            <summary>
            Cancels a deployment. This operation cancels the deployment for devices that haven't
            yet received it. If a device already received the deployment, this operation doesn't
            change anything for that device.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CancelDeployment service method.</param>
            
            <returns>The response from the CancelDeployment service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ConflictException">
            Your request has conflicting operations. This can occur if you're trying to perform
            more than one operation on the same resource at the same time.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/CancelDeployment">REST API Reference for CancelDeployment Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.IAmazonGreengrassV2.CancelDeploymentAsync(Amazon.GreengrassV2.Model.CancelDeploymentRequest,System.Threading.CancellationToken)">
            <summary>
            Cancels a deployment. This operation cancels the deployment for devices that haven't
            yet received it. If a device already received the deployment, this operation doesn't
            change anything for that device.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CancelDeployment service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CancelDeployment service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ConflictException">
            Your request has conflicting operations. This can occur if you're trying to perform
            more than one operation on the same resource at the same time.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/CancelDeployment">REST API Reference for CancelDeployment Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.IAmazonGreengrassV2.CreateComponentVersion(Amazon.GreengrassV2.Model.CreateComponentVersionRequest)">
            <summary>
            Creates a component. Components are software that run on Greengrass core devices.
            After you develop and test a component on your core device, you can use this operation
            to upload your component to IoT Greengrass. Then, you can deploy the component to
            other core devices.
            
             
            <para>
            You can use this operation to do the following:
            </para>
             <ul> <li> 
            <para>
             <b>Create components from recipes</b> 
            </para>
             
            <para>
            Create a component from a recipe, which is a file that defines the component's metadata,
            parameters, dependencies, lifecycle, artifacts, and platform capability. For more
            information, see <a href="https://docs.aws.amazon.com/greengrass/v2/developerguide/component-recipe-reference.html">IoT
            Greengrass component recipe reference</a> in the <i>IoT Greengrass V2 Developer Guide</i>.
            </para>
             
            <para>
            To create a component from a recipe, specify <code>inlineRecipe</code> when you call
            this operation.
            </para>
             </li> <li> 
            <para>
             <b>Create components from Lambda functions</b> 
            </para>
             
            <para>
            Create a component from an Lambda function that runs on IoT Greengrass. This creates
            a recipe and artifacts from the Lambda function's deployment package. You can use
            this operation to migrate Lambda functions from IoT Greengrass V1 to IoT Greengrass
            V2.
            </para>
             
            <para>
            This function only accepts Lambda functions that use the following runtimes:
            </para>
             <ul> <li> 
            <para>
            Python 2.7 – <code>python2.7</code> 
            </para>
             </li> <li> 
            <para>
            Python 3.7 – <code>python3.7</code> 
            </para>
             </li> <li> 
            <para>
            Python 3.8 – <code>python3.8</code> 
            </para>
             </li> <li> 
            <para>
            Java 8 – <code>java8</code> 
            </para>
             </li> <li> 
            <para>
            Node.js 10 – <code>nodejs10.x</code> 
            </para>
             </li> <li> 
            <para>
            Node.js 12 – <code>nodejs12.x</code> 
            </para>
             </li> </ul> 
            <para>
            To create a component from a Lambda function, specify <code>lambdaFunction</code>
            when you call this operation.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateComponentVersion service method.</param>
            
            <returns>The response from the CreateComponentVersion service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ConflictException">
            Your request has conflicting operations. This can occur if you're trying to perform
            more than one operation on the same resource at the same time.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.RequestAlreadyInProgressException">
            The request is already in progress. This exception occurs when you use a client token
            for multiple requests while IoT Greengrass is still processing an earlier request
            that uses the same client token.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ServiceQuotaExceededException">
            Your request exceeds a service quota. For example, you might have the maximum number
            of components that you can create.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/CreateComponentVersion">REST API Reference for CreateComponentVersion Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.IAmazonGreengrassV2.CreateComponentVersionAsync(Amazon.GreengrassV2.Model.CreateComponentVersionRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a component. Components are software that run on Greengrass core devices.
            After you develop and test a component on your core device, you can use this operation
            to upload your component to IoT Greengrass. Then, you can deploy the component to
            other core devices.
            
             
            <para>
            You can use this operation to do the following:
            </para>
             <ul> <li> 
            <para>
             <b>Create components from recipes</b> 
            </para>
             
            <para>
            Create a component from a recipe, which is a file that defines the component's metadata,
            parameters, dependencies, lifecycle, artifacts, and platform capability. For more
            information, see <a href="https://docs.aws.amazon.com/greengrass/v2/developerguide/component-recipe-reference.html">IoT
            Greengrass component recipe reference</a> in the <i>IoT Greengrass V2 Developer Guide</i>.
            </para>
             
            <para>
            To create a component from a recipe, specify <code>inlineRecipe</code> when you call
            this operation.
            </para>
             </li> <li> 
            <para>
             <b>Create components from Lambda functions</b> 
            </para>
             
            <para>
            Create a component from an Lambda function that runs on IoT Greengrass. This creates
            a recipe and artifacts from the Lambda function's deployment package. You can use
            this operation to migrate Lambda functions from IoT Greengrass V1 to IoT Greengrass
            V2.
            </para>
             
            <para>
            This function only accepts Lambda functions that use the following runtimes:
            </para>
             <ul> <li> 
            <para>
            Python 2.7 – <code>python2.7</code> 
            </para>
             </li> <li> 
            <para>
            Python 3.7 – <code>python3.7</code> 
            </para>
             </li> <li> 
            <para>
            Python 3.8 – <code>python3.8</code> 
            </para>
             </li> <li> 
            <para>
            Java 8 – <code>java8</code> 
            </para>
             </li> <li> 
            <para>
            Node.js 10 – <code>nodejs10.x</code> 
            </para>
             </li> <li> 
            <para>
            Node.js 12 – <code>nodejs12.x</code> 
            </para>
             </li> </ul> 
            <para>
            To create a component from a Lambda function, specify <code>lambdaFunction</code>
            when you call this operation.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateComponentVersion service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateComponentVersion service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ConflictException">
            Your request has conflicting operations. This can occur if you're trying to perform
            more than one operation on the same resource at the same time.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.RequestAlreadyInProgressException">
            The request is already in progress. This exception occurs when you use a client token
            for multiple requests while IoT Greengrass is still processing an earlier request
            that uses the same client token.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ServiceQuotaExceededException">
            Your request exceeds a service quota. For example, you might have the maximum number
            of components that you can create.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/CreateComponentVersion">REST API Reference for CreateComponentVersion Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.IAmazonGreengrassV2.CreateDeployment(Amazon.GreengrassV2.Model.CreateDeploymentRequest)">
            <summary>
            Creates a continuous deployment for a target, which is a Greengrass core device or
            group of core devices. When you add a new core device to a group of core devices that
            has a deployment, IoT Greengrass deploys that group's deployment to the new device.
            
             
            <para>
            You can define one deployment for each target. When you create a new deployment for
            a target that has an existing deployment, you replace the previous deployment. IoT
            Greengrass applies the new deployment to the target devices.
            </para>
             
            <para>
            Every deployment has a revision number that indicates how many deployment revisions
            you define for a target. Use this operation to create a new revision of an existing
            deployment. This operation returns the revision number of the new deployment when
            you create it.
            </para>
             
            <para>
            For more information, see the <a href="https://docs.aws.amazon.com/greengrass/v2/developerguide/create-deployments.html">Create
            deployments</a> in the <i>IoT Greengrass V2 Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDeployment service method.</param>
            
            <returns>The response from the CreateDeployment service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.RequestAlreadyInProgressException">
            The request is already in progress. This exception occurs when you use a client token
            for multiple requests while IoT Greengrass is still processing an earlier request
            that uses the same client token.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/CreateDeployment">REST API Reference for CreateDeployment Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.IAmazonGreengrassV2.CreateDeploymentAsync(Amazon.GreengrassV2.Model.CreateDeploymentRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a continuous deployment for a target, which is a Greengrass core device or
            group of core devices. When you add a new core device to a group of core devices that
            has a deployment, IoT Greengrass deploys that group's deployment to the new device.
            
             
            <para>
            You can define one deployment for each target. When you create a new deployment for
            a target that has an existing deployment, you replace the previous deployment. IoT
            Greengrass applies the new deployment to the target devices.
            </para>
             
            <para>
            Every deployment has a revision number that indicates how many deployment revisions
            you define for a target. Use this operation to create a new revision of an existing
            deployment. This operation returns the revision number of the new deployment when
            you create it.
            </para>
             
            <para>
            For more information, see the <a href="https://docs.aws.amazon.com/greengrass/v2/developerguide/create-deployments.html">Create
            deployments</a> in the <i>IoT Greengrass V2 Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDeployment service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateDeployment service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.RequestAlreadyInProgressException">
            The request is already in progress. This exception occurs when you use a client token
            for multiple requests while IoT Greengrass is still processing an earlier request
            that uses the same client token.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/CreateDeployment">REST API Reference for CreateDeployment Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.IAmazonGreengrassV2.DeleteComponent(Amazon.GreengrassV2.Model.DeleteComponentRequest)">
            <summary>
            Deletes a version of a component from IoT Greengrass.
            
             <note> 
            <para>
            This operation deletes the component's recipe and artifacts. As a result, deployments
            that refer to this component version will fail. If you have deployments that use this
            component version, you can remove the component from the deployment or update the
            deployment to use a valid version.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteComponent service method.</param>
            
            <returns>The response from the DeleteComponent service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ConflictException">
            Your request has conflicting operations. This can occur if you're trying to perform
            more than one operation on the same resource at the same time.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/DeleteComponent">REST API Reference for DeleteComponent Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.IAmazonGreengrassV2.DeleteComponentAsync(Amazon.GreengrassV2.Model.DeleteComponentRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a version of a component from IoT Greengrass.
            
             <note> 
            <para>
            This operation deletes the component's recipe and artifacts. As a result, deployments
            that refer to this component version will fail. If you have deployments that use this
            component version, you can remove the component from the deployment or update the
            deployment to use a valid version.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteComponent service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteComponent service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ConflictException">
            Your request has conflicting operations. This can occur if you're trying to perform
            more than one operation on the same resource at the same time.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/DeleteComponent">REST API Reference for DeleteComponent Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.IAmazonGreengrassV2.DeleteCoreDevice(Amazon.GreengrassV2.Model.DeleteCoreDeviceRequest)">
            <summary>
            Deletes a Greengrass core device, which is an IoT thing. This operation removes the
            core device from the list of core devices. This operation doesn't delete the IoT thing.
            For more information about how to delete the IoT thing, see <a href="https://docs.aws.amazon.com/iot/latest/apireference/API_DeleteThing.html">DeleteThing</a>
            in the <i>IoT API Reference</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteCoreDevice service method.</param>
            
            <returns>The response from the DeleteCoreDevice service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ConflictException">
            Your request has conflicting operations. This can occur if you're trying to perform
            more than one operation on the same resource at the same time.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/DeleteCoreDevice">REST API Reference for DeleteCoreDevice Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.IAmazonGreengrassV2.DeleteCoreDeviceAsync(Amazon.GreengrassV2.Model.DeleteCoreDeviceRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a Greengrass core device, which is an IoT thing. This operation removes the
            core device from the list of core devices. This operation doesn't delete the IoT thing.
            For more information about how to delete the IoT thing, see <a href="https://docs.aws.amazon.com/iot/latest/apireference/API_DeleteThing.html">DeleteThing</a>
            in the <i>IoT API Reference</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteCoreDevice service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteCoreDevice service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ConflictException">
            Your request has conflicting operations. This can occur if you're trying to perform
            more than one operation on the same resource at the same time.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/DeleteCoreDevice">REST API Reference for DeleteCoreDevice Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.IAmazonGreengrassV2.DescribeComponent(Amazon.GreengrassV2.Model.DescribeComponentRequest)">
            <summary>
            Retrieves metadata for a version of a component.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeComponent service method.</param>
            
            <returns>The response from the DescribeComponent service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/DescribeComponent">REST API Reference for DescribeComponent Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.IAmazonGreengrassV2.DescribeComponentAsync(Amazon.GreengrassV2.Model.DescribeComponentRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves metadata for a version of a component.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeComponent service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeComponent service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/DescribeComponent">REST API Reference for DescribeComponent Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.IAmazonGreengrassV2.GetComponent(Amazon.GreengrassV2.Model.GetComponentRequest)">
            <summary>
            Gets the recipe for a version of a component. Core devices can call this operation
            to identify the artifacts and requirements to install a component.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetComponent service method.</param>
            
            <returns>The response from the GetComponent service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/GetComponent">REST API Reference for GetComponent Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.IAmazonGreengrassV2.GetComponentAsync(Amazon.GreengrassV2.Model.GetComponentRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the recipe for a version of a component. Core devices can call this operation
            to identify the artifacts and requirements to install a component.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetComponent service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetComponent service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/GetComponent">REST API Reference for GetComponent Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.IAmazonGreengrassV2.GetComponentVersionArtifact(Amazon.GreengrassV2.Model.GetComponentVersionArtifactRequest)">
            <summary>
            Gets the pre-signed URL to download a public component artifact. Core devices call
            this operation to identify the URL that they can use to download an artifact to install.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetComponentVersionArtifact service method.</param>
            
            <returns>The response from the GetComponentVersionArtifact service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/GetComponentVersionArtifact">REST API Reference for GetComponentVersionArtifact Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.IAmazonGreengrassV2.GetComponentVersionArtifactAsync(Amazon.GreengrassV2.Model.GetComponentVersionArtifactRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the pre-signed URL to download a public component artifact. Core devices call
            this operation to identify the URL that they can use to download an artifact to install.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetComponentVersionArtifact service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetComponentVersionArtifact service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/GetComponentVersionArtifact">REST API Reference for GetComponentVersionArtifact Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.IAmazonGreengrassV2.GetCoreDevice(Amazon.GreengrassV2.Model.GetCoreDeviceRequest)">
            <summary>
            Retrieves metadata for a Greengrass core device.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetCoreDevice service method.</param>
            
            <returns>The response from the GetCoreDevice service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/GetCoreDevice">REST API Reference for GetCoreDevice Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.IAmazonGreengrassV2.GetCoreDeviceAsync(Amazon.GreengrassV2.Model.GetCoreDeviceRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves metadata for a Greengrass core device.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetCoreDevice service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetCoreDevice service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/GetCoreDevice">REST API Reference for GetCoreDevice Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.IAmazonGreengrassV2.GetDeployment(Amazon.GreengrassV2.Model.GetDeploymentRequest)">
            <summary>
            Gets a deployment. Deployments define the components that run on Greengrass core devices.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetDeployment service method.</param>
            
            <returns>The response from the GetDeployment service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/GetDeployment">REST API Reference for GetDeployment Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.IAmazonGreengrassV2.GetDeploymentAsync(Amazon.GreengrassV2.Model.GetDeploymentRequest,System.Threading.CancellationToken)">
            <summary>
            Gets a deployment. Deployments define the components that run on Greengrass core devices.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetDeployment service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetDeployment service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/GetDeployment">REST API Reference for GetDeployment Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.IAmazonGreengrassV2.ListClientDevicesAssociatedWithCoreDevice(Amazon.GreengrassV2.Model.ListClientDevicesAssociatedWithCoreDeviceRequest)">
            <summary>
            Retrieves a paginated list of client devices that are associated with a core device.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListClientDevicesAssociatedWithCoreDevice service method.</param>
            
            <returns>The response from the ListClientDevicesAssociatedWithCoreDevice service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/ListClientDevicesAssociatedWithCoreDevice">REST API Reference for ListClientDevicesAssociatedWithCoreDevice Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.IAmazonGreengrassV2.ListClientDevicesAssociatedWithCoreDeviceAsync(Amazon.GreengrassV2.Model.ListClientDevicesAssociatedWithCoreDeviceRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves a paginated list of client devices that are associated with a core device.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListClientDevicesAssociatedWithCoreDevice service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListClientDevicesAssociatedWithCoreDevice service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/ListClientDevicesAssociatedWithCoreDevice">REST API Reference for ListClientDevicesAssociatedWithCoreDevice Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.IAmazonGreengrassV2.ListComponents(Amazon.GreengrassV2.Model.ListComponentsRequest)">
            <summary>
            Retrieves a paginated list of component summaries. This list includes components that
            you have permission to view.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListComponents service method.</param>
            
            <returns>The response from the ListComponents service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/ListComponents">REST API Reference for ListComponents Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.IAmazonGreengrassV2.ListComponentsAsync(Amazon.GreengrassV2.Model.ListComponentsRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves a paginated list of component summaries. This list includes components that
            you have permission to view.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListComponents service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListComponents service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/ListComponents">REST API Reference for ListComponents Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.IAmazonGreengrassV2.ListComponentVersions(Amazon.GreengrassV2.Model.ListComponentVersionsRequest)">
            <summary>
            Retrieves a paginated list of all versions for a component. Greater versions are listed
            first.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListComponentVersions service method.</param>
            
            <returns>The response from the ListComponentVersions service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/ListComponentVersions">REST API Reference for ListComponentVersions Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.IAmazonGreengrassV2.ListComponentVersionsAsync(Amazon.GreengrassV2.Model.ListComponentVersionsRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves a paginated list of all versions for a component. Greater versions are listed
            first.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListComponentVersions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListComponentVersions service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/ListComponentVersions">REST API Reference for ListComponentVersions Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.IAmazonGreengrassV2.ListCoreDevices(Amazon.GreengrassV2.Model.ListCoreDevicesRequest)">
            <summary>
            Retrieves a paginated list of Greengrass core devices.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListCoreDevices service method.</param>
            
            <returns>The response from the ListCoreDevices service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/ListCoreDevices">REST API Reference for ListCoreDevices Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.IAmazonGreengrassV2.ListCoreDevicesAsync(Amazon.GreengrassV2.Model.ListCoreDevicesRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves a paginated list of Greengrass core devices.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListCoreDevices service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListCoreDevices service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/ListCoreDevices">REST API Reference for ListCoreDevices Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.IAmazonGreengrassV2.ListDeployments(Amazon.GreengrassV2.Model.ListDeploymentsRequest)">
            <summary>
            Retrieves a paginated list of deployments.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListDeployments service method.</param>
            
            <returns>The response from the ListDeployments service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/ListDeployments">REST API Reference for ListDeployments Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.IAmazonGreengrassV2.ListDeploymentsAsync(Amazon.GreengrassV2.Model.ListDeploymentsRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves a paginated list of deployments.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListDeployments service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListDeployments service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/ListDeployments">REST API Reference for ListDeployments Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.IAmazonGreengrassV2.ListEffectiveDeployments(Amazon.GreengrassV2.Model.ListEffectiveDeploymentsRequest)">
            <summary>
            Retrieves a paginated list of deployment jobs that IoT Greengrass sends to Greengrass
            core devices.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListEffectiveDeployments service method.</param>
            
            <returns>The response from the ListEffectiveDeployments service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/ListEffectiveDeployments">REST API Reference for ListEffectiveDeployments Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.IAmazonGreengrassV2.ListEffectiveDeploymentsAsync(Amazon.GreengrassV2.Model.ListEffectiveDeploymentsRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves a paginated list of deployment jobs that IoT Greengrass sends to Greengrass
            core devices.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListEffectiveDeployments service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListEffectiveDeployments service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/ListEffectiveDeployments">REST API Reference for ListEffectiveDeployments Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.IAmazonGreengrassV2.ListInstalledComponents(Amazon.GreengrassV2.Model.ListInstalledComponentsRequest)">
            <summary>
            Retrieves a paginated list of the components that a Greengrass core device runs.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListInstalledComponents service method.</param>
            
            <returns>The response from the ListInstalledComponents service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/ListInstalledComponents">REST API Reference for ListInstalledComponents Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.IAmazonGreengrassV2.ListInstalledComponentsAsync(Amazon.GreengrassV2.Model.ListInstalledComponentsRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves a paginated list of the components that a Greengrass core device runs.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListInstalledComponents service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListInstalledComponents service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/ListInstalledComponents">REST API Reference for ListInstalledComponents Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.IAmazonGreengrassV2.ListTagsForResource(Amazon.GreengrassV2.Model.ListTagsForResourceRequest)">
            <summary>
            Retrieves the list of tags for an IoT Greengrass resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            
            <returns>The response from the ListTagsForResource service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.IAmazonGreengrassV2.ListTagsForResourceAsync(Amazon.GreengrassV2.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the list of tags for an IoT Greengrass resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.IAmazonGreengrassV2.ResolveComponentCandidates(Amazon.GreengrassV2.Model.ResolveComponentCandidatesRequest)">
            <summary>
            Retrieves a list of components that meet the component, version, and platform requirements
            of a deployment. Greengrass core devices call this operation when they receive a deployment
            to identify the components to install.
            
             
            <para>
            This operation identifies components that meet all dependency requirements for a deployment.
            If the requirements conflict, then this operation returns an error and the deployment
            fails. For example, this occurs if component <code>A</code> requires version <code>&gt;2.0.0</code>
            and component <code>B</code> requires version <code>&lt;2.0.0</code> of a component
            dependency.
            </para>
             
            <para>
            When you specify the component candidates to resolve, IoT Greengrass compares each
            component's digest from the core device with the component's digest in the Amazon
            Web Services Cloud. If the digests don't match, then IoT Greengrass specifies to use
            the version from the Amazon Web Services Cloud.
            </para>
             <important> 
            <para>
            To use this operation, you must use the data plane API endpoint and authenticate with
            an IoT device certificate. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/greengrass.html">IoT
            Greengrass endpoints and quotas</a>.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ResolveComponentCandidates service method.</param>
            
            <returns>The response from the ResolveComponentCandidates service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ConflictException">
            Your request has conflicting operations. This can occur if you're trying to perform
            more than one operation on the same resource at the same time.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/ResolveComponentCandidates">REST API Reference for ResolveComponentCandidates Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.IAmazonGreengrassV2.ResolveComponentCandidatesAsync(Amazon.GreengrassV2.Model.ResolveComponentCandidatesRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of components that meet the component, version, and platform requirements
            of a deployment. Greengrass core devices call this operation when they receive a deployment
            to identify the components to install.
            
             
            <para>
            This operation identifies components that meet all dependency requirements for a deployment.
            If the requirements conflict, then this operation returns an error and the deployment
            fails. For example, this occurs if component <code>A</code> requires version <code>&gt;2.0.0</code>
            and component <code>B</code> requires version <code>&lt;2.0.0</code> of a component
            dependency.
            </para>
             
            <para>
            When you specify the component candidates to resolve, IoT Greengrass compares each
            component's digest from the core device with the component's digest in the Amazon
            Web Services Cloud. If the digests don't match, then IoT Greengrass specifies to use
            the version from the Amazon Web Services Cloud.
            </para>
             <important> 
            <para>
            To use this operation, you must use the data plane API endpoint and authenticate with
            an IoT device certificate. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/greengrass.html">IoT
            Greengrass endpoints and quotas</a>.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ResolveComponentCandidates service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ResolveComponentCandidates service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.AccessDeniedException">
            You don't have permission to perform the action.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ConflictException">
            Your request has conflicting operations. This can occur if you're trying to perform
            more than one operation on the same resource at the same time.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ThrottlingException">
            Your request exceeded a request rate quota. For example, you might have exceeded the
            amount of times that you can retrieve device or deployment status per second.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/ResolveComponentCandidates">REST API Reference for ResolveComponentCandidates Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.IAmazonGreengrassV2.TagResource(Amazon.GreengrassV2.Model.TagResourceRequest)">
            <summary>
            Adds tags to an IoT Greengrass resource. If a tag already exists for the resource,
            this operation updates the tag's value.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            
            <returns>The response from the TagResource service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.IAmazonGreengrassV2.TagResourceAsync(Amazon.GreengrassV2.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Adds tags to an IoT Greengrass resource. If a tag already exists for the resource,
            this operation updates the tag's value.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.IAmazonGreengrassV2.UntagResource(Amazon.GreengrassV2.Model.UntagResourceRequest)">
            <summary>
            Removes a tag from an IoT Greengrass resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            
            <returns>The response from the UntagResource service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.GreengrassV2.IAmazonGreengrassV2.UntagResourceAsync(Amazon.GreengrassV2.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Removes a tag from an IoT Greengrass resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by GreengrassV2.</returns>
            <exception cref="T:Amazon.GreengrassV2.Model.InternalServerException">
            IoT Greengrass can't process your request right now. Try again later.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ResourceNotFoundException">
            The requested resource can't be found.
            </exception>
            <exception cref="T:Amazon.GreengrassV2.Model.ValidationException">
            The request isn't valid. This can occur if your request contains malformed JSON or
            unsupported characters.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/greengrassv2-2020-11-30/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
    </members>
</doc>
