<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.Honeycode</name>
    </assembly>
    <members>
        <member name="T:Amazon.Honeycode.AmazonHoneycodeConfig">
            <summary>
            Configuration for accessing Amazon Honeycode service
            </summary>
        </member>
        <member name="M:Amazon.Honeycode.AmazonHoneycodeConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.AmazonHoneycodeConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.AmazonHoneycodeConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.AmazonHoneycodeConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.Honeycode.AmazonHoneycodeException">
            <summary>
             Common exception for the Honeycode service.
             </summary>
        </member>
        <member name="M:Amazon.Honeycode.AmazonHoneycodeException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonHoneycodeException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.Honeycode.AmazonHoneycodeException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonHoneycodeException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Honeycode.AmazonHoneycodeException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonHoneycodeException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Honeycode.AmazonHoneycodeException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonHoneycodeException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Honeycode.AmazonHoneycodeException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonHoneycodeException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Honeycode.AmazonHoneycodeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the AmazonHoneycodeException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.Honeycode.Internal.AmazonHoneycodeMetadata">
            <summary>
            Service metadata for  Amazon Honeycode service
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Internal.AmazonHoneycodeMetadata.ServiceId">
            <summary>
            Gets the value of the Service Id.
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Internal.AmazonHoneycodeMetadata.OperationNameMapping">
            <summary>
            Gets the dictionary that gives mapping of renamed operations
            </summary>
        </member>
        <member name="T:Amazon.Honeycode.Model.AccessDeniedException">
            <summary>
            You do not have sufficient access to perform this action. Check that the workbook
            is owned by you and your IAM policy allows access to the resource in the request.
            </summary>
        </member>
        <member name="M:Amazon.Honeycode.Model.AccessDeniedException.#ctor(System.String)">
            <summary>
            Constructs a new AccessDeniedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Honeycode.Model.AccessDeniedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Honeycode.Model.AccessDeniedException.#ctor(System.Exception)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Honeycode.Model.AccessDeniedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Honeycode.Model.AccessDeniedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Honeycode.Model.AccessDeniedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the AccessDeniedException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Honeycode.Model.AccessDeniedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Honeycode.Model.AutomationExecutionException">
            <summary>
            The automation execution did not end successfully.
            </summary>
        </member>
        <member name="M:Amazon.Honeycode.Model.AutomationExecutionException.#ctor(System.String)">
            <summary>
            Constructs a new AutomationExecutionException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Honeycode.Model.AutomationExecutionException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AutomationExecutionException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Honeycode.Model.AutomationExecutionException.#ctor(System.Exception)">
            <summary>
            Construct instance of AutomationExecutionException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Honeycode.Model.AutomationExecutionException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AutomationExecutionException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Honeycode.Model.AutomationExecutionException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AutomationExecutionException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Honeycode.Model.AutomationExecutionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the AutomationExecutionException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Honeycode.Model.AutomationExecutionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Honeycode.Model.AutomationExecutionTimeoutException">
            <summary>
            The automation execution timed out.
            </summary>
        </member>
        <member name="M:Amazon.Honeycode.Model.AutomationExecutionTimeoutException.#ctor(System.String)">
            <summary>
            Constructs a new AutomationExecutionTimeoutException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Honeycode.Model.AutomationExecutionTimeoutException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AutomationExecutionTimeoutException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Honeycode.Model.AutomationExecutionTimeoutException.#ctor(System.Exception)">
            <summary>
            Construct instance of AutomationExecutionTimeoutException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Honeycode.Model.AutomationExecutionTimeoutException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AutomationExecutionTimeoutException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Honeycode.Model.AutomationExecutionTimeoutException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AutomationExecutionTimeoutException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Honeycode.Model.AutomationExecutionTimeoutException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the AutomationExecutionTimeoutException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Honeycode.Model.AutomationExecutionTimeoutException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Honeycode.Model.BatchCreateTableRowsRequest">
            <summary>
            Container for the parameters to the BatchCreateTableRows operation.
            The BatchCreateTableRows API allows you to create one or more rows at the end of
            a table in a workbook. The API allows you to specify the values to set in some or
            all of the columns in the new rows. 
            
             
            <para>
             If a column is not explicitly set in a specific row, then the column level formula
            specified in the table will be applied to the new row. If there is no column level
            formula but the last row of the table has a formula, then that formula will be copied
            down to the new row. If there is no column level formula and no formula in the last
            row of the table, then that column will be left blank for the new rows. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.BatchCreateTableRowsRequest.ClientRequestToken">
            <summary>
            Gets and sets the property ClientRequestToken. 
            <para>
             The request token for performing the batch create operation. Request tokens help
            to identify duplicate requests. If a call times out or fails due to a transient error
            like a failed network connection, you can retry the call with the same request token.
            The service ensures that if the first call using that request token is successfully
            performed, the second call will not perform the operation again. 
            </para>
             
            <para>
             Note that request tokens are valid only for a few minutes. You cannot use request
            tokens to dedupe requests spanning hours or days. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.BatchCreateTableRowsRequest.RowsToCreate">
            <summary>
            Gets and sets the property RowsToCreate. 
            <para>
             The list of rows to create at the end of the table. Each item in this list needs
            to have a batch item id to uniquely identify the element in the request and the cells
            to create for that row. You need to specify at least one item in this list. 
            </para>
             
            <para>
             Note that if one of the column ids in any of the rows in the request does not exist
            in the table, then the request fails and no updates are made to the table. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.BatchCreateTableRowsRequest.TableId">
            <summary>
            Gets and sets the property TableId. 
            <para>
            The ID of the table where the new rows are being added.
            </para>
             
            <para>
             If a table with the specified ID could not be found, this API throws ResourceNotFoundException.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.BatchCreateTableRowsRequest.WorkbookId">
            <summary>
            Gets and sets the property WorkbookId. 
            <para>
            The ID of the workbook where the new rows are being added.
            </para>
             
            <para>
             If a workbook with the specified ID could not be found, this API throws ResourceNotFoundException.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Honeycode.Model.BatchCreateTableRowsResponse">
            <summary>
            This is the response object from the BatchCreateTableRows operation.
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.BatchCreateTableRowsResponse.CreatedRows">
            <summary>
            Gets and sets the property CreatedRows. 
            <para>
            The map of batch item id to the row id that was created for that item.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.BatchCreateTableRowsResponse.FailedBatchItems">
            <summary>
            Gets and sets the property FailedBatchItems. 
            <para>
             The list of batch items in the request that could not be added to the table. Each
            element in this list contains one item from the request that could not be added to
            the table along with the reason why that item could not be added. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.BatchCreateTableRowsResponse.WorkbookCursor">
            <summary>
            Gets and sets the property WorkbookCursor. 
            <para>
            The updated workbook cursor after adding the new rows at the end of the table.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Honeycode.Model.BatchDeleteTableRowsRequest">
            <summary>
            Container for the parameters to the BatchDeleteTableRows operation.
            The BatchDeleteTableRows API allows you to delete one or more rows from a table in
            a workbook. You need to specify the ids of the rows that you want to delete from the
            table.
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.BatchDeleteTableRowsRequest.ClientRequestToken">
            <summary>
            Gets and sets the property ClientRequestToken. 
            <para>
             The request token for performing the delete action. Request tokens help to identify
            duplicate requests. If a call times out or fails due to a transient error like a failed
            network connection, you can retry the call with the same request token. The service
            ensures that if the first call using that request token is successfully performed,
            the second call will not perform the action again. 
            </para>
             
            <para>
             Note that request tokens are valid only for a few minutes. You cannot use request
            tokens to dedupe requests spanning hours or days. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.BatchDeleteTableRowsRequest.RowIds">
            <summary>
            Gets and sets the property RowIds. 
            <para>
             The list of row ids to delete from the table. You need to specify at least one row
            id in this list. 
            </para>
             
            <para>
             Note that if one of the row ids provided in the request does not exist in the table,
            then the request fails and no rows are deleted from the table. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.BatchDeleteTableRowsRequest.TableId">
            <summary>
            Gets and sets the property TableId. 
            <para>
            The ID of the table where the rows are being deleted.
            </para>
             
            <para>
             If a table with the specified id could not be found, this API throws ResourceNotFoundException.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.BatchDeleteTableRowsRequest.WorkbookId">
            <summary>
            Gets and sets the property WorkbookId. 
            <para>
            The ID of the workbook where the rows are being deleted.
            </para>
             
            <para>
             If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Honeycode.Model.BatchDeleteTableRowsResponse">
            <summary>
            This is the response object from the BatchDeleteTableRows operation.
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.BatchDeleteTableRowsResponse.FailedBatchItems">
            <summary>
            Gets and sets the property FailedBatchItems. 
            <para>
             The list of row ids in the request that could not be deleted from the table. Each
            element in this list contains one row id from the request that could not be deleted
            along with the reason why that item could not be deleted. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.BatchDeleteTableRowsResponse.WorkbookCursor">
            <summary>
            Gets and sets the property WorkbookCursor. 
            <para>
            The updated workbook cursor after deleting the rows from the table.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Honeycode.Model.BatchUpdateTableRowsRequest">
            <summary>
            Container for the parameters to the BatchUpdateTableRows operation.
            The BatchUpdateTableRows API allows you to update one or more rows in a table in
            a workbook. 
            
             
            <para>
             You can specify the values to set in some or all of the columns in the table for
            the specified rows. If a column is not explicitly specified in a particular row, then
            that column will not be updated for that row. To clear out the data in a specific
            cell, you need to set the value as an empty string (""). 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.BatchUpdateTableRowsRequest.ClientRequestToken">
            <summary>
            Gets and sets the property ClientRequestToken. 
            <para>
             The request token for performing the update action. Request tokens help to identify
            duplicate requests. If a call times out or fails due to a transient error like a failed
            network connection, you can retry the call with the same request token. The service
            ensures that if the first call using that request token is successfully performed,
            the second call will not perform the action again. 
            </para>
             
            <para>
             Note that request tokens are valid only for a few minutes. You cannot use request
            tokens to dedupe requests spanning hours or days. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.BatchUpdateTableRowsRequest.RowsToUpdate">
            <summary>
            Gets and sets the property RowsToUpdate. 
            <para>
             The list of rows to update in the table. Each item in this list needs to contain
            the row id to update along with the map of column id to cell values for each column
            in that row that needs to be updated. You need to specify at least one row in this
            list, and for each row, you need to specify at least one column to update. 
            </para>
             
            <para>
             Note that if one of the row or column ids in the request does not exist in the table,
            then the request fails and no updates are made to the table. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.BatchUpdateTableRowsRequest.TableId">
            <summary>
            Gets and sets the property TableId. 
            <para>
            The ID of the table where the rows are being updated.
            </para>
             
            <para>
             If a table with the specified id could not be found, this API throws ResourceNotFoundException.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.BatchUpdateTableRowsRequest.WorkbookId">
            <summary>
            Gets and sets the property WorkbookId. 
            <para>
            The ID of the workbook where the rows are being updated.
            </para>
             
            <para>
             If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Honeycode.Model.BatchUpdateTableRowsResponse">
            <summary>
            This is the response object from the BatchUpdateTableRows operation.
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.BatchUpdateTableRowsResponse.FailedBatchItems">
            <summary>
            Gets and sets the property FailedBatchItems. 
            <para>
             The list of batch items in the request that could not be updated in the table. Each
            element in this list contains one item from the request that could not be updated
            in the table along with the reason why that item could not be updated. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.BatchUpdateTableRowsResponse.WorkbookCursor">
            <summary>
            Gets and sets the property WorkbookCursor. 
            <para>
            The updated workbook cursor after adding the new rows at the end of the table.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Honeycode.Model.BatchUpsertTableRowsRequest">
            <summary>
            Container for the parameters to the BatchUpsertTableRows operation.
            The BatchUpsertTableRows API allows you to upsert one or more rows in a table. The
            upsert operation takes a filter expression as input and evaluates it to find matching
            rows on the destination table. If matching rows are found, it will update the cells
            in the matching rows to new values specified in the request. If no matching rows are
            found, a new row is added at the end of the table and the cells in that row are set
            to the new values specified in the request. 
            
             
            <para>
             You can specify the values to set in some or all of the columns in the table for
            the matching or newly appended rows. If a column is not explicitly specified for a
            particular row, then that column will not be updated for that row. To clear out the
            data in a specific cell, you need to set the value as an empty string (""). 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.BatchUpsertTableRowsRequest.ClientRequestToken">
            <summary>
            Gets and sets the property ClientRequestToken. 
            <para>
             The request token for performing the update action. Request tokens help to identify
            duplicate requests. If a call times out or fails due to a transient error like a failed
            network connection, you can retry the call with the same request token. The service
            ensures that if the first call using that request token is successfully performed,
            the second call will not perform the action again. 
            </para>
             
            <para>
             Note that request tokens are valid only for a few minutes. You cannot use request
            tokens to dedupe requests spanning hours or days. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.BatchUpsertTableRowsRequest.RowsToUpsert">
            <summary>
            Gets and sets the property RowsToUpsert. 
            <para>
             The list of rows to upsert in the table. Each item in this list needs to have a batch
            item id to uniquely identify the element in the request, a filter expression to find
            the rows to update for that element and the cell values to set for each column in
            the upserted rows. You need to specify at least one item in this list. 
            </para>
             
            <para>
             Note that if one of the filter formulas in the request fails to evaluate because
            of an error or one of the column ids in any of the rows does not exist in the table,
            then the request fails and no updates are made to the table. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.BatchUpsertTableRowsRequest.TableId">
            <summary>
            Gets and sets the property TableId. 
            <para>
            The ID of the table where the rows are being upserted.
            </para>
             
            <para>
             If a table with the specified id could not be found, this API throws ResourceNotFoundException.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.BatchUpsertTableRowsRequest.WorkbookId">
            <summary>
            Gets and sets the property WorkbookId. 
            <para>
            The ID of the workbook where the rows are being upserted.
            </para>
             
            <para>
             If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Honeycode.Model.BatchUpsertTableRowsResponse">
            <summary>
            This is the response object from the BatchUpsertTableRows operation.
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.BatchUpsertTableRowsResponse.FailedBatchItems">
            <summary>
            Gets and sets the property FailedBatchItems. 
            <para>
             The list of batch items in the request that could not be updated or appended in the
            table. Each element in this list contains one item from the request that could not
            be updated in the table along with the reason why that item could not be updated or
            appended. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.BatchUpsertTableRowsResponse.Rows">
            <summary>
            Gets and sets the property Rows. 
            <para>
             A map with the batch item id as the key and the result of the upsert operation as
            the value. The result of the upsert operation specifies whether existing rows were
            updated or a new row was appended, along with the list of row ids that were affected.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.BatchUpsertTableRowsResponse.WorkbookCursor">
            <summary>
            Gets and sets the property WorkbookCursor. 
            <para>
            The updated workbook cursor after updating or appending rows in the table.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Honeycode.Model.Cell">
            <summary>
            An object that represents a single cell in a table.
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.Cell.Format">
            <summary>
            Gets and sets the property Format. 
            <para>
            The format of the cell. If this field is empty, then the format is either not specified
            in the workbook or the format is set to AUTO.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.Cell.FormattedValue">
            <summary>
            Gets and sets the property FormattedValue. 
            <para>
             The formatted value of the cell. This is the value that you see displayed in the
            cell in the UI. 
            </para>
             
            <para>
             Note that the formatted value of a cell is always represented as a string irrespective
            of the data that is stored in the cell. For example, if a cell contains a date, the
            formatted value of the cell is the string representation of the formatted date being
            shown in the cell in the UI. See details in the rawValue field below for how cells
            of different formats will have different raw and formatted values. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.Cell.Formula">
            <summary>
            Gets and sets the property Formula. 
            <para>
             The formula contained in the cell. This field is empty if a cell does not have a
            formula. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.Cell.RawValue">
            <summary>
            Gets and sets the property RawValue. 
            <para>
             The raw value of the data contained in the cell. The raw value depends on the format
            of the data in the cell. However the attribute in the API return value is always a
            string containing the raw value. 
            </para>
             
            <para>
             Cells with format DATE, DATE_TIME or TIME have the raw value as a floating point
            number where the whole number represents the number of days since 1/1/1900 and the
            fractional part represents the fraction of the day since midnight. For example, a
            cell with date 11/3/2020 has the raw value "44138". A cell with the time 9:00 AM has
            the raw value "0.375" and a cell with date/time value of 11/3/2020 9:00 AM has the
            raw value "44138.375". Notice that even though the raw value is a number in all three
            cases, it is still represented as a string. 
            </para>
             
            <para>
             Cells with format NUMBER, CURRENCY, PERCENTAGE and ACCOUNTING have the raw value
            of the data as the number representing the data being displayed. For example, the
            number 1.325 with two decimal places in the format will have it's raw value as "1.325"
            and formatted value as "1.33". A currency value for $10 will have the raw value as
            "10" and formatted value as "$10.00". A value representing 20% with two decimal places
            in the format will have its raw value as "0.2" and the formatted value as "20.00%".
            An accounting value of -$25 will have "-25" as the raw value and "$ (25.00)" as the
            formatted value. 
            </para>
             
            <para>
             Cells with format TEXT will have the raw text as the raw value. For example, a cell
            with text "John Smith" will have "John Smith" as both the raw value and the formatted
            value. 
            </para>
             
            <para>
             Cells with format CONTACT will have the name of the contact as a formatted value
            and the email address of the contact as the raw value. For example, a contact for
            John Smith will have "John Smith" as the formatted value and "john.smith@example.com"
            as the raw value. 
            </para>
             
            <para>
             Cells with format ROWLINK (aka picklist) will have the first column of the linked
            row as the formatted value and the row id of the linked row as the raw value. For
            example, a cell containing a picklist to a table that displays task status might have
            "Completed" as the formatted value and "row:dfcefaee-5b37-4355-8f28-40c3e4ff5dd4/ca432b2f-b8eb-431d-9fb5-cbe0342f9f03"
            as the raw value. 
            </para>
             
            <para>
             Cells with format AUTO or cells without any format that are auto-detected as one
            of the formats above will contain the raw and formatted values as mentioned above,
            based on the auto-detected formats. If there is no auto-detected format, the raw and
            formatted values will be the same as the data in the cell. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Honeycode.Model.CellInput">
            <summary>
            CellInput object contains the data needed to create or update cells in a table.
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.CellInput.Fact">
            <summary>
            Gets and sets the property Fact. 
            <para>
             Fact represents the data that is entered into a cell. This data can be free text
            or a formula. Formulas need to start with the equals (=) sign. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Honeycode.Model.ColumnMetadata">
            <summary>
            Metadata for column in the table.
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.ColumnMetadata.Format">
            <summary>
            Gets and sets the property Format. 
            <para>
            The format of the column.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.ColumnMetadata.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the column.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Honeycode.Model.CreateRowData">
            <summary>
            Data needed to create a single row in a table as part of the BatchCreateTableRows
            request.
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.CreateRowData.BatchItemId">
            <summary>
            Gets and sets the property BatchItemId. 
            <para>
             An external identifier that represents the single row that is being created as part
            of the BatchCreateTableRows request. This can be any string that you can use to identify
            the row in the request. The BatchCreateTableRows API puts the batch item id in the
            results to allow you to link data in the request to data in the results. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.CreateRowData.CellsToCreate">
            <summary>
            Gets and sets the property CellsToCreate. 
            <para>
             A map representing the cells to create in the new row. The key is the column id of
            the cell and the value is the CellInput object that represents the data to set in
            that cell. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Honeycode.Model.DataItem">
            <summary>
            The data in a particular data cell defined on the screen.
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.DataItem.FormattedValue">
            <summary>
            Gets and sets the property FormattedValue. 
            <para>
            The formatted value of the data. e.g. John Smith.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.DataItem.OverrideFormat">
            <summary>
            Gets and sets the property OverrideFormat. 
            <para>
             The overrideFormat is optional and is specified only if a particular row of data
            has a different format for the data than the default format defined on the screen
            or the table. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.DataItem.RawValue">
            <summary>
            Gets and sets the property RawValue. 
            <para>
            The raw value of the data. e.g. jsmith@example.com
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Honeycode.Model.DelimitedTextImportOptions">
            <summary>
            An object that contains the options relating to parsing delimited text as part of
            an import request.
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.DelimitedTextImportOptions.DataCharacterEncoding">
            <summary>
            Gets and sets the property DataCharacterEncoding. 
            <para>
            The encoding of the data in the input file.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.DelimitedTextImportOptions.Delimiter">
            <summary>
            Gets and sets the property Delimiter. 
            <para>
            The delimiter to use for separating columns in a single row of the input.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.DelimitedTextImportOptions.HasHeaderRow">
            <summary>
            Gets and sets the property HasHeaderRow. 
            <para>
            Indicates whether the input file has a header row at the top containing the column
            names.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.DelimitedTextImportOptions.IgnoreEmptyRows">
            <summary>
            Gets and sets the property IgnoreEmptyRows. 
            <para>
            A parameter to indicate whether empty rows should be ignored or be included in the
            import.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Honeycode.Model.DescribeTableDataImportJobRequest">
            <summary>
            Container for the parameters to the DescribeTableDataImportJob operation.
            The DescribeTableDataImportJob API allows you to retrieve the status and details
            of a table data import job.
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.DescribeTableDataImportJobRequest.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            The ID of the job that was returned by the StartTableDataImportJob request.
            </para>
             
            <para>
             If a job with the specified id could not be found, this API throws ResourceNotFoundException.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.DescribeTableDataImportJobRequest.TableId">
            <summary>
            Gets and sets the property TableId. 
            <para>
            The ID of the table into which data was imported.
            </para>
             
            <para>
             If a table with the specified id could not be found, this API throws ResourceNotFoundException.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.DescribeTableDataImportJobRequest.WorkbookId">
            <summary>
            Gets and sets the property WorkbookId. 
            <para>
            The ID of the workbook into which data was imported.
            </para>
             
            <para>
             If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Honeycode.Model.DescribeTableDataImportJobResponse">
            <summary>
            This is the response object from the DescribeTableDataImportJob operation.
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.DescribeTableDataImportJobResponse.JobMetadata">
            <summary>
            Gets and sets the property JobMetadata. 
            <para>
             The metadata about the job that was submitted for import. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.DescribeTableDataImportJobResponse.JobStatus">
            <summary>
            Gets and sets the property JobStatus. 
            <para>
             The current status of the import job. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.DescribeTableDataImportJobResponse.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
             A message providing more details about the current status of the import job. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Honeycode.Model.DestinationOptions">
            <summary>
            An object that contains the options relating to the destination of the import request.
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.DestinationOptions.ColumnMap">
            <summary>
            Gets and sets the property ColumnMap. 
            <para>
            A map of the column id to the import properties for each column.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Honeycode.Model.FailedBatchItem">
            <summary>
            A single item in a batch that failed to perform the intended action because of an
            error preventing it from succeeding.
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.FailedBatchItem.ErrorMessage">
            <summary>
            Gets and sets the property ErrorMessage. 
            <para>
             The error message that indicates why the batch item failed. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.FailedBatchItem.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
             The id of the batch item that failed. This is the batch item id for the BatchCreateTableRows
            and BatchUpsertTableRows operations and the row id for the BatchUpdateTableRows and
            BatchDeleteTableRows operations. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Honeycode.Model.Filter">
            <summary>
            An object that represents a filter formula along with the id of the context row under
            which the filter function needs to evaluate.
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.Filter.ContextRowId">
            <summary>
            Gets and sets the property ContextRowId. 
            <para>
             The optional contextRowId attribute can be used to specify the row id of the context
            row if the filter formula contains unqualified references to table columns and needs
            a context row to evaluate them successfully. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.Filter.Formula">
            <summary>
            Gets and sets the property Formula. 
            <para>
             A formula representing a filter function that returns zero or more matching rows
            from a table. Valid formulas in this field return a list of rows from a table. The
            most common ways of writing a formula to return a list of rows are to use the FindRow()
            or Filter() functions. Any other formula that returns zero or more rows is also acceptable.
            For example, you can use a formula that points to a cell that contains a filter function.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Honeycode.Model.GetScreenDataRequest">
            <summary>
            Container for the parameters to the GetScreenData operation.
            The GetScreenData API allows retrieval of data from a screen in a Honeycode app.
            The API allows setting local variables in the screen to filter, sort or otherwise
            affect what will be displayed on the screen.
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.GetScreenDataRequest.AppId">
            <summary>
            Gets and sets the property AppId. 
            <para>
            The ID of the app that contains the screem.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.GetScreenDataRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
             The number of results to be returned on a single page. Specify a number between 1
            and 100. The maximum value is 100. 
            </para>
             
            <para>
             This parameter is optional. If you don't specify this parameter, the default page
            size is 100. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.GetScreenDataRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
             This parameter is optional. If a nextToken is not specified, the API returns the
            first page of data. 
            </para>
             
            <para>
             Pagination tokens expire after 1 hour. If you use a token that was returned more
            than an hour back, the API will throw ValidationException. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.GetScreenDataRequest.ScreenId">
            <summary>
            Gets and sets the property ScreenId. 
            <para>
            The ID of the screen.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.GetScreenDataRequest.Variables">
            <summary>
            Gets and sets the property Variables. 
            <para>
             Variables are optional and are needed only if the screen requires them to render
            correctly. Variables are specified as a map where the key is the name of the variable
            as defined on the screen. The value is an object which currently has only one property,
            rawValue, which holds the value of the variable to be passed to the screen. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.GetScreenDataRequest.WorkbookId">
            <summary>
            Gets and sets the property WorkbookId. 
            <para>
            The ID of the workbook that contains the screen.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Honeycode.Model.GetScreenDataResponse">
            <summary>
            This is the response object from the GetScreenData operation.
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.GetScreenDataResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
             Provides the pagination token to load the next page if there are more results matching
            the request. If a pagination token is not present in the response, it means that all
            data matching the query has been loaded. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.GetScreenDataResponse.Results">
            <summary>
            Gets and sets the property Results. 
            <para>
            A map of all the rows on the screen keyed by block name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.GetScreenDataResponse.WorkbookCursor">
            <summary>
            Gets and sets the property WorkbookCursor. 
            <para>
             Indicates the cursor of the workbook at which the data returned by this workbook
            is read. Workbook cursor keeps increasing with every update and the increments are
            not sequential. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Honeycode.Model.ImportDataSource">
            <summary>
            An object that has details about the source of the data that was submitted for import.
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.ImportDataSource.DataSourceConfig">
            <summary>
            Gets and sets the property DataSourceConfig. 
            <para>
            The configuration parameters for the data source of the import
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Honeycode.Model.ImportDataSourceConfig">
            <summary>
            An object that contains the configuration parameters for the data source of an import
            request.
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.ImportDataSourceConfig.DataSourceUrl">
            <summary>
            Gets and sets the property DataSourceUrl. 
            <para>
             The URL from which source data will be downloaded for the import request. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Honeycode.Model.ImportJobSubmitter">
            <summary>
            An object that contains the attributes of the submitter of the import job.
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.ImportJobSubmitter.Email">
            <summary>
            Gets and sets the property Email. 
            <para>
            The email id of the submitter of the import job, if available.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.ImportJobSubmitter.UserArn">
            <summary>
            Gets and sets the property UserArn. 
            <para>
            The AWS user ARN of the submitter of the import job, if available.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Honeycode.Model.ImportOptions">
            <summary>
            An object that contains the options specified by the sumitter of the import request.
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.ImportOptions.DelimitedTextOptions">
            <summary>
            Gets and sets the property DelimitedTextOptions. 
            <para>
            Options relating to parsing delimited text. Required if dataFormat is DELIMITED_TEXT.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.ImportOptions.DestinationOptions">
            <summary>
            Gets and sets the property DestinationOptions. 
            <para>
            Options relating to the destination of the import request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Honeycode.Model.InternalServerException">
            <summary>
            There were unexpected errors from the server.
            </summary>
        </member>
        <member name="M:Amazon.Honeycode.Model.InternalServerException.#ctor(System.String)">
            <summary>
            Constructs a new InternalServerException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Honeycode.Model.InternalServerException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Honeycode.Model.InternalServerException.#ctor(System.Exception)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Honeycode.Model.InternalServerException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Honeycode.Model.InternalServerException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Honeycode.Model.InternalServerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InternalServerException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Honeycode.Model.InternalServerException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Honeycode.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for AccessDeniedException Object
            </summary>  
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Honeycode.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Honeycode.Model.Internal.MarshallTransformations.AutomationExecutionExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for AutomationExecutionException Object
            </summary>  
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.AutomationExecutionExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.AutomationExecutionExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Honeycode.Model.Internal.MarshallTransformations.AutomationExecutionExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Honeycode.Model.Internal.MarshallTransformations.AutomationExecutionTimeoutExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for AutomationExecutionTimeoutException Object
            </summary>  
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.AutomationExecutionTimeoutExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.AutomationExecutionTimeoutExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Honeycode.Model.Internal.MarshallTransformations.AutomationExecutionTimeoutExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Honeycode.Model.Internal.MarshallTransformations.BatchCreateTableRowsRequestMarshaller">
            <summary>
            BatchCreateTableRows Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.BatchCreateTableRowsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.BatchCreateTableRowsRequestMarshaller.Marshall(Amazon.Honeycode.Model.BatchCreateTableRowsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Honeycode.Model.Internal.MarshallTransformations.BatchCreateTableRowsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Honeycode.Model.Internal.MarshallTransformations.BatchCreateTableRowsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for BatchCreateTableRows operation
            </summary>  
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.BatchCreateTableRowsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.BatchCreateTableRowsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Honeycode.Model.Internal.MarshallTransformations.BatchCreateTableRowsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Honeycode.Model.Internal.MarshallTransformations.BatchDeleteTableRowsRequestMarshaller">
            <summary>
            BatchDeleteTableRows Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.BatchDeleteTableRowsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.BatchDeleteTableRowsRequestMarshaller.Marshall(Amazon.Honeycode.Model.BatchDeleteTableRowsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Honeycode.Model.Internal.MarshallTransformations.BatchDeleteTableRowsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Honeycode.Model.Internal.MarshallTransformations.BatchDeleteTableRowsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for BatchDeleteTableRows operation
            </summary>  
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.BatchDeleteTableRowsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.BatchDeleteTableRowsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Honeycode.Model.Internal.MarshallTransformations.BatchDeleteTableRowsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Honeycode.Model.Internal.MarshallTransformations.BatchUpdateTableRowsRequestMarshaller">
            <summary>
            BatchUpdateTableRows Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.BatchUpdateTableRowsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.BatchUpdateTableRowsRequestMarshaller.Marshall(Amazon.Honeycode.Model.BatchUpdateTableRowsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Honeycode.Model.Internal.MarshallTransformations.BatchUpdateTableRowsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Honeycode.Model.Internal.MarshallTransformations.BatchUpdateTableRowsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for BatchUpdateTableRows operation
            </summary>  
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.BatchUpdateTableRowsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.BatchUpdateTableRowsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Honeycode.Model.Internal.MarshallTransformations.BatchUpdateTableRowsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Honeycode.Model.Internal.MarshallTransformations.BatchUpsertTableRowsRequestMarshaller">
            <summary>
            BatchUpsertTableRows Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.BatchUpsertTableRowsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.BatchUpsertTableRowsRequestMarshaller.Marshall(Amazon.Honeycode.Model.BatchUpsertTableRowsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Honeycode.Model.Internal.MarshallTransformations.BatchUpsertTableRowsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Honeycode.Model.Internal.MarshallTransformations.BatchUpsertTableRowsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for BatchUpsertTableRows operation
            </summary>  
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.BatchUpsertTableRowsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.BatchUpsertTableRowsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Honeycode.Model.Internal.MarshallTransformations.BatchUpsertTableRowsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Honeycode.Model.Internal.MarshallTransformations.CellInputMarshaller">
            <summary>
            CellInput Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.CellInputMarshaller.Marshall(Amazon.Honeycode.Model.CellInput,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Honeycode.Model.Internal.MarshallTransformations.CellInputMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.Honeycode.Model.Internal.MarshallTransformations.CellUnmarshaller">
            <summary>
            Response Unmarshaller for Cell Object
            </summary>  
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.CellUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Honeycode#Model#Cell,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.CellUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Honeycode.Model.Internal.MarshallTransformations.CellUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Honeycode.Model.Internal.MarshallTransformations.ColumnMetadataUnmarshaller">
            <summary>
            Response Unmarshaller for ColumnMetadata Object
            </summary>  
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.ColumnMetadataUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Honeycode#Model#ColumnMetadata,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.ColumnMetadataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Honeycode.Model.Internal.MarshallTransformations.ColumnMetadataUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Honeycode.Model.Internal.MarshallTransformations.CreateRowDataMarshaller">
            <summary>
            CreateRowData Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.CreateRowDataMarshaller.Marshall(Amazon.Honeycode.Model.CreateRowData,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Honeycode.Model.Internal.MarshallTransformations.CreateRowDataMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.Honeycode.Model.Internal.MarshallTransformations.DataItemUnmarshaller">
            <summary>
            Response Unmarshaller for DataItem Object
            </summary>  
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.DataItemUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Honeycode#Model#DataItem,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.DataItemUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Honeycode.Model.Internal.MarshallTransformations.DataItemUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Honeycode.Model.Internal.MarshallTransformations.DelimitedTextImportOptionsMarshaller">
            <summary>
            DelimitedTextImportOptions Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.DelimitedTextImportOptionsMarshaller.Marshall(Amazon.Honeycode.Model.DelimitedTextImportOptions,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Honeycode.Model.Internal.MarshallTransformations.DelimitedTextImportOptionsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.Honeycode.Model.Internal.MarshallTransformations.DelimitedTextImportOptionsUnmarshaller">
            <summary>
            Response Unmarshaller for DelimitedTextImportOptions Object
            </summary>  
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.DelimitedTextImportOptionsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Honeycode#Model#DelimitedTextImportOptions,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.DelimitedTextImportOptionsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Honeycode.Model.Internal.MarshallTransformations.DelimitedTextImportOptionsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Honeycode.Model.Internal.MarshallTransformations.DescribeTableDataImportJobRequestMarshaller">
            <summary>
            DescribeTableDataImportJob Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.DescribeTableDataImportJobRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.DescribeTableDataImportJobRequestMarshaller.Marshall(Amazon.Honeycode.Model.DescribeTableDataImportJobRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Honeycode.Model.Internal.MarshallTransformations.DescribeTableDataImportJobRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Honeycode.Model.Internal.MarshallTransformations.DescribeTableDataImportJobResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeTableDataImportJob operation
            </summary>  
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.DescribeTableDataImportJobResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.DescribeTableDataImportJobResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Honeycode.Model.Internal.MarshallTransformations.DescribeTableDataImportJobResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Honeycode.Model.Internal.MarshallTransformations.DestinationOptionsMarshaller">
            <summary>
            DestinationOptions Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.DestinationOptionsMarshaller.Marshall(Amazon.Honeycode.Model.DestinationOptions,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Honeycode.Model.Internal.MarshallTransformations.DestinationOptionsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.Honeycode.Model.Internal.MarshallTransformations.DestinationOptionsUnmarshaller">
            <summary>
            Response Unmarshaller for DestinationOptions Object
            </summary>  
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.DestinationOptionsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Honeycode#Model#DestinationOptions,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.DestinationOptionsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Honeycode.Model.Internal.MarshallTransformations.DestinationOptionsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Honeycode.Model.Internal.MarshallTransformations.FailedBatchItemUnmarshaller">
            <summary>
            Response Unmarshaller for FailedBatchItem Object
            </summary>  
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.FailedBatchItemUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Honeycode#Model#FailedBatchItem,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.FailedBatchItemUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Honeycode.Model.Internal.MarshallTransformations.FailedBatchItemUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Honeycode.Model.Internal.MarshallTransformations.FilterMarshaller">
            <summary>
            Filter Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.FilterMarshaller.Marshall(Amazon.Honeycode.Model.Filter,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Honeycode.Model.Internal.MarshallTransformations.FilterMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.Honeycode.Model.Internal.MarshallTransformations.GetScreenDataRequestMarshaller">
            <summary>
            GetScreenData Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.GetScreenDataRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.GetScreenDataRequestMarshaller.Marshall(Amazon.Honeycode.Model.GetScreenDataRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Honeycode.Model.Internal.MarshallTransformations.GetScreenDataRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Honeycode.Model.Internal.MarshallTransformations.GetScreenDataResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetScreenData operation
            </summary>  
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.GetScreenDataResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.GetScreenDataResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Honeycode.Model.Internal.MarshallTransformations.GetScreenDataResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Honeycode.Model.Internal.MarshallTransformations.ImportDataSourceConfigMarshaller">
            <summary>
            ImportDataSourceConfig Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.ImportDataSourceConfigMarshaller.Marshall(Amazon.Honeycode.Model.ImportDataSourceConfig,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Honeycode.Model.Internal.MarshallTransformations.ImportDataSourceConfigMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.Honeycode.Model.Internal.MarshallTransformations.ImportDataSourceConfigUnmarshaller">
            <summary>
            Response Unmarshaller for ImportDataSourceConfig Object
            </summary>  
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.ImportDataSourceConfigUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Honeycode#Model#ImportDataSourceConfig,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.ImportDataSourceConfigUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Honeycode.Model.Internal.MarshallTransformations.ImportDataSourceConfigUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Honeycode.Model.Internal.MarshallTransformations.ImportDataSourceMarshaller">
            <summary>
            ImportDataSource Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.ImportDataSourceMarshaller.Marshall(Amazon.Honeycode.Model.ImportDataSource,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Honeycode.Model.Internal.MarshallTransformations.ImportDataSourceMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.Honeycode.Model.Internal.MarshallTransformations.ImportDataSourceUnmarshaller">
            <summary>
            Response Unmarshaller for ImportDataSource Object
            </summary>  
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.ImportDataSourceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Honeycode#Model#ImportDataSource,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.ImportDataSourceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Honeycode.Model.Internal.MarshallTransformations.ImportDataSourceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Honeycode.Model.Internal.MarshallTransformations.ImportJobSubmitterUnmarshaller">
            <summary>
            Response Unmarshaller for ImportJobSubmitter Object
            </summary>  
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.ImportJobSubmitterUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Honeycode#Model#ImportJobSubmitter,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.ImportJobSubmitterUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Honeycode.Model.Internal.MarshallTransformations.ImportJobSubmitterUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Honeycode.Model.Internal.MarshallTransformations.ImportOptionsMarshaller">
            <summary>
            ImportOptions Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.ImportOptionsMarshaller.Marshall(Amazon.Honeycode.Model.ImportOptions,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Honeycode.Model.Internal.MarshallTransformations.ImportOptionsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.Honeycode.Model.Internal.MarshallTransformations.ImportOptionsUnmarshaller">
            <summary>
            Response Unmarshaller for ImportOptions Object
            </summary>  
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.ImportOptionsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Honeycode#Model#ImportOptions,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.ImportOptionsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Honeycode.Model.Internal.MarshallTransformations.ImportOptionsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Honeycode.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InternalServerException Object
            </summary>  
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Honeycode.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Honeycode.Model.Internal.MarshallTransformations.InvokeScreenAutomationRequestMarshaller">
            <summary>
            InvokeScreenAutomation Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.InvokeScreenAutomationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.InvokeScreenAutomationRequestMarshaller.Marshall(Amazon.Honeycode.Model.InvokeScreenAutomationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Honeycode.Model.Internal.MarshallTransformations.InvokeScreenAutomationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Honeycode.Model.Internal.MarshallTransformations.InvokeScreenAutomationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for InvokeScreenAutomation operation
            </summary>  
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.InvokeScreenAutomationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.InvokeScreenAutomationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Honeycode.Model.Internal.MarshallTransformations.InvokeScreenAutomationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Honeycode.Model.Internal.MarshallTransformations.ListTableColumnsRequestMarshaller">
            <summary>
            ListTableColumns Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.ListTableColumnsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.ListTableColumnsRequestMarshaller.Marshall(Amazon.Honeycode.Model.ListTableColumnsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Honeycode.Model.Internal.MarshallTransformations.ListTableColumnsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Honeycode.Model.Internal.MarshallTransformations.ListTableColumnsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListTableColumns operation
            </summary>  
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.ListTableColumnsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.ListTableColumnsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Honeycode.Model.Internal.MarshallTransformations.ListTableColumnsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Honeycode.Model.Internal.MarshallTransformations.ListTableRowsRequestMarshaller">
            <summary>
            ListTableRows Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.ListTableRowsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.ListTableRowsRequestMarshaller.Marshall(Amazon.Honeycode.Model.ListTableRowsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Honeycode.Model.Internal.MarshallTransformations.ListTableRowsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Honeycode.Model.Internal.MarshallTransformations.ListTableRowsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListTableRows operation
            </summary>  
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.ListTableRowsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.ListTableRowsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Honeycode.Model.Internal.MarshallTransformations.ListTableRowsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Honeycode.Model.Internal.MarshallTransformations.ListTablesRequestMarshaller">
            <summary>
            ListTables Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.ListTablesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.ListTablesRequestMarshaller.Marshall(Amazon.Honeycode.Model.ListTablesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Honeycode.Model.Internal.MarshallTransformations.ListTablesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Honeycode.Model.Internal.MarshallTransformations.ListTablesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListTables operation
            </summary>  
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.ListTablesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.ListTablesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Honeycode.Model.Internal.MarshallTransformations.ListTablesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Honeycode.Model.Internal.MarshallTransformations.QueryTableRowsRequestMarshaller">
            <summary>
            QueryTableRows Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.QueryTableRowsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.QueryTableRowsRequestMarshaller.Marshall(Amazon.Honeycode.Model.QueryTableRowsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Honeycode.Model.Internal.MarshallTransformations.QueryTableRowsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Honeycode.Model.Internal.MarshallTransformations.QueryTableRowsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for QueryTableRows operation
            </summary>  
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.QueryTableRowsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.QueryTableRowsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Honeycode.Model.Internal.MarshallTransformations.QueryTableRowsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Honeycode.Model.Internal.MarshallTransformations.RequestTimeoutExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for RequestTimeoutException Object
            </summary>  
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.RequestTimeoutExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.RequestTimeoutExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Honeycode.Model.Internal.MarshallTransformations.RequestTimeoutExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Honeycode.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Honeycode.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Honeycode.Model.Internal.MarshallTransformations.ResultRowUnmarshaller">
            <summary>
            Response Unmarshaller for ResultRow Object
            </summary>  
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.ResultRowUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Honeycode#Model#ResultRow,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.ResultRowUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Honeycode.Model.Internal.MarshallTransformations.ResultRowUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Honeycode.Model.Internal.MarshallTransformations.ResultSetUnmarshaller">
            <summary>
            Response Unmarshaller for ResultSet Object
            </summary>  
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.ResultSetUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Honeycode#Model#ResultSet,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.ResultSetUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Honeycode.Model.Internal.MarshallTransformations.ResultSetUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Honeycode.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ServiceQuotaExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Honeycode.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Honeycode.Model.Internal.MarshallTransformations.ServiceUnavailableExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ServiceUnavailableException Object
            </summary>  
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.ServiceUnavailableExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.ServiceUnavailableExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Honeycode.Model.Internal.MarshallTransformations.ServiceUnavailableExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Honeycode.Model.Internal.MarshallTransformations.SourceDataColumnPropertiesMarshaller">
            <summary>
            SourceDataColumnProperties Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.SourceDataColumnPropertiesMarshaller.Marshall(Amazon.Honeycode.Model.SourceDataColumnProperties,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Honeycode.Model.Internal.MarshallTransformations.SourceDataColumnPropertiesMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.Honeycode.Model.Internal.MarshallTransformations.SourceDataColumnPropertiesUnmarshaller">
            <summary>
            Response Unmarshaller for SourceDataColumnProperties Object
            </summary>  
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.SourceDataColumnPropertiesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Honeycode#Model#SourceDataColumnProperties,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.SourceDataColumnPropertiesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Honeycode.Model.Internal.MarshallTransformations.SourceDataColumnPropertiesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Honeycode.Model.Internal.MarshallTransformations.StartTableDataImportJobRequestMarshaller">
            <summary>
            StartTableDataImportJob Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.StartTableDataImportJobRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.StartTableDataImportJobRequestMarshaller.Marshall(Amazon.Honeycode.Model.StartTableDataImportJobRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Honeycode.Model.Internal.MarshallTransformations.StartTableDataImportJobRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Honeycode.Model.Internal.MarshallTransformations.StartTableDataImportJobResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StartTableDataImportJob operation
            </summary>  
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.StartTableDataImportJobResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.StartTableDataImportJobResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Honeycode.Model.Internal.MarshallTransformations.StartTableDataImportJobResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Honeycode.Model.Internal.MarshallTransformations.TableColumnUnmarshaller">
            <summary>
            Response Unmarshaller for TableColumn Object
            </summary>  
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.TableColumnUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Honeycode#Model#TableColumn,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.TableColumnUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Honeycode.Model.Internal.MarshallTransformations.TableColumnUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Honeycode.Model.Internal.MarshallTransformations.TableDataImportJobMetadataUnmarshaller">
            <summary>
            Response Unmarshaller for TableDataImportJobMetadata Object
            </summary>  
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.TableDataImportJobMetadataUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Honeycode#Model#TableDataImportJobMetadata,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.TableDataImportJobMetadataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Honeycode.Model.Internal.MarshallTransformations.TableDataImportJobMetadataUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Honeycode.Model.Internal.MarshallTransformations.TableRowUnmarshaller">
            <summary>
            Response Unmarshaller for TableRow Object
            </summary>  
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.TableRowUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Honeycode#Model#TableRow,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.TableRowUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Honeycode.Model.Internal.MarshallTransformations.TableRowUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Honeycode.Model.Internal.MarshallTransformations.TableUnmarshaller">
            <summary>
            Response Unmarshaller for Table Object
            </summary>  
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.TableUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Honeycode#Model#Table,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.TableUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Honeycode.Model.Internal.MarshallTransformations.TableUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Honeycode.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ThrottlingException Object
            </summary>  
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Honeycode.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Honeycode.Model.Internal.MarshallTransformations.UpdateRowDataMarshaller">
            <summary>
            UpdateRowData Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.UpdateRowDataMarshaller.Marshall(Amazon.Honeycode.Model.UpdateRowData,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Honeycode.Model.Internal.MarshallTransformations.UpdateRowDataMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.Honeycode.Model.Internal.MarshallTransformations.UpsertRowDataMarshaller">
            <summary>
            UpsertRowData Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.UpsertRowDataMarshaller.Marshall(Amazon.Honeycode.Model.UpsertRowData,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Honeycode.Model.Internal.MarshallTransformations.UpsertRowDataMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.Honeycode.Model.Internal.MarshallTransformations.UpsertRowsResultUnmarshaller">
            <summary>
            Response Unmarshaller for UpsertRowsResult Object
            </summary>  
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.UpsertRowsResultUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Honeycode#Model#UpsertRowsResult,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.UpsertRowsResultUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Honeycode.Model.Internal.MarshallTransformations.UpsertRowsResultUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Honeycode.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ValidationException Object
            </summary>  
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Honeycode.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Honeycode.Model.Internal.MarshallTransformations.VariableValueMarshaller">
            <summary>
            VariableValue Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Honeycode.Model.Internal.MarshallTransformations.VariableValueMarshaller.Marshall(Amazon.Honeycode.Model.VariableValue,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Honeycode.Model.Internal.MarshallTransformations.VariableValueMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.Honeycode.Model.InvokeScreenAutomationRequest">
            <summary>
            Container for the parameters to the InvokeScreenAutomation operation.
            The InvokeScreenAutomation API allows invoking an action defined in a screen in a
            Honeycode app. The API allows setting local variables, which can then be used in the
            automation being invoked. This allows automating the Honeycode app interactions to
            write, update or delete data in the workbook.
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.InvokeScreenAutomationRequest.AppId">
            <summary>
            Gets and sets the property AppId. 
            <para>
            The ID of the app that contains the screen automation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.InvokeScreenAutomationRequest.ClientRequestToken">
            <summary>
            Gets and sets the property ClientRequestToken. 
            <para>
             The request token for performing the automation action. Request tokens help to identify
            duplicate requests. If a call times out or fails due to a transient error like a failed
            network connection, you can retry the call with the same request token. The service
            ensures that if the first call using that request token is successfully performed,
            the second call will return the response of the previous call rather than performing
            the action again. 
            </para>
             
            <para>
             Note that request tokens are valid only for a few minutes. You cannot use request
            tokens to dedupe requests spanning hours or days. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.InvokeScreenAutomationRequest.RowId">
            <summary>
            Gets and sets the property RowId. 
            <para>
             The row ID for the automation if the automation is defined inside a block with source
            or list. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.InvokeScreenAutomationRequest.ScreenAutomationId">
            <summary>
            Gets and sets the property ScreenAutomationId. 
            <para>
            The ID of the automation action to be performed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.InvokeScreenAutomationRequest.ScreenId">
            <summary>
            Gets and sets the property ScreenId. 
            <para>
            The ID of the screen that contains the screen automation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.InvokeScreenAutomationRequest.Variables">
            <summary>
            Gets and sets the property Variables. 
            <para>
             Variables are specified as a map where the key is the name of the variable as defined
            on the screen. The value is an object which currently has only one property, rawValue,
            which holds the value of the variable to be passed to the screen. Any variables defined
            in a screen are required to be passed in the call. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.InvokeScreenAutomationRequest.WorkbookId">
            <summary>
            Gets and sets the property WorkbookId. 
            <para>
            The ID of the workbook that contains the screen automation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Honeycode.Model.InvokeScreenAutomationResponse">
            <summary>
            This is the response object from the InvokeScreenAutomation operation.
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.InvokeScreenAutomationResponse.WorkbookCursor">
            <summary>
            Gets and sets the property WorkbookCursor. 
            <para>
            The updated workbook cursor after performing the automation action.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Honeycode.Model.ListTableColumnsRequest">
            <summary>
            Container for the parameters to the ListTableColumns operation.
            The ListTableColumns API allows you to retrieve a list of all the columns in a table
            in a workbook.
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.ListTableColumnsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
             This parameter is optional. If a nextToken is not specified, the API returns the
            first page of data. 
            </para>
             
            <para>
             Pagination tokens expire after 1 hour. If you use a token that was returned more
            than an hour back, the API will throw ValidationException. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.ListTableColumnsRequest.TableId">
            <summary>
            Gets and sets the property TableId. 
            <para>
            The ID of the table whose columns are being retrieved.
            </para>
             
            <para>
             If a table with the specified id could not be found, this API throws ResourceNotFoundException.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.ListTableColumnsRequest.WorkbookId">
            <summary>
            Gets and sets the property WorkbookId. 
            <para>
            The ID of the workbook that contains the table whose columns are being retrieved.
            </para>
             
            <para>
             If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Honeycode.Model.ListTableColumnsResponse">
            <summary>
            This is the response object from the ListTableColumns operation.
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.ListTableColumnsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
             Provides the pagination token to load the next page if there are more results matching
            the request. If a pagination token is not present in the response, it means that all
            data matching the request has been loaded. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.ListTableColumnsResponse.TableColumns">
            <summary>
            Gets and sets the property TableColumns. 
            <para>
             The list of columns in the table. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.ListTableColumnsResponse.WorkbookCursor">
            <summary>
            Gets and sets the property WorkbookCursor. 
            <para>
             Indicates the cursor of the workbook at which the data returned by this request is
            read. Workbook cursor keeps increasing with every update and the increments are not
            sequential. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Honeycode.Model.ListTableRowsRequest">
            <summary>
            Container for the parameters to the ListTableRows operation.
            The ListTableRows API allows you to retrieve a list of all the rows in a table in
            a workbook.
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.ListTableRowsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of rows to return in each page of the results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.ListTableRowsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
             This parameter is optional. If a nextToken is not specified, the API returns the
            first page of data. 
            </para>
             
            <para>
             Pagination tokens expire after 1 hour. If you use a token that was returned more
            than an hour back, the API will throw ValidationException. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.ListTableRowsRequest.RowIds">
            <summary>
            Gets and sets the property RowIds. 
            <para>
             This parameter is optional. If one or more row ids are specified in this list, then
            only the specified row ids are returned in the result. If no row ids are specified
            here, then all the rows in the table are returned. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.ListTableRowsRequest.TableId">
            <summary>
            Gets and sets the property TableId. 
            <para>
            The ID of the table whose rows are being retrieved.
            </para>
             
            <para>
             If a table with the specified id could not be found, this API throws ResourceNotFoundException.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.ListTableRowsRequest.WorkbookId">
            <summary>
            Gets and sets the property WorkbookId. 
            <para>
            The ID of the workbook that contains the table whose rows are being retrieved.
            </para>
             
            <para>
             If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Honeycode.Model.ListTableRowsResponse">
            <summary>
            This is the response object from the ListTableRows operation.
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.ListTableRowsResponse.ColumnIds">
            <summary>
            Gets and sets the property ColumnIds. 
            <para>
             The list of columns in the table whose row data is returned in the result. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.ListTableRowsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
             Provides the pagination token to load the next page if there are more results matching
            the request. If a pagination token is not present in the response, it means that all
            data matching the request has been loaded. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.ListTableRowsResponse.RowIdsNotFound">
            <summary>
            Gets and sets the property RowIdsNotFound. 
            <para>
             The list of row ids included in the request that were not found in the table. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.ListTableRowsResponse.Rows">
            <summary>
            Gets and sets the property Rows. 
            <para>
             The list of rows in the table. Note that this result is paginated, so this list contains
            a maximum of 100 rows. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.ListTableRowsResponse.WorkbookCursor">
            <summary>
            Gets and sets the property WorkbookCursor. 
            <para>
             Indicates the cursor of the workbook at which the data returned by this request is
            read. Workbook cursor keeps increasing with every update and the increments are not
            sequential. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Honeycode.Model.ListTablesRequest">
            <summary>
            Container for the parameters to the ListTables operation.
            The ListTables API allows you to retrieve a list of all the tables in a workbook.
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.ListTablesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of tables to return in each page of the results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.ListTablesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
             This parameter is optional. If a nextToken is not specified, the API returns the
            first page of data. 
            </para>
             
            <para>
             Pagination tokens expire after 1 hour. If you use a token that was returned more
            than an hour back, the API will throw ValidationException. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.ListTablesRequest.WorkbookId">
            <summary>
            Gets and sets the property WorkbookId. 
            <para>
            The ID of the workbook whose tables are being retrieved.
            </para>
             
            <para>
             If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Honeycode.Model.ListTablesResponse">
            <summary>
            This is the response object from the ListTables operation.
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.ListTablesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
             Provides the pagination token to load the next page if there are more results matching
            the request. If a pagination token is not present in the response, it means that all
            data matching the request has been loaded. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.ListTablesResponse.Tables">
            <summary>
            Gets and sets the property Tables. 
            <para>
             The list of tables in the workbook. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.ListTablesResponse.WorkbookCursor">
            <summary>
            Gets and sets the property WorkbookCursor. 
            <para>
             Indicates the cursor of the workbook at which the data returned by this request is
            read. Workbook cursor keeps increasing with every update and the increments are not
            sequential. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Honeycode.Model.QueryTableRowsRequest">
            <summary>
            Container for the parameters to the QueryTableRows operation.
            The QueryTableRows API allows you to use a filter formula to query for specific rows
            in a table.
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.QueryTableRowsRequest.FilterFormula">
            <summary>
            Gets and sets the property FilterFormula. 
            <para>
            An object that represents a filter formula along with the id of the context row under
            which the filter function needs to evaluate.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.QueryTableRowsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of rows to return in each page of the results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.QueryTableRowsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
             This parameter is optional. If a nextToken is not specified, the API returns the
            first page of data. 
            </para>
             
            <para>
             Pagination tokens expire after 1 hour. If you use a token that was returned more
            than an hour back, the API will throw ValidationException. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.QueryTableRowsRequest.TableId">
            <summary>
            Gets and sets the property TableId. 
            <para>
            The ID of the table whose rows are being queried.
            </para>
             
            <para>
             If a table with the specified id could not be found, this API throws ResourceNotFoundException.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.QueryTableRowsRequest.WorkbookId">
            <summary>
            Gets and sets the property WorkbookId. 
            <para>
            The ID of the workbook whose table rows are being queried.
            </para>
             
            <para>
             If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Honeycode.Model.QueryTableRowsResponse">
            <summary>
            This is the response object from the QueryTableRows operation.
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.QueryTableRowsResponse.ColumnIds">
            <summary>
            Gets and sets the property ColumnIds. 
            <para>
             The list of columns in the table whose row data is returned in the result. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.QueryTableRowsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
             Provides the pagination token to load the next page if there are more results matching
            the request. If a pagination token is not present in the response, it means that all
            data matching the request has been loaded. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.QueryTableRowsResponse.Rows">
            <summary>
            Gets and sets the property Rows. 
            <para>
             The list of rows in the table that match the query filter. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.QueryTableRowsResponse.WorkbookCursor">
            <summary>
            Gets and sets the property WorkbookCursor. 
            <para>
             Indicates the cursor of the workbook at which the data returned by this request is
            read. Workbook cursor keeps increasing with every update and the increments are not
            sequential. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Honeycode.Model.RequestTimeoutException">
            <summary>
            The request timed out.
            </summary>
        </member>
        <member name="M:Amazon.Honeycode.Model.RequestTimeoutException.#ctor(System.String)">
            <summary>
            Constructs a new RequestTimeoutException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Honeycode.Model.RequestTimeoutException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of RequestTimeoutException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Honeycode.Model.RequestTimeoutException.#ctor(System.Exception)">
            <summary>
            Construct instance of RequestTimeoutException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Honeycode.Model.RequestTimeoutException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of RequestTimeoutException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Honeycode.Model.RequestTimeoutException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of RequestTimeoutException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Honeycode.Model.RequestTimeoutException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the RequestTimeoutException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Honeycode.Model.RequestTimeoutException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Honeycode.Model.ResourceNotFoundException">
            <summary>
            A Workbook, Table, App, Screen or Screen Automation was not found with the given ID.
            </summary>
        </member>
        <member name="M:Amazon.Honeycode.Model.ResourceNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Honeycode.Model.ResourceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Honeycode.Model.ResourceNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Honeycode.Model.ResourceNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Honeycode.Model.ResourceNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Honeycode.Model.ResourceNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ResourceNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Honeycode.Model.ResourceNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Honeycode.Model.ResultRow">
            <summary>
            A single row in the ResultSet.
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.ResultRow.DataItems">
            <summary>
            Gets and sets the property DataItems. 
            <para>
            List of all the data cells in a row.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.ResultRow.RowId">
            <summary>
            Gets and sets the property RowId. 
            <para>
            The ID for a particular row.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Honeycode.Model.ResultSet">
            <summary>
            ResultSet contains the results of the request for a single block or list defined
            on the screen.
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.ResultSet.Headers">
            <summary>
            Gets and sets the property Headers. 
            <para>
             List of headers for all the data cells in the block. The header identifies the name
            and default format of the data cell. Data cells appear in the same order in all rows
            as defined in the header. The names and formats are not repeated in the rows. If a
            particular row does not have a value for a data cell, a blank value is used. 
            </para>
             
            <para>
             For example, a task list that displays the task name, due date and assigned person
            might have headers [ { "name": "Task Name"}, {"name": "Due Date", "format": "DATE"},
            {"name": "Assigned", "format": "CONTACT"} ]. Every row in the result will have the
            task name as the first item, due date as the second item and assigned person as the
            third item. If a particular task does not have a due date, that row will still have
            a blank value in the second element and the assigned person will still be in the third
            element. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.ResultSet.Rows">
            <summary>
            Gets and sets the property Rows. 
            <para>
             List of rows returned by the request. Each row has a row Id and a list of data cells
            in that row. The data cells will be present in the same order as they are defined
            in the header. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Honeycode.Model.ServiceQuotaExceededException">
            <summary>
            The request caused service quota to be breached.
            </summary>
        </member>
        <member name="M:Amazon.Honeycode.Model.ServiceQuotaExceededException.#ctor(System.String)">
            <summary>
            Constructs a new ServiceQuotaExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Honeycode.Model.ServiceQuotaExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ServiceQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Honeycode.Model.ServiceQuotaExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of ServiceQuotaExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Honeycode.Model.ServiceQuotaExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Honeycode.Model.ServiceQuotaExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Honeycode.Model.ServiceQuotaExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ServiceQuotaExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Honeycode.Model.ServiceQuotaExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Honeycode.Model.ServiceUnavailableException">
            <summary>
            Remote service is unreachable.
            </summary>
        </member>
        <member name="M:Amazon.Honeycode.Model.ServiceUnavailableException.#ctor(System.String)">
            <summary>
            Constructs a new ServiceUnavailableException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Honeycode.Model.ServiceUnavailableException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ServiceUnavailableException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Honeycode.Model.ServiceUnavailableException.#ctor(System.Exception)">
            <summary>
            Construct instance of ServiceUnavailableException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Honeycode.Model.ServiceUnavailableException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceUnavailableException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Honeycode.Model.ServiceUnavailableException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceUnavailableException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Honeycode.Model.ServiceUnavailableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ServiceUnavailableException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Honeycode.Model.ServiceUnavailableException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Honeycode.Model.SourceDataColumnProperties">
            <summary>
            An object that contains the properties for importing data to a specific column in
            a table.
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.SourceDataColumnProperties.ColumnIndex">
            <summary>
            Gets and sets the property ColumnIndex. 
            <para>
            The index of the column in the input file.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Honeycode.Model.StartTableDataImportJobRequest">
            <summary>
            Container for the parameters to the StartTableDataImportJob operation.
            The StartTableDataImportJob API allows you to start an import job on a table. This
            API will only return the id of the job that was started. To find out the status of
            the import request, you need to call the DescribeTableDataImportJob API.
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.StartTableDataImportJobRequest.ClientRequestToken">
            <summary>
            Gets and sets the property ClientRequestToken. 
            <para>
             The request token for performing the update action. Request tokens help to identify
            duplicate requests. If a call times out or fails due to a transient error like a failed
            network connection, you can retry the call with the same request token. The service
            ensures that if the first call using that request token is successfully performed,
            the second call will not perform the action again. 
            </para>
             
            <para>
             Note that request tokens are valid only for a few minutes. You cannot use request
            tokens to dedupe requests spanning hours or days. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.StartTableDataImportJobRequest.DataFormat">
            <summary>
            Gets and sets the property DataFormat. 
            <para>
             The format of the data that is being imported. Currently the only option supported
            is "DELIMITED_TEXT". 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.StartTableDataImportJobRequest.DataSource">
            <summary>
            Gets and sets the property DataSource. 
            <para>
             The source of the data that is being imported. The size of source must be no larger
            than 100 MB. Source must have no more than 100,000 cells and no more than 1,000 rows.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.StartTableDataImportJobRequest.DestinationTableId">
            <summary>
            Gets and sets the property DestinationTableId. 
            <para>
            The ID of the table where the rows are being imported.
            </para>
             
            <para>
             If a table with the specified id could not be found, this API throws ResourceNotFoundException.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.StartTableDataImportJobRequest.ImportOptions">
            <summary>
            Gets and sets the property ImportOptions. 
            <para>
             The options for customizing this import request. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.StartTableDataImportJobRequest.WorkbookId">
            <summary>
            Gets and sets the property WorkbookId. 
            <para>
            The ID of the workbook where the rows are being imported.
            </para>
             
            <para>
             If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Honeycode.Model.StartTableDataImportJobResponse">
            <summary>
            This is the response object from the StartTableDataImportJob operation.
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.StartTableDataImportJobResponse.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
             The id that is assigned to this import job. Future requests to find out the status
            of this import job need to send this id in the appropriate parameter in the request.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.StartTableDataImportJobResponse.JobStatus">
            <summary>
            Gets and sets the property JobStatus. 
            <para>
             The status of the import job immediately after submitting the request. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Honeycode.Model.Table">
            <summary>
            An object representing the properties of a table in a workbook.
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.Table.TableId">
            <summary>
            Gets and sets the property TableId. 
            <para>
            The id of the table.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.Table.TableName">
            <summary>
            Gets and sets the property TableName. 
            <para>
            The name of the table.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Honeycode.Model.TableColumn">
            <summary>
            An object that contains attributes about a single column in a table
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.TableColumn.Format">
            <summary>
            Gets and sets the property Format. 
            <para>
             The column level format that is applied in the table. An empty value in this field
            means that the column format is the default value 'AUTO'. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.TableColumn.TableColumnId">
            <summary>
            Gets and sets the property TableColumnId. 
            <para>
            The id of the column in the table.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.TableColumn.TableColumnName">
            <summary>
            Gets and sets the property TableColumnName. 
            <para>
            The name of the column in the table.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Honeycode.Model.TableDataImportJobMetadata">
            <summary>
            The metadata associated with the table data import job that was submitted.
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.TableDataImportJobMetadata.DataSource">
            <summary>
            Gets and sets the property DataSource. 
            <para>
            The source of the data that was submitted for import.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.TableDataImportJobMetadata.ImportOptions">
            <summary>
            Gets and sets the property ImportOptions. 
            <para>
            The options that was specified at the time of submitting the import request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.TableDataImportJobMetadata.Submitter">
            <summary>
            Gets and sets the property Submitter. 
            <para>
            Details about the submitter of the import request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.TableDataImportJobMetadata.SubmitTime">
            <summary>
            Gets and sets the property SubmitTime. 
            <para>
            The timestamp when the job was submitted for import.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Honeycode.Model.TableRow">
            <summary>
            An object that contains attributes about a single row in a table
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.TableRow.Cells">
            <summary>
            Gets and sets the property Cells. 
            <para>
            A list of cells in the table row. The cells appear in the same order as the columns
            of the table. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.TableRow.RowId">
            <summary>
            Gets and sets the property RowId. 
            <para>
            The id of the row in the table.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Honeycode.Model.ThrottlingException">
            <summary>
            Tps(transactions per second) rate reached.
            </summary>
        </member>
        <member name="M:Amazon.Honeycode.Model.ThrottlingException.#ctor(System.String)">
            <summary>
            Constructs a new ThrottlingException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Honeycode.Model.ThrottlingException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Honeycode.Model.ThrottlingException.#ctor(System.Exception)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Honeycode.Model.ThrottlingException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Honeycode.Model.ThrottlingException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Honeycode.Model.ThrottlingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ThrottlingException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Honeycode.Model.ThrottlingException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Honeycode.Model.UpdateRowData">
            <summary>
            Data needed to create a single row in a table as part of the BatchCreateTableRows
            request.
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.UpdateRowData.CellsToUpdate">
            <summary>
            Gets and sets the property CellsToUpdate. 
            <para>
             A map representing the cells to update in the given row. The key is the column id
            of the cell and the value is the CellInput object that represents the data to set
            in that cell. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.UpdateRowData.RowId">
            <summary>
            Gets and sets the property RowId. 
            <para>
             The id of the row that needs to be updated. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Honeycode.Model.UpsertRowData">
            <summary>
            Data needed to upsert rows in a table as part of a single item in the BatchUpsertTableRows
            request.
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.UpsertRowData.BatchItemId">
            <summary>
            Gets and sets the property BatchItemId. 
            <para>
             An external identifier that represents a single item in the request that is being
            upserted as part of the BatchUpsertTableRows request. This can be any string that
            you can use to identify the item in the request. The BatchUpsertTableRows API puts
            the batch item id in the results to allow you to link data in the request to data
            in the results. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.UpsertRowData.CellsToUpdate">
            <summary>
            Gets and sets the property CellsToUpdate. 
            <para>
             A map representing the cells to update for the matching rows or an appended row.
            The key is the column id of the cell and the value is the CellInput object that represents
            the data to set in that cell. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.UpsertRowData.Filter">
            <summary>
            Gets and sets the property Filter. 
            <para>
             The filter formula to use to find existing matching rows to update. The formula needs
            to return zero or more rows. If the formula returns 0 rows, then a new row will be
            appended in the target table. If the formula returns one or more rows, then the returned
            rows will be updated. 
            </para>
             
            <para>
             Note that the filter formula needs to return rows from the target table for the upsert
            operation to succeed. If the filter formula has a syntax error or it doesn't evaluate
            to zero or more rows in the target table for any one item in the input list, then
            the entire BatchUpsertTableRows request fails and no updates are made to the table.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Honeycode.Model.UpsertRowsResult">
            <summary>
            An object that represents the result of a single upsert row request.
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.UpsertRowsResult.RowIds">
            <summary>
            Gets and sets the property RowIds. 
            <para>
             The list of row ids that were changed as part of an upsert row operation. If the
            upsert resulted in an update, this list could potentially contain multiple rows that
            matched the filter and hence got updated. If the upsert resulted in an append, this
            list would only have the single row that was appended. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.UpsertRowsResult.UpsertAction">
            <summary>
            Gets and sets the property UpsertAction. 
            <para>
             The result of the upsert action. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Honeycode.Model.ValidationException">
            <summary>
            Request is invalid. The message in the response contains details on why the request
            is invalid.
            </summary>
        </member>
        <member name="M:Amazon.Honeycode.Model.ValidationException.#ctor(System.String)">
            <summary>
            Constructs a new ValidationException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Honeycode.Model.ValidationException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Honeycode.Model.ValidationException.#ctor(System.Exception)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Honeycode.Model.ValidationException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Honeycode.Model.ValidationException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Honeycode.Model.ValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ValidationException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Honeycode.Model.ValidationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Honeycode.Model.VariableValue">
            <summary>
            The input variables to the app to be used by the InvokeScreenAutomation action request.
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.VariableValue.RawValue">
            <summary>
            Gets and sets the property RawValue. 
            <para>
            Raw value of the variable.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Honeycode.Model.HoneycodePaginatorFactory">
             <summary>
             Paginators for the Honeycode service
            </summary>
        </member>
        <member name="M:Amazon.Honeycode.Model.HoneycodePaginatorFactory.ListTableColumns(Amazon.Honeycode.Model.ListTableColumnsRequest)">
             <summary>
             Paginator for ListTableColumns operation
            </summary>
        </member>
        <member name="M:Amazon.Honeycode.Model.HoneycodePaginatorFactory.ListTableRows(Amazon.Honeycode.Model.ListTableRowsRequest)">
             <summary>
             Paginator for ListTableRows operation
            </summary>
        </member>
        <member name="M:Amazon.Honeycode.Model.HoneycodePaginatorFactory.ListTables(Amazon.Honeycode.Model.ListTablesRequest)">
             <summary>
             Paginator for ListTables operation
            </summary>
        </member>
        <member name="M:Amazon.Honeycode.Model.HoneycodePaginatorFactory.QueryTableRows(Amazon.Honeycode.Model.QueryTableRowsRequest)">
             <summary>
             Paginator for QueryTableRows operation
            </summary>
        </member>
        <member name="T:Amazon.Honeycode.Model.IHoneycodePaginatorFactory">
             <summary>
             Paginators for the Honeycode service
            </summary>
        </member>
        <member name="M:Amazon.Honeycode.Model.IHoneycodePaginatorFactory.ListTableColumns(Amazon.Honeycode.Model.ListTableColumnsRequest)">
             <summary>
             Paginator for ListTableColumns operation
            </summary>
        </member>
        <member name="M:Amazon.Honeycode.Model.IHoneycodePaginatorFactory.ListTableRows(Amazon.Honeycode.Model.ListTableRowsRequest)">
             <summary>
             Paginator for ListTableRows operation
            </summary>
        </member>
        <member name="M:Amazon.Honeycode.Model.IHoneycodePaginatorFactory.ListTables(Amazon.Honeycode.Model.ListTablesRequest)">
             <summary>
             Paginator for ListTables operation
            </summary>
        </member>
        <member name="M:Amazon.Honeycode.Model.IHoneycodePaginatorFactory.QueryTableRows(Amazon.Honeycode.Model.QueryTableRowsRequest)">
             <summary>
             Paginator for QueryTableRows operation
            </summary>
        </member>
        <member name="T:Amazon.Honeycode.Model.IListTableColumnsPaginator">
             <summary>
             Paginator for the ListTableColumns operation
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.IListTableColumnsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.IListTableColumnsPaginator.TableColumns">
            <summary>
            Enumerable containing all of the TableColumns
            </summary>
        </member>
        <member name="T:Amazon.Honeycode.Model.IListTableRowsPaginator">
             <summary>
             Paginator for the ListTableRows operation
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.IListTableRowsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.IListTableRowsPaginator.Rows">
            <summary>
            Enumerable containing all of the Rows
            </summary>
        </member>
        <member name="T:Amazon.Honeycode.Model.IListTablesPaginator">
             <summary>
             Paginator for the ListTables operation
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.IListTablesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.IListTablesPaginator.Tables">
            <summary>
            Enumerable containing all of the Tables
            </summary>
        </member>
        <member name="T:Amazon.Honeycode.Model.IQueryTableRowsPaginator">
             <summary>
             Paginator for the QueryTableRows operation
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.IQueryTableRowsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.IQueryTableRowsPaginator.Rows">
            <summary>
            Enumerable containing all of the Rows
            </summary>
        </member>
        <member name="T:Amazon.Honeycode.Model.ListTableColumnsPaginator">
            <summary>
            Base class for ListTableColumns paginators.
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.ListTableColumnsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.ListTableColumnsPaginator.TableColumns">
            <summary>
            Enumerable containing all of the TableColumns
            </summary>
        </member>
        <member name="T:Amazon.Honeycode.Model.ListTableRowsPaginator">
            <summary>
            Base class for ListTableRows paginators.
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.ListTableRowsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.ListTableRowsPaginator.Rows">
            <summary>
            Enumerable containing all of the Rows
            </summary>
        </member>
        <member name="T:Amazon.Honeycode.Model.ListTablesPaginator">
            <summary>
            Base class for ListTables paginators.
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.ListTablesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.ListTablesPaginator.Tables">
            <summary>
            Enumerable containing all of the Tables
            </summary>
        </member>
        <member name="T:Amazon.Honeycode.Model.QueryTableRowsPaginator">
            <summary>
            Base class for QueryTableRows paginators.
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.QueryTableRowsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.Model.QueryTableRowsPaginator.Rows">
            <summary>
            Enumerable containing all of the Rows
            </summary>
        </member>
        <member name="T:Amazon.Honeycode.AmazonHoneycodeRequest">
            <summary>
            Base class for Honeycode operation requests.
            </summary>
        </member>
        <member name="T:Amazon.Honeycode.Format">
            <summary>
            Constants used for properties of type Format.
            </summary>
        </member>
        <member name="F:Amazon.Honeycode.Format.ACCOUNTING">
            <summary>
            Constant ACCOUNTING for Format
            </summary>
        </member>
        <member name="F:Amazon.Honeycode.Format.AUTO">
            <summary>
            Constant AUTO for Format
            </summary>
        </member>
        <member name="F:Amazon.Honeycode.Format.CONTACT">
            <summary>
            Constant CONTACT for Format
            </summary>
        </member>
        <member name="F:Amazon.Honeycode.Format.CURRENCY">
            <summary>
            Constant CURRENCY for Format
            </summary>
        </member>
        <member name="F:Amazon.Honeycode.Format.DATE">
            <summary>
            Constant DATE for Format
            </summary>
        </member>
        <member name="F:Amazon.Honeycode.Format.DATE_TIME">
            <summary>
            Constant DATE_TIME for Format
            </summary>
        </member>
        <member name="F:Amazon.Honeycode.Format.NUMBER">
            <summary>
            Constant NUMBER for Format
            </summary>
        </member>
        <member name="F:Amazon.Honeycode.Format.PERCENTAGE">
            <summary>
            Constant PERCENTAGE for Format
            </summary>
        </member>
        <member name="F:Amazon.Honeycode.Format.ROWLINK">
            <summary>
            Constant ROWLINK for Format
            </summary>
        </member>
        <member name="F:Amazon.Honeycode.Format.TEXT">
            <summary>
            Constant TEXT for Format
            </summary>
        </member>
        <member name="F:Amazon.Honeycode.Format.TIME">
            <summary>
            Constant TIME for Format
            </summary>
        </member>
        <member name="M:Amazon.Honeycode.Format.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Honeycode.Format.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Honeycode.Format.op_Implicit(System.String)~Amazon.Honeycode.Format">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Honeycode.ImportDataCharacterEncoding">
            <summary>
            Constants used for properties of type ImportDataCharacterEncoding.
            </summary>
        </member>
        <member name="F:Amazon.Honeycode.ImportDataCharacterEncoding.ISO88591">
            <summary>
            Constant ISO88591 for ImportDataCharacterEncoding
            </summary>
        </member>
        <member name="F:Amazon.Honeycode.ImportDataCharacterEncoding.USASCII">
            <summary>
            Constant USASCII for ImportDataCharacterEncoding
            </summary>
        </member>
        <member name="F:Amazon.Honeycode.ImportDataCharacterEncoding.UTF16">
            <summary>
            Constant UTF16 for ImportDataCharacterEncoding
            </summary>
        </member>
        <member name="F:Amazon.Honeycode.ImportDataCharacterEncoding.UTF16BE">
            <summary>
            Constant UTF16BE for ImportDataCharacterEncoding
            </summary>
        </member>
        <member name="F:Amazon.Honeycode.ImportDataCharacterEncoding.UTF16LE">
            <summary>
            Constant UTF16LE for ImportDataCharacterEncoding
            </summary>
        </member>
        <member name="F:Amazon.Honeycode.ImportDataCharacterEncoding.UTF8">
            <summary>
            Constant UTF8 for ImportDataCharacterEncoding
            </summary>
        </member>
        <member name="M:Amazon.Honeycode.ImportDataCharacterEncoding.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Honeycode.ImportDataCharacterEncoding.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Honeycode.ImportDataCharacterEncoding.op_Implicit(System.String)~Amazon.Honeycode.ImportDataCharacterEncoding">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Honeycode.ImportSourceDataFormat">
            <summary>
            Constants used for properties of type ImportSourceDataFormat.
            </summary>
        </member>
        <member name="F:Amazon.Honeycode.ImportSourceDataFormat.DELIMITED_TEXT">
            <summary>
            Constant DELIMITED_TEXT for ImportSourceDataFormat
            </summary>
        </member>
        <member name="M:Amazon.Honeycode.ImportSourceDataFormat.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Honeycode.ImportSourceDataFormat.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Honeycode.ImportSourceDataFormat.op_Implicit(System.String)~Amazon.Honeycode.ImportSourceDataFormat">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Honeycode.TableDataImportJobStatus">
            <summary>
            Constants used for properties of type TableDataImportJobStatus.
            </summary>
        </member>
        <member name="F:Amazon.Honeycode.TableDataImportJobStatus.COMPLETED">
            <summary>
            Constant COMPLETED for TableDataImportJobStatus
            </summary>
        </member>
        <member name="F:Amazon.Honeycode.TableDataImportJobStatus.FAILED">
            <summary>
            Constant FAILED for TableDataImportJobStatus
            </summary>
        </member>
        <member name="F:Amazon.Honeycode.TableDataImportJobStatus.IN_PROGRESS">
            <summary>
            Constant IN_PROGRESS for TableDataImportJobStatus
            </summary>
        </member>
        <member name="F:Amazon.Honeycode.TableDataImportJobStatus.SUBMITTED">
            <summary>
            Constant SUBMITTED for TableDataImportJobStatus
            </summary>
        </member>
        <member name="M:Amazon.Honeycode.TableDataImportJobStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Honeycode.TableDataImportJobStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Honeycode.TableDataImportJobStatus.op_Implicit(System.String)~Amazon.Honeycode.TableDataImportJobStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Honeycode.UpsertAction">
            <summary>
            Constants used for properties of type UpsertAction.
            </summary>
        </member>
        <member name="F:Amazon.Honeycode.UpsertAction.APPENDED">
            <summary>
            Constant APPENDED for UpsertAction
            </summary>
        </member>
        <member name="F:Amazon.Honeycode.UpsertAction.UPDATED">
            <summary>
            Constant UPDATED for UpsertAction
            </summary>
        </member>
        <member name="M:Amazon.Honeycode.UpsertAction.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Honeycode.UpsertAction.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Honeycode.UpsertAction.op_Implicit(System.String)~Amazon.Honeycode.UpsertAction">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Honeycode.AmazonHoneycodeClient">
             <summary>
             Implementation for accessing Honeycode
            
             Amazon Honeycode is a fully managed service that allows you to quickly build mobile
             and web apps for teams—without programming. Build Honeycode apps for managing almost
             anything, like projects, customers, operations, approvals, resources, and even your
             team.
             </summary>
        </member>
        <member name="P:Amazon.Honeycode.AmazonHoneycodeClient.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.Honeycode.AmazonHoneycodeClient.#ctor">
             <summary>
             Constructs AmazonHoneycodeClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.Honeycode.AmazonHoneycodeClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonHoneycodeClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.Honeycode.AmazonHoneycodeClient.#ctor(Amazon.Honeycode.AmazonHoneycodeConfig)">
             <summary>
             Constructs AmazonHoneycodeClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonHoneycodeClient Configuration Object</param>
        </member>
        <member name="M:Amazon.Honeycode.AmazonHoneycodeClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonHoneycodeClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.Honeycode.AmazonHoneycodeClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonHoneycodeClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.Honeycode.AmazonHoneycodeClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.Honeycode.AmazonHoneycodeConfig)">
            <summary>
            Constructs AmazonHoneycodeClient with AWS Credentials and an
            AmazonHoneycodeClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonHoneycodeClient Configuration Object</param>
        </member>
        <member name="M:Amazon.Honeycode.AmazonHoneycodeClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonHoneycodeClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.Honeycode.AmazonHoneycodeClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonHoneycodeClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.Honeycode.AmazonHoneycodeClient.#ctor(System.String,System.String,Amazon.Honeycode.AmazonHoneycodeConfig)">
            <summary>
            Constructs AmazonHoneycodeClient with AWS Access Key ID, AWS Secret Key and an
            AmazonHoneycodeClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonHoneycodeClient Configuration Object</param>
        </member>
        <member name="M:Amazon.Honeycode.AmazonHoneycodeClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonHoneycodeClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.Honeycode.AmazonHoneycodeClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonHoneycodeClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.Honeycode.AmazonHoneycodeClient.#ctor(System.String,System.String,System.String,Amazon.Honeycode.AmazonHoneycodeConfig)">
            <summary>
            Constructs AmazonHoneycodeClient with AWS Access Key ID, AWS Secret Key and an
            AmazonHoneycodeClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonHoneycodeClient Configuration Object</param>
        </member>
        <member name="M:Amazon.Honeycode.AmazonHoneycodeClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="P:Amazon.Honeycode.AmazonHoneycodeClient.ServiceMetadata">
            <summary>
            Capture metadata for the service.
            </summary>
        </member>
        <member name="M:Amazon.Honeycode.AmazonHoneycodeClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.Honeycode.AmazonHoneycodeClient.BatchCreateTableRows(Amazon.Honeycode.Model.BatchCreateTableRowsRequest)">
            <summary>
            The BatchCreateTableRows API allows you to create one or more rows at the end of
            a table in a workbook. The API allows you to specify the values to set in some or
            all of the columns in the new rows. 
            
             
            <para>
             If a column is not explicitly set in a specific row, then the column level formula
            specified in the table will be applied to the new row. If there is no column level
            formula but the last row of the table has a formula, then that formula will be copied
            down to the new row. If there is no column level formula and no formula in the last
            row of the table, then that column will be left blank for the new rows. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the BatchCreateTableRows service method.</param>
            
            <returns>The response from the BatchCreateTableRows service method, as returned by Honeycode.</returns>
            <exception cref="T:Amazon.Honeycode.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Check that the workbook
            is owned by you and your IAM policy allows access to the resource in the request.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.InternalServerException">
            There were unexpected errors from the server.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.RequestTimeoutException">
            The request timed out.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ResourceNotFoundException">
            A Workbook, Table, App, Screen or Screen Automation was not found with the given ID.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ServiceQuotaExceededException">
            The request caused service quota to be breached.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ServiceUnavailableException">
            Remote service is unreachable.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ThrottlingException">
            Tps(transactions per second) rate reached.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ValidationException">
            Request is invalid. The message in the response contains details on why the request
            is invalid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/honeycode-2020-03-01/BatchCreateTableRows">REST API Reference for BatchCreateTableRows Operation</seealso>
        </member>
        <member name="M:Amazon.Honeycode.AmazonHoneycodeClient.BatchCreateTableRowsAsync(Amazon.Honeycode.Model.BatchCreateTableRowsRequest,System.Threading.CancellationToken)">
            <summary>
            The BatchCreateTableRows API allows you to create one or more rows at the end of
            a table in a workbook. The API allows you to specify the values to set in some or
            all of the columns in the new rows. 
            
             
            <para>
             If a column is not explicitly set in a specific row, then the column level formula
            specified in the table will be applied to the new row. If there is no column level
            formula but the last row of the table has a formula, then that formula will be copied
            down to the new row. If there is no column level formula and no formula in the last
            row of the table, then that column will be left blank for the new rows. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the BatchCreateTableRows service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the BatchCreateTableRows service method, as returned by Honeycode.</returns>
            <exception cref="T:Amazon.Honeycode.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Check that the workbook
            is owned by you and your IAM policy allows access to the resource in the request.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.InternalServerException">
            There were unexpected errors from the server.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.RequestTimeoutException">
            The request timed out.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ResourceNotFoundException">
            A Workbook, Table, App, Screen or Screen Automation was not found with the given ID.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ServiceQuotaExceededException">
            The request caused service quota to be breached.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ServiceUnavailableException">
            Remote service is unreachable.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ThrottlingException">
            Tps(transactions per second) rate reached.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ValidationException">
            Request is invalid. The message in the response contains details on why the request
            is invalid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/honeycode-2020-03-01/BatchCreateTableRows">REST API Reference for BatchCreateTableRows Operation</seealso>
        </member>
        <member name="M:Amazon.Honeycode.AmazonHoneycodeClient.BatchDeleteTableRows(Amazon.Honeycode.Model.BatchDeleteTableRowsRequest)">
            <summary>
            The BatchDeleteTableRows API allows you to delete one or more rows from a table in
            a workbook. You need to specify the ids of the rows that you want to delete from the
            table.
            </summary>
            <param name="request">Container for the necessary parameters to execute the BatchDeleteTableRows service method.</param>
            
            <returns>The response from the BatchDeleteTableRows service method, as returned by Honeycode.</returns>
            <exception cref="T:Amazon.Honeycode.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Check that the workbook
            is owned by you and your IAM policy allows access to the resource in the request.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.InternalServerException">
            There were unexpected errors from the server.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.RequestTimeoutException">
            The request timed out.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ResourceNotFoundException">
            A Workbook, Table, App, Screen or Screen Automation was not found with the given ID.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ServiceUnavailableException">
            Remote service is unreachable.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ThrottlingException">
            Tps(transactions per second) rate reached.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ValidationException">
            Request is invalid. The message in the response contains details on why the request
            is invalid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/honeycode-2020-03-01/BatchDeleteTableRows">REST API Reference for BatchDeleteTableRows Operation</seealso>
        </member>
        <member name="M:Amazon.Honeycode.AmazonHoneycodeClient.BatchDeleteTableRowsAsync(Amazon.Honeycode.Model.BatchDeleteTableRowsRequest,System.Threading.CancellationToken)">
            <summary>
            The BatchDeleteTableRows API allows you to delete one or more rows from a table in
            a workbook. You need to specify the ids of the rows that you want to delete from the
            table.
            </summary>
            <param name="request">Container for the necessary parameters to execute the BatchDeleteTableRows service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the BatchDeleteTableRows service method, as returned by Honeycode.</returns>
            <exception cref="T:Amazon.Honeycode.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Check that the workbook
            is owned by you and your IAM policy allows access to the resource in the request.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.InternalServerException">
            There were unexpected errors from the server.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.RequestTimeoutException">
            The request timed out.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ResourceNotFoundException">
            A Workbook, Table, App, Screen or Screen Automation was not found with the given ID.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ServiceUnavailableException">
            Remote service is unreachable.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ThrottlingException">
            Tps(transactions per second) rate reached.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ValidationException">
            Request is invalid. The message in the response contains details on why the request
            is invalid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/honeycode-2020-03-01/BatchDeleteTableRows">REST API Reference for BatchDeleteTableRows Operation</seealso>
        </member>
        <member name="M:Amazon.Honeycode.AmazonHoneycodeClient.BatchUpdateTableRows(Amazon.Honeycode.Model.BatchUpdateTableRowsRequest)">
            <summary>
            The BatchUpdateTableRows API allows you to update one or more rows in a table in
            a workbook. 
            
             
            <para>
             You can specify the values to set in some or all of the columns in the table for
            the specified rows. If a column is not explicitly specified in a particular row, then
            that column will not be updated for that row. To clear out the data in a specific
            cell, you need to set the value as an empty string (""). 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the BatchUpdateTableRows service method.</param>
            
            <returns>The response from the BatchUpdateTableRows service method, as returned by Honeycode.</returns>
            <exception cref="T:Amazon.Honeycode.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Check that the workbook
            is owned by you and your IAM policy allows access to the resource in the request.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.InternalServerException">
            There were unexpected errors from the server.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.RequestTimeoutException">
            The request timed out.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ResourceNotFoundException">
            A Workbook, Table, App, Screen or Screen Automation was not found with the given ID.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ServiceUnavailableException">
            Remote service is unreachable.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ThrottlingException">
            Tps(transactions per second) rate reached.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ValidationException">
            Request is invalid. The message in the response contains details on why the request
            is invalid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/honeycode-2020-03-01/BatchUpdateTableRows">REST API Reference for BatchUpdateTableRows Operation</seealso>
        </member>
        <member name="M:Amazon.Honeycode.AmazonHoneycodeClient.BatchUpdateTableRowsAsync(Amazon.Honeycode.Model.BatchUpdateTableRowsRequest,System.Threading.CancellationToken)">
            <summary>
            The BatchUpdateTableRows API allows you to update one or more rows in a table in
            a workbook. 
            
             
            <para>
             You can specify the values to set in some or all of the columns in the table for
            the specified rows. If a column is not explicitly specified in a particular row, then
            that column will not be updated for that row. To clear out the data in a specific
            cell, you need to set the value as an empty string (""). 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the BatchUpdateTableRows service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the BatchUpdateTableRows service method, as returned by Honeycode.</returns>
            <exception cref="T:Amazon.Honeycode.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Check that the workbook
            is owned by you and your IAM policy allows access to the resource in the request.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.InternalServerException">
            There were unexpected errors from the server.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.RequestTimeoutException">
            The request timed out.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ResourceNotFoundException">
            A Workbook, Table, App, Screen or Screen Automation was not found with the given ID.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ServiceUnavailableException">
            Remote service is unreachable.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ThrottlingException">
            Tps(transactions per second) rate reached.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ValidationException">
            Request is invalid. The message in the response contains details on why the request
            is invalid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/honeycode-2020-03-01/BatchUpdateTableRows">REST API Reference for BatchUpdateTableRows Operation</seealso>
        </member>
        <member name="M:Amazon.Honeycode.AmazonHoneycodeClient.BatchUpsertTableRows(Amazon.Honeycode.Model.BatchUpsertTableRowsRequest)">
            <summary>
            The BatchUpsertTableRows API allows you to upsert one or more rows in a table. The
            upsert operation takes a filter expression as input and evaluates it to find matching
            rows on the destination table. If matching rows are found, it will update the cells
            in the matching rows to new values specified in the request. If no matching rows are
            found, a new row is added at the end of the table and the cells in that row are set
            to the new values specified in the request. 
            
             
            <para>
             You can specify the values to set in some or all of the columns in the table for
            the matching or newly appended rows. If a column is not explicitly specified for a
            particular row, then that column will not be updated for that row. To clear out the
            data in a specific cell, you need to set the value as an empty string (""). 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the BatchUpsertTableRows service method.</param>
            
            <returns>The response from the BatchUpsertTableRows service method, as returned by Honeycode.</returns>
            <exception cref="T:Amazon.Honeycode.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Check that the workbook
            is owned by you and your IAM policy allows access to the resource in the request.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.InternalServerException">
            There were unexpected errors from the server.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.RequestTimeoutException">
            The request timed out.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ResourceNotFoundException">
            A Workbook, Table, App, Screen or Screen Automation was not found with the given ID.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ServiceQuotaExceededException">
            The request caused service quota to be breached.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ServiceUnavailableException">
            Remote service is unreachable.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ThrottlingException">
            Tps(transactions per second) rate reached.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ValidationException">
            Request is invalid. The message in the response contains details on why the request
            is invalid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/honeycode-2020-03-01/BatchUpsertTableRows">REST API Reference for BatchUpsertTableRows Operation</seealso>
        </member>
        <member name="M:Amazon.Honeycode.AmazonHoneycodeClient.BatchUpsertTableRowsAsync(Amazon.Honeycode.Model.BatchUpsertTableRowsRequest,System.Threading.CancellationToken)">
            <summary>
            The BatchUpsertTableRows API allows you to upsert one or more rows in a table. The
            upsert operation takes a filter expression as input and evaluates it to find matching
            rows on the destination table. If matching rows are found, it will update the cells
            in the matching rows to new values specified in the request. If no matching rows are
            found, a new row is added at the end of the table and the cells in that row are set
            to the new values specified in the request. 
            
             
            <para>
             You can specify the values to set in some or all of the columns in the table for
            the matching or newly appended rows. If a column is not explicitly specified for a
            particular row, then that column will not be updated for that row. To clear out the
            data in a specific cell, you need to set the value as an empty string (""). 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the BatchUpsertTableRows service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the BatchUpsertTableRows service method, as returned by Honeycode.</returns>
            <exception cref="T:Amazon.Honeycode.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Check that the workbook
            is owned by you and your IAM policy allows access to the resource in the request.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.InternalServerException">
            There were unexpected errors from the server.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.RequestTimeoutException">
            The request timed out.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ResourceNotFoundException">
            A Workbook, Table, App, Screen or Screen Automation was not found with the given ID.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ServiceQuotaExceededException">
            The request caused service quota to be breached.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ServiceUnavailableException">
            Remote service is unreachable.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ThrottlingException">
            Tps(transactions per second) rate reached.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ValidationException">
            Request is invalid. The message in the response contains details on why the request
            is invalid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/honeycode-2020-03-01/BatchUpsertTableRows">REST API Reference for BatchUpsertTableRows Operation</seealso>
        </member>
        <member name="M:Amazon.Honeycode.AmazonHoneycodeClient.DescribeTableDataImportJob(Amazon.Honeycode.Model.DescribeTableDataImportJobRequest)">
            <summary>
            The DescribeTableDataImportJob API allows you to retrieve the status and details
            of a table data import job.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeTableDataImportJob service method.</param>
            
            <returns>The response from the DescribeTableDataImportJob service method, as returned by Honeycode.</returns>
            <exception cref="T:Amazon.Honeycode.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Check that the workbook
            is owned by you and your IAM policy allows access to the resource in the request.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.InternalServerException">
            There were unexpected errors from the server.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ResourceNotFoundException">
            A Workbook, Table, App, Screen or Screen Automation was not found with the given ID.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ServiceUnavailableException">
            Remote service is unreachable.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ThrottlingException">
            Tps(transactions per second) rate reached.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ValidationException">
            Request is invalid. The message in the response contains details on why the request
            is invalid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/honeycode-2020-03-01/DescribeTableDataImportJob">REST API Reference for DescribeTableDataImportJob Operation</seealso>
        </member>
        <member name="M:Amazon.Honeycode.AmazonHoneycodeClient.DescribeTableDataImportJobAsync(Amazon.Honeycode.Model.DescribeTableDataImportJobRequest,System.Threading.CancellationToken)">
            <summary>
            The DescribeTableDataImportJob API allows you to retrieve the status and details
            of a table data import job.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeTableDataImportJob service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeTableDataImportJob service method, as returned by Honeycode.</returns>
            <exception cref="T:Amazon.Honeycode.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Check that the workbook
            is owned by you and your IAM policy allows access to the resource in the request.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.InternalServerException">
            There were unexpected errors from the server.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ResourceNotFoundException">
            A Workbook, Table, App, Screen or Screen Automation was not found with the given ID.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ServiceUnavailableException">
            Remote service is unreachable.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ThrottlingException">
            Tps(transactions per second) rate reached.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ValidationException">
            Request is invalid. The message in the response contains details on why the request
            is invalid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/honeycode-2020-03-01/DescribeTableDataImportJob">REST API Reference for DescribeTableDataImportJob Operation</seealso>
        </member>
        <member name="M:Amazon.Honeycode.AmazonHoneycodeClient.GetScreenData(Amazon.Honeycode.Model.GetScreenDataRequest)">
            <summary>
            The GetScreenData API allows retrieval of data from a screen in a Honeycode app.
            The API allows setting local variables in the screen to filter, sort or otherwise
            affect what will be displayed on the screen.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetScreenData service method.</param>
            
            <returns>The response from the GetScreenData service method, as returned by Honeycode.</returns>
            <exception cref="T:Amazon.Honeycode.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Check that the workbook
            is owned by you and your IAM policy allows access to the resource in the request.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.InternalServerException">
            There were unexpected errors from the server.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.RequestTimeoutException">
            The request timed out.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ResourceNotFoundException">
            A Workbook, Table, App, Screen or Screen Automation was not found with the given ID.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ServiceUnavailableException">
            Remote service is unreachable.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ThrottlingException">
            Tps(transactions per second) rate reached.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ValidationException">
            Request is invalid. The message in the response contains details on why the request
            is invalid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/honeycode-2020-03-01/GetScreenData">REST API Reference for GetScreenData Operation</seealso>
        </member>
        <member name="M:Amazon.Honeycode.AmazonHoneycodeClient.GetScreenDataAsync(Amazon.Honeycode.Model.GetScreenDataRequest,System.Threading.CancellationToken)">
            <summary>
            The GetScreenData API allows retrieval of data from a screen in a Honeycode app.
            The API allows setting local variables in the screen to filter, sort or otherwise
            affect what will be displayed on the screen.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetScreenData service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetScreenData service method, as returned by Honeycode.</returns>
            <exception cref="T:Amazon.Honeycode.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Check that the workbook
            is owned by you and your IAM policy allows access to the resource in the request.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.InternalServerException">
            There were unexpected errors from the server.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.RequestTimeoutException">
            The request timed out.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ResourceNotFoundException">
            A Workbook, Table, App, Screen or Screen Automation was not found with the given ID.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ServiceUnavailableException">
            Remote service is unreachable.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ThrottlingException">
            Tps(transactions per second) rate reached.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ValidationException">
            Request is invalid. The message in the response contains details on why the request
            is invalid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/honeycode-2020-03-01/GetScreenData">REST API Reference for GetScreenData Operation</seealso>
        </member>
        <member name="M:Amazon.Honeycode.AmazonHoneycodeClient.InvokeScreenAutomation(Amazon.Honeycode.Model.InvokeScreenAutomationRequest)">
            <summary>
            The InvokeScreenAutomation API allows invoking an action defined in a screen in a
            Honeycode app. The API allows setting local variables, which can then be used in the
            automation being invoked. This allows automating the Honeycode app interactions to
            write, update or delete data in the workbook.
            </summary>
            <param name="request">Container for the necessary parameters to execute the InvokeScreenAutomation service method.</param>
            
            <returns>The response from the InvokeScreenAutomation service method, as returned by Honeycode.</returns>
            <exception cref="T:Amazon.Honeycode.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Check that the workbook
            is owned by you and your IAM policy allows access to the resource in the request.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.AutomationExecutionException">
            The automation execution did not end successfully.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.AutomationExecutionTimeoutException">
            The automation execution timed out.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.InternalServerException">
            There were unexpected errors from the server.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.RequestTimeoutException">
            The request timed out.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ResourceNotFoundException">
            A Workbook, Table, App, Screen or Screen Automation was not found with the given ID.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ServiceUnavailableException">
            Remote service is unreachable.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ThrottlingException">
            Tps(transactions per second) rate reached.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ValidationException">
            Request is invalid. The message in the response contains details on why the request
            is invalid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/honeycode-2020-03-01/InvokeScreenAutomation">REST API Reference for InvokeScreenAutomation Operation</seealso>
        </member>
        <member name="M:Amazon.Honeycode.AmazonHoneycodeClient.InvokeScreenAutomationAsync(Amazon.Honeycode.Model.InvokeScreenAutomationRequest,System.Threading.CancellationToken)">
            <summary>
            The InvokeScreenAutomation API allows invoking an action defined in a screen in a
            Honeycode app. The API allows setting local variables, which can then be used in the
            automation being invoked. This allows automating the Honeycode app interactions to
            write, update or delete data in the workbook.
            </summary>
            <param name="request">Container for the necessary parameters to execute the InvokeScreenAutomation service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the InvokeScreenAutomation service method, as returned by Honeycode.</returns>
            <exception cref="T:Amazon.Honeycode.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Check that the workbook
            is owned by you and your IAM policy allows access to the resource in the request.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.AutomationExecutionException">
            The automation execution did not end successfully.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.AutomationExecutionTimeoutException">
            The automation execution timed out.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.InternalServerException">
            There were unexpected errors from the server.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.RequestTimeoutException">
            The request timed out.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ResourceNotFoundException">
            A Workbook, Table, App, Screen or Screen Automation was not found with the given ID.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ServiceUnavailableException">
            Remote service is unreachable.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ThrottlingException">
            Tps(transactions per second) rate reached.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ValidationException">
            Request is invalid. The message in the response contains details on why the request
            is invalid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/honeycode-2020-03-01/InvokeScreenAutomation">REST API Reference for InvokeScreenAutomation Operation</seealso>
        </member>
        <member name="M:Amazon.Honeycode.AmazonHoneycodeClient.ListTableColumns(Amazon.Honeycode.Model.ListTableColumnsRequest)">
            <summary>
            The ListTableColumns API allows you to retrieve a list of all the columns in a table
            in a workbook.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTableColumns service method.</param>
            
            <returns>The response from the ListTableColumns service method, as returned by Honeycode.</returns>
            <exception cref="T:Amazon.Honeycode.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Check that the workbook
            is owned by you and your IAM policy allows access to the resource in the request.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.InternalServerException">
            There were unexpected errors from the server.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.RequestTimeoutException">
            The request timed out.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ResourceNotFoundException">
            A Workbook, Table, App, Screen or Screen Automation was not found with the given ID.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ServiceUnavailableException">
            Remote service is unreachable.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ThrottlingException">
            Tps(transactions per second) rate reached.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ValidationException">
            Request is invalid. The message in the response contains details on why the request
            is invalid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/honeycode-2020-03-01/ListTableColumns">REST API Reference for ListTableColumns Operation</seealso>
        </member>
        <member name="M:Amazon.Honeycode.AmazonHoneycodeClient.ListTableColumnsAsync(Amazon.Honeycode.Model.ListTableColumnsRequest,System.Threading.CancellationToken)">
            <summary>
            The ListTableColumns API allows you to retrieve a list of all the columns in a table
            in a workbook.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTableColumns service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTableColumns service method, as returned by Honeycode.</returns>
            <exception cref="T:Amazon.Honeycode.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Check that the workbook
            is owned by you and your IAM policy allows access to the resource in the request.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.InternalServerException">
            There were unexpected errors from the server.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.RequestTimeoutException">
            The request timed out.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ResourceNotFoundException">
            A Workbook, Table, App, Screen or Screen Automation was not found with the given ID.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ServiceUnavailableException">
            Remote service is unreachable.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ThrottlingException">
            Tps(transactions per second) rate reached.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ValidationException">
            Request is invalid. The message in the response contains details on why the request
            is invalid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/honeycode-2020-03-01/ListTableColumns">REST API Reference for ListTableColumns Operation</seealso>
        </member>
        <member name="M:Amazon.Honeycode.AmazonHoneycodeClient.ListTableRows(Amazon.Honeycode.Model.ListTableRowsRequest)">
            <summary>
            The ListTableRows API allows you to retrieve a list of all the rows in a table in
            a workbook.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTableRows service method.</param>
            
            <returns>The response from the ListTableRows service method, as returned by Honeycode.</returns>
            <exception cref="T:Amazon.Honeycode.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Check that the workbook
            is owned by you and your IAM policy allows access to the resource in the request.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.InternalServerException">
            There were unexpected errors from the server.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.RequestTimeoutException">
            The request timed out.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ResourceNotFoundException">
            A Workbook, Table, App, Screen or Screen Automation was not found with the given ID.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ServiceUnavailableException">
            Remote service is unreachable.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ThrottlingException">
            Tps(transactions per second) rate reached.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ValidationException">
            Request is invalid. The message in the response contains details on why the request
            is invalid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/honeycode-2020-03-01/ListTableRows">REST API Reference for ListTableRows Operation</seealso>
        </member>
        <member name="M:Amazon.Honeycode.AmazonHoneycodeClient.ListTableRowsAsync(Amazon.Honeycode.Model.ListTableRowsRequest,System.Threading.CancellationToken)">
            <summary>
            The ListTableRows API allows you to retrieve a list of all the rows in a table in
            a workbook.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTableRows service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTableRows service method, as returned by Honeycode.</returns>
            <exception cref="T:Amazon.Honeycode.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Check that the workbook
            is owned by you and your IAM policy allows access to the resource in the request.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.InternalServerException">
            There were unexpected errors from the server.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.RequestTimeoutException">
            The request timed out.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ResourceNotFoundException">
            A Workbook, Table, App, Screen or Screen Automation was not found with the given ID.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ServiceUnavailableException">
            Remote service is unreachable.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ThrottlingException">
            Tps(transactions per second) rate reached.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ValidationException">
            Request is invalid. The message in the response contains details on why the request
            is invalid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/honeycode-2020-03-01/ListTableRows">REST API Reference for ListTableRows Operation</seealso>
        </member>
        <member name="M:Amazon.Honeycode.AmazonHoneycodeClient.ListTables(Amazon.Honeycode.Model.ListTablesRequest)">
            <summary>
            The ListTables API allows you to retrieve a list of all the tables in a workbook.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTables service method.</param>
            
            <returns>The response from the ListTables service method, as returned by Honeycode.</returns>
            <exception cref="T:Amazon.Honeycode.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Check that the workbook
            is owned by you and your IAM policy allows access to the resource in the request.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.InternalServerException">
            There were unexpected errors from the server.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.RequestTimeoutException">
            The request timed out.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ResourceNotFoundException">
            A Workbook, Table, App, Screen or Screen Automation was not found with the given ID.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ServiceUnavailableException">
            Remote service is unreachable.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ThrottlingException">
            Tps(transactions per second) rate reached.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ValidationException">
            Request is invalid. The message in the response contains details on why the request
            is invalid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/honeycode-2020-03-01/ListTables">REST API Reference for ListTables Operation</seealso>
        </member>
        <member name="M:Amazon.Honeycode.AmazonHoneycodeClient.ListTablesAsync(Amazon.Honeycode.Model.ListTablesRequest,System.Threading.CancellationToken)">
            <summary>
            The ListTables API allows you to retrieve a list of all the tables in a workbook.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTables service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTables service method, as returned by Honeycode.</returns>
            <exception cref="T:Amazon.Honeycode.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Check that the workbook
            is owned by you and your IAM policy allows access to the resource in the request.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.InternalServerException">
            There were unexpected errors from the server.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.RequestTimeoutException">
            The request timed out.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ResourceNotFoundException">
            A Workbook, Table, App, Screen or Screen Automation was not found with the given ID.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ServiceUnavailableException">
            Remote service is unreachable.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ThrottlingException">
            Tps(transactions per second) rate reached.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ValidationException">
            Request is invalid. The message in the response contains details on why the request
            is invalid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/honeycode-2020-03-01/ListTables">REST API Reference for ListTables Operation</seealso>
        </member>
        <member name="M:Amazon.Honeycode.AmazonHoneycodeClient.QueryTableRows(Amazon.Honeycode.Model.QueryTableRowsRequest)">
            <summary>
            The QueryTableRows API allows you to use a filter formula to query for specific rows
            in a table.
            </summary>
            <param name="request">Container for the necessary parameters to execute the QueryTableRows service method.</param>
            
            <returns>The response from the QueryTableRows service method, as returned by Honeycode.</returns>
            <exception cref="T:Amazon.Honeycode.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Check that the workbook
            is owned by you and your IAM policy allows access to the resource in the request.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.InternalServerException">
            There were unexpected errors from the server.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.RequestTimeoutException">
            The request timed out.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ResourceNotFoundException">
            A Workbook, Table, App, Screen or Screen Automation was not found with the given ID.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ServiceUnavailableException">
            Remote service is unreachable.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ThrottlingException">
            Tps(transactions per second) rate reached.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ValidationException">
            Request is invalid. The message in the response contains details on why the request
            is invalid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/honeycode-2020-03-01/QueryTableRows">REST API Reference for QueryTableRows Operation</seealso>
        </member>
        <member name="M:Amazon.Honeycode.AmazonHoneycodeClient.QueryTableRowsAsync(Amazon.Honeycode.Model.QueryTableRowsRequest,System.Threading.CancellationToken)">
            <summary>
            The QueryTableRows API allows you to use a filter formula to query for specific rows
            in a table.
            </summary>
            <param name="request">Container for the necessary parameters to execute the QueryTableRows service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the QueryTableRows service method, as returned by Honeycode.</returns>
            <exception cref="T:Amazon.Honeycode.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Check that the workbook
            is owned by you and your IAM policy allows access to the resource in the request.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.InternalServerException">
            There were unexpected errors from the server.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.RequestTimeoutException">
            The request timed out.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ResourceNotFoundException">
            A Workbook, Table, App, Screen or Screen Automation was not found with the given ID.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ServiceUnavailableException">
            Remote service is unreachable.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ThrottlingException">
            Tps(transactions per second) rate reached.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ValidationException">
            Request is invalid. The message in the response contains details on why the request
            is invalid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/honeycode-2020-03-01/QueryTableRows">REST API Reference for QueryTableRows Operation</seealso>
        </member>
        <member name="M:Amazon.Honeycode.AmazonHoneycodeClient.StartTableDataImportJob(Amazon.Honeycode.Model.StartTableDataImportJobRequest)">
            <summary>
            The StartTableDataImportJob API allows you to start an import job on a table. This
            API will only return the id of the job that was started. To find out the status of
            the import request, you need to call the DescribeTableDataImportJob API.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartTableDataImportJob service method.</param>
            
            <returns>The response from the StartTableDataImportJob service method, as returned by Honeycode.</returns>
            <exception cref="T:Amazon.Honeycode.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Check that the workbook
            is owned by you and your IAM policy allows access to the resource in the request.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.InternalServerException">
            There were unexpected errors from the server.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ResourceNotFoundException">
            A Workbook, Table, App, Screen or Screen Automation was not found with the given ID.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ServiceUnavailableException">
            Remote service is unreachable.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ThrottlingException">
            Tps(transactions per second) rate reached.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ValidationException">
            Request is invalid. The message in the response contains details on why the request
            is invalid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/honeycode-2020-03-01/StartTableDataImportJob">REST API Reference for StartTableDataImportJob Operation</seealso>
        </member>
        <member name="M:Amazon.Honeycode.AmazonHoneycodeClient.StartTableDataImportJobAsync(Amazon.Honeycode.Model.StartTableDataImportJobRequest,System.Threading.CancellationToken)">
            <summary>
            The StartTableDataImportJob API allows you to start an import job on a table. This
            API will only return the id of the job that was started. To find out the status of
            the import request, you need to call the DescribeTableDataImportJob API.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartTableDataImportJob service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartTableDataImportJob service method, as returned by Honeycode.</returns>
            <exception cref="T:Amazon.Honeycode.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Check that the workbook
            is owned by you and your IAM policy allows access to the resource in the request.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.InternalServerException">
            There were unexpected errors from the server.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ResourceNotFoundException">
            A Workbook, Table, App, Screen or Screen Automation was not found with the given ID.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ServiceUnavailableException">
            Remote service is unreachable.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ThrottlingException">
            Tps(transactions per second) rate reached.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ValidationException">
            Request is invalid. The message in the response contains details on why the request
            is invalid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/honeycode-2020-03-01/StartTableDataImportJob">REST API Reference for StartTableDataImportJob Operation</seealso>
        </member>
        <member name="T:Amazon.Honeycode.IAmazonHoneycode">
             <summary>
             Interface for accessing Honeycode
            
             Amazon Honeycode is a fully managed service that allows you to quickly build mobile
             and web apps for teams—without programming. Build Honeycode apps for managing almost
             anything, like projects, customers, operations, approvals, resources, and even your
             team.
             </summary>
        </member>
        <member name="P:Amazon.Honeycode.IAmazonHoneycode.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.Honeycode.IAmazonHoneycode.BatchCreateTableRows(Amazon.Honeycode.Model.BatchCreateTableRowsRequest)">
            <summary>
            The BatchCreateTableRows API allows you to create one or more rows at the end of
            a table in a workbook. The API allows you to specify the values to set in some or
            all of the columns in the new rows. 
            
             
            <para>
             If a column is not explicitly set in a specific row, then the column level formula
            specified in the table will be applied to the new row. If there is no column level
            formula but the last row of the table has a formula, then that formula will be copied
            down to the new row. If there is no column level formula and no formula in the last
            row of the table, then that column will be left blank for the new rows. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the BatchCreateTableRows service method.</param>
            
            <returns>The response from the BatchCreateTableRows service method, as returned by Honeycode.</returns>
            <exception cref="T:Amazon.Honeycode.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Check that the workbook
            is owned by you and your IAM policy allows access to the resource in the request.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.InternalServerException">
            There were unexpected errors from the server.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.RequestTimeoutException">
            The request timed out.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ResourceNotFoundException">
            A Workbook, Table, App, Screen or Screen Automation was not found with the given ID.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ServiceQuotaExceededException">
            The request caused service quota to be breached.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ServiceUnavailableException">
            Remote service is unreachable.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ThrottlingException">
            Tps(transactions per second) rate reached.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ValidationException">
            Request is invalid. The message in the response contains details on why the request
            is invalid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/honeycode-2020-03-01/BatchCreateTableRows">REST API Reference for BatchCreateTableRows Operation</seealso>
        </member>
        <member name="M:Amazon.Honeycode.IAmazonHoneycode.BatchCreateTableRowsAsync(Amazon.Honeycode.Model.BatchCreateTableRowsRequest,System.Threading.CancellationToken)">
            <summary>
            The BatchCreateTableRows API allows you to create one or more rows at the end of
            a table in a workbook. The API allows you to specify the values to set in some or
            all of the columns in the new rows. 
            
             
            <para>
             If a column is not explicitly set in a specific row, then the column level formula
            specified in the table will be applied to the new row. If there is no column level
            formula but the last row of the table has a formula, then that formula will be copied
            down to the new row. If there is no column level formula and no formula in the last
            row of the table, then that column will be left blank for the new rows. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the BatchCreateTableRows service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the BatchCreateTableRows service method, as returned by Honeycode.</returns>
            <exception cref="T:Amazon.Honeycode.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Check that the workbook
            is owned by you and your IAM policy allows access to the resource in the request.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.InternalServerException">
            There were unexpected errors from the server.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.RequestTimeoutException">
            The request timed out.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ResourceNotFoundException">
            A Workbook, Table, App, Screen or Screen Automation was not found with the given ID.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ServiceQuotaExceededException">
            The request caused service quota to be breached.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ServiceUnavailableException">
            Remote service is unreachable.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ThrottlingException">
            Tps(transactions per second) rate reached.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ValidationException">
            Request is invalid. The message in the response contains details on why the request
            is invalid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/honeycode-2020-03-01/BatchCreateTableRows">REST API Reference for BatchCreateTableRows Operation</seealso>
        </member>
        <member name="M:Amazon.Honeycode.IAmazonHoneycode.BatchDeleteTableRows(Amazon.Honeycode.Model.BatchDeleteTableRowsRequest)">
            <summary>
            The BatchDeleteTableRows API allows you to delete one or more rows from a table in
            a workbook. You need to specify the ids of the rows that you want to delete from the
            table.
            </summary>
            <param name="request">Container for the necessary parameters to execute the BatchDeleteTableRows service method.</param>
            
            <returns>The response from the BatchDeleteTableRows service method, as returned by Honeycode.</returns>
            <exception cref="T:Amazon.Honeycode.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Check that the workbook
            is owned by you and your IAM policy allows access to the resource in the request.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.InternalServerException">
            There were unexpected errors from the server.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.RequestTimeoutException">
            The request timed out.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ResourceNotFoundException">
            A Workbook, Table, App, Screen or Screen Automation was not found with the given ID.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ServiceUnavailableException">
            Remote service is unreachable.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ThrottlingException">
            Tps(transactions per second) rate reached.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ValidationException">
            Request is invalid. The message in the response contains details on why the request
            is invalid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/honeycode-2020-03-01/BatchDeleteTableRows">REST API Reference for BatchDeleteTableRows Operation</seealso>
        </member>
        <member name="M:Amazon.Honeycode.IAmazonHoneycode.BatchDeleteTableRowsAsync(Amazon.Honeycode.Model.BatchDeleteTableRowsRequest,System.Threading.CancellationToken)">
            <summary>
            The BatchDeleteTableRows API allows you to delete one or more rows from a table in
            a workbook. You need to specify the ids of the rows that you want to delete from the
            table.
            </summary>
            <param name="request">Container for the necessary parameters to execute the BatchDeleteTableRows service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the BatchDeleteTableRows service method, as returned by Honeycode.</returns>
            <exception cref="T:Amazon.Honeycode.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Check that the workbook
            is owned by you and your IAM policy allows access to the resource in the request.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.InternalServerException">
            There were unexpected errors from the server.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.RequestTimeoutException">
            The request timed out.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ResourceNotFoundException">
            A Workbook, Table, App, Screen or Screen Automation was not found with the given ID.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ServiceUnavailableException">
            Remote service is unreachable.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ThrottlingException">
            Tps(transactions per second) rate reached.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ValidationException">
            Request is invalid. The message in the response contains details on why the request
            is invalid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/honeycode-2020-03-01/BatchDeleteTableRows">REST API Reference for BatchDeleteTableRows Operation</seealso>
        </member>
        <member name="M:Amazon.Honeycode.IAmazonHoneycode.BatchUpdateTableRows(Amazon.Honeycode.Model.BatchUpdateTableRowsRequest)">
            <summary>
            The BatchUpdateTableRows API allows you to update one or more rows in a table in
            a workbook. 
            
             
            <para>
             You can specify the values to set in some or all of the columns in the table for
            the specified rows. If a column is not explicitly specified in a particular row, then
            that column will not be updated for that row. To clear out the data in a specific
            cell, you need to set the value as an empty string (""). 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the BatchUpdateTableRows service method.</param>
            
            <returns>The response from the BatchUpdateTableRows service method, as returned by Honeycode.</returns>
            <exception cref="T:Amazon.Honeycode.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Check that the workbook
            is owned by you and your IAM policy allows access to the resource in the request.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.InternalServerException">
            There were unexpected errors from the server.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.RequestTimeoutException">
            The request timed out.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ResourceNotFoundException">
            A Workbook, Table, App, Screen or Screen Automation was not found with the given ID.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ServiceUnavailableException">
            Remote service is unreachable.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ThrottlingException">
            Tps(transactions per second) rate reached.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ValidationException">
            Request is invalid. The message in the response contains details on why the request
            is invalid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/honeycode-2020-03-01/BatchUpdateTableRows">REST API Reference for BatchUpdateTableRows Operation</seealso>
        </member>
        <member name="M:Amazon.Honeycode.IAmazonHoneycode.BatchUpdateTableRowsAsync(Amazon.Honeycode.Model.BatchUpdateTableRowsRequest,System.Threading.CancellationToken)">
            <summary>
            The BatchUpdateTableRows API allows you to update one or more rows in a table in
            a workbook. 
            
             
            <para>
             You can specify the values to set in some or all of the columns in the table for
            the specified rows. If a column is not explicitly specified in a particular row, then
            that column will not be updated for that row. To clear out the data in a specific
            cell, you need to set the value as an empty string (""). 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the BatchUpdateTableRows service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the BatchUpdateTableRows service method, as returned by Honeycode.</returns>
            <exception cref="T:Amazon.Honeycode.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Check that the workbook
            is owned by you and your IAM policy allows access to the resource in the request.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.InternalServerException">
            There were unexpected errors from the server.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.RequestTimeoutException">
            The request timed out.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ResourceNotFoundException">
            A Workbook, Table, App, Screen or Screen Automation was not found with the given ID.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ServiceUnavailableException">
            Remote service is unreachable.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ThrottlingException">
            Tps(transactions per second) rate reached.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ValidationException">
            Request is invalid. The message in the response contains details on why the request
            is invalid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/honeycode-2020-03-01/BatchUpdateTableRows">REST API Reference for BatchUpdateTableRows Operation</seealso>
        </member>
        <member name="M:Amazon.Honeycode.IAmazonHoneycode.BatchUpsertTableRows(Amazon.Honeycode.Model.BatchUpsertTableRowsRequest)">
            <summary>
            The BatchUpsertTableRows API allows you to upsert one or more rows in a table. The
            upsert operation takes a filter expression as input and evaluates it to find matching
            rows on the destination table. If matching rows are found, it will update the cells
            in the matching rows to new values specified in the request. If no matching rows are
            found, a new row is added at the end of the table and the cells in that row are set
            to the new values specified in the request. 
            
             
            <para>
             You can specify the values to set in some or all of the columns in the table for
            the matching or newly appended rows. If a column is not explicitly specified for a
            particular row, then that column will not be updated for that row. To clear out the
            data in a specific cell, you need to set the value as an empty string (""). 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the BatchUpsertTableRows service method.</param>
            
            <returns>The response from the BatchUpsertTableRows service method, as returned by Honeycode.</returns>
            <exception cref="T:Amazon.Honeycode.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Check that the workbook
            is owned by you and your IAM policy allows access to the resource in the request.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.InternalServerException">
            There were unexpected errors from the server.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.RequestTimeoutException">
            The request timed out.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ResourceNotFoundException">
            A Workbook, Table, App, Screen or Screen Automation was not found with the given ID.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ServiceQuotaExceededException">
            The request caused service quota to be breached.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ServiceUnavailableException">
            Remote service is unreachable.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ThrottlingException">
            Tps(transactions per second) rate reached.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ValidationException">
            Request is invalid. The message in the response contains details on why the request
            is invalid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/honeycode-2020-03-01/BatchUpsertTableRows">REST API Reference for BatchUpsertTableRows Operation</seealso>
        </member>
        <member name="M:Amazon.Honeycode.IAmazonHoneycode.BatchUpsertTableRowsAsync(Amazon.Honeycode.Model.BatchUpsertTableRowsRequest,System.Threading.CancellationToken)">
            <summary>
            The BatchUpsertTableRows API allows you to upsert one or more rows in a table. The
            upsert operation takes a filter expression as input and evaluates it to find matching
            rows on the destination table. If matching rows are found, it will update the cells
            in the matching rows to new values specified in the request. If no matching rows are
            found, a new row is added at the end of the table and the cells in that row are set
            to the new values specified in the request. 
            
             
            <para>
             You can specify the values to set in some or all of the columns in the table for
            the matching or newly appended rows. If a column is not explicitly specified for a
            particular row, then that column will not be updated for that row. To clear out the
            data in a specific cell, you need to set the value as an empty string (""). 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the BatchUpsertTableRows service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the BatchUpsertTableRows service method, as returned by Honeycode.</returns>
            <exception cref="T:Amazon.Honeycode.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Check that the workbook
            is owned by you and your IAM policy allows access to the resource in the request.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.InternalServerException">
            There were unexpected errors from the server.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.RequestTimeoutException">
            The request timed out.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ResourceNotFoundException">
            A Workbook, Table, App, Screen or Screen Automation was not found with the given ID.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ServiceQuotaExceededException">
            The request caused service quota to be breached.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ServiceUnavailableException">
            Remote service is unreachable.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ThrottlingException">
            Tps(transactions per second) rate reached.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ValidationException">
            Request is invalid. The message in the response contains details on why the request
            is invalid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/honeycode-2020-03-01/BatchUpsertTableRows">REST API Reference for BatchUpsertTableRows Operation</seealso>
        </member>
        <member name="M:Amazon.Honeycode.IAmazonHoneycode.DescribeTableDataImportJob(Amazon.Honeycode.Model.DescribeTableDataImportJobRequest)">
            <summary>
            The DescribeTableDataImportJob API allows you to retrieve the status and details
            of a table data import job.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeTableDataImportJob service method.</param>
            
            <returns>The response from the DescribeTableDataImportJob service method, as returned by Honeycode.</returns>
            <exception cref="T:Amazon.Honeycode.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Check that the workbook
            is owned by you and your IAM policy allows access to the resource in the request.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.InternalServerException">
            There were unexpected errors from the server.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ResourceNotFoundException">
            A Workbook, Table, App, Screen or Screen Automation was not found with the given ID.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ServiceUnavailableException">
            Remote service is unreachable.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ThrottlingException">
            Tps(transactions per second) rate reached.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ValidationException">
            Request is invalid. The message in the response contains details on why the request
            is invalid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/honeycode-2020-03-01/DescribeTableDataImportJob">REST API Reference for DescribeTableDataImportJob Operation</seealso>
        </member>
        <member name="M:Amazon.Honeycode.IAmazonHoneycode.DescribeTableDataImportJobAsync(Amazon.Honeycode.Model.DescribeTableDataImportJobRequest,System.Threading.CancellationToken)">
            <summary>
            The DescribeTableDataImportJob API allows you to retrieve the status and details
            of a table data import job.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeTableDataImportJob service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeTableDataImportJob service method, as returned by Honeycode.</returns>
            <exception cref="T:Amazon.Honeycode.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Check that the workbook
            is owned by you and your IAM policy allows access to the resource in the request.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.InternalServerException">
            There were unexpected errors from the server.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ResourceNotFoundException">
            A Workbook, Table, App, Screen or Screen Automation was not found with the given ID.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ServiceUnavailableException">
            Remote service is unreachable.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ThrottlingException">
            Tps(transactions per second) rate reached.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ValidationException">
            Request is invalid. The message in the response contains details on why the request
            is invalid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/honeycode-2020-03-01/DescribeTableDataImportJob">REST API Reference for DescribeTableDataImportJob Operation</seealso>
        </member>
        <member name="M:Amazon.Honeycode.IAmazonHoneycode.GetScreenData(Amazon.Honeycode.Model.GetScreenDataRequest)">
            <summary>
            The GetScreenData API allows retrieval of data from a screen in a Honeycode app.
            The API allows setting local variables in the screen to filter, sort or otherwise
            affect what will be displayed on the screen.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetScreenData service method.</param>
            
            <returns>The response from the GetScreenData service method, as returned by Honeycode.</returns>
            <exception cref="T:Amazon.Honeycode.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Check that the workbook
            is owned by you and your IAM policy allows access to the resource in the request.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.InternalServerException">
            There were unexpected errors from the server.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.RequestTimeoutException">
            The request timed out.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ResourceNotFoundException">
            A Workbook, Table, App, Screen or Screen Automation was not found with the given ID.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ServiceUnavailableException">
            Remote service is unreachable.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ThrottlingException">
            Tps(transactions per second) rate reached.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ValidationException">
            Request is invalid. The message in the response contains details on why the request
            is invalid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/honeycode-2020-03-01/GetScreenData">REST API Reference for GetScreenData Operation</seealso>
        </member>
        <member name="M:Amazon.Honeycode.IAmazonHoneycode.GetScreenDataAsync(Amazon.Honeycode.Model.GetScreenDataRequest,System.Threading.CancellationToken)">
            <summary>
            The GetScreenData API allows retrieval of data from a screen in a Honeycode app.
            The API allows setting local variables in the screen to filter, sort or otherwise
            affect what will be displayed on the screen.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetScreenData service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetScreenData service method, as returned by Honeycode.</returns>
            <exception cref="T:Amazon.Honeycode.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Check that the workbook
            is owned by you and your IAM policy allows access to the resource in the request.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.InternalServerException">
            There were unexpected errors from the server.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.RequestTimeoutException">
            The request timed out.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ResourceNotFoundException">
            A Workbook, Table, App, Screen or Screen Automation was not found with the given ID.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ServiceUnavailableException">
            Remote service is unreachable.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ThrottlingException">
            Tps(transactions per second) rate reached.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ValidationException">
            Request is invalid. The message in the response contains details on why the request
            is invalid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/honeycode-2020-03-01/GetScreenData">REST API Reference for GetScreenData Operation</seealso>
        </member>
        <member name="M:Amazon.Honeycode.IAmazonHoneycode.InvokeScreenAutomation(Amazon.Honeycode.Model.InvokeScreenAutomationRequest)">
            <summary>
            The InvokeScreenAutomation API allows invoking an action defined in a screen in a
            Honeycode app. The API allows setting local variables, which can then be used in the
            automation being invoked. This allows automating the Honeycode app interactions to
            write, update or delete data in the workbook.
            </summary>
            <param name="request">Container for the necessary parameters to execute the InvokeScreenAutomation service method.</param>
            
            <returns>The response from the InvokeScreenAutomation service method, as returned by Honeycode.</returns>
            <exception cref="T:Amazon.Honeycode.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Check that the workbook
            is owned by you and your IAM policy allows access to the resource in the request.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.AutomationExecutionException">
            The automation execution did not end successfully.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.AutomationExecutionTimeoutException">
            The automation execution timed out.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.InternalServerException">
            There were unexpected errors from the server.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.RequestTimeoutException">
            The request timed out.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ResourceNotFoundException">
            A Workbook, Table, App, Screen or Screen Automation was not found with the given ID.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ServiceUnavailableException">
            Remote service is unreachable.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ThrottlingException">
            Tps(transactions per second) rate reached.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ValidationException">
            Request is invalid. The message in the response contains details on why the request
            is invalid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/honeycode-2020-03-01/InvokeScreenAutomation">REST API Reference for InvokeScreenAutomation Operation</seealso>
        </member>
        <member name="M:Amazon.Honeycode.IAmazonHoneycode.InvokeScreenAutomationAsync(Amazon.Honeycode.Model.InvokeScreenAutomationRequest,System.Threading.CancellationToken)">
            <summary>
            The InvokeScreenAutomation API allows invoking an action defined in a screen in a
            Honeycode app. The API allows setting local variables, which can then be used in the
            automation being invoked. This allows automating the Honeycode app interactions to
            write, update or delete data in the workbook.
            </summary>
            <param name="request">Container for the necessary parameters to execute the InvokeScreenAutomation service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the InvokeScreenAutomation service method, as returned by Honeycode.</returns>
            <exception cref="T:Amazon.Honeycode.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Check that the workbook
            is owned by you and your IAM policy allows access to the resource in the request.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.AutomationExecutionException">
            The automation execution did not end successfully.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.AutomationExecutionTimeoutException">
            The automation execution timed out.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.InternalServerException">
            There were unexpected errors from the server.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.RequestTimeoutException">
            The request timed out.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ResourceNotFoundException">
            A Workbook, Table, App, Screen or Screen Automation was not found with the given ID.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ServiceUnavailableException">
            Remote service is unreachable.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ThrottlingException">
            Tps(transactions per second) rate reached.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ValidationException">
            Request is invalid. The message in the response contains details on why the request
            is invalid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/honeycode-2020-03-01/InvokeScreenAutomation">REST API Reference for InvokeScreenAutomation Operation</seealso>
        </member>
        <member name="M:Amazon.Honeycode.IAmazonHoneycode.ListTableColumns(Amazon.Honeycode.Model.ListTableColumnsRequest)">
            <summary>
            The ListTableColumns API allows you to retrieve a list of all the columns in a table
            in a workbook.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTableColumns service method.</param>
            
            <returns>The response from the ListTableColumns service method, as returned by Honeycode.</returns>
            <exception cref="T:Amazon.Honeycode.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Check that the workbook
            is owned by you and your IAM policy allows access to the resource in the request.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.InternalServerException">
            There were unexpected errors from the server.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.RequestTimeoutException">
            The request timed out.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ResourceNotFoundException">
            A Workbook, Table, App, Screen or Screen Automation was not found with the given ID.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ServiceUnavailableException">
            Remote service is unreachable.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ThrottlingException">
            Tps(transactions per second) rate reached.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ValidationException">
            Request is invalid. The message in the response contains details on why the request
            is invalid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/honeycode-2020-03-01/ListTableColumns">REST API Reference for ListTableColumns Operation</seealso>
        </member>
        <member name="M:Amazon.Honeycode.IAmazonHoneycode.ListTableColumnsAsync(Amazon.Honeycode.Model.ListTableColumnsRequest,System.Threading.CancellationToken)">
            <summary>
            The ListTableColumns API allows you to retrieve a list of all the columns in a table
            in a workbook.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTableColumns service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTableColumns service method, as returned by Honeycode.</returns>
            <exception cref="T:Amazon.Honeycode.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Check that the workbook
            is owned by you and your IAM policy allows access to the resource in the request.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.InternalServerException">
            There were unexpected errors from the server.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.RequestTimeoutException">
            The request timed out.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ResourceNotFoundException">
            A Workbook, Table, App, Screen or Screen Automation was not found with the given ID.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ServiceUnavailableException">
            Remote service is unreachable.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ThrottlingException">
            Tps(transactions per second) rate reached.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ValidationException">
            Request is invalid. The message in the response contains details on why the request
            is invalid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/honeycode-2020-03-01/ListTableColumns">REST API Reference for ListTableColumns Operation</seealso>
        </member>
        <member name="M:Amazon.Honeycode.IAmazonHoneycode.ListTableRows(Amazon.Honeycode.Model.ListTableRowsRequest)">
            <summary>
            The ListTableRows API allows you to retrieve a list of all the rows in a table in
            a workbook.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTableRows service method.</param>
            
            <returns>The response from the ListTableRows service method, as returned by Honeycode.</returns>
            <exception cref="T:Amazon.Honeycode.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Check that the workbook
            is owned by you and your IAM policy allows access to the resource in the request.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.InternalServerException">
            There were unexpected errors from the server.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.RequestTimeoutException">
            The request timed out.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ResourceNotFoundException">
            A Workbook, Table, App, Screen or Screen Automation was not found with the given ID.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ServiceUnavailableException">
            Remote service is unreachable.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ThrottlingException">
            Tps(transactions per second) rate reached.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ValidationException">
            Request is invalid. The message in the response contains details on why the request
            is invalid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/honeycode-2020-03-01/ListTableRows">REST API Reference for ListTableRows Operation</seealso>
        </member>
        <member name="M:Amazon.Honeycode.IAmazonHoneycode.ListTableRowsAsync(Amazon.Honeycode.Model.ListTableRowsRequest,System.Threading.CancellationToken)">
            <summary>
            The ListTableRows API allows you to retrieve a list of all the rows in a table in
            a workbook.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTableRows service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTableRows service method, as returned by Honeycode.</returns>
            <exception cref="T:Amazon.Honeycode.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Check that the workbook
            is owned by you and your IAM policy allows access to the resource in the request.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.InternalServerException">
            There were unexpected errors from the server.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.RequestTimeoutException">
            The request timed out.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ResourceNotFoundException">
            A Workbook, Table, App, Screen or Screen Automation was not found with the given ID.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ServiceUnavailableException">
            Remote service is unreachable.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ThrottlingException">
            Tps(transactions per second) rate reached.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ValidationException">
            Request is invalid. The message in the response contains details on why the request
            is invalid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/honeycode-2020-03-01/ListTableRows">REST API Reference for ListTableRows Operation</seealso>
        </member>
        <member name="M:Amazon.Honeycode.IAmazonHoneycode.ListTables(Amazon.Honeycode.Model.ListTablesRequest)">
            <summary>
            The ListTables API allows you to retrieve a list of all the tables in a workbook.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTables service method.</param>
            
            <returns>The response from the ListTables service method, as returned by Honeycode.</returns>
            <exception cref="T:Amazon.Honeycode.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Check that the workbook
            is owned by you and your IAM policy allows access to the resource in the request.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.InternalServerException">
            There were unexpected errors from the server.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.RequestTimeoutException">
            The request timed out.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ResourceNotFoundException">
            A Workbook, Table, App, Screen or Screen Automation was not found with the given ID.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ServiceUnavailableException">
            Remote service is unreachable.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ThrottlingException">
            Tps(transactions per second) rate reached.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ValidationException">
            Request is invalid. The message in the response contains details on why the request
            is invalid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/honeycode-2020-03-01/ListTables">REST API Reference for ListTables Operation</seealso>
        </member>
        <member name="M:Amazon.Honeycode.IAmazonHoneycode.ListTablesAsync(Amazon.Honeycode.Model.ListTablesRequest,System.Threading.CancellationToken)">
            <summary>
            The ListTables API allows you to retrieve a list of all the tables in a workbook.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTables service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTables service method, as returned by Honeycode.</returns>
            <exception cref="T:Amazon.Honeycode.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Check that the workbook
            is owned by you and your IAM policy allows access to the resource in the request.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.InternalServerException">
            There were unexpected errors from the server.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.RequestTimeoutException">
            The request timed out.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ResourceNotFoundException">
            A Workbook, Table, App, Screen or Screen Automation was not found with the given ID.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ServiceUnavailableException">
            Remote service is unreachable.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ThrottlingException">
            Tps(transactions per second) rate reached.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ValidationException">
            Request is invalid. The message in the response contains details on why the request
            is invalid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/honeycode-2020-03-01/ListTables">REST API Reference for ListTables Operation</seealso>
        </member>
        <member name="M:Amazon.Honeycode.IAmazonHoneycode.QueryTableRows(Amazon.Honeycode.Model.QueryTableRowsRequest)">
            <summary>
            The QueryTableRows API allows you to use a filter formula to query for specific rows
            in a table.
            </summary>
            <param name="request">Container for the necessary parameters to execute the QueryTableRows service method.</param>
            
            <returns>The response from the QueryTableRows service method, as returned by Honeycode.</returns>
            <exception cref="T:Amazon.Honeycode.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Check that the workbook
            is owned by you and your IAM policy allows access to the resource in the request.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.InternalServerException">
            There were unexpected errors from the server.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.RequestTimeoutException">
            The request timed out.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ResourceNotFoundException">
            A Workbook, Table, App, Screen or Screen Automation was not found with the given ID.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ServiceUnavailableException">
            Remote service is unreachable.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ThrottlingException">
            Tps(transactions per second) rate reached.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ValidationException">
            Request is invalid. The message in the response contains details on why the request
            is invalid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/honeycode-2020-03-01/QueryTableRows">REST API Reference for QueryTableRows Operation</seealso>
        </member>
        <member name="M:Amazon.Honeycode.IAmazonHoneycode.QueryTableRowsAsync(Amazon.Honeycode.Model.QueryTableRowsRequest,System.Threading.CancellationToken)">
            <summary>
            The QueryTableRows API allows you to use a filter formula to query for specific rows
            in a table.
            </summary>
            <param name="request">Container for the necessary parameters to execute the QueryTableRows service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the QueryTableRows service method, as returned by Honeycode.</returns>
            <exception cref="T:Amazon.Honeycode.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Check that the workbook
            is owned by you and your IAM policy allows access to the resource in the request.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.InternalServerException">
            There were unexpected errors from the server.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.RequestTimeoutException">
            The request timed out.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ResourceNotFoundException">
            A Workbook, Table, App, Screen or Screen Automation was not found with the given ID.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ServiceUnavailableException">
            Remote service is unreachable.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ThrottlingException">
            Tps(transactions per second) rate reached.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ValidationException">
            Request is invalid. The message in the response contains details on why the request
            is invalid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/honeycode-2020-03-01/QueryTableRows">REST API Reference for QueryTableRows Operation</seealso>
        </member>
        <member name="M:Amazon.Honeycode.IAmazonHoneycode.StartTableDataImportJob(Amazon.Honeycode.Model.StartTableDataImportJobRequest)">
            <summary>
            The StartTableDataImportJob API allows you to start an import job on a table. This
            API will only return the id of the job that was started. To find out the status of
            the import request, you need to call the DescribeTableDataImportJob API.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartTableDataImportJob service method.</param>
            
            <returns>The response from the StartTableDataImportJob service method, as returned by Honeycode.</returns>
            <exception cref="T:Amazon.Honeycode.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Check that the workbook
            is owned by you and your IAM policy allows access to the resource in the request.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.InternalServerException">
            There were unexpected errors from the server.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ResourceNotFoundException">
            A Workbook, Table, App, Screen or Screen Automation was not found with the given ID.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ServiceUnavailableException">
            Remote service is unreachable.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ThrottlingException">
            Tps(transactions per second) rate reached.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ValidationException">
            Request is invalid. The message in the response contains details on why the request
            is invalid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/honeycode-2020-03-01/StartTableDataImportJob">REST API Reference for StartTableDataImportJob Operation</seealso>
        </member>
        <member name="M:Amazon.Honeycode.IAmazonHoneycode.StartTableDataImportJobAsync(Amazon.Honeycode.Model.StartTableDataImportJobRequest,System.Threading.CancellationToken)">
            <summary>
            The StartTableDataImportJob API allows you to start an import job on a table. This
            API will only return the id of the job that was started. To find out the status of
            the import request, you need to call the DescribeTableDataImportJob API.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartTableDataImportJob service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartTableDataImportJob service method, as returned by Honeycode.</returns>
            <exception cref="T:Amazon.Honeycode.Model.AccessDeniedException">
            You do not have sufficient access to perform this action. Check that the workbook
            is owned by you and your IAM policy allows access to the resource in the request.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.InternalServerException">
            There were unexpected errors from the server.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ResourceNotFoundException">
            A Workbook, Table, App, Screen or Screen Automation was not found with the given ID.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ServiceUnavailableException">
            Remote service is unreachable.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ThrottlingException">
            Tps(transactions per second) rate reached.
            </exception>
            <exception cref="T:Amazon.Honeycode.Model.ValidationException">
            Request is invalid. The message in the response contains details on why the request
            is invalid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/honeycode-2020-03-01/StartTableDataImportJob">REST API Reference for StartTableDataImportJob Operation</seealso>
        </member>
    </members>
</doc>
