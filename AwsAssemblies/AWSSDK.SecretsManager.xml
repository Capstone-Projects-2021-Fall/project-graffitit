<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.SecretsManager</name>
    </assembly>
    <members>
        <member name="T:Amazon.SecretsManager.AmazonSecretsManagerConfig">
            <summary>
            Configuration for accessing Amazon SecretsManager service
            </summary>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.AmazonSecretsManagerConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.AmazonSecretsManagerConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.AmazonSecretsManagerConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.AmazonSecretsManagerException">
            <summary>
             Common exception for the SecretsManager service.
             </summary>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonSecretsManagerException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonSecretsManagerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonSecretsManagerException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonSecretsManagerException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonSecretsManagerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the AmazonSecretsManagerException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.SecretsManager.Internal.AmazonSecretsManagerMetadata">
            <summary>
            Service metadata for  Amazon SecretsManager service
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Internal.AmazonSecretsManagerMetadata.ServiceId">
            <summary>
            Gets the value of the Service Id.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Internal.AmazonSecretsManagerMetadata.OperationNameMapping">
            <summary>
            Gets the dictionary that gives mapping of renamed operations
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.AmazonSecretsManagerRequest">
            <summary>
            Base class for SecretsManager operation requests.
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.CancelRotateSecretRequest">
            <summary>
            Container for the parameters to the CancelRotateSecret operation.
            Disables automatic scheduled rotation and cancels the rotation of a secret if currently
            in progress.
            
             
            <para>
            To re-enable scheduled rotation, call <a>RotateSecret</a> with <code>AutomaticallyRotateAfterDays</code>
            set to a value greater than 0. This immediately rotates your secret and then enables
            the automatic schedule.
            </para>
             <note> 
            <para>
            If you cancel a rotation while in progress, it can leave the <code>VersionStage</code>
            labels in an unexpected state. Depending on the step of the rotation in progress,
            you might need to remove the staging label <code>AWSPENDING</code> from the partially
            created version, specified by the <code>VersionId</code> response value. You should
            also evaluate the partially rotated new version to see if it should be deleted, which
            you can do by removing all staging labels from the new version <code>VersionStage</code>
            field.
            </para>
             </note> 
            <para>
            To successfully start a rotation, the staging label <code>AWSPENDING</code> must be
            in one of the following states:
            </para>
             <ul> <li> 
            <para>
            Not attached to any version at all
            </para>
             </li> <li> 
            <para>
            Attached to the same version as the staging label <code>AWSCURRENT</code> 
            </para>
             </li> </ul> 
            <para>
            If the staging label <code>AWSPENDING</code> attached to a different version than
            the version with <code>AWSCURRENT</code> then the attempt to rotate fails.
            </para>
             
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:CancelRotateSecret
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To configure rotation for a secret or to manually trigger a rotation, use <a>RotateSecret</a>.
            </para>
             </li> <li> 
            <para>
            To get the rotation configuration details for a secret, use <a>DescribeSecret</a>.
            </para>
             </li> <li> 
            <para>
            To list all of the currently available secrets, use <a>ListSecrets</a>.
            </para>
             </li> <li> 
            <para>
            To list all of the versions currently associated with a secret, use <a>ListSecretVersionIds</a>.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.CancelRotateSecretRequest.SecretId">
            <summary>
            Gets and sets the property SecretId. 
            <para>
            Specifies the secret to cancel a rotation request. You can specify either the Amazon
            Resource Name (ARN) or the friendly name of the secret.
            </para>
             
            <para>
            For an ARN, we recommend that you specify a complete ARN rather than a partial ARN.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.CancelRotateSecretResponse">
            <summary>
            This is the response object from the CancelRotateSecret operation.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.CancelRotateSecretResponse.ARN">
            <summary>
            Gets and sets the property ARN. 
            <para>
            The ARN of the secret for which rotation was canceled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.CancelRotateSecretResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The friendly name of the secret for which rotation was canceled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.CancelRotateSecretResponse.VersionId">
            <summary>
            Gets and sets the property VersionId. 
            <para>
            The unique identifier of the version of the secret created during the rotation. This
            version might not be complete, and should be evaluated for possible deletion. At the
            very least, you should remove the <code>VersionStage</code> value <code>AWSPENDING</code>
            to enable this version to be deleted. Failing to clean up a cancelled rotation can
            block you from successfully starting future rotations.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.CreateSecretRequest">
            <summary>
            Container for the parameters to the CreateSecret operation.
            Creates a new secret. A secret in Secrets Manager consists of both the protected secret
            data and the important information needed to manage the secret.
            
             
            <para>
            Secrets Manager stores the encrypted secret data in one of a collection of "versions"
            associated with the secret. Each version contains a copy of the encrypted secret data.
            Each version is associated with one or more "staging labels" that identify where the
            version is in the rotation cycle. The <code>SecretVersionsToStages</code> field of
            the secret contains the mapping of staging labels to the active versions of the secret.
            Versions without a staging label are considered deprecated and not included in the
            list.
            </para>
             
            <para>
            You provide the secret data to be encrypted by putting text in either the <code>SecretString</code>
            parameter or binary data in the <code>SecretBinary</code> parameter, but not both.
            If you include <code>SecretString</code> or <code>SecretBinary</code> then Secrets
            Manager also creates an initial secret version and automatically attaches the staging
            label <code>AWSCURRENT</code> to the new version.
            </para>
             <note> <ul> <li> 
            <para>
            If you call an operation to encrypt or decrypt the <code>SecretString</code> or <code>SecretBinary</code>
            for a secret in the same account as the calling user and that secret doesn't specify
            a Amazon Web Services KMS encryption key, Secrets Manager uses the account's default
            Amazon Web Services managed customer master key (CMK) with the alias <code>aws/secretsmanager</code>.
            If this key doesn't already exist in your account then Secrets Manager creates it
            for you automatically. All users and roles in the same Amazon Web Services account
            automatically have access to use the default CMK. Note that if an Secrets Manager
            API call results in Amazon Web Services creating the account's Amazon Web Services-managed
            CMK, it can result in a one-time significant delay in returning the result.
            </para>
             </li> <li> 
            <para>
            If the secret resides in a different Amazon Web Services account from the credentials
            calling an API that requires encryption or decryption of the secret value then you
            must create and use a custom Amazon Web Services KMS CMK because you can't access
            the default CMK for the account using credentials from a different Amazon Web Services
            account. Store the ARN of the CMK in the secret when you create the secret or when
            you update it by including it in the <code>KMSKeyId</code>. If you call an API that
            must encrypt or decrypt <code>SecretString</code> or <code>SecretBinary</code> using
            credentials from a different account then the Amazon Web Services KMS key policy must
            grant cross-account access to that other account's user or role for both the kms:GenerateDataKey
            and kms:Decrypt operations.
            </para>
             </li> </ul> </note> 
            <para>
             
            </para>
             
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:CreateSecret
            </para>
             </li> <li> 
            <para>
            kms:GenerateDataKey - needed only if you use a customer-managed Amazon Web Services
            KMS key to encrypt the secret. You do not need this permission to use the account
            default Amazon Web Services managed CMK for Secrets Manager.
            </para>
             </li> <li> 
            <para>
            kms:Decrypt - needed only if you use a customer-managed Amazon Web Services KMS key
            to encrypt the secret. You do not need this permission to use the account default
            Amazon Web Services managed CMK for Secrets Manager.
            </para>
             </li> <li> 
            <para>
            secretsmanager:TagResource - needed only if you include the <code>Tags</code> parameter.
            
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To delete a secret, use <a>DeleteSecret</a>.
            </para>
             </li> <li> 
            <para>
            To modify an existing secret, use <a>UpdateSecret</a>.
            </para>
             </li> <li> 
            <para>
            To create a new version of a secret, use <a>PutSecretValue</a>.
            </para>
             </li> <li> 
            <para>
            To retrieve the encrypted secure string and secure binary values, use <a>GetSecretValue</a>.
            </para>
             </li> <li> 
            <para>
            To retrieve all other details for a secret, use <a>DescribeSecret</a>. This does not
            include the encrypted secure string and secure binary values.
            </para>
             </li> <li> 
            <para>
            To retrieve the list of secret versions associated with the current secret, use <a>DescribeSecret</a>
            and examine the <code>SecretVersionsToStages</code> response value.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.CreateSecretRequest.AddReplicaRegions">
            <summary>
            Gets and sets the property AddReplicaRegions. 
            <para>
            (Optional) Add a list of regions to replicate secrets. Secrets Manager replicates
            the KMSKeyID objects to the list of regions specified in the parameter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.CreateSecretRequest.ClientRequestToken">
            <summary>
            Gets and sets the property ClientRequestToken. 
            <para>
            (Optional) If you include <code>SecretString</code> or <code>SecretBinary</code>,
            then an initial version is created as part of the secret, and this parameter specifies
            a unique identifier for the new version. 
            </para>
             <note> 
            <para>
            If you use the Amazon Web Services CLI or one of the Amazon Web Services SDK to call
            this operation, then you can leave this parameter empty. The CLI or SDK generates
            a random UUID for you and includes it as the value for this parameter in the request.
            If you don't use the SDK and instead generate a raw HTTP request to the Secrets Manager
            service endpoint, then you must generate a <code>ClientRequestToken</code> yourself
            for the new version and include the value in the request.
            </para>
             </note> 
            <para>
            This value helps ensure idempotency. Secrets Manager uses this value to prevent the
            accidental creation of duplicate versions if there are failures and retries during
            a rotation. We recommend that you generate a <a href="https://wikipedia.org/wiki/Universally_unique_identifier">UUID-type</a>
            value to ensure uniqueness of your versions within the specified secret. 
            </para>
             <ul> <li> 
            <para>
            If the <code>ClientRequestToken</code> value isn't already associated with a version
            of the secret then a new version of the secret is created. 
            </para>
             </li> <li> 
            <para>
            If a version with this value already exists and the version <code>SecretString</code>
            and <code>SecretBinary</code> values are the same as those in the request, then the
            request is ignored.
            </para>
             </li> <li> 
            <para>
            If a version with this value already exists and that version's <code>SecretString</code>
            and <code>SecretBinary</code> values are different from those in the request, then
            the request fails because you cannot modify an existing version. Instead, use <a>PutSecretValue</a>
            to create a new version.
            </para>
             </li> </ul> 
            <para>
            This value becomes the <code>VersionId</code> of the new version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.CreateSecretRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            (Optional) Specifies a user-provided description of the secret.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.CreateSecretRequest.ForceOverwriteReplicaSecret">
            <summary>
            Gets and sets the property ForceOverwriteReplicaSecret. 
            <para>
            (Optional) If set, the replication overwrites a secret with the same name in the destination
            region.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.CreateSecretRequest.KmsKeyId">
            <summary>
            Gets and sets the property KmsKeyId. 
            <para>
            (Optional) Specifies the ARN, Key ID, or alias of the Amazon Web Services KMS customer
            master key (CMK) to be used to encrypt the <code>SecretString</code> or <code>SecretBinary</code>
            values in the versions stored in this secret.
            </para>
             
            <para>
            You can specify any of the supported ways to identify a Amazon Web Services KMS key
            ID. If you need to reference a CMK in a different account, you can use only the key
            ARN or the alias ARN.
            </para>
             
            <para>
            If you don't specify this value, then Secrets Manager defaults to using the Amazon
            Web Services account's default CMK (the one named <code>aws/secretsmanager</code>).
            If a Amazon Web Services KMS CMK with that name doesn't yet exist, then Secrets Manager
            creates it for you automatically the first time it needs to encrypt a version's <code>SecretString</code>
            or <code>SecretBinary</code> fields.
            </para>
             <important> 
            <para>
            You can use the account default CMK to encrypt and decrypt only if you call this operation
            using credentials from the same account that owns the secret. If the secret resides
            in a different account, then you must create a custom CMK and specify the ARN in this
            field. 
            </para>
             </important>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.CreateSecretRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            Specifies the friendly name of the new secret.
            </para>
             
            <para>
            The secret name must be ASCII letters, digits, or the following characters : /_+=.@-
            </para>
             <note> 
            <para>
            Do not end your secret name with a hyphen followed by six characters. If you do so,
            you risk confusion and unexpected results when searching for a secret by partial ARN.
            Secrets Manager automatically adds a hyphen and six random characters at the end of
            the ARN.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.CreateSecretRequest.SecretBinary">
            <summary>
            Gets and sets the property SecretBinary. 
            <para>
            (Optional) Specifies binary data that you want to encrypt and store in the new version
            of the secret. To use this parameter in the command-line tools, we recommend that
            you store your binary data in a file and then use the appropriate technique for your
            tool to pass the contents of the file as a parameter.
            </para>
             
            <para>
            Either <code>SecretString</code> or <code>SecretBinary</code> must have a value, but
            not both. They cannot both be empty.
            </para>
             
            <para>
            This parameter is not available using the Secrets Manager console. It can be accessed
            only by using the Amazon Web Services CLI or one of the Amazon Web Services SDKs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.CreateSecretRequest.SecretString">
            <summary>
            Gets and sets the property SecretString. 
            <para>
            (Optional) Specifies text data that you want to encrypt and store in this new version
            of the secret.
            </para>
             
            <para>
            Either <code>SecretString</code> or <code>SecretBinary</code> must have a value, but
            not both. They cannot both be empty.
            </para>
             
            <para>
            If you create a secret by using the Secrets Manager console then Secrets Manager puts
            the protected secret text in only the <code>SecretString</code> parameter. The Secrets
            Manager console stores the information as a JSON structure of key/value pairs that
            the Lambda rotation function knows how to parse.
            </para>
             
            <para>
            For storing multiple values, we recommend that you use a JSON text string argument
            and specify key/value pairs. For more information, see <a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-usage-parameters.html">Specifying
            parameter values for the Amazon Web Services CLI</a> in the Amazon Web Services CLI
            User Guide.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.CreateSecretRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            (Optional) Specifies a list of user-defined tags that are attached to the secret.
            Each tag is a "Key" and "Value" pair of strings. This operation only appends tags
            to the existing list of tags. To remove tags, you must use <a>UntagResource</a>.
            </para>
             <important> <ul> <li> 
            <para>
            Secrets Manager tag key names are case sensitive. A tag with the key "ABC" is a different
            tag from one with key "abc".
            </para>
             </li> <li> 
            <para>
            If you check tags in IAM policy <code>Condition</code> elements as part of your security
            strategy, then adding or removing a tag can change permissions. If the successful
            completion of this operation would result in you losing your permissions for this
            secret, then this operation is blocked and returns an <code>Access Denied</code> error.
            </para>
             </li> </ul> </important> 
            <para>
            This parameter requires a JSON text string argument. For information on how to format
            a JSON parameter for the various command line tool environments, see <a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-using-param.html#cli-using-param-json">Using
            JSON for Parameters</a> in the <i>CLI User Guide</i>. For example:
            </para>
             
            <para>
             <code>[{"Key":"CostCenter","Value":"12345"},{"Key":"environment","Value":"production"}]</code>
            
            </para>
             
            <para>
            If your command-line tool or SDK requires quotation marks around the parameter, you
            should use single quotes to avoid confusion with the double quotes required in the
            JSON text. 
            </para>
             
            <para>
            The following basic restrictions apply to tags:
            </para>
             <ul> <li> 
            <para>
            Maximum number of tags per secret—50
            </para>
             </li> <li> 
            <para>
            Maximum key length—127 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            Maximum value length—255 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            Tag keys and values are case sensitive.
            </para>
             </li> <li> 
            <para>
            Do not use the <code>aws:</code> prefix in your tag names or values because Amazon
            Web Services reserves it for Amazon Web Services use. You can't edit or delete tag
            names or values with this prefix. Tags with this prefix do not count against your
            tags per secret limit.
            </para>
             </li> <li> 
            <para>
            If you use your tagging schema across multiple services and resources, remember other
            services might have restrictions on allowed characters. Generally allowed characters:
            letters, spaces, and numbers representable in UTF-8, plus the following special characters:
            + - = . _ : / @.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.CreateSecretResponse">
            <summary>
            This is the response object from the CreateSecret operation.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.CreateSecretResponse.ARN">
            <summary>
            Gets and sets the property ARN. 
            <para>
            The Amazon Resource Name (ARN) of the secret that you just created.
            </para>
             <note> 
            <para>
            Secrets Manager automatically adds several random characters to the name at the end
            of the ARN when you initially create a secret. This affects only the ARN and not the
            actual friendly name. This ensures that if you create a new secret with the same name
            as an old secret that you previously deleted, then users with access to the old secret
            <i>don't</i> automatically get access to the new secret because the ARNs are different.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.CreateSecretResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The friendly name of the secret that you just created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.CreateSecretResponse.ReplicationStatus">
            <summary>
            Gets and sets the property ReplicationStatus. 
            <para>
            Describes a list of replication status objects as <code>InProgress</code>, <code>Failed</code>
            or <code>InSync</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.CreateSecretResponse.VersionId">
            <summary>
            Gets and sets the property VersionId. 
            <para>
            The unique identifier associated with the version of the secret you just created.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.DecryptionFailureException">
            <summary>
            Secrets Manager can't decrypt the protected secret text using the provided KMS key.
            </summary>
        </member>
        <member name="M:Amazon.SecretsManager.Model.DecryptionFailureException.#ctor(System.String)">
            <summary>
            Constructs a new DecryptionFailureException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.DecryptionFailureException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of DecryptionFailureException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.DecryptionFailureException.#ctor(System.Exception)">
            <summary>
            Construct instance of DecryptionFailureException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.DecryptionFailureException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DecryptionFailureException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.DecryptionFailureException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DecryptionFailureException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.DecryptionFailureException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the DecryptionFailureException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.SecretsManager.Model.DecryptionFailureException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.SecretsManager.Model.DeleteResourcePolicyRequest">
            <summary>
            Container for the parameters to the DeleteResourcePolicy operation.
            Deletes the resource-based permission policy attached to the secret.
            
             
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:DeleteResourcePolicy
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To attach a resource policy to a secret, use <a>PutResourcePolicy</a>.
            </para>
             </li> <li> 
            <para>
            To retrieve the current resource-based policy attached to a secret, use <a>GetResourcePolicy</a>.
            </para>
             </li> <li> 
            <para>
            To list all of the currently available secrets, use <a>ListSecrets</a>.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.DeleteResourcePolicyRequest.SecretId">
            <summary>
            Gets and sets the property SecretId. 
            <para>
            Specifies the secret that you want to delete the attached resource-based policy for.
            You can specify either the Amazon Resource Name (ARN) or the friendly name of the
            secret.
            </para>
             
            <para>
            For an ARN, we recommend that you specify a complete ARN rather than a partial ARN.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.DeleteResourcePolicyResponse">
            <summary>
            This is the response object from the DeleteResourcePolicy operation.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.DeleteResourcePolicyResponse.ARN">
            <summary>
            Gets and sets the property ARN. 
            <para>
            The ARN of the secret that the resource-based policy was deleted for.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.DeleteResourcePolicyResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The friendly name of the secret that the resource-based policy was deleted for.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.DeleteSecretRequest">
            <summary>
            Container for the parameters to the DeleteSecret operation.
            Deletes an entire secret and all of the versions. You can optionally include a recovery
            window during which you can restore the secret. If you don't specify a recovery window
            value, the operation defaults to 30 days. Secrets Manager attaches a <code>DeletionDate</code>
            stamp to the secret that specifies the end of the recovery window. At the end of the
            recovery window, Secrets Manager deletes the secret permanently.
            
             
            <para>
            At any time before recovery window ends, you can use <a>RestoreSecret</a> to remove
            the <code>DeletionDate</code> and cancel the deletion of the secret.
            </para>
             
            <para>
            You cannot access the encrypted secret information in any secret scheduled for deletion.
            If you need to access that information, you must cancel the deletion with <a>RestoreSecret</a>
            and then retrieve the information.
            </para>
             <note> <ul> <li> 
            <para>
            There is no explicit operation to delete a version of a secret. Instead, remove all
            staging labels from the <code>VersionStage</code> field of a version. That marks the
            version as deprecated and allows Secrets Manager to delete it as needed. Versions
            without any staging labels do not show up in <a>ListSecretVersionIds</a> unless you
            specify <code>IncludeDeprecated</code>.
            </para>
             </li> <li> 
            <para>
            The permanent secret deletion at the end of the waiting period is performed as a background
            task with low priority. There is no guarantee of a specific time after the recovery
            window for the actual delete operation to occur.
            </para>
             </li> </ul> </note> 
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:DeleteSecret
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To create a secret, use <a>CreateSecret</a>.
            </para>
             </li> <li> 
            <para>
            To cancel deletion of a version of a secret before the recovery window has expired,
            use <a>RestoreSecret</a>.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.DeleteSecretRequest.ForceDeleteWithoutRecovery">
            <summary>
            Gets and sets the property ForceDeleteWithoutRecovery. 
            <para>
            (Optional) Specifies that the secret is to be deleted without any recovery window.
            You can't use both this parameter and the <code>RecoveryWindowInDays</code> parameter
            in the same API call.
            </para>
             
            <para>
            An asynchronous background process performs the actual deletion, so there can be a
            short delay before the operation completes. If you write code to delete and then immediately
            recreate a secret with the same name, ensure that your code includes appropriate back
            off and retry logic.
            </para>
             <important> 
            <para>
            Use this parameter with caution. This parameter causes the operation to skip the normal
            waiting period before the permanent deletion that Amazon Web Services would normally
            impose with the <code>RecoveryWindowInDays</code> parameter. If you delete a secret
            with the <code>ForceDeleteWithouRecovery</code> parameter, then you have no opportunity
            to recover the secret. You lose the secret permanently.
            </para>
             </important> <important> 
            <para>
            If you use this parameter and include a previously deleted or nonexistent secret,
            the operation does not return the error <code>ResourceNotFoundException</code> in
            order to correctly handle retries.
            </para>
             </important>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.DeleteSecretRequest.RecoveryWindowInDays">
            <summary>
            Gets and sets the property RecoveryWindowInDays. 
            <para>
            (Optional) Specifies the number of days that Secrets Manager waits before Secrets
            Manager can delete the secret. You can't use both this parameter and the <code>ForceDeleteWithoutRecovery</code>
            parameter in the same API call.
            </para>
             
            <para>
            This value can range from 7 to 30 days with a default value of 30.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.DeleteSecretRequest.SecretId">
            <summary>
            Gets and sets the property SecretId. 
            <para>
            Specifies the secret to delete. You can specify either the Amazon Resource Name (ARN)
            or the friendly name of the secret.
            </para>
             
            <para>
            For an ARN, we recommend that you specify a complete ARN rather than a partial ARN.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.DeleteSecretResponse">
            <summary>
            This is the response object from the DeleteSecret operation.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.DeleteSecretResponse.ARN">
            <summary>
            Gets and sets the property ARN. 
            <para>
            The ARN of the secret that is now scheduled for deletion.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.DeleteSecretResponse.DeletionDate">
            <summary>
            Gets and sets the property DeletionDate. 
            <para>
            The date and time after which this secret can be deleted by Secrets Manager and can
            no longer be restored. This value is the date and time of the delete request plus
            the number of days specified in <code>RecoveryWindowInDays</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.DeleteSecretResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The friendly name of the secret currently scheduled for deletion.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.DescribeSecretRequest">
            <summary>
            Container for the parameters to the DescribeSecret operation.
            Retrieves the details of a secret. It does not include the encrypted fields. Secrets
            Manager only returns fields populated with a value in the response. 
            
             
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:DescribeSecret
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To create a secret, use <a>CreateSecret</a>.
            </para>
             </li> <li> 
            <para>
            To modify a secret, use <a>UpdateSecret</a>.
            </para>
             </li> <li> 
            <para>
            To retrieve the encrypted secret information in a version of the secret, use <a>GetSecretValue</a>.
            </para>
             </li> <li> 
            <para>
            To list all of the secrets in the Amazon Web Services account, use <a>ListSecrets</a>.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.DescribeSecretRequest.SecretId">
            <summary>
            Gets and sets the property SecretId. 
            <para>
            The identifier of the secret whose details you want to retrieve. You can specify either
            the Amazon Resource Name (ARN) or the friendly name of the secret.
            </para>
             
            <para>
            For an ARN, we recommend that you specify a complete ARN rather than a partial ARN.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.DescribeSecretResponse">
            <summary>
            This is the response object from the DescribeSecret operation.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.DescribeSecretResponse.ARN">
            <summary>
            Gets and sets the property ARN. 
            <para>
            The ARN of the secret.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.DescribeSecretResponse.CreatedDate">
            <summary>
            Gets and sets the property CreatedDate. 
            <para>
            The date you created the secret.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.DescribeSecretResponse.DeletedDate">
            <summary>
            Gets and sets the property DeletedDate. 
            <para>
            This value exists if the secret is scheduled for deletion. Some time after the specified
            date and time, Secrets Manager deletes the secret and all of its versions.
            </para>
             
            <para>
            If a secret is scheduled for deletion, then its details, including the encrypted secret
            information, is not accessible. To cancel a scheduled deletion and restore access,
            use <a>RestoreSecret</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.DescribeSecretResponse.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The user-provided description of the secret.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.DescribeSecretResponse.KmsKeyId">
            <summary>
            Gets and sets the property KmsKeyId. 
            <para>
            The ARN or alias of the Amazon Web Services KMS customer master key (CMK) that's used
            to encrypt the <code>SecretString</code> or <code>SecretBinary</code> fields in each
            version of the secret. If you don't provide a key, then Secrets Manager defaults to
            encrypting the secret fields with the default Amazon Web Services KMS CMK (the one
            named <code>awssecretsmanager</code>) for this account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.DescribeSecretResponse.LastAccessedDate">
            <summary>
            Gets and sets the property LastAccessedDate. 
            <para>
            The last date that this secret was accessed. This value is truncated to midnight of
            the date and therefore shows only the date, not the time.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.DescribeSecretResponse.LastChangedDate">
            <summary>
            Gets and sets the property LastChangedDate. 
            <para>
            The last date and time that this secret was modified in any way.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.DescribeSecretResponse.LastRotatedDate">
            <summary>
            Gets and sets the property LastRotatedDate. 
            <para>
            The last date and time that the rotation process for this secret was invoked.
            </para>
             
            <para>
            The most recent date and time that the Secrets Manager rotation process successfully
            completed. If the secret doesn't rotate, Secrets Manager returns a null value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.DescribeSecretResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The user-provided friendly name of the secret.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.DescribeSecretResponse.OwningService">
            <summary>
            Gets and sets the property OwningService. 
            <para>
            Returns the name of the service that created this secret.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.DescribeSecretResponse.PrimaryRegion">
            <summary>
            Gets and sets the property PrimaryRegion. 
            <para>
            Specifies the primary region for secret replication. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.DescribeSecretResponse.ReplicationStatus">
            <summary>
            Gets and sets the property ReplicationStatus. 
            <para>
            Describes a list of replication status objects as <code>InProgress</code>, <code>Failed</code>
            or <code>InSync</code>.<code>P</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.DescribeSecretResponse.RotationEnabled">
            <summary>
            Gets and sets the property RotationEnabled. 
            <para>
            Specifies whether automatic rotation is enabled for this secret.
            </para>
             
            <para>
            To enable rotation, use <a>RotateSecret</a> with <code>AutomaticallyRotateAfterDays</code>
            set to a value greater than 0. To disable rotation, use <a>CancelRotateSecret</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.DescribeSecretResponse.RotationLambdaARN">
            <summary>
            Gets and sets the property RotationLambdaARN. 
            <para>
            The ARN of a Lambda function that's invoked by Secrets Manager to rotate the secret
            either automatically per the schedule or manually by a call to <code>RotateSecret</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.DescribeSecretResponse.RotationRules">
            <summary>
            Gets and sets the property RotationRules. 
            <para>
            A structure with the rotation configuration for this secret. This field is only populated
            if rotation is configured.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.DescribeSecretResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The list of user-defined tags that are associated with the secret. To add tags to
            a secret, use <a>TagResource</a>. To remove tags, use <a>UntagResource</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.DescribeSecretResponse.VersionIdsToStages">
            <summary>
            Gets and sets the property VersionIdsToStages. 
            <para>
            A list of all of the currently assigned <code>VersionStage</code> staging labels and
            the <code>VersionId</code> that each is attached to. Staging labels are used to keep
            track of the different versions during the rotation process.
            </para>
             <note> 
            <para>
            A version that does not have any staging labels attached is considered deprecated
            and subject to deletion. Such versions are not included in this list.
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.EncryptionFailureException">
            <summary>
            Secrets Manager can't encrypt the protected secret text using the provided KMS key.
            Check that the customer master key (CMK) is available, enabled, and not in an invalid
            state. For more information, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">How
            Key State Affects Use of a Customer Master Key</a>.
            </summary>
        </member>
        <member name="M:Amazon.SecretsManager.Model.EncryptionFailureException.#ctor(System.String)">
            <summary>
            Constructs a new EncryptionFailureException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.EncryptionFailureException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of EncryptionFailureException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.EncryptionFailureException.#ctor(System.Exception)">
            <summary>
            Construct instance of EncryptionFailureException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.EncryptionFailureException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of EncryptionFailureException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.EncryptionFailureException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of EncryptionFailureException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.EncryptionFailureException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the EncryptionFailureException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.SecretsManager.Model.EncryptionFailureException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.SecretsManager.Model.Filter">
            <summary>
            Allows you to add filters when you use the search function in Secrets Manager.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Filter.Key">
            <summary>
            Gets and sets the property Key. 
            <para>
            Filters your list of secrets by a specific key.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Filter.Values">
            <summary>
            Gets and sets the property Values. 
            <para>
            Filters your list of secrets by a specific value.
            </para>
             
            <para>
            You can prefix your search value with an exclamation mark (<code>!</code>) in order
            to perform negation filters. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.GetRandomPasswordRequest">
            <summary>
            Container for the parameters to the GetRandomPassword operation.
            Generates a random password of the specified complexity. This operation is intended
            for use in the Lambda rotation function. Per best practice, we recommend that you
            specify the maximum length and include every character type that the system you are
            generating a password for can support.
            
             
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:GetRandomPassword
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.GetRandomPasswordRequest.ExcludeCharacters">
            <summary>
            Gets and sets the property ExcludeCharacters. 
            <para>
            A string that includes characters that should not be included in the generated password.
            The default is that all characters from the included sets can be used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.GetRandomPasswordRequest.ExcludeLowercase">
            <summary>
            Gets and sets the property ExcludeLowercase. 
            <para>
            Specifies that the generated password should not include lowercase letters. The default
            if you do not include this switch parameter is that lowercase letters can be included.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.GetRandomPasswordRequest.ExcludeNumbers">
            <summary>
            Gets and sets the property ExcludeNumbers. 
            <para>
            Specifies that the generated password should not include digits. The default if you
            do not include this switch parameter is that digits can be included.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.GetRandomPasswordRequest.ExcludePunctuation">
            <summary>
            Gets and sets the property ExcludePunctuation. 
            <para>
            Specifies that the generated password should not include punctuation characters. The
            default if you do not include this switch parameter is that punctuation characters
            can be included.
            </para>
             
            <para>
            The following are the punctuation characters that <i>can</i> be included in the generated
            password if you don't explicitly exclude them with <code>ExcludeCharacters</code>
            or <code>ExcludePunctuation</code>:
            </para>
             
            <para>
             <code>! " # $ % &amp; ' ( ) * + , - . / : ; &lt; = &gt; ? @ [ \ ] ^ _ ` { | } ~</code>
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.GetRandomPasswordRequest.ExcludeUppercase">
            <summary>
            Gets and sets the property ExcludeUppercase. 
            <para>
            Specifies that the generated password should not include uppercase letters. The default
            if you do not include this switch parameter is that uppercase letters can be included.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.GetRandomPasswordRequest.IncludeSpace">
            <summary>
            Gets and sets the property IncludeSpace. 
            <para>
            Specifies that the generated password can include the space character. The default
            if you do not include this switch parameter is that the space character is not included.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.GetRandomPasswordRequest.PasswordLength">
            <summary>
            Gets and sets the property PasswordLength. 
            <para>
            The desired length of the generated password. The default value if you do not include
            this parameter is 32 characters.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.GetRandomPasswordRequest.RequireEachIncludedType">
            <summary>
            Gets and sets the property RequireEachIncludedType. 
            <para>
            A boolean value that specifies whether the generated password must include at least
            one of every allowed character type. The default value is <code>True</code> and the
            operation requires at least one of every character type.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.GetRandomPasswordResponse">
            <summary>
            This is the response object from the GetRandomPassword operation.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.GetRandomPasswordResponse.RandomPassword">
            <summary>
            Gets and sets the property RandomPassword. 
            <para>
            A string with the generated password.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.GetResourcePolicyRequest">
            <summary>
            Container for the parameters to the GetResourcePolicy operation.
            Retrieves the JSON text of the resource-based policy document attached to the specified
            secret. The JSON request string input and response output displays formatted code
            with white space and line breaks for better readability. Submit your input as a single
            line JSON string.
            
             
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:GetResourcePolicy
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To attach a resource policy to a secret, use <a>PutResourcePolicy</a>.
            </para>
             </li> <li> 
            <para>
            To delete the resource-based policy attached to a secret, use <a>DeleteResourcePolicy</a>.
            </para>
             </li> <li> 
            <para>
            To list all of the currently available secrets, use <a>ListSecrets</a>.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.GetResourcePolicyRequest.SecretId">
            <summary>
            Gets and sets the property SecretId. 
            <para>
            Specifies the secret that you want to retrieve the attached resource-based policy
            for. You can specify either the Amazon Resource Name (ARN) or the friendly name of
            the secret.
            </para>
             
            <para>
            For an ARN, we recommend that you specify a complete ARN rather than a partial ARN.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.GetResourcePolicyResponse">
            <summary>
            This is the response object from the GetResourcePolicy operation.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.GetResourcePolicyResponse.ARN">
            <summary>
            Gets and sets the property ARN. 
            <para>
            The ARN of the secret that the resource-based policy was retrieved for.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.GetResourcePolicyResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The friendly name of the secret that the resource-based policy was retrieved for.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.GetResourcePolicyResponse.ResourcePolicy">
            <summary>
            Gets and sets the property ResourcePolicy. 
            <para>
            A JSON-formatted string that describes the permissions that are associated with the
            attached secret. These permissions are combined with any permissions that are associated
            with the user or role that attempts to access this secret. The combined permissions
            specify who can access the secret and what actions they can perform. For more information,
            see <a href="http://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and Access Control for Amazon Web Services Secrets Manager</a> in the <i>Amazon Web
            Services Secrets Manager User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.GetSecretValueRequest">
            <summary>
            Container for the parameters to the GetSecretValue operation.
            Retrieves the contents of the encrypted fields <code>SecretString</code> or <code>SecretBinary</code>
            from the specified version of a secret, whichever contains content.
            
             
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:GetSecretValue
            </para>
             </li> <li> 
            <para>
            kms:Decrypt - required only if you use a customer-managed Amazon Web Services KMS
            key to encrypt the secret. You do not need this permission to use the account's default
            Amazon Web Services managed CMK for Secrets Manager.
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To create a new version of the secret with different encrypted information, use <a>PutSecretValue</a>.
            </para>
             </li> <li> 
            <para>
            To retrieve the non-encrypted details for the secret, use <a>DescribeSecret</a>.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.GetSecretValueRequest.SecretId">
            <summary>
            Gets and sets the property SecretId. 
            <para>
            Specifies the secret containing the version that you want to retrieve. You can specify
            either the Amazon Resource Name (ARN) or the friendly name of the secret.
            </para>
             
            <para>
            For an ARN, we recommend that you specify a complete ARN rather than a partial ARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.GetSecretValueRequest.VersionId">
            <summary>
            Gets and sets the property VersionId. 
            <para>
            Specifies the unique identifier of the version of the secret that you want to retrieve.
            If you specify both this parameter and <code>VersionStage</code>, the two parameters
            must refer to the same secret version. If you don't specify either a <code>VersionStage</code>
            or <code>VersionId</code> then the default is to perform the operation on the version
            with the <code>VersionStage</code> value of <code>AWSCURRENT</code>.
            </para>
             
            <para>
            This value is typically a <a href="https://wikipedia.org/wiki/Universally_unique_identifier">UUID-type</a>
            value with 32 hexadecimal digits.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.GetSecretValueRequest.VersionStage">
            <summary>
            Gets and sets the property VersionStage. 
            <para>
            Specifies the secret version that you want to retrieve by the staging label attached
            to the version.
            </para>
             
            <para>
            Staging labels are used to keep track of different versions during the rotation process.
            If you specify both this parameter and <code>VersionId</code>, the two parameters
            must refer to the same secret version . If you don't specify either a <code>VersionStage</code>
            or <code>VersionId</code>, then the default is to perform the operation on the version
            with the <code>VersionStage</code> value of <code>AWSCURRENT</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.GetSecretValueResponse">
            <summary>
            This is the response object from the GetSecretValue operation.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.GetSecretValueResponse.ARN">
            <summary>
            Gets and sets the property ARN. 
            <para>
            The ARN of the secret.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.GetSecretValueResponse.CreatedDate">
            <summary>
            Gets and sets the property CreatedDate. 
            <para>
            The date and time that this version of the secret was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.GetSecretValueResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The friendly name of the secret.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.GetSecretValueResponse.SecretBinary">
            <summary>
            Gets and sets the property SecretBinary. 
            <para>
            The decrypted part of the protected secret information that was originally provided
            as binary data in the form of a byte array. The response parameter represents the
            binary data as a <a href="https://tools.ietf.org/html/rfc4648#section-4">base64-encoded</a>
            string.
            </para>
             
            <para>
            This parameter is not used if the secret is created by the Secrets Manager console.
            </para>
             
            <para>
            If you store custom information in this field of the secret, then you must code your
            Lambda rotation function to parse and interpret whatever you store in the <code>SecretString</code>
            or <code>SecretBinary</code> fields.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.GetSecretValueResponse.SecretString">
            <summary>
            Gets and sets the property SecretString. 
            <para>
            The decrypted part of the protected secret information that was originally provided
            as a string.
            </para>
             
            <para>
            If you create this secret by using the Secrets Manager console then only the <code>SecretString</code>
            parameter contains data. Secrets Manager stores the information as a JSON structure
            of key/value pairs that the Lambda rotation function knows how to parse.
            </para>
             
            <para>
            If you store custom information in the secret by using the <a>CreateSecret</a>, <a>UpdateSecret</a>,
            or <a>PutSecretValue</a> API operations instead of the Secrets Manager console, or
            by using the <b>Other secret type</b> in the console, then you must code your Lambda
            rotation function to parse and interpret those values.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.GetSecretValueResponse.VersionId">
            <summary>
            Gets and sets the property VersionId. 
            <para>
            The unique identifier of this version of the secret.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.GetSecretValueResponse.VersionStages">
            <summary>
            Gets and sets the property VersionStages. 
            <para>
            A list of all of the staging labels currently attached to this version of the secret.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            <summary>
            An error occurred on the server side.
            </summary>
        </member>
        <member name="M:Amazon.SecretsManager.Model.InternalServiceErrorException.#ctor(System.String)">
            <summary>
            Constructs a new InternalServiceErrorException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.InternalServiceErrorException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InternalServiceErrorException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.InternalServiceErrorException.#ctor(System.Exception)">
            <summary>
            Construct instance of InternalServiceErrorException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.InternalServiceErrorException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServiceErrorException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.InternalServiceErrorException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServiceErrorException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.InternalServiceErrorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InternalServiceErrorException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.SecretsManager.Model.InternalServiceErrorException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.CancelRotateSecretRequestMarshaller">
            <summary>
            CancelRotateSecret Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.CancelRotateSecretRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.CancelRotateSecretRequestMarshaller.Marshall(Amazon.SecretsManager.Model.CancelRotateSecretRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.CancelRotateSecretRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.CancelRotateSecretResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CancelRotateSecret operation
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.CancelRotateSecretResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.CancelRotateSecretResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.CancelRotateSecretResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.CreateSecretRequestMarshaller">
            <summary>
            CreateSecret Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.CreateSecretRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.CreateSecretRequestMarshaller.Marshall(Amazon.SecretsManager.Model.CreateSecretRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.CreateSecretRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.CreateSecretResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateSecret operation
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.CreateSecretResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.CreateSecretResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.CreateSecretResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.DecryptionFailureExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for DecryptionFailureException Object
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.DecryptionFailureExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.DecryptionFailureExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.DecryptionFailureExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.DeleteResourcePolicyRequestMarshaller">
            <summary>
            DeleteResourcePolicy Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.DeleteResourcePolicyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.DeleteResourcePolicyRequestMarshaller.Marshall(Amazon.SecretsManager.Model.DeleteResourcePolicyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.DeleteResourcePolicyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.DeleteResourcePolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteResourcePolicy operation
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.DeleteResourcePolicyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.DeleteResourcePolicyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.DeleteResourcePolicyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.DeleteSecretRequestMarshaller">
            <summary>
            DeleteSecret Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.DeleteSecretRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.DeleteSecretRequestMarshaller.Marshall(Amazon.SecretsManager.Model.DeleteSecretRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.DeleteSecretRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.DeleteSecretResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteSecret operation
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.DeleteSecretResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.DeleteSecretResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.DeleteSecretResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.DescribeSecretRequestMarshaller">
            <summary>
            DescribeSecret Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.DescribeSecretRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.DescribeSecretRequestMarshaller.Marshall(Amazon.SecretsManager.Model.DescribeSecretRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.DescribeSecretRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.DescribeSecretResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeSecret operation
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.DescribeSecretResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.DescribeSecretResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.DescribeSecretResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.EncryptionFailureExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for EncryptionFailureException Object
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.EncryptionFailureExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.EncryptionFailureExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.EncryptionFailureExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.FilterMarshaller">
            <summary>
            Filter Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.FilterMarshaller.Marshall(Amazon.SecretsManager.Model.Filter,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.SecretsManager.Model.Internal.MarshallTransformations.FilterMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.GetRandomPasswordRequestMarshaller">
            <summary>
            GetRandomPassword Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.GetRandomPasswordRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.GetRandomPasswordRequestMarshaller.Marshall(Amazon.SecretsManager.Model.GetRandomPasswordRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.GetRandomPasswordRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.GetRandomPasswordResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetRandomPassword operation
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.GetRandomPasswordResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.GetRandomPasswordResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.GetRandomPasswordResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.GetResourcePolicyRequestMarshaller">
            <summary>
            GetResourcePolicy Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.GetResourcePolicyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.GetResourcePolicyRequestMarshaller.Marshall(Amazon.SecretsManager.Model.GetResourcePolicyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.GetResourcePolicyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.GetResourcePolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetResourcePolicy operation
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.GetResourcePolicyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.GetResourcePolicyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.GetResourcePolicyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.GetSecretValueRequestMarshaller">
            <summary>
            GetSecretValue Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.GetSecretValueRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.GetSecretValueRequestMarshaller.Marshall(Amazon.SecretsManager.Model.GetSecretValueRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.GetSecretValueRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.GetSecretValueResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetSecretValue operation
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.GetSecretValueResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.GetSecretValueResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.GetSecretValueResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.InternalServiceErrorExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InternalServiceErrorException Object
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.InternalServiceErrorExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.InternalServiceErrorExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.InternalServiceErrorExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.InvalidNextTokenExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidNextTokenException Object
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.InvalidNextTokenExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.InvalidNextTokenExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.InvalidNextTokenExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.InvalidParameterExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidParameterException Object
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.InvalidParameterExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.InvalidParameterExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.InvalidParameterExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.InvalidRequestExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidRequestException Object
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.InvalidRequestExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.InvalidRequestExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.InvalidRequestExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for LimitExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ListSecretsRequestMarshaller">
            <summary>
            ListSecrets Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ListSecretsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ListSecretsRequestMarshaller.Marshall(Amazon.SecretsManager.Model.ListSecretsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ListSecretsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ListSecretsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListSecrets operation
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ListSecretsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ListSecretsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ListSecretsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ListSecretVersionIdsRequestMarshaller">
            <summary>
            ListSecretVersionIds Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ListSecretVersionIdsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ListSecretVersionIdsRequestMarshaller.Marshall(Amazon.SecretsManager.Model.ListSecretVersionIdsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ListSecretVersionIdsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ListSecretVersionIdsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListSecretVersionIds operation
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ListSecretVersionIdsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ListSecretVersionIdsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ListSecretVersionIdsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.MalformedPolicyDocumentExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for MalformedPolicyDocumentException Object
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.MalformedPolicyDocumentExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.MalformedPolicyDocumentExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.MalformedPolicyDocumentExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.PreconditionNotMetExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for PreconditionNotMetException Object
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.PreconditionNotMetExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.PreconditionNotMetExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.PreconditionNotMetExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.PublicPolicyExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for PublicPolicyException Object
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.PublicPolicyExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.PublicPolicyExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.PublicPolicyExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.PutResourcePolicyRequestMarshaller">
            <summary>
            PutResourcePolicy Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.PutResourcePolicyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.PutResourcePolicyRequestMarshaller.Marshall(Amazon.SecretsManager.Model.PutResourcePolicyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.PutResourcePolicyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.PutResourcePolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutResourcePolicy operation
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.PutResourcePolicyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.PutResourcePolicyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.PutResourcePolicyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.PutSecretValueRequestMarshaller">
            <summary>
            PutSecretValue Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.PutSecretValueRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.PutSecretValueRequestMarshaller.Marshall(Amazon.SecretsManager.Model.PutSecretValueRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.PutSecretValueRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.PutSecretValueResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutSecretValue operation
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.PutSecretValueResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.PutSecretValueResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.PutSecretValueResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.RemoveRegionsFromReplicationRequestMarshaller">
            <summary>
            RemoveRegionsFromReplication Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.RemoveRegionsFromReplicationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.RemoveRegionsFromReplicationRequestMarshaller.Marshall(Amazon.SecretsManager.Model.RemoveRegionsFromReplicationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.RemoveRegionsFromReplicationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.RemoveRegionsFromReplicationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RemoveRegionsFromReplication operation
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.RemoveRegionsFromReplicationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.RemoveRegionsFromReplicationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.RemoveRegionsFromReplicationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ReplicaRegionTypeMarshaller">
            <summary>
            ReplicaRegionType Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ReplicaRegionTypeMarshaller.Marshall(Amazon.SecretsManager.Model.ReplicaRegionType,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ReplicaRegionTypeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ReplicateSecretToRegionsRequestMarshaller">
            <summary>
            ReplicateSecretToRegions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ReplicateSecretToRegionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ReplicateSecretToRegionsRequestMarshaller.Marshall(Amazon.SecretsManager.Model.ReplicateSecretToRegionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ReplicateSecretToRegionsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ReplicateSecretToRegionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ReplicateSecretToRegions operation
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ReplicateSecretToRegionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ReplicateSecretToRegionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ReplicateSecretToRegionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ReplicationStatusTypeUnmarshaller">
            <summary>
            Response Unmarshaller for ReplicationStatusType Object
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ReplicationStatusTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SecretsManager#Model#ReplicationStatusType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ReplicationStatusTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ReplicationStatusTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ResourceExistsExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceExistsException Object
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ResourceExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ResourceExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ResourceExistsExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.RestoreSecretRequestMarshaller">
            <summary>
            RestoreSecret Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.RestoreSecretRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.RestoreSecretRequestMarshaller.Marshall(Amazon.SecretsManager.Model.RestoreSecretRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.RestoreSecretRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.RestoreSecretResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RestoreSecret operation
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.RestoreSecretResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.RestoreSecretResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.RestoreSecretResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.RotateSecretRequestMarshaller">
            <summary>
            RotateSecret Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.RotateSecretRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.RotateSecretRequestMarshaller.Marshall(Amazon.SecretsManager.Model.RotateSecretRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.RotateSecretRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.RotateSecretResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RotateSecret operation
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.RotateSecretResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.RotateSecretResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.RotateSecretResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.RotationRulesTypeMarshaller">
            <summary>
            RotationRulesType Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.RotationRulesTypeMarshaller.Marshall(Amazon.SecretsManager.Model.RotationRulesType,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.SecretsManager.Model.Internal.MarshallTransformations.RotationRulesTypeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.RotationRulesTypeUnmarshaller">
            <summary>
            Response Unmarshaller for RotationRulesType Object
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.RotationRulesTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SecretsManager#Model#RotationRulesType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.RotationRulesTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.RotationRulesTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.SecretListEntryUnmarshaller">
            <summary>
            Response Unmarshaller for SecretListEntry Object
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.SecretListEntryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SecretsManager#Model#SecretListEntry,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.SecretListEntryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.SecretListEntryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.SecretVersionsListEntryUnmarshaller">
            <summary>
            Response Unmarshaller for SecretVersionsListEntry Object
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.SecretVersionsListEntryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SecretsManager#Model#SecretVersionsListEntry,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.SecretVersionsListEntryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.SecretVersionsListEntryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.StopReplicationToReplicaRequestMarshaller">
            <summary>
            StopReplicationToReplica Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.StopReplicationToReplicaRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.StopReplicationToReplicaRequestMarshaller.Marshall(Amazon.SecretsManager.Model.StopReplicationToReplicaRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.StopReplicationToReplicaRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.StopReplicationToReplicaResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StopReplicationToReplica operation
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.StopReplicationToReplicaResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.StopReplicationToReplicaResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.StopReplicationToReplicaResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.TagMarshaller">
            <summary>
            Tag Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.TagMarshaller.Marshall(Amazon.SecretsManager.Model.Tag,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.SecretsManager.Model.Internal.MarshallTransformations.TagMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller">
            <summary>
            TagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.SecretsManager.Model.TagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for TagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.TagUnmarshaller">
            <summary>
            Response Unmarshaller for Tag Object
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.TagUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SecretsManager#Model#Tag,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.TagUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.TagUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller">
            <summary>
            UntagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.SecretsManager.Model.UntagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UntagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.UpdateSecretRequestMarshaller">
            <summary>
            UpdateSecret Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.UpdateSecretRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.UpdateSecretRequestMarshaller.Marshall(Amazon.SecretsManager.Model.UpdateSecretRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.UpdateSecretRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.UpdateSecretResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateSecret operation
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.UpdateSecretResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.UpdateSecretResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.UpdateSecretResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.UpdateSecretVersionStageRequestMarshaller">
            <summary>
            UpdateSecretVersionStage Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.UpdateSecretVersionStageRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.UpdateSecretVersionStageRequestMarshaller.Marshall(Amazon.SecretsManager.Model.UpdateSecretVersionStageRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.UpdateSecretVersionStageRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.UpdateSecretVersionStageResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateSecretVersionStage operation
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.UpdateSecretVersionStageResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.UpdateSecretVersionStageResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.UpdateSecretVersionStageResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ValidateResourcePolicyRequestMarshaller">
            <summary>
            ValidateResourcePolicy Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ValidateResourcePolicyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ValidateResourcePolicyRequestMarshaller.Marshall(Amazon.SecretsManager.Model.ValidateResourcePolicyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ValidateResourcePolicyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ValidateResourcePolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ValidateResourcePolicy operation
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ValidateResourcePolicyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ValidateResourcePolicyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ValidateResourcePolicyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ValidationErrorsEntryUnmarshaller">
            <summary>
            Response Unmarshaller for ValidationErrorsEntry Object
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ValidationErrorsEntryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SecretsManager#Model#ValidationErrorsEntry,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ValidationErrorsEntryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ValidationErrorsEntryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.InvalidNextTokenException">
            <summary>
            You provided an invalid <code>NextToken</code> value.
            </summary>
        </member>
        <member name="M:Amazon.SecretsManager.Model.InvalidNextTokenException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidNextTokenException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.InvalidNextTokenException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidNextTokenException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.InvalidNextTokenException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidNextTokenException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.InvalidNextTokenException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidNextTokenException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.InvalidNextTokenException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidNextTokenException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.InvalidNextTokenException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidNextTokenException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.SecretsManager.Model.InvalidNextTokenException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.SecretsManager.Model.InvalidParameterException">
            <summary>
            You provided an invalid value for a parameter.
            </summary>
        </member>
        <member name="M:Amazon.SecretsManager.Model.InvalidParameterException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidParameterException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.InvalidParameterException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.InvalidParameterException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.InvalidParameterException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.InvalidParameterException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.InvalidParameterException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidParameterException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.SecretsManager.Model.InvalidParameterException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.SecretsManager.Model.InvalidRequestException">
            <summary>
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="M:Amazon.SecretsManager.Model.InvalidRequestException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidRequestException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.InvalidRequestException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidRequestException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.InvalidRequestException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidRequestException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.InvalidRequestException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidRequestException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.InvalidRequestException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidRequestException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.InvalidRequestException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidRequestException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.SecretsManager.Model.InvalidRequestException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.SecretsManager.Model.LimitExceededException">
            <summary>
            The request failed because it would exceed one of the Secrets Manager internal limits.
            </summary>
        </member>
        <member name="M:Amazon.SecretsManager.Model.LimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new LimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.LimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.LimitExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.LimitExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.LimitExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.LimitExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the LimitExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.SecretsManager.Model.LimitExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.SecretsManager.Model.ListSecretsRequest">
            <summary>
            Container for the parameters to the ListSecrets operation.
            Lists all of the secrets that are stored by Secrets Manager in the Amazon Web Services
            account. To list the versions currently stored for a specific secret, use <a>ListSecretVersionIds</a>.
            The encrypted fields <code>SecretString</code> and <code>SecretBinary</code> are not
            included in the output. To get that information, call the <a>GetSecretValue</a> operation.
            
             <note> 
            <para>
            Always check the <code>NextToken</code> response parameter when calling any of the
            <code>List*</code> operations. These operations can occasionally return an empty or
            shorter than expected list of results even when there more results become available.
            When this happens, the <code>NextToken</code> response parameter contains a value
            to pass to the next call to the same API to request the next part of the list.
            </para>
             </note> 
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:ListSecrets
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To list the versions attached to a secret, use <a>ListSecretVersionIds</a>.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.ListSecretsRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            Lists the secret request filters.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.ListSecretsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            (Optional) Limits the number of results you want to include in the response. If you
            don't include this parameter, it defaults to a value that's specific to the operation.
            If additional items exist beyond the maximum you specify, the <code>NextToken</code>
            response element is present and has a value (isn't null). Include that value as the
            <code>NextToken</code> request parameter in the next call to the operation to get
            the next part of the results. Note that Secrets Manager might return fewer results
            than the maximum even when there are more results available. You should check <code>NextToken</code>
            after every operation to ensure that you receive all of the results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.ListSecretsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            (Optional) Use this parameter in a request if you receive a <code>NextToken</code>
            response in a previous request indicating there's more output available. In a subsequent
            call, set it to the value of the previous call <code>NextToken</code> response to
            indicate where the output should continue from.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.ListSecretsRequest.SortOrder">
            <summary>
            Gets and sets the property SortOrder. 
            <para>
            Lists secrets in the requested order. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.ListSecretsResponse">
            <summary>
            This is the response object from the ListSecrets operation.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.ListSecretsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If present in the response, this value indicates that there's more output available
            than included in the current response. This can occur even when the response includes
            no values at all, such as when you ask for a filtered view of a very long list. Use
            this value in the <code>NextToken</code> request parameter in a subsequent call to
            the operation to continue processing and get the next part of the output. You should
            repeat this until the <code>NextToken</code> response element comes back empty (as
            <code>null</code>).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.ListSecretsResponse.SecretList">
            <summary>
            Gets and sets the property SecretList. 
            <para>
            A list of the secrets in the account.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.ListSecretVersionIdsRequest">
            <summary>
            Container for the parameters to the ListSecretVersionIds operation.
            Lists all of the versions attached to the specified secret. The output does not include
            the <code>SecretString</code> or <code>SecretBinary</code> fields. By default, the
            list includes only versions that have at least one staging label in <code>VersionStage</code>
            attached.
            
             <note> 
            <para>
            Always check the <code>NextToken</code> response parameter when calling any of the
            <code>List*</code> operations. These operations can occasionally return an empty or
            shorter than expected list of results even when there more results become available.
            When this happens, the <code>NextToken</code> response parameter contains a value
            to pass to the next call to the same API to request the next part of the list.
            </para>
             </note> 
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:ListSecretVersionIds
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To list the secrets in an account, use <a>ListSecrets</a>.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.ListSecretVersionIdsRequest.IncludeDeprecated">
            <summary>
            Gets and sets the property IncludeDeprecated. 
            <para>
            (Optional) Specifies that you want the results to include versions that do not have
            any staging labels attached to them. Such versions are considered deprecated and are
            subject to deletion by Secrets Manager as needed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.ListSecretVersionIdsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            (Optional) Limits the number of results you want to include in the response. If you
            don't include this parameter, it defaults to a value that's specific to the operation.
            If additional items exist beyond the maximum you specify, the <code>NextToken</code>
            response element is present and has a value (isn't null). Include that value as the
            <code>NextToken</code> request parameter in the next call to the operation to get
            the next part of the results. Note that Secrets Manager might return fewer results
            than the maximum even when there are more results available. You should check <code>NextToken</code>
            after every operation to ensure that you receive all of the results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.ListSecretVersionIdsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            (Optional) Use this parameter in a request if you receive a <code>NextToken</code>
            response in a previous request indicating there's more output available. In a subsequent
            call, set it to the value of the previous call <code>NextToken</code> response to
            indicate where the output should continue from.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.ListSecretVersionIdsRequest.SecretId">
            <summary>
            Gets and sets the property SecretId. 
            <para>
            The identifier for the secret containing the versions you want to list. You can specify
            either the Amazon Resource Name (ARN) or the friendly name of the secret.
            </para>
             
            <para>
            For an ARN, we recommend that you specify a complete ARN rather than a partial ARN.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.ListSecretVersionIdsResponse">
            <summary>
            This is the response object from the ListSecretVersionIds operation.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.ListSecretVersionIdsResponse.ARN">
            <summary>
            Gets and sets the property ARN. 
            <para>
            The Amazon Resource Name (ARN) for the secret.
            </para>
             <note> 
            <para>
            Secrets Manager automatically adds several random characters to the name at the end
            of the ARN when you initially create a secret. This affects only the ARN and not the
            actual friendly name. This ensures that if you create a new secret with the same name
            as an old secret that you previously deleted, then users with access to the old secret
            <i>don't</i> automatically get access to the new secret because the ARNs are different.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.ListSecretVersionIdsResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The friendly name of the secret.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.ListSecretVersionIdsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If present in the response, this value indicates that there's more output available
            than included in the current response. This can occur even when the response includes
            no values at all, such as when you ask for a filtered view of a very long list. Use
            this value in the <code>NextToken</code> request parameter in a subsequent call to
            the operation to continue processing and get the next part of the output. You should
            repeat this until the <code>NextToken</code> response element comes back empty (as
            <code>null</code>).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.ListSecretVersionIdsResponse.Versions">
            <summary>
            Gets and sets the property Versions. 
            <para>
            The list of the currently available versions of the specified secret.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.MalformedPolicyDocumentException">
            <summary>
            You provided a resource-based policy with syntax errors.
            </summary>
        </member>
        <member name="M:Amazon.SecretsManager.Model.MalformedPolicyDocumentException.#ctor(System.String)">
            <summary>
            Constructs a new MalformedPolicyDocumentException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.MalformedPolicyDocumentException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of MalformedPolicyDocumentException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.MalformedPolicyDocumentException.#ctor(System.Exception)">
            <summary>
            Construct instance of MalformedPolicyDocumentException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.MalformedPolicyDocumentException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of MalformedPolicyDocumentException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.MalformedPolicyDocumentException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of MalformedPolicyDocumentException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.MalformedPolicyDocumentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the MalformedPolicyDocumentException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.SecretsManager.Model.MalformedPolicyDocumentException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.SecretsManager.Model.PreconditionNotMetException">
            <summary>
            The request failed because you did not complete all the prerequisite steps.
            </summary>
        </member>
        <member name="M:Amazon.SecretsManager.Model.PreconditionNotMetException.#ctor(System.String)">
            <summary>
            Constructs a new PreconditionNotMetException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.PreconditionNotMetException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of PreconditionNotMetException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.PreconditionNotMetException.#ctor(System.Exception)">
            <summary>
            Construct instance of PreconditionNotMetException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.PreconditionNotMetException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of PreconditionNotMetException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.PreconditionNotMetException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of PreconditionNotMetException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.PreconditionNotMetException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the PreconditionNotMetException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.SecretsManager.Model.PreconditionNotMetException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.SecretsManager.Model.PublicPolicyException">
            <summary>
            The BlockPublicPolicy parameter is set to true and the resource policy did not prevent
            broad access to the secret.
            </summary>
        </member>
        <member name="M:Amazon.SecretsManager.Model.PublicPolicyException.#ctor(System.String)">
            <summary>
            Constructs a new PublicPolicyException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.PublicPolicyException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of PublicPolicyException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.PublicPolicyException.#ctor(System.Exception)">
            <summary>
            Construct instance of PublicPolicyException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.PublicPolicyException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of PublicPolicyException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.PublicPolicyException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of PublicPolicyException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.PublicPolicyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the PublicPolicyException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.SecretsManager.Model.PublicPolicyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.SecretsManager.Model.PutResourcePolicyRequest">
            <summary>
            Container for the parameters to the PutResourcePolicy operation.
            Attaches the contents of the specified resource-based permission policy to a secret.
            A resource-based policy is optional. Alternatively, you can use IAM identity-based
            policies that specify the secret's Amazon Resource Name (ARN) in the policy statement's
            <code>Resources</code> element. You can also use a combination of both identity-based
            and resource-based policies. The affected users and roles receive the permissions
            that are permitted by all of the relevant policies. For more information, see <a href="http://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access_resource-based-policies.html">Using
            Resource-Based Policies for Amazon Web Services Secrets Manager</a>. For the complete
            description of the Amazon Web Services policy syntax and grammar, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies.html">IAM
            JSON Policy Reference</a> in the <i>IAM User Guide</i>.
            
             
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:PutResourcePolicy
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To retrieve the resource policy attached to a secret, use <a>GetResourcePolicy</a>.
            </para>
             </li> <li> 
            <para>
            To delete the resource-based policy attached to a secret, use <a>DeleteResourcePolicy</a>.
            </para>
             </li> <li> 
            <para>
            To list all of the currently available secrets, use <a>ListSecrets</a>.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.PutResourcePolicyRequest.BlockPublicPolicy">
            <summary>
            Gets and sets the property BlockPublicPolicy. 
            <para>
            (Optional) If you set the parameter, <code>BlockPublicPolicy</code> to true, then
            you block resource-based policies that allow broad access to the secret.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.PutResourcePolicyRequest.ResourcePolicy">
            <summary>
            Gets and sets the property ResourcePolicy. 
            <para>
            A JSON-formatted string constructed according to the grammar and syntax for an Amazon
            Web Services resource-based policy. The policy in the string identifies who can access
            or manage this secret and its versions. For information on how to format a JSON parameter
            for the various command line tool environments, see <a href="http://docs.aws.amazon.com/cli/latest/userguide/cli-using-param.html#cli-using-param-json">Using
            JSON for Parameters</a> in the <i>CLI User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.PutResourcePolicyRequest.SecretId">
            <summary>
            Gets and sets the property SecretId. 
            <para>
            Specifies the secret that you want to attach the resource-based policy. You can specify
            either the ARN or the friendly name of the secret.
            </para>
             
            <para>
            For an ARN, we recommend that you specify a complete ARN rather than a partial ARN.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.PutResourcePolicyResponse">
            <summary>
            This is the response object from the PutResourcePolicy operation.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.PutResourcePolicyResponse.ARN">
            <summary>
            Gets and sets the property ARN. 
            <para>
            The ARN of the secret retrieved by the resource-based policy.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.PutResourcePolicyResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The friendly name of the secret retrieved by the resource-based policy.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.PutSecretValueRequest">
            <summary>
            Container for the parameters to the PutSecretValue operation.
            Stores a new encrypted secret value in the specified secret. To do this, the operation
            creates a new version and attaches it to the secret. The version can contain a new
            <code>SecretString</code> value or a new <code>SecretBinary</code> value. You can
            also specify the staging labels that are initially attached to the new version.
            
             
            <para>
            We recommend you avoid calling <code>PutSecretValue</code> at a sustained rate of
            more than once every 10 minutes. When you update the secret value, Secrets Manager
            creates a new version of the secret. Secrets Manager removes outdated versions when
            there are more than 100, but it does not remove versions created less than 24 hours
            ago. If you call <code>PutSecretValue</code> more than once every 10 minutes, you
            create more versions than Secrets Manager removes, and you will reach the quota for
            secret versions.
            </para>
             <ul> <li> 
            <para>
            If this operation creates the first version for the secret then Secrets Manager automatically
            attaches the staging label <code>AWSCURRENT</code> to the new version.
            </para>
             </li> <li> 
            <para>
            If you do not specify a value for VersionStages then Secrets Manager automatically
            moves the staging label <code>AWSCURRENT</code> to this new version.
            </para>
             </li> <li> 
            <para>
            If this operation moves the staging label <code>AWSCURRENT</code> from another version
            to this version, then Secrets Manager also automatically moves the staging label <code>AWSPREVIOUS</code>
            to the version that <code>AWSCURRENT</code> was removed from.
            </para>
             </li> <li> 
            <para>
            This operation is idempotent. If a version with a <code>VersionId</code> with the
            same value as the <code>ClientRequestToken</code> parameter already exists and you
            specify the same secret data, the operation succeeds but does nothing. However, if
            the secret data is different, then the operation fails because you cannot modify an
            existing version; you can only create new ones.
            </para>
             </li> </ul> <note> <ul> <li> 
            <para>
            If you call an operation to encrypt or decrypt the <code>SecretString</code> or <code>SecretBinary</code>
            for a secret in the same account as the calling user and that secret doesn't specify
            a Amazon Web Services KMS encryption key, Secrets Manager uses the account's default
            Amazon Web Services managed customer master key (CMK) with the alias <code>aws/secretsmanager</code>.
            If this key doesn't already exist in your account then Secrets Manager creates it
            for you automatically. All users and roles in the same Amazon Web Services account
            automatically have access to use the default CMK. Note that if an Secrets Manager
            API call results in Amazon Web Services creating the account's Amazon Web Services-managed
            CMK, it can result in a one-time significant delay in returning the result.
            </para>
             </li> <li> 
            <para>
            If the secret resides in a different Amazon Web Services account from the credentials
            calling an API that requires encryption or decryption of the secret value then you
            must create and use a custom Amazon Web Services KMS CMK because you can't access
            the default CMK for the account using credentials from a different Amazon Web Services
            account. Store the ARN of the CMK in the secret when you create the secret or when
            you update it by including it in the <code>KMSKeyId</code>. If you call an API that
            must encrypt or decrypt <code>SecretString</code> or <code>SecretBinary</code> using
            credentials from a different account then the Amazon Web Services KMS key policy must
            grant cross-account access to that other account's user or role for both the kms:GenerateDataKey
            and kms:Decrypt operations.
            </para>
             </li> </ul> </note> 
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:PutSecretValue
            </para>
             </li> <li> 
            <para>
            kms:GenerateDataKey - needed only if you use a customer-managed Amazon Web Services
            KMS key to encrypt the secret. You do not need this permission to use the account's
            default Amazon Web Services managed CMK for Secrets Manager.
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To retrieve the encrypted value you store in the version of a secret, use <a>GetSecretValue</a>.
            </para>
             </li> <li> 
            <para>
            To create a secret, use <a>CreateSecret</a>.
            </para>
             </li> <li> 
            <para>
            To get the details for a secret, use <a>DescribeSecret</a>.
            </para>
             </li> <li> 
            <para>
            To list the versions attached to a secret, use <a>ListSecretVersionIds</a>.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.PutSecretValueRequest.ClientRequestToken">
            <summary>
            Gets and sets the property ClientRequestToken. 
            <para>
            (Optional) Specifies a unique identifier for the new version of the secret. 
            </para>
             <note> 
            <para>
            If you use the Amazon Web Services CLI or one of the Amazon Web Services SDK to call
            this operation, then you can leave this parameter empty. The CLI or SDK generates
            a random UUID for you and includes that in the request. If you don't use the SDK and
            instead generate a raw HTTP request to the Secrets Manager service endpoint, then
            you must generate a <code>ClientRequestToken</code> yourself for new versions and
            include that value in the request. 
            </para>
             </note> 
            <para>
            This value helps ensure idempotency. Secrets Manager uses this value to prevent the
            accidental creation of duplicate versions if there are failures and retries during
            the Lambda rotation function's processing. We recommend that you generate a <a href="https://wikipedia.org/wiki/Universally_unique_identifier">UUID-type</a>
            value to ensure uniqueness within the specified secret. 
            </para>
             <ul> <li> 
            <para>
            If the <code>ClientRequestToken</code> value isn't already associated with a version
            of the secret then a new version of the secret is created. 
            </para>
             </li> <li> 
            <para>
            If a version with this value already exists and that version's <code>SecretString</code>
            or <code>SecretBinary</code> values are the same as those in the request then the
            request is ignored (the operation is idempotent). 
            </para>
             </li> <li> 
            <para>
            If a version with this value already exists and the version of the <code>SecretString</code>
            and <code>SecretBinary</code> values are different from those in the request then
            the request fails because you cannot modify an existing secret version. You can only
            create new versions to store new secret values.
            </para>
             </li> </ul> 
            <para>
            This value becomes the <code>VersionId</code> of the new version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.PutSecretValueRequest.SecretBinary">
            <summary>
            Gets and sets the property SecretBinary. 
            <para>
            (Optional) Specifies binary data that you want to encrypt and store in the new version
            of the secret. To use this parameter in the command-line tools, we recommend that
            you store your binary data in a file and then use the appropriate technique for your
            tool to pass the contents of the file as a parameter. Either <code>SecretBinary</code>
            or <code>SecretString</code> must have a value, but not both. They cannot both be
            empty.
            </para>
             
            <para>
            This parameter is not accessible if the secret using the Secrets Manager console.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.PutSecretValueRequest.SecretId">
            <summary>
            Gets and sets the property SecretId. 
            <para>
            Specifies the secret to which you want to add a new version. You can specify either
            the Amazon Resource Name (ARN) or the friendly name of the secret. The secret must
            already exist.
            </para>
             
            <para>
            For an ARN, we recommend that you specify a complete ARN rather than a partial ARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.PutSecretValueRequest.SecretString">
            <summary>
            Gets and sets the property SecretString. 
            <para>
            (Optional) Specifies text data that you want to encrypt and store in this new version
            of the secret. Either <code>SecretString</code> or <code>SecretBinary</code> must
            have a value, but not both. They cannot both be empty.
            </para>
             
            <para>
            If you create this secret by using the Secrets Manager console then Secrets Manager
            puts the protected secret text in only the <code>SecretString</code> parameter. The
            Secrets Manager console stores the information as a JSON structure of key/value pairs
            that the default Lambda rotation function knows how to parse.
            </para>
             
            <para>
            For storing multiple values, we recommend that you use a JSON text string argument
            and specify key/value pairs. For more information, see <a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-usage-parameters.html">Specifying
            parameter values for the Amazon Web Services CLI</a> in the Amazon Web Services CLI
            User Guide.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.PutSecretValueRequest.VersionStages">
            <summary>
            Gets and sets the property VersionStages. 
            <para>
            (Optional) Specifies a list of staging labels that are attached to this version of
            the secret. These staging labels are used to track the versions through the rotation
            process by the Lambda rotation function.
            </para>
             
            <para>
            A staging label must be unique to a single version of the secret. If you specify a
            staging label that's already associated with a different version of the same secret
            then that staging label is automatically removed from the other version and attached
            to this version.
            </para>
             
            <para>
            If you do not specify a value for <code>VersionStages</code> then Secrets Manager
            automatically moves the staging label <code>AWSCURRENT</code> to this new version.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.PutSecretValueResponse">
            <summary>
            This is the response object from the PutSecretValue operation.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.PutSecretValueResponse.ARN">
            <summary>
            Gets and sets the property ARN. 
            <para>
            The Amazon Resource Name (ARN) for the secret for which you just created a version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.PutSecretValueResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The friendly name of the secret for which you just created or updated a version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.PutSecretValueResponse.VersionId">
            <summary>
            Gets and sets the property VersionId. 
            <para>
            The unique identifier of the version of the secret you just created or updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.PutSecretValueResponse.VersionStages">
            <summary>
            Gets and sets the property VersionStages. 
            <para>
            The list of staging labels that are currently attached to this version of the secret.
            Staging labels are used to track a version as it progresses through the secret rotation
            process.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.RemoveRegionsFromReplicationRequest">
            <summary>
            Container for the parameters to the RemoveRegionsFromReplication operation.
            Remove regions from replication.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.RemoveRegionsFromReplicationRequest.RemoveReplicaRegions">
            <summary>
            Gets and sets the property RemoveReplicaRegions. 
            <para>
            Remove replication from specific Regions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.RemoveRegionsFromReplicationRequest.SecretId">
            <summary>
            Gets and sets the property SecretId. 
            <para>
            Remove a secret by <code>SecretId</code> from replica Regions.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.RemoveRegionsFromReplicationResponse">
            <summary>
            This is the response object from the RemoveRegionsFromReplication operation.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.RemoveRegionsFromReplicationResponse.ARN">
            <summary>
            Gets and sets the property ARN. 
            <para>
            The secret <code>ARN</code> removed from replication regions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.RemoveRegionsFromReplicationResponse.ReplicationStatus">
            <summary>
            Gets and sets the property ReplicationStatus. 
            <para>
            Describes the remaining replication status after you remove regions from the replication
            list.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.ReplicaRegionType">
            <summary>
            (Optional) Custom type consisting of a <code>Region</code> (required) and the <code>KmsKeyId</code>
            which can be an <code>ARN</code>, <code>Key ID</code>, or <code>Alias</code>.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.ReplicaRegionType.KmsKeyId">
            <summary>
            Gets and sets the property KmsKeyId. 
            <para>
            Can be an <code>ARN</code>, <code>Key ID</code>, or <code>Alias</code>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.ReplicaRegionType.Region">
            <summary>
            Gets and sets the property Region. 
            <para>
            Describes a single instance of Region objects.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.ReplicateSecretToRegionsRequest">
            <summary>
            Container for the parameters to the ReplicateSecretToRegions operation.
            Converts an existing secret to a multi-Region secret and begins replication the secret
            to a list of new regions.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.ReplicateSecretToRegionsRequest.AddReplicaRegions">
            <summary>
            Gets and sets the property AddReplicaRegions. 
            <para>
            Add Regions to replicate the secret.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.ReplicateSecretToRegionsRequest.ForceOverwriteReplicaSecret">
            <summary>
            Gets and sets the property ForceOverwriteReplicaSecret. 
            <para>
            (Optional) If set, Secrets Manager replication overwrites a secret with the same name
            in the destination region.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.ReplicateSecretToRegionsRequest.SecretId">
            <summary>
            Gets and sets the property SecretId. 
            <para>
            Use the <code>Secret Id</code> to replicate a secret to regions.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.ReplicateSecretToRegionsResponse">
            <summary>
            This is the response object from the ReplicateSecretToRegions operation.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.ReplicateSecretToRegionsResponse.ARN">
            <summary>
            Gets and sets the property ARN. 
            <para>
            Replicate a secret based on the <code>ReplicaRegionType</code>&gt; consisting of a
            Region(required) and a KMSKeyId (optional) which can be the ARN, KeyID, or Alias.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.ReplicateSecretToRegionsResponse.ReplicationStatus">
            <summary>
            Gets and sets the property ReplicationStatus. 
            <para>
            Describes the secret replication status as <code>PENDING</code>, <code>SUCCESS</code>
            or <code>FAIL</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.ReplicationStatusType">
            <summary>
            A replication object consisting of a <code>RegionReplicationStatus</code> object and
            includes a Region, KMSKeyId, status, and status message.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.ReplicationStatusType.KmsKeyId">
            <summary>
            Gets and sets the property KmsKeyId. 
            <para>
            Can be an <code>ARN</code>, <code>Key ID</code>, or <code>Alias</code>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.ReplicationStatusType.LastAccessedDate">
            <summary>
            Gets and sets the property LastAccessedDate. 
            <para>
            The date that you last accessed the secret in the Region. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.ReplicationStatusType.Region">
            <summary>
            Gets and sets the property Region. 
            <para>
            The Region where replication occurs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.ReplicationStatusType.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status can be <code>InProgress</code>, <code>Failed</code>, or <code>InSync</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.ReplicationStatusType.StatusMessage">
            <summary>
            Gets and sets the property StatusMessage. 
            <para>
            Status message such as "<i>Secret with this name already exists in this region</i>".
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.ResourceExistsException">
            <summary>
            A resource with the ID you requested already exists.
            </summary>
        </member>
        <member name="M:Amazon.SecretsManager.Model.ResourceExistsException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceExistsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.ResourceExistsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.ResourceExistsException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceExistsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.ResourceExistsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.ResourceExistsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceExistsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.ResourceExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ResourceExistsException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.SecretsManager.Model.ResourceExistsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            <summary>
            We can't find the resource that you asked for.
            </summary>
        </member>
        <member name="M:Amazon.SecretsManager.Model.ResourceNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.ResourceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.ResourceNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.ResourceNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.ResourceNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.ResourceNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ResourceNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.SecretsManager.Model.ResourceNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.SecretsManager.Model.RestoreSecretRequest">
            <summary>
            Container for the parameters to the RestoreSecret operation.
            Cancels the scheduled deletion of a secret by removing the <code>DeletedDate</code>
            time stamp. This makes the secret accessible to query once again.
            
             
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:RestoreSecret
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To delete a secret, use <a>DeleteSecret</a>.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.RestoreSecretRequest.SecretId">
            <summary>
            Gets and sets the property SecretId. 
            <para>
            Specifies the secret that you want to restore from a previously scheduled deletion.
            You can specify either the Amazon Resource Name (ARN) or the friendly name of the
            secret.
            </para>
             
            <para>
            For an ARN, we recommend that you specify a complete ARN rather than a partial ARN.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.RestoreSecretResponse">
            <summary>
            This is the response object from the RestoreSecret operation.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.RestoreSecretResponse.ARN">
            <summary>
            Gets and sets the property ARN. 
            <para>
            The ARN of the secret that was restored.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.RestoreSecretResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The friendly name of the secret that was restored.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.RotateSecretRequest">
            <summary>
            Container for the parameters to the RotateSecret operation.
            Configures and starts the asynchronous process of rotating this secret. If you include
            the configuration parameters, the operation sets those values for the secret and then
            immediately starts a rotation. If you do not include the configuration parameters,
            the operation starts a rotation with the values already stored in the secret. After
            the rotation completes, the protected service and its clients all use the new version
            of the secret. 
            
             
            <para>
            This required configuration information includes the ARN of an Amazon Web Services
            Lambda function and optionally, the time between scheduled rotations. The Lambda rotation
            function creates a new version of the secret and creates or updates the credentials
            on the protected service to match. After testing the new credentials, the function
            marks the new secret with the staging label <code>AWSCURRENT</code> so that your clients
            all immediately begin to use the new version. For more information about rotating
            secrets and how to configure a Lambda function to rotate the secrets for your protected
            service, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotating-secrets.html">Rotating
            Secrets in Amazon Web Services Secrets Manager</a> in the <i>Amazon Web Services Secrets
            Manager User Guide</i>.
            </para>
             
            <para>
            Secrets Manager schedules the next rotation when the previous one completes. Secrets
            Manager schedules the date by adding the rotation interval (number of days) to the
            actual date of the last rotation. The service chooses the hour within that 24-hour
            date window randomly. The minute is also chosen somewhat randomly, but weighted towards
            the top of the hour and influenced by a variety of factors that help distribute load.
            </para>
             
            <para>
            The rotation function must end with the versions of the secret in one of two states:
            </para>
             <ul> <li> 
            <para>
            The <code>AWSPENDING</code> and <code>AWSCURRENT</code> staging labels are attached
            to the same version of the secret, or
            </para>
             </li> <li> 
            <para>
            The <code>AWSPENDING</code> staging label is not attached to any version of the secret.
            </para>
             </li> </ul> 
            <para>
            If the <code>AWSPENDING</code> staging label is present but not attached to the same
            version as <code>AWSCURRENT</code> then any later invocation of <code>RotateSecret</code>
            assumes that a previous rotation request is still in progress and returns an error.
            </para>
             
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:RotateSecret
            </para>
             </li> <li> 
            <para>
            lambda:InvokeFunction (on the function specified in the secret's metadata)
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To list the secrets in your account, use <a>ListSecrets</a>.
            </para>
             </li> <li> 
            <para>
            To get the details for a version of a secret, use <a>DescribeSecret</a>.
            </para>
             </li> <li> 
            <para>
            To create a new version of a secret, use <a>CreateSecret</a>.
            </para>
             </li> <li> 
            <para>
            To attach staging labels to or remove staging labels from a version of a secret, use
            <a>UpdateSecretVersionStage</a>.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.RotateSecretRequest.ClientRequestToken">
            <summary>
            Gets and sets the property ClientRequestToken. 
            <para>
            (Optional) Specifies a unique identifier for the new version of the secret that helps
            ensure idempotency. 
            </para>
             
            <para>
            If you use the Amazon Web Services CLI or one of the Amazon Web Services SDK to call
            this operation, then you can leave this parameter empty. The CLI or SDK generates
            a random UUID for you and includes that in the request for this parameter. If you
            don't use the SDK and instead generate a raw HTTP request to the Secrets Manager service
            endpoint, then you must generate a <code>ClientRequestToken</code> yourself for new
            versions and include that value in the request.
            </para>
             
            <para>
            You only need to specify your own value if you implement your own retry logic and
            want to ensure that a given secret is not created twice. We recommend that you generate
            a <a href="https://wikipedia.org/wiki/Universally_unique_identifier">UUID-type</a>
            value to ensure uniqueness within the specified secret. 
            </para>
             
            <para>
            Secrets Manager uses this value to prevent the accidental creation of duplicate versions
            if there are failures and retries during the function's processing. This value becomes
            the <code>VersionId</code> of the new version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.RotateSecretRequest.RotationLambdaARN">
            <summary>
            Gets and sets the property RotationLambdaARN. 
            <para>
            (Optional) Specifies the ARN of the Lambda function that can rotate the secret.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.RotateSecretRequest.RotationRules">
            <summary>
            Gets and sets the property RotationRules. 
            <para>
            A structure that defines the rotation configuration for this secret.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.RotateSecretRequest.SecretId">
            <summary>
            Gets and sets the property SecretId. 
            <para>
            Specifies the secret that you want to rotate. You can specify either the Amazon Resource
            Name (ARN) or the friendly name of the secret.
            </para>
             
            <para>
            For an ARN, we recommend that you specify a complete ARN rather than a partial ARN.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.RotateSecretResponse">
            <summary>
            This is the response object from the RotateSecret operation.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.RotateSecretResponse.ARN">
            <summary>
            Gets and sets the property ARN. 
            <para>
            The ARN of the secret.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.RotateSecretResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The friendly name of the secret.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.RotateSecretResponse.VersionId">
            <summary>
            Gets and sets the property VersionId. 
            <para>
            The ID of the new version of the secret created by the rotation started by this request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.RotationRulesType">
            <summary>
            A structure that defines the rotation configuration for the secret.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.RotationRulesType.AutomaticallyAfterDays">
            <summary>
            Gets and sets the property AutomaticallyAfterDays. 
            <para>
            Specifies the number of days between automatic scheduled rotations of the secret.
            </para>
             
            <para>
            Secrets Manager schedules the next rotation when the previous one is complete. Secrets
            Manager schedules the date by adding the rotation interval (number of days) to the
            actual date of the last rotation. The service chooses the hour within that 24-hour
            date window randomly. The minute is also chosen somewhat randomly, but weighted towards
            the top of the hour and influenced by a variety of factors that help distribute load.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.SecretListEntry">
            <summary>
            A structure that contains the details about a secret. It does not include the encrypted
            <code>SecretString</code> and <code>SecretBinary</code> values. To get those values,
            use the <a>GetSecretValue</a> operation.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.SecretListEntry.ARN">
            <summary>
            Gets and sets the property ARN. 
            <para>
            The Amazon Resource Name (ARN) of the secret.
            </para>
             
            <para>
            For more information about ARNs in Secrets Manager, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#iam-resources">Policy
            Resources</a> in the <i>Amazon Web Services Secrets Manager User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.SecretListEntry.CreatedDate">
            <summary>
            Gets and sets the property CreatedDate. 
            <para>
            The date and time when a secret was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.SecretListEntry.DeletedDate">
            <summary>
            Gets and sets the property DeletedDate. 
            <para>
            The date and time the deletion of the secret occurred. Not present on active secrets.
            The secret can be recovered until the number of days in the recovery window has passed,
            as specified in the <code>RecoveryWindowInDays</code> parameter of the <a>DeleteSecret</a>
            operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.SecretListEntry.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The user-provided description of the secret.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.SecretListEntry.KmsKeyId">
            <summary>
            Gets and sets the property KmsKeyId. 
            <para>
            The ARN or alias of the Amazon Web Services KMS customer master key (CMK) used to
            encrypt the <code>SecretString</code> and <code>SecretBinary</code> fields in each
            version of the secret. If you don't provide a key, then Secrets Manager defaults to
            encrypting the secret fields with the default KMS CMK, the key named <code>awssecretsmanager</code>,
            for this account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.SecretListEntry.LastAccessedDate">
            <summary>
            Gets and sets the property LastAccessedDate. 
            <para>
            The last date that this secret was accessed. This value is truncated to midnight of
            the date and therefore shows only the date, not the time.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.SecretListEntry.LastChangedDate">
            <summary>
            Gets and sets the property LastChangedDate. 
            <para>
            The last date and time that this secret was modified in any way.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.SecretListEntry.LastRotatedDate">
            <summary>
            Gets and sets the property LastRotatedDate. 
            <para>
            The most recent date and time that the Secrets Manager rotation process was successfully
            completed. This value is null if the secret hasn't ever rotated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.SecretListEntry.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The friendly name of the secret. You can use forward slashes in the name to represent
            a path hierarchy. For example, <code>/prod/databases/dbserver1</code> could represent
            the secret for a server named <code>dbserver1</code> in the folder <code>databases</code>
            in the folder <code>prod</code>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.SecretListEntry.OwningService">
            <summary>
            Gets and sets the property OwningService. 
            <para>
            Returns the name of the service that created the secret.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.SecretListEntry.PrimaryRegion">
            <summary>
            Gets and sets the property PrimaryRegion. 
            <para>
            The Region where Secrets Manager originated the secret.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.SecretListEntry.RotationEnabled">
            <summary>
            Gets and sets the property RotationEnabled. 
            <para>
            Indicates whether automatic, scheduled rotation is enabled for this secret.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.SecretListEntry.RotationLambdaARN">
            <summary>
            Gets and sets the property RotationLambdaARN. 
            <para>
            The ARN of an Amazon Web Services Lambda function invoked by Secrets Manager to rotate
            and expire the secret either automatically per the schedule or manually by a call
            to <a>RotateSecret</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.SecretListEntry.RotationRules">
            <summary>
            Gets and sets the property RotationRules. 
            <para>
            A structure that defines the rotation configuration for the secret.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.SecretListEntry.SecretVersionsToStages">
            <summary>
            Gets and sets the property SecretVersionsToStages. 
            <para>
            A list of all of the currently assigned <code>SecretVersionStage</code> staging labels
            and the <code>SecretVersionId</code> attached to each one. Staging labels are used
            to keep track of the different versions during the rotation process.
            </para>
             <note> 
            <para>
            A version that does not have any <code>SecretVersionStage</code> is considered deprecated
            and subject to deletion. Such versions are not included in this list.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.SecretListEntry.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The list of user-defined tags associated with the secret. To add tags to a secret,
            use <a>TagResource</a>. To remove tags, use <a>UntagResource</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.SecretVersionsListEntry">
            <summary>
            A structure that contains information about one version of a secret.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.SecretVersionsListEntry.CreatedDate">
            <summary>
            Gets and sets the property CreatedDate. 
            <para>
            The date and time this version of the secret was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.SecretVersionsListEntry.KmsKeyIds">
            <summary>
            Gets and sets the property KmsKeyIds. 
            <para>
            The KMS keys used to encrypt the secret version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.SecretVersionsListEntry.LastAccessedDate">
            <summary>
            Gets and sets the property LastAccessedDate. 
            <para>
            The date that this version of the secret was last accessed. Note that the resolution
            of this field is at the date level and does not include the time.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.SecretVersionsListEntry.VersionId">
            <summary>
            Gets and sets the property VersionId. 
            <para>
            The unique version identifier of this version of the secret.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.SecretVersionsListEntry.VersionStages">
            <summary>
            Gets and sets the property VersionStages. 
            <para>
            An array of staging labels that are currently associated with this version of the
            secret.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.StopReplicationToReplicaRequest">
            <summary>
            Container for the parameters to the StopReplicationToReplica operation.
            Removes the secret from replication and promotes the secret to a regional secret in
            the replica Region.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.StopReplicationToReplicaRequest.SecretId">
            <summary>
            Gets and sets the property SecretId. 
            <para>
            Response to <code>StopReplicationToReplica</code> of a secret, based on the <code>SecretId</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.StopReplicationToReplicaResponse">
            <summary>
            This is the response object from the StopReplicationToReplica operation.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.StopReplicationToReplicaResponse.ARN">
            <summary>
            Gets and sets the property ARN. 
            <para>
            Response <code>StopReplicationToReplica</code> of a secret, based on the <code>ARN,</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.Tag">
            <summary>
            A structure that contains information about a tag.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Tag.Key">
            <summary>
            Gets and sets the property Key. 
            <para>
            The key identifier, or name, of the tag.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Tag.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The string value associated with the key of the tag.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.TagResourceRequest">
            <summary>
            Container for the parameters to the TagResource operation.
            Attaches one or more tags, each consisting of a key name and a value, to the specified
            secret. Tags are part of the secret's overall metadata, and are not associated with
            any specific version of the secret. This operation only appends tags to the existing
            list of tags. To remove tags, you must use <a>UntagResource</a>.
            
             
            <para>
            The following basic restrictions apply to tags:
            </para>
             <ul> <li> 
            <para>
            Maximum number of tags per secret—50
            </para>
             </li> <li> 
            <para>
            Maximum key length—127 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            Maximum value length—255 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            Tag keys and values are case sensitive.
            </para>
             </li> <li> 
            <para>
            Do not use the <code>aws:</code> prefix in your tag names or values because Amazon
            Web Services reserves it for Amazon Web Services use. You can't edit or delete tag
            names or values with this prefix. Tags with this prefix do not count against your
            tags per secret limit.
            </para>
             </li> <li> 
            <para>
            If you use your tagging schema across multiple services and resources, remember other
            services might have restrictions on allowed characters. Generally allowed characters:
            letters, spaces, and numbers representable in UTF-8, plus the following special characters:
            + - = . _ : / @.
            </para>
             </li> </ul> <important> 
            <para>
            If you use tags as part of your security strategy, then adding or removing a tag can
            change permissions. If successfully completing this operation would result in you
            losing your permissions for this secret, then the operation is blocked and returns
            an Access Denied error.
            </para>
             </important> 
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:TagResource
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To remove one or more tags from the collection attached to a secret, use <a>UntagResource</a>.
            </para>
             </li> <li> 
            <para>
            To view the list of tags attached to a secret, use <a>DescribeSecret</a>.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.TagResourceRequest.SecretId">
            <summary>
            Gets and sets the property SecretId. 
            <para>
            The identifier for the secret that you want to attach tags to. You can specify either
            the Amazon Resource Name (ARN) or the friendly name of the secret.
            </para>
             
            <para>
            For an ARN, we recommend that you specify a complete ARN rather than a partial ARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.TagResourceRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags to attach to the secret. Each element in the list consists of a <code>Key</code>
            and a <code>Value</code>.
            </para>
             
            <para>
            This parameter to the API requires a JSON text string argument.
            </para>
             
            <para>
            For storing multiple values, we recommend that you use a JSON text string argument
            and specify key/value pairs. For more information, see <a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-usage-parameters.html">Specifying
            parameter values for the Amazon Web Services CLI</a> in the Amazon Web Services CLI
            User Guide.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.TagResourceResponse">
            <summary>
            This is the response object from the TagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.UntagResourceRequest">
            <summary>
            Container for the parameters to the UntagResource operation.
            Removes one or more tags from the specified secret.
            
             
            <para>
            This operation is idempotent. If a requested tag is not attached to the secret, no
            error is returned and the secret metadata is unchanged.
            </para>
             <important> 
            <para>
            If you use tags as part of your security strategy, then removing a tag can change
            permissions. If successfully completing this operation would result in you losing
            your permissions for this secret, then the operation is blocked and returns an Access
            Denied error.
            </para>
             </important> 
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:UntagResource
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To add one or more tags to the collection attached to a secret, use <a>TagResource</a>.
            </para>
             </li> <li> 
            <para>
            To view the list of tags attached to a secret, use <a>DescribeSecret</a>.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.UntagResourceRequest.SecretId">
            <summary>
            Gets and sets the property SecretId. 
            <para>
            The identifier for the secret that you want to remove tags from. You can specify either
            the Amazon Resource Name (ARN) or the friendly name of the secret.
            </para>
             
            <para>
            For an ARN, we recommend that you specify a complete ARN rather than a partial ARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.UntagResourceRequest.TagKeys">
            <summary>
            Gets and sets the property TagKeys. 
            <para>
            A list of tag key names to remove from the secret. You don't specify the value. Both
            the key and its associated value are removed.
            </para>
             
            <para>
            This parameter to the API requires a JSON text string argument.
            </para>
             
            <para>
            For storing multiple values, we recommend that you use a JSON text string argument
            and specify key/value pairs. For more information, see <a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-usage-parameters.html">Specifying
            parameter values for the Amazon Web Services CLI</a> in the Amazon Web Services CLI
            User Guide.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.UntagResourceResponse">
            <summary>
            This is the response object from the UntagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.UpdateSecretRequest">
            <summary>
            Container for the parameters to the UpdateSecret operation.
            Modifies many of the details of the specified secret. 
            
             
            <para>
            To change the secret value, you can also use <a>PutSecretValue</a>.
            </para>
             
            <para>
            To change the rotation configuration of a secret, use <a>RotateSecret</a> instead.
            </para>
             
            <para>
            We recommend you avoid calling <code>UpdateSecret</code> at a sustained rate of more
            than once every 10 minutes. When you call <code>UpdateSecret</code> to update the
            secret value, Secrets Manager creates a new version of the secret. Secrets Manager
            removes outdated versions when there are more than 100, but it does not remove versions
            created less than 24 hours ago. If you update the secret value more than once every
            10 minutes, you create more versions than Secrets Manager removes, and you will reach
            the quota for secret versions.
            </para>
             <note> 
            <para>
            The Secrets Manager console uses only the <code>SecretString</code> parameter and
            therefore limits you to encrypting and storing only a text string. To encrypt and
            store binary data as part of the version of a secret, you must use either the Amazon
            Web Services CLI or one of the Amazon Web Services SDKs.
            </para>
             </note> <ul> <li> 
            <para>
            If a version with a <code>VersionId</code> with the same value as the <code>ClientRequestToken</code>
            parameter already exists, the operation results in an error. You cannot modify an
            existing version, you can only create a new version.
            </para>
             </li> <li> 
            <para>
            If you include <code>SecretString</code> or <code>SecretBinary</code> to create a
            new secret version, Secrets Manager automatically attaches the staging label <code>AWSCURRENT</code>
            to the new version. 
            </para>
             </li> </ul> <note> <ul> <li> 
            <para>
            If you call an operation to encrypt or decrypt the <code>SecretString</code> or <code>SecretBinary</code>
            for a secret in the same account as the calling user and that secret doesn't specify
            a Amazon Web Services KMS encryption key, Secrets Manager uses the account's default
            Amazon Web Services managed customer master key (CMK) with the alias <code>aws/secretsmanager</code>.
            If this key doesn't already exist in your account then Secrets Manager creates it
            for you automatically. All users and roles in the same Amazon Web Services account
            automatically have access to use the default CMK. Note that if an Secrets Manager
            API call results in Amazon Web Services creating the account's Amazon Web Services-managed
            CMK, it can result in a one-time significant delay in returning the result.
            </para>
             </li> <li> 
            <para>
            If the secret resides in a different Amazon Web Services account from the credentials
            calling an API that requires encryption or decryption of the secret value then you
            must create and use a custom Amazon Web Services KMS CMK because you can't access
            the default CMK for the account using credentials from a different Amazon Web Services
            account. Store the ARN of the CMK in the secret when you create the secret or when
            you update it by including it in the <code>KMSKeyId</code>. If you call an API that
            must encrypt or decrypt <code>SecretString</code> or <code>SecretBinary</code> using
            credentials from a different account then the Amazon Web Services KMS key policy must
            grant cross-account access to that other account's user or role for both the kms:GenerateDataKey
            and kms:Decrypt operations.
            </para>
             </li> </ul> </note> 
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:UpdateSecret
            </para>
             </li> <li> 
            <para>
            kms:GenerateDataKey - needed only if you use a custom Amazon Web Services KMS key
            to encrypt the secret. You do not need this permission to use the account's Amazon
            Web Services managed CMK for Secrets Manager.
            </para>
             </li> <li> 
            <para>
            kms:Decrypt - needed only if you use a custom Amazon Web Services KMS key to encrypt
            the secret. You do not need this permission to use the account's Amazon Web Services
            managed CMK for Secrets Manager.
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To create a new secret, use <a>CreateSecret</a>.
            </para>
             </li> <li> 
            <para>
            To add only a new version to an existing secret, use <a>PutSecretValue</a>.
            </para>
             </li> <li> 
            <para>
            To get the details for a secret, use <a>DescribeSecret</a>.
            </para>
             </li> <li> 
            <para>
            To list the versions contained in a secret, use <a>ListSecretVersionIds</a>.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.UpdateSecretRequest.ClientRequestToken">
            <summary>
            Gets and sets the property ClientRequestToken. 
            <para>
            (Optional) If you want to add a new version to the secret, this parameter specifies
            a unique identifier for the new version that helps ensure idempotency. 
            </para>
             
            <para>
            If you use the Amazon Web Services CLI or one of the Amazon Web Services SDK to call
            this operation, then you can leave this parameter empty. The CLI or SDK generates
            a random UUID for you and includes that in the request. If you don't use the SDK and
            instead generate a raw HTTP request to the Secrets Manager service endpoint, then
            you must generate a <code>ClientRequestToken</code> yourself for new versions and
            include that value in the request.
            </para>
             
            <para>
            You typically only need to interact with this value if you implement your own retry
            logic and want to ensure that a given secret is not created twice. We recommend that
            you generate a <a href="https://wikipedia.org/wiki/Universally_unique_identifier">UUID-type</a>
            value to ensure uniqueness within the specified secret. 
            </para>
             
            <para>
            Secrets Manager uses this value to prevent the accidental creation of duplicate versions
            if there are failures and retries during the Lambda rotation function's processing.
            </para>
             <ul> <li> 
            <para>
            If the <code>ClientRequestToken</code> value isn't already associated with a version
            of the secret then a new version of the secret is created. 
            </para>
             </li> <li> 
            <para>
            If a version with this value already exists and that version's <code>SecretString</code>
            and <code>SecretBinary</code> values are the same as those in the request then the
            request is ignored (the operation is idempotent). 
            </para>
             </li> <li> 
            <para>
            If a version with this value already exists and that version's <code>SecretString</code>
            and <code>SecretBinary</code> values are different from the request then an error
            occurs because you cannot modify an existing secret value.
            </para>
             </li> </ul> 
            <para>
            This value becomes the <code>VersionId</code> of the new version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.UpdateSecretRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            (Optional) Specifies an updated user-provided description of the secret.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.UpdateSecretRequest.KmsKeyId">
            <summary>
            Gets and sets the property KmsKeyId. 
            <para>
            (Optional) Specifies an updated ARN or alias of the Amazon Web Services KMS customer
            master key (CMK) that Secrets Manager uses to encrypt the protected text in new versions
            of this secret as well as any existing versions of this secret that have the staging
            labels AWSCURRENT, AWSPENDING, or AWSPREVIOUS. For more information about staging
            labels, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/terms-concepts.html#term_staging-label">Staging
            Labels</a> in the <i>Amazon Web Services Secrets Manager User Guide</i>.
            </para>
             <important> 
            <para>
            You can only use the account's default CMK to encrypt and decrypt if you call this
            operation using credentials from the same account that owns the secret. If the secret
            is in a different account, then you must create a custom CMK and provide the ARN of
            that CMK in this field. The user making the call must have permissions to both the
            secret and the CMK in their respective accounts.
            </para>
             </important>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.UpdateSecretRequest.SecretBinary">
            <summary>
            Gets and sets the property SecretBinary. 
            <para>
            (Optional) Specifies updated binary data that you want to encrypt and store in the
            new version of the secret. To use this parameter in the command-line tools, we recommend
            that you store your binary data in a file and then use the appropriate technique for
            your tool to pass the contents of the file as a parameter. Either <code>SecretBinary</code>
            or <code>SecretString</code> must have a value, but not both. They cannot both be
            empty.
            </para>
             
            <para>
            This parameter is not accessible using the Secrets Manager console.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.UpdateSecretRequest.SecretId">
            <summary>
            Gets and sets the property SecretId. 
            <para>
            Specifies the secret that you want to modify or to which you want to add a new version.
            You can specify either the Amazon Resource Name (ARN) or the friendly name of the
            secret.
            </para>
             
            <para>
            For an ARN, we recommend that you specify a complete ARN rather than a partial ARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.UpdateSecretRequest.SecretString">
            <summary>
            Gets and sets the property SecretString. 
            <para>
            (Optional) Specifies updated text data that you want to encrypt and store in this
            new version of the secret. Either <code>SecretBinary</code> or <code>SecretString</code>
            must have a value, but not both. They cannot both be empty.
            </para>
             
            <para>
            If you create this secret by using the Secrets Manager console then Secrets Manager
            puts the protected secret text in only the <code>SecretString</code> parameter. The
            Secrets Manager console stores the information as a JSON structure of key/value pairs
            that the default Lambda rotation function knows how to parse.
            </para>
             
            <para>
            For storing multiple values, we recommend that you use a JSON text string argument
            and specify key/value pairs. For more information, see <a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-usage-parameters.html">Specifying
            parameter values for the Amazon Web Services CLI</a> in the Amazon Web Services CLI
            User Guide.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.UpdateSecretResponse">
            <summary>
            This is the response object from the UpdateSecret operation.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.UpdateSecretResponse.ARN">
            <summary>
            Gets and sets the property ARN. 
            <para>
            The ARN of the secret that was updated.
            </para>
             <note> 
            <para>
            Secrets Manager automatically adds several random characters to the name at the end
            of the ARN when you initially create a secret. This affects only the ARN and not the
            actual friendly name. This ensures that if you create a new secret with the same name
            as an old secret that you previously deleted, then users with access to the old secret
            <i>don't</i> automatically get access to the new secret because the ARNs are different.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.UpdateSecretResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The friendly name of the secret that was updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.UpdateSecretResponse.VersionId">
            <summary>
            Gets and sets the property VersionId. 
            <para>
            If a new version of the secret was created by this operation, then <code>VersionId</code>
            contains the unique identifier of the new version.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.UpdateSecretVersionStageRequest">
            <summary>
            Container for the parameters to the UpdateSecretVersionStage operation.
            Modifies the staging labels attached to a version of a secret. Staging labels are
            used to track a version as it progresses through the secret rotation process. You
            can attach a staging label to only one version of a secret at a time. If a staging
            label to be added is already attached to another version, then it is moved--removed
            from the other version first and then attached to this one. For more information about
            staging labels, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/terms-concepts.html#term_staging-label">Staging
            Labels</a> in the <i>Amazon Web Services Secrets Manager User Guide</i>. 
            
             
            <para>
            The staging labels that you specify in the <code>VersionStage</code> parameter are
            added to the existing list of staging labels--they don't replace it.
            </para>
             
            <para>
            You can move the <code>AWSCURRENT</code> staging label to this version by including
            it in this call.
            </para>
             <note> 
            <para>
            Whenever you move <code>AWSCURRENT</code>, Secrets Manager automatically moves the
            label <code>AWSPREVIOUS</code> to the version that <code>AWSCURRENT</code> was removed
            from.
            </para>
             </note> 
            <para>
            If this action results in the last label being removed from a version, then the version
            is considered to be 'deprecated' and can be deleted by Secrets Manager.
            </para>
             
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:UpdateSecretVersionStage
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To get the list of staging labels that are currently associated with a version of
            a secret, use <code> <a>DescribeSecret</a> </code> and examine the <code>SecretVersionsToStages</code>
            response value. 
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.UpdateSecretVersionStageRequest.MoveToVersionId">
            <summary>
            Gets and sets the property MoveToVersionId. 
            <para>
            (Optional) The secret version ID that you want to add the staging label. If you want
            to remove a label from a version, then do not specify this parameter.
            </para>
             
            <para>
            If the staging label is already attached to a different version of the secret, then
            you must also specify the <code>RemoveFromVersionId</code> parameter. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.UpdateSecretVersionStageRequest.RemoveFromVersionId">
            <summary>
            Gets and sets the property RemoveFromVersionId. 
            <para>
            Specifies the secret version ID of the version that the staging label is to be removed
            from. If the staging label you are trying to attach to one version is already attached
            to a different version, then you must include this parameter and specify the version
            that the label is to be removed from. If the label is attached and you either do not
            specify this parameter, or the version ID does not match, then the operation fails.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.UpdateSecretVersionStageRequest.SecretId">
            <summary>
            Gets and sets the property SecretId. 
            <para>
            Specifies the secret with the version with the list of staging labels you want to
            modify. You can specify either the Amazon Resource Name (ARN) or the friendly name
            of the secret.
            </para>
             
            <para>
            For an ARN, we recommend that you specify a complete ARN rather than a partial ARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.UpdateSecretVersionStageRequest.VersionStage">
            <summary>
            Gets and sets the property VersionStage. 
            <para>
            The staging label to add to this version.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.UpdateSecretVersionStageResponse">
            <summary>
            This is the response object from the UpdateSecretVersionStage operation.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.UpdateSecretVersionStageResponse.ARN">
            <summary>
            Gets and sets the property ARN. 
            <para>
            The ARN of the secret with the modified staging label.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.UpdateSecretVersionStageResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The friendly name of the secret with the modified staging label.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.ValidateResourcePolicyRequest">
            <summary>
            Container for the parameters to the ValidateResourcePolicy operation.
            Validates that the resource policy does not grant a wide range of IAM principals access
            to your secret. The JSON request string input and response output displays formatted
            code with white space and line breaks for better readability. Submit your input as
            a single line JSON string. A resource-based policy is optional for secrets.
            
             
            <para>
            The API performs three checks when validating the secret:
            </para>
             <ul> <li> 
            <para>
            Sends a call to <a href="https://aws.amazon.com/blogs/security/protect-sensitive-data-in-the-cloud-with-automated-reasoning-zelkova/">Zelkova</a>,
            an automated reasoning engine, to ensure your Resource Policy does not allow broad
            access to your secret.
            </para>
             </li> <li> 
            <para>
            Checks for correct syntax in a policy.
            </para>
             </li> <li> 
            <para>
            Verifies the policy does not lock out a caller.
            </para>
             </li> </ul> 
            <para>
             <b>Minimum Permissions</b> 
            </para>
             
            <para>
            You must have the permissions required to access the following APIs:
            </para>
             <ul> <li> 
            <para>
             <code>secretsmanager:PutResourcePolicy</code> 
            </para>
             </li> <li> 
            <para>
             <code>secretsmanager:ValidateResourcePolicy</code> 
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.ValidateResourcePolicyRequest.ResourcePolicy">
            <summary>
            Gets and sets the property ResourcePolicy. 
            <para>
            A JSON-formatted string constructed according to the grammar and syntax for an Amazon
            Web Services resource-based policy. The policy in the string identifies who can access
            or manage this secret and its versions. For information on how to format a JSON parameter
            for the various command line tool environments, see <a href="http://docs.aws.amazon.com/cli/latest/userguide/cli-using-param.html#cli-using-param-json">Using
            JSON for Parameters</a> in the <i>CLI User Guide</i>.publi
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.ValidateResourcePolicyRequest.SecretId">
            <summary>
            Gets and sets the property SecretId. 
            <para>
             (Optional) The identifier of the secret with the resource-based policy you want to
            validate. You can specify either the Amazon Resource Name (ARN) or the friendly name
            of the secret.
            </para>
             
            <para>
            For an ARN, we recommend that you specify a complete ARN rather than a partial ARN.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.ValidateResourcePolicyResponse">
            <summary>
            This is the response object from the ValidateResourcePolicy operation.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.ValidateResourcePolicyResponse.PolicyValidationPassed">
            <summary>
            Gets and sets the property PolicyValidationPassed. 
            <para>
            Returns a message stating that your Reource Policy passed validation. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.ValidateResourcePolicyResponse.ValidationErrors">
            <summary>
            Gets and sets the property ValidationErrors. 
            <para>
            Returns an error message if your policy doesn't pass validatation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.ValidationErrorsEntry">
            <summary>
            Displays errors that occurred during validation of the resource policy.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.ValidationErrorsEntry.CheckName">
            <summary>
            Gets and sets the property CheckName. 
            <para>
            Checks the name of the policy.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.ValidationErrorsEntry.ErrorMessage">
            <summary>
            Gets and sets the property ErrorMessage. 
            <para>
            Displays error messages if validation encounters problems during validation of the
            resource policy.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.IListSecretsPaginator">
             <summary>
             Paginator for the ListSecrets operation
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.IListSecretsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.IListSecretVersionIdsPaginator">
             <summary>
             Paginator for the ListSecretVersionIds operation
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.IListSecretVersionIdsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.ISecretsManagerPaginatorFactory">
             <summary>
             Paginators for the SecretsManager service
            </summary>
        </member>
        <member name="M:Amazon.SecretsManager.Model.ISecretsManagerPaginatorFactory.ListSecrets(Amazon.SecretsManager.Model.ListSecretsRequest)">
             <summary>
             Paginator for ListSecrets operation
            </summary>
        </member>
        <member name="M:Amazon.SecretsManager.Model.ISecretsManagerPaginatorFactory.ListSecretVersionIds(Amazon.SecretsManager.Model.ListSecretVersionIdsRequest)">
             <summary>
             Paginator for ListSecretVersionIds operation
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.ListSecretsPaginator">
            <summary>
            Base class for ListSecrets paginators.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.ListSecretsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.ListSecretVersionIdsPaginator">
            <summary>
            Base class for ListSecretVersionIds paginators.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.ListSecretVersionIdsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.SecretsManagerPaginatorFactory">
             <summary>
             Paginators for the SecretsManager service
            </summary>
        </member>
        <member name="M:Amazon.SecretsManager.Model.SecretsManagerPaginatorFactory.ListSecrets(Amazon.SecretsManager.Model.ListSecretsRequest)">
             <summary>
             Paginator for ListSecrets operation
            </summary>
        </member>
        <member name="M:Amazon.SecretsManager.Model.SecretsManagerPaginatorFactory.ListSecretVersionIds(Amazon.SecretsManager.Model.ListSecretVersionIdsRequest)">
             <summary>
             Paginator for ListSecretVersionIds operation
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.FilterNameStringType">
            <summary>
            Constants used for properties of type FilterNameStringType.
            </summary>
        </member>
        <member name="F:Amazon.SecretsManager.FilterNameStringType.All">
            <summary>
            Constant All for FilterNameStringType
            </summary>
        </member>
        <member name="F:Amazon.SecretsManager.FilterNameStringType.Description">
            <summary>
            Constant Description for FilterNameStringType
            </summary>
        </member>
        <member name="F:Amazon.SecretsManager.FilterNameStringType.Name">
            <summary>
            Constant Name for FilterNameStringType
            </summary>
        </member>
        <member name="F:Amazon.SecretsManager.FilterNameStringType.PrimaryRegion">
            <summary>
            Constant PrimaryRegion for FilterNameStringType
            </summary>
        </member>
        <member name="F:Amazon.SecretsManager.FilterNameStringType.TagKey">
            <summary>
            Constant TagKey for FilterNameStringType
            </summary>
        </member>
        <member name="F:Amazon.SecretsManager.FilterNameStringType.TagValue">
            <summary>
            Constant TagValue for FilterNameStringType
            </summary>
        </member>
        <member name="M:Amazon.SecretsManager.FilterNameStringType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.SecretsManager.FilterNameStringType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.SecretsManager.FilterNameStringType.op_Implicit(System.String)~Amazon.SecretsManager.FilterNameStringType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SecretsManager.SortOrderType">
            <summary>
            Constants used for properties of type SortOrderType.
            </summary>
        </member>
        <member name="F:Amazon.SecretsManager.SortOrderType.Asc">
            <summary>
            Constant Asc for SortOrderType
            </summary>
        </member>
        <member name="F:Amazon.SecretsManager.SortOrderType.Desc">
            <summary>
            Constant Desc for SortOrderType
            </summary>
        </member>
        <member name="M:Amazon.SecretsManager.SortOrderType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.SecretsManager.SortOrderType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.SecretsManager.SortOrderType.op_Implicit(System.String)~Amazon.SecretsManager.SortOrderType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SecretsManager.StatusType">
            <summary>
            Constants used for properties of type StatusType.
            </summary>
        </member>
        <member name="F:Amazon.SecretsManager.StatusType.Failed">
            <summary>
            Constant Failed for StatusType
            </summary>
        </member>
        <member name="F:Amazon.SecretsManager.StatusType.InProgress">
            <summary>
            Constant InProgress for StatusType
            </summary>
        </member>
        <member name="F:Amazon.SecretsManager.StatusType.InSync">
            <summary>
            Constant InSync for StatusType
            </summary>
        </member>
        <member name="M:Amazon.SecretsManager.StatusType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.SecretsManager.StatusType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.SecretsManager.StatusType.op_Implicit(System.String)~Amazon.SecretsManager.StatusType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SecretsManager.AmazonSecretsManagerClient">
             <summary>
             Implementation for accessing SecretsManager
            
             Amazon Web Services Secrets Manager 
             <para>
             Amazon Web Services Secrets Manager provides a service to enable you to store, manage,
             and retrieve, secrets.
             </para>
              
             <para>
             This guide provides descriptions of the Secrets Manager API. For more information
             about using this service, see the <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/introduction.html">Amazon
             Web Services Secrets Manager User Guide</a>.
             </para>
              
             <para>
              <b>API Version</b> 
             </para>
              
             <para>
             This version of the Secrets Manager API Reference documents the Secrets Manager API
             version 2017-10-17.
             </para>
              <note> 
             <para>
             As an alternative to using the API, you can use one of the Amazon Web Services SDKs,
             which consist of libraries and sample code for various programming languages and platforms
             such as Java, Ruby, .NET, iOS, and Android. The SDKs provide a convenient way to create
             programmatic access to Amazon Web Services Secrets Manager. For example, the SDKs
             provide cryptographically signing requests, managing errors, and retrying requests
             automatically. For more information about the Amazon Web Services SDKs, including
             downloading and installing them, see <a href="http://aws.amazon.com/tools/">Tools
             for Amazon Web Services</a>.
             </para>
              </note> 
             <para>
             We recommend you use the Amazon Web Services SDKs to make programmatic API calls to
             Secrets Manager. However, you also can use the Secrets Manager HTTP Query API to make
             direct calls to the Secrets Manager web service. To learn more about the Secrets Manager
             HTTP Query API, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/query-requests.html">Making
             Query Requests</a> in the <i>Amazon Web Services Secrets Manager User Guide</i>. 
             </para>
              
             <para>
             Secrets Manager API supports GET and POST requests for all actions, and doesn't require
             you to use GET for some actions and POST for others. However, GET requests are subject
             to the limitation size of a URL. Therefore, for operations that require larger sizes,
             use a POST request.
             </para>
              
             <para>
              <b>Support and Feedback for Amazon Web Services Secrets Manager</b> 
             </para>
              
             <para>
             We welcome your feedback. Send your comments to <a href="mailto:awssecretsmanager-feedback@amazon.com">awssecretsmanager-feedback@amazon.com</a>,
             or post your feedback and questions in the <a href="http://forums.aws.amazon.com/forum.jspa?forumID=296">Amazon
             Web Services Secrets Manager Discussion Forum</a>. For more information about the
             Amazon Web Services Discussion Forums, see <a href="http://forums.aws.amazon.com/help.jspa">Forums
             Help</a>.
             </para>
              
             <para>
              <b>How examples are presented</b> 
             </para>
              
             <para>
             The JSON that Amazon Web Services Secrets Manager expects as your request parameters
             and the service returns as a response to HTTP query requests contain single, long
             strings without line breaks or white space formatting. The JSON shown in the examples
             displays the code formatted with both line breaks and white space to improve readability.
             When example input parameters can also cause long strings extending beyond the screen,
             you can insert line breaks to enhance readability. You should always submit the input
             as a single JSON text string.
             </para>
              
             <para>
              <b>Logging API Requests</b> 
             </para>
              
             <para>
             Amazon Web Services Secrets Manager supports Amazon Web Services CloudTrail, a service
             that records Amazon Web Services API calls for your Amazon Web Services account and
             delivers log files to an Amazon S3 bucket. By using information that's collected by
             Amazon Web Services CloudTrail, you can determine the requests successfully made to
             Secrets Manager, who made the request, when it was made, and so on. For more about
             Amazon Web Services Secrets Manager and support for Amazon Web Services CloudTrail,
             see <a href="http://docs.aws.amazon.com/secretsmanager/latest/userguide/monitoring.html#monitoring_cloudtrail">Logging
             Amazon Web Services Secrets Manager Events with Amazon Web Services CloudTrail</a>
             in the <i>Amazon Web Services Secrets Manager User Guide</i>. To learn more about
             CloudTrail, including enabling it and find your log files, see the <a href="https://docs.aws.amazon.com/awscloudtrail/latest/userguide/what_is_cloud_trail_top_level.html">Amazon
             Web Services CloudTrail User Guide</a>.
             </para>
             </summary>
        </member>
        <member name="P:Amazon.SecretsManager.AmazonSecretsManagerClient.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.#ctor">
             <summary>
             Constructs AmazonSecretsManagerClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonSecretsManagerClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.#ctor(Amazon.SecretsManager.AmazonSecretsManagerConfig)">
             <summary>
             Constructs AmazonSecretsManagerClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonSecretsManagerClient Configuration Object</param>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonSecretsManagerClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonSecretsManagerClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.SecretsManager.AmazonSecretsManagerConfig)">
            <summary>
            Constructs AmazonSecretsManagerClient with AWS Credentials and an
            AmazonSecretsManagerClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonSecretsManagerClient Configuration Object</param>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonSecretsManagerClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonSecretsManagerClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.#ctor(System.String,System.String,Amazon.SecretsManager.AmazonSecretsManagerConfig)">
            <summary>
            Constructs AmazonSecretsManagerClient with AWS Access Key ID, AWS Secret Key and an
            AmazonSecretsManagerClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonSecretsManagerClient Configuration Object</param>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonSecretsManagerClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonSecretsManagerClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.#ctor(System.String,System.String,System.String,Amazon.SecretsManager.AmazonSecretsManagerConfig)">
            <summary>
            Constructs AmazonSecretsManagerClient with AWS Access Key ID, AWS Secret Key and an
            AmazonSecretsManagerClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonSecretsManagerClient Configuration Object</param>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.AmazonSecretsManagerClient.ServiceMetadata">
            <summary>
            Capture metadata for the service.
            </summary>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.CancelRotateSecret(Amazon.SecretsManager.Model.CancelRotateSecretRequest)">
            <summary>
            Disables automatic scheduled rotation and cancels the rotation of a secret if currently
            in progress.
            
             
            <para>
            To re-enable scheduled rotation, call <a>RotateSecret</a> with <code>AutomaticallyRotateAfterDays</code>
            set to a value greater than 0. This immediately rotates your secret and then enables
            the automatic schedule.
            </para>
             <note> 
            <para>
            If you cancel a rotation while in progress, it can leave the <code>VersionStage</code>
            labels in an unexpected state. Depending on the step of the rotation in progress,
            you might need to remove the staging label <code>AWSPENDING</code> from the partially
            created version, specified by the <code>VersionId</code> response value. You should
            also evaluate the partially rotated new version to see if it should be deleted, which
            you can do by removing all staging labels from the new version <code>VersionStage</code>
            field.
            </para>
             </note> 
            <para>
            To successfully start a rotation, the staging label <code>AWSPENDING</code> must be
            in one of the following states:
            </para>
             <ul> <li> 
            <para>
            Not attached to any version at all
            </para>
             </li> <li> 
            <para>
            Attached to the same version as the staging label <code>AWSCURRENT</code> 
            </para>
             </li> </ul> 
            <para>
            If the staging label <code>AWSPENDING</code> attached to a different version than
            the version with <code>AWSCURRENT</code> then the attempt to rotate fails.
            </para>
             
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:CancelRotateSecret
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To configure rotation for a secret or to manually trigger a rotation, use <a>RotateSecret</a>.
            </para>
             </li> <li> 
            <para>
            To get the rotation configuration details for a secret, use <a>DescribeSecret</a>.
            </para>
             </li> <li> 
            <para>
            To list all of the currently available secrets, use <a>ListSecrets</a>.
            </para>
             </li> <li> 
            <para>
            To list all of the versions currently associated with a secret, use <a>ListSecretVersionIds</a>.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CancelRotateSecret service method.</param>
            
            <returns>The response from the CancelRotateSecret service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/CancelRotateSecret">REST API Reference for CancelRotateSecret Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.CancelRotateSecretAsync(Amazon.SecretsManager.Model.CancelRotateSecretRequest,System.Threading.CancellationToken)">
            <summary>
            Disables automatic scheduled rotation and cancels the rotation of a secret if currently
            in progress.
            
             
            <para>
            To re-enable scheduled rotation, call <a>RotateSecret</a> with <code>AutomaticallyRotateAfterDays</code>
            set to a value greater than 0. This immediately rotates your secret and then enables
            the automatic schedule.
            </para>
             <note> 
            <para>
            If you cancel a rotation while in progress, it can leave the <code>VersionStage</code>
            labels in an unexpected state. Depending on the step of the rotation in progress,
            you might need to remove the staging label <code>AWSPENDING</code> from the partially
            created version, specified by the <code>VersionId</code> response value. You should
            also evaluate the partially rotated new version to see if it should be deleted, which
            you can do by removing all staging labels from the new version <code>VersionStage</code>
            field.
            </para>
             </note> 
            <para>
            To successfully start a rotation, the staging label <code>AWSPENDING</code> must be
            in one of the following states:
            </para>
             <ul> <li> 
            <para>
            Not attached to any version at all
            </para>
             </li> <li> 
            <para>
            Attached to the same version as the staging label <code>AWSCURRENT</code> 
            </para>
             </li> </ul> 
            <para>
            If the staging label <code>AWSPENDING</code> attached to a different version than
            the version with <code>AWSCURRENT</code> then the attempt to rotate fails.
            </para>
             
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:CancelRotateSecret
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To configure rotation for a secret or to manually trigger a rotation, use <a>RotateSecret</a>.
            </para>
             </li> <li> 
            <para>
            To get the rotation configuration details for a secret, use <a>DescribeSecret</a>.
            </para>
             </li> <li> 
            <para>
            To list all of the currently available secrets, use <a>ListSecrets</a>.
            </para>
             </li> <li> 
            <para>
            To list all of the versions currently associated with a secret, use <a>ListSecretVersionIds</a>.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CancelRotateSecret service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CancelRotateSecret service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/CancelRotateSecret">REST API Reference for CancelRotateSecret Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.CreateSecret(Amazon.SecretsManager.Model.CreateSecretRequest)">
            <summary>
            Creates a new secret. A secret in Secrets Manager consists of both the protected secret
            data and the important information needed to manage the secret.
            
             
            <para>
            Secrets Manager stores the encrypted secret data in one of a collection of "versions"
            associated with the secret. Each version contains a copy of the encrypted secret data.
            Each version is associated with one or more "staging labels" that identify where the
            version is in the rotation cycle. The <code>SecretVersionsToStages</code> field of
            the secret contains the mapping of staging labels to the active versions of the secret.
            Versions without a staging label are considered deprecated and not included in the
            list.
            </para>
             
            <para>
            You provide the secret data to be encrypted by putting text in either the <code>SecretString</code>
            parameter or binary data in the <code>SecretBinary</code> parameter, but not both.
            If you include <code>SecretString</code> or <code>SecretBinary</code> then Secrets
            Manager also creates an initial secret version and automatically attaches the staging
            label <code>AWSCURRENT</code> to the new version.
            </para>
             <note> <ul> <li> 
            <para>
            If you call an operation to encrypt or decrypt the <code>SecretString</code> or <code>SecretBinary</code>
            for a secret in the same account as the calling user and that secret doesn't specify
            a Amazon Web Services KMS encryption key, Secrets Manager uses the account's default
            Amazon Web Services managed customer master key (CMK) with the alias <code>aws/secretsmanager</code>.
            If this key doesn't already exist in your account then Secrets Manager creates it
            for you automatically. All users and roles in the same Amazon Web Services account
            automatically have access to use the default CMK. Note that if an Secrets Manager
            API call results in Amazon Web Services creating the account's Amazon Web Services-managed
            CMK, it can result in a one-time significant delay in returning the result.
            </para>
             </li> <li> 
            <para>
            If the secret resides in a different Amazon Web Services account from the credentials
            calling an API that requires encryption or decryption of the secret value then you
            must create and use a custom Amazon Web Services KMS CMK because you can't access
            the default CMK for the account using credentials from a different Amazon Web Services
            account. Store the ARN of the CMK in the secret when you create the secret or when
            you update it by including it in the <code>KMSKeyId</code>. If you call an API that
            must encrypt or decrypt <code>SecretString</code> or <code>SecretBinary</code> using
            credentials from a different account then the Amazon Web Services KMS key policy must
            grant cross-account access to that other account's user or role for both the kms:GenerateDataKey
            and kms:Decrypt operations.
            </para>
             </li> </ul> </note> 
            <para>
             
            </para>
             
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:CreateSecret
            </para>
             </li> <li> 
            <para>
            kms:GenerateDataKey - needed only if you use a customer-managed Amazon Web Services
            KMS key to encrypt the secret. You do not need this permission to use the account
            default Amazon Web Services managed CMK for Secrets Manager.
            </para>
             </li> <li> 
            <para>
            kms:Decrypt - needed only if you use a customer-managed Amazon Web Services KMS key
            to encrypt the secret. You do not need this permission to use the account default
            Amazon Web Services managed CMK for Secrets Manager.
            </para>
             </li> <li> 
            <para>
            secretsmanager:TagResource - needed only if you include the <code>Tags</code> parameter.
            
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To delete a secret, use <a>DeleteSecret</a>.
            </para>
             </li> <li> 
            <para>
            To modify an existing secret, use <a>UpdateSecret</a>.
            </para>
             </li> <li> 
            <para>
            To create a new version of a secret, use <a>PutSecretValue</a>.
            </para>
             </li> <li> 
            <para>
            To retrieve the encrypted secure string and secure binary values, use <a>GetSecretValue</a>.
            </para>
             </li> <li> 
            <para>
            To retrieve all other details for a secret, use <a>DescribeSecret</a>. This does not
            include the encrypted secure string and secure binary values.
            </para>
             </li> <li> 
            <para>
            To retrieve the list of secret versions associated with the current secret, use <a>DescribeSecret</a>
            and examine the <code>SecretVersionsToStages</code> response value.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateSecret service method.</param>
            
            <returns>The response from the CreateSecret service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.EncryptionFailureException">
            Secrets Manager can't encrypt the protected secret text using the provided KMS key.
            Check that the customer master key (CMK) is available, enabled, and not in an invalid
            state. For more information, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">How
            Key State Affects Use of a Customer Master Key</a>.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.LimitExceededException">
            The request failed because it would exceed one of the Secrets Manager internal limits.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.MalformedPolicyDocumentException">
            You provided a resource-based policy with syntax errors.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.PreconditionNotMetException">
            The request failed because you did not complete all the prerequisite steps.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceExistsException">
            A resource with the ID you requested already exists.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/CreateSecret">REST API Reference for CreateSecret Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.CreateSecretAsync(Amazon.SecretsManager.Model.CreateSecretRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new secret. A secret in Secrets Manager consists of both the protected secret
            data and the important information needed to manage the secret.
            
             
            <para>
            Secrets Manager stores the encrypted secret data in one of a collection of "versions"
            associated with the secret. Each version contains a copy of the encrypted secret data.
            Each version is associated with one or more "staging labels" that identify where the
            version is in the rotation cycle. The <code>SecretVersionsToStages</code> field of
            the secret contains the mapping of staging labels to the active versions of the secret.
            Versions without a staging label are considered deprecated and not included in the
            list.
            </para>
             
            <para>
            You provide the secret data to be encrypted by putting text in either the <code>SecretString</code>
            parameter or binary data in the <code>SecretBinary</code> parameter, but not both.
            If you include <code>SecretString</code> or <code>SecretBinary</code> then Secrets
            Manager also creates an initial secret version and automatically attaches the staging
            label <code>AWSCURRENT</code> to the new version.
            </para>
             <note> <ul> <li> 
            <para>
            If you call an operation to encrypt or decrypt the <code>SecretString</code> or <code>SecretBinary</code>
            for a secret in the same account as the calling user and that secret doesn't specify
            a Amazon Web Services KMS encryption key, Secrets Manager uses the account's default
            Amazon Web Services managed customer master key (CMK) with the alias <code>aws/secretsmanager</code>.
            If this key doesn't already exist in your account then Secrets Manager creates it
            for you automatically. All users and roles in the same Amazon Web Services account
            automatically have access to use the default CMK. Note that if an Secrets Manager
            API call results in Amazon Web Services creating the account's Amazon Web Services-managed
            CMK, it can result in a one-time significant delay in returning the result.
            </para>
             </li> <li> 
            <para>
            If the secret resides in a different Amazon Web Services account from the credentials
            calling an API that requires encryption or decryption of the secret value then you
            must create and use a custom Amazon Web Services KMS CMK because you can't access
            the default CMK for the account using credentials from a different Amazon Web Services
            account. Store the ARN of the CMK in the secret when you create the secret or when
            you update it by including it in the <code>KMSKeyId</code>. If you call an API that
            must encrypt or decrypt <code>SecretString</code> or <code>SecretBinary</code> using
            credentials from a different account then the Amazon Web Services KMS key policy must
            grant cross-account access to that other account's user or role for both the kms:GenerateDataKey
            and kms:Decrypt operations.
            </para>
             </li> </ul> </note> 
            <para>
             
            </para>
             
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:CreateSecret
            </para>
             </li> <li> 
            <para>
            kms:GenerateDataKey - needed only if you use a customer-managed Amazon Web Services
            KMS key to encrypt the secret. You do not need this permission to use the account
            default Amazon Web Services managed CMK for Secrets Manager.
            </para>
             </li> <li> 
            <para>
            kms:Decrypt - needed only if you use a customer-managed Amazon Web Services KMS key
            to encrypt the secret. You do not need this permission to use the account default
            Amazon Web Services managed CMK for Secrets Manager.
            </para>
             </li> <li> 
            <para>
            secretsmanager:TagResource - needed only if you include the <code>Tags</code> parameter.
            
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To delete a secret, use <a>DeleteSecret</a>.
            </para>
             </li> <li> 
            <para>
            To modify an existing secret, use <a>UpdateSecret</a>.
            </para>
             </li> <li> 
            <para>
            To create a new version of a secret, use <a>PutSecretValue</a>.
            </para>
             </li> <li> 
            <para>
            To retrieve the encrypted secure string and secure binary values, use <a>GetSecretValue</a>.
            </para>
             </li> <li> 
            <para>
            To retrieve all other details for a secret, use <a>DescribeSecret</a>. This does not
            include the encrypted secure string and secure binary values.
            </para>
             </li> <li> 
            <para>
            To retrieve the list of secret versions associated with the current secret, use <a>DescribeSecret</a>
            and examine the <code>SecretVersionsToStages</code> response value.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateSecret service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateSecret service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.EncryptionFailureException">
            Secrets Manager can't encrypt the protected secret text using the provided KMS key.
            Check that the customer master key (CMK) is available, enabled, and not in an invalid
            state. For more information, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">How
            Key State Affects Use of a Customer Master Key</a>.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.LimitExceededException">
            The request failed because it would exceed one of the Secrets Manager internal limits.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.MalformedPolicyDocumentException">
            You provided a resource-based policy with syntax errors.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.PreconditionNotMetException">
            The request failed because you did not complete all the prerequisite steps.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceExistsException">
            A resource with the ID you requested already exists.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/CreateSecret">REST API Reference for CreateSecret Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.DeleteResourcePolicy(Amazon.SecretsManager.Model.DeleteResourcePolicyRequest)">
            <summary>
            Deletes the resource-based permission policy attached to the secret.
            
             
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:DeleteResourcePolicy
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To attach a resource policy to a secret, use <a>PutResourcePolicy</a>.
            </para>
             </li> <li> 
            <para>
            To retrieve the current resource-based policy attached to a secret, use <a>GetResourcePolicy</a>.
            </para>
             </li> <li> 
            <para>
            To list all of the currently available secrets, use <a>ListSecrets</a>.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteResourcePolicy service method.</param>
            
            <returns>The response from the DeleteResourcePolicy service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/DeleteResourcePolicy">REST API Reference for DeleteResourcePolicy Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.DeleteResourcePolicyAsync(Amazon.SecretsManager.Model.DeleteResourcePolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the resource-based permission policy attached to the secret.
            
             
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:DeleteResourcePolicy
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To attach a resource policy to a secret, use <a>PutResourcePolicy</a>.
            </para>
             </li> <li> 
            <para>
            To retrieve the current resource-based policy attached to a secret, use <a>GetResourcePolicy</a>.
            </para>
             </li> <li> 
            <para>
            To list all of the currently available secrets, use <a>ListSecrets</a>.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteResourcePolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteResourcePolicy service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/DeleteResourcePolicy">REST API Reference for DeleteResourcePolicy Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.DeleteSecret(Amazon.SecretsManager.Model.DeleteSecretRequest)">
            <summary>
            Deletes an entire secret and all of the versions. You can optionally include a recovery
            window during which you can restore the secret. If you don't specify a recovery window
            value, the operation defaults to 30 days. Secrets Manager attaches a <code>DeletionDate</code>
            stamp to the secret that specifies the end of the recovery window. At the end of the
            recovery window, Secrets Manager deletes the secret permanently.
            
             
            <para>
            At any time before recovery window ends, you can use <a>RestoreSecret</a> to remove
            the <code>DeletionDate</code> and cancel the deletion of the secret.
            </para>
             
            <para>
            You cannot access the encrypted secret information in any secret scheduled for deletion.
            If you need to access that information, you must cancel the deletion with <a>RestoreSecret</a>
            and then retrieve the information.
            </para>
             <note> <ul> <li> 
            <para>
            There is no explicit operation to delete a version of a secret. Instead, remove all
            staging labels from the <code>VersionStage</code> field of a version. That marks the
            version as deprecated and allows Secrets Manager to delete it as needed. Versions
            without any staging labels do not show up in <a>ListSecretVersionIds</a> unless you
            specify <code>IncludeDeprecated</code>.
            </para>
             </li> <li> 
            <para>
            The permanent secret deletion at the end of the waiting period is performed as a background
            task with low priority. There is no guarantee of a specific time after the recovery
            window for the actual delete operation to occur.
            </para>
             </li> </ul> </note> 
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:DeleteSecret
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To create a secret, use <a>CreateSecret</a>.
            </para>
             </li> <li> 
            <para>
            To cancel deletion of a version of a secret before the recovery window has expired,
            use <a>RestoreSecret</a>.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteSecret service method.</param>
            
            <returns>The response from the DeleteSecret service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/DeleteSecret">REST API Reference for DeleteSecret Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.DeleteSecretAsync(Amazon.SecretsManager.Model.DeleteSecretRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes an entire secret and all of the versions. You can optionally include a recovery
            window during which you can restore the secret. If you don't specify a recovery window
            value, the operation defaults to 30 days. Secrets Manager attaches a <code>DeletionDate</code>
            stamp to the secret that specifies the end of the recovery window. At the end of the
            recovery window, Secrets Manager deletes the secret permanently.
            
             
            <para>
            At any time before recovery window ends, you can use <a>RestoreSecret</a> to remove
            the <code>DeletionDate</code> and cancel the deletion of the secret.
            </para>
             
            <para>
            You cannot access the encrypted secret information in any secret scheduled for deletion.
            If you need to access that information, you must cancel the deletion with <a>RestoreSecret</a>
            and then retrieve the information.
            </para>
             <note> <ul> <li> 
            <para>
            There is no explicit operation to delete a version of a secret. Instead, remove all
            staging labels from the <code>VersionStage</code> field of a version. That marks the
            version as deprecated and allows Secrets Manager to delete it as needed. Versions
            without any staging labels do not show up in <a>ListSecretVersionIds</a> unless you
            specify <code>IncludeDeprecated</code>.
            </para>
             </li> <li> 
            <para>
            The permanent secret deletion at the end of the waiting period is performed as a background
            task with low priority. There is no guarantee of a specific time after the recovery
            window for the actual delete operation to occur.
            </para>
             </li> </ul> </note> 
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:DeleteSecret
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To create a secret, use <a>CreateSecret</a>.
            </para>
             </li> <li> 
            <para>
            To cancel deletion of a version of a secret before the recovery window has expired,
            use <a>RestoreSecret</a>.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteSecret service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteSecret service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/DeleteSecret">REST API Reference for DeleteSecret Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.DescribeSecret(Amazon.SecretsManager.Model.DescribeSecretRequest)">
            <summary>
            Retrieves the details of a secret. It does not include the encrypted fields. Secrets
            Manager only returns fields populated with a value in the response. 
            
             
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:DescribeSecret
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To create a secret, use <a>CreateSecret</a>.
            </para>
             </li> <li> 
            <para>
            To modify a secret, use <a>UpdateSecret</a>.
            </para>
             </li> <li> 
            <para>
            To retrieve the encrypted secret information in a version of the secret, use <a>GetSecretValue</a>.
            </para>
             </li> <li> 
            <para>
            To list all of the secrets in the Amazon Web Services account, use <a>ListSecrets</a>.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeSecret service method.</param>
            
            <returns>The response from the DescribeSecret service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/DescribeSecret">REST API Reference for DescribeSecret Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.DescribeSecretAsync(Amazon.SecretsManager.Model.DescribeSecretRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the details of a secret. It does not include the encrypted fields. Secrets
            Manager only returns fields populated with a value in the response. 
            
             
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:DescribeSecret
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To create a secret, use <a>CreateSecret</a>.
            </para>
             </li> <li> 
            <para>
            To modify a secret, use <a>UpdateSecret</a>.
            </para>
             </li> <li> 
            <para>
            To retrieve the encrypted secret information in a version of the secret, use <a>GetSecretValue</a>.
            </para>
             </li> <li> 
            <para>
            To list all of the secrets in the Amazon Web Services account, use <a>ListSecrets</a>.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeSecret service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeSecret service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/DescribeSecret">REST API Reference for DescribeSecret Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.GetRandomPassword(Amazon.SecretsManager.Model.GetRandomPasswordRequest)">
            <summary>
            Generates a random password of the specified complexity. This operation is intended
            for use in the Lambda rotation function. Per best practice, we recommend that you
            specify the maximum length and include every character type that the system you are
            generating a password for can support.
            
             
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:GetRandomPassword
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetRandomPassword service method.</param>
            
            <returns>The response from the GetRandomPassword service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/GetRandomPassword">REST API Reference for GetRandomPassword Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.GetRandomPasswordAsync(Amazon.SecretsManager.Model.GetRandomPasswordRequest,System.Threading.CancellationToken)">
            <summary>
            Generates a random password of the specified complexity. This operation is intended
            for use in the Lambda rotation function. Per best practice, we recommend that you
            specify the maximum length and include every character type that the system you are
            generating a password for can support.
            
             
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:GetRandomPassword
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetRandomPassword service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetRandomPassword service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/GetRandomPassword">REST API Reference for GetRandomPassword Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.GetResourcePolicy(Amazon.SecretsManager.Model.GetResourcePolicyRequest)">
            <summary>
            Retrieves the JSON text of the resource-based policy document attached to the specified
            secret. The JSON request string input and response output displays formatted code
            with white space and line breaks for better readability. Submit your input as a single
            line JSON string.
            
             
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:GetResourcePolicy
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To attach a resource policy to a secret, use <a>PutResourcePolicy</a>.
            </para>
             </li> <li> 
            <para>
            To delete the resource-based policy attached to a secret, use <a>DeleteResourcePolicy</a>.
            </para>
             </li> <li> 
            <para>
            To list all of the currently available secrets, use <a>ListSecrets</a>.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetResourcePolicy service method.</param>
            
            <returns>The response from the GetResourcePolicy service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/GetResourcePolicy">REST API Reference for GetResourcePolicy Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.GetResourcePolicyAsync(Amazon.SecretsManager.Model.GetResourcePolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the JSON text of the resource-based policy document attached to the specified
            secret. The JSON request string input and response output displays formatted code
            with white space and line breaks for better readability. Submit your input as a single
            line JSON string.
            
             
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:GetResourcePolicy
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To attach a resource policy to a secret, use <a>PutResourcePolicy</a>.
            </para>
             </li> <li> 
            <para>
            To delete the resource-based policy attached to a secret, use <a>DeleteResourcePolicy</a>.
            </para>
             </li> <li> 
            <para>
            To list all of the currently available secrets, use <a>ListSecrets</a>.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetResourcePolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetResourcePolicy service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/GetResourcePolicy">REST API Reference for GetResourcePolicy Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.GetSecretValue(Amazon.SecretsManager.Model.GetSecretValueRequest)">
            <summary>
            Retrieves the contents of the encrypted fields <code>SecretString</code> or <code>SecretBinary</code>
            from the specified version of a secret, whichever contains content.
            
             
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:GetSecretValue
            </para>
             </li> <li> 
            <para>
            kms:Decrypt - required only if you use a customer-managed Amazon Web Services KMS
            key to encrypt the secret. You do not need this permission to use the account's default
            Amazon Web Services managed CMK for Secrets Manager.
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To create a new version of the secret with different encrypted information, use <a>PutSecretValue</a>.
            </para>
             </li> <li> 
            <para>
            To retrieve the non-encrypted details for the secret, use <a>DescribeSecret</a>.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSecretValue service method.</param>
            
            <returns>The response from the GetSecretValue service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.DecryptionFailureException">
            Secrets Manager can't decrypt the protected secret text using the provided KMS key.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/GetSecretValue">REST API Reference for GetSecretValue Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.GetSecretValueAsync(Amazon.SecretsManager.Model.GetSecretValueRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the contents of the encrypted fields <code>SecretString</code> or <code>SecretBinary</code>
            from the specified version of a secret, whichever contains content.
            
             
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:GetSecretValue
            </para>
             </li> <li> 
            <para>
            kms:Decrypt - required only if you use a customer-managed Amazon Web Services KMS
            key to encrypt the secret. You do not need this permission to use the account's default
            Amazon Web Services managed CMK for Secrets Manager.
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To create a new version of the secret with different encrypted information, use <a>PutSecretValue</a>.
            </para>
             </li> <li> 
            <para>
            To retrieve the non-encrypted details for the secret, use <a>DescribeSecret</a>.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSecretValue service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetSecretValue service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.DecryptionFailureException">
            Secrets Manager can't decrypt the protected secret text using the provided KMS key.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/GetSecretValue">REST API Reference for GetSecretValue Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.ListSecrets(Amazon.SecretsManager.Model.ListSecretsRequest)">
            <summary>
            Lists all of the secrets that are stored by Secrets Manager in the Amazon Web Services
            account. To list the versions currently stored for a specific secret, use <a>ListSecretVersionIds</a>.
            The encrypted fields <code>SecretString</code> and <code>SecretBinary</code> are not
            included in the output. To get that information, call the <a>GetSecretValue</a> operation.
            
             <note> 
            <para>
            Always check the <code>NextToken</code> response parameter when calling any of the
            <code>List*</code> operations. These operations can occasionally return an empty or
            shorter than expected list of results even when there more results become available.
            When this happens, the <code>NextToken</code> response parameter contains a value
            to pass to the next call to the same API to request the next part of the list.
            </para>
             </note> 
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:ListSecrets
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To list the versions attached to a secret, use <a>ListSecretVersionIds</a>.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListSecrets service method.</param>
            
            <returns>The response from the ListSecrets service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidNextTokenException">
            You provided an invalid <code>NextToken</code> value.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/ListSecrets">REST API Reference for ListSecrets Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.ListSecretsAsync(Amazon.SecretsManager.Model.ListSecretsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all of the secrets that are stored by Secrets Manager in the Amazon Web Services
            account. To list the versions currently stored for a specific secret, use <a>ListSecretVersionIds</a>.
            The encrypted fields <code>SecretString</code> and <code>SecretBinary</code> are not
            included in the output. To get that information, call the <a>GetSecretValue</a> operation.
            
             <note> 
            <para>
            Always check the <code>NextToken</code> response parameter when calling any of the
            <code>List*</code> operations. These operations can occasionally return an empty or
            shorter than expected list of results even when there more results become available.
            When this happens, the <code>NextToken</code> response parameter contains a value
            to pass to the next call to the same API to request the next part of the list.
            </para>
             </note> 
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:ListSecrets
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To list the versions attached to a secret, use <a>ListSecretVersionIds</a>.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListSecrets service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListSecrets service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidNextTokenException">
            You provided an invalid <code>NextToken</code> value.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/ListSecrets">REST API Reference for ListSecrets Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.ListSecretVersionIds(Amazon.SecretsManager.Model.ListSecretVersionIdsRequest)">
            <summary>
            Lists all of the versions attached to the specified secret. The output does not include
            the <code>SecretString</code> or <code>SecretBinary</code> fields. By default, the
            list includes only versions that have at least one staging label in <code>VersionStage</code>
            attached.
            
             <note> 
            <para>
            Always check the <code>NextToken</code> response parameter when calling any of the
            <code>List*</code> operations. These operations can occasionally return an empty or
            shorter than expected list of results even when there more results become available.
            When this happens, the <code>NextToken</code> response parameter contains a value
            to pass to the next call to the same API to request the next part of the list.
            </para>
             </note> 
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:ListSecretVersionIds
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To list the secrets in an account, use <a>ListSecrets</a>.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListSecretVersionIds service method.</param>
            
            <returns>The response from the ListSecretVersionIds service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidNextTokenException">
            You provided an invalid <code>NextToken</code> value.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/ListSecretVersionIds">REST API Reference for ListSecretVersionIds Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.ListSecretVersionIdsAsync(Amazon.SecretsManager.Model.ListSecretVersionIdsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all of the versions attached to the specified secret. The output does not include
            the <code>SecretString</code> or <code>SecretBinary</code> fields. By default, the
            list includes only versions that have at least one staging label in <code>VersionStage</code>
            attached.
            
             <note> 
            <para>
            Always check the <code>NextToken</code> response parameter when calling any of the
            <code>List*</code> operations. These operations can occasionally return an empty or
            shorter than expected list of results even when there more results become available.
            When this happens, the <code>NextToken</code> response parameter contains a value
            to pass to the next call to the same API to request the next part of the list.
            </para>
             </note> 
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:ListSecretVersionIds
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To list the secrets in an account, use <a>ListSecrets</a>.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListSecretVersionIds service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListSecretVersionIds service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidNextTokenException">
            You provided an invalid <code>NextToken</code> value.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/ListSecretVersionIds">REST API Reference for ListSecretVersionIds Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.PutResourcePolicy(Amazon.SecretsManager.Model.PutResourcePolicyRequest)">
            <summary>
            Attaches the contents of the specified resource-based permission policy to a secret.
            A resource-based policy is optional. Alternatively, you can use IAM identity-based
            policies that specify the secret's Amazon Resource Name (ARN) in the policy statement's
            <code>Resources</code> element. You can also use a combination of both identity-based
            and resource-based policies. The affected users and roles receive the permissions
            that are permitted by all of the relevant policies. For more information, see <a href="http://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access_resource-based-policies.html">Using
            Resource-Based Policies for Amazon Web Services Secrets Manager</a>. For the complete
            description of the Amazon Web Services policy syntax and grammar, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies.html">IAM
            JSON Policy Reference</a> in the <i>IAM User Guide</i>.
            
             
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:PutResourcePolicy
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To retrieve the resource policy attached to a secret, use <a>GetResourcePolicy</a>.
            </para>
             </li> <li> 
            <para>
            To delete the resource-based policy attached to a secret, use <a>DeleteResourcePolicy</a>.
            </para>
             </li> <li> 
            <para>
            To list all of the currently available secrets, use <a>ListSecrets</a>.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutResourcePolicy service method.</param>
            
            <returns>The response from the PutResourcePolicy service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.MalformedPolicyDocumentException">
            You provided a resource-based policy with syntax errors.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.PublicPolicyException">
            The BlockPublicPolicy parameter is set to true and the resource policy did not prevent
            broad access to the secret.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/PutResourcePolicy">REST API Reference for PutResourcePolicy Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.PutResourcePolicyAsync(Amazon.SecretsManager.Model.PutResourcePolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Attaches the contents of the specified resource-based permission policy to a secret.
            A resource-based policy is optional. Alternatively, you can use IAM identity-based
            policies that specify the secret's Amazon Resource Name (ARN) in the policy statement's
            <code>Resources</code> element. You can also use a combination of both identity-based
            and resource-based policies. The affected users and roles receive the permissions
            that are permitted by all of the relevant policies. For more information, see <a href="http://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access_resource-based-policies.html">Using
            Resource-Based Policies for Amazon Web Services Secrets Manager</a>. For the complete
            description of the Amazon Web Services policy syntax and grammar, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies.html">IAM
            JSON Policy Reference</a> in the <i>IAM User Guide</i>.
            
             
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:PutResourcePolicy
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To retrieve the resource policy attached to a secret, use <a>GetResourcePolicy</a>.
            </para>
             </li> <li> 
            <para>
            To delete the resource-based policy attached to a secret, use <a>DeleteResourcePolicy</a>.
            </para>
             </li> <li> 
            <para>
            To list all of the currently available secrets, use <a>ListSecrets</a>.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutResourcePolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutResourcePolicy service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.MalformedPolicyDocumentException">
            You provided a resource-based policy with syntax errors.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.PublicPolicyException">
            The BlockPublicPolicy parameter is set to true and the resource policy did not prevent
            broad access to the secret.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/PutResourcePolicy">REST API Reference for PutResourcePolicy Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.PutSecretValue(Amazon.SecretsManager.Model.PutSecretValueRequest)">
            <summary>
            Stores a new encrypted secret value in the specified secret. To do this, the operation
            creates a new version and attaches it to the secret. The version can contain a new
            <code>SecretString</code> value or a new <code>SecretBinary</code> value. You can
            also specify the staging labels that are initially attached to the new version.
            
             
            <para>
            We recommend you avoid calling <code>PutSecretValue</code> at a sustained rate of
            more than once every 10 minutes. When you update the secret value, Secrets Manager
            creates a new version of the secret. Secrets Manager removes outdated versions when
            there are more than 100, but it does not remove versions created less than 24 hours
            ago. If you call <code>PutSecretValue</code> more than once every 10 minutes, you
            create more versions than Secrets Manager removes, and you will reach the quota for
            secret versions.
            </para>
             <ul> <li> 
            <para>
            If this operation creates the first version for the secret then Secrets Manager automatically
            attaches the staging label <code>AWSCURRENT</code> to the new version.
            </para>
             </li> <li> 
            <para>
            If you do not specify a value for VersionStages then Secrets Manager automatically
            moves the staging label <code>AWSCURRENT</code> to this new version.
            </para>
             </li> <li> 
            <para>
            If this operation moves the staging label <code>AWSCURRENT</code> from another version
            to this version, then Secrets Manager also automatically moves the staging label <code>AWSPREVIOUS</code>
            to the version that <code>AWSCURRENT</code> was removed from.
            </para>
             </li> <li> 
            <para>
            This operation is idempotent. If a version with a <code>VersionId</code> with the
            same value as the <code>ClientRequestToken</code> parameter already exists and you
            specify the same secret data, the operation succeeds but does nothing. However, if
            the secret data is different, then the operation fails because you cannot modify an
            existing version; you can only create new ones.
            </para>
             </li> </ul> <note> <ul> <li> 
            <para>
            If you call an operation to encrypt or decrypt the <code>SecretString</code> or <code>SecretBinary</code>
            for a secret in the same account as the calling user and that secret doesn't specify
            a Amazon Web Services KMS encryption key, Secrets Manager uses the account's default
            Amazon Web Services managed customer master key (CMK) with the alias <code>aws/secretsmanager</code>.
            If this key doesn't already exist in your account then Secrets Manager creates it
            for you automatically. All users and roles in the same Amazon Web Services account
            automatically have access to use the default CMK. Note that if an Secrets Manager
            API call results in Amazon Web Services creating the account's Amazon Web Services-managed
            CMK, it can result in a one-time significant delay in returning the result.
            </para>
             </li> <li> 
            <para>
            If the secret resides in a different Amazon Web Services account from the credentials
            calling an API that requires encryption or decryption of the secret value then you
            must create and use a custom Amazon Web Services KMS CMK because you can't access
            the default CMK for the account using credentials from a different Amazon Web Services
            account. Store the ARN of the CMK in the secret when you create the secret or when
            you update it by including it in the <code>KMSKeyId</code>. If you call an API that
            must encrypt or decrypt <code>SecretString</code> or <code>SecretBinary</code> using
            credentials from a different account then the Amazon Web Services KMS key policy must
            grant cross-account access to that other account's user or role for both the kms:GenerateDataKey
            and kms:Decrypt operations.
            </para>
             </li> </ul> </note> 
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:PutSecretValue
            </para>
             </li> <li> 
            <para>
            kms:GenerateDataKey - needed only if you use a customer-managed Amazon Web Services
            KMS key to encrypt the secret. You do not need this permission to use the account's
            default Amazon Web Services managed CMK for Secrets Manager.
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To retrieve the encrypted value you store in the version of a secret, use <a>GetSecretValue</a>.
            </para>
             </li> <li> 
            <para>
            To create a secret, use <a>CreateSecret</a>.
            </para>
             </li> <li> 
            <para>
            To get the details for a secret, use <a>DescribeSecret</a>.
            </para>
             </li> <li> 
            <para>
            To list the versions attached to a secret, use <a>ListSecretVersionIds</a>.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutSecretValue service method.</param>
            
            <returns>The response from the PutSecretValue service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.EncryptionFailureException">
            Secrets Manager can't encrypt the protected secret text using the provided KMS key.
            Check that the customer master key (CMK) is available, enabled, and not in an invalid
            state. For more information, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">How
            Key State Affects Use of a Customer Master Key</a>.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.LimitExceededException">
            The request failed because it would exceed one of the Secrets Manager internal limits.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceExistsException">
            A resource with the ID you requested already exists.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/PutSecretValue">REST API Reference for PutSecretValue Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.PutSecretValueAsync(Amazon.SecretsManager.Model.PutSecretValueRequest,System.Threading.CancellationToken)">
            <summary>
            Stores a new encrypted secret value in the specified secret. To do this, the operation
            creates a new version and attaches it to the secret. The version can contain a new
            <code>SecretString</code> value or a new <code>SecretBinary</code> value. You can
            also specify the staging labels that are initially attached to the new version.
            
             
            <para>
            We recommend you avoid calling <code>PutSecretValue</code> at a sustained rate of
            more than once every 10 minutes. When you update the secret value, Secrets Manager
            creates a new version of the secret. Secrets Manager removes outdated versions when
            there are more than 100, but it does not remove versions created less than 24 hours
            ago. If you call <code>PutSecretValue</code> more than once every 10 minutes, you
            create more versions than Secrets Manager removes, and you will reach the quota for
            secret versions.
            </para>
             <ul> <li> 
            <para>
            If this operation creates the first version for the secret then Secrets Manager automatically
            attaches the staging label <code>AWSCURRENT</code> to the new version.
            </para>
             </li> <li> 
            <para>
            If you do not specify a value for VersionStages then Secrets Manager automatically
            moves the staging label <code>AWSCURRENT</code> to this new version.
            </para>
             </li> <li> 
            <para>
            If this operation moves the staging label <code>AWSCURRENT</code> from another version
            to this version, then Secrets Manager also automatically moves the staging label <code>AWSPREVIOUS</code>
            to the version that <code>AWSCURRENT</code> was removed from.
            </para>
             </li> <li> 
            <para>
            This operation is idempotent. If a version with a <code>VersionId</code> with the
            same value as the <code>ClientRequestToken</code> parameter already exists and you
            specify the same secret data, the operation succeeds but does nothing. However, if
            the secret data is different, then the operation fails because you cannot modify an
            existing version; you can only create new ones.
            </para>
             </li> </ul> <note> <ul> <li> 
            <para>
            If you call an operation to encrypt or decrypt the <code>SecretString</code> or <code>SecretBinary</code>
            for a secret in the same account as the calling user and that secret doesn't specify
            a Amazon Web Services KMS encryption key, Secrets Manager uses the account's default
            Amazon Web Services managed customer master key (CMK) with the alias <code>aws/secretsmanager</code>.
            If this key doesn't already exist in your account then Secrets Manager creates it
            for you automatically. All users and roles in the same Amazon Web Services account
            automatically have access to use the default CMK. Note that if an Secrets Manager
            API call results in Amazon Web Services creating the account's Amazon Web Services-managed
            CMK, it can result in a one-time significant delay in returning the result.
            </para>
             </li> <li> 
            <para>
            If the secret resides in a different Amazon Web Services account from the credentials
            calling an API that requires encryption or decryption of the secret value then you
            must create and use a custom Amazon Web Services KMS CMK because you can't access
            the default CMK for the account using credentials from a different Amazon Web Services
            account. Store the ARN of the CMK in the secret when you create the secret or when
            you update it by including it in the <code>KMSKeyId</code>. If you call an API that
            must encrypt or decrypt <code>SecretString</code> or <code>SecretBinary</code> using
            credentials from a different account then the Amazon Web Services KMS key policy must
            grant cross-account access to that other account's user or role for both the kms:GenerateDataKey
            and kms:Decrypt operations.
            </para>
             </li> </ul> </note> 
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:PutSecretValue
            </para>
             </li> <li> 
            <para>
            kms:GenerateDataKey - needed only if you use a customer-managed Amazon Web Services
            KMS key to encrypt the secret. You do not need this permission to use the account's
            default Amazon Web Services managed CMK for Secrets Manager.
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To retrieve the encrypted value you store in the version of a secret, use <a>GetSecretValue</a>.
            </para>
             </li> <li> 
            <para>
            To create a secret, use <a>CreateSecret</a>.
            </para>
             </li> <li> 
            <para>
            To get the details for a secret, use <a>DescribeSecret</a>.
            </para>
             </li> <li> 
            <para>
            To list the versions attached to a secret, use <a>ListSecretVersionIds</a>.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutSecretValue service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutSecretValue service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.EncryptionFailureException">
            Secrets Manager can't encrypt the protected secret text using the provided KMS key.
            Check that the customer master key (CMK) is available, enabled, and not in an invalid
            state. For more information, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">How
            Key State Affects Use of a Customer Master Key</a>.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.LimitExceededException">
            The request failed because it would exceed one of the Secrets Manager internal limits.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceExistsException">
            A resource with the ID you requested already exists.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/PutSecretValue">REST API Reference for PutSecretValue Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.RemoveRegionsFromReplication(Amazon.SecretsManager.Model.RemoveRegionsFromReplicationRequest)">
            <summary>
            Remove regions from replication.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RemoveRegionsFromReplication service method.</param>
            
            <returns>The response from the RemoveRegionsFromReplication service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/RemoveRegionsFromReplication">REST API Reference for RemoveRegionsFromReplication Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.RemoveRegionsFromReplicationAsync(Amazon.SecretsManager.Model.RemoveRegionsFromReplicationRequest,System.Threading.CancellationToken)">
            <summary>
            Remove regions from replication.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RemoveRegionsFromReplication service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RemoveRegionsFromReplication service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/RemoveRegionsFromReplication">REST API Reference for RemoveRegionsFromReplication Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.ReplicateSecretToRegions(Amazon.SecretsManager.Model.ReplicateSecretToRegionsRequest)">
            <summary>
            Converts an existing secret to a multi-Region secret and begins replication the secret
            to a list of new regions.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ReplicateSecretToRegions service method.</param>
            
            <returns>The response from the ReplicateSecretToRegions service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/ReplicateSecretToRegions">REST API Reference for ReplicateSecretToRegions Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.ReplicateSecretToRegionsAsync(Amazon.SecretsManager.Model.ReplicateSecretToRegionsRequest,System.Threading.CancellationToken)">
            <summary>
            Converts an existing secret to a multi-Region secret and begins replication the secret
            to a list of new regions.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ReplicateSecretToRegions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ReplicateSecretToRegions service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/ReplicateSecretToRegions">REST API Reference for ReplicateSecretToRegions Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.RestoreSecret(Amazon.SecretsManager.Model.RestoreSecretRequest)">
            <summary>
            Cancels the scheduled deletion of a secret by removing the <code>DeletedDate</code>
            time stamp. This makes the secret accessible to query once again.
            
             
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:RestoreSecret
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To delete a secret, use <a>DeleteSecret</a>.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RestoreSecret service method.</param>
            
            <returns>The response from the RestoreSecret service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/RestoreSecret">REST API Reference for RestoreSecret Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.RestoreSecretAsync(Amazon.SecretsManager.Model.RestoreSecretRequest,System.Threading.CancellationToken)">
            <summary>
            Cancels the scheduled deletion of a secret by removing the <code>DeletedDate</code>
            time stamp. This makes the secret accessible to query once again.
            
             
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:RestoreSecret
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To delete a secret, use <a>DeleteSecret</a>.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RestoreSecret service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RestoreSecret service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/RestoreSecret">REST API Reference for RestoreSecret Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.RotateSecret(Amazon.SecretsManager.Model.RotateSecretRequest)">
            <summary>
            Configures and starts the asynchronous process of rotating this secret. If you include
            the configuration parameters, the operation sets those values for the secret and then
            immediately starts a rotation. If you do not include the configuration parameters,
            the operation starts a rotation with the values already stored in the secret. After
            the rotation completes, the protected service and its clients all use the new version
            of the secret. 
            
             
            <para>
            This required configuration information includes the ARN of an Amazon Web Services
            Lambda function and optionally, the time between scheduled rotations. The Lambda rotation
            function creates a new version of the secret and creates or updates the credentials
            on the protected service to match. After testing the new credentials, the function
            marks the new secret with the staging label <code>AWSCURRENT</code> so that your clients
            all immediately begin to use the new version. For more information about rotating
            secrets and how to configure a Lambda function to rotate the secrets for your protected
            service, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotating-secrets.html">Rotating
            Secrets in Amazon Web Services Secrets Manager</a> in the <i>Amazon Web Services Secrets
            Manager User Guide</i>.
            </para>
             
            <para>
            Secrets Manager schedules the next rotation when the previous one completes. Secrets
            Manager schedules the date by adding the rotation interval (number of days) to the
            actual date of the last rotation. The service chooses the hour within that 24-hour
            date window randomly. The minute is also chosen somewhat randomly, but weighted towards
            the top of the hour and influenced by a variety of factors that help distribute load.
            </para>
             
            <para>
            The rotation function must end with the versions of the secret in one of two states:
            </para>
             <ul> <li> 
            <para>
            The <code>AWSPENDING</code> and <code>AWSCURRENT</code> staging labels are attached
            to the same version of the secret, or
            </para>
             </li> <li> 
            <para>
            The <code>AWSPENDING</code> staging label is not attached to any version of the secret.
            </para>
             </li> </ul> 
            <para>
            If the <code>AWSPENDING</code> staging label is present but not attached to the same
            version as <code>AWSCURRENT</code> then any later invocation of <code>RotateSecret</code>
            assumes that a previous rotation request is still in progress and returns an error.
            </para>
             
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:RotateSecret
            </para>
             </li> <li> 
            <para>
            lambda:InvokeFunction (on the function specified in the secret's metadata)
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To list the secrets in your account, use <a>ListSecrets</a>.
            </para>
             </li> <li> 
            <para>
            To get the details for a version of a secret, use <a>DescribeSecret</a>.
            </para>
             </li> <li> 
            <para>
            To create a new version of a secret, use <a>CreateSecret</a>.
            </para>
             </li> <li> 
            <para>
            To attach staging labels to or remove staging labels from a version of a secret, use
            <a>UpdateSecretVersionStage</a>.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RotateSecret service method.</param>
            
            <returns>The response from the RotateSecret service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/RotateSecret">REST API Reference for RotateSecret Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.RotateSecretAsync(Amazon.SecretsManager.Model.RotateSecretRequest,System.Threading.CancellationToken)">
            <summary>
            Configures and starts the asynchronous process of rotating this secret. If you include
            the configuration parameters, the operation sets those values for the secret and then
            immediately starts a rotation. If you do not include the configuration parameters,
            the operation starts a rotation with the values already stored in the secret. After
            the rotation completes, the protected service and its clients all use the new version
            of the secret. 
            
             
            <para>
            This required configuration information includes the ARN of an Amazon Web Services
            Lambda function and optionally, the time between scheduled rotations. The Lambda rotation
            function creates a new version of the secret and creates or updates the credentials
            on the protected service to match. After testing the new credentials, the function
            marks the new secret with the staging label <code>AWSCURRENT</code> so that your clients
            all immediately begin to use the new version. For more information about rotating
            secrets and how to configure a Lambda function to rotate the secrets for your protected
            service, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotating-secrets.html">Rotating
            Secrets in Amazon Web Services Secrets Manager</a> in the <i>Amazon Web Services Secrets
            Manager User Guide</i>.
            </para>
             
            <para>
            Secrets Manager schedules the next rotation when the previous one completes. Secrets
            Manager schedules the date by adding the rotation interval (number of days) to the
            actual date of the last rotation. The service chooses the hour within that 24-hour
            date window randomly. The minute is also chosen somewhat randomly, but weighted towards
            the top of the hour and influenced by a variety of factors that help distribute load.
            </para>
             
            <para>
            The rotation function must end with the versions of the secret in one of two states:
            </para>
             <ul> <li> 
            <para>
            The <code>AWSPENDING</code> and <code>AWSCURRENT</code> staging labels are attached
            to the same version of the secret, or
            </para>
             </li> <li> 
            <para>
            The <code>AWSPENDING</code> staging label is not attached to any version of the secret.
            </para>
             </li> </ul> 
            <para>
            If the <code>AWSPENDING</code> staging label is present but not attached to the same
            version as <code>AWSCURRENT</code> then any later invocation of <code>RotateSecret</code>
            assumes that a previous rotation request is still in progress and returns an error.
            </para>
             
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:RotateSecret
            </para>
             </li> <li> 
            <para>
            lambda:InvokeFunction (on the function specified in the secret's metadata)
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To list the secrets in your account, use <a>ListSecrets</a>.
            </para>
             </li> <li> 
            <para>
            To get the details for a version of a secret, use <a>DescribeSecret</a>.
            </para>
             </li> <li> 
            <para>
            To create a new version of a secret, use <a>CreateSecret</a>.
            </para>
             </li> <li> 
            <para>
            To attach staging labels to or remove staging labels from a version of a secret, use
            <a>UpdateSecretVersionStage</a>.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RotateSecret service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RotateSecret service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/RotateSecret">REST API Reference for RotateSecret Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.StopReplicationToReplica(Amazon.SecretsManager.Model.StopReplicationToReplicaRequest)">
            <summary>
            Removes the secret from replication and promotes the secret to a regional secret in
            the replica Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StopReplicationToReplica service method.</param>
            
            <returns>The response from the StopReplicationToReplica service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/StopReplicationToReplica">REST API Reference for StopReplicationToReplica Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.StopReplicationToReplicaAsync(Amazon.SecretsManager.Model.StopReplicationToReplicaRequest,System.Threading.CancellationToken)">
            <summary>
            Removes the secret from replication and promotes the secret to a regional secret in
            the replica Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StopReplicationToReplica service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StopReplicationToReplica service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/StopReplicationToReplica">REST API Reference for StopReplicationToReplica Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.TagResource(Amazon.SecretsManager.Model.TagResourceRequest)">
            <summary>
            Attaches one or more tags, each consisting of a key name and a value, to the specified
            secret. Tags are part of the secret's overall metadata, and are not associated with
            any specific version of the secret. This operation only appends tags to the existing
            list of tags. To remove tags, you must use <a>UntagResource</a>.
            
             
            <para>
            The following basic restrictions apply to tags:
            </para>
             <ul> <li> 
            <para>
            Maximum number of tags per secret—50
            </para>
             </li> <li> 
            <para>
            Maximum key length—127 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            Maximum value length—255 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            Tag keys and values are case sensitive.
            </para>
             </li> <li> 
            <para>
            Do not use the <code>aws:</code> prefix in your tag names or values because Amazon
            Web Services reserves it for Amazon Web Services use. You can't edit or delete tag
            names or values with this prefix. Tags with this prefix do not count against your
            tags per secret limit.
            </para>
             </li> <li> 
            <para>
            If you use your tagging schema across multiple services and resources, remember other
            services might have restrictions on allowed characters. Generally allowed characters:
            letters, spaces, and numbers representable in UTF-8, plus the following special characters:
            + - = . _ : / @.
            </para>
             </li> </ul> <important> 
            <para>
            If you use tags as part of your security strategy, then adding or removing a tag can
            change permissions. If successfully completing this operation would result in you
            losing your permissions for this secret, then the operation is blocked and returns
            an Access Denied error.
            </para>
             </important> 
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:TagResource
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To remove one or more tags from the collection attached to a secret, use <a>UntagResource</a>.
            </para>
             </li> <li> 
            <para>
            To view the list of tags attached to a secret, use <a>DescribeSecret</a>.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            
            <returns>The response from the TagResource service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.TagResourceAsync(Amazon.SecretsManager.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Attaches one or more tags, each consisting of a key name and a value, to the specified
            secret. Tags are part of the secret's overall metadata, and are not associated with
            any specific version of the secret. This operation only appends tags to the existing
            list of tags. To remove tags, you must use <a>UntagResource</a>.
            
             
            <para>
            The following basic restrictions apply to tags:
            </para>
             <ul> <li> 
            <para>
            Maximum number of tags per secret—50
            </para>
             </li> <li> 
            <para>
            Maximum key length—127 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            Maximum value length—255 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            Tag keys and values are case sensitive.
            </para>
             </li> <li> 
            <para>
            Do not use the <code>aws:</code> prefix in your tag names or values because Amazon
            Web Services reserves it for Amazon Web Services use. You can't edit or delete tag
            names or values with this prefix. Tags with this prefix do not count against your
            tags per secret limit.
            </para>
             </li> <li> 
            <para>
            If you use your tagging schema across multiple services and resources, remember other
            services might have restrictions on allowed characters. Generally allowed characters:
            letters, spaces, and numbers representable in UTF-8, plus the following special characters:
            + - = . _ : / @.
            </para>
             </li> </ul> <important> 
            <para>
            If you use tags as part of your security strategy, then adding or removing a tag can
            change permissions. If successfully completing this operation would result in you
            losing your permissions for this secret, then the operation is blocked and returns
            an Access Denied error.
            </para>
             </important> 
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:TagResource
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To remove one or more tags from the collection attached to a secret, use <a>UntagResource</a>.
            </para>
             </li> <li> 
            <para>
            To view the list of tags attached to a secret, use <a>DescribeSecret</a>.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.UntagResource(Amazon.SecretsManager.Model.UntagResourceRequest)">
            <summary>
            Removes one or more tags from the specified secret.
            
             
            <para>
            This operation is idempotent. If a requested tag is not attached to the secret, no
            error is returned and the secret metadata is unchanged.
            </para>
             <important> 
            <para>
            If you use tags as part of your security strategy, then removing a tag can change
            permissions. If successfully completing this operation would result in you losing
            your permissions for this secret, then the operation is blocked and returns an Access
            Denied error.
            </para>
             </important> 
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:UntagResource
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To add one or more tags to the collection attached to a secret, use <a>TagResource</a>.
            </para>
             </li> <li> 
            <para>
            To view the list of tags attached to a secret, use <a>DescribeSecret</a>.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            
            <returns>The response from the UntagResource service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.UntagResourceAsync(Amazon.SecretsManager.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Removes one or more tags from the specified secret.
            
             
            <para>
            This operation is idempotent. If a requested tag is not attached to the secret, no
            error is returned and the secret metadata is unchanged.
            </para>
             <important> 
            <para>
            If you use tags as part of your security strategy, then removing a tag can change
            permissions. If successfully completing this operation would result in you losing
            your permissions for this secret, then the operation is blocked and returns an Access
            Denied error.
            </para>
             </important> 
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:UntagResource
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To add one or more tags to the collection attached to a secret, use <a>TagResource</a>.
            </para>
             </li> <li> 
            <para>
            To view the list of tags attached to a secret, use <a>DescribeSecret</a>.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.UpdateSecret(Amazon.SecretsManager.Model.UpdateSecretRequest)">
            <summary>
            Modifies many of the details of the specified secret. 
            
             
            <para>
            To change the secret value, you can also use <a>PutSecretValue</a>.
            </para>
             
            <para>
            To change the rotation configuration of a secret, use <a>RotateSecret</a> instead.
            </para>
             
            <para>
            We recommend you avoid calling <code>UpdateSecret</code> at a sustained rate of more
            than once every 10 minutes. When you call <code>UpdateSecret</code> to update the
            secret value, Secrets Manager creates a new version of the secret. Secrets Manager
            removes outdated versions when there are more than 100, but it does not remove versions
            created less than 24 hours ago. If you update the secret value more than once every
            10 minutes, you create more versions than Secrets Manager removes, and you will reach
            the quota for secret versions.
            </para>
             <note> 
            <para>
            The Secrets Manager console uses only the <code>SecretString</code> parameter and
            therefore limits you to encrypting and storing only a text string. To encrypt and
            store binary data as part of the version of a secret, you must use either the Amazon
            Web Services CLI or one of the Amazon Web Services SDKs.
            </para>
             </note> <ul> <li> 
            <para>
            If a version with a <code>VersionId</code> with the same value as the <code>ClientRequestToken</code>
            parameter already exists, the operation results in an error. You cannot modify an
            existing version, you can only create a new version.
            </para>
             </li> <li> 
            <para>
            If you include <code>SecretString</code> or <code>SecretBinary</code> to create a
            new secret version, Secrets Manager automatically attaches the staging label <code>AWSCURRENT</code>
            to the new version. 
            </para>
             </li> </ul> <note> <ul> <li> 
            <para>
            If you call an operation to encrypt or decrypt the <code>SecretString</code> or <code>SecretBinary</code>
            for a secret in the same account as the calling user and that secret doesn't specify
            a Amazon Web Services KMS encryption key, Secrets Manager uses the account's default
            Amazon Web Services managed customer master key (CMK) with the alias <code>aws/secretsmanager</code>.
            If this key doesn't already exist in your account then Secrets Manager creates it
            for you automatically. All users and roles in the same Amazon Web Services account
            automatically have access to use the default CMK. Note that if an Secrets Manager
            API call results in Amazon Web Services creating the account's Amazon Web Services-managed
            CMK, it can result in a one-time significant delay in returning the result.
            </para>
             </li> <li> 
            <para>
            If the secret resides in a different Amazon Web Services account from the credentials
            calling an API that requires encryption or decryption of the secret value then you
            must create and use a custom Amazon Web Services KMS CMK because you can't access
            the default CMK for the account using credentials from a different Amazon Web Services
            account. Store the ARN of the CMK in the secret when you create the secret or when
            you update it by including it in the <code>KMSKeyId</code>. If you call an API that
            must encrypt or decrypt <code>SecretString</code> or <code>SecretBinary</code> using
            credentials from a different account then the Amazon Web Services KMS key policy must
            grant cross-account access to that other account's user or role for both the kms:GenerateDataKey
            and kms:Decrypt operations.
            </para>
             </li> </ul> </note> 
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:UpdateSecret
            </para>
             </li> <li> 
            <para>
            kms:GenerateDataKey - needed only if you use a custom Amazon Web Services KMS key
            to encrypt the secret. You do not need this permission to use the account's Amazon
            Web Services managed CMK for Secrets Manager.
            </para>
             </li> <li> 
            <para>
            kms:Decrypt - needed only if you use a custom Amazon Web Services KMS key to encrypt
            the secret. You do not need this permission to use the account's Amazon Web Services
            managed CMK for Secrets Manager.
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To create a new secret, use <a>CreateSecret</a>.
            </para>
             </li> <li> 
            <para>
            To add only a new version to an existing secret, use <a>PutSecretValue</a>.
            </para>
             </li> <li> 
            <para>
            To get the details for a secret, use <a>DescribeSecret</a>.
            </para>
             </li> <li> 
            <para>
            To list the versions contained in a secret, use <a>ListSecretVersionIds</a>.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateSecret service method.</param>
            
            <returns>The response from the UpdateSecret service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.EncryptionFailureException">
            Secrets Manager can't encrypt the protected secret text using the provided KMS key.
            Check that the customer master key (CMK) is available, enabled, and not in an invalid
            state. For more information, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">How
            Key State Affects Use of a Customer Master Key</a>.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.LimitExceededException">
            The request failed because it would exceed one of the Secrets Manager internal limits.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.MalformedPolicyDocumentException">
            You provided a resource-based policy with syntax errors.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.PreconditionNotMetException">
            The request failed because you did not complete all the prerequisite steps.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceExistsException">
            A resource with the ID you requested already exists.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/UpdateSecret">REST API Reference for UpdateSecret Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.UpdateSecretAsync(Amazon.SecretsManager.Model.UpdateSecretRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies many of the details of the specified secret. 
            
             
            <para>
            To change the secret value, you can also use <a>PutSecretValue</a>.
            </para>
             
            <para>
            To change the rotation configuration of a secret, use <a>RotateSecret</a> instead.
            </para>
             
            <para>
            We recommend you avoid calling <code>UpdateSecret</code> at a sustained rate of more
            than once every 10 minutes. When you call <code>UpdateSecret</code> to update the
            secret value, Secrets Manager creates a new version of the secret. Secrets Manager
            removes outdated versions when there are more than 100, but it does not remove versions
            created less than 24 hours ago. If you update the secret value more than once every
            10 minutes, you create more versions than Secrets Manager removes, and you will reach
            the quota for secret versions.
            </para>
             <note> 
            <para>
            The Secrets Manager console uses only the <code>SecretString</code> parameter and
            therefore limits you to encrypting and storing only a text string. To encrypt and
            store binary data as part of the version of a secret, you must use either the Amazon
            Web Services CLI or one of the Amazon Web Services SDKs.
            </para>
             </note> <ul> <li> 
            <para>
            If a version with a <code>VersionId</code> with the same value as the <code>ClientRequestToken</code>
            parameter already exists, the operation results in an error. You cannot modify an
            existing version, you can only create a new version.
            </para>
             </li> <li> 
            <para>
            If you include <code>SecretString</code> or <code>SecretBinary</code> to create a
            new secret version, Secrets Manager automatically attaches the staging label <code>AWSCURRENT</code>
            to the new version. 
            </para>
             </li> </ul> <note> <ul> <li> 
            <para>
            If you call an operation to encrypt or decrypt the <code>SecretString</code> or <code>SecretBinary</code>
            for a secret in the same account as the calling user and that secret doesn't specify
            a Amazon Web Services KMS encryption key, Secrets Manager uses the account's default
            Amazon Web Services managed customer master key (CMK) with the alias <code>aws/secretsmanager</code>.
            If this key doesn't already exist in your account then Secrets Manager creates it
            for you automatically. All users and roles in the same Amazon Web Services account
            automatically have access to use the default CMK. Note that if an Secrets Manager
            API call results in Amazon Web Services creating the account's Amazon Web Services-managed
            CMK, it can result in a one-time significant delay in returning the result.
            </para>
             </li> <li> 
            <para>
            If the secret resides in a different Amazon Web Services account from the credentials
            calling an API that requires encryption or decryption of the secret value then you
            must create and use a custom Amazon Web Services KMS CMK because you can't access
            the default CMK for the account using credentials from a different Amazon Web Services
            account. Store the ARN of the CMK in the secret when you create the secret or when
            you update it by including it in the <code>KMSKeyId</code>. If you call an API that
            must encrypt or decrypt <code>SecretString</code> or <code>SecretBinary</code> using
            credentials from a different account then the Amazon Web Services KMS key policy must
            grant cross-account access to that other account's user or role for both the kms:GenerateDataKey
            and kms:Decrypt operations.
            </para>
             </li> </ul> </note> 
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:UpdateSecret
            </para>
             </li> <li> 
            <para>
            kms:GenerateDataKey - needed only if you use a custom Amazon Web Services KMS key
            to encrypt the secret. You do not need this permission to use the account's Amazon
            Web Services managed CMK for Secrets Manager.
            </para>
             </li> <li> 
            <para>
            kms:Decrypt - needed only if you use a custom Amazon Web Services KMS key to encrypt
            the secret. You do not need this permission to use the account's Amazon Web Services
            managed CMK for Secrets Manager.
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To create a new secret, use <a>CreateSecret</a>.
            </para>
             </li> <li> 
            <para>
            To add only a new version to an existing secret, use <a>PutSecretValue</a>.
            </para>
             </li> <li> 
            <para>
            To get the details for a secret, use <a>DescribeSecret</a>.
            </para>
             </li> <li> 
            <para>
            To list the versions contained in a secret, use <a>ListSecretVersionIds</a>.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateSecret service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateSecret service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.EncryptionFailureException">
            Secrets Manager can't encrypt the protected secret text using the provided KMS key.
            Check that the customer master key (CMK) is available, enabled, and not in an invalid
            state. For more information, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">How
            Key State Affects Use of a Customer Master Key</a>.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.LimitExceededException">
            The request failed because it would exceed one of the Secrets Manager internal limits.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.MalformedPolicyDocumentException">
            You provided a resource-based policy with syntax errors.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.PreconditionNotMetException">
            The request failed because you did not complete all the prerequisite steps.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceExistsException">
            A resource with the ID you requested already exists.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/UpdateSecret">REST API Reference for UpdateSecret Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.UpdateSecretVersionStage(Amazon.SecretsManager.Model.UpdateSecretVersionStageRequest)">
            <summary>
            Modifies the staging labels attached to a version of a secret. Staging labels are
            used to track a version as it progresses through the secret rotation process. You
            can attach a staging label to only one version of a secret at a time. If a staging
            label to be added is already attached to another version, then it is moved--removed
            from the other version first and then attached to this one. For more information about
            staging labels, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/terms-concepts.html#term_staging-label">Staging
            Labels</a> in the <i>Amazon Web Services Secrets Manager User Guide</i>. 
            
             
            <para>
            The staging labels that you specify in the <code>VersionStage</code> parameter are
            added to the existing list of staging labels--they don't replace it.
            </para>
             
            <para>
            You can move the <code>AWSCURRENT</code> staging label to this version by including
            it in this call.
            </para>
             <note> 
            <para>
            Whenever you move <code>AWSCURRENT</code>, Secrets Manager automatically moves the
            label <code>AWSPREVIOUS</code> to the version that <code>AWSCURRENT</code> was removed
            from.
            </para>
             </note> 
            <para>
            If this action results in the last label being removed from a version, then the version
            is considered to be 'deprecated' and can be deleted by Secrets Manager.
            </para>
             
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:UpdateSecretVersionStage
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To get the list of staging labels that are currently associated with a version of
            a secret, use <code> <a>DescribeSecret</a> </code> and examine the <code>SecretVersionsToStages</code>
            response value. 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateSecretVersionStage service method.</param>
            
            <returns>The response from the UpdateSecretVersionStage service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.LimitExceededException">
            The request failed because it would exceed one of the Secrets Manager internal limits.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/UpdateSecretVersionStage">REST API Reference for UpdateSecretVersionStage Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.UpdateSecretVersionStageAsync(Amazon.SecretsManager.Model.UpdateSecretVersionStageRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies the staging labels attached to a version of a secret. Staging labels are
            used to track a version as it progresses through the secret rotation process. You
            can attach a staging label to only one version of a secret at a time. If a staging
            label to be added is already attached to another version, then it is moved--removed
            from the other version first and then attached to this one. For more information about
            staging labels, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/terms-concepts.html#term_staging-label">Staging
            Labels</a> in the <i>Amazon Web Services Secrets Manager User Guide</i>. 
            
             
            <para>
            The staging labels that you specify in the <code>VersionStage</code> parameter are
            added to the existing list of staging labels--they don't replace it.
            </para>
             
            <para>
            You can move the <code>AWSCURRENT</code> staging label to this version by including
            it in this call.
            </para>
             <note> 
            <para>
            Whenever you move <code>AWSCURRENT</code>, Secrets Manager automatically moves the
            label <code>AWSPREVIOUS</code> to the version that <code>AWSCURRENT</code> was removed
            from.
            </para>
             </note> 
            <para>
            If this action results in the last label being removed from a version, then the version
            is considered to be 'deprecated' and can be deleted by Secrets Manager.
            </para>
             
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:UpdateSecretVersionStage
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To get the list of staging labels that are currently associated with a version of
            a secret, use <code> <a>DescribeSecret</a> </code> and examine the <code>SecretVersionsToStages</code>
            response value. 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateSecretVersionStage service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateSecretVersionStage service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.LimitExceededException">
            The request failed because it would exceed one of the Secrets Manager internal limits.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/UpdateSecretVersionStage">REST API Reference for UpdateSecretVersionStage Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.ValidateResourcePolicy(Amazon.SecretsManager.Model.ValidateResourcePolicyRequest)">
            <summary>
            Validates that the resource policy does not grant a wide range of IAM principals access
            to your secret. The JSON request string input and response output displays formatted
            code with white space and line breaks for better readability. Submit your input as
            a single line JSON string. A resource-based policy is optional for secrets.
            
             
            <para>
            The API performs three checks when validating the secret:
            </para>
             <ul> <li> 
            <para>
            Sends a call to <a href="https://aws.amazon.com/blogs/security/protect-sensitive-data-in-the-cloud-with-automated-reasoning-zelkova/">Zelkova</a>,
            an automated reasoning engine, to ensure your Resource Policy does not allow broad
            access to your secret.
            </para>
             </li> <li> 
            <para>
            Checks for correct syntax in a policy.
            </para>
             </li> <li> 
            <para>
            Verifies the policy does not lock out a caller.
            </para>
             </li> </ul> 
            <para>
             <b>Minimum Permissions</b> 
            </para>
             
            <para>
            You must have the permissions required to access the following APIs:
            </para>
             <ul> <li> 
            <para>
             <code>secretsmanager:PutResourcePolicy</code> 
            </para>
             </li> <li> 
            <para>
             <code>secretsmanager:ValidateResourcePolicy</code> 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ValidateResourcePolicy service method.</param>
            
            <returns>The response from the ValidateResourcePolicy service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.MalformedPolicyDocumentException">
            You provided a resource-based policy with syntax errors.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/ValidateResourcePolicy">REST API Reference for ValidateResourcePolicy Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.ValidateResourcePolicyAsync(Amazon.SecretsManager.Model.ValidateResourcePolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Validates that the resource policy does not grant a wide range of IAM principals access
            to your secret. The JSON request string input and response output displays formatted
            code with white space and line breaks for better readability. Submit your input as
            a single line JSON string. A resource-based policy is optional for secrets.
            
             
            <para>
            The API performs three checks when validating the secret:
            </para>
             <ul> <li> 
            <para>
            Sends a call to <a href="https://aws.amazon.com/blogs/security/protect-sensitive-data-in-the-cloud-with-automated-reasoning-zelkova/">Zelkova</a>,
            an automated reasoning engine, to ensure your Resource Policy does not allow broad
            access to your secret.
            </para>
             </li> <li> 
            <para>
            Checks for correct syntax in a policy.
            </para>
             </li> <li> 
            <para>
            Verifies the policy does not lock out a caller.
            </para>
             </li> </ul> 
            <para>
             <b>Minimum Permissions</b> 
            </para>
             
            <para>
            You must have the permissions required to access the following APIs:
            </para>
             <ul> <li> 
            <para>
             <code>secretsmanager:PutResourcePolicy</code> 
            </para>
             </li> <li> 
            <para>
             <code>secretsmanager:ValidateResourcePolicy</code> 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ValidateResourcePolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ValidateResourcePolicy service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.MalformedPolicyDocumentException">
            You provided a resource-based policy with syntax errors.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/ValidateResourcePolicy">REST API Reference for ValidateResourcePolicy Operation</seealso>
        </member>
        <member name="T:Amazon.SecretsManager.IAmazonSecretsManager">
             <summary>
             Interface for accessing SecretsManager
            
             Amazon Web Services Secrets Manager 
             <para>
             Amazon Web Services Secrets Manager provides a service to enable you to store, manage,
             and retrieve, secrets.
             </para>
              
             <para>
             This guide provides descriptions of the Secrets Manager API. For more information
             about using this service, see the <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/introduction.html">Amazon
             Web Services Secrets Manager User Guide</a>.
             </para>
              
             <para>
              <b>API Version</b> 
             </para>
              
             <para>
             This version of the Secrets Manager API Reference documents the Secrets Manager API
             version 2017-10-17.
             </para>
              <note> 
             <para>
             As an alternative to using the API, you can use one of the Amazon Web Services SDKs,
             which consist of libraries and sample code for various programming languages and platforms
             such as Java, Ruby, .NET, iOS, and Android. The SDKs provide a convenient way to create
             programmatic access to Amazon Web Services Secrets Manager. For example, the SDKs
             provide cryptographically signing requests, managing errors, and retrying requests
             automatically. For more information about the Amazon Web Services SDKs, including
             downloading and installing them, see <a href="http://aws.amazon.com/tools/">Tools
             for Amazon Web Services</a>.
             </para>
              </note> 
             <para>
             We recommend you use the Amazon Web Services SDKs to make programmatic API calls to
             Secrets Manager. However, you also can use the Secrets Manager HTTP Query API to make
             direct calls to the Secrets Manager web service. To learn more about the Secrets Manager
             HTTP Query API, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/query-requests.html">Making
             Query Requests</a> in the <i>Amazon Web Services Secrets Manager User Guide</i>. 
             </para>
              
             <para>
             Secrets Manager API supports GET and POST requests for all actions, and doesn't require
             you to use GET for some actions and POST for others. However, GET requests are subject
             to the limitation size of a URL. Therefore, for operations that require larger sizes,
             use a POST request.
             </para>
              
             <para>
              <b>Support and Feedback for Amazon Web Services Secrets Manager</b> 
             </para>
              
             <para>
             We welcome your feedback. Send your comments to <a href="mailto:awssecretsmanager-feedback@amazon.com">awssecretsmanager-feedback@amazon.com</a>,
             or post your feedback and questions in the <a href="http://forums.aws.amazon.com/forum.jspa?forumID=296">Amazon
             Web Services Secrets Manager Discussion Forum</a>. For more information about the
             Amazon Web Services Discussion Forums, see <a href="http://forums.aws.amazon.com/help.jspa">Forums
             Help</a>.
             </para>
              
             <para>
              <b>How examples are presented</b> 
             </para>
              
             <para>
             The JSON that Amazon Web Services Secrets Manager expects as your request parameters
             and the service returns as a response to HTTP query requests contain single, long
             strings without line breaks or white space formatting. The JSON shown in the examples
             displays the code formatted with both line breaks and white space to improve readability.
             When example input parameters can also cause long strings extending beyond the screen,
             you can insert line breaks to enhance readability. You should always submit the input
             as a single JSON text string.
             </para>
              
             <para>
              <b>Logging API Requests</b> 
             </para>
              
             <para>
             Amazon Web Services Secrets Manager supports Amazon Web Services CloudTrail, a service
             that records Amazon Web Services API calls for your Amazon Web Services account and
             delivers log files to an Amazon S3 bucket. By using information that's collected by
             Amazon Web Services CloudTrail, you can determine the requests successfully made to
             Secrets Manager, who made the request, when it was made, and so on. For more about
             Amazon Web Services Secrets Manager and support for Amazon Web Services CloudTrail,
             see <a href="http://docs.aws.amazon.com/secretsmanager/latest/userguide/monitoring.html#monitoring_cloudtrail">Logging
             Amazon Web Services Secrets Manager Events with Amazon Web Services CloudTrail</a>
             in the <i>Amazon Web Services Secrets Manager User Guide</i>. To learn more about
             CloudTrail, including enabling it and find your log files, see the <a href="https://docs.aws.amazon.com/awscloudtrail/latest/userguide/what_is_cloud_trail_top_level.html">Amazon
             Web Services CloudTrail User Guide</a>.
             </para>
             </summary>
        </member>
        <member name="P:Amazon.SecretsManager.IAmazonSecretsManager.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.SecretsManager.IAmazonSecretsManager.CancelRotateSecret(Amazon.SecretsManager.Model.CancelRotateSecretRequest)">
            <summary>
            Disables automatic scheduled rotation and cancels the rotation of a secret if currently
            in progress.
            
             
            <para>
            To re-enable scheduled rotation, call <a>RotateSecret</a> with <code>AutomaticallyRotateAfterDays</code>
            set to a value greater than 0. This immediately rotates your secret and then enables
            the automatic schedule.
            </para>
             <note> 
            <para>
            If you cancel a rotation while in progress, it can leave the <code>VersionStage</code>
            labels in an unexpected state. Depending on the step of the rotation in progress,
            you might need to remove the staging label <code>AWSPENDING</code> from the partially
            created version, specified by the <code>VersionId</code> response value. You should
            also evaluate the partially rotated new version to see if it should be deleted, which
            you can do by removing all staging labels from the new version <code>VersionStage</code>
            field.
            </para>
             </note> 
            <para>
            To successfully start a rotation, the staging label <code>AWSPENDING</code> must be
            in one of the following states:
            </para>
             <ul> <li> 
            <para>
            Not attached to any version at all
            </para>
             </li> <li> 
            <para>
            Attached to the same version as the staging label <code>AWSCURRENT</code> 
            </para>
             </li> </ul> 
            <para>
            If the staging label <code>AWSPENDING</code> attached to a different version than
            the version with <code>AWSCURRENT</code> then the attempt to rotate fails.
            </para>
             
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:CancelRotateSecret
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To configure rotation for a secret or to manually trigger a rotation, use <a>RotateSecret</a>.
            </para>
             </li> <li> 
            <para>
            To get the rotation configuration details for a secret, use <a>DescribeSecret</a>.
            </para>
             </li> <li> 
            <para>
            To list all of the currently available secrets, use <a>ListSecrets</a>.
            </para>
             </li> <li> 
            <para>
            To list all of the versions currently associated with a secret, use <a>ListSecretVersionIds</a>.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CancelRotateSecret service method.</param>
            
            <returns>The response from the CancelRotateSecret service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/CancelRotateSecret">REST API Reference for CancelRotateSecret Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.IAmazonSecretsManager.CancelRotateSecretAsync(Amazon.SecretsManager.Model.CancelRotateSecretRequest,System.Threading.CancellationToken)">
            <summary>
            Disables automatic scheduled rotation and cancels the rotation of a secret if currently
            in progress.
            
             
            <para>
            To re-enable scheduled rotation, call <a>RotateSecret</a> with <code>AutomaticallyRotateAfterDays</code>
            set to a value greater than 0. This immediately rotates your secret and then enables
            the automatic schedule.
            </para>
             <note> 
            <para>
            If you cancel a rotation while in progress, it can leave the <code>VersionStage</code>
            labels in an unexpected state. Depending on the step of the rotation in progress,
            you might need to remove the staging label <code>AWSPENDING</code> from the partially
            created version, specified by the <code>VersionId</code> response value. You should
            also evaluate the partially rotated new version to see if it should be deleted, which
            you can do by removing all staging labels from the new version <code>VersionStage</code>
            field.
            </para>
             </note> 
            <para>
            To successfully start a rotation, the staging label <code>AWSPENDING</code> must be
            in one of the following states:
            </para>
             <ul> <li> 
            <para>
            Not attached to any version at all
            </para>
             </li> <li> 
            <para>
            Attached to the same version as the staging label <code>AWSCURRENT</code> 
            </para>
             </li> </ul> 
            <para>
            If the staging label <code>AWSPENDING</code> attached to a different version than
            the version with <code>AWSCURRENT</code> then the attempt to rotate fails.
            </para>
             
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:CancelRotateSecret
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To configure rotation for a secret or to manually trigger a rotation, use <a>RotateSecret</a>.
            </para>
             </li> <li> 
            <para>
            To get the rotation configuration details for a secret, use <a>DescribeSecret</a>.
            </para>
             </li> <li> 
            <para>
            To list all of the currently available secrets, use <a>ListSecrets</a>.
            </para>
             </li> <li> 
            <para>
            To list all of the versions currently associated with a secret, use <a>ListSecretVersionIds</a>.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CancelRotateSecret service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CancelRotateSecret service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/CancelRotateSecret">REST API Reference for CancelRotateSecret Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.IAmazonSecretsManager.CreateSecret(Amazon.SecretsManager.Model.CreateSecretRequest)">
            <summary>
            Creates a new secret. A secret in Secrets Manager consists of both the protected secret
            data and the important information needed to manage the secret.
            
             
            <para>
            Secrets Manager stores the encrypted secret data in one of a collection of "versions"
            associated with the secret. Each version contains a copy of the encrypted secret data.
            Each version is associated with one or more "staging labels" that identify where the
            version is in the rotation cycle. The <code>SecretVersionsToStages</code> field of
            the secret contains the mapping of staging labels to the active versions of the secret.
            Versions without a staging label are considered deprecated and not included in the
            list.
            </para>
             
            <para>
            You provide the secret data to be encrypted by putting text in either the <code>SecretString</code>
            parameter or binary data in the <code>SecretBinary</code> parameter, but not both.
            If you include <code>SecretString</code> or <code>SecretBinary</code> then Secrets
            Manager also creates an initial secret version and automatically attaches the staging
            label <code>AWSCURRENT</code> to the new version.
            </para>
             <note> <ul> <li> 
            <para>
            If you call an operation to encrypt or decrypt the <code>SecretString</code> or <code>SecretBinary</code>
            for a secret in the same account as the calling user and that secret doesn't specify
            a Amazon Web Services KMS encryption key, Secrets Manager uses the account's default
            Amazon Web Services managed customer master key (CMK) with the alias <code>aws/secretsmanager</code>.
            If this key doesn't already exist in your account then Secrets Manager creates it
            for you automatically. All users and roles in the same Amazon Web Services account
            automatically have access to use the default CMK. Note that if an Secrets Manager
            API call results in Amazon Web Services creating the account's Amazon Web Services-managed
            CMK, it can result in a one-time significant delay in returning the result.
            </para>
             </li> <li> 
            <para>
            If the secret resides in a different Amazon Web Services account from the credentials
            calling an API that requires encryption or decryption of the secret value then you
            must create and use a custom Amazon Web Services KMS CMK because you can't access
            the default CMK for the account using credentials from a different Amazon Web Services
            account. Store the ARN of the CMK in the secret when you create the secret or when
            you update it by including it in the <code>KMSKeyId</code>. If you call an API that
            must encrypt or decrypt <code>SecretString</code> or <code>SecretBinary</code> using
            credentials from a different account then the Amazon Web Services KMS key policy must
            grant cross-account access to that other account's user or role for both the kms:GenerateDataKey
            and kms:Decrypt operations.
            </para>
             </li> </ul> </note> 
            <para>
             
            </para>
             
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:CreateSecret
            </para>
             </li> <li> 
            <para>
            kms:GenerateDataKey - needed only if you use a customer-managed Amazon Web Services
            KMS key to encrypt the secret. You do not need this permission to use the account
            default Amazon Web Services managed CMK for Secrets Manager.
            </para>
             </li> <li> 
            <para>
            kms:Decrypt - needed only if you use a customer-managed Amazon Web Services KMS key
            to encrypt the secret. You do not need this permission to use the account default
            Amazon Web Services managed CMK for Secrets Manager.
            </para>
             </li> <li> 
            <para>
            secretsmanager:TagResource - needed only if you include the <code>Tags</code> parameter.
            
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To delete a secret, use <a>DeleteSecret</a>.
            </para>
             </li> <li> 
            <para>
            To modify an existing secret, use <a>UpdateSecret</a>.
            </para>
             </li> <li> 
            <para>
            To create a new version of a secret, use <a>PutSecretValue</a>.
            </para>
             </li> <li> 
            <para>
            To retrieve the encrypted secure string and secure binary values, use <a>GetSecretValue</a>.
            </para>
             </li> <li> 
            <para>
            To retrieve all other details for a secret, use <a>DescribeSecret</a>. This does not
            include the encrypted secure string and secure binary values.
            </para>
             </li> <li> 
            <para>
            To retrieve the list of secret versions associated with the current secret, use <a>DescribeSecret</a>
            and examine the <code>SecretVersionsToStages</code> response value.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateSecret service method.</param>
            
            <returns>The response from the CreateSecret service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.EncryptionFailureException">
            Secrets Manager can't encrypt the protected secret text using the provided KMS key.
            Check that the customer master key (CMK) is available, enabled, and not in an invalid
            state. For more information, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">How
            Key State Affects Use of a Customer Master Key</a>.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.LimitExceededException">
            The request failed because it would exceed one of the Secrets Manager internal limits.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.MalformedPolicyDocumentException">
            You provided a resource-based policy with syntax errors.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.PreconditionNotMetException">
            The request failed because you did not complete all the prerequisite steps.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceExistsException">
            A resource with the ID you requested already exists.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/CreateSecret">REST API Reference for CreateSecret Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.IAmazonSecretsManager.CreateSecretAsync(Amazon.SecretsManager.Model.CreateSecretRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new secret. A secret in Secrets Manager consists of both the protected secret
            data and the important information needed to manage the secret.
            
             
            <para>
            Secrets Manager stores the encrypted secret data in one of a collection of "versions"
            associated with the secret. Each version contains a copy of the encrypted secret data.
            Each version is associated with one or more "staging labels" that identify where the
            version is in the rotation cycle. The <code>SecretVersionsToStages</code> field of
            the secret contains the mapping of staging labels to the active versions of the secret.
            Versions without a staging label are considered deprecated and not included in the
            list.
            </para>
             
            <para>
            You provide the secret data to be encrypted by putting text in either the <code>SecretString</code>
            parameter or binary data in the <code>SecretBinary</code> parameter, but not both.
            If you include <code>SecretString</code> or <code>SecretBinary</code> then Secrets
            Manager also creates an initial secret version and automatically attaches the staging
            label <code>AWSCURRENT</code> to the new version.
            </para>
             <note> <ul> <li> 
            <para>
            If you call an operation to encrypt or decrypt the <code>SecretString</code> or <code>SecretBinary</code>
            for a secret in the same account as the calling user and that secret doesn't specify
            a Amazon Web Services KMS encryption key, Secrets Manager uses the account's default
            Amazon Web Services managed customer master key (CMK) with the alias <code>aws/secretsmanager</code>.
            If this key doesn't already exist in your account then Secrets Manager creates it
            for you automatically. All users and roles in the same Amazon Web Services account
            automatically have access to use the default CMK. Note that if an Secrets Manager
            API call results in Amazon Web Services creating the account's Amazon Web Services-managed
            CMK, it can result in a one-time significant delay in returning the result.
            </para>
             </li> <li> 
            <para>
            If the secret resides in a different Amazon Web Services account from the credentials
            calling an API that requires encryption or decryption of the secret value then you
            must create and use a custom Amazon Web Services KMS CMK because you can't access
            the default CMK for the account using credentials from a different Amazon Web Services
            account. Store the ARN of the CMK in the secret when you create the secret or when
            you update it by including it in the <code>KMSKeyId</code>. If you call an API that
            must encrypt or decrypt <code>SecretString</code> or <code>SecretBinary</code> using
            credentials from a different account then the Amazon Web Services KMS key policy must
            grant cross-account access to that other account's user or role for both the kms:GenerateDataKey
            and kms:Decrypt operations.
            </para>
             </li> </ul> </note> 
            <para>
             
            </para>
             
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:CreateSecret
            </para>
             </li> <li> 
            <para>
            kms:GenerateDataKey - needed only if you use a customer-managed Amazon Web Services
            KMS key to encrypt the secret. You do not need this permission to use the account
            default Amazon Web Services managed CMK for Secrets Manager.
            </para>
             </li> <li> 
            <para>
            kms:Decrypt - needed only if you use a customer-managed Amazon Web Services KMS key
            to encrypt the secret. You do not need this permission to use the account default
            Amazon Web Services managed CMK for Secrets Manager.
            </para>
             </li> <li> 
            <para>
            secretsmanager:TagResource - needed only if you include the <code>Tags</code> parameter.
            
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To delete a secret, use <a>DeleteSecret</a>.
            </para>
             </li> <li> 
            <para>
            To modify an existing secret, use <a>UpdateSecret</a>.
            </para>
             </li> <li> 
            <para>
            To create a new version of a secret, use <a>PutSecretValue</a>.
            </para>
             </li> <li> 
            <para>
            To retrieve the encrypted secure string and secure binary values, use <a>GetSecretValue</a>.
            </para>
             </li> <li> 
            <para>
            To retrieve all other details for a secret, use <a>DescribeSecret</a>. This does not
            include the encrypted secure string and secure binary values.
            </para>
             </li> <li> 
            <para>
            To retrieve the list of secret versions associated with the current secret, use <a>DescribeSecret</a>
            and examine the <code>SecretVersionsToStages</code> response value.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateSecret service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateSecret service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.EncryptionFailureException">
            Secrets Manager can't encrypt the protected secret text using the provided KMS key.
            Check that the customer master key (CMK) is available, enabled, and not in an invalid
            state. For more information, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">How
            Key State Affects Use of a Customer Master Key</a>.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.LimitExceededException">
            The request failed because it would exceed one of the Secrets Manager internal limits.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.MalformedPolicyDocumentException">
            You provided a resource-based policy with syntax errors.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.PreconditionNotMetException">
            The request failed because you did not complete all the prerequisite steps.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceExistsException">
            A resource with the ID you requested already exists.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/CreateSecret">REST API Reference for CreateSecret Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.IAmazonSecretsManager.DeleteResourcePolicy(Amazon.SecretsManager.Model.DeleteResourcePolicyRequest)">
            <summary>
            Deletes the resource-based permission policy attached to the secret.
            
             
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:DeleteResourcePolicy
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To attach a resource policy to a secret, use <a>PutResourcePolicy</a>.
            </para>
             </li> <li> 
            <para>
            To retrieve the current resource-based policy attached to a secret, use <a>GetResourcePolicy</a>.
            </para>
             </li> <li> 
            <para>
            To list all of the currently available secrets, use <a>ListSecrets</a>.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteResourcePolicy service method.</param>
            
            <returns>The response from the DeleteResourcePolicy service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/DeleteResourcePolicy">REST API Reference for DeleteResourcePolicy Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.IAmazonSecretsManager.DeleteResourcePolicyAsync(Amazon.SecretsManager.Model.DeleteResourcePolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the resource-based permission policy attached to the secret.
            
             
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:DeleteResourcePolicy
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To attach a resource policy to a secret, use <a>PutResourcePolicy</a>.
            </para>
             </li> <li> 
            <para>
            To retrieve the current resource-based policy attached to a secret, use <a>GetResourcePolicy</a>.
            </para>
             </li> <li> 
            <para>
            To list all of the currently available secrets, use <a>ListSecrets</a>.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteResourcePolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteResourcePolicy service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/DeleteResourcePolicy">REST API Reference for DeleteResourcePolicy Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.IAmazonSecretsManager.DeleteSecret(Amazon.SecretsManager.Model.DeleteSecretRequest)">
            <summary>
            Deletes an entire secret and all of the versions. You can optionally include a recovery
            window during which you can restore the secret. If you don't specify a recovery window
            value, the operation defaults to 30 days. Secrets Manager attaches a <code>DeletionDate</code>
            stamp to the secret that specifies the end of the recovery window. At the end of the
            recovery window, Secrets Manager deletes the secret permanently.
            
             
            <para>
            At any time before recovery window ends, you can use <a>RestoreSecret</a> to remove
            the <code>DeletionDate</code> and cancel the deletion of the secret.
            </para>
             
            <para>
            You cannot access the encrypted secret information in any secret scheduled for deletion.
            If you need to access that information, you must cancel the deletion with <a>RestoreSecret</a>
            and then retrieve the information.
            </para>
             <note> <ul> <li> 
            <para>
            There is no explicit operation to delete a version of a secret. Instead, remove all
            staging labels from the <code>VersionStage</code> field of a version. That marks the
            version as deprecated and allows Secrets Manager to delete it as needed. Versions
            without any staging labels do not show up in <a>ListSecretVersionIds</a> unless you
            specify <code>IncludeDeprecated</code>.
            </para>
             </li> <li> 
            <para>
            The permanent secret deletion at the end of the waiting period is performed as a background
            task with low priority. There is no guarantee of a specific time after the recovery
            window for the actual delete operation to occur.
            </para>
             </li> </ul> </note> 
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:DeleteSecret
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To create a secret, use <a>CreateSecret</a>.
            </para>
             </li> <li> 
            <para>
            To cancel deletion of a version of a secret before the recovery window has expired,
            use <a>RestoreSecret</a>.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteSecret service method.</param>
            
            <returns>The response from the DeleteSecret service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/DeleteSecret">REST API Reference for DeleteSecret Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.IAmazonSecretsManager.DeleteSecretAsync(Amazon.SecretsManager.Model.DeleteSecretRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes an entire secret and all of the versions. You can optionally include a recovery
            window during which you can restore the secret. If you don't specify a recovery window
            value, the operation defaults to 30 days. Secrets Manager attaches a <code>DeletionDate</code>
            stamp to the secret that specifies the end of the recovery window. At the end of the
            recovery window, Secrets Manager deletes the secret permanently.
            
             
            <para>
            At any time before recovery window ends, you can use <a>RestoreSecret</a> to remove
            the <code>DeletionDate</code> and cancel the deletion of the secret.
            </para>
             
            <para>
            You cannot access the encrypted secret information in any secret scheduled for deletion.
            If you need to access that information, you must cancel the deletion with <a>RestoreSecret</a>
            and then retrieve the information.
            </para>
             <note> <ul> <li> 
            <para>
            There is no explicit operation to delete a version of a secret. Instead, remove all
            staging labels from the <code>VersionStage</code> field of a version. That marks the
            version as deprecated and allows Secrets Manager to delete it as needed. Versions
            without any staging labels do not show up in <a>ListSecretVersionIds</a> unless you
            specify <code>IncludeDeprecated</code>.
            </para>
             </li> <li> 
            <para>
            The permanent secret deletion at the end of the waiting period is performed as a background
            task with low priority. There is no guarantee of a specific time after the recovery
            window for the actual delete operation to occur.
            </para>
             </li> </ul> </note> 
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:DeleteSecret
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To create a secret, use <a>CreateSecret</a>.
            </para>
             </li> <li> 
            <para>
            To cancel deletion of a version of a secret before the recovery window has expired,
            use <a>RestoreSecret</a>.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteSecret service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteSecret service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/DeleteSecret">REST API Reference for DeleteSecret Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.IAmazonSecretsManager.DescribeSecret(Amazon.SecretsManager.Model.DescribeSecretRequest)">
            <summary>
            Retrieves the details of a secret. It does not include the encrypted fields. Secrets
            Manager only returns fields populated with a value in the response. 
            
             
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:DescribeSecret
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To create a secret, use <a>CreateSecret</a>.
            </para>
             </li> <li> 
            <para>
            To modify a secret, use <a>UpdateSecret</a>.
            </para>
             </li> <li> 
            <para>
            To retrieve the encrypted secret information in a version of the secret, use <a>GetSecretValue</a>.
            </para>
             </li> <li> 
            <para>
            To list all of the secrets in the Amazon Web Services account, use <a>ListSecrets</a>.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeSecret service method.</param>
            
            <returns>The response from the DescribeSecret service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/DescribeSecret">REST API Reference for DescribeSecret Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.IAmazonSecretsManager.DescribeSecretAsync(Amazon.SecretsManager.Model.DescribeSecretRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the details of a secret. It does not include the encrypted fields. Secrets
            Manager only returns fields populated with a value in the response. 
            
             
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:DescribeSecret
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To create a secret, use <a>CreateSecret</a>.
            </para>
             </li> <li> 
            <para>
            To modify a secret, use <a>UpdateSecret</a>.
            </para>
             </li> <li> 
            <para>
            To retrieve the encrypted secret information in a version of the secret, use <a>GetSecretValue</a>.
            </para>
             </li> <li> 
            <para>
            To list all of the secrets in the Amazon Web Services account, use <a>ListSecrets</a>.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeSecret service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeSecret service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/DescribeSecret">REST API Reference for DescribeSecret Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.IAmazonSecretsManager.GetRandomPassword(Amazon.SecretsManager.Model.GetRandomPasswordRequest)">
            <summary>
            Generates a random password of the specified complexity. This operation is intended
            for use in the Lambda rotation function. Per best practice, we recommend that you
            specify the maximum length and include every character type that the system you are
            generating a password for can support.
            
             
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:GetRandomPassword
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetRandomPassword service method.</param>
            
            <returns>The response from the GetRandomPassword service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/GetRandomPassword">REST API Reference for GetRandomPassword Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.IAmazonSecretsManager.GetRandomPasswordAsync(Amazon.SecretsManager.Model.GetRandomPasswordRequest,System.Threading.CancellationToken)">
            <summary>
            Generates a random password of the specified complexity. This operation is intended
            for use in the Lambda rotation function. Per best practice, we recommend that you
            specify the maximum length and include every character type that the system you are
            generating a password for can support.
            
             
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:GetRandomPassword
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetRandomPassword service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetRandomPassword service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/GetRandomPassword">REST API Reference for GetRandomPassword Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.IAmazonSecretsManager.GetResourcePolicy(Amazon.SecretsManager.Model.GetResourcePolicyRequest)">
            <summary>
            Retrieves the JSON text of the resource-based policy document attached to the specified
            secret. The JSON request string input and response output displays formatted code
            with white space and line breaks for better readability. Submit your input as a single
            line JSON string.
            
             
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:GetResourcePolicy
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To attach a resource policy to a secret, use <a>PutResourcePolicy</a>.
            </para>
             </li> <li> 
            <para>
            To delete the resource-based policy attached to a secret, use <a>DeleteResourcePolicy</a>.
            </para>
             </li> <li> 
            <para>
            To list all of the currently available secrets, use <a>ListSecrets</a>.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetResourcePolicy service method.</param>
            
            <returns>The response from the GetResourcePolicy service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/GetResourcePolicy">REST API Reference for GetResourcePolicy Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.IAmazonSecretsManager.GetResourcePolicyAsync(Amazon.SecretsManager.Model.GetResourcePolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the JSON text of the resource-based policy document attached to the specified
            secret. The JSON request string input and response output displays formatted code
            with white space and line breaks for better readability. Submit your input as a single
            line JSON string.
            
             
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:GetResourcePolicy
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To attach a resource policy to a secret, use <a>PutResourcePolicy</a>.
            </para>
             </li> <li> 
            <para>
            To delete the resource-based policy attached to a secret, use <a>DeleteResourcePolicy</a>.
            </para>
             </li> <li> 
            <para>
            To list all of the currently available secrets, use <a>ListSecrets</a>.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetResourcePolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetResourcePolicy service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/GetResourcePolicy">REST API Reference for GetResourcePolicy Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.IAmazonSecretsManager.GetSecretValue(Amazon.SecretsManager.Model.GetSecretValueRequest)">
            <summary>
            Retrieves the contents of the encrypted fields <code>SecretString</code> or <code>SecretBinary</code>
            from the specified version of a secret, whichever contains content.
            
             
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:GetSecretValue
            </para>
             </li> <li> 
            <para>
            kms:Decrypt - required only if you use a customer-managed Amazon Web Services KMS
            key to encrypt the secret. You do not need this permission to use the account's default
            Amazon Web Services managed CMK for Secrets Manager.
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To create a new version of the secret with different encrypted information, use <a>PutSecretValue</a>.
            </para>
             </li> <li> 
            <para>
            To retrieve the non-encrypted details for the secret, use <a>DescribeSecret</a>.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSecretValue service method.</param>
            
            <returns>The response from the GetSecretValue service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.DecryptionFailureException">
            Secrets Manager can't decrypt the protected secret text using the provided KMS key.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/GetSecretValue">REST API Reference for GetSecretValue Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.IAmazonSecretsManager.GetSecretValueAsync(Amazon.SecretsManager.Model.GetSecretValueRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the contents of the encrypted fields <code>SecretString</code> or <code>SecretBinary</code>
            from the specified version of a secret, whichever contains content.
            
             
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:GetSecretValue
            </para>
             </li> <li> 
            <para>
            kms:Decrypt - required only if you use a customer-managed Amazon Web Services KMS
            key to encrypt the secret. You do not need this permission to use the account's default
            Amazon Web Services managed CMK for Secrets Manager.
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To create a new version of the secret with different encrypted information, use <a>PutSecretValue</a>.
            </para>
             </li> <li> 
            <para>
            To retrieve the non-encrypted details for the secret, use <a>DescribeSecret</a>.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSecretValue service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetSecretValue service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.DecryptionFailureException">
            Secrets Manager can't decrypt the protected secret text using the provided KMS key.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/GetSecretValue">REST API Reference for GetSecretValue Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.IAmazonSecretsManager.ListSecrets(Amazon.SecretsManager.Model.ListSecretsRequest)">
            <summary>
            Lists all of the secrets that are stored by Secrets Manager in the Amazon Web Services
            account. To list the versions currently stored for a specific secret, use <a>ListSecretVersionIds</a>.
            The encrypted fields <code>SecretString</code> and <code>SecretBinary</code> are not
            included in the output. To get that information, call the <a>GetSecretValue</a> operation.
            
             <note> 
            <para>
            Always check the <code>NextToken</code> response parameter when calling any of the
            <code>List*</code> operations. These operations can occasionally return an empty or
            shorter than expected list of results even when there more results become available.
            When this happens, the <code>NextToken</code> response parameter contains a value
            to pass to the next call to the same API to request the next part of the list.
            </para>
             </note> 
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:ListSecrets
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To list the versions attached to a secret, use <a>ListSecretVersionIds</a>.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListSecrets service method.</param>
            
            <returns>The response from the ListSecrets service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidNextTokenException">
            You provided an invalid <code>NextToken</code> value.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/ListSecrets">REST API Reference for ListSecrets Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.IAmazonSecretsManager.ListSecretsAsync(Amazon.SecretsManager.Model.ListSecretsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all of the secrets that are stored by Secrets Manager in the Amazon Web Services
            account. To list the versions currently stored for a specific secret, use <a>ListSecretVersionIds</a>.
            The encrypted fields <code>SecretString</code> and <code>SecretBinary</code> are not
            included in the output. To get that information, call the <a>GetSecretValue</a> operation.
            
             <note> 
            <para>
            Always check the <code>NextToken</code> response parameter when calling any of the
            <code>List*</code> operations. These operations can occasionally return an empty or
            shorter than expected list of results even when there more results become available.
            When this happens, the <code>NextToken</code> response parameter contains a value
            to pass to the next call to the same API to request the next part of the list.
            </para>
             </note> 
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:ListSecrets
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To list the versions attached to a secret, use <a>ListSecretVersionIds</a>.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListSecrets service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListSecrets service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidNextTokenException">
            You provided an invalid <code>NextToken</code> value.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/ListSecrets">REST API Reference for ListSecrets Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.IAmazonSecretsManager.ListSecretVersionIds(Amazon.SecretsManager.Model.ListSecretVersionIdsRequest)">
            <summary>
            Lists all of the versions attached to the specified secret. The output does not include
            the <code>SecretString</code> or <code>SecretBinary</code> fields. By default, the
            list includes only versions that have at least one staging label in <code>VersionStage</code>
            attached.
            
             <note> 
            <para>
            Always check the <code>NextToken</code> response parameter when calling any of the
            <code>List*</code> operations. These operations can occasionally return an empty or
            shorter than expected list of results even when there more results become available.
            When this happens, the <code>NextToken</code> response parameter contains a value
            to pass to the next call to the same API to request the next part of the list.
            </para>
             </note> 
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:ListSecretVersionIds
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To list the secrets in an account, use <a>ListSecrets</a>.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListSecretVersionIds service method.</param>
            
            <returns>The response from the ListSecretVersionIds service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidNextTokenException">
            You provided an invalid <code>NextToken</code> value.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/ListSecretVersionIds">REST API Reference for ListSecretVersionIds Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.IAmazonSecretsManager.ListSecretVersionIdsAsync(Amazon.SecretsManager.Model.ListSecretVersionIdsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all of the versions attached to the specified secret. The output does not include
            the <code>SecretString</code> or <code>SecretBinary</code> fields. By default, the
            list includes only versions that have at least one staging label in <code>VersionStage</code>
            attached.
            
             <note> 
            <para>
            Always check the <code>NextToken</code> response parameter when calling any of the
            <code>List*</code> operations. These operations can occasionally return an empty or
            shorter than expected list of results even when there more results become available.
            When this happens, the <code>NextToken</code> response parameter contains a value
            to pass to the next call to the same API to request the next part of the list.
            </para>
             </note> 
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:ListSecretVersionIds
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To list the secrets in an account, use <a>ListSecrets</a>.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListSecretVersionIds service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListSecretVersionIds service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidNextTokenException">
            You provided an invalid <code>NextToken</code> value.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/ListSecretVersionIds">REST API Reference for ListSecretVersionIds Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.IAmazonSecretsManager.PutResourcePolicy(Amazon.SecretsManager.Model.PutResourcePolicyRequest)">
            <summary>
            Attaches the contents of the specified resource-based permission policy to a secret.
            A resource-based policy is optional. Alternatively, you can use IAM identity-based
            policies that specify the secret's Amazon Resource Name (ARN) in the policy statement's
            <code>Resources</code> element. You can also use a combination of both identity-based
            and resource-based policies. The affected users and roles receive the permissions
            that are permitted by all of the relevant policies. For more information, see <a href="http://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access_resource-based-policies.html">Using
            Resource-Based Policies for Amazon Web Services Secrets Manager</a>. For the complete
            description of the Amazon Web Services policy syntax and grammar, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies.html">IAM
            JSON Policy Reference</a> in the <i>IAM User Guide</i>.
            
             
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:PutResourcePolicy
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To retrieve the resource policy attached to a secret, use <a>GetResourcePolicy</a>.
            </para>
             </li> <li> 
            <para>
            To delete the resource-based policy attached to a secret, use <a>DeleteResourcePolicy</a>.
            </para>
             </li> <li> 
            <para>
            To list all of the currently available secrets, use <a>ListSecrets</a>.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutResourcePolicy service method.</param>
            
            <returns>The response from the PutResourcePolicy service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.MalformedPolicyDocumentException">
            You provided a resource-based policy with syntax errors.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.PublicPolicyException">
            The BlockPublicPolicy parameter is set to true and the resource policy did not prevent
            broad access to the secret.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/PutResourcePolicy">REST API Reference for PutResourcePolicy Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.IAmazonSecretsManager.PutResourcePolicyAsync(Amazon.SecretsManager.Model.PutResourcePolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Attaches the contents of the specified resource-based permission policy to a secret.
            A resource-based policy is optional. Alternatively, you can use IAM identity-based
            policies that specify the secret's Amazon Resource Name (ARN) in the policy statement's
            <code>Resources</code> element. You can also use a combination of both identity-based
            and resource-based policies. The affected users and roles receive the permissions
            that are permitted by all of the relevant policies. For more information, see <a href="http://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access_resource-based-policies.html">Using
            Resource-Based Policies for Amazon Web Services Secrets Manager</a>. For the complete
            description of the Amazon Web Services policy syntax and grammar, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies.html">IAM
            JSON Policy Reference</a> in the <i>IAM User Guide</i>.
            
             
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:PutResourcePolicy
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To retrieve the resource policy attached to a secret, use <a>GetResourcePolicy</a>.
            </para>
             </li> <li> 
            <para>
            To delete the resource-based policy attached to a secret, use <a>DeleteResourcePolicy</a>.
            </para>
             </li> <li> 
            <para>
            To list all of the currently available secrets, use <a>ListSecrets</a>.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutResourcePolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutResourcePolicy service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.MalformedPolicyDocumentException">
            You provided a resource-based policy with syntax errors.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.PublicPolicyException">
            The BlockPublicPolicy parameter is set to true and the resource policy did not prevent
            broad access to the secret.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/PutResourcePolicy">REST API Reference for PutResourcePolicy Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.IAmazonSecretsManager.PutSecretValue(Amazon.SecretsManager.Model.PutSecretValueRequest)">
            <summary>
            Stores a new encrypted secret value in the specified secret. To do this, the operation
            creates a new version and attaches it to the secret. The version can contain a new
            <code>SecretString</code> value or a new <code>SecretBinary</code> value. You can
            also specify the staging labels that are initially attached to the new version.
            
             
            <para>
            We recommend you avoid calling <code>PutSecretValue</code> at a sustained rate of
            more than once every 10 minutes. When you update the secret value, Secrets Manager
            creates a new version of the secret. Secrets Manager removes outdated versions when
            there are more than 100, but it does not remove versions created less than 24 hours
            ago. If you call <code>PutSecretValue</code> more than once every 10 minutes, you
            create more versions than Secrets Manager removes, and you will reach the quota for
            secret versions.
            </para>
             <ul> <li> 
            <para>
            If this operation creates the first version for the secret then Secrets Manager automatically
            attaches the staging label <code>AWSCURRENT</code> to the new version.
            </para>
             </li> <li> 
            <para>
            If you do not specify a value for VersionStages then Secrets Manager automatically
            moves the staging label <code>AWSCURRENT</code> to this new version.
            </para>
             </li> <li> 
            <para>
            If this operation moves the staging label <code>AWSCURRENT</code> from another version
            to this version, then Secrets Manager also automatically moves the staging label <code>AWSPREVIOUS</code>
            to the version that <code>AWSCURRENT</code> was removed from.
            </para>
             </li> <li> 
            <para>
            This operation is idempotent. If a version with a <code>VersionId</code> with the
            same value as the <code>ClientRequestToken</code> parameter already exists and you
            specify the same secret data, the operation succeeds but does nothing. However, if
            the secret data is different, then the operation fails because you cannot modify an
            existing version; you can only create new ones.
            </para>
             </li> </ul> <note> <ul> <li> 
            <para>
            If you call an operation to encrypt or decrypt the <code>SecretString</code> or <code>SecretBinary</code>
            for a secret in the same account as the calling user and that secret doesn't specify
            a Amazon Web Services KMS encryption key, Secrets Manager uses the account's default
            Amazon Web Services managed customer master key (CMK) with the alias <code>aws/secretsmanager</code>.
            If this key doesn't already exist in your account then Secrets Manager creates it
            for you automatically. All users and roles in the same Amazon Web Services account
            automatically have access to use the default CMK. Note that if an Secrets Manager
            API call results in Amazon Web Services creating the account's Amazon Web Services-managed
            CMK, it can result in a one-time significant delay in returning the result.
            </para>
             </li> <li> 
            <para>
            If the secret resides in a different Amazon Web Services account from the credentials
            calling an API that requires encryption or decryption of the secret value then you
            must create and use a custom Amazon Web Services KMS CMK because you can't access
            the default CMK for the account using credentials from a different Amazon Web Services
            account. Store the ARN of the CMK in the secret when you create the secret or when
            you update it by including it in the <code>KMSKeyId</code>. If you call an API that
            must encrypt or decrypt <code>SecretString</code> or <code>SecretBinary</code> using
            credentials from a different account then the Amazon Web Services KMS key policy must
            grant cross-account access to that other account's user or role for both the kms:GenerateDataKey
            and kms:Decrypt operations.
            </para>
             </li> </ul> </note> 
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:PutSecretValue
            </para>
             </li> <li> 
            <para>
            kms:GenerateDataKey - needed only if you use a customer-managed Amazon Web Services
            KMS key to encrypt the secret. You do not need this permission to use the account's
            default Amazon Web Services managed CMK for Secrets Manager.
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To retrieve the encrypted value you store in the version of a secret, use <a>GetSecretValue</a>.
            </para>
             </li> <li> 
            <para>
            To create a secret, use <a>CreateSecret</a>.
            </para>
             </li> <li> 
            <para>
            To get the details for a secret, use <a>DescribeSecret</a>.
            </para>
             </li> <li> 
            <para>
            To list the versions attached to a secret, use <a>ListSecretVersionIds</a>.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutSecretValue service method.</param>
            
            <returns>The response from the PutSecretValue service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.EncryptionFailureException">
            Secrets Manager can't encrypt the protected secret text using the provided KMS key.
            Check that the customer master key (CMK) is available, enabled, and not in an invalid
            state. For more information, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">How
            Key State Affects Use of a Customer Master Key</a>.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.LimitExceededException">
            The request failed because it would exceed one of the Secrets Manager internal limits.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceExistsException">
            A resource with the ID you requested already exists.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/PutSecretValue">REST API Reference for PutSecretValue Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.IAmazonSecretsManager.PutSecretValueAsync(Amazon.SecretsManager.Model.PutSecretValueRequest,System.Threading.CancellationToken)">
            <summary>
            Stores a new encrypted secret value in the specified secret. To do this, the operation
            creates a new version and attaches it to the secret. The version can contain a new
            <code>SecretString</code> value or a new <code>SecretBinary</code> value. You can
            also specify the staging labels that are initially attached to the new version.
            
             
            <para>
            We recommend you avoid calling <code>PutSecretValue</code> at a sustained rate of
            more than once every 10 minutes. When you update the secret value, Secrets Manager
            creates a new version of the secret. Secrets Manager removes outdated versions when
            there are more than 100, but it does not remove versions created less than 24 hours
            ago. If you call <code>PutSecretValue</code> more than once every 10 minutes, you
            create more versions than Secrets Manager removes, and you will reach the quota for
            secret versions.
            </para>
             <ul> <li> 
            <para>
            If this operation creates the first version for the secret then Secrets Manager automatically
            attaches the staging label <code>AWSCURRENT</code> to the new version.
            </para>
             </li> <li> 
            <para>
            If you do not specify a value for VersionStages then Secrets Manager automatically
            moves the staging label <code>AWSCURRENT</code> to this new version.
            </para>
             </li> <li> 
            <para>
            If this operation moves the staging label <code>AWSCURRENT</code> from another version
            to this version, then Secrets Manager also automatically moves the staging label <code>AWSPREVIOUS</code>
            to the version that <code>AWSCURRENT</code> was removed from.
            </para>
             </li> <li> 
            <para>
            This operation is idempotent. If a version with a <code>VersionId</code> with the
            same value as the <code>ClientRequestToken</code> parameter already exists and you
            specify the same secret data, the operation succeeds but does nothing. However, if
            the secret data is different, then the operation fails because you cannot modify an
            existing version; you can only create new ones.
            </para>
             </li> </ul> <note> <ul> <li> 
            <para>
            If you call an operation to encrypt or decrypt the <code>SecretString</code> or <code>SecretBinary</code>
            for a secret in the same account as the calling user and that secret doesn't specify
            a Amazon Web Services KMS encryption key, Secrets Manager uses the account's default
            Amazon Web Services managed customer master key (CMK) with the alias <code>aws/secretsmanager</code>.
            If this key doesn't already exist in your account then Secrets Manager creates it
            for you automatically. All users and roles in the same Amazon Web Services account
            automatically have access to use the default CMK. Note that if an Secrets Manager
            API call results in Amazon Web Services creating the account's Amazon Web Services-managed
            CMK, it can result in a one-time significant delay in returning the result.
            </para>
             </li> <li> 
            <para>
            If the secret resides in a different Amazon Web Services account from the credentials
            calling an API that requires encryption or decryption of the secret value then you
            must create and use a custom Amazon Web Services KMS CMK because you can't access
            the default CMK for the account using credentials from a different Amazon Web Services
            account. Store the ARN of the CMK in the secret when you create the secret or when
            you update it by including it in the <code>KMSKeyId</code>. If you call an API that
            must encrypt or decrypt <code>SecretString</code> or <code>SecretBinary</code> using
            credentials from a different account then the Amazon Web Services KMS key policy must
            grant cross-account access to that other account's user or role for both the kms:GenerateDataKey
            and kms:Decrypt operations.
            </para>
             </li> </ul> </note> 
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:PutSecretValue
            </para>
             </li> <li> 
            <para>
            kms:GenerateDataKey - needed only if you use a customer-managed Amazon Web Services
            KMS key to encrypt the secret. You do not need this permission to use the account's
            default Amazon Web Services managed CMK for Secrets Manager.
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To retrieve the encrypted value you store in the version of a secret, use <a>GetSecretValue</a>.
            </para>
             </li> <li> 
            <para>
            To create a secret, use <a>CreateSecret</a>.
            </para>
             </li> <li> 
            <para>
            To get the details for a secret, use <a>DescribeSecret</a>.
            </para>
             </li> <li> 
            <para>
            To list the versions attached to a secret, use <a>ListSecretVersionIds</a>.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutSecretValue service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutSecretValue service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.EncryptionFailureException">
            Secrets Manager can't encrypt the protected secret text using the provided KMS key.
            Check that the customer master key (CMK) is available, enabled, and not in an invalid
            state. For more information, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">How
            Key State Affects Use of a Customer Master Key</a>.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.LimitExceededException">
            The request failed because it would exceed one of the Secrets Manager internal limits.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceExistsException">
            A resource with the ID you requested already exists.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/PutSecretValue">REST API Reference for PutSecretValue Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.IAmazonSecretsManager.RemoveRegionsFromReplication(Amazon.SecretsManager.Model.RemoveRegionsFromReplicationRequest)">
            <summary>
            Remove regions from replication.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RemoveRegionsFromReplication service method.</param>
            
            <returns>The response from the RemoveRegionsFromReplication service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/RemoveRegionsFromReplication">REST API Reference for RemoveRegionsFromReplication Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.IAmazonSecretsManager.RemoveRegionsFromReplicationAsync(Amazon.SecretsManager.Model.RemoveRegionsFromReplicationRequest,System.Threading.CancellationToken)">
            <summary>
            Remove regions from replication.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RemoveRegionsFromReplication service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RemoveRegionsFromReplication service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/RemoveRegionsFromReplication">REST API Reference for RemoveRegionsFromReplication Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.IAmazonSecretsManager.ReplicateSecretToRegions(Amazon.SecretsManager.Model.ReplicateSecretToRegionsRequest)">
            <summary>
            Converts an existing secret to a multi-Region secret and begins replication the secret
            to a list of new regions.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ReplicateSecretToRegions service method.</param>
            
            <returns>The response from the ReplicateSecretToRegions service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/ReplicateSecretToRegions">REST API Reference for ReplicateSecretToRegions Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.IAmazonSecretsManager.ReplicateSecretToRegionsAsync(Amazon.SecretsManager.Model.ReplicateSecretToRegionsRequest,System.Threading.CancellationToken)">
            <summary>
            Converts an existing secret to a multi-Region secret and begins replication the secret
            to a list of new regions.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ReplicateSecretToRegions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ReplicateSecretToRegions service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/ReplicateSecretToRegions">REST API Reference for ReplicateSecretToRegions Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.IAmazonSecretsManager.RestoreSecret(Amazon.SecretsManager.Model.RestoreSecretRequest)">
            <summary>
            Cancels the scheduled deletion of a secret by removing the <code>DeletedDate</code>
            time stamp. This makes the secret accessible to query once again.
            
             
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:RestoreSecret
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To delete a secret, use <a>DeleteSecret</a>.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RestoreSecret service method.</param>
            
            <returns>The response from the RestoreSecret service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/RestoreSecret">REST API Reference for RestoreSecret Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.IAmazonSecretsManager.RestoreSecretAsync(Amazon.SecretsManager.Model.RestoreSecretRequest,System.Threading.CancellationToken)">
            <summary>
            Cancels the scheduled deletion of a secret by removing the <code>DeletedDate</code>
            time stamp. This makes the secret accessible to query once again.
            
             
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:RestoreSecret
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To delete a secret, use <a>DeleteSecret</a>.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RestoreSecret service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RestoreSecret service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/RestoreSecret">REST API Reference for RestoreSecret Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.IAmazonSecretsManager.RotateSecret(Amazon.SecretsManager.Model.RotateSecretRequest)">
            <summary>
            Configures and starts the asynchronous process of rotating this secret. If you include
            the configuration parameters, the operation sets those values for the secret and then
            immediately starts a rotation. If you do not include the configuration parameters,
            the operation starts a rotation with the values already stored in the secret. After
            the rotation completes, the protected service and its clients all use the new version
            of the secret. 
            
             
            <para>
            This required configuration information includes the ARN of an Amazon Web Services
            Lambda function and optionally, the time between scheduled rotations. The Lambda rotation
            function creates a new version of the secret and creates or updates the credentials
            on the protected service to match. After testing the new credentials, the function
            marks the new secret with the staging label <code>AWSCURRENT</code> so that your clients
            all immediately begin to use the new version. For more information about rotating
            secrets and how to configure a Lambda function to rotate the secrets for your protected
            service, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotating-secrets.html">Rotating
            Secrets in Amazon Web Services Secrets Manager</a> in the <i>Amazon Web Services Secrets
            Manager User Guide</i>.
            </para>
             
            <para>
            Secrets Manager schedules the next rotation when the previous one completes. Secrets
            Manager schedules the date by adding the rotation interval (number of days) to the
            actual date of the last rotation. The service chooses the hour within that 24-hour
            date window randomly. The minute is also chosen somewhat randomly, but weighted towards
            the top of the hour and influenced by a variety of factors that help distribute load.
            </para>
             
            <para>
            The rotation function must end with the versions of the secret in one of two states:
            </para>
             <ul> <li> 
            <para>
            The <code>AWSPENDING</code> and <code>AWSCURRENT</code> staging labels are attached
            to the same version of the secret, or
            </para>
             </li> <li> 
            <para>
            The <code>AWSPENDING</code> staging label is not attached to any version of the secret.
            </para>
             </li> </ul> 
            <para>
            If the <code>AWSPENDING</code> staging label is present but not attached to the same
            version as <code>AWSCURRENT</code> then any later invocation of <code>RotateSecret</code>
            assumes that a previous rotation request is still in progress and returns an error.
            </para>
             
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:RotateSecret
            </para>
             </li> <li> 
            <para>
            lambda:InvokeFunction (on the function specified in the secret's metadata)
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To list the secrets in your account, use <a>ListSecrets</a>.
            </para>
             </li> <li> 
            <para>
            To get the details for a version of a secret, use <a>DescribeSecret</a>.
            </para>
             </li> <li> 
            <para>
            To create a new version of a secret, use <a>CreateSecret</a>.
            </para>
             </li> <li> 
            <para>
            To attach staging labels to or remove staging labels from a version of a secret, use
            <a>UpdateSecretVersionStage</a>.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RotateSecret service method.</param>
            
            <returns>The response from the RotateSecret service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/RotateSecret">REST API Reference for RotateSecret Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.IAmazonSecretsManager.RotateSecretAsync(Amazon.SecretsManager.Model.RotateSecretRequest,System.Threading.CancellationToken)">
            <summary>
            Configures and starts the asynchronous process of rotating this secret. If you include
            the configuration parameters, the operation sets those values for the secret and then
            immediately starts a rotation. If you do not include the configuration parameters,
            the operation starts a rotation with the values already stored in the secret. After
            the rotation completes, the protected service and its clients all use the new version
            of the secret. 
            
             
            <para>
            This required configuration information includes the ARN of an Amazon Web Services
            Lambda function and optionally, the time between scheduled rotations. The Lambda rotation
            function creates a new version of the secret and creates or updates the credentials
            on the protected service to match. After testing the new credentials, the function
            marks the new secret with the staging label <code>AWSCURRENT</code> so that your clients
            all immediately begin to use the new version. For more information about rotating
            secrets and how to configure a Lambda function to rotate the secrets for your protected
            service, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotating-secrets.html">Rotating
            Secrets in Amazon Web Services Secrets Manager</a> in the <i>Amazon Web Services Secrets
            Manager User Guide</i>.
            </para>
             
            <para>
            Secrets Manager schedules the next rotation when the previous one completes. Secrets
            Manager schedules the date by adding the rotation interval (number of days) to the
            actual date of the last rotation. The service chooses the hour within that 24-hour
            date window randomly. The minute is also chosen somewhat randomly, but weighted towards
            the top of the hour and influenced by a variety of factors that help distribute load.
            </para>
             
            <para>
            The rotation function must end with the versions of the secret in one of two states:
            </para>
             <ul> <li> 
            <para>
            The <code>AWSPENDING</code> and <code>AWSCURRENT</code> staging labels are attached
            to the same version of the secret, or
            </para>
             </li> <li> 
            <para>
            The <code>AWSPENDING</code> staging label is not attached to any version of the secret.
            </para>
             </li> </ul> 
            <para>
            If the <code>AWSPENDING</code> staging label is present but not attached to the same
            version as <code>AWSCURRENT</code> then any later invocation of <code>RotateSecret</code>
            assumes that a previous rotation request is still in progress and returns an error.
            </para>
             
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:RotateSecret
            </para>
             </li> <li> 
            <para>
            lambda:InvokeFunction (on the function specified in the secret's metadata)
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To list the secrets in your account, use <a>ListSecrets</a>.
            </para>
             </li> <li> 
            <para>
            To get the details for a version of a secret, use <a>DescribeSecret</a>.
            </para>
             </li> <li> 
            <para>
            To create a new version of a secret, use <a>CreateSecret</a>.
            </para>
             </li> <li> 
            <para>
            To attach staging labels to or remove staging labels from a version of a secret, use
            <a>UpdateSecretVersionStage</a>.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RotateSecret service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RotateSecret service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/RotateSecret">REST API Reference for RotateSecret Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.IAmazonSecretsManager.StopReplicationToReplica(Amazon.SecretsManager.Model.StopReplicationToReplicaRequest)">
            <summary>
            Removes the secret from replication and promotes the secret to a regional secret in
            the replica Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StopReplicationToReplica service method.</param>
            
            <returns>The response from the StopReplicationToReplica service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/StopReplicationToReplica">REST API Reference for StopReplicationToReplica Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.IAmazonSecretsManager.StopReplicationToReplicaAsync(Amazon.SecretsManager.Model.StopReplicationToReplicaRequest,System.Threading.CancellationToken)">
            <summary>
            Removes the secret from replication and promotes the secret to a regional secret in
            the replica Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StopReplicationToReplica service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StopReplicationToReplica service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/StopReplicationToReplica">REST API Reference for StopReplicationToReplica Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.IAmazonSecretsManager.TagResource(Amazon.SecretsManager.Model.TagResourceRequest)">
            <summary>
            Attaches one or more tags, each consisting of a key name and a value, to the specified
            secret. Tags are part of the secret's overall metadata, and are not associated with
            any specific version of the secret. This operation only appends tags to the existing
            list of tags. To remove tags, you must use <a>UntagResource</a>.
            
             
            <para>
            The following basic restrictions apply to tags:
            </para>
             <ul> <li> 
            <para>
            Maximum number of tags per secret—50
            </para>
             </li> <li> 
            <para>
            Maximum key length—127 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            Maximum value length—255 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            Tag keys and values are case sensitive.
            </para>
             </li> <li> 
            <para>
            Do not use the <code>aws:</code> prefix in your tag names or values because Amazon
            Web Services reserves it for Amazon Web Services use. You can't edit or delete tag
            names or values with this prefix. Tags with this prefix do not count against your
            tags per secret limit.
            </para>
             </li> <li> 
            <para>
            If you use your tagging schema across multiple services and resources, remember other
            services might have restrictions on allowed characters. Generally allowed characters:
            letters, spaces, and numbers representable in UTF-8, plus the following special characters:
            + - = . _ : / @.
            </para>
             </li> </ul> <important> 
            <para>
            If you use tags as part of your security strategy, then adding or removing a tag can
            change permissions. If successfully completing this operation would result in you
            losing your permissions for this secret, then the operation is blocked and returns
            an Access Denied error.
            </para>
             </important> 
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:TagResource
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To remove one or more tags from the collection attached to a secret, use <a>UntagResource</a>.
            </para>
             </li> <li> 
            <para>
            To view the list of tags attached to a secret, use <a>DescribeSecret</a>.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            
            <returns>The response from the TagResource service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.IAmazonSecretsManager.TagResourceAsync(Amazon.SecretsManager.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Attaches one or more tags, each consisting of a key name and a value, to the specified
            secret. Tags are part of the secret's overall metadata, and are not associated with
            any specific version of the secret. This operation only appends tags to the existing
            list of tags. To remove tags, you must use <a>UntagResource</a>.
            
             
            <para>
            The following basic restrictions apply to tags:
            </para>
             <ul> <li> 
            <para>
            Maximum number of tags per secret—50
            </para>
             </li> <li> 
            <para>
            Maximum key length—127 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            Maximum value length—255 Unicode characters in UTF-8
            </para>
             </li> <li> 
            <para>
            Tag keys and values are case sensitive.
            </para>
             </li> <li> 
            <para>
            Do not use the <code>aws:</code> prefix in your tag names or values because Amazon
            Web Services reserves it for Amazon Web Services use. You can't edit or delete tag
            names or values with this prefix. Tags with this prefix do not count against your
            tags per secret limit.
            </para>
             </li> <li> 
            <para>
            If you use your tagging schema across multiple services and resources, remember other
            services might have restrictions on allowed characters. Generally allowed characters:
            letters, spaces, and numbers representable in UTF-8, plus the following special characters:
            + - = . _ : / @.
            </para>
             </li> </ul> <important> 
            <para>
            If you use tags as part of your security strategy, then adding or removing a tag can
            change permissions. If successfully completing this operation would result in you
            losing your permissions for this secret, then the operation is blocked and returns
            an Access Denied error.
            </para>
             </important> 
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:TagResource
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To remove one or more tags from the collection attached to a secret, use <a>UntagResource</a>.
            </para>
             </li> <li> 
            <para>
            To view the list of tags attached to a secret, use <a>DescribeSecret</a>.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.IAmazonSecretsManager.UntagResource(Amazon.SecretsManager.Model.UntagResourceRequest)">
            <summary>
            Removes one or more tags from the specified secret.
            
             
            <para>
            This operation is idempotent. If a requested tag is not attached to the secret, no
            error is returned and the secret metadata is unchanged.
            </para>
             <important> 
            <para>
            If you use tags as part of your security strategy, then removing a tag can change
            permissions. If successfully completing this operation would result in you losing
            your permissions for this secret, then the operation is blocked and returns an Access
            Denied error.
            </para>
             </important> 
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:UntagResource
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To add one or more tags to the collection attached to a secret, use <a>TagResource</a>.
            </para>
             </li> <li> 
            <para>
            To view the list of tags attached to a secret, use <a>DescribeSecret</a>.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            
            <returns>The response from the UntagResource service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.IAmazonSecretsManager.UntagResourceAsync(Amazon.SecretsManager.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Removes one or more tags from the specified secret.
            
             
            <para>
            This operation is idempotent. If a requested tag is not attached to the secret, no
            error is returned and the secret metadata is unchanged.
            </para>
             <important> 
            <para>
            If you use tags as part of your security strategy, then removing a tag can change
            permissions. If successfully completing this operation would result in you losing
            your permissions for this secret, then the operation is blocked and returns an Access
            Denied error.
            </para>
             </important> 
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:UntagResource
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To add one or more tags to the collection attached to a secret, use <a>TagResource</a>.
            </para>
             </li> <li> 
            <para>
            To view the list of tags attached to a secret, use <a>DescribeSecret</a>.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.IAmazonSecretsManager.UpdateSecret(Amazon.SecretsManager.Model.UpdateSecretRequest)">
            <summary>
            Modifies many of the details of the specified secret. 
            
             
            <para>
            To change the secret value, you can also use <a>PutSecretValue</a>.
            </para>
             
            <para>
            To change the rotation configuration of a secret, use <a>RotateSecret</a> instead.
            </para>
             
            <para>
            We recommend you avoid calling <code>UpdateSecret</code> at a sustained rate of more
            than once every 10 minutes. When you call <code>UpdateSecret</code> to update the
            secret value, Secrets Manager creates a new version of the secret. Secrets Manager
            removes outdated versions when there are more than 100, but it does not remove versions
            created less than 24 hours ago. If you update the secret value more than once every
            10 minutes, you create more versions than Secrets Manager removes, and you will reach
            the quota for secret versions.
            </para>
             <note> 
            <para>
            The Secrets Manager console uses only the <code>SecretString</code> parameter and
            therefore limits you to encrypting and storing only a text string. To encrypt and
            store binary data as part of the version of a secret, you must use either the Amazon
            Web Services CLI or one of the Amazon Web Services SDKs.
            </para>
             </note> <ul> <li> 
            <para>
            If a version with a <code>VersionId</code> with the same value as the <code>ClientRequestToken</code>
            parameter already exists, the operation results in an error. You cannot modify an
            existing version, you can only create a new version.
            </para>
             </li> <li> 
            <para>
            If you include <code>SecretString</code> or <code>SecretBinary</code> to create a
            new secret version, Secrets Manager automatically attaches the staging label <code>AWSCURRENT</code>
            to the new version. 
            </para>
             </li> </ul> <note> <ul> <li> 
            <para>
            If you call an operation to encrypt or decrypt the <code>SecretString</code> or <code>SecretBinary</code>
            for a secret in the same account as the calling user and that secret doesn't specify
            a Amazon Web Services KMS encryption key, Secrets Manager uses the account's default
            Amazon Web Services managed customer master key (CMK) with the alias <code>aws/secretsmanager</code>.
            If this key doesn't already exist in your account then Secrets Manager creates it
            for you automatically. All users and roles in the same Amazon Web Services account
            automatically have access to use the default CMK. Note that if an Secrets Manager
            API call results in Amazon Web Services creating the account's Amazon Web Services-managed
            CMK, it can result in a one-time significant delay in returning the result.
            </para>
             </li> <li> 
            <para>
            If the secret resides in a different Amazon Web Services account from the credentials
            calling an API that requires encryption or decryption of the secret value then you
            must create and use a custom Amazon Web Services KMS CMK because you can't access
            the default CMK for the account using credentials from a different Amazon Web Services
            account. Store the ARN of the CMK in the secret when you create the secret or when
            you update it by including it in the <code>KMSKeyId</code>. If you call an API that
            must encrypt or decrypt <code>SecretString</code> or <code>SecretBinary</code> using
            credentials from a different account then the Amazon Web Services KMS key policy must
            grant cross-account access to that other account's user or role for both the kms:GenerateDataKey
            and kms:Decrypt operations.
            </para>
             </li> </ul> </note> 
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:UpdateSecret
            </para>
             </li> <li> 
            <para>
            kms:GenerateDataKey - needed only if you use a custom Amazon Web Services KMS key
            to encrypt the secret. You do not need this permission to use the account's Amazon
            Web Services managed CMK for Secrets Manager.
            </para>
             </li> <li> 
            <para>
            kms:Decrypt - needed only if you use a custom Amazon Web Services KMS key to encrypt
            the secret. You do not need this permission to use the account's Amazon Web Services
            managed CMK for Secrets Manager.
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To create a new secret, use <a>CreateSecret</a>.
            </para>
             </li> <li> 
            <para>
            To add only a new version to an existing secret, use <a>PutSecretValue</a>.
            </para>
             </li> <li> 
            <para>
            To get the details for a secret, use <a>DescribeSecret</a>.
            </para>
             </li> <li> 
            <para>
            To list the versions contained in a secret, use <a>ListSecretVersionIds</a>.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateSecret service method.</param>
            
            <returns>The response from the UpdateSecret service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.EncryptionFailureException">
            Secrets Manager can't encrypt the protected secret text using the provided KMS key.
            Check that the customer master key (CMK) is available, enabled, and not in an invalid
            state. For more information, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">How
            Key State Affects Use of a Customer Master Key</a>.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.LimitExceededException">
            The request failed because it would exceed one of the Secrets Manager internal limits.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.MalformedPolicyDocumentException">
            You provided a resource-based policy with syntax errors.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.PreconditionNotMetException">
            The request failed because you did not complete all the prerequisite steps.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceExistsException">
            A resource with the ID you requested already exists.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/UpdateSecret">REST API Reference for UpdateSecret Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.IAmazonSecretsManager.UpdateSecretAsync(Amazon.SecretsManager.Model.UpdateSecretRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies many of the details of the specified secret. 
            
             
            <para>
            To change the secret value, you can also use <a>PutSecretValue</a>.
            </para>
             
            <para>
            To change the rotation configuration of a secret, use <a>RotateSecret</a> instead.
            </para>
             
            <para>
            We recommend you avoid calling <code>UpdateSecret</code> at a sustained rate of more
            than once every 10 minutes. When you call <code>UpdateSecret</code> to update the
            secret value, Secrets Manager creates a new version of the secret. Secrets Manager
            removes outdated versions when there are more than 100, but it does not remove versions
            created less than 24 hours ago. If you update the secret value more than once every
            10 minutes, you create more versions than Secrets Manager removes, and you will reach
            the quota for secret versions.
            </para>
             <note> 
            <para>
            The Secrets Manager console uses only the <code>SecretString</code> parameter and
            therefore limits you to encrypting and storing only a text string. To encrypt and
            store binary data as part of the version of a secret, you must use either the Amazon
            Web Services CLI or one of the Amazon Web Services SDKs.
            </para>
             </note> <ul> <li> 
            <para>
            If a version with a <code>VersionId</code> with the same value as the <code>ClientRequestToken</code>
            parameter already exists, the operation results in an error. You cannot modify an
            existing version, you can only create a new version.
            </para>
             </li> <li> 
            <para>
            If you include <code>SecretString</code> or <code>SecretBinary</code> to create a
            new secret version, Secrets Manager automatically attaches the staging label <code>AWSCURRENT</code>
            to the new version. 
            </para>
             </li> </ul> <note> <ul> <li> 
            <para>
            If you call an operation to encrypt or decrypt the <code>SecretString</code> or <code>SecretBinary</code>
            for a secret in the same account as the calling user and that secret doesn't specify
            a Amazon Web Services KMS encryption key, Secrets Manager uses the account's default
            Amazon Web Services managed customer master key (CMK) with the alias <code>aws/secretsmanager</code>.
            If this key doesn't already exist in your account then Secrets Manager creates it
            for you automatically. All users and roles in the same Amazon Web Services account
            automatically have access to use the default CMK. Note that if an Secrets Manager
            API call results in Amazon Web Services creating the account's Amazon Web Services-managed
            CMK, it can result in a one-time significant delay in returning the result.
            </para>
             </li> <li> 
            <para>
            If the secret resides in a different Amazon Web Services account from the credentials
            calling an API that requires encryption or decryption of the secret value then you
            must create and use a custom Amazon Web Services KMS CMK because you can't access
            the default CMK for the account using credentials from a different Amazon Web Services
            account. Store the ARN of the CMK in the secret when you create the secret or when
            you update it by including it in the <code>KMSKeyId</code>. If you call an API that
            must encrypt or decrypt <code>SecretString</code> or <code>SecretBinary</code> using
            credentials from a different account then the Amazon Web Services KMS key policy must
            grant cross-account access to that other account's user or role for both the kms:GenerateDataKey
            and kms:Decrypt operations.
            </para>
             </li> </ul> </note> 
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:UpdateSecret
            </para>
             </li> <li> 
            <para>
            kms:GenerateDataKey - needed only if you use a custom Amazon Web Services KMS key
            to encrypt the secret. You do not need this permission to use the account's Amazon
            Web Services managed CMK for Secrets Manager.
            </para>
             </li> <li> 
            <para>
            kms:Decrypt - needed only if you use a custom Amazon Web Services KMS key to encrypt
            the secret. You do not need this permission to use the account's Amazon Web Services
            managed CMK for Secrets Manager.
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To create a new secret, use <a>CreateSecret</a>.
            </para>
             </li> <li> 
            <para>
            To add only a new version to an existing secret, use <a>PutSecretValue</a>.
            </para>
             </li> <li> 
            <para>
            To get the details for a secret, use <a>DescribeSecret</a>.
            </para>
             </li> <li> 
            <para>
            To list the versions contained in a secret, use <a>ListSecretVersionIds</a>.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateSecret service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateSecret service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.EncryptionFailureException">
            Secrets Manager can't encrypt the protected secret text using the provided KMS key.
            Check that the customer master key (CMK) is available, enabled, and not in an invalid
            state. For more information, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">How
            Key State Affects Use of a Customer Master Key</a>.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.LimitExceededException">
            The request failed because it would exceed one of the Secrets Manager internal limits.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.MalformedPolicyDocumentException">
            You provided a resource-based policy with syntax errors.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.PreconditionNotMetException">
            The request failed because you did not complete all the prerequisite steps.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceExistsException">
            A resource with the ID you requested already exists.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/UpdateSecret">REST API Reference for UpdateSecret Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.IAmazonSecretsManager.UpdateSecretVersionStage(Amazon.SecretsManager.Model.UpdateSecretVersionStageRequest)">
            <summary>
            Modifies the staging labels attached to a version of a secret. Staging labels are
            used to track a version as it progresses through the secret rotation process. You
            can attach a staging label to only one version of a secret at a time. If a staging
            label to be added is already attached to another version, then it is moved--removed
            from the other version first and then attached to this one. For more information about
            staging labels, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/terms-concepts.html#term_staging-label">Staging
            Labels</a> in the <i>Amazon Web Services Secrets Manager User Guide</i>. 
            
             
            <para>
            The staging labels that you specify in the <code>VersionStage</code> parameter are
            added to the existing list of staging labels--they don't replace it.
            </para>
             
            <para>
            You can move the <code>AWSCURRENT</code> staging label to this version by including
            it in this call.
            </para>
             <note> 
            <para>
            Whenever you move <code>AWSCURRENT</code>, Secrets Manager automatically moves the
            label <code>AWSPREVIOUS</code> to the version that <code>AWSCURRENT</code> was removed
            from.
            </para>
             </note> 
            <para>
            If this action results in the last label being removed from a version, then the version
            is considered to be 'deprecated' and can be deleted by Secrets Manager.
            </para>
             
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:UpdateSecretVersionStage
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To get the list of staging labels that are currently associated with a version of
            a secret, use <code> <a>DescribeSecret</a> </code> and examine the <code>SecretVersionsToStages</code>
            response value. 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateSecretVersionStage service method.</param>
            
            <returns>The response from the UpdateSecretVersionStage service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.LimitExceededException">
            The request failed because it would exceed one of the Secrets Manager internal limits.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/UpdateSecretVersionStage">REST API Reference for UpdateSecretVersionStage Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.IAmazonSecretsManager.UpdateSecretVersionStageAsync(Amazon.SecretsManager.Model.UpdateSecretVersionStageRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies the staging labels attached to a version of a secret. Staging labels are
            used to track a version as it progresses through the secret rotation process. You
            can attach a staging label to only one version of a secret at a time. If a staging
            label to be added is already attached to another version, then it is moved--removed
            from the other version first and then attached to this one. For more information about
            staging labels, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/terms-concepts.html#term_staging-label">Staging
            Labels</a> in the <i>Amazon Web Services Secrets Manager User Guide</i>. 
            
             
            <para>
            The staging labels that you specify in the <code>VersionStage</code> parameter are
            added to the existing list of staging labels--they don't replace it.
            </para>
             
            <para>
            You can move the <code>AWSCURRENT</code> staging label to this version by including
            it in this call.
            </para>
             <note> 
            <para>
            Whenever you move <code>AWSCURRENT</code>, Secrets Manager automatically moves the
            label <code>AWSPREVIOUS</code> to the version that <code>AWSCURRENT</code> was removed
            from.
            </para>
             </note> 
            <para>
            If this action results in the last label being removed from a version, then the version
            is considered to be 'deprecated' and can be deleted by Secrets Manager.
            </para>
             
            <para>
             <b>Minimum permissions</b> 
            </para>
             
            <para>
            To run this command, you must have the following permissions:
            </para>
             <ul> <li> 
            <para>
            secretsmanager:UpdateSecretVersionStage
            </para>
             </li> </ul> 
            <para>
             <b>Related operations</b> 
            </para>
             <ul> <li> 
            <para>
            To get the list of staging labels that are currently associated with a version of
            a secret, use <code> <a>DescribeSecret</a> </code> and examine the <code>SecretVersionsToStages</code>
            response value. 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateSecretVersionStage service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateSecretVersionStage service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.LimitExceededException">
            The request failed because it would exceed one of the Secrets Manager internal limits.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/UpdateSecretVersionStage">REST API Reference for UpdateSecretVersionStage Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.IAmazonSecretsManager.ValidateResourcePolicy(Amazon.SecretsManager.Model.ValidateResourcePolicyRequest)">
            <summary>
            Validates that the resource policy does not grant a wide range of IAM principals access
            to your secret. The JSON request string input and response output displays formatted
            code with white space and line breaks for better readability. Submit your input as
            a single line JSON string. A resource-based policy is optional for secrets.
            
             
            <para>
            The API performs three checks when validating the secret:
            </para>
             <ul> <li> 
            <para>
            Sends a call to <a href="https://aws.amazon.com/blogs/security/protect-sensitive-data-in-the-cloud-with-automated-reasoning-zelkova/">Zelkova</a>,
            an automated reasoning engine, to ensure your Resource Policy does not allow broad
            access to your secret.
            </para>
             </li> <li> 
            <para>
            Checks for correct syntax in a policy.
            </para>
             </li> <li> 
            <para>
            Verifies the policy does not lock out a caller.
            </para>
             </li> </ul> 
            <para>
             <b>Minimum Permissions</b> 
            </para>
             
            <para>
            You must have the permissions required to access the following APIs:
            </para>
             <ul> <li> 
            <para>
             <code>secretsmanager:PutResourcePolicy</code> 
            </para>
             </li> <li> 
            <para>
             <code>secretsmanager:ValidateResourcePolicy</code> 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ValidateResourcePolicy service method.</param>
            
            <returns>The response from the ValidateResourcePolicy service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.MalformedPolicyDocumentException">
            You provided a resource-based policy with syntax errors.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/ValidateResourcePolicy">REST API Reference for ValidateResourcePolicy Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.IAmazonSecretsManager.ValidateResourcePolicyAsync(Amazon.SecretsManager.Model.ValidateResourcePolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Validates that the resource policy does not grant a wide range of IAM principals access
            to your secret. The JSON request string input and response output displays formatted
            code with white space and line breaks for better readability. Submit your input as
            a single line JSON string. A resource-based policy is optional for secrets.
            
             
            <para>
            The API performs three checks when validating the secret:
            </para>
             <ul> <li> 
            <para>
            Sends a call to <a href="https://aws.amazon.com/blogs/security/protect-sensitive-data-in-the-cloud-with-automated-reasoning-zelkova/">Zelkova</a>,
            an automated reasoning engine, to ensure your Resource Policy does not allow broad
            access to your secret.
            </para>
             </li> <li> 
            <para>
            Checks for correct syntax in a policy.
            </para>
             </li> <li> 
            <para>
            Verifies the policy does not lock out a caller.
            </para>
             </li> </ul> 
            <para>
             <b>Minimum Permissions</b> 
            </para>
             
            <para>
            You must have the permissions required to access the following APIs:
            </para>
             <ul> <li> 
            <para>
             <code>secretsmanager:PutResourcePolicy</code> 
            </para>
             </li> <li> 
            <para>
             <code>secretsmanager:ValidateResourcePolicy</code> 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ValidateResourcePolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ValidateResourcePolicy service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            You provided an invalid value for a parameter.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            You provided a parameter value that is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            You tried to perform the operation on a secret that's currently marked deleted.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.MalformedPolicyDocumentException">
            You provided a resource-based policy with syntax errors.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            We can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/ValidateResourcePolicy">REST API Reference for ValidateResourcePolicy Operation</seealso>
        </member>
    </members>
</doc>
